// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.9121591590133402	WITHOUT_CLASSIFICATION	0.08784084098665973	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.7175526453361071	WITHOUT_CLASSIFICATION	0.282447354663893	IMPLEMENTATION
// TODO: Someday, enable.	IMPLEMENTATION	0.7630473844663345	WITHOUT_CLASSIFICATION	0.23695261553366553	IMPLEMENTATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.7863760879970857	WITHOUT_CLASSIFICATION	0.21362391200291436	IMPLEMENTATION
// TODO: non-strict option	IMPLEMENTATION	0.6256055407861809	WITHOUT_CLASSIFICATION	0.37439445921381914	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.7630694723338679	WITHOUT_CLASSIFICATION	0.2369305276661321	IMPLEMENTATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.9992654764212744	WITHOUT_CLASSIFICATION	7.345235787256473E-4	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.7845187193299237	WITHOUT_CLASSIFICATION	0.2154812806700764	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.7845187193299237	WITHOUT_CLASSIFICATION	0.2154812806700764	IMPLEMENTATION
// TODO: pass this in?	IMPLEMENTATION	0.7017776695172648	WITHOUT_CLASSIFICATION	0.29822233048273517	IMPLEMENTATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9993806972919854	WITHOUT_CLASSIFICATION	6.193027080144691E-4	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.6410378273752975	IMPLEMENTATION	0.3589621726247025	WITHOUT_CLASSIFICATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.784681327413754	WITHOUT_CLASSIFICATION	0.21531867258624612	IMPLEMENTATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.6716185156649479	IMPLEMENTATION	0.32838148433505215	WITHOUT_CLASSIFICATION
//TODO deal with UNC names	IMPLEMENTATION	0.999333305685064	WITHOUT_CLASSIFICATION	6.666943149359734E-4	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.998967684185727	WITHOUT_CLASSIFICATION	0.0010323158142729885	IMPLEMENTATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.998967684185727	WITHOUT_CLASSIFICATION	0.0010323158142729885	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.7618234126798749	WITHOUT_CLASSIFICATION	0.23817658732012523	IMPLEMENTATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.8831543286528982	WITHOUT_CLASSIFICATION	0.11684567134710185	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.6262275958539976	IMPLEMENTATION	0.3737724041460025	WITHOUT_CLASSIFICATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.7754842906260161	WITHOUT_CLASSIFICATION	0.22451570937398382	IMPLEMENTATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.9994975392291167	WITHOUT_CLASSIFICATION	5.024607708833215E-4	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.813554141421224	WITHOUT_CLASSIFICATION	0.18644585857877602	IMPLEMENTATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.7955303708073795	IMPLEMENTATION	0.20446962919262057	WITHOUT_CLASSIFICATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.5634242670100099	WITHOUT_CLASSIFICATION	0.4365757329899902	IMPLEMENTATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.8594673907555139	WITHOUT_CLASSIFICATION	0.14053260924448607	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.783214577086174	WITHOUT_CLASSIFICATION	0.2167854229138259	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.7258900365742698	WITHOUT_CLASSIFICATION	0.2741099634257302	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.783214577086174	WITHOUT_CLASSIFICATION	0.2167854229138259	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.7258900365742698	WITHOUT_CLASSIFICATION	0.2741099634257302	IMPLEMENTATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.8649779156158294	WITHOUT_CLASSIFICATION	0.13502208438417054	IMPLEMENTATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.9623102026547864	WITHOUT_CLASSIFICATION	0.03768979734521363	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.6927524457320404	WITHOUT_CLASSIFICATION	0.3072475542679596	IMPLEMENTATION
// TODO: make threadsafe	IMPLEMENTATION	0.7676913286536711	WITHOUT_CLASSIFICATION	0.23230867134632902	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.8358487270556482	WITHOUT_CLASSIFICATION	0.16415127294435183	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.8358487270556482	WITHOUT_CLASSIFICATION	0.16415127294435183	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.9996277485573472	WITHOUT_CLASSIFICATION	3.7225144265278496E-4	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.9996625731543141	WITHOUT_CLASSIFICATION	3.3742684568596585E-4	IMPLEMENTATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.9494814590062868	WITHOUT_CLASSIFICATION	0.05051854099371325	IMPLEMENTATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.9286010774845128	WITHOUT_CLASSIFICATION	0.07139892251548716	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.6168938186591988	WITHOUT_CLASSIFICATION	0.3831061813408013	IMPLEMENTATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.8514195539375639	WITHOUT_CLASSIFICATION	0.14858044606243612	IMPLEMENTATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.6234377645854701	WITHOUT_CLASSIFICATION	0.3765622354145298	IMPLEMENTATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.9994876635693537	WITHOUT_CLASSIFICATION	5.123364306463115E-4	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.7820025000063767	WITHOUT_CLASSIFICATION	0.21799749999362322	IMPLEMENTATION
// TODO: add trace call?	IMPLEMENTATION	0.5449856042319349	WITHOUT_CLASSIFICATION	0.455014395768065	IMPLEMENTATION
// FIXME: missing arity check	IMPLEMENTATION	0.9994233829830315	WITHOUT_CLASSIFICATION	5.766170169685139E-4	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.9996137218795971	WITHOUT_CLASSIFICATION	3.862781204030128E-4	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.9996168604572551	WITHOUT_CLASSIFICATION	3.8313954274490545E-4	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.8493635350004993	WITHOUT_CLASSIFICATION	0.1506364649995007	IMPLEMENTATION
// FIXME: missing arity check	IMPLEMENTATION	0.9994233829830315	WITHOUT_CLASSIFICATION	5.766170169685139E-4	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.999955151563338	WITHOUT_CLASSIFICATION	4.484843666194032E-5	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.9996249012208378	WITHOUT_CLASSIFICATION	3.750987791622889E-4	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.6114786351351642	WITHOUT_CLASSIFICATION	0.3885213648648358	IMPLEMENTATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.9991720901503255	WITHOUT_CLASSIFICATION	8.279098496745909E-4	IMPLEMENTATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.9996588512671759	WITHOUT_CLASSIFICATION	3.411487328240037E-4	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.9994752099212453	WITHOUT_CLASSIFICATION	5.247900787547E-4	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.9445422103170857	WITHOUT_CLASSIFICATION	0.05545778968291424	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9992320493746676	WITHOUT_CLASSIFICATION	7.679506253323744E-4	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9996606243502923	WITHOUT_CLASSIFICATION	3.3937564970756547E-4	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.999402123870182	WITHOUT_CLASSIFICATION	5.978761298179148E-4	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.777274359979088	WITHOUT_CLASSIFICATION	0.22272564002091205	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.777274359979088	WITHOUT_CLASSIFICATION	0.22272564002091205	IMPLEMENTATION
// TODO: validate port as numeric	IMPLEMENTATION	0.9477741378204154	WITHOUT_CLASSIFICATION	0.05222586217958462	IMPLEMENTATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9902063366718946	IMPLEMENTATION	0.009793663328105346	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.9728449190374511	WITHOUT_CLASSIFICATION	0.027155080962549	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.7579314623779683	WITHOUT_CLASSIFICATION	0.24206853762203162	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.7579314623779683	WITHOUT_CLASSIFICATION	0.24206853762203162	IMPLEMENTATION
// TODO: other reserved names?	IMPLEMENTATION	0.7436847304086271	WITHOUT_CLASSIFICATION	0.2563152695913728	IMPLEMENTATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.9601868260871501	WITHOUT_CLASSIFICATION	0.039813173912850004	IMPLEMENTATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.7705541481091944	WITHOUT_CLASSIFICATION	0.22944585189080563	IMPLEMENTATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.9990882184612523	WITHOUT_CLASSIFICATION	9.117815387477857E-4	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.7509823222474709	WITHOUT_CLASSIFICATION	0.2490176777525292	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.7509823222474709	WITHOUT_CLASSIFICATION	0.2490176777525292	IMPLEMENTATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.6690855870156355	WITHOUT_CLASSIFICATION	0.3309144129843645	IMPLEMENTATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9993771579369293	WITHOUT_CLASSIFICATION	6.228420630706738E-4	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9993826158041541	WITHOUT_CLASSIFICATION	6.173841958457688E-4	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.6040875892853986	WITHOUT_CLASSIFICATION	0.3959124107146015	IMPLEMENTATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.9354318714033885	IMPLEMENTATION	0.06456812859661162	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.9970951119049085	WITHOUT_CLASSIFICATION	0.00290488809509148	IMPLEMENTATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.7293301497105373	IMPLEMENTATION	0.27066985028946255	WITHOUT_CLASSIFICATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.9994658431313436	WITHOUT_CLASSIFICATION	5.341568686563757E-4	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9991637690672552	WITHOUT_CLASSIFICATION	8.362309327448762E-4	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9991637690672552	WITHOUT_CLASSIFICATION	8.362309327448762E-4	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.9995106887878594	WITHOUT_CLASSIFICATION	4.893112121406001E-4	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.9995108377640318	WITHOUT_CLASSIFICATION	4.89162235968141E-4	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9995754873598014	WITHOUT_CLASSIFICATION	4.24512640198641E-4	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9995754873598014	WITHOUT_CLASSIFICATION	4.24512640198641E-4	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.7795457159125219	WITHOUT_CLASSIFICATION	0.2204542840874782	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9996984081339092	WITHOUT_CLASSIFICATION	3.0159186609083596E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9996984081339092	WITHOUT_CLASSIFICATION	3.0159186609083596E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9996984081339092	WITHOUT_CLASSIFICATION	3.0159186609083596E-4	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.9403881756707384	IMPLEMENTATION	0.05961182432926165	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.9403881756707384	IMPLEMENTATION	0.05961182432926165	WITHOUT_CLASSIFICATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.5060624073274996	IMPLEMENTATION	0.49393759267250026	WITHOUT_CLASSIFICATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9993852557139762	WITHOUT_CLASSIFICATION	6.147442860237565E-4	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.9997055221202445	WITHOUT_CLASSIFICATION	2.944778797554699E-4	IMPLEMENTATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9999472179056411	IMPLEMENTATION	5.2782094358867634E-5	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9990516166303718	IMPLEMENTATION	9.48383369628302E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9990516166303718	IMPLEMENTATION	9.48383369628302E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9990516166303718	IMPLEMENTATION	9.48383369628302E-4	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.6168938186591988	WITHOUT_CLASSIFICATION	0.3831061813408013	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.6168938186591988	WITHOUT_CLASSIFICATION	0.3831061813408013	IMPLEMENTATION
// TODO: check for ascii string	IMPLEMENTATION	0.5729656958215652	IMPLEMENTATION	0.4270343041784349	WITHOUT_CLASSIFICATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.9691728729489006	WITHOUT_CLASSIFICATION	0.030827127051099367	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.8358487270556482	WITHOUT_CLASSIFICATION	0.16415127294435183	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.8358487270556482	WITHOUT_CLASSIFICATION	0.16415127294435183	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.7666822198851356	WITHOUT_CLASSIFICATION	0.2333177801148644	IMPLEMENTATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.9670577340681081	WITHOUT_CLASSIFICATION	0.03294226593189182	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.998967684185727	WITHOUT_CLASSIFICATION	0.0010323158142729885	IMPLEMENTATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9995497430634193	WITHOUT_CLASSIFICATION	4.502569365807769E-4	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.9453362353134104	WITHOUT_CLASSIFICATION	0.05466376468658961	IMPLEMENTATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.8060939283677286	IMPLEMENTATION	0.19390607163227136	WITHOUT_CLASSIFICATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.9902060361218266	WITHOUT_CLASSIFICATION	0.00979396387817347	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9998524920468912	WITHOUT_CLASSIFICATION	1.475079531087321E-4	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9994400914285185	WITHOUT_CLASSIFICATION	5.599085714814865E-4	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9998502587913186	WITHOUT_CLASSIFICATION	1.497412086814395E-4	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9998502587913186	WITHOUT_CLASSIFICATION	1.497412086814395E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9995740207351816	WITHOUT_CLASSIFICATION	4.2597926481841784E-4	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9996738342076502	WITHOUT_CLASSIFICATION	3.261657923497289E-4	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9995862193439187	WITHOUT_CLASSIFICATION	4.13780656081439E-4	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.999536457453797	WITHOUT_CLASSIFICATION	4.63542546202873E-4	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9994442184985526	WITHOUT_CLASSIFICATION	5.557815014473454E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9993713981378638	WITHOUT_CLASSIFICATION	6.286018621362725E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9993713981378638	WITHOUT_CLASSIFICATION	6.286018621362725E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9993713981378638	WITHOUT_CLASSIFICATION	6.286018621362725E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9993713981378638	WITHOUT_CLASSIFICATION	6.286018621362725E-4	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9994582768487766	WITHOUT_CLASSIFICATION	5.417231512233404E-4	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9994877812065939	WITHOUT_CLASSIFICATION	5.122187934060417E-4	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9995910819889519	WITHOUT_CLASSIFICATION	4.0891801104811466E-4	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9996789196856034	WITHOUT_CLASSIFICATION	3.2108031439653166E-4	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9994819571112994	WITHOUT_CLASSIFICATION	5.180428887006865E-4	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9996997448216391	WITHOUT_CLASSIFICATION	3.002551783609332E-4	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9993723270200943	WITHOUT_CLASSIFICATION	6.276729799057307E-4	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9998125964701831	WITHOUT_CLASSIFICATION	1.8740352981692535E-4	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.999919556453562	WITHOUT_CLASSIFICATION	8.044354643799506E-5	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9997432759670173	WITHOUT_CLASSIFICATION	2.567240329827266E-4	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9996515431318952	WITHOUT_CLASSIFICATION	3.4845686810489144E-4	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9994324239879391	WITHOUT_CLASSIFICATION	5.67576012060993E-4	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9994902387913946	WITHOUT_CLASSIFICATION	5.097612086053185E-4	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9996384392901454	WITHOUT_CLASSIFICATION	3.615607098546351E-4	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998735961970123	WITHOUT_CLASSIFICATION	1.2640380298762553E-4	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9994190836018808	WITHOUT_CLASSIFICATION	5.809163981191858E-4	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9985782497751458	WITHOUT_CLASSIFICATION	0.0014217502248542217	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9993713981378638	WITHOUT_CLASSIFICATION	6.286018621362725E-4	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998889275855263	WITHOUT_CLASSIFICATION	1.1107241447373898E-4	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9998362683726334	WITHOUT_CLASSIFICATION	1.637316273665464E-4	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998593233318422	WITHOUT_CLASSIFICATION	1.4067666815780706E-4	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9996544084926854	WITHOUT_CLASSIFICATION	3.4559150731463845E-4	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.999488988797958	WITHOUT_CLASSIFICATION	5.11011202041966E-4	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9994598766087067	WITHOUT_CLASSIFICATION	5.401233912932718E-4	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.99955791313504	WITHOUT_CLASSIFICATION	4.420868649599776E-4	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9994638252008562	WITHOUT_CLASSIFICATION	5.361747991436964E-4	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9995891680542945	WITHOUT_CLASSIFICATION	4.108319457054204E-4	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999303320330221	WITHOUT_CLASSIFICATION	6.966796697796897E-5	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999174435946018	WITHOUT_CLASSIFICATION	8.255640539825201E-5	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9998023147853713	WITHOUT_CLASSIFICATION	1.97685214628611E-4	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.999536843246375	WITHOUT_CLASSIFICATION	4.631567536249339E-4	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9993662513464748	WITHOUT_CLASSIFICATION	6.337486535251875E-4	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9993662513464748	WITHOUT_CLASSIFICATION	6.337486535251872E-4	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9993285239269454	WITHOUT_CLASSIFICATION	6.714760730546504E-4	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9994014589186104	WITHOUT_CLASSIFICATION	5.985410813895967E-4	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9995381577263823	WITHOUT_CLASSIFICATION	4.618422736176034E-4	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9997372681985907	WITHOUT_CLASSIFICATION	2.627318014092947E-4	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9994185430273782	WITHOUT_CLASSIFICATION	5.814569726218195E-4	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9995757932091376	WITHOUT_CLASSIFICATION	4.2420679086238935E-4	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9993171614428811	WITHOUT_CLASSIFICATION	6.828385571190002E-4	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9995054091811268	WITHOUT_CLASSIFICATION	4.94590818873182E-4	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.999889074624754	WITHOUT_CLASSIFICATION	1.1092537524609064E-4	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9995019706073878	WITHOUT_CLASSIFICATION	4.980293926123161E-4	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9995492649682709	WITHOUT_CLASSIFICATION	4.5073503172916293E-4	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9995329252900124	WITHOUT_CLASSIFICATION	4.670747099875468E-4	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9996726135456874	WITHOUT_CLASSIFICATION	3.27386454312635E-4	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9994135598241748	WITHOUT_CLASSIFICATION	5.864401758252085E-4	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9996307720300625	WITHOUT_CLASSIFICATION	3.6922796993759E-4	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9994801270995771	WITHOUT_CLASSIFICATION	5.198729004229403E-4	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9996704408958799	WITHOUT_CLASSIFICATION	3.2955910412017683E-4	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9996729310816832	WITHOUT_CLASSIFICATION	3.2706891831688496E-4	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9995954102958552	WITHOUT_CLASSIFICATION	4.0458970414476557E-4	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9998132710646275	WITHOUT_CLASSIFICATION	1.86728935372517E-4	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9998236422720876	WITHOUT_CLASSIFICATION	1.763577279123409E-4	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9996929211611552	WITHOUT_CLASSIFICATION	3.0707883884487005E-4	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9998561819420182	WITHOUT_CLASSIFICATION	1.4381805798184256E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9997545613784533	WITHOUT_CLASSIFICATION	2.4543862154670186E-4	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9993960862544502	WITHOUT_CLASSIFICATION	6.039137455498458E-4	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9751695483003071	WITHOUT_CLASSIFICATION	0.02483045169969286	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9751695483003071	WITHOUT_CLASSIFICATION	0.02483045169969286	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9972833197855802	WITHOUT_CLASSIFICATION	0.002716680214419964	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9996086918445953	WITHOUT_CLASSIFICATION	3.9130815540464384E-4	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9993866608481821	WITHOUT_CLASSIFICATION	6.133391518178878E-4	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9995081864567715	WITHOUT_CLASSIFICATION	4.918135432285727E-4	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999160453387274	WITHOUT_CLASSIFICATION	8.395466127272552E-5	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.999456186790153	WITHOUT_CLASSIFICATION	5.438132098469899E-4	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9997545613784533	WITHOUT_CLASSIFICATION	2.4543862154670186E-4	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9998175752067192	WITHOUT_CLASSIFICATION	1.824247932807279E-4	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9993669748706528	WITHOUT_CLASSIFICATION	6.330251293471533E-4	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999929917425419	WITHOUT_CLASSIFICATION	7.008257458168929E-6	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.999753925050343	WITHOUT_CLASSIFICATION	2.4607494965695284E-4	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9998261617360513	WITHOUT_CLASSIFICATION	1.7383826394870832E-4	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9998261617360513	WITHOUT_CLASSIFICATION	1.7383826394870832E-4	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9998261617360513	WITHOUT_CLASSIFICATION	1.7383826394870832E-4	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9997979460453815	WITHOUT_CLASSIFICATION	2.0205395461839808E-4	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9994568641896199	WITHOUT_CLASSIFICATION	5.431358103800969E-4	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9998454254015573	WITHOUT_CLASSIFICATION	1.5457459844273446E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9993174343794773	WITHOUT_CLASSIFICATION	6.825656205227352E-4	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.999924723568785	WITHOUT_CLASSIFICATION	7.527643121503143E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9995093053994366	WITHOUT_CLASSIFICATION	4.906946005634478E-4	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9996369044834325	WITHOUT_CLASSIFICATION	3.630955165676393E-4	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9998124106755829	WITHOUT_CLASSIFICATION	1.8758932441715435E-4	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9993971981338127	WITHOUT_CLASSIFICATION	6.028018661874036E-4	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9998160176264294	WITHOUT_CLASSIFICATION	1.8398237357068352E-4	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9994323397376378	WITHOUT_CLASSIFICATION	5.676602623622817E-4	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9994323397376378	WITHOUT_CLASSIFICATION	5.676602623622817E-4	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9996831652564816	WITHOUT_CLASSIFICATION	3.168347435183123E-4	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.999782821492001	WITHOUT_CLASSIFICATION	2.1717850799897608E-4	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9993214603789079	WITHOUT_CLASSIFICATION	6.78539621092164E-4	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9996418313277018	WITHOUT_CLASSIFICATION	3.58168672298214E-4	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9994554611456145	WITHOUT_CLASSIFICATION	5.445388543855549E-4	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.9993199707804518	WITHOUT_CLASSIFICATION	6.800292195482097E-4	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9995949154207706	WITHOUT_CLASSIFICATION	4.0508457922942907E-4	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9993916056662134	WITHOUT_CLASSIFICATION	6.083943337866082E-4	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9995165174998331	WITHOUT_CLASSIFICATION	4.834825001668854E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9997545613784533	WITHOUT_CLASSIFICATION	2.4543862154670186E-4	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9994559028353887	WITHOUT_CLASSIFICATION	5.44097164611252E-4	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9994484783559436	WITHOUT_CLASSIFICATION	5.515216440563107E-4	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9993724705148853	WITHOUT_CLASSIFICATION	6.275294851145984E-4	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9996974395826171	WITHOUT_CLASSIFICATION	3.025604173828172E-4	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9995023939661707	WITHOUT_CLASSIFICATION	4.976060338292592E-4	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.999331043792778	WITHOUT_CLASSIFICATION	6.689562072219107E-4	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9994222251203893	WITHOUT_CLASSIFICATION	5.777748796107258E-4	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9995237785460669	WITHOUT_CLASSIFICATION	4.762214539331317E-4	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9993734651187328	WITHOUT_CLASSIFICATION	6.265348812673039E-4	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9983741152207888	WITHOUT_CLASSIFICATION	0.001625884779211228	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9998715449457508	WITHOUT_CLASSIFICATION	1.28455054249307E-4	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9997711905767157	WITHOUT_CLASSIFICATION	2.2880942328433676E-4	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.999608472920827	WITHOUT_CLASSIFICATION	3.915270791728945E-4	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9996718334089963	WITHOUT_CLASSIFICATION	3.2816659100361103E-4	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999532408023791	WITHOUT_CLASSIFICATION	4.6759197620875126E-5	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9994207627801927	WITHOUT_CLASSIFICATION	5.792372198073475E-4	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9998861663289129	WITHOUT_CLASSIFICATION	1.1383367108712991E-4	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9995961937696324	WITHOUT_CLASSIFICATION	4.038062303675875E-4	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999690750578405	WITHOUT_CLASSIFICATION	3.092494215950746E-5	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9998824330914717	WITHOUT_CLASSIFICATION	1.1756690852815721E-4	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999111873921895	WITHOUT_CLASSIFICATION	8.88126078104366E-5	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999026233223044	WITHOUT_CLASSIFICATION	9.73766776957035E-5	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.999844013697941	WITHOUT_CLASSIFICATION	1.5598630205914936E-4	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9996810687265238	WITHOUT_CLASSIFICATION	3.189312734762032E-4	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9998966237595872	WITHOUT_CLASSIFICATION	1.0337624041283988E-4	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.999538739899909	WITHOUT_CLASSIFICATION	4.612601000909265E-4	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9995192054844108	WITHOUT_CLASSIFICATION	4.8079451558930133E-4	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9998797711667852	WITHOUT_CLASSIFICATION	1.2022883321478909E-4	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.999718245558138	WITHOUT_CLASSIFICATION	2.817544418619236E-4	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9998420874374897	WITHOUT_CLASSIFICATION	1.5791256251025164E-4	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9998659694292712	WITHOUT_CLASSIFICATION	1.3403057072879074E-4	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9994968701005406	WITHOUT_CLASSIFICATION	5.031298994595579E-4	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9994793285982227	WITHOUT_CLASSIFICATION	5.206714017771689E-4	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9990317746849291	WITHOUT_CLASSIFICATION	9.682253150707987E-4	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9994088349491637	WITHOUT_CLASSIFICATION	5.911650508363768E-4	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9985386006216168	WITHOUT_CLASSIFICATION	0.0014613993783831314	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9998610866713326	WITHOUT_CLASSIFICATION	1.3891332866746328E-4	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999230560621728	WITHOUT_CLASSIFICATION	7.694393782727802E-5	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9993614047403072	WITHOUT_CLASSIFICATION	6.385952596928729E-4	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9996524672012229	WITHOUT_CLASSIFICATION	3.475327987770971E-4	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9994818035475038	WITHOUT_CLASSIFICATION	5.181964524961908E-4	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9996784875226663	WITHOUT_CLASSIFICATION	3.215124773336469E-4	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9996057796030716	WITHOUT_CLASSIFICATION	3.9422039692827706E-4	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9996301520894234	WITHOUT_CLASSIFICATION	3.6984791057657895E-4	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9986018738062229	WITHOUT_CLASSIFICATION	0.0013981261937770937	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9993937733872139	WITHOUT_CLASSIFICATION	6.062266127861703E-4	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9994241849707749	WITHOUT_CLASSIFICATION	5.75815029224972E-4	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9996624461021094	WITHOUT_CLASSIFICATION	3.37553897890616E-4	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9997652497068877	WITHOUT_CLASSIFICATION	2.3475029311229544E-4	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9995746803355388	WITHOUT_CLASSIFICATION	4.2531966446124526E-4	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9996474627463526	WITHOUT_CLASSIFICATION	3.525372536473576E-4	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9994205187206556	WITHOUT_CLASSIFICATION	5.794812793442889E-4	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9997857252562814	WITHOUT_CLASSIFICATION	2.1427474371861195E-4	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9997479724265592	WITHOUT_CLASSIFICATION	2.5202757344077755E-4	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9997301316090482	WITHOUT_CLASSIFICATION	2.69868390951812E-4	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9996455706056624	WITHOUT_CLASSIFICATION	3.5442939433763375E-4	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999540430220053	WITHOUT_CLASSIFICATION	4.5956977994794393E-5	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9997071799481054	WITHOUT_CLASSIFICATION	2.928200518945314E-4	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9993273673076892	WITHOUT_CLASSIFICATION	6.726326923107404E-4	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9997121444606959	WITHOUT_CLASSIFICATION	2.878555393040632E-4	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9993197609111956	WITHOUT_CLASSIFICATION	6.802390888045434E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9993197609111956	WITHOUT_CLASSIFICATION	6.802390888045434E-4	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9993913025884903	WITHOUT_CLASSIFICATION	6.086974115096268E-4	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9993793863198814	WITHOUT_CLASSIFICATION	6.206136801185245E-4	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9997366337250155	WITHOUT_CLASSIFICATION	2.633662749844437E-4	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9996812557466137	WITHOUT_CLASSIFICATION	3.187442533863447E-4	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9997139300091622	WITHOUT_CLASSIFICATION	2.8606999083771544E-4	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9997327117849477	WITHOUT_CLASSIFICATION	2.6728821505230416E-4	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9993916601417394	WITHOUT_CLASSIFICATION	6.083398582606088E-4	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9993916601417394	WITHOUT_CLASSIFICATION	6.083398582606088E-4	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9993916601417394	WITHOUT_CLASSIFICATION	6.083398582606088E-4	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9996242765839777	WITHOUT_CLASSIFICATION	3.757234160222801E-4	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9998977596758515	WITHOUT_CLASSIFICATION	1.0224032414848436E-4	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9993961713969646	WITHOUT_CLASSIFICATION	6.038286030354307E-4	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9995364836424007	WITHOUT_CLASSIFICATION	4.6351635759936437E-4	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9996727883687689	WITHOUT_CLASSIFICATION	3.2721163123110655E-4	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9994212577885169	WITHOUT_CLASSIFICATION	5.787422114831152E-4	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9997997145210218	WITHOUT_CLASSIFICATION	2.002854789782991E-4	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9988134869561129	WITHOUT_CLASSIFICATION	0.0011865130438871154	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9994683247415137	WITHOUT_CLASSIFICATION	5.3167525848633E-4	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9994354992012193	WITHOUT_CLASSIFICATION	5.645007987807273E-4	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9993354732313274	WITHOUT_CLASSIFICATION	6.645267686726048E-4	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9995336077573661	WITHOUT_CLASSIFICATION	4.6639224263385435E-4	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9995482760449841	WITHOUT_CLASSIFICATION	4.517239550159577E-4	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9996285666796069	WITHOUT_CLASSIFICATION	3.7143332039311894E-4	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9993254238986451	WITHOUT_CLASSIFICATION	6.745761013548788E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9992988459800901	WITHOUT_CLASSIFICATION	7.011540199099727E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9992988459800901	WITHOUT_CLASSIFICATION	7.011540199099727E-4	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9994237429852593	WITHOUT_CLASSIFICATION	5.762570147406094E-4	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9994583885903836	WITHOUT_CLASSIFICATION	5.416114096164042E-4	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9993150552491216	WITHOUT_CLASSIFICATION	6.849447508784939E-4	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9997251229714554	WITHOUT_CLASSIFICATION	2.7487702854456935E-4	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9996074714496502	WITHOUT_CLASSIFICATION	3.92528550349768E-4	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9997283282199162	WITHOUT_CLASSIFICATION	2.7167178008377955E-4	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9997283282199162	WITHOUT_CLASSIFICATION	2.7167178008377955E-4	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9993204095608038	WITHOUT_CLASSIFICATION	6.795904391962281E-4	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.7459840384918132	WITHOUT_CLASSIFICATION	0.2540159615081868	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9994014883425933	WITHOUT_CLASSIFICATION	5.985116574067221E-4	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9994014883425933	WITHOUT_CLASSIFICATION	5.985116574067221E-4	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9995788203257905	WITHOUT_CLASSIFICATION	4.2117967420943854E-4	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9996151144285513	WITHOUT_CLASSIFICATION	3.8488557144867686E-4	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9996151144285513	WITHOUT_CLASSIFICATION	3.8488557144867686E-4	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9993037251394302	WITHOUT_CLASSIFICATION	6.962748605697702E-4	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9993037251394302	WITHOUT_CLASSIFICATION	6.962748605697702E-4	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9994826098462328	WITHOUT_CLASSIFICATION	5.173901537671479E-4	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9997221902047613	WITHOUT_CLASSIFICATION	2.77809795238731E-4	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9994035837105296	WITHOUT_CLASSIFICATION	5.964162894704688E-4	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9995534107499104	WITHOUT_CLASSIFICATION	4.4658925008953974E-4	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9995281115838367	WITHOUT_CLASSIFICATION	4.7188841616329914E-4	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9997959243865998	WITHOUT_CLASSIFICATION	2.0407561340024096E-4	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9996002822835566	WITHOUT_CLASSIFICATION	3.9971771644351477E-4	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9997959243865998	WITHOUT_CLASSIFICATION	2.0407561340024096E-4	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9957279062453728	WITHOUT_CLASSIFICATION	0.004272093754627238	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9995328945082875	WITHOUT_CLASSIFICATION	4.671054917124203E-4	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9995484229534132	WITHOUT_CLASSIFICATION	4.515770465868951E-4	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9996041360138799	WITHOUT_CLASSIFICATION	3.958639861200996E-4	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9993861908977861	WITHOUT_CLASSIFICATION	6.138091022138311E-4	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9996088789645018	WITHOUT_CLASSIFICATION	3.911210354981883E-4	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9996828428829203	WITHOUT_CLASSIFICATION	3.171571170796592E-4	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9993926059473345	WITHOUT_CLASSIFICATION	6.073940526654828E-4	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9995340098606832	WITHOUT_CLASSIFICATION	4.659901393168742E-4	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9996949173836353	WITHOUT_CLASSIFICATION	3.050826163648539E-4	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9993908579734797	WITHOUT_CLASSIFICATION	6.091420265202698E-4	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9995180064154647	WITHOUT_CLASSIFICATION	4.8199358453522405E-4	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.9993984578893046	WITHOUT_CLASSIFICATION	6.015421106953914E-4	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9995006762587302	WITHOUT_CLASSIFICATION	4.993237412698176E-4	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9994838987020332	WITHOUT_CLASSIFICATION	5.161012979668003E-4	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9995902086488518	WITHOUT_CLASSIFICATION	4.0979135114821506E-4	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9996227667371416	WITHOUT_CLASSIFICATION	3.7723326285840777E-4	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.999234463527432	WITHOUT_CLASSIFICATION	7.655364725679441E-4	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9993633141748817	WITHOUT_CLASSIFICATION	6.366858251182365E-4	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9996473117230468	WITHOUT_CLASSIFICATION	3.5268827695324005E-4	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9997338450770425	WITHOUT_CLASSIFICATION	2.661549229574421E-4	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9998717317662887	WITHOUT_CLASSIFICATION	1.2826823371123126E-4	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9997346639563806	WITHOUT_CLASSIFICATION	2.6533604361940374E-4	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9994481662924459	WITHOUT_CLASSIFICATION	5.518337075540501E-4	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9994261564339373	WITHOUT_CLASSIFICATION	5.738435660627802E-4	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9995286965281942	WITHOUT_CLASSIFICATION	4.7130347180586034E-4	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9996474308145228	WITHOUT_CLASSIFICATION	3.5256918547726035E-4	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9996413634702433	WITHOUT_CLASSIFICATION	3.5863652975669013E-4	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9997788497528557	WITHOUT_CLASSIFICATION	2.211502471442298E-4	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9995304344359988	WITHOUT_CLASSIFICATION	4.695655640012741E-4	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.999625859908045	WITHOUT_CLASSIFICATION	3.741400919550809E-4	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9997937686582529	WITHOUT_CLASSIFICATION	2.0623134174707093E-4	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9996965878353412	WITHOUT_CLASSIFICATION	3.034121646588025E-4	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9996162102550942	WITHOUT_CLASSIFICATION	3.837897449058911E-4	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9997989954592988	WITHOUT_CLASSIFICATION	2.0100454070122591E-4	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9997915859852889	WITHOUT_CLASSIFICATION	2.084140147109355E-4	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9996159674872559	WITHOUT_CLASSIFICATION	3.84032512744062E-4	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.999795084250067	WITHOUT_CLASSIFICATION	2.0491574993284392E-4	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9995716456974659	WITHOUT_CLASSIFICATION	4.283543025340194E-4	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9996171349524937	WITHOUT_CLASSIFICATION	3.828650475063737E-4	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9996436923634191	WITHOUT_CLASSIFICATION	3.5630763658097623E-4	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9996564555775743	WITHOUT_CLASSIFICATION	3.43544422425693E-4	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9996582772342397	WITHOUT_CLASSIFICATION	3.4172276576034894E-4	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9996050360968438	WITHOUT_CLASSIFICATION	3.949639031561644E-4	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.999849361451272	WITHOUT_CLASSIFICATION	1.5063854872807695E-4	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9998430534149199	WITHOUT_CLASSIFICATION	1.5694658508007205E-4	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9998545866552873	WITHOUT_CLASSIFICATION	1.4541334471273313E-4	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9995719235113045	WITHOUT_CLASSIFICATION	4.280764886954743E-4	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9997267804785881	WITHOUT_CLASSIFICATION	2.7321952141184805E-4	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9994090762715275	WITHOUT_CLASSIFICATION	5.90923728472487E-4	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9994555699034674	WITHOUT_CLASSIFICATION	5.444300965325528E-4	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9997964668659236	WITHOUT_CLASSIFICATION	2.035331340764773E-4	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9996186521215781	WITHOUT_CLASSIFICATION	3.813478784218294E-4	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9995237287289925	WITHOUT_CLASSIFICATION	4.7627127100744024E-4	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9997566237919361	WITHOUT_CLASSIFICATION	2.4337620806385148E-4	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9997566237919361	WITHOUT_CLASSIFICATION	2.4337620806385148E-4	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9998305122880211	WITHOUT_CLASSIFICATION	1.69487711978836E-4	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.999858603396297	WITHOUT_CLASSIFICATION	1.413966037031138E-4	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999244306942308	WITHOUT_CLASSIFICATION	7.556930576928963E-5	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9996083782065447	WITHOUT_CLASSIFICATION	3.916217934552675E-4	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9997921300658799	WITHOUT_CLASSIFICATION	2.0786993412005416E-4	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9998786634392834	WITHOUT_CLASSIFICATION	1.21336560716528E-4	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9995908354094946	WITHOUT_CLASSIFICATION	4.09164590505428E-4	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9996960819751055	WITHOUT_CLASSIFICATION	3.039180248944732E-4	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9981583245104357	WITHOUT_CLASSIFICATION	0.0018416754895643345	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9998462995057795	WITHOUT_CLASSIFICATION	1.5370049422052407E-4	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9998593291338428	WITHOUT_CLASSIFICATION	1.4067086615723962E-4	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9998593291338428	WITHOUT_CLASSIFICATION	1.4067086615723962E-4	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9991219226334428	WITHOUT_CLASSIFICATION	8.780773665572581E-4	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9996608065675764	WITHOUT_CLASSIFICATION	3.391934324235641E-4	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9995920460892596	WITHOUT_CLASSIFICATION	4.0795391074048554E-4	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9998346140626632	WITHOUT_CLASSIFICATION	1.6538593733678045E-4	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9998668461437769	WITHOUT_CLASSIFICATION	1.3315385622321852E-4	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.999616150986209	WITHOUT_CLASSIFICATION	3.8384901379090886E-4	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9998434396308543	WITHOUT_CLASSIFICATION	1.5656036914566562E-4	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9996942843770442	WITHOUT_CLASSIFICATION	3.0571562295583164E-4	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999236958536348	WITHOUT_CLASSIFICATION	7.630414636511367E-5	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.999838942618694	WITHOUT_CLASSIFICATION	1.6105738130602588E-4	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9995567741782844	WITHOUT_CLASSIFICATION	4.4322582171559173E-4	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999230139272093	WITHOUT_CLASSIFICATION	7.69860727907162E-5	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9995090489014213	WITHOUT_CLASSIFICATION	4.909510985786566E-4	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9995090489014213	WITHOUT_CLASSIFICATION	4.909510985786566E-4	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9994241947778593	WITHOUT_CLASSIFICATION	5.758052221407427E-4	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9987675994178424	WITHOUT_CLASSIFICATION	0.0012324005821575839	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9996264769710115	WITHOUT_CLASSIFICATION	3.7352302898852367E-4	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.99926149670068	WITHOUT_CLASSIFICATION	7.385032993200142E-4	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9995775997662906	WITHOUT_CLASSIFICATION	4.224002337094103E-4	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9996669657570946	WITHOUT_CLASSIFICATION	3.3303424290544604E-4	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9995928156840673	WITHOUT_CLASSIFICATION	4.071843159326861E-4	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9994909717850192	WITHOUT_CLASSIFICATION	5.090282149807653E-4	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9997866064619558	WITHOUT_CLASSIFICATION	2.1339353804421076E-4	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9995836476527918	WITHOUT_CLASSIFICATION	4.1635234720822527E-4	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9995920460892596	WITHOUT_CLASSIFICATION	4.0795391074048554E-4	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9992731070470824	WITHOUT_CLASSIFICATION	7.268929529175173E-4	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9998998597965539	WITHOUT_CLASSIFICATION	1.0014020344599959E-4	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9997627563954476	WITHOUT_CLASSIFICATION	2.37243604552397E-4	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999242346151187	WITHOUT_CLASSIFICATION	7.576538488140731E-5	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9995836476527918	WITHOUT_CLASSIFICATION	4.1635234720822527E-4	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999108008320048	WITHOUT_CLASSIFICATION	8.919916799519642E-5	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9996689416798987	WITHOUT_CLASSIFICATION	3.3105832010128344E-4	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9994866697103992	WITHOUT_CLASSIFICATION	5.133302896007597E-4	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999122371866628	WITHOUT_CLASSIFICATION	8.776281333727802E-5	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9994738264509839	WITHOUT_CLASSIFICATION	5.261735490160172E-4	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9994121797982645	WITHOUT_CLASSIFICATION	5.878202017355081E-4	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9998880428712283	WITHOUT_CLASSIFICATION	1.1195712877162968E-4	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9998339918823511	WITHOUT_CLASSIFICATION	1.660081176487901E-4	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9995473119334222	WITHOUT_CLASSIFICATION	4.5268806657779083E-4	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9997923733675758	WITHOUT_CLASSIFICATION	2.076266324242371E-4	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9993965551403984	WITHOUT_CLASSIFICATION	6.034448596015266E-4	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999722077776646	WITHOUT_CLASSIFICATION	2.7792222335378753E-5	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9993495289608022	WITHOUT_CLASSIFICATION	6.504710391978396E-4	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.999349910088363	WITHOUT_CLASSIFICATION	6.500899116368981E-4	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.9995616625800764	WITHOUT_CLASSIFICATION	4.383374199235313E-4	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9997321137737393	WITHOUT_CLASSIFICATION	2.6788622626076496E-4	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9994593291866135	WITHOUT_CLASSIFICATION	5.406708133864688E-4	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9994530747742849	WITHOUT_CLASSIFICATION	5.469252257151265E-4	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9995519401994017	WITHOUT_CLASSIFICATION	4.4805980059824964E-4	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9993237655766788	WITHOUT_CLASSIFICATION	6.762344233212579E-4	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999766735197249	WITHOUT_CLASSIFICATION	2.332648027518963E-5	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9997883817031155	WITHOUT_CLASSIFICATION	2.1161829688446572E-4	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9993184937422291	WITHOUT_CLASSIFICATION	6.815062577707381E-4	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.999422768122347	WITHOUT_CLASSIFICATION	5.77231877653035E-4	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9998679602232842	WITHOUT_CLASSIFICATION	1.32039776715852E-4	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9998679602232842	WITHOUT_CLASSIFICATION	1.32039776715852E-4	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9798609511883033	WITHOUT_CLASSIFICATION	0.020139048811696723	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9813137993198217	WITHOUT_CLASSIFICATION	0.018686200680178393	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.9996230215495617	WITHOUT_CLASSIFICATION	3.7697845043818283E-4	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9874961734197681	WITHOUT_CLASSIFICATION	0.012503826580231811	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9994690917483372	WITHOUT_CLASSIFICATION	5.309082516628577E-4	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.999685103230412	WITHOUT_CLASSIFICATION	3.148967695878784E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9997061583929302	WITHOUT_CLASSIFICATION	2.9384160706981465E-4	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9998348237039075	WITHOUT_CLASSIFICATION	1.651762960924675E-4	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9995703525939579	WITHOUT_CLASSIFICATION	4.2964740604211726E-4	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9990547541513023	WITHOUT_CLASSIFICATION	9.452458486977014E-4	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9997232409456209	WITHOUT_CLASSIFICATION	2.7675905437901465E-4	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9995566613315687	WITHOUT_CLASSIFICATION	4.4333866843126454E-4	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9995819140026169	WITHOUT_CLASSIFICATION	4.180859973831592E-4	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9996524672012229	WITHOUT_CLASSIFICATION	3.475327987770971E-4	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9998586115502937	WITHOUT_CLASSIFICATION	1.4138844970629287E-4	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9996162062822995	WITHOUT_CLASSIFICATION	3.837937177004966E-4	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9998657327336176	WITHOUT_CLASSIFICATION	1.342672663823656E-4	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9996750143998617	WITHOUT_CLASSIFICATION	3.249856001382433E-4	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.9994424296597552	WITHOUT_CLASSIFICATION	5.575703402447559E-4	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9997053524102909	WITHOUT_CLASSIFICATION	2.946475897091809E-4	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9993360686997407	WITHOUT_CLASSIFICATION	6.63931300259307E-4	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9995883077861845	WITHOUT_CLASSIFICATION	4.116922138155634E-4	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9998506137707777	WITHOUT_CLASSIFICATION	1.4938622922227405E-4	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9995712585536881	WITHOUT_CLASSIFICATION	4.287414463119053E-4	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9996506879893992	WITHOUT_CLASSIFICATION	3.493120106008643E-4	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9997505383642932	WITHOUT_CLASSIFICATION	2.494616357067416E-4	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9995195709048554	WITHOUT_CLASSIFICATION	4.8042909514454685E-4	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9996446915794484	WITHOUT_CLASSIFICATION	3.55308420551671E-4	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9996570124458389	WITHOUT_CLASSIFICATION	3.429875541609943E-4	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9997624723303447	WITHOUT_CLASSIFICATION	2.3752766965532787E-4	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9993980436037201	WITHOUT_CLASSIFICATION	6.019563962798709E-4	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9995465510944882	WITHOUT_CLASSIFICATION	4.5344890551173993E-4	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999547622603897	WITHOUT_CLASSIFICATION	4.523773961026906E-5	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9996518338281684	WITHOUT_CLASSIFICATION	3.481661718317037E-4	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9996900264950744	WITHOUT_CLASSIFICATION	3.0997350492546744E-4	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.999662290474877	WITHOUT_CLASSIFICATION	3.3770952512300454E-4	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9995696834708112	WITHOUT_CLASSIFICATION	4.3031652918877936E-4	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9994969618614548	WITHOUT_CLASSIFICATION	5.030381385452582E-4	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999748223271484	WITHOUT_CLASSIFICATION	2.517767285154764E-5	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9994343750817754	WITHOUT_CLASSIFICATION	5.656249182247407E-4	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9995308583919739	WITHOUT_CLASSIFICATION	4.6914160802620584E-4	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9994843969914177	WITHOUT_CLASSIFICATION	5.156030085823344E-4	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9993465043776277	WITHOUT_CLASSIFICATION	6.534956223722094E-4	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9997814760710519	WITHOUT_CLASSIFICATION	2.1852392894805903E-4	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.999632290799613	WITHOUT_CLASSIFICATION	3.6770920038704775E-4	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9998482173663698	WITHOUT_CLASSIFICATION	1.5178263363020935E-4	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.999592150291544	WITHOUT_CLASSIFICATION	4.078497084560015E-4	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999483881561141	WITHOUT_CLASSIFICATION	5.161184388597995E-5	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9995686994083384	WITHOUT_CLASSIFICATION	4.313005916615696E-4	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.999312152508429	WITHOUT_CLASSIFICATION	6.878474915710763E-4	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9996585974254196	WITHOUT_CLASSIFICATION	3.414025745803451E-4	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9997436942605019	WITHOUT_CLASSIFICATION	2.563057394981797E-4	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9994688187673186	WITHOUT_CLASSIFICATION	5.311812326813182E-4	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9994845282258	WITHOUT_CLASSIFICATION	5.154717742000244E-4	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999853360178581	WITHOUT_CLASSIFICATION	1.4663982141910953E-5	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999746399773225	WITHOUT_CLASSIFICATION	2.5360022677603354E-5	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9993463119937229	WITHOUT_CLASSIFICATION	6.536880062770058E-4	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9995366393776559	WITHOUT_CLASSIFICATION	4.6336062234410985E-4	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9996294179841052	WITHOUT_CLASSIFICATION	3.7058201589479795E-4	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9995775062776465	WITHOUT_CLASSIFICATION	4.2249372235345106E-4	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.999863821868591	WITHOUT_CLASSIFICATION	1.361781314089994E-4	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9998714018756467	WITHOUT_CLASSIFICATION	1.2859812435329316E-4	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9994625060012114	WITHOUT_CLASSIFICATION	5.374939987885725E-4	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9993523384347057	WITHOUT_CLASSIFICATION	6.476615652943995E-4	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9994625060012114	WITHOUT_CLASSIFICATION	5.374939987885725E-4	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9997887202599627	WITHOUT_CLASSIFICATION	2.112797400373479E-4	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9431497619210537	WITHOUT_CLASSIFICATION	0.056850238078946284	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9995973977292105	WITHOUT_CLASSIFICATION	4.0260227078950785E-4	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.6811255151567276	WITHOUT_CLASSIFICATION	0.31887448484327235	IMPLEMENTATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.999681782808598	WITHOUT_CLASSIFICATION	3.1821719140204925E-4	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9995487093873272	WITHOUT_CLASSIFICATION	4.5129061267270296E-4	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9995803091323945	WITHOUT_CLASSIFICATION	4.196908676054861E-4	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9998867396913736	WITHOUT_CLASSIFICATION	1.1326030862625482E-4	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9997457333944045	WITHOUT_CLASSIFICATION	2.54266605595495E-4	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9994434905613208	WITHOUT_CLASSIFICATION	5.565094386792305E-4	IMPLEMENTATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9994237119044574	WITHOUT_CLASSIFICATION	5.762880955425513E-4	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.999325358893512	WITHOUT_CLASSIFICATION	6.746411064879773E-4	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9985227840557561	WITHOUT_CLASSIFICATION	0.0014772159442439014	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9997655571905057	WITHOUT_CLASSIFICATION	2.3444280949440322E-4	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9987006463172071	WITHOUT_CLASSIFICATION	0.0012993536827927978	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.7702204060516858	WITHOUT_CLASSIFICATION	0.22977959394831413	IMPLEMENTATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9997854386960653	WITHOUT_CLASSIFICATION	2.1456130393463144E-4	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9998547379110394	WITHOUT_CLASSIFICATION	1.4526208896056405E-4	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9993212386288844	WITHOUT_CLASSIFICATION	6.787613711155514E-4	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9995485126723982	WITHOUT_CLASSIFICATION	4.514873276017459E-4	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9996028296450745	WITHOUT_CLASSIFICATION	3.9717035492539536E-4	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9993916601417394	WITHOUT_CLASSIFICATION	6.083398582606088E-4	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.999396522372191	WITHOUT_CLASSIFICATION	6.034776278089175E-4	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9997776838595942	WITHOUT_CLASSIFICATION	2.223161404058384E-4	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9995185504003553	WITHOUT_CLASSIFICATION	4.8144959964472207E-4	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9998275815980192	WITHOUT_CLASSIFICATION	1.7241840198071884E-4	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9995144019088908	WITHOUT_CLASSIFICATION	4.855980911091183E-4	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9996515431318952	WITHOUT_CLASSIFICATION	3.4845686810489144E-4	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9996467826796909	WITHOUT_CLASSIFICATION	3.532173203091877E-4	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9994870195929574	WITHOUT_CLASSIFICATION	5.129804070426164E-4	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9994858962569061	WITHOUT_CLASSIFICATION	5.141037430939306E-4	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9994858962569061	WITHOUT_CLASSIFICATION	5.141037430939306E-4	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9994236130664101	WITHOUT_CLASSIFICATION	5.763869335898466E-4	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9995698471586205	WITHOUT_CLASSIFICATION	4.301528413795966E-4	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9995346417438654	WITHOUT_CLASSIFICATION	4.6535825613455006E-4	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9998200149576983	WITHOUT_CLASSIFICATION	1.7998504230167905E-4	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9997676723115697	WITHOUT_CLASSIFICATION	2.3232768843034675E-4	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9997125580308364	WITHOUT_CLASSIFICATION	2.874419691636184E-4	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9995166246401309	WITHOUT_CLASSIFICATION	4.8337535986901157E-4	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9995671909264356	WITHOUT_CLASSIFICATION	4.328090735643664E-4	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9994328872763641	WITHOUT_CLASSIFICATION	5.671127236357442E-4	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9998547331493582	WITHOUT_CLASSIFICATION	1.4526685064181533E-4	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9994150279197384	WITHOUT_CLASSIFICATION	5.849720802615954E-4	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9994680744428689	WITHOUT_CLASSIFICATION	5.319255571310732E-4	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9997661201066228	WITHOUT_CLASSIFICATION	2.3387989337709774E-4	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999642282234265	WITHOUT_CLASSIFICATION	3.5771776573629756E-5	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9998068694924189	WITHOUT_CLASSIFICATION	1.9313050758093753E-4	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.999776533652363	WITHOUT_CLASSIFICATION	2.2346634763719506E-4	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999722351412692	WITHOUT_CLASSIFICATION	2.7764858730758547E-5	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9993792748153846	WITHOUT_CLASSIFICATION	6.20725184615444E-4	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9996709286100713	WITHOUT_CLASSIFICATION	3.2907138992869345E-4	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9998131419550466	WITHOUT_CLASSIFICATION	1.8685804495346964E-4	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9997097439082316	WITHOUT_CLASSIFICATION	2.902560917683707E-4	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9998730295804824	WITHOUT_CLASSIFICATION	1.2697041951757586E-4	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9997705222015515	WITHOUT_CLASSIFICATION	2.2947779844848307E-4	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9998445703249784	WITHOUT_CLASSIFICATION	1.554296750215835E-4	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999509649958475	WITHOUT_CLASSIFICATION	4.9035004152521176E-5	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9992290061497755	WITHOUT_CLASSIFICATION	7.709938502245202E-4	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9994999830996548	WITHOUT_CLASSIFICATION	5.000169003451443E-4	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9995279601748723	WITHOUT_CLASSIFICATION	4.720398251276039E-4	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9990376934077692	WITHOUT_CLASSIFICATION	9.62306592230818E-4	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9994292771189011	WITHOUT_CLASSIFICATION	5.707228810990407E-4	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.9993603098322545	WITHOUT_CLASSIFICATION	6.396901677454693E-4	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9993603098322545	WITHOUT_CLASSIFICATION	6.396901677454693E-4	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9994829249624568	WITHOUT_CLASSIFICATION	5.170750375431884E-4	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.999763046724408	WITHOUT_CLASSIFICATION	2.3695327559210226E-4	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.999611205625532	WITHOUT_CLASSIFICATION	3.887943744680139E-4	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999378762574638	WITHOUT_CLASSIFICATION	6.212374253616264E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999659315414956	WITHOUT_CLASSIFICATION	3.406845850442554E-5	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9996395967863273	WITHOUT_CLASSIFICATION	3.6040321367271605E-4	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9997283769766748	WITHOUT_CLASSIFICATION	2.716230233251325E-4	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9996259873922119	WITHOUT_CLASSIFICATION	3.740126077880191E-4	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9998955690008358	WITHOUT_CLASSIFICATION	1.0443099916423915E-4	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999415996216917	WITHOUT_CLASSIFICATION	5.8400378308179376E-5	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.999879275280546	WITHOUT_CLASSIFICATION	1.2072471945407581E-4	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9995147359985638	WITHOUT_CLASSIFICATION	4.8526400143614505E-4	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999050641527197	WITHOUT_CLASSIFICATION	9.493584728028883E-5	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999687185183775	WITHOUT_CLASSIFICATION	3.1281481622459715E-5	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999770543011121	WITHOUT_CLASSIFICATION	2.2945698887976308E-5	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999770543011121	WITHOUT_CLASSIFICATION	2.2945698887976308E-5	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9996262619436316	WITHOUT_CLASSIFICATION	3.73738056368483E-4	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999770543011121	WITHOUT_CLASSIFICATION	2.2945698887976308E-5	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9995553593895464	WITHOUT_CLASSIFICATION	4.446406104535926E-4	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9983796884360152	WITHOUT_CLASSIFICATION	0.0016203115639846861	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.999427368950899	WITHOUT_CLASSIFICATION	5.726310491009785E-4	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9998006507960594	WITHOUT_CLASSIFICATION	1.9934920394050387E-4	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9996949186956788	WITHOUT_CLASSIFICATION	3.050813043211557E-4	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999856533678883	WITHOUT_CLASSIFICATION	1.43466321116974E-4	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9998644613442108	WITHOUT_CLASSIFICATION	1.3553865578927907E-4	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9995848878778848	WITHOUT_CLASSIFICATION	4.1511212211524254E-4	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.999572425112876	WITHOUT_CLASSIFICATION	4.275748871239233E-4	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9993959357380834	WITHOUT_CLASSIFICATION	6.040642619165785E-4	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9998687669781029	WITHOUT_CLASSIFICATION	1.3123302189709725E-4	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9995192386586349	WITHOUT_CLASSIFICATION	4.807613413651297E-4	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9995241238026935	WITHOUT_CLASSIFICATION	4.7587619730647706E-4	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9998558305505292	WITHOUT_CLASSIFICATION	1.4416944947078035E-4	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.999649666613994	WITHOUT_CLASSIFICATION	3.503333860059803E-4	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9995154830784955	WITHOUT_CLASSIFICATION	4.845169215045119E-4	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9995321095506086	WITHOUT_CLASSIFICATION	4.678904493914127E-4	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999615752763135	WITHOUT_CLASSIFICATION	3.8424723686508787E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9997650090777179	WITHOUT_CLASSIFICATION	2.3499092228200912E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9995687666761476	WITHOUT_CLASSIFICATION	4.312333238523849E-4	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.999777580629632	WITHOUT_CLASSIFICATION	2.2241937036799472E-4	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9995717218854477	WITHOUT_CLASSIFICATION	4.2827811455232426E-4	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9996103567330576	WITHOUT_CLASSIFICATION	3.896432669422897E-4	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9996020360687261	WITHOUT_CLASSIFICATION	3.979639312738315E-4	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9997310438829977	WITHOUT_CLASSIFICATION	2.6895611700222355E-4	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999770543011121	WITHOUT_CLASSIFICATION	2.2945698887976308E-5	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999770543011121	WITHOUT_CLASSIFICATION	2.2945698887976373E-5	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999947632558517	WITHOUT_CLASSIFICATION	5.236744148349835E-6	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.999320035455783	WITHOUT_CLASSIFICATION	6.799645442170285E-4	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9998298778653668	WITHOUT_CLASSIFICATION	1.70122134633147E-4	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9997371029631179	WITHOUT_CLASSIFICATION	2.6289703688210333E-4	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9996058458775959	WITHOUT_CLASSIFICATION	3.9415412240409464E-4	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9998291927765931	WITHOUT_CLASSIFICATION	1.7080722340700978E-4	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.999479522835304	WITHOUT_CLASSIFICATION	5.204771646959378E-4	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9978068977590797	WITHOUT_CLASSIFICATION	0.002193102240920234	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9995620711545306	WITHOUT_CLASSIFICATION	4.379288454694413E-4	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9997330347062386	WITHOUT_CLASSIFICATION	2.6696529376128757E-4	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9994706893474995	WITHOUT_CLASSIFICATION	5.293106525005778E-4	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9994501535532022	WITHOUT_CLASSIFICATION	5.498464467977416E-4	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9996896992719455	WITHOUT_CLASSIFICATION	3.103007280544808E-4	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9997781879524791	WITHOUT_CLASSIFICATION	2.2181204752098156E-4	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999183632868984	WITHOUT_CLASSIFICATION	8.163671310148762E-5	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9993135678428052	WITHOUT_CLASSIFICATION	6.864321571948185E-4	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.8309274065139785	WITHOUT_CLASSIFICATION	0.16907259348602158	IMPLEMENTATION
// integer division	WITHOUT_CLASSIFICATION	0.9993432427494108	WITHOUT_CLASSIFICATION	6.567572505892756E-4	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9998189665234899	WITHOUT_CLASSIFICATION	1.8103347651013329E-4	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9994249237320793	WITHOUT_CLASSIFICATION	5.750762679207597E-4	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9994249237320793	WITHOUT_CLASSIFICATION	5.750762679207597E-4	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9996278280715221	WITHOUT_CLASSIFICATION	3.7217192847794906E-4	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9998599096381684	WITHOUT_CLASSIFICATION	1.4009036183172753E-4	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9998629100292782	WITHOUT_CLASSIFICATION	1.3708997072180772E-4	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9994273049156369	WITHOUT_CLASSIFICATION	5.726950843632064E-4	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9998138902261529	WITHOUT_CLASSIFICATION	1.8610977384718683E-4	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9997679824358792	WITHOUT_CLASSIFICATION	2.320175641206927E-4	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9995894289915386	WITHOUT_CLASSIFICATION	4.1057100846147694E-4	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9995234812426592	WITHOUT_CLASSIFICATION	4.765187573408034E-4	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9996529800539591	WITHOUT_CLASSIFICATION	3.470199460409358E-4	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9995784560073379	WITHOUT_CLASSIFICATION	4.215439926621504E-4	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9996879001622081	WITHOUT_CLASSIFICATION	3.1209983779189053E-4	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9997306284622661	WITHOUT_CLASSIFICATION	2.6937153773381903E-4	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9997094847326228	WITHOUT_CLASSIFICATION	2.9051526737716076E-4	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.99954552012713	WITHOUT_CLASSIFICATION	4.544798728699954E-4	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.999683770044793	WITHOUT_CLASSIFICATION	3.1622995520695174E-4	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9994598766087067	WITHOUT_CLASSIFICATION	5.401233912932718E-4	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9996785298486482	WITHOUT_CLASSIFICATION	3.214701513517762E-4	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9994614979385801	WITHOUT_CLASSIFICATION	5.38502061419851E-4	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9993975820561438	WITHOUT_CLASSIFICATION	6.024179438562325E-4	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9995592044522444	WITHOUT_CLASSIFICATION	4.40795547755581E-4	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9997460783052867	WITHOUT_CLASSIFICATION	2.5392169471320845E-4	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9998706031455441	WITHOUT_CLASSIFICATION	1.2939685445582643E-4	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9996587170363197	WITHOUT_CLASSIFICATION	3.4128296368021054E-4	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9997551907652038	WITHOUT_CLASSIFICATION	2.4480923479621477E-4	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.999474907428647	WITHOUT_CLASSIFICATION	5.250925713529851E-4	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9997560879482444	WITHOUT_CLASSIFICATION	2.4391205175543123E-4	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9997880603907369	WITHOUT_CLASSIFICATION	2.1193960926312443E-4	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9995831700128902	WITHOUT_CLASSIFICATION	4.168299871098096E-4	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9993916601417394	WITHOUT_CLASSIFICATION	6.083398582606088E-4	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9993286263106893	WITHOUT_CLASSIFICATION	6.713736893107392E-4	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.999582765583787	WITHOUT_CLASSIFICATION	4.172344162129907E-4	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9993916601417394	WITHOUT_CLASSIFICATION	6.083398582606088E-4	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9996952907451242	WITHOUT_CLASSIFICATION	3.0470925487581117E-4	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9994859116211309	WITHOUT_CLASSIFICATION	5.140883788690343E-4	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999020315133142	WITHOUT_CLASSIFICATION	9.796848668583862E-5	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9997886267407848	WITHOUT_CLASSIFICATION	2.113732592151486E-4	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9988130028802782	WITHOUT_CLASSIFICATION	0.0011869971197217997	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9998341629662032	WITHOUT_CLASSIFICATION	1.658370337968705E-4	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9997702843966707	WITHOUT_CLASSIFICATION	2.2971560332918E-4	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9997635830624678	WITHOUT_CLASSIFICATION	2.3641693753205121E-4	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9997635830624678	WITHOUT_CLASSIFICATION	2.3641693753205121E-4	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9997345892856591	WITHOUT_CLASSIFICATION	2.6541071434087464E-4	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9994542511148455	WITHOUT_CLASSIFICATION	5.45748885154555E-4	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9997716485857169	WITHOUT_CLASSIFICATION	2.2835141428315578E-4	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9996580808434831	WITHOUT_CLASSIFICATION	3.4191915651690294E-4	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9995745345847266	WITHOUT_CLASSIFICATION	4.2546541527345265E-4	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9994062783715115	WITHOUT_CLASSIFICATION	5.937216284885368E-4	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9996937740866811	WITHOUT_CLASSIFICATION	3.062259133189288E-4	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9528646858717202	WITHOUT_CLASSIFICATION	0.04713531412827975	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9994432155827873	WITHOUT_CLASSIFICATION	5.567844172127438E-4	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9994615524232273	WITHOUT_CLASSIFICATION	5.384475767727612E-4	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9994615524232273	WITHOUT_CLASSIFICATION	5.384475767727612E-4	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9995790652616474	WITHOUT_CLASSIFICATION	4.209347383526205E-4	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999226283908353	WITHOUT_CLASSIFICATION	7.737160916459217E-5	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.999584113509591	WITHOUT_CLASSIFICATION	4.1588649040900027E-4	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.7688702380086059	WITHOUT_CLASSIFICATION	0.23112976199139415	IMPLEMENTATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9994664253426211	WITHOUT_CLASSIFICATION	5.335746573789656E-4	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9997743928438579	WITHOUT_CLASSIFICATION	2.2560715614196935E-4	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9994039994426432	WITHOUT_CLASSIFICATION	5.960005573566678E-4	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9995852959573411	WITHOUT_CLASSIFICATION	4.147040426589004E-4	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999260746408742	WITHOUT_CLASSIFICATION	7.392535912577227E-5	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.999449540039926	WITHOUT_CLASSIFICATION	5.50459960074058E-4	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.999449540039926	WITHOUT_CLASSIFICATION	5.50459960074058E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993430187239033	WITHOUT_CLASSIFICATION	6.569812760967023E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993430187239033	WITHOUT_CLASSIFICATION	6.569812760967023E-4	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9996282941947022	WITHOUT_CLASSIFICATION	3.7170580529775806E-4	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9993780520052881	WITHOUT_CLASSIFICATION	6.219479947118937E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9995648695282106	WITHOUT_CLASSIFICATION	4.351304717894145E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9996046397876942	WITHOUT_CLASSIFICATION	3.953602123057341E-4	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9997221902047613	WITHOUT_CLASSIFICATION	2.77809795238731E-4	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9995297987568941	WITHOUT_CLASSIFICATION	4.7020124310595085E-4	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9980601291372461	WITHOUT_CLASSIFICATION	0.0019398708627539933	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9996248619803603	WITHOUT_CLASSIFICATION	3.751380196398427E-4	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9996110009315761	WITHOUT_CLASSIFICATION	3.8899906842394273E-4	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9994734755312941	WITHOUT_CLASSIFICATION	5.265244687059259E-4	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9997856048122276	WITHOUT_CLASSIFICATION	2.1439518777250247E-4	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9997196168940338	WITHOUT_CLASSIFICATION	2.803831059662203E-4	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9994377549820428	WITHOUT_CLASSIFICATION	5.622450179572769E-4	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9994788546768851	WITHOUT_CLASSIFICATION	5.211453231148797E-4	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9997058548307233	WITHOUT_CLASSIFICATION	2.941451692768024E-4	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.9995717861311969	WITHOUT_CLASSIFICATION	4.2821386880310085E-4	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9994368652240888	WITHOUT_CLASSIFICATION	5.631347759110884E-4	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9993273200304187	WITHOUT_CLASSIFICATION	6.72679969581417E-4	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9995656055804518	WITHOUT_CLASSIFICATION	4.343944195482221E-4	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9998911566534251	WITHOUT_CLASSIFICATION	1.0884334657499292E-4	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9997204071929034	WITHOUT_CLASSIFICATION	2.795928070965697E-4	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9998275815980192	WITHOUT_CLASSIFICATION	1.7241840198071884E-4	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.999776533652363	WITHOUT_CLASSIFICATION	2.2346634763719506E-4	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9993047102990614	WITHOUT_CLASSIFICATION	6.952897009386545E-4	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9998675729217964	WITHOUT_CLASSIFICATION	1.3242707820369757E-4	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9997399259741837	WITHOUT_CLASSIFICATION	2.600740258162491E-4	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.999935460391533	WITHOUT_CLASSIFICATION	6.453960846700589E-5	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9994964436104519	WITHOUT_CLASSIFICATION	5.035563895481707E-4	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9994964436104519	WITHOUT_CLASSIFICATION	5.035563895481707E-4	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9993865840455413	WITHOUT_CLASSIFICATION	6.134159544587453E-4	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999093958921915	WITHOUT_CLASSIFICATION	9.06041078085044E-5	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9998404738026717	WITHOUT_CLASSIFICATION	1.5952619732836483E-4	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9998094719286713	WITHOUT_CLASSIFICATION	1.9052807132871486E-4	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9994265683108363	WITHOUT_CLASSIFICATION	5.73431689163691E-4	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.999778033491942	WITHOUT_CLASSIFICATION	2.219665080578662E-4	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9995716199607046	WITHOUT_CLASSIFICATION	4.2838003929536624E-4	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9995782653970858	WITHOUT_CLASSIFICATION	4.2173460291412184E-4	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9995499132280264	WITHOUT_CLASSIFICATION	4.500867719734322E-4	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9996308351189783	WITHOUT_CLASSIFICATION	3.6916488102167896E-4	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9992964828685948	WITHOUT_CLASSIFICATION	7.035171314051892E-4	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9998605858932671	WITHOUT_CLASSIFICATION	1.3941410673290117E-4	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9992847252099991	WITHOUT_CLASSIFICATION	7.15274790000914E-4	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999206518016137	WITHOUT_CLASSIFICATION	7.934819838629909E-5	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.999497378617239	WITHOUT_CLASSIFICATION	5.026213827609555E-4	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9997366337250155	WITHOUT_CLASSIFICATION	2.633662749844437E-4	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9995662262634227	WITHOUT_CLASSIFICATION	4.337737365773034E-4	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999507798143783	WITHOUT_CLASSIFICATION	4.922018562170044E-5	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9996658532221542	WITHOUT_CLASSIFICATION	3.341467778458607E-4	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999936281479787	WITHOUT_CLASSIFICATION	6.371852021337366E-6	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9994703586118376	WITHOUT_CLASSIFICATION	5.296413881623732E-4	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9994213084430643	WITHOUT_CLASSIFICATION	5.786915569357044E-4	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9993916601417394	WITHOUT_CLASSIFICATION	6.083398582606088E-4	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9996862429124146	WITHOUT_CLASSIFICATION	3.1375708758539256E-4	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9995911025069345	WITHOUT_CLASSIFICATION	4.0889749306538927E-4	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9993992761172685	WITHOUT_CLASSIFICATION	6.007238827314593E-4	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9996269031863068	WITHOUT_CLASSIFICATION	3.7309681369327455E-4	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9996148283106823	WITHOUT_CLASSIFICATION	3.8517168931763733E-4	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9995697765349688	WITHOUT_CLASSIFICATION	4.302234650311372E-4	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9813864771012849	WITHOUT_CLASSIFICATION	0.01861352289871514	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9993713981378638	WITHOUT_CLASSIFICATION	6.286018621362725E-4	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9995334282596936	WITHOUT_CLASSIFICATION	4.665717403062873E-4	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9996325386863879	WITHOUT_CLASSIFICATION	3.6746131361210213E-4	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9985962229890859	WITHOUT_CLASSIFICATION	0.0014037770109141	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9994744486801247	WITHOUT_CLASSIFICATION	5.255513198752007E-4	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9993823832328379	WITHOUT_CLASSIFICATION	6.176167671621089E-4	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9996934449327104	WITHOUT_CLASSIFICATION	3.0655506728964024E-4	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9996137209150605	WITHOUT_CLASSIFICATION	3.8627908493951403E-4	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9997222352831093	WITHOUT_CLASSIFICATION	2.7776471689067714E-4	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9998726701957572	WITHOUT_CLASSIFICATION	1.2732980424272225E-4	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9995826885584875	WITHOUT_CLASSIFICATION	4.173114415125145E-4	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.999626767377931	WITHOUT_CLASSIFICATION	3.7323262206896907E-4	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9993958019916287	WITHOUT_CLASSIFICATION	6.041980083712256E-4	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9998465579432353	WITHOUT_CLASSIFICATION	1.5344205676474658E-4	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9995108639265294	WITHOUT_CLASSIFICATION	4.891360734706214E-4	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9993180966760936	WITHOUT_CLASSIFICATION	6.819033239064378E-4	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9993916601417394	WITHOUT_CLASSIFICATION	6.083398582606088E-4	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9993883908280554	WITHOUT_CLASSIFICATION	6.116091719445453E-4	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9995956429317578	WITHOUT_CLASSIFICATION	4.0435706824220853E-4	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9993215802707379	WITHOUT_CLASSIFICATION	6.784197292620079E-4	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9998637441303683	WITHOUT_CLASSIFICATION	1.3625586963161756E-4	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9993916601417394	WITHOUT_CLASSIFICATION	6.083398582606088E-4	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9994554575863202	WITHOUT_CLASSIFICATION	5.445424136798588E-4	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9993285146970368	WITHOUT_CLASSIFICATION	6.714853029633276E-4	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9994616058646856	WITHOUT_CLASSIFICATION	5.383941353144735E-4	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9993916601417394	WITHOUT_CLASSIFICATION	6.083398582606088E-4	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9996631591907792	WITHOUT_CLASSIFICATION	3.36840809220878E-4	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9996231406769598	WITHOUT_CLASSIFICATION	3.768593230401112E-4	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9998035535719528	WITHOUT_CLASSIFICATION	1.964464280472132E-4	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9993489207174128	WITHOUT_CLASSIFICATION	6.510792825872962E-4	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999078487571031	WITHOUT_CLASSIFICATION	9.215124289684778E-5	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9991708913193221	WITHOUT_CLASSIFICATION	8.291086806779482E-4	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.9992480299648939	WITHOUT_CLASSIFICATION	7.519700351060714E-4	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9994885414279007	WITHOUT_CLASSIFICATION	5.114585720993192E-4	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9994885414279007	WITHOUT_CLASSIFICATION	5.114585720993192E-4	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9995303745251387	WITHOUT_CLASSIFICATION	4.696254748611886E-4	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.9995620767100287	WITHOUT_CLASSIFICATION	4.379232899712446E-4	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.999689287577563	WITHOUT_CLASSIFICATION	3.1071242243694127E-4	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9996785397731603	WITHOUT_CLASSIFICATION	3.2146022683967885E-4	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9993915395297406	WITHOUT_CLASSIFICATION	6.084604702593517E-4	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9998796657795146	WITHOUT_CLASSIFICATION	1.2033422048544157E-4	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9996033588976346	WITHOUT_CLASSIFICATION	3.966411023653621E-4	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.999451110140143	WITHOUT_CLASSIFICATION	5.48889859856982E-4	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9995158502130121	WITHOUT_CLASSIFICATION	4.841497869878658E-4	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9996046787854744	WITHOUT_CLASSIFICATION	3.953212145255862E-4	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999094511852572	WITHOUT_CLASSIFICATION	9.054881474273893E-5	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9998355871703195	WITHOUT_CLASSIFICATION	1.644128296805624E-4	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9989161782919422	WITHOUT_CLASSIFICATION	0.0010838217080578754	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9994672268232887	WITHOUT_CLASSIFICATION	5.327731767113045E-4	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9998065699330559	WITHOUT_CLASSIFICATION	1.9343006694405154E-4	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9994230799129662	WITHOUT_CLASSIFICATION	5.769200870338389E-4	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9996115043620944	WITHOUT_CLASSIFICATION	3.8849563790563493E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9997256155449294	WITHOUT_CLASSIFICATION	2.7438445507057646E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9997256155449294	WITHOUT_CLASSIFICATION	2.7438445507057646E-4	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9995783644095734	WITHOUT_CLASSIFICATION	4.216355904267422E-4	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.999575231180664	WITHOUT_CLASSIFICATION	4.24768819335867E-4	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9993875950514834	WITHOUT_CLASSIFICATION	6.12404948516655E-4	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9993086769128342	WITHOUT_CLASSIFICATION	6.913230871657438E-4	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9997875091141828	WITHOUT_CLASSIFICATION	2.1249088581722932E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9997256155449294	WITHOUT_CLASSIFICATION	2.7438445507057646E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9997256155449294	WITHOUT_CLASSIFICATION	2.7438445507057646E-4	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996864063653446	WITHOUT_CLASSIFICATION	3.1359363465544867E-4	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996864063653446	WITHOUT_CLASSIFICATION	3.1359363465544867E-4	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9994922837880722	WITHOUT_CLASSIFICATION	5.077162119278774E-4	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9993377244396294	WITHOUT_CLASSIFICATION	6.622755603705881E-4	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9997662673489713	WITHOUT_CLASSIFICATION	2.3373265102858638E-4	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9996223885336158	WITHOUT_CLASSIFICATION	3.7761146638412373E-4	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9996630532417772	WITHOUT_CLASSIFICATION	3.369467582227777E-4	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9996630532417772	WITHOUT_CLASSIFICATION	3.369467582227777E-4	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999268921238857	WITHOUT_CLASSIFICATION	7.310787611415662E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9996019107474021	WITHOUT_CLASSIFICATION	3.9808925259780077E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9995428528651679	WITHOUT_CLASSIFICATION	4.5714713483201847E-4	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.999349186428748	WITHOUT_CLASSIFICATION	6.508135712520226E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996864063653446	WITHOUT_CLASSIFICATION	3.1359363465544867E-4	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998516028262839	WITHOUT_CLASSIFICATION	1.4839717371603424E-4	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.999758361053304	WITHOUT_CLASSIFICATION	2.4163894669595922E-4	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.999650769859045	WITHOUT_CLASSIFICATION	3.492301409550392E-4	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9998526812736398	WITHOUT_CLASSIFICATION	1.473187263601579E-4	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9996418685964743	WITHOUT_CLASSIFICATION	3.581314035257622E-4	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9993864884358998	WITHOUT_CLASSIFICATION	6.135115641002932E-4	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9998596654772494	WITHOUT_CLASSIFICATION	1.403345227506087E-4	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9996702686748761	WITHOUT_CLASSIFICATION	3.2973132512392907E-4	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9995661486234251	WITHOUT_CLASSIFICATION	4.338513765749634E-4	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9994230799129662	WITHOUT_CLASSIFICATION	5.769200870338389E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9997256155449294	WITHOUT_CLASSIFICATION	2.7438445507057646E-4	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996864063653446	WITHOUT_CLASSIFICATION	3.1359363465544867E-4	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998516028262839	WITHOUT_CLASSIFICATION	1.4839717371603424E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999068426358091	WITHOUT_CLASSIFICATION	9.315736419089579E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999068426358091	WITHOUT_CLASSIFICATION	9.315736419089579E-5	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9996883551906689	WITHOUT_CLASSIFICATION	3.11644809331106E-4	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9996904157886235	WITHOUT_CLASSIFICATION	3.095842113765211E-4	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9996551047830122	WITHOUT_CLASSIFICATION	3.448952169876893E-4	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999033726202655	WITHOUT_CLASSIFICATION	9.662737973453602E-5	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9998182535534267	WITHOUT_CLASSIFICATION	1.8174644657324894E-4	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9998983041864095	WITHOUT_CLASSIFICATION	1.0169581359054714E-4	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9998468806969087	WITHOUT_CLASSIFICATION	1.5311930309119579E-4	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9996849871142562	WITHOUT_CLASSIFICATION	3.1501288574372553E-4	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9994703840546878	WITHOUT_CLASSIFICATION	5.296159453122657E-4	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9996637683703083	WITHOUT_CLASSIFICATION	3.36231629691592E-4	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9992293449382644	WITHOUT_CLASSIFICATION	7.706550617355413E-4	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9997057530603067	WITHOUT_CLASSIFICATION	2.9424693969327357E-4	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9994184892162428	WITHOUT_CLASSIFICATION	5.815107837572717E-4	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9996115043620944	WITHOUT_CLASSIFICATION	3.8849563790563493E-4	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996864063653446	WITHOUT_CLASSIFICATION	3.1359363465544867E-4	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9996019107474021	WITHOUT_CLASSIFICATION	3.9808925259780077E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9995428528651679	WITHOUT_CLASSIFICATION	4.5714713483201847E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9995428528651679	WITHOUT_CLASSIFICATION	4.5714713483201847E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996864063653446	WITHOUT_CLASSIFICATION	3.1359363465544867E-4	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998516028262839	WITHOUT_CLASSIFICATION	1.4839717371603424E-4	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998516028262839	WITHOUT_CLASSIFICATION	1.4839717371603424E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999068426358091	WITHOUT_CLASSIFICATION	9.315736419089579E-5	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9996003690669556	WITHOUT_CLASSIFICATION	3.996309330443619E-4	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9996954659199364	WITHOUT_CLASSIFICATION	3.045340800634835E-4	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999801698372266	WITHOUT_CLASSIFICATION	1.983016277341987E-5	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9990207341962861	WITHOUT_CLASSIFICATION	9.792658037139474E-4	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.999856508295237	WITHOUT_CLASSIFICATION	1.4349170476308704E-4	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999274662021773	WITHOUT_CLASSIFICATION	7.25337978226922E-5	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9996878150341718	WITHOUT_CLASSIFICATION	3.1218496582815955E-4	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9997289366345069	WITHOUT_CLASSIFICATION	2.710633654931331E-4	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9997952391873874	WITHOUT_CLASSIFICATION	2.0476081261260498E-4	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9996019107474021	WITHOUT_CLASSIFICATION	3.9808925259780077E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9995428528651679	WITHOUT_CLASSIFICATION	4.5714713483201847E-4	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9995428528651679	WITHOUT_CLASSIFICATION	4.5714713483201847E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996864063653446	WITHOUT_CLASSIFICATION	3.1359363465544867E-4	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9996849871142562	WITHOUT_CLASSIFICATION	3.1501288574372553E-4	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9996637683703083	WITHOUT_CLASSIFICATION	3.36231629691592E-4	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9996257907210687	WITHOUT_CLASSIFICATION	3.7420927893136414E-4	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999374488154331	WITHOUT_CLASSIFICATION	6.255118456691534E-5	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9993377244396294	WITHOUT_CLASSIFICATION	6.622755603705885E-4	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9993377244396294	WITHOUT_CLASSIFICATION	6.622755603705885E-4	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9993460983089164	WITHOUT_CLASSIFICATION	6.539016910836174E-4	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9994297119494017	WITHOUT_CLASSIFICATION	5.702880505984688E-4	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9995645351723276	WITHOUT_CLASSIFICATION	4.35464827672454E-4	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9994432855787795	WITHOUT_CLASSIFICATION	5.567144212205031E-4	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9994436532848667	WITHOUT_CLASSIFICATION	5.563467151332151E-4	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9994436532848667	WITHOUT_CLASSIFICATION	5.563467151332151E-4	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9995034970056297	WITHOUT_CLASSIFICATION	4.96502994370289E-4	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9995034970056297	WITHOUT_CLASSIFICATION	4.96502994370289E-4	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9994795252761441	WITHOUT_CLASSIFICATION	5.204747238559553E-4	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9994795252761441	WITHOUT_CLASSIFICATION	5.204747238559553E-4	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9993850834888911	WITHOUT_CLASSIFICATION	6.149165111089532E-4	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9997218556810813	WITHOUT_CLASSIFICATION	2.781443189186946E-4	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9996446814224471	WITHOUT_CLASSIFICATION	3.553185775528982E-4	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.999774444947081	WITHOUT_CLASSIFICATION	2.2555505291905445E-4	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9996221229766222	WITHOUT_CLASSIFICATION	3.7787702337773956E-4	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.999585881848774	WITHOUT_CLASSIFICATION	4.1411815122597905E-4	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9994896529233842	WITHOUT_CLASSIFICATION	5.103470766157749E-4	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9996946786101211	WITHOUT_CLASSIFICATION	3.053213898789416E-4	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.99967232321472	WITHOUT_CLASSIFICATION	3.2767678527998893E-4	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9997025480832211	WITHOUT_CLASSIFICATION	2.9745191677884545E-4	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9996710104975032	WITHOUT_CLASSIFICATION	3.289895024967666E-4	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9994043142251048	WITHOUT_CLASSIFICATION	5.956857748952012E-4	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9993757368162342	WITHOUT_CLASSIFICATION	6.242631837658078E-4	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9993757368162342	WITHOUT_CLASSIFICATION	6.242631837658078E-4	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9995264733563465	WITHOUT_CLASSIFICATION	4.7352664365352235E-4	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9995297987568941	WITHOUT_CLASSIFICATION	4.7020124310595085E-4	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.999604013266081	WITHOUT_CLASSIFICATION	3.9598673391911935E-4	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9998377482029619	WITHOUT_CLASSIFICATION	1.6225179703820752E-4	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.999608871828395	WITHOUT_CLASSIFICATION	3.911281716049991E-4	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9993191812178471	WITHOUT_CLASSIFICATION	6.808187821528399E-4	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9994798187371378	WITHOUT_CLASSIFICATION	5.201812628621942E-4	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9996502754397457	WITHOUT_CLASSIFICATION	3.4972456025420115E-4	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9996426105479019	WITHOUT_CLASSIFICATION	3.5738945209808857E-4	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.999742014142708	WITHOUT_CLASSIFICATION	2.579858572919281E-4	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9995378977150157	WITHOUT_CLASSIFICATION	4.6210228498424187E-4	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9995453539682873	WITHOUT_CLASSIFICATION	4.5464603171270257E-4	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.999619531211619	WITHOUT_CLASSIFICATION	3.8046878838112337E-4	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999380851877621	WITHOUT_CLASSIFICATION	6.191481223792608E-5	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.999528026762576	WITHOUT_CLASSIFICATION	4.7197323742404043E-4	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9995022421002722	WITHOUT_CLASSIFICATION	4.977578997278032E-4	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9994374239282391	WITHOUT_CLASSIFICATION	5.625760717609387E-4	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9993575839710611	WITHOUT_CLASSIFICATION	6.424160289387914E-4	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9994556368578972	WITHOUT_CLASSIFICATION	5.443631421028858E-4	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9994556368578972	WITHOUT_CLASSIFICATION	5.443631421028858E-4	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9998020685324362	WITHOUT_CLASSIFICATION	1.979314675638127E-4	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9996791578294263	WITHOUT_CLASSIFICATION	3.208421705736988E-4	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9998632748071308	WITHOUT_CLASSIFICATION	1.3672519286919325E-4	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9994631783852576	WITHOUT_CLASSIFICATION	5.368216147424173E-4	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9993196274711498	WITHOUT_CLASSIFICATION	6.803725288501842E-4	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9994631783852576	WITHOUT_CLASSIFICATION	5.368216147424173E-4	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9992067600806106	WITHOUT_CLASSIFICATION	7.93239919389358E-4	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9994269109885697	WITHOUT_CLASSIFICATION	5.730890114303616E-4	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9994269109885697	WITHOUT_CLASSIFICATION	5.730890114303616E-4	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9996270772317297	WITHOUT_CLASSIFICATION	3.729227682702621E-4	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9991934588454481	WITHOUT_CLASSIFICATION	8.065411545519106E-4	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.999431385791337	WITHOUT_CLASSIFICATION	5.686142086629496E-4	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9996800185346566	WITHOUT_CLASSIFICATION	3.199814653434458E-4	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9996791578294263	WITHOUT_CLASSIFICATION	3.208421705736988E-4	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9993196274711498	WITHOUT_CLASSIFICATION	6.803725288501842E-4	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9994257802438796	WITHOUT_CLASSIFICATION	5.742197561204652E-4	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9994257802438796	WITHOUT_CLASSIFICATION	5.742197561204652E-4	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.99965134271968	WITHOUT_CLASSIFICATION	3.486572803199097E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999587321180501	WITHOUT_CLASSIFICATION	4.1267881949986095E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999587321180501	WITHOUT_CLASSIFICATION	4.1267881949986095E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9996090197424091	WITHOUT_CLASSIFICATION	3.9098025759080803E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9996090197424091	WITHOUT_CLASSIFICATION	3.9098025759080803E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9996090197424091	WITHOUT_CLASSIFICATION	3.9098025759080803E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999587321180501	WITHOUT_CLASSIFICATION	4.1267881949986095E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999587321180501	WITHOUT_CLASSIFICATION	4.1267881949986095E-5	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.99965134271968	WITHOUT_CLASSIFICATION	3.486572803199097E-4	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9995902556954129	WITHOUT_CLASSIFICATION	4.097443045871471E-4	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9994856776623775	WITHOUT_CLASSIFICATION	5.143223376225504E-4	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9998819134637085	WITHOUT_CLASSIFICATION	1.1808653629148834E-4	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9995932853246802	WITHOUT_CLASSIFICATION	4.0671467531979636E-4	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9996245738054118	WITHOUT_CLASSIFICATION	3.7542619458821056E-4	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9994063216456917	WITHOUT_CLASSIFICATION	5.936783543083799E-4	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9994652611394967	WITHOUT_CLASSIFICATION	5.347388605032772E-4	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9998472432396671	WITHOUT_CLASSIFICATION	1.5275676033291063E-4	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9995378977150157	WITHOUT_CLASSIFICATION	4.6210228498424187E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999587321180501	WITHOUT_CLASSIFICATION	4.1267881949986095E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999587321180501	WITHOUT_CLASSIFICATION	4.1267881949986095E-5	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9995926918271995	WITHOUT_CLASSIFICATION	4.0730817280049076E-4	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9993638919798383	WITHOUT_CLASSIFICATION	6.361080201616253E-4	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9993601472458651	WITHOUT_CLASSIFICATION	6.39852754134934E-4	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9997487157757933	WITHOUT_CLASSIFICATION	2.512842242066736E-4	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9998246419974608	WITHOUT_CLASSIFICATION	1.7535800253926518E-4	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9996614319393393	WITHOUT_CLASSIFICATION	3.38568060660693E-4	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.99955753726265	WITHOUT_CLASSIFICATION	4.4246273735006845E-4	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9997500131485754	WITHOUT_CLASSIFICATION	2.499868514245805E-4	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9996770605973353	WITHOUT_CLASSIFICATION	3.2293940266464566E-4	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9996523361321195	WITHOUT_CLASSIFICATION	3.476638678805833E-4	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9994554575863202	WITHOUT_CLASSIFICATION	5.445424136798588E-4	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9994652935547935	WITHOUT_CLASSIFICATION	5.347064452065355E-4	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9995828993399428	WITHOUT_CLASSIFICATION	4.171006600571088E-4	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9992598363538454	WITHOUT_CLASSIFICATION	7.40163646154497E-4	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9998054849848493	WITHOUT_CLASSIFICATION	1.9451501515072633E-4	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9994728694445355	WITHOUT_CLASSIFICATION	5.27130555464569E-4	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.999617911218394	WITHOUT_CLASSIFICATION	3.8208878160599747E-4	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9996054806134411	WITHOUT_CLASSIFICATION	3.9451938655892253E-4	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9997869493768153	WITHOUT_CLASSIFICATION	2.13050623184694E-4	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9928675331472825	WITHOUT_CLASSIFICATION	0.007132466852717547	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9997455055605916	WITHOUT_CLASSIFICATION	2.544944394084553E-4	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9998513887883909	WITHOUT_CLASSIFICATION	1.4861121160911065E-4	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.999648190438887	WITHOUT_CLASSIFICATION	3.5180956111304835E-4	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9995709915993053	WITHOUT_CLASSIFICATION	4.2900840069469594E-4	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9994937375832893	WITHOUT_CLASSIFICATION	5.062624167107767E-4	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9996498393512383	WITHOUT_CLASSIFICATION	3.501606487617027E-4	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9993563110540933	WITHOUT_CLASSIFICATION	6.436889459066045E-4	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9996270772317297	WITHOUT_CLASSIFICATION	3.729227682702621E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999587321180501	WITHOUT_CLASSIFICATION	4.1267881949986095E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999587321180501	WITHOUT_CLASSIFICATION	4.1267881949986095E-5	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.99965134271968	WITHOUT_CLASSIFICATION	3.486572803199097E-4	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9994063216456917	WITHOUT_CLASSIFICATION	5.936783543083799E-4	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9993638919798383	WITHOUT_CLASSIFICATION	6.361080201616253E-4	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9997487157757933	WITHOUT_CLASSIFICATION	2.512842242066736E-4	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9996614319393393	WITHOUT_CLASSIFICATION	3.38568060660693E-4	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9993601472458651	WITHOUT_CLASSIFICATION	6.39852754134934E-4	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.99955753726265	WITHOUT_CLASSIFICATION	4.4246273735006845E-4	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9996523361321195	WITHOUT_CLASSIFICATION	3.476638678805833E-4	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9996770605973353	WITHOUT_CLASSIFICATION	3.2293940266464566E-4	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9994652935547935	WITHOUT_CLASSIFICATION	5.347064452065355E-4	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9998670454980005	WITHOUT_CLASSIFICATION	1.3295450199948025E-4	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9996130222404351	WITHOUT_CLASSIFICATION	3.869777595648624E-4	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9996244393308834	WITHOUT_CLASSIFICATION	3.7556066911648904E-4	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9995377027885655	WITHOUT_CLASSIFICATION	4.6229721143460005E-4	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9996317066422297	WITHOUT_CLASSIFICATION	3.6829335777035274E-4	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9995685312826038	WITHOUT_CLASSIFICATION	4.3146871739613453E-4	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9996490694365897	WITHOUT_CLASSIFICATION	3.5093056341030745E-4	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9998952747006098	WITHOUT_CLASSIFICATION	1.0472529939022357E-4	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9998664529369635	WITHOUT_CLASSIFICATION	1.3354706303652782E-4	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9997500131485754	WITHOUT_CLASSIFICATION	2.499868514245805E-4	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.999848503974218	WITHOUT_CLASSIFICATION	1.514960257819687E-4	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9995386995419747	WITHOUT_CLASSIFICATION	4.6130045802528485E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9994526310183489	WITHOUT_CLASSIFICATION	5.473689816510815E-4	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9994217803911515	WITHOUT_CLASSIFICATION	5.782196088485721E-4	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9998232046303439	WITHOUT_CLASSIFICATION	1.7679536965603694E-4	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9995808197915835	WITHOUT_CLASSIFICATION	4.191802084164676E-4	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9992117017202702	WITHOUT_CLASSIFICATION	7.882982797298005E-4	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.999851543213688	WITHOUT_CLASSIFICATION	1.4845678631214923E-4	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9996109732019982	WITHOUT_CLASSIFICATION	3.890267980017763E-4	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9996770712858749	WITHOUT_CLASSIFICATION	3.2292871412514654E-4	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9996288070030491	WITHOUT_CLASSIFICATION	3.711929969507795E-4	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9996655684363007	WITHOUT_CLASSIFICATION	3.344315636993117E-4	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9996655684363007	WITHOUT_CLASSIFICATION	3.344315636993117E-4	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9997890881741461	WITHOUT_CLASSIFICATION	2.1091182585388372E-4	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9994420790451973	WITHOUT_CLASSIFICATION	5.579209548027615E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999334410272594	WITHOUT_CLASSIFICATION	6.655897274059924E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999334410272594	WITHOUT_CLASSIFICATION	6.655897274059924E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999334410272594	WITHOUT_CLASSIFICATION	6.655897274059924E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9994420790451973	WITHOUT_CLASSIFICATION	5.579209548027615E-4	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.999633715157503	WITHOUT_CLASSIFICATION	3.6628484249689547E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999334410272594	WITHOUT_CLASSIFICATION	6.655897274059924E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999334410272594	WITHOUT_CLASSIFICATION	6.655897274059924E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9995701216880002	WITHOUT_CLASSIFICATION	4.2987831199985463E-4	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9995701216880002	WITHOUT_CLASSIFICATION	4.2987831199985463E-4	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9995819853562329	WITHOUT_CLASSIFICATION	4.180146437670775E-4	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9995819853562329	WITHOUT_CLASSIFICATION	4.180146437670775E-4	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9995843419974024	WITHOUT_CLASSIFICATION	4.156580025976585E-4	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9995843419974024	WITHOUT_CLASSIFICATION	4.156580025976585E-4	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9995486828736001	WITHOUT_CLASSIFICATION	4.5131712639986536E-4	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9984570516509341	WITHOUT_CLASSIFICATION	0.0015429483490658512	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9984570516509341	WITHOUT_CLASSIFICATION	0.0015429483490658512	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9995453920127214	WITHOUT_CLASSIFICATION	4.546079872785864E-4	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9995453920127214	WITHOUT_CLASSIFICATION	4.546079872785864E-4	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9995845803508099	WITHOUT_CLASSIFICATION	4.1541964919020543E-4	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9993294496206211	WITHOUT_CLASSIFICATION	6.705503793790162E-4	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9993294496206211	WITHOUT_CLASSIFICATION	6.705503793790162E-4	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9996094567577192	WITHOUT_CLASSIFICATION	3.9054324228071733E-4	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9995646198777234	WITHOUT_CLASSIFICATION	4.353801222767212E-4	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9995421873568116	WITHOUT_CLASSIFICATION	4.5781264318850537E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9996094567577192	WITHOUT_CLASSIFICATION	3.9054324228071733E-4	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9995574492027638	WITHOUT_CLASSIFICATION	4.4255079723620733E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9993171944368416	WITHOUT_CLASSIFICATION	6.828055631583654E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9993171944368416	WITHOUT_CLASSIFICATION	6.828055631583654E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9993171944368416	WITHOUT_CLASSIFICATION	6.828055631583654E-4	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9996429677389005	WITHOUT_CLASSIFICATION	3.5703226109951784E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9995734495089879	WITHOUT_CLASSIFICATION	4.2655049101217275E-4	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9995672891258451	WITHOUT_CLASSIFICATION	4.327108741548956E-4	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9995672891258451	WITHOUT_CLASSIFICATION	4.327108741548956E-4	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.999404691625693	WITHOUT_CLASSIFICATION	5.953083743070567E-4	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9994615692665869	WITHOUT_CLASSIFICATION	5.384307334130913E-4	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9994774668112614	WITHOUT_CLASSIFICATION	5.225331887385582E-4	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9994604421088741	WITHOUT_CLASSIFICATION	5.39557891125961E-4	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.999445139097253	WITHOUT_CLASSIFICATION	5.54860902746965E-4	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9994865578409982	WITHOUT_CLASSIFICATION	5.134421590018018E-4	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9994865578409982	WITHOUT_CLASSIFICATION	5.134421590018018E-4	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9995503371165227	WITHOUT_CLASSIFICATION	4.4966288347721286E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9993171944368416	WITHOUT_CLASSIFICATION	6.828055631583654E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9995734495089879	WITHOUT_CLASSIFICATION	4.2655049101217275E-4	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9995672891258451	WITHOUT_CLASSIFICATION	4.327108741548956E-4	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.999404691625693	WITHOUT_CLASSIFICATION	5.953083743070567E-4	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9994615692665869	WITHOUT_CLASSIFICATION	5.384307334130913E-4	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9994774668112614	WITHOUT_CLASSIFICATION	5.225331887385582E-4	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9994604421088741	WITHOUT_CLASSIFICATION	5.39557891125961E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9996632401281689	WITHOUT_CLASSIFICATION	3.367598718311915E-4	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9994528921646564	WITHOUT_CLASSIFICATION	5.471078353437127E-4	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9996749533392318	WITHOUT_CLASSIFICATION	3.2504666076806614E-4	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9995924989112642	WITHOUT_CLASSIFICATION	4.075010887357949E-4	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9994845566725582	WITHOUT_CLASSIFICATION	5.154433274417665E-4	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.999577677140031	WITHOUT_CLASSIFICATION	4.223228599690757E-4	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9995739222455535	WITHOUT_CLASSIFICATION	4.2607775444654156E-4	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9995739222455535	WITHOUT_CLASSIFICATION	4.2607775444654156E-4	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999447976227313	WITHOUT_CLASSIFICATION	5.5202377268825824E-5	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999428524751294	WITHOUT_CLASSIFICATION	5.714752487058773E-5	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.999943490283069	WITHOUT_CLASSIFICATION	5.6509716931149976E-5	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999578636552958	WITHOUT_CLASSIFICATION	4.213634470406148E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999420085355909	WITHOUT_CLASSIFICATION	5.799146440917273E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999420085355909	WITHOUT_CLASSIFICATION	5.799146440917273E-5	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999289082412269	WITHOUT_CLASSIFICATION	7.109175877302705E-5	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999343807538702	WITHOUT_CLASSIFICATION	6.561924612981439E-5	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999414189801485	WITHOUT_CLASSIFICATION	5.858101985142408E-5	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999414189801485	WITHOUT_CLASSIFICATION	5.858101985142408E-5	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999428594353742	WITHOUT_CLASSIFICATION	5.714056462571884E-5	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999475150403392	WITHOUT_CLASSIFICATION	5.2484959660772284E-5	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.999445139097253	WITHOUT_CLASSIFICATION	5.54860902746965E-4	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9993769958156468	WITHOUT_CLASSIFICATION	6.230041843532686E-4	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999500084215462	WITHOUT_CLASSIFICATION	4.999157845369005E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9996765723562375	WITHOUT_CLASSIFICATION	3.234276437625251E-4	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9996634105047761	WITHOUT_CLASSIFICATION	3.365894952238726E-4	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.9996549415131197	WITHOUT_CLASSIFICATION	3.450584868802483E-4	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9995809967516213	WITHOUT_CLASSIFICATION	4.190032483787173E-4	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9998280913365426	WITHOUT_CLASSIFICATION	1.7190866345734204E-4	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9998905475523507	WITHOUT_CLASSIFICATION	1.0945244764921961E-4	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9998056676507912	WITHOUT_CLASSIFICATION	1.943323492088109E-4	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9998056676507912	WITHOUT_CLASSIFICATION	1.943323492088109E-4	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9996120560766978	WITHOUT_CLASSIFICATION	3.879439233022534E-4	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9996120560766978	WITHOUT_CLASSIFICATION	3.879439233022534E-4	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9995782489795945	WITHOUT_CLASSIFICATION	4.217510204055659E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9995444881625578	WITHOUT_CLASSIFICATION	4.555118374421746E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9995444881625578	WITHOUT_CLASSIFICATION	4.555118374421746E-4	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9995444881625578	WITHOUT_CLASSIFICATION	4.555118374421746E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9994055601724208	WITHOUT_CLASSIFICATION	5.944398275791898E-4	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9993749270780254	WITHOUT_CLASSIFICATION	6.250729219746638E-4	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9993749270780254	WITHOUT_CLASSIFICATION	6.250729219746638E-4	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9996673955671839	WITHOUT_CLASSIFICATION	3.326044328161583E-4	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9995190851984641	WITHOUT_CLASSIFICATION	4.809148015358597E-4	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.999392874358486	WITHOUT_CLASSIFICATION	6.071256415139005E-4	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9990858627014517	WITHOUT_CLASSIFICATION	9.141372985484335E-4	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9994397739521497	WITHOUT_CLASSIFICATION	5.602260478501956E-4	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9993504576816974	WITHOUT_CLASSIFICATION	6.495423183025944E-4	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9998281885322432	WITHOUT_CLASSIFICATION	1.718114677568461E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9994526310183489	WITHOUT_CLASSIFICATION	5.473689816510815E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9994526310183489	WITHOUT_CLASSIFICATION	5.473689816510815E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9994055601724208	WITHOUT_CLASSIFICATION	5.944398275791898E-4	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9996673955671839	WITHOUT_CLASSIFICATION	3.326044328161583E-4	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9996931495132049	WITHOUT_CLASSIFICATION	3.0685048679515E-4	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9995190851984641	WITHOUT_CLASSIFICATION	4.809148015358597E-4	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.999392874358486	WITHOUT_CLASSIFICATION	6.071256415139005E-4	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9998246446529034	WITHOUT_CLASSIFICATION	1.753553470964831E-4	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9993243907187114	WITHOUT_CLASSIFICATION	6.756092812885001E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9994881191801326	WITHOUT_CLASSIFICATION	5.118808198673949E-4	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9995064183484326	WITHOUT_CLASSIFICATION	4.935816515675267E-4	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9994519595419502	WITHOUT_CLASSIFICATION	5.480404580497091E-4	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9995327963393952	WITHOUT_CLASSIFICATION	4.672036606047743E-4	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9998246446529034	WITHOUT_CLASSIFICATION	1.753553470964831E-4	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9998607425101443	WITHOUT_CLASSIFICATION	1.3925748985568534E-4	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9998607425101443	WITHOUT_CLASSIFICATION	1.3925748985568534E-4	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9995200382796128	WITHOUT_CLASSIFICATION	4.7996172038717824E-4	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9995447644171668	WITHOUT_CLASSIFICATION	4.552355828333127E-4	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9996293736658747	WITHOUT_CLASSIFICATION	3.706263341252788E-4	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9996110157167636	WITHOUT_CLASSIFICATION	3.8898428323638345E-4	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9997083872970348	WITHOUT_CLASSIFICATION	2.9161270296520185E-4	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9997812307428361	WITHOUT_CLASSIFICATION	2.1876925716378555E-4	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9994735973050002	WITHOUT_CLASSIFICATION	5.264026949998759E-4	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.999724214473702	WITHOUT_CLASSIFICATION	2.7578552629800774E-4	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9995983688614658	WITHOUT_CLASSIFICATION	4.016311385341268E-4	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9993413901002135	WITHOUT_CLASSIFICATION	6.5860989978651E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9996865269116246	WITHOUT_CLASSIFICATION	3.134730883754068E-4	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9996110157167636	WITHOUT_CLASSIFICATION	3.8898428323638345E-4	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9997083872970348	WITHOUT_CLASSIFICATION	2.9161270296520185E-4	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9995440759741643	WITHOUT_CLASSIFICATION	4.559240258356863E-4	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9993350783263274	WITHOUT_CLASSIFICATION	6.649216736725746E-4	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.999752005698555	WITHOUT_CLASSIFICATION	2.479943014449112E-4	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9994009341637565	WITHOUT_CLASSIFICATION	5.990658362434884E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9994689285649059	WITHOUT_CLASSIFICATION	5.310714350941166E-4	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9994650334305237	WITHOUT_CLASSIFICATION	5.349665694762546E-4	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.999392874358486	WITHOUT_CLASSIFICATION	6.071256415139005E-4	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.999436077956478	WITHOUT_CLASSIFICATION	5.639220435218619E-4	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.999471047201302	WITHOUT_CLASSIFICATION	5.289527986980215E-4	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9993460636803982	WITHOUT_CLASSIFICATION	6.53936319601735E-4	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9996925843856532	WITHOUT_CLASSIFICATION	3.074156143468222E-4	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.999726479979541	WITHOUT_CLASSIFICATION	2.7352002045892917E-4	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999744609372847	WITHOUT_CLASSIFICATION	2.553906271532964E-5	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9997537659972171	WITHOUT_CLASSIFICATION	2.462340027829435E-4	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.999359284401201	WITHOUT_CLASSIFICATION	6.407155987989291E-4	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9998731575680295	WITHOUT_CLASSIFICATION	1.2684243197053313E-4	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9996299814514857	WITHOUT_CLASSIFICATION	3.700185485142413E-4	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.999359284401201	WITHOUT_CLASSIFICATION	6.407155987989291E-4	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9998731575680295	WITHOUT_CLASSIFICATION	1.2684243197053313E-4	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9995442582458886	WITHOUT_CLASSIFICATION	4.557417541115326E-4	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9998006976237953	WITHOUT_CLASSIFICATION	1.9930237620465664E-4	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9997481157077095	WITHOUT_CLASSIFICATION	2.5188429229051044E-4	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9996995126090795	WITHOUT_CLASSIFICATION	3.004873909204479E-4	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9997373792578966	WITHOUT_CLASSIFICATION	2.6262074210331226E-4	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9997655606663116	WITHOUT_CLASSIFICATION	2.3443933368837798E-4	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9994704886185073	WITHOUT_CLASSIFICATION	5.295113814927499E-4	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9992411816631295	WITHOUT_CLASSIFICATION	7.588183368705867E-4	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.999385236668138	WITHOUT_CLASSIFICATION	6.147633318619714E-4	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9786625733649992	WITHOUT_CLASSIFICATION	0.021337426635000864	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9994792742665195	WITHOUT_CLASSIFICATION	5.207257334804071E-4	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9995807113738306	WITHOUT_CLASSIFICATION	4.192886261693537E-4	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9996676586441265	WITHOUT_CLASSIFICATION	3.323413558735382E-4	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9995637932121483	WITHOUT_CLASSIFICATION	4.3620678785175103E-4	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.999884899990073	WITHOUT_CLASSIFICATION	1.1510000992700616E-4	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9996188374110475	WITHOUT_CLASSIFICATION	3.8116258895257827E-4	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999275411591688	WITHOUT_CLASSIFICATION	7.245884083119E-5	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9994899879939864	WITHOUT_CLASSIFICATION	5.100120060136373E-4	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9994235920669925	WITHOUT_CLASSIFICATION	5.764079330074295E-4	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9995405920483511	WITHOUT_CLASSIFICATION	4.5940795164891066E-4	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9996134820021816	WITHOUT_CLASSIFICATION	3.8651799781838083E-4	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9996134820021816	WITHOUT_CLASSIFICATION	3.8651799781838083E-4	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9995159084806017	WITHOUT_CLASSIFICATION	4.840915193982893E-4	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9995159084806017	WITHOUT_CLASSIFICATION	4.840915193982893E-4	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9996850241743397	WITHOUT_CLASSIFICATION	3.149758256603285E-4	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9996850241743397	WITHOUT_CLASSIFICATION	3.149758256603285E-4	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9995932070955608	WITHOUT_CLASSIFICATION	4.06792904439281E-4	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9996281951822175	WITHOUT_CLASSIFICATION	3.7180481778253596E-4	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9997331498665848	WITHOUT_CLASSIFICATION	2.668501334151555E-4	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9996650358809781	WITHOUT_CLASSIFICATION	3.3496411902192495E-4	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9998571903453374	WITHOUT_CLASSIFICATION	1.4280965466256058E-4	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.999776399800648	WITHOUT_CLASSIFICATION	2.2360019935197532E-4	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.999599845400595	WITHOUT_CLASSIFICATION	4.001545994050672E-4	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9995779585960618	WITHOUT_CLASSIFICATION	4.2204140393814195E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9994526310183489	WITHOUT_CLASSIFICATION	5.473689816510815E-4	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9995932070955608	WITHOUT_CLASSIFICATION	4.06792904439281E-4	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9996281951822175	WITHOUT_CLASSIFICATION	3.7180481778253596E-4	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9997331498665848	WITHOUT_CLASSIFICATION	2.668501334151555E-4	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9998571903453374	WITHOUT_CLASSIFICATION	1.4280965466256058E-4	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.999776399800648	WITHOUT_CLASSIFICATION	2.2360019935197532E-4	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9995035217328083	WITHOUT_CLASSIFICATION	4.964782671917348E-4	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9994769521754692	WITHOUT_CLASSIFICATION	5.230478245308083E-4	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9987902814726504	WITHOUT_CLASSIFICATION	0.0012097185273497106	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9987902814726504	WITHOUT_CLASSIFICATION	0.0012097185273497106	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9993854902039819	WITHOUT_CLASSIFICATION	6.145097960180841E-4	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9994936703524981	WITHOUT_CLASSIFICATION	5.063296475018214E-4	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9997865368532891	WITHOUT_CLASSIFICATION	2.1346314671081952E-4	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.99954449354127	WITHOUT_CLASSIFICATION	4.555064587300166E-4	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.99954449354127	WITHOUT_CLASSIFICATION	4.555064587300166E-4	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9996224617333479	WITHOUT_CLASSIFICATION	3.7753826665205343E-4	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9996288802244824	WITHOUT_CLASSIFICATION	3.7111977551760944E-4	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9996964501455486	WITHOUT_CLASSIFICATION	3.035498544513849E-4	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9996033396679329	WITHOUT_CLASSIFICATION	3.9666033206705713E-4	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9998362802810028	WITHOUT_CLASSIFICATION	1.6371971899727203E-4	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9994217803911515	WITHOUT_CLASSIFICATION	5.782196088485721E-4	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9998232046303439	WITHOUT_CLASSIFICATION	1.7679536965603694E-4	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9995808197915835	WITHOUT_CLASSIFICATION	4.191802084164676E-4	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9992117017202702	WITHOUT_CLASSIFICATION	7.882982797298005E-4	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9996770712858749	WITHOUT_CLASSIFICATION	3.2292871412514654E-4	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9996288070030491	WITHOUT_CLASSIFICATION	3.711929969507795E-4	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9996224617333479	WITHOUT_CLASSIFICATION	3.7753826665205343E-4	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9996288802244824	WITHOUT_CLASSIFICATION	3.7111977551760944E-4	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9996033396679329	WITHOUT_CLASSIFICATION	3.9666033206705713E-4	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9996322369568053	WITHOUT_CLASSIFICATION	3.6776304319481573E-4	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9997865368532891	WITHOUT_CLASSIFICATION	2.1346314671081952E-4	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9997865368532891	WITHOUT_CLASSIFICATION	2.1346314671081952E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9996865269116246	WITHOUT_CLASSIFICATION	3.134730883754068E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9996865269116246	WITHOUT_CLASSIFICATION	3.134730883754068E-4	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9993776371206341	WITHOUT_CLASSIFICATION	6.223628793658666E-4	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9993776371206341	WITHOUT_CLASSIFICATION	6.223628793658666E-4	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9998907660099149	WITHOUT_CLASSIFICATION	1.0923399008503394E-4	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9996531838181172	WITHOUT_CLASSIFICATION	3.468161818828094E-4	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9994748662229503	WITHOUT_CLASSIFICATION	5.251337770496442E-4	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9997890010020658	WITHOUT_CLASSIFICATION	2.109989979342318E-4	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999149045806893	WITHOUT_CLASSIFICATION	8.509541931063148E-5	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9997627488349037	WITHOUT_CLASSIFICATION	2.3725116509638847E-4	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9998297129484668	WITHOUT_CLASSIFICATION	1.702870515332079E-4	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999358189281	WITHOUT_CLASSIFICATION	6.418107189992575E-5	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9997181291018175	WITHOUT_CLASSIFICATION	2.8187089818254113E-4	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9995386995419747	WITHOUT_CLASSIFICATION	4.6130045802528485E-4	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9995639948539476	WITHOUT_CLASSIFICATION	4.36005146052409E-4	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9998415825070449	WITHOUT_CLASSIFICATION	1.584174929551073E-4	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9997582214165789	WITHOUT_CLASSIFICATION	2.4177858342106276E-4	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999349448246156	WITHOUT_CLASSIFICATION	6.505517538441566E-5	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9998898528473497	WITHOUT_CLASSIFICATION	1.1014715265028725E-4	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9993292892543105	WITHOUT_CLASSIFICATION	6.707107456893625E-4	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9993920043395299	WITHOUT_CLASSIFICATION	6.079956604701827E-4	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9994250946214884	WITHOUT_CLASSIFICATION	5.749053785114704E-4	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.999672700988906	WITHOUT_CLASSIFICATION	3.272990110939972E-4	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9998232046303439	WITHOUT_CLASSIFICATION	1.7679536965603694E-4	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9992117017202702	WITHOUT_CLASSIFICATION	7.882982797298005E-4	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9996655684363007	WITHOUT_CLASSIFICATION	3.344315636993117E-4	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9995672891258451	WITHOUT_CLASSIFICATION	4.327108741548956E-4	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9995672891258451	WITHOUT_CLASSIFICATION	4.327108741548956E-4	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9996322369568053	WITHOUT_CLASSIFICATION	3.6776304319481573E-4	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9997865368532891	WITHOUT_CLASSIFICATION	2.1346314671081952E-4	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9996865269116246	WITHOUT_CLASSIFICATION	3.134730883754068E-4	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9993776371206341	WITHOUT_CLASSIFICATION	6.223628793658666E-4	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9998511444810311	WITHOUT_CLASSIFICATION	1.488555189690073E-4	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9998672148587704	WITHOUT_CLASSIFICATION	1.327851412296628E-4	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9997855999436761	WITHOUT_CLASSIFICATION	2.1440005632398796E-4	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.999830887487413	WITHOUT_CLASSIFICATION	1.6911251258699516E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9998553718939699	WITHOUT_CLASSIFICATION	1.4462810603015484E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9998553718939699	WITHOUT_CLASSIFICATION	1.4462810603015484E-4	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9998739321775578	WITHOUT_CLASSIFICATION	1.2606782244212105E-4	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9994087948695074	WITHOUT_CLASSIFICATION	5.912051304926577E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9994038170533788	WITHOUT_CLASSIFICATION	5.961829466212167E-4	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9994175430941518	WITHOUT_CLASSIFICATION	5.824569058483262E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9995265296423668	WITHOUT_CLASSIFICATION	4.734703576331354E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9995265296423668	WITHOUT_CLASSIFICATION	4.734703576331354E-4	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9984710641412762	WITHOUT_CLASSIFICATION	0.0015289358587237299	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9993677290103617	WITHOUT_CLASSIFICATION	6.322709896383021E-4	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9996884052084382	WITHOUT_CLASSIFICATION	3.1159479156190863E-4	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9997509391984086	WITHOUT_CLASSIFICATION	2.490608015913193E-4	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.999623084234482	WITHOUT_CLASSIFICATION	3.7691576551798675E-4	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9998826562363003	WITHOUT_CLASSIFICATION	1.1734376369961968E-4	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9993314315949386	WITHOUT_CLASSIFICATION	6.685684050612488E-4	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9996035344178226	WITHOUT_CLASSIFICATION	3.9646558217736386E-4	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.999426267592782	WITHOUT_CLASSIFICATION	5.737324072180021E-4	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9983964216616438	WITHOUT_CLASSIFICATION	0.0016035783383563285	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9994887271785666	WITHOUT_CLASSIFICATION	5.11272821433331E-4	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999211582561067	WITHOUT_CLASSIFICATION	7.88417438932062E-5	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9984260193724657	WITHOUT_CLASSIFICATION	0.0015739806275343073	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9998553391938096	WITHOUT_CLASSIFICATION	1.4466080619042273E-4	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9996253749610261	WITHOUT_CLASSIFICATION	3.7462503897386885E-4	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9998869053452866	WITHOUT_CLASSIFICATION	1.13094654713532E-4	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9998836294325166	WITHOUT_CLASSIFICATION	1.1637056748336097E-4	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9997488986585759	WITHOUT_CLASSIFICATION	2.5110134142413733E-4	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999903575231522	WITHOUT_CLASSIFICATION	9.642476847851947E-6	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9993866630341838	WITHOUT_CLASSIFICATION	6.13336965816186E-4	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9990387369486381	WITHOUT_CLASSIFICATION	9.612630513618435E-4	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9993250164930565	WITHOUT_CLASSIFICATION	6.749835069435584E-4	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9993250164930565	WITHOUT_CLASSIFICATION	6.749835069435584E-4	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9993372411268152	WITHOUT_CLASSIFICATION	6.627588731847148E-4	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9997711035822544	WITHOUT_CLASSIFICATION	2.2889641774567025E-4	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9996502754397457	WITHOUT_CLASSIFICATION	3.4972456025420115E-4	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9996502754397457	WITHOUT_CLASSIFICATION	3.4972456025420115E-4	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9992120777214242	WITHOUT_CLASSIFICATION	7.879222785757316E-4	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9996864891642674	WITHOUT_CLASSIFICATION	3.135108357326848E-4	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9994726077944751	WITHOUT_CLASSIFICATION	5.273922055248978E-4	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999163428233977	WITHOUT_CLASSIFICATION	8.365717660231406E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999163428233977	WITHOUT_CLASSIFICATION	8.365717660231406E-5	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9993750529430893	WITHOUT_CLASSIFICATION	6.249470569106505E-4	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9997931518912213	WITHOUT_CLASSIFICATION	2.0684810877871708E-4	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9997607658301931	WITHOUT_CLASSIFICATION	2.3923416980695637E-4	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.999877045897752	WITHOUT_CLASSIFICATION	1.2295410224804045E-4	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9997836055585443	WITHOUT_CLASSIFICATION	2.1639444145559613E-4	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9998082733520763	WITHOUT_CLASSIFICATION	1.9172664792358016E-4	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9996586523866434	WITHOUT_CLASSIFICATION	3.4134761335658664E-4	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9995826230331715	WITHOUT_CLASSIFICATION	4.173769668285084E-4	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9994212468247656	WITHOUT_CLASSIFICATION	5.787531752344628E-4	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9996577286615217	WITHOUT_CLASSIFICATION	3.42271338478341E-4	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.999544695746899	WITHOUT_CLASSIFICATION	4.553042531011484E-4	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9993417612950016	WITHOUT_CLASSIFICATION	6.582387049984137E-4	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9993446366022555	WITHOUT_CLASSIFICATION	6.553633977444779E-4	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999259975265967	WITHOUT_CLASSIFICATION	7.400247340320589E-5	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9963424620817666	WITHOUT_CLASSIFICATION	0.0036575379182334877	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.999817184885681	WITHOUT_CLASSIFICATION	1.828151143189243E-4	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9998657533772711	WITHOUT_CLASSIFICATION	1.3424662272887064E-4	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9994329191356004	WITHOUT_CLASSIFICATION	5.670808643996175E-4	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9994028985052215	WITHOUT_CLASSIFICATION	5.971014947784753E-4	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9992793699392966	WITHOUT_CLASSIFICATION	7.206300607033484E-4	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9996116259454538	WITHOUT_CLASSIFICATION	3.883740545461668E-4	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9994626379725248	WITHOUT_CLASSIFICATION	5.373620274752861E-4	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9994869843693294	WITHOUT_CLASSIFICATION	5.130156306706643E-4	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9995104871754386	WITHOUT_CLASSIFICATION	4.895128245614036E-4	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9996044999309869	WITHOUT_CLASSIFICATION	3.9550006901319925E-4	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9998822179846133	WITHOUT_CLASSIFICATION	1.1778201538668631E-4	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9997945187748235	WITHOUT_CLASSIFICATION	2.0548122517645613E-4	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999475230681715	WITHOUT_CLASSIFICATION	5.247693182851258E-5	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9994296061233083	WITHOUT_CLASSIFICATION	5.703938766916487E-4	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9998402030872495	WITHOUT_CLASSIFICATION	1.597969127503524E-4	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999110133401159	WITHOUT_CLASSIFICATION	8.898665988418773E-5	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999259975265967	WITHOUT_CLASSIFICATION	7.400247340320589E-5	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999475230681715	WITHOUT_CLASSIFICATION	5.247693182851258E-5	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9994296061233083	WITHOUT_CLASSIFICATION	5.703938766916487E-4	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999110133401159	WITHOUT_CLASSIFICATION	8.898665988418773E-5	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999293922171582	WITHOUT_CLASSIFICATION	7.060778284176398E-5	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9997120463611057	WITHOUT_CLASSIFICATION	2.879536388943074E-4	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9997083529653794	WITHOUT_CLASSIFICATION	2.916470346206306E-4	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.999477930821702	WITHOUT_CLASSIFICATION	5.220691782978983E-4	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.999768949560118	WITHOUT_CLASSIFICATION	2.310504398819659E-4	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999541169578935	WITHOUT_CLASSIFICATION	4.588304210654744E-5	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9993966927086596	WITHOUT_CLASSIFICATION	6.033072913403884E-4	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9993796715767861	WITHOUT_CLASSIFICATION	6.203284232139887E-4	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9994382548965429	WITHOUT_CLASSIFICATION	5.61745103457032E-4	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9997224529270747	WITHOUT_CLASSIFICATION	2.775470729251985E-4	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9996823301535142	WITHOUT_CLASSIFICATION	3.176698464858518E-4	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9996823301535142	WITHOUT_CLASSIFICATION	3.176698464858518E-4	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9996895518935298	WITHOUT_CLASSIFICATION	3.104481064701885E-4	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9997421123858381	WITHOUT_CLASSIFICATION	2.57887614161895E-4	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9996295988396825	WITHOUT_CLASSIFICATION	3.704011603174761E-4	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9993288441947461	WITHOUT_CLASSIFICATION	6.71155805253878E-4	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9998483252503633	WITHOUT_CLASSIFICATION	1.5167474963670593E-4	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9998107425530219	WITHOUT_CLASSIFICATION	1.8925744697797307E-4	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9994553448549786	WITHOUT_CLASSIFICATION	5.446551450214444E-4	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999429002364305	WITHOUT_CLASSIFICATION	5.7099763569356123E-5	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9998357921271641	WITHOUT_CLASSIFICATION	1.642078728358275E-4	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9998570762543295	WITHOUT_CLASSIFICATION	1.4292374567051596E-4	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9997277155908701	WITHOUT_CLASSIFICATION	2.7228440912983014E-4	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9998952136718038	WITHOUT_CLASSIFICATION	1.0478632819617681E-4	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9998877231683857	WITHOUT_CLASSIFICATION	1.1227683161420448E-4	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9998094362802852	WITHOUT_CLASSIFICATION	1.9056371971485226E-4	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9996816296266299	WITHOUT_CLASSIFICATION	3.1837037337007656E-4	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.999268668547685	WITHOUT_CLASSIFICATION	7.313314523149623E-4	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9994575568332025	WITHOUT_CLASSIFICATION	5.424431667975214E-4	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9993867975780747	WITHOUT_CLASSIFICATION	6.132024219252315E-4	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9994034353114303	WITHOUT_CLASSIFICATION	5.965646885698044E-4	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.999604585155468	WITHOUT_CLASSIFICATION	3.954148445319711E-4	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9996006066607998	WITHOUT_CLASSIFICATION	3.9939333920032126E-4	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9995956711714978	WITHOUT_CLASSIFICATION	4.043288285021702E-4	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9997130029372286	WITHOUT_CLASSIFICATION	2.8699706277134855E-4	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.999563444229619	WITHOUT_CLASSIFICATION	4.3655577038114135E-4	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9993920205080092	WITHOUT_CLASSIFICATION	6.079794919908087E-4	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9995301950682624	WITHOUT_CLASSIFICATION	4.6980493173763745E-4	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9998965491241826	WITHOUT_CLASSIFICATION	1.0345087581746714E-4	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9997855081425882	WITHOUT_CLASSIFICATION	2.144918574118758E-4	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.9995801320616526	WITHOUT_CLASSIFICATION	4.198679383473944E-4	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9994778885402749	WITHOUT_CLASSIFICATION	5.221114597250061E-4	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9996789579583286	WITHOUT_CLASSIFICATION	3.210420416713458E-4	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9994847381933754	WITHOUT_CLASSIFICATION	5.152618066247195E-4	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999530546827932	WITHOUT_CLASSIFICATION	4.694531720695551E-5	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999115145945167	WITHOUT_CLASSIFICATION	8.848540548331841E-5	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9997353419516678	WITHOUT_CLASSIFICATION	2.646580483321808E-4	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9996806650163065	WITHOUT_CLASSIFICATION	3.1933498369355283E-4	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999103246149599	WITHOUT_CLASSIFICATION	8.967538504005242E-5	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9997446747208382	WITHOUT_CLASSIFICATION	2.55325279161848E-4	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9996410057561758	WITHOUT_CLASSIFICATION	3.5899424382434777E-4	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9996391251159128	WITHOUT_CLASSIFICATION	3.608748840872372E-4	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9997030924520229	WITHOUT_CLASSIFICATION	2.9690754797705925E-4	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9997444715197094	WITHOUT_CLASSIFICATION	2.5552848029063857E-4	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.9993530443255713	WITHOUT_CLASSIFICATION	6.469556744287579E-4	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9998420153613774	WITHOUT_CLASSIFICATION	1.5798463862258885E-4	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.99978206218177	WITHOUT_CLASSIFICATION	2.179378182300429E-4	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999580429006151	WITHOUT_CLASSIFICATION	4.1957099384986994E-5	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9997485924228671	WITHOUT_CLASSIFICATION	2.5140757713294786E-4	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9997804289759025	WITHOUT_CLASSIFICATION	2.1957102409743312E-4	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.999944165547153	WITHOUT_CLASSIFICATION	5.583445284700238E-5	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9998232139153314	WITHOUT_CLASSIFICATION	1.7678608466861517E-4	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9995333874481497	WITHOUT_CLASSIFICATION	4.6661255185034183E-4	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.999908362753399	WITHOUT_CLASSIFICATION	9.163724660107287E-5	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9998731832248511	WITHOUT_CLASSIFICATION	1.268167751488657E-4	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9996896559436899	WITHOUT_CLASSIFICATION	3.1034405631014827E-4	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.999840518250231	WITHOUT_CLASSIFICATION	1.5948174976898006E-4	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9997815632911531	WITHOUT_CLASSIFICATION	2.1843670884684938E-4	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.999566660284	WITHOUT_CLASSIFICATION	4.3333971599995586E-4	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9989968204894182	WITHOUT_CLASSIFICATION	0.0010031795105818115	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9939550013368607	WITHOUT_CLASSIFICATION	0.006044998663139357	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9993845019283208	WITHOUT_CLASSIFICATION	6.154980716791855E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9993845019283208	WITHOUT_CLASSIFICATION	6.154980716791855E-4	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9998143929626613	WITHOUT_CLASSIFICATION	1.8560703733860024E-4	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9994233455816635	WITHOUT_CLASSIFICATION	5.766544183365105E-4	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999791197403557	WITHOUT_CLASSIFICATION	2.0880259644298193E-4	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9998139485738542	WITHOUT_CLASSIFICATION	1.8605142614580697E-4	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9998162423888832	WITHOUT_CLASSIFICATION	1.8375761111686834E-4	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9995943837131434	WITHOUT_CLASSIFICATION	4.0561628685663185E-4	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9994554575863202	WITHOUT_CLASSIFICATION	5.445424136798588E-4	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9994388568624659	WITHOUT_CLASSIFICATION	5.611431375341432E-4	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9998169040286254	WITHOUT_CLASSIFICATION	1.8309597137448623E-4	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9995522600902755	WITHOUT_CLASSIFICATION	4.477399097245558E-4	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9997875640989132	WITHOUT_CLASSIFICATION	2.1243590108687403E-4	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9995821196294046	WITHOUT_CLASSIFICATION	4.1788037059550223E-4	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9993916601417394	WITHOUT_CLASSIFICATION	6.083398582606088E-4	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9997638132976286	WITHOUT_CLASSIFICATION	2.361867023714021E-4	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9996955642220021	WITHOUT_CLASSIFICATION	3.0443577799786164E-4	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9995679681787668	WITHOUT_CLASSIFICATION	4.320318212331298E-4	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9995454816249775	WITHOUT_CLASSIFICATION	4.5451837502254194E-4	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9997921403601111	WITHOUT_CLASSIFICATION	2.0785963988888837E-4	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9998094048053263	WITHOUT_CLASSIFICATION	1.905951946736349E-4	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9998193902360037	WITHOUT_CLASSIFICATION	1.806097639961857E-4	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9997793894007413	WITHOUT_CLASSIFICATION	2.206105992586735E-4	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9997833833145848	WITHOUT_CLASSIFICATION	2.1661668541513214E-4	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.999735644363368	WITHOUT_CLASSIFICATION	2.643556366319343E-4	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999506143931643	WITHOUT_CLASSIFICATION	4.9385606835713856E-5	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9997400490958757	WITHOUT_CLASSIFICATION	2.5995090412428895E-4	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9997057479867089	WITHOUT_CLASSIFICATION	2.9425201329122267E-4	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.99963351493589	WITHOUT_CLASSIFICATION	3.6648506410995367E-4	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9992101472808727	WITHOUT_CLASSIFICATION	7.898527191273248E-4	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9996987010055403	WITHOUT_CLASSIFICATION	3.0129899445970775E-4	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9994618536453788	WITHOUT_CLASSIFICATION	5.381463546212268E-4	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.999856619258411	WITHOUT_CLASSIFICATION	1.4338074158909737E-4	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9998685111245215	WITHOUT_CLASSIFICATION	1.3148887547851303E-4	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9998650028031972	WITHOUT_CLASSIFICATION	1.3499719680265486E-4	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9994249092176186	WITHOUT_CLASSIFICATION	5.750907823812983E-4	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9998650028031972	WITHOUT_CLASSIFICATION	1.3499719680265486E-4	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9996925868572422	WITHOUT_CLASSIFICATION	3.074131427578938E-4	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9995482654930997	WITHOUT_CLASSIFICATION	4.517345069002019E-4	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9995482654930997	WITHOUT_CLASSIFICATION	4.517345069002019E-4	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9995482654930997	WITHOUT_CLASSIFICATION	4.517345069002019E-4	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999104840595086	WITHOUT_CLASSIFICATION	8.951594049156656E-5	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999104840595086	WITHOUT_CLASSIFICATION	8.951594049156656E-5	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9998975529015388	WITHOUT_CLASSIFICATION	1.0244709846125952E-4	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9997029757545478	WITHOUT_CLASSIFICATION	2.9702424545212716E-4	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999675053144929	WITHOUT_CLASSIFICATION	3.249468550719732E-5	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.996036363292083	WITHOUT_CLASSIFICATION	0.003963636707916903	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9998165963036398	WITHOUT_CLASSIFICATION	1.8340369636027197E-4	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9995193150300328	WITHOUT_CLASSIFICATION	4.8068496996727186E-4	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9994994360048425	WITHOUT_CLASSIFICATION	5.00563995157595E-4	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9998475597253548	WITHOUT_CLASSIFICATION	1.5244027464530156E-4	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9996843110249464	WITHOUT_CLASSIFICATION	3.156889750536914E-4	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9998425423260101	WITHOUT_CLASSIFICATION	1.574576739898809E-4	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9995858879825124	WITHOUT_CLASSIFICATION	4.141120174875406E-4	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9994617839251683	WITHOUT_CLASSIFICATION	5.3821607483172E-4	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.999680286549176	WITHOUT_CLASSIFICATION	3.197134508240308E-4	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9993165617192186	WITHOUT_CLASSIFICATION	6.834382807814774E-4	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9994563873187035	WITHOUT_CLASSIFICATION	5.43612681296539E-4	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9995762808682661	WITHOUT_CLASSIFICATION	4.2371913173390566E-4	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999338250183191	WITHOUT_CLASSIFICATION	6.61749816809461E-5	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.999452433277041	WITHOUT_CLASSIFICATION	5.475667229589822E-4	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.999452433277041	WITHOUT_CLASSIFICATION	5.475667229589822E-4	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9993516490259252	WITHOUT_CLASSIFICATION	6.483509740749203E-4	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9995994143017447	WITHOUT_CLASSIFICATION	4.0058569825526715E-4	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9995994143017447	WITHOUT_CLASSIFICATION	4.0058569825526715E-4	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9998841772916963	WITHOUT_CLASSIFICATION	1.1582270830359457E-4	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9995115145956137	WITHOUT_CLASSIFICATION	4.884854043861986E-4	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9994213648486222	WITHOUT_CLASSIFICATION	5.786351513778216E-4	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9993420187154578	WITHOUT_CLASSIFICATION	6.579812845421546E-4	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.999492331184444	WITHOUT_CLASSIFICATION	5.076688155559088E-4	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9994949335792066	WITHOUT_CLASSIFICATION	5.05066420793382E-4	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9994304757804882	WITHOUT_CLASSIFICATION	5.695242195118539E-4	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9995099943428543	WITHOUT_CLASSIFICATION	4.900056571457468E-4	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9995890301768275	WITHOUT_CLASSIFICATION	4.1096982317255954E-4	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9994117661874404	WITHOUT_CLASSIFICATION	5.882338125595678E-4	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9994693131364798	WITHOUT_CLASSIFICATION	5.306868635201609E-4	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9995762324882661	WITHOUT_CLASSIFICATION	4.237675117338779E-4	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9993047102990614	WITHOUT_CLASSIFICATION	6.952897009386545E-4	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.999642053637718	WITHOUT_CLASSIFICATION	3.5794636228195925E-4	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9998475597253548	WITHOUT_CLASSIFICATION	1.5244027464530156E-4	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9993916601417394	WITHOUT_CLASSIFICATION	6.083398582606088E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9996292683307814	WITHOUT_CLASSIFICATION	3.7073166921859386E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9995366111256127	WITHOUT_CLASSIFICATION	4.63388874387367E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9995366111256127	WITHOUT_CLASSIFICATION	4.63388874387367E-4	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9995912407863443	WITHOUT_CLASSIFICATION	4.0875921365571803E-4	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9997871858049553	WITHOUT_CLASSIFICATION	2.1281419504476636E-4	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9995935891186172	WITHOUT_CLASSIFICATION	4.0641088138294304E-4	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9995528270031857	WITHOUT_CLASSIFICATION	4.47172996814275E-4	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9997747031702937	WITHOUT_CLASSIFICATION	2.252968297062794E-4	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9997681869171529	WITHOUT_CLASSIFICATION	2.3181308284722968E-4	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9996828755394958	WITHOUT_CLASSIFICATION	3.1712446050416796E-4	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9995574749231289	WITHOUT_CLASSIFICATION	4.4252507687119684E-4	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999416169105486	WITHOUT_CLASSIFICATION	5.838308945131605E-5	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9996932320174271	WITHOUT_CLASSIFICATION	3.067679825728155E-4	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9981813998546291	WITHOUT_CLASSIFICATION	0.0018186001453709213	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9995735497243768	WITHOUT_CLASSIFICATION	4.2645027562321407E-4	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9995388009898735	WITHOUT_CLASSIFICATION	4.6119901012656335E-4	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9995349624783157	WITHOUT_CLASSIFICATION	4.65037521684369E-4	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999017665525576	WITHOUT_CLASSIFICATION	9.82334474424561E-5	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9995266925029931	WITHOUT_CLASSIFICATION	4.7330749700683566E-4	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9993787303789591	WITHOUT_CLASSIFICATION	6.212696210408994E-4	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9994715691252326	WITHOUT_CLASSIFICATION	5.28430874767309E-4	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9995505406427194	WITHOUT_CLASSIFICATION	4.494593572805359E-4	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9993776801334707	WITHOUT_CLASSIFICATION	6.223198665291804E-4	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9995460234161553	WITHOUT_CLASSIFICATION	4.5397658384470016E-4	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9992190032298855	WITHOUT_CLASSIFICATION	7.809967701144507E-4	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9998775339976437	WITHOUT_CLASSIFICATION	1.2246600235636164E-4	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9997585544036024	WITHOUT_CLASSIFICATION	2.4144559639767866E-4	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9994002064695834	WITHOUT_CLASSIFICATION	5.997935304167021E-4	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9995572805391215	WITHOUT_CLASSIFICATION	4.427194608784372E-4	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9992817977386784	WITHOUT_CLASSIFICATION	7.182022613215175E-4	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9996374897823201	WITHOUT_CLASSIFICATION	3.625102176798064E-4	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9995613079992764	WITHOUT_CLASSIFICATION	4.386920007235565E-4	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.999825704626778	WITHOUT_CLASSIFICATION	1.742953732220341E-4	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9996680236264112	WITHOUT_CLASSIFICATION	3.3197637358881407E-4	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9993319826483731	WITHOUT_CLASSIFICATION	6.680173516269712E-4	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9996669099560789	WITHOUT_CLASSIFICATION	3.3309004392109525E-4	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9995203530192948	WITHOUT_CLASSIFICATION	4.796469807052137E-4	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9992817977386784	WITHOUT_CLASSIFICATION	7.182022613215175E-4	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9996246321533013	WITHOUT_CLASSIFICATION	3.75367846698638E-4	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9995203530192948	WITHOUT_CLASSIFICATION	4.796469807052137E-4	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9998391295766956	WITHOUT_CLASSIFICATION	1.6087042330445043E-4	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9997227652167248	WITHOUT_CLASSIFICATION	2.7723478327523976E-4	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999643285338192	WITHOUT_CLASSIFICATION	3.567146618079651E-5	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9995077542513764	WITHOUT_CLASSIFICATION	4.922457486236594E-4	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9998583782318099	WITHOUT_CLASSIFICATION	1.4162176818998672E-4	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9996578183245555	WITHOUT_CLASSIFICATION	3.421816754444982E-4	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9996578183245555	WITHOUT_CLASSIFICATION	3.421816754444982E-4	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9947065118661432	WITHOUT_CLASSIFICATION	0.005293488133856735	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9993645750680803	WITHOUT_CLASSIFICATION	6.354249319197205E-4	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999170233656608	WITHOUT_CLASSIFICATION	8.297663433927936E-5	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999170233656608	WITHOUT_CLASSIFICATION	8.297663433927936E-5	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999971810832842	WITHOUT_CLASSIFICATION	2.818916715953861E-6	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9995822005164189	WITHOUT_CLASSIFICATION	4.1779948358109845E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.999849639498235	WITHOUT_CLASSIFICATION	1.503605017649821E-4	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9998968763921148	WITHOUT_CLASSIFICATION	1.0312360788527985E-4	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999396604652956	WITHOUT_CLASSIFICATION	6.033953470438906E-5	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9994697066283479	WITHOUT_CLASSIFICATION	5.302933716520363E-4	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9996624051221452	WITHOUT_CLASSIFICATION	3.375948778548294E-4	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999194242830433	WITHOUT_CLASSIFICATION	8.05757169567742E-5	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.999879053704558	WITHOUT_CLASSIFICATION	1.209462954420938E-4	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9994048578736325	WITHOUT_CLASSIFICATION	5.951421263674028E-4	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9997682444337598	WITHOUT_CLASSIFICATION	2.317555662401008E-4	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9998174013854334	WITHOUT_CLASSIFICATION	1.8259861456660305E-4	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999288158250214	WITHOUT_CLASSIFICATION	7.11841749787115E-5	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9995548472498227	WITHOUT_CLASSIFICATION	4.45152750177339E-4	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.999227802697296	WITHOUT_CLASSIFICATION	7.721973027039762E-4	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9998083328418897	WITHOUT_CLASSIFICATION	1.9166715811030498E-4	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9724541818720321	WITHOUT_CLASSIFICATION	0.027545818127967806	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9996622891110175	WITHOUT_CLASSIFICATION	3.377108889824889E-4	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9991426237804764	WITHOUT_CLASSIFICATION	8.573762195235481E-4	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9995753216221953	WITHOUT_CLASSIFICATION	4.246783778047717E-4	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9994550254319934	WITHOUT_CLASSIFICATION	5.44974568006586E-4	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9995687666761476	WITHOUT_CLASSIFICATION	4.312333238523849E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9995687666761476	WITHOUT_CLASSIFICATION	4.312333238523849E-4	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9997110540120729	WITHOUT_CLASSIFICATION	2.8894598792709346E-4	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9995300715252209	WITHOUT_CLASSIFICATION	4.69928474779097E-4	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9995103235948931	WITHOUT_CLASSIFICATION	4.896764051068324E-4	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9996739564353327	WITHOUT_CLASSIFICATION	3.260435646672285E-4	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9997296824930284	WITHOUT_CLASSIFICATION	2.7031750697162685E-4	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9995117944351507	WITHOUT_CLASSIFICATION	4.8820556484927745E-4	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9998661537800064	WITHOUT_CLASSIFICATION	1.3384621999354258E-4	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9998841858022974	WITHOUT_CLASSIFICATION	1.1581419770251355E-4	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.999897959441825	WITHOUT_CLASSIFICATION	1.0204055817490773E-4	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9994426664442408	WITHOUT_CLASSIFICATION	5.573335557591175E-4	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999165077737819	WITHOUT_CLASSIFICATION	8.349222621813756E-5	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9994492418557899	WITHOUT_CLASSIFICATION	5.507581442100583E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9996178061030099	WITHOUT_CLASSIFICATION	3.8219389699003934E-4	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9993206513709822	WITHOUT_CLASSIFICATION	6.793486290177839E-4	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9995832457456115	WITHOUT_CLASSIFICATION	4.167542543885228E-4	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9994230146852661	WITHOUT_CLASSIFICATION	5.769853147340068E-4	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9997754037723887	WITHOUT_CLASSIFICATION	2.2459622761128724E-4	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9995768710417124	WITHOUT_CLASSIFICATION	4.231289582875068E-4	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.999562660818307	WITHOUT_CLASSIFICATION	4.373391816929929E-4	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9995284831988557	WITHOUT_CLASSIFICATION	4.7151680114437036E-4	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9996328071762363	WITHOUT_CLASSIFICATION	3.6719282376381553E-4	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9995569188003193	WITHOUT_CLASSIFICATION	4.4308119968067104E-4	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9997357362659203	WITHOUT_CLASSIFICATION	2.6426373407964217E-4	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9998524108048202	WITHOUT_CLASSIFICATION	1.4758919517980507E-4	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9993052277220154	WITHOUT_CLASSIFICATION	6.947722779846591E-4	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9994513481350923	WITHOUT_CLASSIFICATION	5.486518649076706E-4	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9989854430510183	WITHOUT_CLASSIFICATION	0.0010145569489816704	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9993355689585246	WITHOUT_CLASSIFICATION	6.644310414754938E-4	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.999638921644896	WITHOUT_CLASSIFICATION	3.610783551039857E-4	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9996133106938236	WITHOUT_CLASSIFICATION	3.8668930617632763E-4	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9997966538574975	WITHOUT_CLASSIFICATION	2.0334614250258577E-4	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9992721758587533	WITHOUT_CLASSIFICATION	7.27824141246716E-4	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9994710133170103	WITHOUT_CLASSIFICATION	5.289866829896525E-4	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9997001856512641	WITHOUT_CLASSIFICATION	2.998143487359919E-4	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9995602996416246	WITHOUT_CLASSIFICATION	4.3970035837545774E-4	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9992787245897102	WITHOUT_CLASSIFICATION	7.212754102897684E-4	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9992099357571097	WITHOUT_CLASSIFICATION	7.900642428902218E-4	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9996755989740072	WITHOUT_CLASSIFICATION	3.2440102599286827E-4	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9996902088663967	WITHOUT_CLASSIFICATION	3.097911336032921E-4	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9989216854907736	WITHOUT_CLASSIFICATION	0.001078314509226386	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9994374364444211	WITHOUT_CLASSIFICATION	5.625635555789723E-4	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9990523246262758	WITHOUT_CLASSIFICATION	9.476753737242528E-4	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9990523246262758	WITHOUT_CLASSIFICATION	9.476753737242528E-4	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9994625047391386	WITHOUT_CLASSIFICATION	5.374952608614652E-4	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9996058051475382	WITHOUT_CLASSIFICATION	3.9419485246193085E-4	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.984209411309261	WITHOUT_CLASSIFICATION	0.015790588690739075	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.999751339159434	WITHOUT_CLASSIFICATION	2.486608405660452E-4	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9994899879939864	WITHOUT_CLASSIFICATION	5.100120060136373E-4	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9994235920669925	WITHOUT_CLASSIFICATION	5.764079330074295E-4	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9994941888709343	WITHOUT_CLASSIFICATION	5.058111290657385E-4	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9995748565642897	WITHOUT_CLASSIFICATION	4.2514343571039203E-4	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9996819695510522	WITHOUT_CLASSIFICATION	3.1803044894783666E-4	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9993599412484205	WITHOUT_CLASSIFICATION	6.400587515794871E-4	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.9996301242043347	WITHOUT_CLASSIFICATION	3.6987579566518096E-4	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9993410458087152	WITHOUT_CLASSIFICATION	6.589541912847549E-4	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9994249866579067	WITHOUT_CLASSIFICATION	5.750133420932608E-4	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9994651808160823	WITHOUT_CLASSIFICATION	5.348191839177376E-4	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9994079895769012	WITHOUT_CLASSIFICATION	5.920104230986933E-4	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9994793467060625	WITHOUT_CLASSIFICATION	5.206532939374412E-4	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9994038615285726	WITHOUT_CLASSIFICATION	5.961384714273603E-4	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9994646637357834	WITHOUT_CLASSIFICATION	5.353362642165685E-4	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9994035921511413	WITHOUT_CLASSIFICATION	5.964078488587449E-4	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9994644218183565	WITHOUT_CLASSIFICATION	5.355781816435145E-4	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9995641378314329	WITHOUT_CLASSIFICATION	4.3586216856704365E-4	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9994755195441726	WITHOUT_CLASSIFICATION	5.244804558273462E-4	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9995368606877483	WITHOUT_CLASSIFICATION	4.631393122516999E-4	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999077185717198	WITHOUT_CLASSIFICATION	9.228142828016875E-5	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999905114991563	WITHOUT_CLASSIFICATION	9.488500843694012E-5	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999905072094306	WITHOUT_CLASSIFICATION	9.492790569402319E-5	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.999693482326733	WITHOUT_CLASSIFICATION	3.06517673267048E-4	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9996616399449214	WITHOUT_CLASSIFICATION	3.3836005507863773E-4	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9994593717044605	WITHOUT_CLASSIFICATION	5.406282955394763E-4	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9994221350701843	WITHOUT_CLASSIFICATION	5.778649298156556E-4	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.999525785360526	WITHOUT_CLASSIFICATION	4.7421463947399403E-4	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9994489429443612	WITHOUT_CLASSIFICATION	5.510570556388942E-4	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9844478089214803	WITHOUT_CLASSIFICATION	0.015552191078519796	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9992099357571097	WITHOUT_CLASSIFICATION	7.900642428902218E-4	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9998447268190318	WITHOUT_CLASSIFICATION	1.5527318096823165E-4	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.999400878671818	WITHOUT_CLASSIFICATION	5.991213281820141E-4	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.999400878671818	WITHOUT_CLASSIFICATION	5.991213281820141E-4	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999226942146053	WITHOUT_CLASSIFICATION	7.730578539468658E-5	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9998798680689029	WITHOUT_CLASSIFICATION	1.2013193109701545E-4	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9994202029905551	WITHOUT_CLASSIFICATION	5.79797009444959E-4	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.999269630458982	WITHOUT_CLASSIFICATION	7.303695410180077E-4	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9838044221391653	WITHOUT_CLASSIFICATION	0.01619557786083466	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.983834388311234	WITHOUT_CLASSIFICATION	0.01616561168876595	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9840783562212405	WITHOUT_CLASSIFICATION	0.01592164377875946	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9776682001806076	WITHOUT_CLASSIFICATION	0.022331799819392376	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9849158646227673	WITHOUT_CLASSIFICATION	0.01508413537723263	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9855453833410257	WITHOUT_CLASSIFICATION	0.014454616658974273	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9791534524393316	WITHOUT_CLASSIFICATION	0.020846547560668387	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.969043100463207	WITHOUT_CLASSIFICATION	0.030956899536792933	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.982358295564595	WITHOUT_CLASSIFICATION	0.017641704435405064	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9994826176274372	WITHOUT_CLASSIFICATION	5.173823725628125E-4	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9997755502291514	WITHOUT_CLASSIFICATION	2.2444977084868373E-4	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9997849245088827	WITHOUT_CLASSIFICATION	2.1507549111736768E-4	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9781830992731959	WITHOUT_CLASSIFICATION	0.021816900726804162	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9689671103489538	WITHOUT_CLASSIFICATION	0.031032889651046273	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9848782294804467	WITHOUT_CLASSIFICATION	0.015121770519553195	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9855092957487579	WITHOUT_CLASSIFICATION	0.0144907042512422	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9791017450549967	WITHOUT_CLASSIFICATION	0.020898254945003213	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.965454823124931	WITHOUT_CLASSIFICATION	0.034545176875068924	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9994531051488992	WITHOUT_CLASSIFICATION	5.468948511007992E-4	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9997150738081718	WITHOUT_CLASSIFICATION	2.8492619182826537E-4	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9996829096851595	WITHOUT_CLASSIFICATION	3.1709031484049256E-4	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9971632886678389	WITHOUT_CLASSIFICATION	0.00283671133216111	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9991084537346159	WITHOUT_CLASSIFICATION	8.915462653839921E-4	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.999829960073419	WITHOUT_CLASSIFICATION	1.700399265809485E-4	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9996210936417014	WITHOUT_CLASSIFICATION	3.7890635829868866E-4	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9996449309657128	WITHOUT_CLASSIFICATION	3.5506903428715055E-4	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9995281085616898	WITHOUT_CLASSIFICATION	4.718914383102138E-4	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9994317695065051	WITHOUT_CLASSIFICATION	5.682304934949635E-4	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9994315862137467	WITHOUT_CLASSIFICATION	5.684137862532391E-4	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9997786535360033	WITHOUT_CLASSIFICATION	2.2134646399674964E-4	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9996113608212845	WITHOUT_CLASSIFICATION	3.8863917871544265E-4	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9995574014534013	WITHOUT_CLASSIFICATION	4.425985465986807E-4	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9996223802601549	WITHOUT_CLASSIFICATION	3.776197398450502E-4	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9971632886678389	WITHOUT_CLASSIFICATION	0.00283671133216111	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9991084537346159	WITHOUT_CLASSIFICATION	8.915462653839921E-4	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.999829960073419	WITHOUT_CLASSIFICATION	1.700399265809485E-4	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9996449309657128	WITHOUT_CLASSIFICATION	3.5506903428715055E-4	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9903273679352256	WITHOUT_CLASSIFICATION	0.00967263206477455	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9997176742999984	WITHOUT_CLASSIFICATION	2.823257000015643E-4	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.999490769002611	WITHOUT_CLASSIFICATION	5.092309973890283E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9994490136934657	WITHOUT_CLASSIFICATION	5.509863065343712E-4	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9994192548712889	WITHOUT_CLASSIFICATION	5.807451287111197E-4	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9994189589619845	WITHOUT_CLASSIFICATION	5.810410380154857E-4	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9995018368488703	WITHOUT_CLASSIFICATION	4.981631511297893E-4	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9998412472612312	WITHOUT_CLASSIFICATION	1.5875273876870513E-4	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9998108380112231	WITHOUT_CLASSIFICATION	1.8916198877681889E-4	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9995725323103354	WITHOUT_CLASSIFICATION	4.274676896645892E-4	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9994448542697124	WITHOUT_CLASSIFICATION	5.551457302875985E-4	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.999673846143166	WITHOUT_CLASSIFICATION	3.261538568339826E-4	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9997268086507085	WITHOUT_CLASSIFICATION	2.731913492915288E-4	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9994033139453262	WITHOUT_CLASSIFICATION	5.966860546736636E-4	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.999476059124764	WITHOUT_CLASSIFICATION	5.239408752360207E-4	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9995714629825923	WITHOUT_CLASSIFICATION	4.2853701740783065E-4	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9995348532087234	WITHOUT_CLASSIFICATION	4.6514679127657334E-4	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9992585482743878	WITHOUT_CLASSIFICATION	7.414517256122136E-4	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9993568511873241	WITHOUT_CLASSIFICATION	6.431488126758521E-4	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9996223802601549	WITHOUT_CLASSIFICATION	3.776197398450502E-4	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9997176742999984	WITHOUT_CLASSIFICATION	2.823257000015643E-4	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.999490769002611	WITHOUT_CLASSIFICATION	5.092309973890283E-4	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9994192548712889	WITHOUT_CLASSIFICATION	5.807451287111197E-4	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9994189589619845	WITHOUT_CLASSIFICATION	5.810410380154857E-4	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9995018368488703	WITHOUT_CLASSIFICATION	4.981631511297893E-4	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9998412472612312	WITHOUT_CLASSIFICATION	1.5875273876870513E-4	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9998888239526651	WITHOUT_CLASSIFICATION	1.111760473348534E-4	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9993199427923816	WITHOUT_CLASSIFICATION	6.800572076184732E-4	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9994627900127712	WITHOUT_CLASSIFICATION	5.372099872287443E-4	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.999923177271916	WITHOUT_CLASSIFICATION	7.682272808397365E-5	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9994572379616172	WITHOUT_CLASSIFICATION	5.427620383827657E-4	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9994572379616172	WITHOUT_CLASSIFICATION	5.427620383827657E-4	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9996716181268098	WITHOUT_CLASSIFICATION	3.283818731901877E-4	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9996305996549761	WITHOUT_CLASSIFICATION	3.694003450239647E-4	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999242798873526	WITHOUT_CLASSIFICATION	7.572011264734302E-5	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9995116044930334	WITHOUT_CLASSIFICATION	4.883955069665744E-4	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9997450790796497	WITHOUT_CLASSIFICATION	2.5492092035027283E-4	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999419424108381	WITHOUT_CLASSIFICATION	5.8057589161831975E-5	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9996149025759344	WITHOUT_CLASSIFICATION	3.8509742406555095E-4	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9997511862822043	WITHOUT_CLASSIFICATION	2.4881371779571725E-4	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9996725451801594	WITHOUT_CLASSIFICATION	3.2745481984060597E-4	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9998136905543471	WITHOUT_CLASSIFICATION	1.8630944565292432E-4	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9998255493122654	WITHOUT_CLASSIFICATION	1.7445068773457484E-4	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9997842779506033	WITHOUT_CLASSIFICATION	2.15722049396622E-4	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9994901455659561	WITHOUT_CLASSIFICATION	5.098544340440305E-4	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9994966590575276	WITHOUT_CLASSIFICATION	5.033409424723404E-4	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9997758384857619	WITHOUT_CLASSIFICATION	2.2416151423814324E-4	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9996786262514289	WITHOUT_CLASSIFICATION	3.2137374857110903E-4	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9995781952087692	WITHOUT_CLASSIFICATION	4.218047912307871E-4	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9997292703312285	WITHOUT_CLASSIFICATION	2.7072966877150745E-4	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9996621337938516	WITHOUT_CLASSIFICATION	3.378662061484357E-4	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999691703783968	WITHOUT_CLASSIFICATION	3.0829621603145725E-5	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.6092308266403589	IMPLEMENTATION	0.3907691733596412	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9996087880744349	WITHOUT_CLASSIFICATION	3.9121192556506825E-4	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9997169228918167	WITHOUT_CLASSIFICATION	2.830771081832483E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8793325404967128	WITHOUT_CLASSIFICATION	0.1206674595032871	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9993598447083878	WITHOUT_CLASSIFICATION	6.401552916121562E-4	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999488208825917	WITHOUT_CLASSIFICATION	5.117911740839956E-5	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.99966075050472	WITHOUT_CLASSIFICATION	3.3924949527986906E-4	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9995875597843514	WITHOUT_CLASSIFICATION	4.1244021564856116E-4	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9993598447083878	WITHOUT_CLASSIFICATION	6.401552916121562E-4	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999488208825917	WITHOUT_CLASSIFICATION	5.117911740839956E-5	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9994966590575276	WITHOUT_CLASSIFICATION	5.033409424723404E-4	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9997088570430686	WITHOUT_CLASSIFICATION	2.9114295693142634E-4	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9995108609861564	WITHOUT_CLASSIFICATION	4.891390138435364E-4	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9997123544645491	WITHOUT_CLASSIFICATION	2.876455354509455E-4	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9998259334020135	WITHOUT_CLASSIFICATION	1.740665979865671E-4	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9998611312967228	WITHOUT_CLASSIFICATION	1.3886870327719402E-4	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9997419198811215	WITHOUT_CLASSIFICATION	2.580801188785267E-4	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999108183920203	WITHOUT_CLASSIFICATION	8.918160797965878E-5	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999372049732177	WITHOUT_CLASSIFICATION	6.279502678229171E-5	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9997912915182116	WITHOUT_CLASSIFICATION	2.0870848178833535E-4	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9996884213367032	WITHOUT_CLASSIFICATION	3.1157866329673667E-4	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.999916784763069	WITHOUT_CLASSIFICATION	8.321523693104482E-5	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.995743145360169	WITHOUT_CLASSIFICATION	0.004256854639831074	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9994931577237492	WITHOUT_CLASSIFICATION	5.068422762507286E-4	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9998849364667867	WITHOUT_CLASSIFICATION	1.1506353321344634E-4	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9998685307373523	WITHOUT_CLASSIFICATION	1.314692626477047E-4	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9982237064890858	WITHOUT_CLASSIFICATION	0.0017762935109143074	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9989322456701882	WITHOUT_CLASSIFICATION	0.0010677543298118093	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9955316757975893	WITHOUT_CLASSIFICATION	0.004468324202410683	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9994298515898957	WITHOUT_CLASSIFICATION	5.701484101043308E-4	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9998622962912548	WITHOUT_CLASSIFICATION	1.377037087452347E-4	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999479440165151	WITHOUT_CLASSIFICATION	5.205598348491215E-5	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.999900107288943	WITHOUT_CLASSIFICATION	9.989271105697786E-5	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.999738241518412	WITHOUT_CLASSIFICATION	2.617584815880618E-4	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999794441483132	WITHOUT_CLASSIFICATION	2.0555851686868223E-5	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999329217169111	WITHOUT_CLASSIFICATION	6.70782830889498E-5	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9996895610583406	WITHOUT_CLASSIFICATION	3.1043894165944276E-4	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9995772054771287	WITHOUT_CLASSIFICATION	4.227945228712858E-4	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9994572296409546	WITHOUT_CLASSIFICATION	5.427703590453174E-4	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9998322969392653	WITHOUT_CLASSIFICATION	1.6770306073465095E-4	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9998502373871804	WITHOUT_CLASSIFICATION	1.497626128196018E-4	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9998026041481836	WITHOUT_CLASSIFICATION	1.9739585181652306E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996415521926206	WITHOUT_CLASSIFICATION	3.5844780737939865E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996415521926206	WITHOUT_CLASSIFICATION	3.5844780737939865E-4	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9994901455659561	WITHOUT_CLASSIFICATION	5.098544340440305E-4	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9997943391223564	WITHOUT_CLASSIFICATION	2.056608776435571E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9998104687976055	WITHOUT_CLASSIFICATION	1.8953120239444455E-4	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.999428353465765	WITHOUT_CLASSIFICATION	5.716465342350093E-4	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.999866414546981	WITHOUT_CLASSIFICATION	1.335854530190063E-4	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.999866414546981	WITHOUT_CLASSIFICATION	1.335854530190063E-4	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.999657993642562	WITHOUT_CLASSIFICATION	3.4200635743802124E-4	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9997978599757537	WITHOUT_CLASSIFICATION	2.0214002424628175E-4	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9997062268283421	WITHOUT_CLASSIFICATION	2.937731716578344E-4	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9997388632734588	WITHOUT_CLASSIFICATION	2.611367265411583E-4	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999159290762845	WITHOUT_CLASSIFICATION	8.407092371549011E-5	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999383728477439	WITHOUT_CLASSIFICATION	6.162715225608227E-5	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9998021661448278	WITHOUT_CLASSIFICATION	1.9783385517225036E-4	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9996522161689372	WITHOUT_CLASSIFICATION	3.477838310627812E-4	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9996999238727158	WITHOUT_CLASSIFICATION	3.0007612728419336E-4	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9996552911856316	WITHOUT_CLASSIFICATION	3.447088143684544E-4	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9995053864396592	WITHOUT_CLASSIFICATION	4.946135603407799E-4	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.999453004956448	WITHOUT_CLASSIFICATION	5.469950435520755E-4	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9994554575863202	WITHOUT_CLASSIFICATION	5.445424136798588E-4	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9997714511873932	WITHOUT_CLASSIFICATION	2.2854881260688724E-4	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.999487661379588	WITHOUT_CLASSIFICATION	5.123386204119724E-4	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.9992842251445763	WITHOUT_CLASSIFICATION	7.157748554237218E-4	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9998328755865614	WITHOUT_CLASSIFICATION	1.671244134386222E-4	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9998328755865614	WITHOUT_CLASSIFICATION	1.671244134386222E-4	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9998056372390708	WITHOUT_CLASSIFICATION	1.9436276092931913E-4	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9998056372390708	WITHOUT_CLASSIFICATION	1.9436276092931913E-4	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.999942545621493	WITHOUT_CLASSIFICATION	5.74543785068786E-5	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9996451346595063	WITHOUT_CLASSIFICATION	3.548653404936653E-4	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9996761513962112	WITHOUT_CLASSIFICATION	3.2384860378869743E-4	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9996159256188566	WITHOUT_CLASSIFICATION	3.840743811433563E-4	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9997491655623233	WITHOUT_CLASSIFICATION	2.5083443767664657E-4	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.998371385764154	WITHOUT_CLASSIFICATION	0.0016286142358460283	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9995782547420801	WITHOUT_CLASSIFICATION	4.2174525791984353E-4	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.999453004956448	WITHOUT_CLASSIFICATION	5.469950435520755E-4	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9994554575863202	WITHOUT_CLASSIFICATION	5.445424136798588E-4	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.999487661379588	WITHOUT_CLASSIFICATION	5.123386204119724E-4	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9997903708913839	WITHOUT_CLASSIFICATION	2.096291086161341E-4	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9996585147068049	WITHOUT_CLASSIFICATION	3.414852931951276E-4	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999119184324524	WITHOUT_CLASSIFICATION	8.80815675475655E-5	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9996892537330684	WITHOUT_CLASSIFICATION	3.1074626693156494E-4	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9998323649419361	WITHOUT_CLASSIFICATION	1.676350580639679E-4	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9991138662522537	WITHOUT_CLASSIFICATION	8.861337477463119E-4	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9994518908920065	WITHOUT_CLASSIFICATION	5.481091079935454E-4	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9994457437308779	WITHOUT_CLASSIFICATION	5.542562691220458E-4	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9997778020793359	WITHOUT_CLASSIFICATION	2.221979206640984E-4	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9998625442495523	WITHOUT_CLASSIFICATION	1.3745575044767116E-4	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9974418001258422	WITHOUT_CLASSIFICATION	0.0025581998741578973	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9997123098427924	WITHOUT_CLASSIFICATION	2.876901572075922E-4	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9994775034597034	WITHOUT_CLASSIFICATION	5.224965402966308E-4	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9997474919865895	WITHOUT_CLASSIFICATION	2.5250801341050966E-4	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9996722233349185	WITHOUT_CLASSIFICATION	3.277766650815135E-4	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.99978139753895	WITHOUT_CLASSIFICATION	2.1860246104999208E-4	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9998992919285107	WITHOUT_CLASSIFICATION	1.0070807148939173E-4	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999234251970186	WITHOUT_CLASSIFICATION	7.657480298139485E-5	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9998680246800818	WITHOUT_CLASSIFICATION	1.3197531991821922E-4	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9996762616774298	WITHOUT_CLASSIFICATION	3.2373832257022884E-4	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9997238415888017	WITHOUT_CLASSIFICATION	2.761584111983098E-4	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9997748356565432	WITHOUT_CLASSIFICATION	2.2516434345664268E-4	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9996259285651781	WITHOUT_CLASSIFICATION	3.740714348218786E-4	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9998903727859595	WITHOUT_CLASSIFICATION	1.0962721404050282E-4	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9998707151669936	WITHOUT_CLASSIFICATION	1.2928483300636047E-4	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9996844418111936	WITHOUT_CLASSIFICATION	3.155581888063969E-4	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9995755302789948	WITHOUT_CLASSIFICATION	4.2446972100509755E-4	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9997509822477311	WITHOUT_CLASSIFICATION	2.490177522689406E-4	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9994745685885805	WITHOUT_CLASSIFICATION	5.254314114195026E-4	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9998954185637635	WITHOUT_CLASSIFICATION	1.0458143623652869E-4	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9997703284605747	WITHOUT_CLASSIFICATION	2.2967153942533714E-4	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9998338238901572	WITHOUT_CLASSIFICATION	1.6617610984279778E-4	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9997691993855086	WITHOUT_CLASSIFICATION	2.3080061449135518E-4	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9998868901211605	WITHOUT_CLASSIFICATION	1.1310987883953601E-4	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9998171551041515	WITHOUT_CLASSIFICATION	1.828448958486031E-4	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9995775502028432	WITHOUT_CLASSIFICATION	4.2244979715682247E-4	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9995320366048519	WITHOUT_CLASSIFICATION	4.6796339514811524E-4	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9996554810373712	WITHOUT_CLASSIFICATION	3.445189626288025E-4	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9995741802116015	WITHOUT_CLASSIFICATION	4.25819788398541E-4	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9997912231174493	WITHOUT_CLASSIFICATION	2.0877688255067702E-4	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9997266333695725	WITHOUT_CLASSIFICATION	2.73366630427563E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9998104687976055	WITHOUT_CLASSIFICATION	1.8953120239444455E-4	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9995320366048519	WITHOUT_CLASSIFICATION	4.6796339514811524E-4	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9998794907347678	WITHOUT_CLASSIFICATION	1.2050926523222805E-4	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999084449242996	WITHOUT_CLASSIFICATION	9.15550757004266E-5	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9998121623806024	WITHOUT_CLASSIFICATION	1.8783761939757362E-4	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9997230271623779	WITHOUT_CLASSIFICATION	2.769728376220959E-4	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9997230271623779	WITHOUT_CLASSIFICATION	2.769728376220959E-4	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9997684644981718	WITHOUT_CLASSIFICATION	2.3153550182818328E-4	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999557277827303	WITHOUT_CLASSIFICATION	4.427221726963643E-5	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9981403238624172	WITHOUT_CLASSIFICATION	0.0018596761375827325	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9998857862973672	WITHOUT_CLASSIFICATION	1.1421370263281705E-4	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9968943255746185	WITHOUT_CLASSIFICATION	0.0031056744253814836	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999787228161591	WITHOUT_CLASSIFICATION	2.127718384100333E-5	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.999929978262285	WITHOUT_CLASSIFICATION	7.002173771506165E-5	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9997841441494348	WITHOUT_CLASSIFICATION	2.1585585056512299E-4	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9996512571676067	WITHOUT_CLASSIFICATION	3.4874283239328546E-4	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9996512571676067	WITHOUT_CLASSIFICATION	3.4874283239328546E-4	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9995526233418152	WITHOUT_CLASSIFICATION	4.4737665818490673E-4	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9998393184457516	WITHOUT_CLASSIFICATION	1.6068155424848698E-4	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.99988572366927	WITHOUT_CLASSIFICATION	1.1427633073002148E-4	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9995436006568054	WITHOUT_CLASSIFICATION	4.563993431945989E-4	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9996154756960224	WITHOUT_CLASSIFICATION	3.845243039775574E-4	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9993909792802578	WITHOUT_CLASSIFICATION	6.090207197422516E-4	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9990239983761199	WITHOUT_CLASSIFICATION	9.760016238799887E-4	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9995973846835619	WITHOUT_CLASSIFICATION	4.0261531643812944E-4	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9995112032566835	WITHOUT_CLASSIFICATION	4.887967433164434E-4	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9998697682780908	WITHOUT_CLASSIFICATION	1.3023172190914202E-4	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9998914115536182	WITHOUT_CLASSIFICATION	1.0858844638191305E-4	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999882627910539	WITHOUT_CLASSIFICATION	1.1737208946151528E-5	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999611168571141	WITHOUT_CLASSIFICATION	3.888314288590349E-5	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9994006083800735	WITHOUT_CLASSIFICATION	5.99391619926513E-4	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9994006083800735	WITHOUT_CLASSIFICATION	5.99391619926513E-4	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9994297119494017	WITHOUT_CLASSIFICATION	5.702880505984688E-4	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9998412472612312	WITHOUT_CLASSIFICATION	1.5875273876870513E-4	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9998776214208333	WITHOUT_CLASSIFICATION	1.22378579166719E-4	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9997513171643633	WITHOUT_CLASSIFICATION	2.4868283563677794E-4	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999353316085978	WITHOUT_CLASSIFICATION	6.466839140213637E-5	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999715396456484	WITHOUT_CLASSIFICATION	2.846035435156868E-5	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999313216511556	WITHOUT_CLASSIFICATION	6.867834884444202E-5	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999280478094412	WITHOUT_CLASSIFICATION	7.195219055882618E-5	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999145929510938	WITHOUT_CLASSIFICATION	8.540704890629037E-5	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9994702216096638	WITHOUT_CLASSIFICATION	5.297783903361469E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9998251141152693	WITHOUT_CLASSIFICATION	1.7488588473072513E-4	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9995000280019529	WITHOUT_CLASSIFICATION	4.999719980470918E-4	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9997667110410196	WITHOUT_CLASSIFICATION	2.3328895898038206E-4	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999270796959612	WITHOUT_CLASSIFICATION	7.29203040388071E-5	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999569174103309	WITHOUT_CLASSIFICATION	4.308258966901551E-5	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9997583756457654	WITHOUT_CLASSIFICATION	2.4162435423459838E-4	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999328191223047	WITHOUT_CLASSIFICATION	6.718087769533842E-5	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9998189060088087	WITHOUT_CLASSIFICATION	1.8109399119127176E-4	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9998471946606886	WITHOUT_CLASSIFICATION	1.5280533931137533E-4	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999735440049488	WITHOUT_CLASSIFICATION	2.64559950512492E-5	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9996603033188184	WITHOUT_CLASSIFICATION	3.396966811816654E-4	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9995573811002919	WITHOUT_CLASSIFICATION	4.426188997081332E-4	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9995403560068262	WITHOUT_CLASSIFICATION	4.5964399317383926E-4	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9996700656609961	WITHOUT_CLASSIFICATION	3.299343390037979E-4	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9820906613773175	WITHOUT_CLASSIFICATION	0.017909338622682482	IMPLEMENTATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9997486926644545	WITHOUT_CLASSIFICATION	2.51307335545493E-4	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.999803857157804	WITHOUT_CLASSIFICATION	1.9614284219601652E-4	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9996137406112621	WITHOUT_CLASSIFICATION	3.8625938873791086E-4	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9995054922638682	WITHOUT_CLASSIFICATION	4.945077361318131E-4	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9996887411804728	WITHOUT_CLASSIFICATION	3.1125881952723624E-4	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9997939734936385	WITHOUT_CLASSIFICATION	2.0602650636151277E-4	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9995157860597537	WITHOUT_CLASSIFICATION	4.842139402463805E-4	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9995323724754618	WITHOUT_CLASSIFICATION	4.6762752453815177E-4	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9997783339817305	WITHOUT_CLASSIFICATION	2.2166601826951316E-4	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9996764069455263	WITHOUT_CLASSIFICATION	3.235930544737087E-4	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9996355641024838	WITHOUT_CLASSIFICATION	3.644358975161786E-4	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9995675818979015	WITHOUT_CLASSIFICATION	4.3241810209848424E-4	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9995678428623301	WITHOUT_CLASSIFICATION	4.3215713766990105E-4	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9995151798788409	WITHOUT_CLASSIFICATION	4.8482012115918426E-4	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9994671966770662	WITHOUT_CLASSIFICATION	5.328033229338654E-4	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.99952222523785	WITHOUT_CLASSIFICATION	4.777747621500698E-4	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.999667635054194	WITHOUT_CLASSIFICATION	3.323649458060055E-4	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999789683786543	WITHOUT_CLASSIFICATION	2.1031621345715035E-5	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.999722728760959	WITHOUT_CLASSIFICATION	2.772712390409761E-4	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9995648695282106	WITHOUT_CLASSIFICATION	4.351304717894145E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9996046397876942	WITHOUT_CLASSIFICATION	3.953602123057341E-4	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9994703840546878	WITHOUT_CLASSIFICATION	5.296159453122657E-4	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9990207341962861	WITHOUT_CLASSIFICATION	9.792658037139474E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9993598447083878	WITHOUT_CLASSIFICATION	6.401552916121562E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9993598447083878	WITHOUT_CLASSIFICATION	6.401552916121562E-4	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9956212527174668	WITHOUT_CLASSIFICATION	0.004378747282533093	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9995083928437118	WITHOUT_CLASSIFICATION	4.91607156288215E-4	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9996757758424578	WITHOUT_CLASSIFICATION	3.242241575421093E-4	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9997203919040577	WITHOUT_CLASSIFICATION	2.7960809594223564E-4	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.999697996615015	WITHOUT_CLASSIFICATION	3.020033849849029E-4	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.999846204290419	WITHOUT_CLASSIFICATION	1.5379570958093728E-4	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9987677501938643	WITHOUT_CLASSIFICATION	0.0012322498061355734	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999379118598936	WITHOUT_CLASSIFICATION	6.208814010644062E-5	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.999922622248206	WITHOUT_CLASSIFICATION	7.737775179386441E-5	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9994624661950026	WITHOUT_CLASSIFICATION	5.375338049974603E-4	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9996736423974173	WITHOUT_CLASSIFICATION	3.2635760258269527E-4	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9996736423974173	WITHOUT_CLASSIFICATION	3.2635760258269527E-4	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9996736423974173	WITHOUT_CLASSIFICATION	3.2635760258269527E-4	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9997720035409758	WITHOUT_CLASSIFICATION	2.2799645902415335E-4	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9998228053749024	WITHOUT_CLASSIFICATION	1.7719462509750472E-4	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9993945812873407	WITHOUT_CLASSIFICATION	6.054187126592999E-4	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9994844484676977	WITHOUT_CLASSIFICATION	5.15551532302365E-4	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9994844484676977	WITHOUT_CLASSIFICATION	5.15551532302365E-4	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9996486746338068	WITHOUT_CLASSIFICATION	3.513253661932401E-4	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9996937034059797	WITHOUT_CLASSIFICATION	3.062965940202792E-4	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9996615237998964	WITHOUT_CLASSIFICATION	3.384762001036099E-4	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9996830410473815	WITHOUT_CLASSIFICATION	3.169589526186086E-4	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9997027052753942	WITHOUT_CLASSIFICATION	2.9729472460589187E-4	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9995589289704327	WITHOUT_CLASSIFICATION	4.4107102956724055E-4	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.99940735231593	WITHOUT_CLASSIFICATION	5.926476840700086E-4	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9994880535379957	WITHOUT_CLASSIFICATION	5.11946462004198E-4	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9995779187566416	WITHOUT_CLASSIFICATION	4.220812433584401E-4	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9994626063062313	WITHOUT_CLASSIFICATION	5.373936937686902E-4	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9994626063062313	WITHOUT_CLASSIFICATION	5.373936937686902E-4	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.999657975497391	WITHOUT_CLASSIFICATION	3.4202450260909114E-4	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999055307138224	WITHOUT_CLASSIFICATION	9.446928617762235E-5	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9994055702046313	WITHOUT_CLASSIFICATION	5.944297953688005E-4	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9994022712316669	WITHOUT_CLASSIFICATION	5.977287683331183E-4	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9995073382336889	WITHOUT_CLASSIFICATION	4.926617663110686E-4	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9996196038199117	WITHOUT_CLASSIFICATION	3.803961800883314E-4	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9993790497562469	WITHOUT_CLASSIFICATION	6.209502437531377E-4	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9993863429078604	WITHOUT_CLASSIFICATION	6.136570921394692E-4	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9996071369510189	WITHOUT_CLASSIFICATION	3.9286304898112837E-4	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9994123494686861	WITHOUT_CLASSIFICATION	5.876505313138155E-4	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9996877981826288	WITHOUT_CLASSIFICATION	3.1220181737121657E-4	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9998364439852476	WITHOUT_CLASSIFICATION	1.6355601475245504E-4	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.999469194213544	WITHOUT_CLASSIFICATION	5.308057864560782E-4	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9997837516670735	WITHOUT_CLASSIFICATION	2.1624833292644647E-4	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.999486027391891	WITHOUT_CLASSIFICATION	5.139726081090724E-4	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9995424868588763	WITHOUT_CLASSIFICATION	4.5751314112380486E-4	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9991437320760388	WITHOUT_CLASSIFICATION	8.562679239612904E-4	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9997123670834258	WITHOUT_CLASSIFICATION	2.8763291657421704E-4	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.999471500556745	WITHOUT_CLASSIFICATION	5.28499443254969E-4	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9994815666156917	WITHOUT_CLASSIFICATION	5.184333843083214E-4	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9994966647124383	WITHOUT_CLASSIFICATION	5.033352875617926E-4	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9993966524428342	WITHOUT_CLASSIFICATION	6.033475571658637E-4	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9993919883825361	WITHOUT_CLASSIFICATION	6.08011617463907E-4	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9997950658398934	WITHOUT_CLASSIFICATION	2.049341601064666E-4	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9995625646318217	WITHOUT_CLASSIFICATION	4.374353681782992E-4	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9994228213751616	WITHOUT_CLASSIFICATION	5.771786248383919E-4	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9995078259168114	WITHOUT_CLASSIFICATION	4.921740831885262E-4	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9996158314467642	WITHOUT_CLASSIFICATION	3.8416855323578964E-4	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9995599966911589	WITHOUT_CLASSIFICATION	4.4000330884111735E-4	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9994665431979582	WITHOUT_CLASSIFICATION	5.334568020417582E-4	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9994312812866029	WITHOUT_CLASSIFICATION	5.687187133971864E-4	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9997258734730827	WITHOUT_CLASSIFICATION	2.741265269172767E-4	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9994305587809181	WITHOUT_CLASSIFICATION	5.694412190818364E-4	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9996450933024361	WITHOUT_CLASSIFICATION	3.549066975638158E-4	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9993457278102823	WITHOUT_CLASSIFICATION	6.542721897177662E-4	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9994532316667215	WITHOUT_CLASSIFICATION	5.46768333278429E-4	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9995444908757974	WITHOUT_CLASSIFICATION	4.5550912420254787E-4	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9996671107877968	WITHOUT_CLASSIFICATION	3.328892122031641E-4	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9995416123291888	WITHOUT_CLASSIFICATION	4.5838767081122296E-4	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9995071499188477	WITHOUT_CLASSIFICATION	4.928500811522333E-4	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9995925682463258	WITHOUT_CLASSIFICATION	4.07431753674146E-4	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9995721037721917	WITHOUT_CLASSIFICATION	4.278962278082634E-4	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9995386433186287	WITHOUT_CLASSIFICATION	4.6135668137137393E-4	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9993611200059751	WITHOUT_CLASSIFICATION	6.38879994024935E-4	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9996780082416366	WITHOUT_CLASSIFICATION	3.2199175836343145E-4	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9996054871107791	WITHOUT_CLASSIFICATION	3.945128892208197E-4	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9994134569481601	WITHOUT_CLASSIFICATION	5.865430518398952E-4	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9996949451586059	WITHOUT_CLASSIFICATION	3.050548413940844E-4	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9996836960538743	WITHOUT_CLASSIFICATION	3.163039461256432E-4	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9994234537839097	WITHOUT_CLASSIFICATION	5.76546216090244E-4	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9996209371278716	WITHOUT_CLASSIFICATION	3.790628721284921E-4	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9993223579692686	WITHOUT_CLASSIFICATION	6.776420307314498E-4	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9993175929950878	WITHOUT_CLASSIFICATION	6.824070049122199E-4	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9993053236773566	WITHOUT_CLASSIFICATION	6.94676322643491E-4	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9995735921270337	WITHOUT_CLASSIFICATION	4.264078729663287E-4	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9974588164594326	WITHOUT_CLASSIFICATION	0.0025411835405674803	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9994425323357027	WITHOUT_CLASSIFICATION	5.574676642972861E-4	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9997048542698985	WITHOUT_CLASSIFICATION	2.951457301014344E-4	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9996264622854898	WITHOUT_CLASSIFICATION	3.735377145102544E-4	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9995756391898377	WITHOUT_CLASSIFICATION	4.243608101622219E-4	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9997718620627492	WITHOUT_CLASSIFICATION	2.2813793725089257E-4	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9993348803482278	WITHOUT_CLASSIFICATION	6.651196517721406E-4	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9995780772609699	WITHOUT_CLASSIFICATION	4.219227390301561E-4	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9994787613881335	WITHOUT_CLASSIFICATION	5.212386118665401E-4	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9993621182519438	WITHOUT_CLASSIFICATION	6.378817480561695E-4	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9994958489906565	WITHOUT_CLASSIFICATION	5.041510093434637E-4	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9993962725213016	WITHOUT_CLASSIFICATION	6.03727478698373E-4	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9994127954863754	WITHOUT_CLASSIFICATION	5.872045136245088E-4	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9995572531423175	WITHOUT_CLASSIFICATION	4.4274685768259947E-4	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.9995850967927098	WITHOUT_CLASSIFICATION	4.149032072902393E-4	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9995360150296799	WITHOUT_CLASSIFICATION	4.6398497032005214E-4	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999356783341321	WITHOUT_CLASSIFICATION	6.43216658678661E-5	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9997123253779776	WITHOUT_CLASSIFICATION	2.876746220224389E-4	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9995572531423175	WITHOUT_CLASSIFICATION	4.4274685768259947E-4	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9995180715261663	WITHOUT_CLASSIFICATION	4.8192847383372606E-4	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9995180715261663	WITHOUT_CLASSIFICATION	4.8192847383372606E-4	IMPLEMENTATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9995225179302955	WITHOUT_CLASSIFICATION	4.774820697046085E-4	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9994804789879851	WITHOUT_CLASSIFICATION	5.195210120149435E-4	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.999640399139575	WITHOUT_CLASSIFICATION	3.59600860424993E-4	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9996821592172248	WITHOUT_CLASSIFICATION	3.178407827752604E-4	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9996996521798783	WITHOUT_CLASSIFICATION	3.0034782012165355E-4	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9994692976335232	WITHOUT_CLASSIFICATION	5.307023664767172E-4	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9993272530496096	WITHOUT_CLASSIFICATION	6.727469503904073E-4	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.8851558391935522	WITHOUT_CLASSIFICATION	0.11484416080644778	IMPLEMENTATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9996245298468005	WITHOUT_CLASSIFICATION	3.7547015319957665E-4	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.999440049596115	WITHOUT_CLASSIFICATION	5.599504038850688E-4	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.999833452603467	WITHOUT_CLASSIFICATION	1.6654739653310642E-4	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.999901572493861	WITHOUT_CLASSIFICATION	9.842750613901011E-5	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9996032655884537	WITHOUT_CLASSIFICATION	3.9673441154634967E-4	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9993272530496096	WITHOUT_CLASSIFICATION	6.727469503904073E-4	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9985888804848254	WITHOUT_CLASSIFICATION	0.0014111195151745488	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.999173139166758	WITHOUT_CLASSIFICATION	8.268608332419617E-4	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999480210979547	WITHOUT_CLASSIFICATION	5.1978902045273596E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9996803284103659	WITHOUT_CLASSIFICATION	3.196715896341195E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9994706353445323	WITHOUT_CLASSIFICATION	5.293646554676966E-4	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9997476843421133	WITHOUT_CLASSIFICATION	2.5231565788671405E-4	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9995337432972792	WITHOUT_CLASSIFICATION	4.6625670272078707E-4	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9993195653741295	WITHOUT_CLASSIFICATION	6.8043462587063E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.999331843053259	WITHOUT_CLASSIFICATION	6.6815694674109E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9993709295465771	WITHOUT_CLASSIFICATION	6.290704534227993E-4	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9993238826677491	WITHOUT_CLASSIFICATION	6.761173322509604E-4	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9993238826677491	WITHOUT_CLASSIFICATION	6.761173322509604E-4	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9993786092135408	WITHOUT_CLASSIFICATION	6.21390786459201E-4	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9998112288249426	WITHOUT_CLASSIFICATION	1.8877117505747393E-4	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9997976995076776	WITHOUT_CLASSIFICATION	2.0230049232248558E-4	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9995855546496379	WITHOUT_CLASSIFICATION	4.1444535036208634E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9997367301971795	WITHOUT_CLASSIFICATION	2.63269802820528E-4	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9995667055042953	WITHOUT_CLASSIFICATION	4.332944957047155E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9995667055042953	WITHOUT_CLASSIFICATION	4.332944957047155E-4	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9994921627879157	WITHOUT_CLASSIFICATION	5.078372120841584E-4	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9992362862608583	WITHOUT_CLASSIFICATION	7.637137391416492E-4	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9995500003754981	WITHOUT_CLASSIFICATION	4.499996245018621E-4	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9993916601417394	WITHOUT_CLASSIFICATION	6.083398582606088E-4	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9994221463114913	WITHOUT_CLASSIFICATION	5.778536885087306E-4	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9996113676153292	WITHOUT_CLASSIFICATION	3.886323846707614E-4	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9994215375950939	WITHOUT_CLASSIFICATION	5.784624049061056E-4	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9995616563581144	WITHOUT_CLASSIFICATION	4.3834364188548877E-4	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9995329105842515	WITHOUT_CLASSIFICATION	4.6708941574839596E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9996970091216183	WITHOUT_CLASSIFICATION	3.029908783817453E-4	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9994530167654486	WITHOUT_CLASSIFICATION	5.469832345512509E-4	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9997546672926182	WITHOUT_CLASSIFICATION	2.45332707381806E-4	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9996268194832449	WITHOUT_CLASSIFICATION	3.7318051675502714E-4	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9996268194832449	WITHOUT_CLASSIFICATION	3.7318051675502714E-4	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9998144576396096	WITHOUT_CLASSIFICATION	1.8554236039039664E-4	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9995238447681093	WITHOUT_CLASSIFICATION	4.7615523189070577E-4	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9994897656596349	WITHOUT_CLASSIFICATION	5.10234340365107E-4	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9996997716338959	WITHOUT_CLASSIFICATION	3.002283661040512E-4	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9993457151367299	WITHOUT_CLASSIFICATION	6.542848632700984E-4	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9994583949864766	WITHOUT_CLASSIFICATION	5.416050135234651E-4	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9998247396015224	WITHOUT_CLASSIFICATION	1.7526039847751322E-4	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.999496970321718	WITHOUT_CLASSIFICATION	5.030296782819305E-4	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9993918906077404	WITHOUT_CLASSIFICATION	6.081093922596343E-4	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9992805342382427	WITHOUT_CLASSIFICATION	7.194657617571949E-4	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9994001105090424	WITHOUT_CLASSIFICATION	5.998894909576591E-4	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9998391766144562	WITHOUT_CLASSIFICATION	1.6082338554389194E-4	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9997114586151068	WITHOUT_CLASSIFICATION	2.88541384893291E-4	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9996771002263144	WITHOUT_CLASSIFICATION	3.228997736856143E-4	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9993690555840297	WITHOUT_CLASSIFICATION	6.309444159703813E-4	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9996908840768892	WITHOUT_CLASSIFICATION	3.0911592311074073E-4	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9991345542713665	WITHOUT_CLASSIFICATION	8.654457286335279E-4	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999609851463981	WITHOUT_CLASSIFICATION	3.9014853601823526E-5	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9995387198037264	WITHOUT_CLASSIFICATION	4.6128019627352917E-4	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9997124453153633	WITHOUT_CLASSIFICATION	2.8755468463666407E-4	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9995387198037264	WITHOUT_CLASSIFICATION	4.6128019627352917E-4	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9996965740117553	WITHOUT_CLASSIFICATION	3.034259882447462E-4	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9996648200785986	WITHOUT_CLASSIFICATION	3.351799214014518E-4	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9996417592528785	WITHOUT_CLASSIFICATION	3.5824074712150053E-4	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.999308213909068	WITHOUT_CLASSIFICATION	6.917860909320411E-4	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9995835840304449	WITHOUT_CLASSIFICATION	4.164159695551806E-4	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9994866063173286	WITHOUT_CLASSIFICATION	5.133936826714421E-4	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9998545869170012	WITHOUT_CLASSIFICATION	1.4541308299878043E-4	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9995961771864847	WITHOUT_CLASSIFICATION	4.0382281351521583E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9994706353445323	WITHOUT_CLASSIFICATION	5.293646554676966E-4	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9995337432972792	WITHOUT_CLASSIFICATION	4.6625670272078707E-4	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9993195653741295	WITHOUT_CLASSIFICATION	6.8043462587063E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.999331843053259	WITHOUT_CLASSIFICATION	6.6815694674109E-4	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9993709295465771	WITHOUT_CLASSIFICATION	6.290704534227993E-4	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9993271593267999	WITHOUT_CLASSIFICATION	6.728406732000566E-4	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9993252888982795	WITHOUT_CLASSIFICATION	6.747111017205191E-4	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9993238826677491	WITHOUT_CLASSIFICATION	6.761173322509604E-4	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9995667055042953	WITHOUT_CLASSIFICATION	4.332944957047155E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9995667055042953	WITHOUT_CLASSIFICATION	4.332944957047155E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9993916601417394	WITHOUT_CLASSIFICATION	6.083398582606088E-4	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9994221463114913	WITHOUT_CLASSIFICATION	5.778536885087306E-4	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9996113676153292	WITHOUT_CLASSIFICATION	3.886323846707614E-4	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9994215375950939	WITHOUT_CLASSIFICATION	5.784624049061056E-4	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9995616563581144	WITHOUT_CLASSIFICATION	4.3834364188548877E-4	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9994858962569061	WITHOUT_CLASSIFICATION	5.141037430939306E-4	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.99931760461932	WITHOUT_CLASSIFICATION	6.823953806799894E-4	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9993238826677491	WITHOUT_CLASSIFICATION	6.761173322509604E-4	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9993238826677491	WITHOUT_CLASSIFICATION	6.761173322509604E-4	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9993238826677491	WITHOUT_CLASSIFICATION	6.761173322509604E-4	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9992844932807067	WITHOUT_CLASSIFICATION	7.155067192932537E-4	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9996220479096544	WITHOUT_CLASSIFICATION	3.7795209034562186E-4	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9993992098671469	WITHOUT_CLASSIFICATION	6.007901328530595E-4	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9993904282232022	WITHOUT_CLASSIFICATION	6.095717767978373E-4	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.999853968764822	WITHOUT_CLASSIFICATION	1.4603123517800573E-4	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9995429685039758	WITHOUT_CLASSIFICATION	4.5703149602417827E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9996970091216183	WITHOUT_CLASSIFICATION	3.029908783817453E-4	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9994530167654486	WITHOUT_CLASSIFICATION	5.469832345512509E-4	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9996268194832449	WITHOUT_CLASSIFICATION	3.7318051675502714E-4	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9996268194832449	WITHOUT_CLASSIFICATION	3.7318051675502714E-4	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.999292947234305	WITHOUT_CLASSIFICATION	7.070527656951881E-4	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9993607489806081	WITHOUT_CLASSIFICATION	6.392510193918512E-4	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9994051750902	WITHOUT_CLASSIFICATION	5.948249098000573E-4	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9998147163190342	WITHOUT_CLASSIFICATION	1.8528368096580028E-4	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9997748164428183	WITHOUT_CLASSIFICATION	2.2518355718182176E-4	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9998281673510611	WITHOUT_CLASSIFICATION	1.7183264893888686E-4	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9994955658181711	WITHOUT_CLASSIFICATION	5.04434181828868E-4	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9996093713603497	WITHOUT_CLASSIFICATION	3.906286396503117E-4	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9995299099897368	WITHOUT_CLASSIFICATION	4.7009001026320093E-4	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9997684907497896	WITHOUT_CLASSIFICATION	2.3150925021050587E-4	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9997630460274705	WITHOUT_CLASSIFICATION	2.3695397252965358E-4	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9994194933730183	WITHOUT_CLASSIFICATION	5.805066269816435E-4	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999114980645296	WITHOUT_CLASSIFICATION	8.85019354704112E-5	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9994422042517048	WITHOUT_CLASSIFICATION	5.577957482952474E-4	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9994422042517048	WITHOUT_CLASSIFICATION	5.577957482952474E-4	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9995781067935439	WITHOUT_CLASSIFICATION	4.2189320645617286E-4	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9998787132156358	WITHOUT_CLASSIFICATION	1.212867843642871E-4	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9997578957658813	WITHOUT_CLASSIFICATION	2.4210423411864318E-4	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9997661056638177	WITHOUT_CLASSIFICATION	2.3389433618230176E-4	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998373883482704	WITHOUT_CLASSIFICATION	1.626116517297195E-4	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999269990562378	WITHOUT_CLASSIFICATION	7.300094376217343E-5	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9994418965298255	WITHOUT_CLASSIFICATION	5.581034701745555E-4	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999269990562378	WITHOUT_CLASSIFICATION	7.300094376217343E-5	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9997199726130116	WITHOUT_CLASSIFICATION	2.800273869884004E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9997836097841379	WITHOUT_CLASSIFICATION	2.1639021586193014E-4	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9992191952992456	WITHOUT_CLASSIFICATION	7.808047007543085E-4	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9994391072095874	WITHOUT_CLASSIFICATION	5.60892790412511E-4	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9996356117668732	WITHOUT_CLASSIFICATION	3.643882331268135E-4	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9995986219276487	WITHOUT_CLASSIFICATION	4.013780723512549E-4	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9852062013736341	WITHOUT_CLASSIFICATION	0.014793798626365966	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9995449198043073	WITHOUT_CLASSIFICATION	4.5508019569263594E-4	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9995551166512114	WITHOUT_CLASSIFICATION	4.4488334878857477E-4	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999939700633487	WITHOUT_CLASSIFICATION	6.029936651441549E-6	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9996997771441427	WITHOUT_CLASSIFICATION	3.0022285585719165E-4	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999625216323949	WITHOUT_CLASSIFICATION	3.7478367605105226E-5	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999625216323949	WITHOUT_CLASSIFICATION	3.7478367605105226E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9996518955013138	WITHOUT_CLASSIFICATION	3.4810449868611244E-4	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9994581923126298	WITHOUT_CLASSIFICATION	5.41807687370279E-4	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9994581923126298	WITHOUT_CLASSIFICATION	5.41807687370279E-4	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9994992126603583	WITHOUT_CLASSIFICATION	5.007873396416411E-4	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9998108251207068	WITHOUT_CLASSIFICATION	1.8917487929302938E-4	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9994346027248672	WITHOUT_CLASSIFICATION	5.653972751329432E-4	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9990848179172148	WITHOUT_CLASSIFICATION	9.151820827850956E-4	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.999376725417175	WITHOUT_CLASSIFICATION	6.232745828249559E-4	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999269990562378	WITHOUT_CLASSIFICATION	7.300094376217343E-5	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9996662540896082	WITHOUT_CLASSIFICATION	3.337459103917592E-4	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9998669184756961	WITHOUT_CLASSIFICATION	1.3308152430390743E-4	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9996172996716227	WITHOUT_CLASSIFICATION	3.827003283773207E-4	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9996662604851744	WITHOUT_CLASSIFICATION	3.3373951482568555E-4	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.999863837353823	WITHOUT_CLASSIFICATION	1.3616264617700915E-4	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9997797098478185	WITHOUT_CLASSIFICATION	2.202901521814715E-4	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9996166735524094	WITHOUT_CLASSIFICATION	3.833264475906086E-4	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9995774160198472	WITHOUT_CLASSIFICATION	4.2258398015290814E-4	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999956826110085	WITHOUT_CLASSIFICATION	4.31738899156945E-6	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999065864091913	WITHOUT_CLASSIFICATION	9.341359080867115E-5	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9995951932942985	WITHOUT_CLASSIFICATION	4.0480670570156653E-4	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9997989904361546	WITHOUT_CLASSIFICATION	2.0100956384536806E-4	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.999625637972638	WITHOUT_CLASSIFICATION	3.7436202736188223E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9994463643785458	WITHOUT_CLASSIFICATION	5.536356214541861E-4	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9996786093113971	WITHOUT_CLASSIFICATION	3.2139068860300893E-4	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9993947968294693	WITHOUT_CLASSIFICATION	6.052031705306019E-4	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9994421350753552	WITHOUT_CLASSIFICATION	5.578649246447435E-4	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9995886160572058	WITHOUT_CLASSIFICATION	4.113839427942001E-4	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9993697248923418	WITHOUT_CLASSIFICATION	6.302751076582929E-4	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.999393908419944	WITHOUT_CLASSIFICATION	6.060915800559579E-4	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9994498515953425	WITHOUT_CLASSIFICATION	5.50148404657584E-4	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999062727257397	WITHOUT_CLASSIFICATION	9.372727426023969E-5	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9998279056838079	WITHOUT_CLASSIFICATION	1.72094316192262E-4	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.999537190481961	WITHOUT_CLASSIFICATION	4.6280951803892557E-4	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999545118425082	WITHOUT_CLASSIFICATION	4.5488157491900864E-5	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9993480463207749	WITHOUT_CLASSIFICATION	6.519536792249594E-4	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9995636005174033	WITHOUT_CLASSIFICATION	4.3639948259659845E-4	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9994672616063307	WITHOUT_CLASSIFICATION	5.327383936692084E-4	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9997467242633373	WITHOUT_CLASSIFICATION	2.5327573666266405E-4	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9994076042003925	WITHOUT_CLASSIFICATION	5.923957996074752E-4	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9994033976007962	WITHOUT_CLASSIFICATION	5.966023992037977E-4	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9997136351431466	WITHOUT_CLASSIFICATION	2.863648568533011E-4	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9996443275074512	WITHOUT_CLASSIFICATION	3.55672492548815E-4	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.999505113073858	WITHOUT_CLASSIFICATION	4.948869261419277E-4	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9995795387115214	WITHOUT_CLASSIFICATION	4.2046128847870193E-4	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9993387775210192	WITHOUT_CLASSIFICATION	6.612224789807714E-4	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9995620704087678	WITHOUT_CLASSIFICATION	4.379295912321899E-4	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9993363070888669	WITHOUT_CLASSIFICATION	6.63692911133193E-4	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999798347240396	WITHOUT_CLASSIFICATION	2.016527596039478E-5	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9994858962569061	WITHOUT_CLASSIFICATION	5.141037430939306E-4	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9993662826097581	WITHOUT_CLASSIFICATION	6.33717390241813E-4	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9993780520052881	WITHOUT_CLASSIFICATION	6.219479947118937E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9995648695282106	WITHOUT_CLASSIFICATION	4.351304717894145E-4	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9996046397876942	WITHOUT_CLASSIFICATION	3.953602123057341E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9997836097841379	WITHOUT_CLASSIFICATION	2.1639021586193014E-4	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9996773293651128	WITHOUT_CLASSIFICATION	3.226706348871694E-4	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.999932897261952	WITHOUT_CLASSIFICATION	6.710273804791721E-5	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9998858782489726	WITHOUT_CLASSIFICATION	1.1412175102740838E-4	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9998793514746313	WITHOUT_CLASSIFICATION	1.2064852536879059E-4	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9998793514746313	WITHOUT_CLASSIFICATION	1.2064852536879059E-4	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9996342577432659	WITHOUT_CLASSIFICATION	3.6574225673414095E-4	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9996342577432659	WITHOUT_CLASSIFICATION	3.6574225673414095E-4	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9996342577432659	WITHOUT_CLASSIFICATION	3.6574225673414095E-4	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9994965114557676	WITHOUT_CLASSIFICATION	5.034885442325327E-4	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9994965114557676	WITHOUT_CLASSIFICATION	5.034885442325327E-4	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9994304402499782	WITHOUT_CLASSIFICATION	5.695597500218624E-4	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9994304402499782	WITHOUT_CLASSIFICATION	5.695597500218624E-4	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999758226058103	WITHOUT_CLASSIFICATION	2.417739418965074E-5	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999487008211719	WITHOUT_CLASSIFICATION	5.1299178828025275E-5	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9993448532225804	WITHOUT_CLASSIFICATION	6.551467774196414E-4	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9993448532225804	WITHOUT_CLASSIFICATION	6.551467774196414E-4	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.999635710974293	WITHOUT_CLASSIFICATION	3.6428902570698126E-4	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9996081638556402	WITHOUT_CLASSIFICATION	3.91836144359818E-4	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9993662704611019	WITHOUT_CLASSIFICATION	6.337295388980363E-4	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9995823050783726	WITHOUT_CLASSIFICATION	4.176949216273881E-4	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9997765433331195	WITHOUT_CLASSIFICATION	2.2345666688043553E-4	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9995310085121328	WITHOUT_CLASSIFICATION	4.689914878670867E-4	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9995581395277985	WITHOUT_CLASSIFICATION	4.4186047220155154E-4	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.999457174827869	WITHOUT_CLASSIFICATION	5.428251721309779E-4	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9995661491830564	WITHOUT_CLASSIFICATION	4.3385081694360646E-4	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9993208522785914	WITHOUT_CLASSIFICATION	6.791477214087314E-4	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9997594381749132	WITHOUT_CLASSIFICATION	2.4056182508689375E-4	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9995037977141737	WITHOUT_CLASSIFICATION	4.962022858262048E-4	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9995684504639986	WITHOUT_CLASSIFICATION	4.3154953600151844E-4	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9994862801253471	WITHOUT_CLASSIFICATION	5.137198746528931E-4	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.999409900317522	WITHOUT_CLASSIFICATION	5.900996824781207E-4	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9994208494152078	WITHOUT_CLASSIFICATION	5.791505847921008E-4	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9994765925573111	WITHOUT_CLASSIFICATION	5.234074426888471E-4	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9994124181885747	WITHOUT_CLASSIFICATION	5.875818114253286E-4	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9994223877088114	WITHOUT_CLASSIFICATION	5.77612291188548E-4	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9994815990723961	WITHOUT_CLASSIFICATION	5.18400927603881E-4	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9996011052664516	WITHOUT_CLASSIFICATION	3.9889473354839375E-4	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9995652350705378	WITHOUT_CLASSIFICATION	4.347649294621681E-4	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9996400036734058	WITHOUT_CLASSIFICATION	3.599963265941956E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.999528174918482	WITHOUT_CLASSIFICATION	4.7182508151799303E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9995209442030807	WITHOUT_CLASSIFICATION	4.790557969192216E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9995128422389935	WITHOUT_CLASSIFICATION	4.871577610065178E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9995407660361681	WITHOUT_CLASSIFICATION	4.5923396383186645E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9995399692611314	WITHOUT_CLASSIFICATION	4.6003073886854176E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9995486473721494	WITHOUT_CLASSIFICATION	4.513526278505719E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9995417302530827	WITHOUT_CLASSIFICATION	4.582697469172398E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9995339796662518	WITHOUT_CLASSIFICATION	4.6602033374821866E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9995411426317949	WITHOUT_CLASSIFICATION	4.588573682050948E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9995341105538611	WITHOUT_CLASSIFICATION	4.658894461389589E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9995262311582912	WITHOUT_CLASSIFICATION	4.7376884170885177E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9995341105538611	WITHOUT_CLASSIFICATION	4.658894461389589E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9995341105538611	WITHOUT_CLASSIFICATION	4.658894461389589E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9995341105538611	WITHOUT_CLASSIFICATION	4.658894461389589E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9995341105538611	WITHOUT_CLASSIFICATION	4.658894461389589E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9995341105538611	WITHOUT_CLASSIFICATION	4.658894461389589E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9995341105538611	WITHOUT_CLASSIFICATION	4.658894461389589E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9995262311582912	WITHOUT_CLASSIFICATION	4.7376884170885177E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9995262311582912	WITHOUT_CLASSIFICATION	4.7376884170885177E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9995262311582912	WITHOUT_CLASSIFICATION	4.7376884170885177E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9995262311582912	WITHOUT_CLASSIFICATION	4.7376884170885177E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9995262311582912	WITHOUT_CLASSIFICATION	4.7376884170885177E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9995262311582912	WITHOUT_CLASSIFICATION	4.7376884170885177E-4	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9997622110277009	WITHOUT_CLASSIFICATION	2.377889722989698E-4	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9993875016052337	WITHOUT_CLASSIFICATION	6.124983947664124E-4	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9993147559252237	WITHOUT_CLASSIFICATION	6.852440747764334E-4	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9995010392804347	WITHOUT_CLASSIFICATION	4.989607195654092E-4	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9998832352843099	WITHOUT_CLASSIFICATION	1.1676471569017155E-4	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9995158563835219	WITHOUT_CLASSIFICATION	4.8414361647801157E-4	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9998332756516409	WITHOUT_CLASSIFICATION	1.6672434835903865E-4	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9996918358064263	WITHOUT_CLASSIFICATION	3.081641935736547E-4	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9994717121409931	WITHOUT_CLASSIFICATION	5.282878590068442E-4	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9995554049907203	WITHOUT_CLASSIFICATION	4.4459500927973035E-4	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9729903929310434	WITHOUT_CLASSIFICATION	0.027009607068956658	IMPLEMENTATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9996927416688336	WITHOUT_CLASSIFICATION	3.0725833116640444E-4	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9995037702603807	WITHOUT_CLASSIFICATION	4.962297396192709E-4	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999819539912007	WITHOUT_CLASSIFICATION	1.8046008799300115E-5	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9997880247309597	WITHOUT_CLASSIFICATION	2.1197526904037075E-4	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999139274166914	WITHOUT_CLASSIFICATION	8.607258330858626E-5	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999102122885978	WITHOUT_CLASSIFICATION	8.978771140213697E-5	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9997530603157527	WITHOUT_CLASSIFICATION	2.4693968424734395E-4	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9998194089405188	WITHOUT_CLASSIFICATION	1.8059105948112046E-4	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9997968866302869	WITHOUT_CLASSIFICATION	2.0311336971313925E-4	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9998034282227304	WITHOUT_CLASSIFICATION	1.9657177726953477E-4	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9994513483382722	WITHOUT_CLASSIFICATION	5.4865166172779E-4	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9994418965298255	WITHOUT_CLASSIFICATION	5.581034701745555E-4	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9990676488000327	WITHOUT_CLASSIFICATION	9.323511999672489E-4	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9998879909229575	WITHOUT_CLASSIFICATION	1.1200907704254123E-4	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999611330454443	WITHOUT_CLASSIFICATION	3.8866954555685855E-5	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999523423705919	WITHOUT_CLASSIFICATION	4.765762940796555E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9995180230397911	WITHOUT_CLASSIFICATION	4.8197696020894155E-4	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.9994894881816702	WITHOUT_CLASSIFICATION	5.105118183298215E-4	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9996468728529303	WITHOUT_CLASSIFICATION	3.5312714706972875E-4	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.9995072601586571	WITHOUT_CLASSIFICATION	4.927398413428734E-4	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9997676347321386	WITHOUT_CLASSIFICATION	2.3236526786136092E-4	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9996025089499913	WITHOUT_CLASSIFICATION	3.9749105000883126E-4	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9995135913160607	WITHOUT_CLASSIFICATION	4.86408683939369E-4	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9996389511040997	WITHOUT_CLASSIFICATION	3.6104889590023604E-4	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9996738501583026	WITHOUT_CLASSIFICATION	3.2614984169745167E-4	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9997821929845124	WITHOUT_CLASSIFICATION	2.1780701548761736E-4	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9998007482745973	WITHOUT_CLASSIFICATION	1.99251725402631E-4	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9998024951038678	WITHOUT_CLASSIFICATION	1.9750489613232754E-4	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9997461920105143	WITHOUT_CLASSIFICATION	2.538079894857284E-4	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9997037493180224	WITHOUT_CLASSIFICATION	2.9625068197762223E-4	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9994507075414374	WITHOUT_CLASSIFICATION	5.492924585626602E-4	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9996183750328875	WITHOUT_CLASSIFICATION	3.8162496711240595E-4	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9997516430755193	WITHOUT_CLASSIFICATION	2.483569244806476E-4	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9997516430755193	WITHOUT_CLASSIFICATION	2.483569244806476E-4	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.999482383556987	WITHOUT_CLASSIFICATION	5.176164430130245E-4	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.999482383556987	WITHOUT_CLASSIFICATION	5.176164430130245E-4	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9998510722635292	WITHOUT_CLASSIFICATION	1.4892773647075865E-4	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9998510722635292	WITHOUT_CLASSIFICATION	1.4892773647075865E-4	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9998723567155803	WITHOUT_CLASSIFICATION	1.2764328441975225E-4	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9994344664100914	WITHOUT_CLASSIFICATION	5.65533589908576E-4	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.999792415252065	WITHOUT_CLASSIFICATION	2.0758474793513169E-4	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9996709634162332	WITHOUT_CLASSIFICATION	3.290365837668776E-4	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9996536751140873	WITHOUT_CLASSIFICATION	3.4632488591273874E-4	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999512949787981	WITHOUT_CLASSIFICATION	4.870502120185977E-5	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9994493613994355	WITHOUT_CLASSIFICATION	5.506386005644465E-4	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9997823474918365	WITHOUT_CLASSIFICATION	2.1765250816358964E-4	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9998511091360082	WITHOUT_CLASSIFICATION	1.488908639918474E-4	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.999790820081534	WITHOUT_CLASSIFICATION	2.0917991846607656E-4	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9998650637442332	WITHOUT_CLASSIFICATION	1.349362557667293E-4	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.999678996700958	WITHOUT_CLASSIFICATION	3.210032990420511E-4	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9997330690574402	WITHOUT_CLASSIFICATION	2.6693094255983115E-4	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9998572181055752	WITHOUT_CLASSIFICATION	1.4278189442480736E-4	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9990471495622476	WITHOUT_CLASSIFICATION	9.528504377523063E-4	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9998501580157528	WITHOUT_CLASSIFICATION	1.4984198424713253E-4	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9998417545701875	WITHOUT_CLASSIFICATION	1.5824542981245941E-4	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999192364037184	WITHOUT_CLASSIFICATION	8.076359628154996E-5	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9996459751939002	WITHOUT_CLASSIFICATION	3.540248060997946E-4	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9993204044095427	WITHOUT_CLASSIFICATION	6.795955904573658E-4	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9993067619756811	WITHOUT_CLASSIFICATION	6.932380243187337E-4	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9996744766236518	WITHOUT_CLASSIFICATION	3.2552337634814506E-4	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9993232491346179	WITHOUT_CLASSIFICATION	6.767508653821642E-4	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9997676558343223	WITHOUT_CLASSIFICATION	2.3234416567778879E-4	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9997111649245886	WITHOUT_CLASSIFICATION	2.888350754115203E-4	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9997898471306479	WITHOUT_CLASSIFICATION	2.101528693521307E-4	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998332206069507	WITHOUT_CLASSIFICATION	1.6677939304935468E-4	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998332206069507	WITHOUT_CLASSIFICATION	1.6677939304935468E-4	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998332206069507	WITHOUT_CLASSIFICATION	1.6677939304935468E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9997769572122635	WITHOUT_CLASSIFICATION	2.2304278773664738E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9997769572122635	WITHOUT_CLASSIFICATION	2.2304278773664738E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9994463643785458	WITHOUT_CLASSIFICATION	5.536356214541861E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9994463643785458	WITHOUT_CLASSIFICATION	5.536356214541861E-4	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.999983299452649	WITHOUT_CLASSIFICATION	1.670054735101863E-5	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9992731673956893	WITHOUT_CLASSIFICATION	7.268326043107663E-4	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9994385510275776	WITHOUT_CLASSIFICATION	5.61448972422298E-4	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9993917539854935	WITHOUT_CLASSIFICATION	6.082460145065184E-4	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998332206069507	WITHOUT_CLASSIFICATION	1.6677939304935468E-4	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998332206069507	WITHOUT_CLASSIFICATION	1.6677939304935468E-4	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9998332206069507	WITHOUT_CLASSIFICATION	1.6677939304935468E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9997769572122635	WITHOUT_CLASSIFICATION	2.2304278773664738E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9997769572122635	WITHOUT_CLASSIFICATION	2.2304278773664738E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9997769572122635	WITHOUT_CLASSIFICATION	2.2304278773664738E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9994463643785458	WITHOUT_CLASSIFICATION	5.536356214541861E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9994463643785458	WITHOUT_CLASSIFICATION	5.536356214541861E-4	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9998339448171748	WITHOUT_CLASSIFICATION	1.6605518282527138E-4	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9995737144272194	WITHOUT_CLASSIFICATION	4.2628557278057605E-4	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9998305369555848	WITHOUT_CLASSIFICATION	1.6946304441516855E-4	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9998305369555848	WITHOUT_CLASSIFICATION	1.6946304441516855E-4	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9998305369555848	WITHOUT_CLASSIFICATION	1.6946304441516855E-4	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9998305369555848	WITHOUT_CLASSIFICATION	1.6946304441516855E-4	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9998305369555848	WITHOUT_CLASSIFICATION	1.6946304441516855E-4	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9993340278426023	WITHOUT_CLASSIFICATION	6.65972157397648E-4	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9994285285785125	WITHOUT_CLASSIFICATION	5.714714214874728E-4	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9994814790286135	WITHOUT_CLASSIFICATION	5.185209713864499E-4	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9994978135891742	WITHOUT_CLASSIFICATION	5.02186410825783E-4	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9993656425589997	WITHOUT_CLASSIFICATION	6.343574410001908E-4	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9997468870294902	WITHOUT_CLASSIFICATION	2.531129705097911E-4	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9972188579098183	WITHOUT_CLASSIFICATION	0.0027811420901816737	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9995731593997943	WITHOUT_CLASSIFICATION	4.26840600205677E-4	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9993532534432283	WITHOUT_CLASSIFICATION	6.467465567716333E-4	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9998810116943341	WITHOUT_CLASSIFICATION	1.1898830566592926E-4	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9992563037771471	WITHOUT_CLASSIFICATION	7.436962228528178E-4	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.999867369364533	WITHOUT_CLASSIFICATION	1.3263063546687734E-4	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9996413034636488	WITHOUT_CLASSIFICATION	3.586965363512758E-4	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.999503866979806	WITHOUT_CLASSIFICATION	4.961330201940236E-4	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9996130231251863	WITHOUT_CLASSIFICATION	3.869768748136875E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9993620040077914	WITHOUT_CLASSIFICATION	6.379959922086496E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9993620040077914	WITHOUT_CLASSIFICATION	6.379959922086496E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9993620040077914	WITHOUT_CLASSIFICATION	6.379959922086496E-4	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9997089121937051	WITHOUT_CLASSIFICATION	2.910878062949715E-4	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9997089121937051	WITHOUT_CLASSIFICATION	2.910878062949715E-4	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.999327705485677	WITHOUT_CLASSIFICATION	6.722945143231009E-4	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.999918518994969	WITHOUT_CLASSIFICATION	8.148100503100288E-5	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9995502891085181	WITHOUT_CLASSIFICATION	4.4971089148184665E-4	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9995588689044521	WITHOUT_CLASSIFICATION	4.411310955479196E-4	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9995602097895436	WITHOUT_CLASSIFICATION	4.3979021045638974E-4	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9995071065106034	WITHOUT_CLASSIFICATION	4.928934893965909E-4	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9995572894379522	WITHOUT_CLASSIFICATION	4.427105620477747E-4	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9996037367228728	WITHOUT_CLASSIFICATION	3.9626327712713656E-4	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9996049412793057	WITHOUT_CLASSIFICATION	3.950587206943028E-4	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9995572367939818	WITHOUT_CLASSIFICATION	4.427632060181437E-4	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9994501873024741	WITHOUT_CLASSIFICATION	5.498126975258291E-4	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9993524543676853	WITHOUT_CLASSIFICATION	6.475456323148412E-4	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9993397427324933	WITHOUT_CLASSIFICATION	6.60257267506764E-4	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9993910896197921	WITHOUT_CLASSIFICATION	6.089103802078806E-4	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.9993202081538906	WITHOUT_CLASSIFICATION	6.797918461094706E-4	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9994153142559534	WITHOUT_CLASSIFICATION	5.84685744046494E-4	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9993198945114866	WITHOUT_CLASSIFICATION	6.801054885134653E-4	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9994564041605644	WITHOUT_CLASSIFICATION	5.435958394356894E-4	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9994067132588503	WITHOUT_CLASSIFICATION	5.932867411496079E-4	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9998592302177274	WITHOUT_CLASSIFICATION	1.4076978227257043E-4	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9995262978276214	WITHOUT_CLASSIFICATION	4.737021723785869E-4	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9993679678175128	WITHOUT_CLASSIFICATION	6.320321824871219E-4	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9993161365356259	WITHOUT_CLASSIFICATION	6.838634643740636E-4	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9993185697347472	WITHOUT_CLASSIFICATION	6.814302652528971E-4	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9993933786564599	WITHOUT_CLASSIFICATION	6.066213435399229E-4	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9996592761587307	WITHOUT_CLASSIFICATION	3.407238412692984E-4	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9997051407733866	WITHOUT_CLASSIFICATION	2.9485922661333635E-4	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999635186824587	WITHOUT_CLASSIFICATION	3.648131754131942E-5	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.999745211250754	WITHOUT_CLASSIFICATION	2.54788749246071E-4	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9998456362923037	WITHOUT_CLASSIFICATION	1.543637076963282E-4	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9998977813451866	WITHOUT_CLASSIFICATION	1.022186548134459E-4	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.999332305861483	WITHOUT_CLASSIFICATION	6.676941385168525E-4	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9994936430946506	WITHOUT_CLASSIFICATION	5.063569053494105E-4	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9998713581309502	WITHOUT_CLASSIFICATION	1.28641869049835E-4	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9998614007117476	WITHOUT_CLASSIFICATION	1.3859928825244185E-4	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9996924450790393	WITHOUT_CLASSIFICATION	3.0755492096063504E-4	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9996924450790393	WITHOUT_CLASSIFICATION	3.0755492096063504E-4	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9991150850284383	WITHOUT_CLASSIFICATION	8.849149715618089E-4	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9997625492789728	WITHOUT_CLASSIFICATION	2.3745072102729773E-4	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.999818950093937	WITHOUT_CLASSIFICATION	1.810499060630826E-4	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9997585422696607	WITHOUT_CLASSIFICATION	2.414577303393699E-4	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9996634175586331	WITHOUT_CLASSIFICATION	3.365824413669586E-4	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9995366834992346	WITHOUT_CLASSIFICATION	4.6331650076530967E-4	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9993992158054004	WITHOUT_CLASSIFICATION	6.007841945996205E-4	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999585914548555	WITHOUT_CLASSIFICATION	4.140854514442278E-5	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9996857088392783	WITHOUT_CLASSIFICATION	3.1429116072175076E-4	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.999813537623275	WITHOUT_CLASSIFICATION	1.8646237672494354E-4	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9997791917374609	WITHOUT_CLASSIFICATION	2.2080826253918269E-4	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9997791917374609	WITHOUT_CLASSIFICATION	2.2080826253918269E-4	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9997791917374609	WITHOUT_CLASSIFICATION	2.2080826253918269E-4	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9997791917374609	WITHOUT_CLASSIFICATION	2.2080826253918269E-4	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.999356075236671	WITHOUT_CLASSIFICATION	6.439247633289073E-4	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9993808192491794	WITHOUT_CLASSIFICATION	6.191807508206452E-4	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.99939517024819	WITHOUT_CLASSIFICATION	6.048297518100066E-4	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9995759575347984	WITHOUT_CLASSIFICATION	4.240424652015434E-4	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9997385658631327	WITHOUT_CLASSIFICATION	2.6143413686723993E-4	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9996422924544032	WITHOUT_CLASSIFICATION	3.577075455968393E-4	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.999863117567405	WITHOUT_CLASSIFICATION	1.3688243259496626E-4	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9995491932645342	WITHOUT_CLASSIFICATION	4.5080673546581086E-4	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9995491932645342	WITHOUT_CLASSIFICATION	4.5080673546581086E-4	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9996783987874788	WITHOUT_CLASSIFICATION	3.2160121252115267E-4	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9998376320065115	WITHOUT_CLASSIFICATION	1.623679934885776E-4	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9996250093397794	WITHOUT_CLASSIFICATION	3.749906602205754E-4	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9997100270792697	WITHOUT_CLASSIFICATION	2.89972920730252E-4	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9997100270792697	WITHOUT_CLASSIFICATION	2.89972920730252E-4	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9997196704939644	WITHOUT_CLASSIFICATION	2.803295060356288E-4	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9996453633867542	WITHOUT_CLASSIFICATION	3.546366132457576E-4	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9996453633867542	WITHOUT_CLASSIFICATION	3.546366132457576E-4	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9997264422457753	WITHOUT_CLASSIFICATION	2.7355775422469654E-4	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9998258779810281	WITHOUT_CLASSIFICATION	1.7412201897197544E-4	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9998655395758955	WITHOUT_CLASSIFICATION	1.3446042410447044E-4	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9998698947639	WITHOUT_CLASSIFICATION	1.301052361001029E-4	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999181786032393	WITHOUT_CLASSIFICATION	8.182139676068953E-5	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999147887446648	WITHOUT_CLASSIFICATION	8.521125533527131E-5	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.999563695152164	WITHOUT_CLASSIFICATION	4.3630484783599297E-4	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9993236939206126	WITHOUT_CLASSIFICATION	6.763060793874331E-4	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9998677891733079	WITHOUT_CLASSIFICATION	1.322108266921308E-4	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9998454248631444	WITHOUT_CLASSIFICATION	1.5457513685559132E-4	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9996019730485611	WITHOUT_CLASSIFICATION	3.9802695143891474E-4	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9993517488549812	WITHOUT_CLASSIFICATION	6.482511450188283E-4	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9998497636775375	WITHOUT_CLASSIFICATION	1.5023632246237385E-4	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9998568948381578	WITHOUT_CLASSIFICATION	1.43105161842184E-4	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9995143892372181	WITHOUT_CLASSIFICATION	4.856107627817877E-4	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9986121417617349	WITHOUT_CLASSIFICATION	0.0013878582382651024	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.999576110919098	WITHOUT_CLASSIFICATION	4.2388908090195505E-4	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9994971235403048	WITHOUT_CLASSIFICATION	5.028764596951662E-4	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9995378386524094	WITHOUT_CLASSIFICATION	4.621613475905669E-4	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9995464265650137	WITHOUT_CLASSIFICATION	4.535734349862378E-4	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9994263624566153	WITHOUT_CLASSIFICATION	5.736375433846821E-4	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9998266940244912	WITHOUT_CLASSIFICATION	1.7330597550882957E-4	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9998260946874967	WITHOUT_CLASSIFICATION	1.7390531250316521E-4	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9996963453632774	WITHOUT_CLASSIFICATION	3.036546367225228E-4	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9998452216714726	WITHOUT_CLASSIFICATION	1.5477832852730215E-4	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9993064743050191	WITHOUT_CLASSIFICATION	6.935256949808879E-4	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9995633994660987	WITHOUT_CLASSIFICATION	4.3660053390122243E-4	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9995097032363026	WITHOUT_CLASSIFICATION	4.902967636973947E-4	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9996812832314608	WITHOUT_CLASSIFICATION	3.1871676853932406E-4	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9994155187177483	WITHOUT_CLASSIFICATION	5.844812822518263E-4	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9998293881533231	WITHOUT_CLASSIFICATION	1.7061184667687933E-4	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9997434115809389	WITHOUT_CLASSIFICATION	2.565884190610577E-4	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9995519869916798	WITHOUT_CLASSIFICATION	4.480130083202433E-4	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9998456684515415	WITHOUT_CLASSIFICATION	1.5433154845850017E-4	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9992209798390275	WITHOUT_CLASSIFICATION	7.79020160972605E-4	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9993197506543993	WITHOUT_CLASSIFICATION	6.802493456007006E-4	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9995246716133	WITHOUT_CLASSIFICATION	4.753283866998791E-4	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9995201833342959	WITHOUT_CLASSIFICATION	4.798166657040608E-4	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9992209798390275	WITHOUT_CLASSIFICATION	7.79020160972605E-4	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9993197506543993	WITHOUT_CLASSIFICATION	6.802493456007006E-4	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9995684573960552	WITHOUT_CLASSIFICATION	4.3154260394491E-4	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9993254288965928	WITHOUT_CLASSIFICATION	6.745711034071929E-4	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9993254288965928	WITHOUT_CLASSIFICATION	6.745711034071929E-4	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9997142420243751	WITHOUT_CLASSIFICATION	2.8575797562489444E-4	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9998603590568881	WITHOUT_CLASSIFICATION	1.396409431119112E-4	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9993916601417394	WITHOUT_CLASSIFICATION	6.083398582606088E-4	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9996834761141498	WITHOUT_CLASSIFICATION	3.1652388585031046E-4	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9995338550867177	WITHOUT_CLASSIFICATION	4.661449132823304E-4	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9993344183600986	WITHOUT_CLASSIFICATION	6.655816399014532E-4	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9995221477610411	WITHOUT_CLASSIFICATION	4.7785223895888346E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9993560906533995	WITHOUT_CLASSIFICATION	6.439093466004674E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9994515152586605	WITHOUT_CLASSIFICATION	5.484847413395313E-4	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9996524198311976	WITHOUT_CLASSIFICATION	3.475801688023753E-4	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9996554953680502	WITHOUT_CLASSIFICATION	3.4450463194981516E-4	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9994751520315373	WITHOUT_CLASSIFICATION	5.248479684627584E-4	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9994751520315373	WITHOUT_CLASSIFICATION	5.248479684627584E-4	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9994078460498256	WITHOUT_CLASSIFICATION	5.921539501743629E-4	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9994078460498256	WITHOUT_CLASSIFICATION	5.921539501743629E-4	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9996446548652228	WITHOUT_CLASSIFICATION	3.553451347771792E-4	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9996170270507505	WITHOUT_CLASSIFICATION	3.8297294924955546E-4	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9996139306529034	WITHOUT_CLASSIFICATION	3.860693470966115E-4	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9994586889791057	WITHOUT_CLASSIFICATION	5.413110208941621E-4	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9993916601417394	WITHOUT_CLASSIFICATION	6.083398582606088E-4	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9993560906533995	WITHOUT_CLASSIFICATION	6.439093466004674E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9993719740316636	WITHOUT_CLASSIFICATION	6.280259683364125E-4	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9995245732293754	WITHOUT_CLASSIFICATION	4.754267706245988E-4	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9993233506830839	WITHOUT_CLASSIFICATION	6.766493169160435E-4	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9995662636731388	WITHOUT_CLASSIFICATION	4.3373632686124325E-4	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.999658813197423	WITHOUT_CLASSIFICATION	3.411868025769617E-4	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9994715981191298	WITHOUT_CLASSIFICATION	5.284018808702526E-4	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9996073581533482	WITHOUT_CLASSIFICATION	3.9264184665185084E-4	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9995690012861882	WITHOUT_CLASSIFICATION	4.309987138117464E-4	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9997760223641351	WITHOUT_CLASSIFICATION	2.2397763586493692E-4	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9996965606916781	WITHOUT_CLASSIFICATION	3.034393083218728E-4	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.9994343524030256	WITHOUT_CLASSIFICATION	5.656475969743506E-4	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9994648340710668	WITHOUT_CLASSIFICATION	5.351659289332257E-4	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9994782268935936	WITHOUT_CLASSIFICATION	5.217731064064714E-4	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.999896019861427	WITHOUT_CLASSIFICATION	1.0398013857311903E-4	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9994695606393578	WITHOUT_CLASSIFICATION	5.304393606421524E-4	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9994538435380974	WITHOUT_CLASSIFICATION	5.461564619025236E-4	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9994114023951266	WITHOUT_CLASSIFICATION	5.885976048733772E-4	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9994226504687725	WITHOUT_CLASSIFICATION	5.773495312275375E-4	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9994226504687725	WITHOUT_CLASSIFICATION	5.773495312275375E-4	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9994226504687725	WITHOUT_CLASSIFICATION	5.773495312275375E-4	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9996475788022294	WITHOUT_CLASSIFICATION	3.5242119777059683E-4	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9993360765678805	WITHOUT_CLASSIFICATION	6.639234321195106E-4	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999067039409069	WITHOUT_CLASSIFICATION	9.329605909309805E-5	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9994587169747173	WITHOUT_CLASSIFICATION	5.412830252826984E-4	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9994587169747173	WITHOUT_CLASSIFICATION	5.412830252826984E-4	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9994586889791057	WITHOUT_CLASSIFICATION	5.413110208941621E-4	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9994586889791057	WITHOUT_CLASSIFICATION	5.413110208941621E-4	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9994668469823953	WITHOUT_CLASSIFICATION	5.331530176047164E-4	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9994727863691436	WITHOUT_CLASSIFICATION	5.272136308563661E-4	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9995282585469855	WITHOUT_CLASSIFICATION	4.7174145301462464E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9995729384895093	WITHOUT_CLASSIFICATION	4.270615104906712E-4	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.999515323294905	WITHOUT_CLASSIFICATION	4.846767050949771E-4	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9994180643097329	WITHOUT_CLASSIFICATION	5.819356902671801E-4	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9993877034010087	WITHOUT_CLASSIFICATION	6.122965989913896E-4	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.999487550000513	WITHOUT_CLASSIFICATION	5.124499994869022E-4	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9996329767558053	WITHOUT_CLASSIFICATION	3.6702324419469757E-4	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.999612389572843	WITHOUT_CLASSIFICATION	3.876104271568417E-4	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9995423309184508	WITHOUT_CLASSIFICATION	4.576690815492433E-4	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9993298969704671	WITHOUT_CLASSIFICATION	6.701030295328235E-4	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9995348082420067	WITHOUT_CLASSIFICATION	4.651917579933426E-4	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9998729920384047	WITHOUT_CLASSIFICATION	1.2700796159528945E-4	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9995863133694616	WITHOUT_CLASSIFICATION	4.136866305383661E-4	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9998098067458937	WITHOUT_CLASSIFICATION	1.901932541062728E-4	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9996502396240932	WITHOUT_CLASSIFICATION	3.4976037590686104E-4	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9998684395262875	WITHOUT_CLASSIFICATION	1.3156047371244679E-4	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9994231185959735	WITHOUT_CLASSIFICATION	5.768814040263459E-4	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9998023662222262	WITHOUT_CLASSIFICATION	1.9763377777386317E-4	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9995221310619856	WITHOUT_CLASSIFICATION	4.7786893801437445E-4	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9996238203599579	WITHOUT_CLASSIFICATION	3.7617964004211895E-4	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9998178350184224	WITHOUT_CLASSIFICATION	1.821649815776283E-4	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9996705501176769	WITHOUT_CLASSIFICATION	3.294498823230824E-4	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9997956817069096	WITHOUT_CLASSIFICATION	2.0431829309032845E-4	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9998889359161466	WITHOUT_CLASSIFICATION	1.1106408385343169E-4	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9996442244315383	WITHOUT_CLASSIFICATION	3.5577556846162864E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9994169404032404	WITHOUT_CLASSIFICATION	5.830595967596897E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9994169404032404	WITHOUT_CLASSIFICATION	5.830595967596897E-4	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9994308546559009	WITHOUT_CLASSIFICATION	5.691453440990834E-4	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9997721037693953	WITHOUT_CLASSIFICATION	2.2789623060467972E-4	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9997721037693953	WITHOUT_CLASSIFICATION	2.2789623060467972E-4	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9996919785034273	WITHOUT_CLASSIFICATION	3.0802149657272766E-4	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9996919785034273	WITHOUT_CLASSIFICATION	3.0802149657272766E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9993590298808763	WITHOUT_CLASSIFICATION	6.409701191235934E-4	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9996374819100807	WITHOUT_CLASSIFICATION	3.6251808991923275E-4	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9996085006678074	WITHOUT_CLASSIFICATION	3.9149933219265816E-4	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9993304851577763	WITHOUT_CLASSIFICATION	6.69514842223711E-4	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9995029342356122	WITHOUT_CLASSIFICATION	4.970657643877222E-4	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9995672891258451	WITHOUT_CLASSIFICATION	4.327108741548956E-4	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9995672891258451	WITHOUT_CLASSIFICATION	4.327108741548956E-4	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9996238203599579	WITHOUT_CLASSIFICATION	3.7617964004211895E-4	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9996238203599579	WITHOUT_CLASSIFICATION	3.7617964004211895E-4	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9996238203599579	WITHOUT_CLASSIFICATION	3.7617964004211895E-4	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9998178350184224	WITHOUT_CLASSIFICATION	1.821649815776283E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9994169404032404	WITHOUT_CLASSIFICATION	5.830595967596897E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9994169404032404	WITHOUT_CLASSIFICATION	5.830595967596897E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9994169404032404	WITHOUT_CLASSIFICATION	5.830595967596897E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9993590298808763	WITHOUT_CLASSIFICATION	6.409701191235934E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9993590298808763	WITHOUT_CLASSIFICATION	6.409701191235934E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9993590298808763	WITHOUT_CLASSIFICATION	6.409701191235934E-4	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9993304851577763	WITHOUT_CLASSIFICATION	6.69514842223711E-4	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9993304851577763	WITHOUT_CLASSIFICATION	6.69514842223711E-4	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9995657574055056	WITHOUT_CLASSIFICATION	4.342425944944176E-4	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9996255655670554	WITHOUT_CLASSIFICATION	3.744344329445708E-4	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9995865209165501	WITHOUT_CLASSIFICATION	4.134790834498809E-4	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.7281255144102097	WITHOUT_CLASSIFICATION	0.2718744855897904	IMPLEMENTATION
// no digits, error	WITHOUT_CLASSIFICATION	0.999376007277482	WITHOUT_CLASSIFICATION	6.239927225180987E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9993686363287719	WITHOUT_CLASSIFICATION	6.313636712281513E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9993686363287719	WITHOUT_CLASSIFICATION	6.313636712281513E-4	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.999645726570581	WITHOUT_CLASSIFICATION	3.542734294189661E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9995729384895093	WITHOUT_CLASSIFICATION	4.270615104906712E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9995729384895093	WITHOUT_CLASSIFICATION	4.270615104906712E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9995729384895093	WITHOUT_CLASSIFICATION	4.270615104906712E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9995729384895093	WITHOUT_CLASSIFICATION	4.270615104906712E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9995729384895093	WITHOUT_CLASSIFICATION	4.270615104906712E-4	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9997484015987006	WITHOUT_CLASSIFICATION	2.515984012994363E-4	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9997484015987006	WITHOUT_CLASSIFICATION	2.515984012994363E-4	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9997484015987006	WITHOUT_CLASSIFICATION	2.515984012994363E-4	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9995657240314352	WITHOUT_CLASSIFICATION	4.3427596856482494E-4	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9995843927684029	WITHOUT_CLASSIFICATION	4.156072315969484E-4	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9998178350184224	WITHOUT_CLASSIFICATION	1.821649815776283E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9993590298808763	WITHOUT_CLASSIFICATION	6.409701191235934E-4	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9993590298808763	WITHOUT_CLASSIFICATION	6.409701191235934E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9995729384895093	WITHOUT_CLASSIFICATION	4.270615104906712E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9995729384895093	WITHOUT_CLASSIFICATION	4.270615104906712E-4	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9997484015987006	WITHOUT_CLASSIFICATION	2.515984012994363E-4	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.999645726570581	WITHOUT_CLASSIFICATION	3.542734294189661E-4	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9995807879011676	WITHOUT_CLASSIFICATION	4.192120988324957E-4	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.9993251743046339	WITHOUT_CLASSIFICATION	6.748256953662205E-4	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9998786773647278	WITHOUT_CLASSIFICATION	1.2132263527210203E-4	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9995744164098671	WITHOUT_CLASSIFICATION	4.2558359013285615E-4	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9993916601417394	WITHOUT_CLASSIFICATION	6.083398582606088E-4	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9993194137775839	WITHOUT_CLASSIFICATION	6.805862224160724E-4	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9994902283373891	WITHOUT_CLASSIFICATION	5.097716626109266E-4	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9994930603124214	WITHOUT_CLASSIFICATION	5.069396875786714E-4	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9997937766708976	WITHOUT_CLASSIFICATION	2.0622332910239107E-4	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9995944848942182	WITHOUT_CLASSIFICATION	4.055151057818919E-4	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9995080140420568	WITHOUT_CLASSIFICATION	4.919859579431322E-4	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999039401758589	WITHOUT_CLASSIFICATION	9.605982414109917E-5	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9997929588395782	WITHOUT_CLASSIFICATION	2.0704116042166712E-4	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9998334278274693	WITHOUT_CLASSIFICATION	1.6657217253071086E-4	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9997905764229351	WITHOUT_CLASSIFICATION	2.094235770648559E-4	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.999541905697475	WITHOUT_CLASSIFICATION	4.580943025250119E-4	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999037530837115	WITHOUT_CLASSIFICATION	9.624691628855446E-5	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9994270586357925	WITHOUT_CLASSIFICATION	5.729413642075736E-4	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9995294485120974	WITHOUT_CLASSIFICATION	4.705514879025766E-4	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9997380650240835	WITHOUT_CLASSIFICATION	2.61934975916575E-4	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9997029315411052	WITHOUT_CLASSIFICATION	2.970684588947309E-4	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9998316919457876	WITHOUT_CLASSIFICATION	1.6830805421245686E-4	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.999469787123648	WITHOUT_CLASSIFICATION	5.3021287635197E-4	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9995081233640049	WITHOUT_CLASSIFICATION	4.91876635995182E-4	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9997806261766707	WITHOUT_CLASSIFICATION	2.1937382332936421E-4	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9993337722428489	WITHOUT_CLASSIFICATION	6.662277571511366E-4	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9996782837972584	WITHOUT_CLASSIFICATION	3.217162027415262E-4	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9996115238025519	WITHOUT_CLASSIFICATION	3.884761974481439E-4	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9997235836902599	WITHOUT_CLASSIFICATION	2.76416309740129E-4	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9997844156606418	WITHOUT_CLASSIFICATION	2.1558433935822105E-4	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9995029460067298	WITHOUT_CLASSIFICATION	4.97053993270217E-4	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.999584763040899	WITHOUT_CLASSIFICATION	4.1523695910089325E-4	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.999802817059345	WITHOUT_CLASSIFICATION	1.971829406550532E-4	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9995807879011676	WITHOUT_CLASSIFICATION	4.192120988324957E-4	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9994741292591162	WITHOUT_CLASSIFICATION	5.258707408838273E-4	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9983780448192882	WITHOUT_CLASSIFICATION	0.0016219551807119406	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9996705337434666	WITHOUT_CLASSIFICATION	3.294662565333834E-4	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9995721218097545	WITHOUT_CLASSIFICATION	4.2787819024550693E-4	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9995721218097545	WITHOUT_CLASSIFICATION	4.2787819024550693E-4	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9992450259208211	WITHOUT_CLASSIFICATION	7.549740791789824E-4	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9992450259208211	WITHOUT_CLASSIFICATION	7.549740791789824E-4	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9995566402092765	WITHOUT_CLASSIFICATION	4.433597907234821E-4	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.999793541327568	WITHOUT_CLASSIFICATION	2.0645867243195793E-4	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9994279774795475	WITHOUT_CLASSIFICATION	5.720225204524643E-4	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9991814515752858	WITHOUT_CLASSIFICATION	8.185484247142562E-4	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9997652929449106	WITHOUT_CLASSIFICATION	2.3470705508944965E-4	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9991828372935269	WITHOUT_CLASSIFICATION	8.171627064730915E-4	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9998317348033282	WITHOUT_CLASSIFICATION	1.6826519667182752E-4	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9997770559023265	WITHOUT_CLASSIFICATION	2.2294409767359947E-4	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9995394446363117	WITHOUT_CLASSIFICATION	4.605553636883254E-4	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9998938124841928	WITHOUT_CLASSIFICATION	1.0618751580719355E-4	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9996907911224183	WITHOUT_CLASSIFICATION	3.092088775817016E-4	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9997791512862736	WITHOUT_CLASSIFICATION	2.2084871372647204E-4	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9997791512862736	WITHOUT_CLASSIFICATION	2.2084871372647204E-4	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999476008280699	WITHOUT_CLASSIFICATION	5.2399171930225256E-5	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9997450706486658	WITHOUT_CLASSIFICATION	2.549293513341854E-4	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9996939187032362	WITHOUT_CLASSIFICATION	3.0608129676376475E-4	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9996939187032362	WITHOUT_CLASSIFICATION	3.0608129676376475E-4	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9998830706881486	WITHOUT_CLASSIFICATION	1.1692931185138496E-4	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9997322200837101	WITHOUT_CLASSIFICATION	2.677799162899089E-4	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9995359124600918	WITHOUT_CLASSIFICATION	4.6408753990824985E-4	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9997495427758573	WITHOUT_CLASSIFICATION	2.50457224142762E-4	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9995729804474704	WITHOUT_CLASSIFICATION	4.2701955252949167E-4	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.999659895852971	WITHOUT_CLASSIFICATION	3.4010414702898136E-4	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9996802848666112	WITHOUT_CLASSIFICATION	3.197151333887489E-4	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9995013552163372	WITHOUT_CLASSIFICATION	4.986447836627298E-4	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999203687057757	WITHOUT_CLASSIFICATION	7.963129422423911E-5	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9993797630444016	WITHOUT_CLASSIFICATION	6.202369555984883E-4	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9995418144280787	WITHOUT_CLASSIFICATION	4.581855719213146E-4	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9995803435935366	WITHOUT_CLASSIFICATION	4.196564064632379E-4	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9998267666359876	WITHOUT_CLASSIFICATION	1.7323336401243802E-4	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9995607686882403	WITHOUT_CLASSIFICATION	4.3923131175976486E-4	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9997935216273522	WITHOUT_CLASSIFICATION	2.0647837264785006E-4	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9996919088452974	WITHOUT_CLASSIFICATION	3.080911547025758E-4	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.999363309222761	WITHOUT_CLASSIFICATION	6.366907772390217E-4	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.999421592053729	WITHOUT_CLASSIFICATION	5.784079462708811E-4	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999440391191595	WITHOUT_CLASSIFICATION	5.59608808404041E-5	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9997237487005033	WITHOUT_CLASSIFICATION	2.7625129949672834E-4	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.7603738838286663	WITHOUT_CLASSIFICATION	0.23962611617133373	IMPLEMENTATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9998157106366865	WITHOUT_CLASSIFICATION	1.8428936331341494E-4	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9998259599097997	WITHOUT_CLASSIFICATION	1.7404009020026315E-4	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9987715384142597	WITHOUT_CLASSIFICATION	0.001228461585740303	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9995833090650402	WITHOUT_CLASSIFICATION	4.1669093495982126E-4	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.999886408992275	WITHOUT_CLASSIFICATION	1.1359100772511412E-4	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9994789782290497	WITHOUT_CLASSIFICATION	5.210217709502455E-4	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9993294692579952	WITHOUT_CLASSIFICATION	6.705307420047782E-4	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9995962660482797	WITHOUT_CLASSIFICATION	4.037339517203135E-4	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9997334238494507	WITHOUT_CLASSIFICATION	2.665761505493084E-4	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.999925908982823	WITHOUT_CLASSIFICATION	7.409101717704328E-5	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999354616206565	WITHOUT_CLASSIFICATION	6.453837934353107E-5	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9996936809195964	WITHOUT_CLASSIFICATION	3.063190804035308E-4	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9997540219110364	WITHOUT_CLASSIFICATION	2.4597808896363734E-4	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9997540219110364	WITHOUT_CLASSIFICATION	2.4597808896363734E-4	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9997334137962376	WITHOUT_CLASSIFICATION	2.665862037623571E-4	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999667699377851	WITHOUT_CLASSIFICATION	3.323006221490385E-5	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9995980720474162	WITHOUT_CLASSIFICATION	4.019279525837391E-4	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9995909000288431	WITHOUT_CLASSIFICATION	4.090999711568283E-4	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9995727710036699	WITHOUT_CLASSIFICATION	4.2722899633010125E-4	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.999674340039444	WITHOUT_CLASSIFICATION	3.2565996055597326E-4	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9992113334870117	WITHOUT_CLASSIFICATION	7.886665129882427E-4	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9992166647971084	WITHOUT_CLASSIFICATION	7.833352028915859E-4	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9997274224189354	WITHOUT_CLASSIFICATION	2.725775810644739E-4	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9997846273338873	WITHOUT_CLASSIFICATION	2.1537266611277092E-4	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9993713529394853	WITHOUT_CLASSIFICATION	6.286470605146338E-4	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9995640577793677	WITHOUT_CLASSIFICATION	4.3594222063221896E-4	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9996767173505172	WITHOUT_CLASSIFICATION	3.2328264948280433E-4	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9998802426033583	WITHOUT_CLASSIFICATION	1.1975739664179418E-4	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9996147642955583	WITHOUT_CLASSIFICATION	3.8523570444174706E-4	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9996342711919122	WITHOUT_CLASSIFICATION	3.657288080877907E-4	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.999782638503264	WITHOUT_CLASSIFICATION	2.1736149673601634E-4	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9990196554422526	WITHOUT_CLASSIFICATION	9.80344557747439E-4	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9992274200222627	WITHOUT_CLASSIFICATION	7.725799777372655E-4	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9995250595085065	WITHOUT_CLASSIFICATION	4.749404914935589E-4	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9996285666796069	WITHOUT_CLASSIFICATION	3.7143332039311894E-4	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9997352614089393	WITHOUT_CLASSIFICATION	2.6473859106063293E-4	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9996014420970353	WITHOUT_CLASSIFICATION	3.985579029646933E-4	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9997342286308422	WITHOUT_CLASSIFICATION	2.657713691578544E-4	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9998060889814757	WITHOUT_CLASSIFICATION	1.93911018524204E-4	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999287048164607	WITHOUT_CLASSIFICATION	7.129518353935288E-5	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9998952338096535	WITHOUT_CLASSIFICATION	1.047661903464548E-4	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9992985709687306	WITHOUT_CLASSIFICATION	7.014290312692312E-4	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.999597095351577	WITHOUT_CLASSIFICATION	4.029046484229709E-4	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999465358593789	WITHOUT_CLASSIFICATION	5.346414062106435E-5	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999162081929078	WITHOUT_CLASSIFICATION	8.379180709205726E-5	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9995677702153213	WITHOUT_CLASSIFICATION	4.3222978467864916E-4	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9995893002286411	WITHOUT_CLASSIFICATION	4.1069977135880506E-4	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9998354704457918	WITHOUT_CLASSIFICATION	1.6452955420824785E-4	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9998763023633869	WITHOUT_CLASSIFICATION	1.2369763661314664E-4	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9996036748951105	WITHOUT_CLASSIFICATION	3.963251048895322E-4	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.99943072637381	WITHOUT_CLASSIFICATION	5.69273626189953E-4	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9993489546180085	WITHOUT_CLASSIFICATION	6.510453819914742E-4	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9994687952367665	WITHOUT_CLASSIFICATION	5.312047632335457E-4	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9993338929847179	WITHOUT_CLASSIFICATION	6.661070152821973E-4	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9993922959389296	WITHOUT_CLASSIFICATION	6.077040610703229E-4	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9993922959389296	WITHOUT_CLASSIFICATION	6.077040610703229E-4	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9993916601417394	WITHOUT_CLASSIFICATION	6.083398582606088E-4	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9994629130682338	WITHOUT_CLASSIFICATION	5.370869317662616E-4	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9993215668144546	WITHOUT_CLASSIFICATION	6.784331855454347E-4	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9995937599065435	WITHOUT_CLASSIFICATION	4.062400934564762E-4	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9996714438049331	WITHOUT_CLASSIFICATION	3.2855619506689854E-4	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999888878788894	WITHOUT_CLASSIFICATION	1.1112121110618775E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9996655684363007	WITHOUT_CLASSIFICATION	3.344315636993117E-4	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999472491493754	WITHOUT_CLASSIFICATION	5.275085062468122E-5	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9997071586709404	WITHOUT_CLASSIFICATION	2.9284132905957853E-4	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.999522149802964	WITHOUT_CLASSIFICATION	4.7785019703596224E-4	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9996800185346566	WITHOUT_CLASSIFICATION	3.199814653434458E-4	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.999633715157503	WITHOUT_CLASSIFICATION	3.6628484249689547E-4	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9997226748725289	WITHOUT_CLASSIFICATION	2.773251274711572E-4	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9996580456862033	WITHOUT_CLASSIFICATION	3.419543137966634E-4	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9995661541271835	WITHOUT_CLASSIFICATION	4.338458728165449E-4	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9992133576868718	WITHOUT_CLASSIFICATION	7.866423131282124E-4	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999084449242996	WITHOUT_CLASSIFICATION	9.15550757004266E-5	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.999436077956478	WITHOUT_CLASSIFICATION	5.639220435218621E-4	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9947880819197046	WITHOUT_CLASSIFICATION	0.005211918080295437	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9997512732655891	WITHOUT_CLASSIFICATION	2.48726734410923E-4	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9998492318610211	WITHOUT_CLASSIFICATION	1.507681389789346E-4	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9996053186139339	WITHOUT_CLASSIFICATION	3.946813860661451E-4	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9998372849560933	WITHOUT_CLASSIFICATION	1.6271504390673498E-4	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999376549968189	WITHOUT_CLASSIFICATION	6.234500318118759E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9996999238727158	WITHOUT_CLASSIFICATION	3.0007612728419336E-4	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9996802577399401	WITHOUT_CLASSIFICATION	3.1974226005991515E-4	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.999900726291763	WITHOUT_CLASSIFICATION	9.927370823699433E-5	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9997876290270965	WITHOUT_CLASSIFICATION	2.1237097290348862E-4	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9995454228445302	WITHOUT_CLASSIFICATION	4.545771554697038E-4	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9994436545447217	WITHOUT_CLASSIFICATION	5.563454552782236E-4	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9995454228445302	WITHOUT_CLASSIFICATION	4.545771554697038E-4	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9998497653121569	WITHOUT_CLASSIFICATION	1.5023468784323846E-4	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9994436545447217	WITHOUT_CLASSIFICATION	5.563454552782236E-4	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9997906092641863	WITHOUT_CLASSIFICATION	2.0939073581378813E-4	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9998452216714726	WITHOUT_CLASSIFICATION	1.5477832852730215E-4	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9329327621449711	WITHOUT_CLASSIFICATION	0.06706723785502895	IMPLEMENTATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.7747935325205957	WITHOUT_CLASSIFICATION	0.2252064674794044	IMPLEMENTATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9997209969418946	WITHOUT_CLASSIFICATION	2.7900305810542016E-4	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9998305369555848	WITHOUT_CLASSIFICATION	1.6946304441516855E-4	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9994744727511328	WITHOUT_CLASSIFICATION	5.255272488672049E-4	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999447534679047	WITHOUT_CLASSIFICATION	5.524653209527144E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9998603590568881	WITHOUT_CLASSIFICATION	1.396409431119112E-4	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9997237487005033	WITHOUT_CLASSIFICATION	2.7625129949672834E-4	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9995865209165501	WITHOUT_CLASSIFICATION	4.134790834498809E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999068426358091	WITHOUT_CLASSIFICATION	9.315736419089579E-5	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9995801549882423	WITHOUT_CLASSIFICATION	4.198450117577373E-4	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9997338495468308	WITHOUT_CLASSIFICATION	2.661504531693125E-4	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9994858962569061	WITHOUT_CLASSIFICATION	5.141037430939306E-4	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9993572633048741	WITHOUT_CLASSIFICATION	6.427366951259478E-4	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9976537917971254	WITHOUT_CLASSIFICATION	0.0023462082028746006	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9998590378933055	WITHOUT_CLASSIFICATION	1.4096210669444406E-4	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9997902041685377	WITHOUT_CLASSIFICATION	2.097958314623696E-4	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999293159498791	WITHOUT_CLASSIFICATION	7.068405012082855E-5	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9997578871194008	WITHOUT_CLASSIFICATION	2.4211288059912915E-4	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9999417179433672	WITHOUT_CLASSIFICATION	5.828205663290993E-5	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9996727139234478	WITHOUT_CLASSIFICATION	3.272860765521679E-4	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.999465350113633	WITHOUT_CLASSIFICATION	5.346498863670176E-4	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9997218787876314	WITHOUT_CLASSIFICATION	2.7812121236862045E-4	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999226771245023	WITHOUT_CLASSIFICATION	7.732287549768162E-5	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9996446915794484	WITHOUT_CLASSIFICATION	3.55308420551671E-4	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999615752763135	WITHOUT_CLASSIFICATION	3.8424723686508787E-4	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999615752763135	WITHOUT_CLASSIFICATION	3.8424723686508787E-4	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9994556368578972	WITHOUT_CLASSIFICATION	5.443631421028858E-4	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999151993658348	WITHOUT_CLASSIFICATION	8.480063416521673E-5	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9993645750680803	WITHOUT_CLASSIFICATION	6.354249319197205E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8793325404967128	WITHOUT_CLASSIFICATION	0.1206674595032871	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8793325404967128	WITHOUT_CLASSIFICATION	0.1206674595032871	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8793325404967128	WITHOUT_CLASSIFICATION	0.1206674595032871	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8793325404967128	WITHOUT_CLASSIFICATION	0.1206674595032871	IMPLEMENTATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9995441327354525	WITHOUT_CLASSIFICATION	4.558672645474937E-4	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9992598363538454	WITHOUT_CLASSIFICATION	7.40163646154497E-4	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9999038540640203	WITHOUT_CLASSIFICATION	9.614593597977839E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9993598447083878	WITHOUT_CLASSIFICATION	6.401552916121562E-4	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.999673130511986	WITHOUT_CLASSIFICATION	3.268694880139375E-4	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9994793285982227	WITHOUT_CLASSIFICATION	5.206714017771689E-4	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9994793285982227	WITHOUT_CLASSIFICATION	5.206714017771689E-4	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9995821646442133	WITHOUT_CLASSIFICATION	4.178353557867195E-4	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999233217105492	WITHOUT_CLASSIFICATION	7.66782894507419E-5	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9880416899743063	WITHOUT_CLASSIFICATION	0.011958310025693624	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9995828993399428	WITHOUT_CLASSIFICATION	4.171006600571088E-4	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9995981169097551	WITHOUT_CLASSIFICATION	4.0188309024494315E-4	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999578539392728	WITHOUT_CLASSIFICATION	4.2146060727175315E-5	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9995142001042768	WITHOUT_CLASSIFICATION	4.8579989572310265E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9998497653121569	WITHOUT_CLASSIFICATION	1.5023468784323846E-4	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9994353641880751	WITHOUT_CLASSIFICATION	5.646358119248645E-4	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999763422380397	WITHOUT_CLASSIFICATION	2.3657761960311684E-5	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9992889055584838	WITHOUT_CLASSIFICATION	7.110944415160951E-4	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9996743332778242	WITHOUT_CLASSIFICATION	3.2566672217582577E-4	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9995405920483511	WITHOUT_CLASSIFICATION	4.5940795164891066E-4	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9995405920483511	WITHOUT_CLASSIFICATION	4.5940795164891066E-4	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999306328964197	WITHOUT_CLASSIFICATION	6.936710358022572E-5	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999225119450491	WITHOUT_CLASSIFICATION	7.748805495097769E-5	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9989140593902884	WITHOUT_CLASSIFICATION	0.0010859406097116196	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9996134820021816	WITHOUT_CLASSIFICATION	3.8651799781838083E-4	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9993705937215381	WITHOUT_CLASSIFICATION	6.294062784618703E-4	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9998065699330559	WITHOUT_CLASSIFICATION	1.9343006694405154E-4	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9995386995419747	WITHOUT_CLASSIFICATION	4.6130045802528485E-4	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9995386995419747	WITHOUT_CLASSIFICATION	4.6130045802528485E-4	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9995386995419747	WITHOUT_CLASSIFICATION	4.6130045802528485E-4	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9995386995419747	WITHOUT_CLASSIFICATION	4.6130045802528485E-4	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999163428233977	WITHOUT_CLASSIFICATION	8.365717660231406E-5	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999140032413931	WITHOUT_CLASSIFICATION	8.599675860683987E-5	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.999227802697296	WITHOUT_CLASSIFICATION	7.721973027039762E-4	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9993143708662797	WITHOUT_CLASSIFICATION	6.856291337202008E-4	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9998850254724712	WITHOUT_CLASSIFICATION	1.1497452752881215E-4	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9994230799129662	WITHOUT_CLASSIFICATION	5.769200870338389E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9994526310183489	WITHOUT_CLASSIFICATION	5.473689816510815E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9994526310183489	WITHOUT_CLASSIFICATION	5.473689816510815E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9994526310183489	WITHOUT_CLASSIFICATION	5.473689816510815E-4	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9994936703524981	WITHOUT_CLASSIFICATION	5.063296475018214E-4	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999492629039274	WITHOUT_CLASSIFICATION	5.073709607263807E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9998650028031972	WITHOUT_CLASSIFICATION	1.3499719680265486E-4	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9998650028031972	WITHOUT_CLASSIFICATION	1.3499719680265486E-4	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.99999927545937	WITHOUT_CLASSIFICATION	7.245406299351447E-7	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9894799222965985	WITHOUT_CLASSIFICATION	0.010520077703401414	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9998130571996802	WITHOUT_CLASSIFICATION	1.8694280031991773E-4	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9996115043620944	WITHOUT_CLASSIFICATION	3.8849563790563493E-4	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9994217803911515	WITHOUT_CLASSIFICATION	5.782196088485721E-4	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9994217803911515	WITHOUT_CLASSIFICATION	5.782196088485721E-4	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.99954449354127	WITHOUT_CLASSIFICATION	4.555064587300166E-4	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999238436813319	WITHOUT_CLASSIFICATION	7.61563186681555E-5	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999971581819976	WITHOUT_CLASSIFICATION	2.8418180023753583E-6	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9994681117286424	WITHOUT_CLASSIFICATION	5.318882713576377E-4	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9682417670361023	WITHOUT_CLASSIFICATION	0.03175823296389764	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9997643075719762	WITHOUT_CLASSIFICATION	2.356924280237464E-4	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9994303607804432	WITHOUT_CLASSIFICATION	5.696392195567664E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9997476843421133	WITHOUT_CLASSIFICATION	2.5231565788671405E-4	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.99988829203392	WITHOUT_CLASSIFICATION	1.1170796608002185E-4	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.999756328645469	WITHOUT_CLASSIFICATION	2.436713545310575E-4	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9998232046303439	WITHOUT_CLASSIFICATION	1.7679536965603694E-4	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9993776371206341	WITHOUT_CLASSIFICATION	6.223628793658666E-4	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9995475205909765	WITHOUT_CLASSIFICATION	4.5247940902354706E-4	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.999897959441825	WITHOUT_CLASSIFICATION	1.0204055817490773E-4	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9997460865493117	WITHOUT_CLASSIFICATION	2.5391345068826956E-4	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.999265058267646	WITHOUT_CLASSIFICATION	7.349417323539393E-4	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9996555148723814	WITHOUT_CLASSIFICATION	3.444851276187268E-4	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9996109732019982	WITHOUT_CLASSIFICATION	3.890267980017763E-4	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.999640388544358	WITHOUT_CLASSIFICATION	3.5961145564194683E-4	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9998402030872495	WITHOUT_CLASSIFICATION	1.597969127503524E-4	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9903273679352256	WITHOUT_CLASSIFICATION	0.00967263206477455	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996415521926206	WITHOUT_CLASSIFICATION	3.5844780737939865E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996415521926206	WITHOUT_CLASSIFICATION	3.5844780737939865E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996415521926206	WITHOUT_CLASSIFICATION	3.5844780737939865E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996415521926206	WITHOUT_CLASSIFICATION	3.5844780737939865E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996415521926206	WITHOUT_CLASSIFICATION	3.5844780737939865E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996415521926206	WITHOUT_CLASSIFICATION	3.5844780737939865E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996415521926206	WITHOUT_CLASSIFICATION	3.5844780737939865E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996415521926206	WITHOUT_CLASSIFICATION	3.5844780737939865E-4	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9996761513962112	WITHOUT_CLASSIFICATION	3.2384860378869743E-4	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9993367523169352	WITHOUT_CLASSIFICATION	6.632476830647168E-4	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9996822456302547	WITHOUT_CLASSIFICATION	3.1775436974540357E-4	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9997887202599627	WITHOUT_CLASSIFICATION	2.112797400373479E-4	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9996655684363007	WITHOUT_CLASSIFICATION	3.344315636993117E-4	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9996655684363007	WITHOUT_CLASSIFICATION	3.344315636993117E-4	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9998017322518612	WITHOUT_CLASSIFICATION	1.9826774813875458E-4	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9997002274240022	WITHOUT_CLASSIFICATION	2.9977257599786807E-4	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9997524354103116	WITHOUT_CLASSIFICATION	2.475645896884746E-4	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999083992438511	WITHOUT_CLASSIFICATION	9.16007561488624E-5	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9995574014534013	WITHOUT_CLASSIFICATION	4.425985465986807E-4	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.99938909730837	WITHOUT_CLASSIFICATION	6.109026916300088E-4	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9995941916314495	WITHOUT_CLASSIFICATION	4.0580836855053803E-4	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9988134869561129	WITHOUT_CLASSIFICATION	0.0011865130438871154	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9993135678428052	WITHOUT_CLASSIFICATION	6.864321571948185E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9997256155449294	WITHOUT_CLASSIFICATION	2.7438445507057646E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9997256155449294	WITHOUT_CLASSIFICATION	2.7438445507057646E-4	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9997256155449294	WITHOUT_CLASSIFICATION	2.7438445507057646E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999334410272594	WITHOUT_CLASSIFICATION	6.655897274059924E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999334410272594	WITHOUT_CLASSIFICATION	6.655897274059924E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999334410272594	WITHOUT_CLASSIFICATION	6.655897274059924E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999334410272594	WITHOUT_CLASSIFICATION	6.655897274059924E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999334410272594	WITHOUT_CLASSIFICATION	6.655897274059924E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999334410272594	WITHOUT_CLASSIFICATION	6.655897274059924E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999334410272594	WITHOUT_CLASSIFICATION	6.655897274059924E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999334410272594	WITHOUT_CLASSIFICATION	6.655897274059924E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999334410272594	WITHOUT_CLASSIFICATION	6.655897274059924E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9998553718939699	WITHOUT_CLASSIFICATION	1.4462810603015484E-4	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9995762324882661	WITHOUT_CLASSIFICATION	4.237675117338779E-4	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9995482760449841	WITHOUT_CLASSIFICATION	4.517239550159577E-4	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9995487093873272	WITHOUT_CLASSIFICATION	4.5129061267270296E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999334410272594	WITHOUT_CLASSIFICATION	6.655897274059924E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999334410272594	WITHOUT_CLASSIFICATION	6.655897274059924E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999334410272594	WITHOUT_CLASSIFICATION	6.655897274059924E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9994038170533788	WITHOUT_CLASSIFICATION	5.961829466212167E-4	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.999768949560118	WITHOUT_CLASSIFICATION	2.310504398819659E-4	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9995786716718265	WITHOUT_CLASSIFICATION	4.21328328173518E-4	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9993052277220154	WITHOUT_CLASSIFICATION	6.947722779846591E-4	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9993052277220154	WITHOUT_CLASSIFICATION	6.947722779846591E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9994490136934657	WITHOUT_CLASSIFICATION	5.509863065343712E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9998104687976055	WITHOUT_CLASSIFICATION	1.8953120239444455E-4	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.999951167950317	WITHOUT_CLASSIFICATION	4.883204968301368E-5	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9995574392661193	WITHOUT_CLASSIFICATION	4.425607338807111E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9992988459800901	WITHOUT_CLASSIFICATION	7.011540199099727E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9992988459800901	WITHOUT_CLASSIFICATION	7.011540199099727E-4	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999314918563091	WITHOUT_CLASSIFICATION	6.850814369087238E-5	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9998522633588596	WITHOUT_CLASSIFICATION	1.4773664114045186E-4	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9996019107474021	WITHOUT_CLASSIFICATION	3.9808925259780077E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9995265296423668	WITHOUT_CLASSIFICATION	4.734703576331354E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9996292683307814	WITHOUT_CLASSIFICATION	3.7073166921859386E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9996292683307814	WITHOUT_CLASSIFICATION	3.7073166921859386E-4	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9994221260340327	WITHOUT_CLASSIFICATION	5.778739659674055E-4	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9994221260340327	WITHOUT_CLASSIFICATION	5.778739659674055E-4	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9998888239526651	WITHOUT_CLASSIFICATION	1.111760473348534E-4	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.999866414546981	WITHOUT_CLASSIFICATION	1.335854530190063E-4	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9995546446955981	WITHOUT_CLASSIFICATION	4.453553044018445E-4	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9993916601417394	WITHOUT_CLASSIFICATION	6.083398582606088E-4	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9995938974874862	WITHOUT_CLASSIFICATION	4.06102512513781E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9996864063653446	WITHOUT_CLASSIFICATION	3.1359363465544867E-4	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9995672891258451	WITHOUT_CLASSIFICATION	4.327108741548956E-4	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9998823246867224	WITHOUT_CLASSIFICATION	1.1767531327756302E-4	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9998688465890291	WITHOUT_CLASSIFICATION	1.311534109709169E-4	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9989854430510183	WITHOUT_CLASSIFICATION	0.0010145569489816704	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9995525666014777	WITHOUT_CLASSIFICATION	4.4743339852222684E-4	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9998021661448278	WITHOUT_CLASSIFICATION	1.9783385517225036E-4	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.999988554755121	WITHOUT_CLASSIFICATION	1.1445244878908775E-5	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.99985556485941	WITHOUT_CLASSIFICATION	1.4443514059005327E-4	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9996353138383172	WITHOUT_CLASSIFICATION	3.6468616168277467E-4	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9995340098606832	WITHOUT_CLASSIFICATION	4.659901393168742E-4	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9997647496522696	WITHOUT_CLASSIFICATION	2.3525034773044418E-4	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9997973095167967	WITHOUT_CLASSIFICATION	2.026904832034149E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999068426358091	WITHOUT_CLASSIFICATION	9.315736419089579E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9998387537588717	WITHOUT_CLASSIFICATION	1.6124624112830903E-4	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9995734542151314	WITHOUT_CLASSIFICATION	4.265457848685227E-4	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.999517352741438	WITHOUT_CLASSIFICATION	4.826472585620654E-4	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9994164188113959	WITHOUT_CLASSIFICATION	5.835811886040667E-4	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9995741802116015	WITHOUT_CLASSIFICATION	4.25819788398541E-4	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999258285606085	WITHOUT_CLASSIFICATION	7.417143939141921E-5	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9996535363856841	WITHOUT_CLASSIFICATION	3.4646361431586725E-4	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9996162376280404	WITHOUT_CLASSIFICATION	3.837623719595869E-4	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9995135665188385	WITHOUT_CLASSIFICATION	4.864334811613932E-4	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.999736020989654	WITHOUT_CLASSIFICATION	2.639790103459996E-4	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9994528921646564	WITHOUT_CLASSIFICATION	5.471078353437127E-4	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9994847606615317	WITHOUT_CLASSIFICATION	5.152393384683032E-4	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9998717317662887	WITHOUT_CLASSIFICATION	1.2826823371123126E-4	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.999789238684002	WITHOUT_CLASSIFICATION	2.107613159978248E-4	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9998569572780232	WITHOUT_CLASSIFICATION	1.430427219768538E-4	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9994815785975638	WITHOUT_CLASSIFICATION	5.184214024361616E-4	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.999577677140031	WITHOUT_CLASSIFICATION	4.223228599690757E-4	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999429002364305	WITHOUT_CLASSIFICATION	5.7099763569356123E-5	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9998969737042686	WITHOUT_CLASSIFICATION	1.0302629573147361E-4	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9996133106938236	WITHOUT_CLASSIFICATION	3.8668930617632763E-4	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9991665549301385	WITHOUT_CLASSIFICATION	8.334450698614755E-4	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9996188145235869	WITHOUT_CLASSIFICATION	3.8118547641302473E-4	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.999928101938983	WITHOUT_CLASSIFICATION	7.189806101701819E-5	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9990207341962861	WITHOUT_CLASSIFICATION	9.792658037139474E-4	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9994496795054993	WITHOUT_CLASSIFICATION	5.503204945006926E-4	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999747542498963	WITHOUT_CLASSIFICATION	2.524575010358801E-5	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9996022546535954	WITHOUT_CLASSIFICATION	3.9774534640457296E-4	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9994870195929574	WITHOUT_CLASSIFICATION	5.129804070426164E-4	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999028787938183	WITHOUT_CLASSIFICATION	9.71212061817116E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9994432855787795	WITHOUT_CLASSIFICATION	5.567144212205031E-4	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9994432855787795	WITHOUT_CLASSIFICATION	5.567144212205031E-4	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999500084215462	WITHOUT_CLASSIFICATION	4.999157845369005E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999500084215462	WITHOUT_CLASSIFICATION	4.999157845369005E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9997444715197094	WITHOUT_CLASSIFICATION	2.5552848029063857E-4	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9997444715197094	WITHOUT_CLASSIFICATION	2.5552848029063857E-4	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9996929211611552	WITHOUT_CLASSIFICATION	3.0707883884487005E-4	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9996929211611552	WITHOUT_CLASSIFICATION	3.0707883884487005E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993430187239033	WITHOUT_CLASSIFICATION	6.569812760967023E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993430187239033	WITHOUT_CLASSIFICATION	6.569812760967023E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993430187239033	WITHOUT_CLASSIFICATION	6.569812760967023E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993430187239033	WITHOUT_CLASSIFICATION	6.569812760967023E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993430187239033	WITHOUT_CLASSIFICATION	6.569812760967023E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993430187239033	WITHOUT_CLASSIFICATION	6.569812760967023E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993430187239033	WITHOUT_CLASSIFICATION	6.569812760967023E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993430187239033	WITHOUT_CLASSIFICATION	6.569812760967023E-4	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9993430187239033	WITHOUT_CLASSIFICATION	6.569812760967023E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9996765723562375	WITHOUT_CLASSIFICATION	3.234276437625251E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9996765723562375	WITHOUT_CLASSIFICATION	3.234276437625251E-4	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9996765723562375	WITHOUT_CLASSIFICATION	3.234276437625251E-4	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9996552911856316	WITHOUT_CLASSIFICATION	3.447088143684544E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9997545613784533	WITHOUT_CLASSIFICATION	2.4543862154670186E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9997545613784533	WITHOUT_CLASSIFICATION	2.4543862154670186E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9997545613784533	WITHOUT_CLASSIFICATION	2.4543862154670186E-4	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9997267804785881	WITHOUT_CLASSIFICATION	2.7321952141184805E-4	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9997267804785881	WITHOUT_CLASSIFICATION	2.7321952141184805E-4	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9997267804785881	WITHOUT_CLASSIFICATION	2.7321952141184805E-4	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9994858962569061	WITHOUT_CLASSIFICATION	5.141037430939306E-4	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9993810474671238	WITHOUT_CLASSIFICATION	6.189525328762562E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9993245212854264	WITHOUT_CLASSIFICATION	6.754787145737196E-4	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9995214480988138	WITHOUT_CLASSIFICATION	4.785519011860753E-4	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9993370474565143	WITHOUT_CLASSIFICATION	6.629525434856829E-4	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9993370474565143	WITHOUT_CLASSIFICATION	6.629525434856829E-4	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9993960862544502	WITHOUT_CLASSIFICATION	6.039137455498458E-4	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999605572345365	WITHOUT_CLASSIFICATION	3.9442765463642456E-5	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999605572345365	WITHOUT_CLASSIFICATION	3.9442765463642456E-5	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.571287867030246	IMPLEMENTATION	0.428712132969754	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9993662826097581	WITHOUT_CLASSIFICATION	6.33717390241813E-4	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9998830811999383	WITHOUT_CLASSIFICATION	1.1691880006163709E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9994055601724208	WITHOUT_CLASSIFICATION	5.944398275791898E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9994055601724208	WITHOUT_CLASSIFICATION	5.944398275791898E-4	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999160453387274	WITHOUT_CLASSIFICATION	8.395466127272552E-5	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9998969564234462	WITHOUT_CLASSIFICATION	1.0304357655385378E-4	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.999097740286886	WITHOUT_CLASSIFICATION	9.022597131140499E-4	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999504526264215	WITHOUT_CLASSIFICATION	4.954737357847297E-5	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9998845784452857	WITHOUT_CLASSIFICATION	1.1542155471423329E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9994055601724208	WITHOUT_CLASSIFICATION	5.944398275791898E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9994055601724208	WITHOUT_CLASSIFICATION	5.944398275791898E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9994055601724208	WITHOUT_CLASSIFICATION	5.944398275791898E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9994055601724208	WITHOUT_CLASSIFICATION	5.944398275791898E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9994055601724208	WITHOUT_CLASSIFICATION	5.944398275791898E-4	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9994715691252326	WITHOUT_CLASSIFICATION	5.28430874767309E-4	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9992787245897102	WITHOUT_CLASSIFICATION	7.212754102897684E-4	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999395179219329	WITHOUT_CLASSIFICATION	6.048207806703783E-5	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9995053864396592	WITHOUT_CLASSIFICATION	4.946135603407799E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999000930214578	WITHOUT_CLASSIFICATION	9.99069785423191E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9975508957356617	WITHOUT_CLASSIFICATION	0.0024491042643383456	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999601497880322	WITHOUT_CLASSIFICATION	3.985021196777632E-5	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.999935460391533	WITHOUT_CLASSIFICATION	6.453960846700589E-5	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9996931495132049	WITHOUT_CLASSIFICATION	3.0685048679515E-4	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9993866630341838	WITHOUT_CLASSIFICATION	6.13336965816186E-4	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9995505406427194	WITHOUT_CLASSIFICATION	4.494593572805359E-4	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9996053186139339	WITHOUT_CLASSIFICATION	3.946813860661451E-4	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.999601096753329	WITHOUT_CLASSIFICATION	3.9890324667111446E-4	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9998160176264294	WITHOUT_CLASSIFICATION	1.8398237357068352E-4	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9997337848827932	WITHOUT_CLASSIFICATION	2.6621511720675796E-4	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9994633338166184	WITHOUT_CLASSIFICATION	5.366661833815913E-4	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9997883308636223	WITHOUT_CLASSIFICATION	2.1166913637780615E-4	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999753652559279	WITHOUT_CLASSIFICATION	2.4634744072107898E-5	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9995695276276293	WITHOUT_CLASSIFICATION	4.304723723706961E-4	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9998434396308543	WITHOUT_CLASSIFICATION	1.5656036914566562E-4	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9997899864625798	WITHOUT_CLASSIFICATION	2.1001353742027972E-4	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9996308351189783	WITHOUT_CLASSIFICATION	3.6916488102167896E-4	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.999522149802964	WITHOUT_CLASSIFICATION	4.7785019703596224E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9994881191801326	WITHOUT_CLASSIFICATION	5.118808198673949E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9994881191801326	WITHOUT_CLASSIFICATION	5.118808198673949E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9994881191801326	WITHOUT_CLASSIFICATION	5.118808198673949E-4	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9994881191801326	WITHOUT_CLASSIFICATION	5.118808198673949E-4	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999146387147287	WITHOUT_CLASSIFICATION	8.536128527135284E-5	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999296945505521	WITHOUT_CLASSIFICATION	7.03054494478317E-5	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9995716278073997	WITHOUT_CLASSIFICATION	4.283721926003138E-4	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9995716278073997	WITHOUT_CLASSIFICATION	4.283721926003138E-4	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9997537659972171	WITHOUT_CLASSIFICATION	2.462340027829435E-4	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9997412263067085	WITHOUT_CLASSIFICATION	2.5877369329151026E-4	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9996246321533013	WITHOUT_CLASSIFICATION	3.75367846698638E-4	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999052066811653	WITHOUT_CLASSIFICATION	9.47933188346962E-5	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9996451346595063	WITHOUT_CLASSIFICATION	3.548653404936653E-4	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9993943480877238	WITHOUT_CLASSIFICATION	6.056519122761059E-4	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9995944614179153	WITHOUT_CLASSIFICATION	4.055385820846521E-4	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999157463011487	WITHOUT_CLASSIFICATION	8.425369885128725E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999157463011487	WITHOUT_CLASSIFICATION	8.425369885128725E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999157463011487	WITHOUT_CLASSIFICATION	8.425369885128725E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999157463011487	WITHOUT_CLASSIFICATION	8.425369885128725E-5	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9998732988618947	WITHOUT_CLASSIFICATION	1.2670113810524608E-4	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999659315414956	WITHOUT_CLASSIFICATION	3.406845850442554E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999659315414956	WITHOUT_CLASSIFICATION	3.406845850442554E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999659315414956	WITHOUT_CLASSIFICATION	3.406845850442554E-5	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9994798187371378	WITHOUT_CLASSIFICATION	5.201812628621942E-4	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9995441069179449	WITHOUT_CLASSIFICATION	4.558930820551115E-4	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9996051570368041	WITHOUT_CLASSIFICATION	3.948429631959499E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8793325404967128	WITHOUT_CLASSIFICATION	0.1206674595032871	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8793325404967128	WITHOUT_CLASSIFICATION	0.1206674595032871	IMPLEMENTATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999916519757678	WITHOUT_CLASSIFICATION	8.348024232219254E-6	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999800113681688	WITHOUT_CLASSIFICATION	1.998863183122367E-5	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9996310942365169	WITHOUT_CLASSIFICATION	3.689057634831604E-4	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9996310942365169	WITHOUT_CLASSIFICATION	3.689057634831604E-4	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9995662262634227	WITHOUT_CLASSIFICATION	4.337737365773034E-4	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9995662262634227	WITHOUT_CLASSIFICATION	4.337737365773034E-4	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999020066170319	WITHOUT_CLASSIFICATION	9.799338296805846E-5	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.999961091619665	WITHOUT_CLASSIFICATION	3.890838033501539E-5	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9994518519488836	WITHOUT_CLASSIFICATION	5.481480511163444E-4	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9994269963915964	WITHOUT_CLASSIFICATION	5.73003608403644E-4	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999770543011121	WITHOUT_CLASSIFICATION	2.2945698887976308E-5	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999475347603957	WITHOUT_CLASSIFICATION	5.246523960433016E-5	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9994484783559436	WITHOUT_CLASSIFICATION	5.515216440563107E-4	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9998660292413687	WITHOUT_CLASSIFICATION	1.3397075863135982E-4	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999949608768594	WITHOUT_CLASSIFICATION	5.039123140676901E-6	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9998465579432353	WITHOUT_CLASSIFICATION	1.5344205676474658E-4	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9998465579432353	WITHOUT_CLASSIFICATION	1.5344205676474658E-4	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9996718334089963	WITHOUT_CLASSIFICATION	3.2816659100361103E-4	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9996718334089963	WITHOUT_CLASSIFICATION	3.2816659100361103E-4	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9996501467295976	WITHOUT_CLASSIFICATION	3.4985327040240317E-4	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999856533678883	WITHOUT_CLASSIFICATION	1.43466321116974E-4	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9996803284103659	WITHOUT_CLASSIFICATION	3.196715896341195E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9996803284103659	WITHOUT_CLASSIFICATION	3.196715896341195E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9996803284103659	WITHOUT_CLASSIFICATION	3.196715896341195E-4	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9993252888982795	WITHOUT_CLASSIFICATION	6.747111017205191E-4	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9994515994129324	WITHOUT_CLASSIFICATION	5.484005870675855E-4	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9996650670977395	WITHOUT_CLASSIFICATION	3.3493290226052093E-4	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9998006976237953	WITHOUT_CLASSIFICATION	1.9930237620465664E-4	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.999802668457691	WITHOUT_CLASSIFICATION	1.9733154230898849E-4	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9991461719087935	WITHOUT_CLASSIFICATION	8.538280912065973E-4	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9996415977043777	WITHOUT_CLASSIFICATION	3.584022956223549E-4	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8793325404967128	WITHOUT_CLASSIFICATION	0.1206674595032871	IMPLEMENTATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9998909751269277	WITHOUT_CLASSIFICATION	1.0902487307224213E-4	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9997053524102909	WITHOUT_CLASSIFICATION	2.946475897091809E-4	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999615752763135	WITHOUT_CLASSIFICATION	3.8424723686508787E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9993194080296354	WITHOUT_CLASSIFICATION	6.805919703646653E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9995723963364651	WITHOUT_CLASSIFICATION	4.2760366353484917E-4	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9995904312343298	WITHOUT_CLASSIFICATION	4.095687656702017E-4	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9995918648098165	WITHOUT_CLASSIFICATION	4.081351901833768E-4	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999175865605684	WITHOUT_CLASSIFICATION	8.241343943154066E-5	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9998284963983929	WITHOUT_CLASSIFICATION	1.7150360160720084E-4	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.999518096541947	WITHOUT_CLASSIFICATION	4.819034580530825E-4	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999356783341321	WITHOUT_CLASSIFICATION	6.43216658678661E-5	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9998709318850839	WITHOUT_CLASSIFICATION	1.290681149161551E-4	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9993432604838108	WITHOUT_CLASSIFICATION	6.567395161891449E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9993432604838108	WITHOUT_CLASSIFICATION	6.567395161891449E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9993786092135408	WITHOUT_CLASSIFICATION	6.21390786459201E-4	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9995855546496379	WITHOUT_CLASSIFICATION	4.1444535036208634E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9997367301971795	WITHOUT_CLASSIFICATION	2.63269802820528E-4	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999461878222524	WITHOUT_CLASSIFICATION	5.381217774767472E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9996970091216183	WITHOUT_CLASSIFICATION	3.029908783817453E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9996970091216183	WITHOUT_CLASSIFICATION	3.029908783817453E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9996970091216183	WITHOUT_CLASSIFICATION	3.029908783817453E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9996970091216183	WITHOUT_CLASSIFICATION	3.029908783817453E-4	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9995387198037264	WITHOUT_CLASSIFICATION	4.6128019627352917E-4	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999436555892288	WITHOUT_CLASSIFICATION	5.6344410771217E-5	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9993229435539525	WITHOUT_CLASSIFICATION	6.770564460475266E-4	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9993238826677491	WITHOUT_CLASSIFICATION	6.761173322509604E-4	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9997245602143675	WITHOUT_CLASSIFICATION	2.7543978563253265E-4	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9998787132156358	WITHOUT_CLASSIFICATION	1.212867843642871E-4	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998373883482704	WITHOUT_CLASSIFICATION	1.626116517297195E-4	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998373883482704	WITHOUT_CLASSIFICATION	1.626116517297195E-4	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998373883482704	WITHOUT_CLASSIFICATION	1.626116517297195E-4	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998373883482704	WITHOUT_CLASSIFICATION	1.626116517297195E-4	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998373883482704	WITHOUT_CLASSIFICATION	1.626116517297195E-4	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998373883482704	WITHOUT_CLASSIFICATION	1.626116517297195E-4	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9998373883482704	WITHOUT_CLASSIFICATION	1.626116517297195E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9997836097841379	WITHOUT_CLASSIFICATION	2.1639021586193014E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9997836097841379	WITHOUT_CLASSIFICATION	2.1639021586193014E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9997836097841379	WITHOUT_CLASSIFICATION	2.1639021586193014E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9997836097841379	WITHOUT_CLASSIFICATION	2.1639021586193014E-4	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9996518955013138	WITHOUT_CLASSIFICATION	3.4810449868611244E-4	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9996518955013138	WITHOUT_CLASSIFICATION	3.4810449868611244E-4	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999973857454633	WITHOUT_CLASSIFICATION	2.6142545368347115E-6	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9998793514746313	WITHOUT_CLASSIFICATION	1.2064852536879059E-4	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9998793514746313	WITHOUT_CLASSIFICATION	1.2064852536879059E-4	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.999456335486501	WITHOUT_CLASSIFICATION	5.436645134990259E-4	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9994745955535249	WITHOUT_CLASSIFICATION	5.254044464751018E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9995411426317949	WITHOUT_CLASSIFICATION	4.588573682050948E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9995411426317949	WITHOUT_CLASSIFICATION	4.588573682050948E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9995411426317949	WITHOUT_CLASSIFICATION	4.588573682050948E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9995411426317949	WITHOUT_CLASSIFICATION	4.588573682050948E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9995411426317949	WITHOUT_CLASSIFICATION	4.588573682050948E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9995411426317949	WITHOUT_CLASSIFICATION	4.588573682050948E-4	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9995411426317949	WITHOUT_CLASSIFICATION	4.588573682050948E-4	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9995341105538611	WITHOUT_CLASSIFICATION	4.658894461389589E-4	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9995262311582912	WITHOUT_CLASSIFICATION	4.7376884170885177E-4	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9995180230397911	WITHOUT_CLASSIFICATION	4.8197696020894155E-4	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9995180230397911	WITHOUT_CLASSIFICATION	4.8197696020894155E-4	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9996669276080151	WITHOUT_CLASSIFICATION	3.330723919848852E-4	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9997037493180224	WITHOUT_CLASSIFICATION	2.9625068197762223E-4	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9997037493180224	WITHOUT_CLASSIFICATION	2.9625068197762223E-4	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999006711325518	WITHOUT_CLASSIFICATION	9.93288674482409E-5	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999329456333381	WITHOUT_CLASSIFICATION	6.705436666188759E-5	IMPLEMENTATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9995322022603567	WITHOUT_CLASSIFICATION	4.6779773964330314E-4	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.999374719070126	WITHOUT_CLASSIFICATION	6.252809298740496E-4	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9996076469051058	WITHOUT_CLASSIFICATION	3.9235309489421436E-4	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9994569709574646	WITHOUT_CLASSIFICATION	5.43029042535433E-4	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9995692535171666	WITHOUT_CLASSIFICATION	4.3074648283332885E-4	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9996286206538222	WITHOUT_CLASSIFICATION	3.71379346177771E-4	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9996250093397794	WITHOUT_CLASSIFICATION	3.749906602205754E-4	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9996821938568957	WITHOUT_CLASSIFICATION	3.1780614310423925E-4	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9997585422696607	WITHOUT_CLASSIFICATION	2.414577303393699E-4	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9996875595196543	WITHOUT_CLASSIFICATION	3.124404803457198E-4	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999585914548555	WITHOUT_CLASSIFICATION	4.140854514442278E-5	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999967308367678	WITHOUT_CLASSIFICATION	3.269163232217757E-6	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9997142420243751	WITHOUT_CLASSIFICATION	2.8575797562489444E-4	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9996022467934558	WITHOUT_CLASSIFICATION	3.9775320654432037E-4	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.999842748153113	WITHOUT_CLASSIFICATION	1.572518468869462E-4	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9996834761141498	WITHOUT_CLASSIFICATION	3.1652388585031046E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9993560906533995	WITHOUT_CLASSIFICATION	6.439093466004674E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9993560906533995	WITHOUT_CLASSIFICATION	6.439093466004674E-4	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9997324703751548	WITHOUT_CLASSIFICATION	2.6752962484528914E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9994169404032404	WITHOUT_CLASSIFICATION	5.830595967596897E-4	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9993877316585115	WITHOUT_CLASSIFICATION	6.122683414884774E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9995729384895093	WITHOUT_CLASSIFICATION	4.270615104906712E-4	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9993194137775839	WITHOUT_CLASSIFICATION	6.805862224160724E-4	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9993194137775839	WITHOUT_CLASSIFICATION	6.805862224160724E-4	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9993194137775839	WITHOUT_CLASSIFICATION	6.805862224160724E-4	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9995944848942182	WITHOUT_CLASSIFICATION	4.055151057818919E-4	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9997380650240835	WITHOUT_CLASSIFICATION	2.61934975916575E-4	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9996040328040553	WITHOUT_CLASSIFICATION	3.9596719594461773E-4	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999701203384046	WITHOUT_CLASSIFICATION	2.987966159545071E-5	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9998346451349911	WITHOUT_CLASSIFICATION	1.6535486500881657E-4	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9998541466517169	WITHOUT_CLASSIFICATION	1.458533482831852E-4	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9997458667290147	WITHOUT_CLASSIFICATION	2.541332709853387E-4	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9998938124841928	WITHOUT_CLASSIFICATION	1.0618751580719355E-4	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9995394446363117	WITHOUT_CLASSIFICATION	4.605553636883254E-4	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9998592728424638	WITHOUT_CLASSIFICATION	1.407271575361834E-4	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9993459163977277	WITHOUT_CLASSIFICATION	6.540836022723117E-4	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9991074588453863	WITHOUT_CLASSIFICATION	8.925411546137042E-4	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.7603738838286663	WITHOUT_CLASSIFICATION	0.23962611617133373	IMPLEMENTATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.999062510902145	WITHOUT_CLASSIFICATION	9.374890978550242E-4	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999258775254269	WITHOUT_CLASSIFICATION	7.412247457302829E-5	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9996693934462239	WITHOUT_CLASSIFICATION	3.306065537762391E-4	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9996346136998497	WITHOUT_CLASSIFICATION	3.6538630015022405E-4	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999465358593789	WITHOUT_CLASSIFICATION	5.346414062106435E-5	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9998777651440902	WITHOUT_CLASSIFICATION	1.2223485590971833E-4	IMPLEMENTATION
