// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.9220979287733801	WITHOUT_CLASSIFICATION	0.0779020712266198	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.928568034752328	IMPLEMENTATION	0.07143196524767209	WITHOUT_CLASSIFICATION
// TODO: Someday, enable.	IMPLEMENTATION	0.9596316485764818	IMPLEMENTATION	0.04036835142351811	WITHOUT_CLASSIFICATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.666037674937978	WITHOUT_CLASSIFICATION	0.33396232506202195	IMPLEMENTATION
// TODO: non-strict option	IMPLEMENTATION	0.9727031519894874	IMPLEMENTATION	0.027296848010512603	WITHOUT_CLASSIFICATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.9717309619429007	IMPLEMENTATION	0.02826903805709942	WITHOUT_CLASSIFICATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.9340820256790024	IMPLEMENTATION	0.06591797432099748	WITHOUT_CLASSIFICATION
// TODO: rescan code range ?	IMPLEMENTATION	0.9368714973377608	IMPLEMENTATION	0.0631285026622393	WITHOUT_CLASSIFICATION
// TODO: rescan code range ?	IMPLEMENTATION	0.9368714973377608	IMPLEMENTATION	0.0631285026622393	WITHOUT_CLASSIFICATION
// TODO: pass this in?	IMPLEMENTATION	0.9876233234593027	IMPLEMENTATION	0.012376676540697192	WITHOUT_CLASSIFICATION
// FIXME: Pass block down?	IMPLEMENTATION	0.8007816928921415	WITHOUT_CLASSIFICATION	0.19921830710785843	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.9970833373925244	IMPLEMENTATION	0.0029166626074756926	WITHOUT_CLASSIFICATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.5202975603947463	WITHOUT_CLASSIFICATION	0.4797024396052537	IMPLEMENTATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.9114274348453324	WITHOUT_CLASSIFICATION	0.08857256515466763	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.9054440719908242	IMPLEMENTATION	0.0945559280091757	WITHOUT_CLASSIFICATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.54952784954358	WITHOUT_CLASSIFICATION	0.45047215045641986	IMPLEMENTATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.7678008829899354	WITHOUT_CLASSIFICATION	0.23219911701006465	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.8753935575280913	IMPLEMENTATION	0.12460644247190862	WITHOUT_CLASSIFICATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.9264214183714364	WITHOUT_CLASSIFICATION	0.07357858162856348	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.7786338307956465	WITHOUT_CLASSIFICATION	0.22136616920435354	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.8839978156993235	IMPLEMENTATION	0.11600218430067649	WITHOUT_CLASSIFICATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.6586099163353362	IMPLEMENTATION	0.3413900836646639	WITHOUT_CLASSIFICATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.933366236989425	IMPLEMENTATION	0.06663376301057504	WITHOUT_CLASSIFICATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.8373465050652789	IMPLEMENTATION	0.16265349493472117	WITHOUT_CLASSIFICATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.9341105046363258	IMPLEMENTATION	0.06588949536367414	WITHOUT_CLASSIFICATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.9759514276364499	IMPLEMENTATION	0.024048572363550135	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.9996685241595025	IMPLEMENTATION	3.3147584049749953E-4	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9997162167720045	IMPLEMENTATION	2.837832279955238E-4	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.9996685241595025	IMPLEMENTATION	3.3147584049749953E-4	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9997162167720045	IMPLEMENTATION	2.837832279955238E-4	WITHOUT_CLASSIFICATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.9997155319314277	IMPLEMENTATION	2.8446806857233175E-4	WITHOUT_CLASSIFICATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.5313866629647915	WITHOUT_CLASSIFICATION	0.4686133370352085	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.9950953708207851	IMPLEMENTATION	0.004904629179214929	WITHOUT_CLASSIFICATION
// TODO: make threadsafe	IMPLEMENTATION	0.998993999372252	IMPLEMENTATION	0.001006000627748028	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9826938736761225	IMPLEMENTATION	0.0173061263238775	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9826938736761225	IMPLEMENTATION	0.0173061263238775	WITHOUT_CLASSIFICATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.9955398759428755	WITHOUT_CLASSIFICATION	0.004460124057124467	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.8756216911138348	IMPLEMENTATION	0.12437830888616516	WITHOUT_CLASSIFICATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.9958262012565061	IMPLEMENTATION	0.004173798743493907	WITHOUT_CLASSIFICATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.8391782704376087	IMPLEMENTATION	0.1608217295623913	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9718623093188815	IMPLEMENTATION	0.02813769068111846	WITHOUT_CLASSIFICATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.9101111032107275	IMPLEMENTATION	0.08988889678927252	WITHOUT_CLASSIFICATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.553765341710405	IMPLEMENTATION	0.44623465828959497	WITHOUT_CLASSIFICATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.989949974264561	WITHOUT_CLASSIFICATION	0.010050025735439044	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.6796412995193963	IMPLEMENTATION	0.32035870048060366	WITHOUT_CLASSIFICATION
// TODO: add trace call?	IMPLEMENTATION	0.9782296010018209	IMPLEMENTATION	0.021770398998179105	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9524436784620072	WITHOUT_CLASSIFICATION	0.04755632153799278	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.8765011116027602	WITHOUT_CLASSIFICATION	0.12349888839723977	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.7512762178083445	WITHOUT_CLASSIFICATION	0.24872378219165545	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.8833914425091516	IMPLEMENTATION	0.11660855749084842	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9524436784620072	WITHOUT_CLASSIFICATION	0.04755632153799278	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.9992502591400862	WITHOUT_CLASSIFICATION	7.497408599137892E-4	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.8032802788422906	IMPLEMENTATION	0.19671972115770942	WITHOUT_CLASSIFICATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.9003236964071527	IMPLEMENTATION	0.09967630359284728	WITHOUT_CLASSIFICATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.9223777666915773	IMPLEMENTATION	0.07762223330842258	WITHOUT_CLASSIFICATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.7887210720543513	WITHOUT_CLASSIFICATION	0.2112789279456488	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.691474905342048	WITHOUT_CLASSIFICATION	0.3085250946579521	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.9892785742002451	WITHOUT_CLASSIFICATION	0.010721425799754828	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9223250164434047	WITHOUT_CLASSIFICATION	0.07767498355659526	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9997831727435822	WITHOUT_CLASSIFICATION	2.1682725641781084E-4	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.985827404665012	WITHOUT_CLASSIFICATION	0.014172595334988115	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9986600477817155	IMPLEMENTATION	0.0013399522182845436	WITHOUT_CLASSIFICATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9986600477817155	IMPLEMENTATION	0.0013399522182845436	WITHOUT_CLASSIFICATION
// TODO: validate port as numeric	IMPLEMENTATION	0.9741655241125717	IMPLEMENTATION	0.025834475887428203	WITHOUT_CLASSIFICATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9999895511549934	IMPLEMENTATION	1.0448845006509245E-5	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.8239121441566292	IMPLEMENTATION	0.17608785584337075	WITHOUT_CLASSIFICATION
// TODO: deal with varargs	IMPLEMENTATION	0.7933415576095829	IMPLEMENTATION	0.2066584423904171	WITHOUT_CLASSIFICATION
// TODO: deal with varargs	IMPLEMENTATION	0.7933415576095829	IMPLEMENTATION	0.2066584423904171	WITHOUT_CLASSIFICATION
// TODO: other reserved names?	IMPLEMENTATION	0.9843055467188722	IMPLEMENTATION	0.01569445328112773	WITHOUT_CLASSIFICATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.6832002588884892	IMPLEMENTATION	0.31679974111151066	WITHOUT_CLASSIFICATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.9850839937865155	IMPLEMENTATION	0.014916006213484571	WITHOUT_CLASSIFICATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.9271097866519009	WITHOUT_CLASSIFICATION	0.07289021334809918	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.5328632240764857	WITHOUT_CLASSIFICATION	0.4671367759235144	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.5328632240764857	WITHOUT_CLASSIFICATION	0.4671367759235144	IMPLEMENTATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.9945657672613432	IMPLEMENTATION	0.00543423273865683	WITHOUT_CLASSIFICATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9579890610441794	IMPLEMENTATION	0.042010938955820684	WITHOUT_CLASSIFICATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9999526071167547	WITHOUT_CLASSIFICATION	4.739288324532692E-5	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.9998809035640264	IMPLEMENTATION	1.1909643597371113E-4	WITHOUT_CLASSIFICATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.9302930511779933	IMPLEMENTATION	0.06970694882200672	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.9924579687604675	IMPLEMENTATION	0.007542031239532485	WITHOUT_CLASSIFICATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.9956088352611452	IMPLEMENTATION	0.004391164738854783	WITHOUT_CLASSIFICATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.9582492416348841	WITHOUT_CLASSIFICATION	0.041750758365115985	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9319851861260569	WITHOUT_CLASSIFICATION	0.06801481387394312	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9319851861260569	WITHOUT_CLASSIFICATION	0.06801481387394312	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.6722249626728923	WITHOUT_CLASSIFICATION	0.3277750373271076	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.6316438167563763	IMPLEMENTATION	0.3683561832436236	WITHOUT_CLASSIFICATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9934072179415279	WITHOUT_CLASSIFICATION	0.0065927820584721335	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9934072179415279	WITHOUT_CLASSIFICATION	0.0065927820584721335	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.9229685003454622	IMPLEMENTATION	0.07703149965453777	WITHOUT_CLASSIFICATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.7236974745160047	IMPLEMENTATION	0.2763025254839953	WITHOUT_CLASSIFICATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.7236974745160047	IMPLEMENTATION	0.2763025254839953	WITHOUT_CLASSIFICATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.7236974745160047	IMPLEMENTATION	0.2763025254839953	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.8413110356517348	IMPLEMENTATION	0.15868896434826524	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.8413110356517348	IMPLEMENTATION	0.15868896434826524	WITHOUT_CLASSIFICATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.9933535013947223	IMPLEMENTATION	0.006646498605277729	WITHOUT_CLASSIFICATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9966981157267172	WITHOUT_CLASSIFICATION	0.0033018842732828817	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.8058628219127588	IMPLEMENTATION	0.19413717808724118	WITHOUT_CLASSIFICATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9999112497750865	IMPLEMENTATION	8.87502249135146E-5	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9998194157894046	IMPLEMENTATION	1.8058421059541778E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9998194157894046	IMPLEMENTATION	1.8058421059541778E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9998194157894046	IMPLEMENTATION	1.8058421059541778E-4	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9718623093188815	IMPLEMENTATION	0.02813769068111846	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9718623093188815	IMPLEMENTATION	0.02813769068111846	WITHOUT_CLASSIFICATION
// TODO: check for ascii string	IMPLEMENTATION	0.7547320654163063	IMPLEMENTATION	0.24526793458369373	WITHOUT_CLASSIFICATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.9924126374104377	IMPLEMENTATION	0.007587362589562286	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9826938736761225	IMPLEMENTATION	0.0173061263238775	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9826938736761225	IMPLEMENTATION	0.0173061263238775	WITHOUT_CLASSIFICATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.858684441101559	IMPLEMENTATION	0.1413155588984411	WITHOUT_CLASSIFICATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.8399051869697589	WITHOUT_CLASSIFICATION	0.16009481303024103	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.54952784954358	WITHOUT_CLASSIFICATION	0.45047215045641986	IMPLEMENTATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9995667609796495	WITHOUT_CLASSIFICATION	4.332390203505225E-4	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.9989638928155433	IMPLEMENTATION	0.0010361071844566948	WITHOUT_CLASSIFICATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.9679208703585892	IMPLEMENTATION	0.03207912964141075	WITHOUT_CLASSIFICATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.995349593494659	WITHOUT_CLASSIFICATION	0.00465040650534088	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999125422936986	WITHOUT_CLASSIFICATION	8.745770630134928E-5	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9999963152043533	WITHOUT_CLASSIFICATION	3.684795646854585E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.999993699186094	WITHOUT_CLASSIFICATION	6.3008139059284445E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.999993699186094	WITHOUT_CLASSIFICATION	6.3008139059284445E-6	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999810520150689	WITHOUT_CLASSIFICATION	1.8947984931044238E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999810520150689	WITHOUT_CLASSIFICATION	1.8947984931044238E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999684477757925	WITHOUT_CLASSIFICATION	3.155222420750498E-5	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999999676070129	WITHOUT_CLASSIFICATION	3.239298713902162E-8	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9999967249114847	WITHOUT_CLASSIFICATION	3.2750885153066333E-6	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999967172223099	WITHOUT_CLASSIFICATION	3.2827776902248393E-6	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999908197501866	WITHOUT_CLASSIFICATION	9.180249813370435E-6	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999908197501866	WITHOUT_CLASSIFICATION	9.180249813370435E-6	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9999968453298523	WITHOUT_CLASSIFICATION	3.154670147698687E-6	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999851409690085	WITHOUT_CLASSIFICATION	1.4859030991594248E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999851409690085	WITHOUT_CLASSIFICATION	1.4859030991594248E-5	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9999907902749373	WITHOUT_CLASSIFICATION	9.209725062598494E-6	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999961486537152	WITHOUT_CLASSIFICATION	3.851346284809443E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999926004220079	WITHOUT_CLASSIFICATION	7.3995779921150695E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999926004220079	WITHOUT_CLASSIFICATION	7.3995779921150695E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999926004220079	WITHOUT_CLASSIFICATION	7.3995779921150695E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999926004220079	WITHOUT_CLASSIFICATION	7.3995779921150695E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999926004220079	WITHOUT_CLASSIFICATION	7.3995779921150695E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999926004220079	WITHOUT_CLASSIFICATION	7.3995779921150695E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999926004220079	WITHOUT_CLASSIFICATION	7.3995779921150695E-6	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999978543892134	WITHOUT_CLASSIFICATION	2.1456107865929397E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999978543892134	WITHOUT_CLASSIFICATION	2.1456107865929397E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999978543892134	WITHOUT_CLASSIFICATION	2.1456107865929397E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999978543892134	WITHOUT_CLASSIFICATION	2.1456107865929397E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999978543892134	WITHOUT_CLASSIFICATION	2.1456107865929397E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999978543892134	WITHOUT_CLASSIFICATION	2.1456107865929397E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999978543892134	WITHOUT_CLASSIFICATION	2.1456107865929397E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999621193570611	WITHOUT_CLASSIFICATION	3.788064293891299E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999621193570611	WITHOUT_CLASSIFICATION	3.788064293891299E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999621193570611	WITHOUT_CLASSIFICATION	3.788064293891299E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999621193570611	WITHOUT_CLASSIFICATION	3.788064293891299E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999621193570611	WITHOUT_CLASSIFICATION	3.788064293891299E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999621193570611	WITHOUT_CLASSIFICATION	3.788064293891299E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999896038737642	WITHOUT_CLASSIFICATION	1.039612623580786E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999896038737642	WITHOUT_CLASSIFICATION	1.039612623580786E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999896038737642	WITHOUT_CLASSIFICATION	1.039612623580786E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999896038737642	WITHOUT_CLASSIFICATION	1.039612623580786E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999896038737642	WITHOUT_CLASSIFICATION	1.039612623580786E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999896038737642	WITHOUT_CLASSIFICATION	1.039612623580786E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999831729801602	WITHOUT_CLASSIFICATION	1.6827019839796174E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999831729801602	WITHOUT_CLASSIFICATION	1.6827019839796174E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999831729801602	WITHOUT_CLASSIFICATION	1.6827019839796174E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999831729801602	WITHOUT_CLASSIFICATION	1.6827019839796174E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999831729801602	WITHOUT_CLASSIFICATION	1.6827019839796174E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999831729801602	WITHOUT_CLASSIFICATION	1.6827019839796174E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999831729801602	WITHOUT_CLASSIFICATION	1.6827019839796174E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999908019556017	WITHOUT_CLASSIFICATION	9.198044398244422E-6	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999908019556017	WITHOUT_CLASSIFICATION	9.198044398244422E-6	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999908019556017	WITHOUT_CLASSIFICATION	9.198044398244422E-6	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999908019556017	WITHOUT_CLASSIFICATION	9.198044398244422E-6	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999579777818787	WITHOUT_CLASSIFICATION	4.202221812125879E-5	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999579777818787	WITHOUT_CLASSIFICATION	4.202221812125879E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999996555479475	WITHOUT_CLASSIFICATION	3.4445205247178827E-7	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9999996837164877	WITHOUT_CLASSIFICATION	3.1628351227472106E-7	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9999748841461327	WITHOUT_CLASSIFICATION	2.511585386743128E-5	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999995109005261	WITHOUT_CLASSIFICATION	4.890994739922147E-7	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999996268113833	WITHOUT_CLASSIFICATION	3.7318861661890985E-7	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999984953260863	WITHOUT_CLASSIFICATION	1.5046739137895979E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999984953260863	WITHOUT_CLASSIFICATION	1.5046739137895979E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999984953260863	WITHOUT_CLASSIFICATION	1.5046739137895979E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999984953260863	WITHOUT_CLASSIFICATION	1.5046739137895979E-6	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999985657191526	WITHOUT_CLASSIFICATION	1.4342808473946452E-6	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999995445293647	WITHOUT_CLASSIFICATION	4.554706354076036E-7	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999970682113976	WITHOUT_CLASSIFICATION	2.931788602502023E-6	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999917394881979	WITHOUT_CLASSIFICATION	8.260511802092725E-6	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9999969789021967	WITHOUT_CLASSIFICATION	3.021097803330498E-6	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999974396210816	WITHOUT_CLASSIFICATION	2.5603789185164547E-6	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999996355881917	WITHOUT_CLASSIFICATION	3.644118083166054E-7	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999998115173366	WITHOUT_CLASSIFICATION	1.8848266338967158E-7	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999375363526	WITHOUT_CLASSIFICATION	6.246364726453064E-8	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999978365704557	WITHOUT_CLASSIFICATION	2.1634295442894277E-6	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999985617631466	WITHOUT_CLASSIFICATION	1.4382368534350433E-6	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999999786749306	WITHOUT_CLASSIFICATION	2.132506933032431E-8	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999833699731598	WITHOUT_CLASSIFICATION	1.6630026840109547E-5	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.999999710701953	WITHOUT_CLASSIFICATION	2.892980469338695E-7	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999990956220168	WITHOUT_CLASSIFICATION	9.043779832250866E-7	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999978999056469	WITHOUT_CLASSIFICATION	2.1000943530690816E-6	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999977832199222	WITHOUT_CLASSIFICATION	2.21678007788243E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999984953260863	WITHOUT_CLASSIFICATION	1.5046739137895979E-6	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999989215609667	WITHOUT_CLASSIFICATION	1.0784390332829054E-6	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999999432873506	WITHOUT_CLASSIFICATION	5.6712649410788054E-8	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999999730986096	WITHOUT_CLASSIFICATION	2.690139040322129E-7	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.999942933056003	WITHOUT_CLASSIFICATION	5.7066943997010666E-5	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999996807553159	WITHOUT_CLASSIFICATION	3.1924468407117993E-7	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999992265415772	WITHOUT_CLASSIFICATION	7.734584228618038E-7	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.999998813062966	WITHOUT_CLASSIFICATION	1.1869370340005674E-6	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999913894715646	WITHOUT_CLASSIFICATION	8.610528435241976E-6	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999538876509387	WITHOUT_CLASSIFICATION	4.611234906134105E-5	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999998429543461	WITHOUT_CLASSIFICATION	1.570456538435007E-7	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999957897869448	WITHOUT_CLASSIFICATION	4.210213055133032E-6	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999983163897106	WITHOUT_CLASSIFICATION	1.683610289380951E-6	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999762482629796	WITHOUT_CLASSIFICATION	2.375173702032499E-5	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.999980580130445	WITHOUT_CLASSIFICATION	1.9419869555104257E-5	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999977405490422	WITHOUT_CLASSIFICATION	2.2594509577441155E-6	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.999999370372376	WITHOUT_CLASSIFICATION	6.29627624017718E-7	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9999989503603556	WITHOUT_CLASSIFICATION	1.049639644385861E-6	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999996602390637	WITHOUT_CLASSIFICATION	3.397609362771372E-7	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999997864564709	WITHOUT_CLASSIFICATION	2.135435290893881E-7	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999999740064227	WITHOUT_CLASSIFICATION	2.599357735809544E-8	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999970501594048	WITHOUT_CLASSIFICATION	2.9498405951378886E-6	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999965504617345	WITHOUT_CLASSIFICATION	3.4495382654402504E-6	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999998435350239	WITHOUT_CLASSIFICATION	1.5646497608345166E-7	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9999360063004975	WITHOUT_CLASSIFICATION	6.399369950240557E-5	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999988610224713	WITHOUT_CLASSIFICATION	1.1389775287543286E-6	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9999986211649214	WITHOUT_CLASSIFICATION	1.3788350785576924E-6	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999975404673389	WITHOUT_CLASSIFICATION	2.459532661207241E-6	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999998372408008	WITHOUT_CLASSIFICATION	1.6275919920612424E-7	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999999482422574	WITHOUT_CLASSIFICATION	5.175774259695255E-8	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999972814270255	WITHOUT_CLASSIFICATION	2.7185729746026213E-6	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999997126316881	WITHOUT_CLASSIFICATION	2.87368311892743E-7	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999917995045574	WITHOUT_CLASSIFICATION	8.200495442557603E-6	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999993061908415	WITHOUT_CLASSIFICATION	6.938091584210333E-7	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999856211292635	WITHOUT_CLASSIFICATION	1.4378870736589309E-5	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999993173895921	WITHOUT_CLASSIFICATION	6.826104078509678E-7	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999918483649444	WITHOUT_CLASSIFICATION	8.15163505567522E-6	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999999804675702	WITHOUT_CLASSIFICATION	1.9532429706930862E-8	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999998250506962	WITHOUT_CLASSIFICATION	1.7494930370789704E-7	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999905505876455	WITHOUT_CLASSIFICATION	9.44941235439388E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999935850121412	WITHOUT_CLASSIFICATION	6.414987858808952E-6	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999996223251251	WITHOUT_CLASSIFICATION	3.776748749405604E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999919713188633	WITHOUT_CLASSIFICATION	8.028681136585058E-6	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999902203693222	WITHOUT_CLASSIFICATION	9.779630677947786E-6	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9697887841547489	WITHOUT_CLASSIFICATION	0.030211215845251136	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9697887841547489	WITHOUT_CLASSIFICATION	0.030211215845251136	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9744525111421943	WITHOUT_CLASSIFICATION	0.02554748885780556	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999999387282541	WITHOUT_CLASSIFICATION	6.127174588816149E-8	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999988726290493	WITHOUT_CLASSIFICATION	1.1273709507048376E-6	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.999999110333602	WITHOUT_CLASSIFICATION	8.896663979978911E-7	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999997960819734	WITHOUT_CLASSIFICATION	2.0391802663560254E-7	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999739541393505	WITHOUT_CLASSIFICATION	2.604586064945335E-5	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9999984222268102	WITHOUT_CLASSIFICATION	1.5777731897944206E-6	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9999963718835376	WITHOUT_CLASSIFICATION	3.6281164623981045E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999919713188633	WITHOUT_CLASSIFICATION	8.028681136585058E-6	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999976739704974	WITHOUT_CLASSIFICATION	2.3260295025861107E-6	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999940687095876	WITHOUT_CLASSIFICATION	5.931290412429435E-6	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999937650872379	WITHOUT_CLASSIFICATION	6.2349127620814165E-6	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999988114485037	WITHOUT_CLASSIFICATION	1.1885514962576305E-6	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999994472805356	WITHOUT_CLASSIFICATION	5.52719464512588E-7	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999994794048415	WITHOUT_CLASSIFICATION	5.205951585306225E-7	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999994794048415	WITHOUT_CLASSIFICATION	5.205951585306225E-7	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999994794048415	WITHOUT_CLASSIFICATION	5.205951585306225E-7	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999961978408551	WITHOUT_CLASSIFICATION	3.802159144947531E-6	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999999973245567	WITHOUT_CLASSIFICATION	2.6754433262522946E-9	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999998143366725	WITHOUT_CLASSIFICATION	1.8566332740986345E-7	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999999705414315	WITHOUT_CLASSIFICATION	2.945856853906325E-8	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999999782626552	WITHOUT_CLASSIFICATION	2.1737344901806728E-8	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999999933424343	WITHOUT_CLASSIFICATION	6.657565727470692E-9	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999989580909228	WITHOUT_CLASSIFICATION	1.04190907714162E-6	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999998661775688	WITHOUT_CLASSIFICATION	1.338224312073341E-7	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.999998900962382	WITHOUT_CLASSIFICATION	1.0990376181036866E-6	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.999998900962382	WITHOUT_CLASSIFICATION	1.0990376181036866E-6	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999994293545411	WITHOUT_CLASSIFICATION	5.70645458881457E-7	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999358196016	WITHOUT_CLASSIFICATION	6.418039837425694E-8	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999995154014705	WITHOUT_CLASSIFICATION	4.84598529470358E-7	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999995154014705	WITHOUT_CLASSIFICATION	4.84598529470358E-7	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.999999846261902	WITHOUT_CLASSIFICATION	1.5373809812788846E-7	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999983274983626	WITHOUT_CLASSIFICATION	1.6725016374186797E-6	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.999994593744883	WITHOUT_CLASSIFICATION	5.40625511700224E-6	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.999999947059694	WITHOUT_CLASSIFICATION	5.2940306027046974E-8	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999989081904952	WITHOUT_CLASSIFICATION	1.0918095048376985E-6	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.9999996538743373	WITHOUT_CLASSIFICATION	3.4612566265381386E-7	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999948581237412	WITHOUT_CLASSIFICATION	5.141876258757096E-6	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9999946413523035	WITHOUT_CLASSIFICATION	5.3586476964283395E-6	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9999903955858128	WITHOUT_CLASSIFICATION	9.604414187257034E-6	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999995883035215	WITHOUT_CLASSIFICATION	4.116964784723908E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999919713188633	WITHOUT_CLASSIFICATION	8.028681136585058E-6	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999960915072649	WITHOUT_CLASSIFICATION	3.908492735195138E-6	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999998526397035	WITHOUT_CLASSIFICATION	1.47360296473452E-7	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.999998104453727	WITHOUT_CLASSIFICATION	1.8955462729568076E-6	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999879501008829	WITHOUT_CLASSIFICATION	1.2049899117047302E-5	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999999479764936	WITHOUT_CLASSIFICATION	5.202350640367553E-8	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999933053684718	WITHOUT_CLASSIFICATION	6.69463152823772E-6	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999978029545361	WITHOUT_CLASSIFICATION	2.1970454638556415E-6	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999977964213279	WITHOUT_CLASSIFICATION	2.20357867217507E-6	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.999998480390571	WITHOUT_CLASSIFICATION	1.5196094289777006E-6	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999938871686449	WITHOUT_CLASSIFICATION	6.112831355090407E-6	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999996807340693	WITHOUT_CLASSIFICATION	3.1926593069862407E-7	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999999552140432	WITHOUT_CLASSIFICATION	4.47859568821367E-8	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999979036494778	WITHOUT_CLASSIFICATION	2.0963505221579414E-6	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999994752892996	WITHOUT_CLASSIFICATION	5.247107004509837E-7	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999995795461366	WITHOUT_CLASSIFICATION	4.2045386335991094E-7	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9999837352364933	WITHOUT_CLASSIFICATION	1.6264763506609084E-5	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999956954654109	WITHOUT_CLASSIFICATION	4.304534589022614E-6	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.999999261864262	WITHOUT_CLASSIFICATION	7.38135737959035E-7	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999697417317042	WITHOUT_CLASSIFICATION	3.0258268295818847E-5	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999837711856145	WITHOUT_CLASSIFICATION	1.622881438548883E-5	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999984657892598	WITHOUT_CLASSIFICATION	1.5342107401602972E-6	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999996328335805	WITHOUT_CLASSIFICATION	3.671664195152929E-7	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.999999880760136	WITHOUT_CLASSIFICATION	1.192398640015153E-7	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999999854803524	WITHOUT_CLASSIFICATION	1.4519647564251787E-8	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999999874886347	WITHOUT_CLASSIFICATION	1.2511365228386522E-8	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999998044093317	WITHOUT_CLASSIFICATION	1.955906683078485E-7	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999991637646463	WITHOUT_CLASSIFICATION	8.362353538390433E-7	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999993082755276	WITHOUT_CLASSIFICATION	6.917244724038763E-7	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999999898146142	WITHOUT_CLASSIFICATION	1.0185385735686458E-8	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999972872425332	WITHOUT_CLASSIFICATION	2.712757466750525E-6	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999999858213476	WITHOUT_CLASSIFICATION	1.417865235093015E-8	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9999998606597366	WITHOUT_CLASSIFICATION	1.3934026347917035E-7	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999781641642462	WITHOUT_CLASSIFICATION	2.1835835753745303E-5	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999993473969528	WITHOUT_CLASSIFICATION	6.526030471444115E-7	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999894739969828	WITHOUT_CLASSIFICATION	1.0526003017178247E-5	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999993568517572	WITHOUT_CLASSIFICATION	6.43148242853684E-7	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999954254037836	WITHOUT_CLASSIFICATION	4.5745962163754855E-6	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9997345421780115	WITHOUT_CLASSIFICATION	2.654578219884982E-4	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999991058216557	WITHOUT_CLASSIFICATION	8.941783443030423E-7	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999992981059334	WITHOUT_CLASSIFICATION	7.018940666659904E-7	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.999999739311512	WITHOUT_CLASSIFICATION	2.60688487959585E-7	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9999997225936461	WITHOUT_CLASSIFICATION	2.774063538492199E-7	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999978633116171	WITHOUT_CLASSIFICATION	2.1366883829606283E-6	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999994091948531	WITHOUT_CLASSIFICATION	5.908051468555087E-7	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9999988442172097	WITHOUT_CLASSIFICATION	1.1557827902634262E-6	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9999998253948638	WITHOUT_CLASSIFICATION	1.7460513626263817E-7	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9999917236148902	WITHOUT_CLASSIFICATION	8.276385109928868E-6	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999855873509367	WITHOUT_CLASSIFICATION	1.4412649063334145E-5	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999974479406872	WITHOUT_CLASSIFICATION	2.5520593128669813E-6	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.999998424960944	WITHOUT_CLASSIFICATION	1.5750390559783695E-6	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999988445138307	WITHOUT_CLASSIFICATION	1.1554861693384584E-6	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999912943260676	WITHOUT_CLASSIFICATION	8.705673932360388E-6	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999982145284295	WITHOUT_CLASSIFICATION	1.785471570440656E-6	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999998639775605	WITHOUT_CLASSIFICATION	1.3602243943395168E-7	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999956462189661	WITHOUT_CLASSIFICATION	4.353781033917376E-6	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999966989886487	WITHOUT_CLASSIFICATION	3.3010113511722137E-6	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999862275190071	WITHOUT_CLASSIFICATION	1.3772480992859926E-5	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999995722212912	WITHOUT_CLASSIFICATION	4.2777870880613275E-7	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999928958792259	WITHOUT_CLASSIFICATION	7.104120774162902E-6	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9999401559618384	WITHOUT_CLASSIFICATION	5.9844038161717945E-5	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999986002944267	WITHOUT_CLASSIFICATION	1.3997055733008542E-6	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999986002944267	WITHOUT_CLASSIFICATION	1.3997055733008542E-6	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999978180352208	WITHOUT_CLASSIFICATION	2.181964779120098E-6	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999978180352208	WITHOUT_CLASSIFICATION	2.181964779120098E-6	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999995921488212	WITHOUT_CLASSIFICATION	4.0785117891304305E-7	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999995921488212	WITHOUT_CLASSIFICATION	4.0785117891304305E-7	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999975308804716	WITHOUT_CLASSIFICATION	2.4691195284036607E-6	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999975308804716	WITHOUT_CLASSIFICATION	2.4691195284036607E-6	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9999328085173553	WITHOUT_CLASSIFICATION	6.719148264466086E-5	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9998863932539772	WITHOUT_CLASSIFICATION	1.1360674602281165E-4	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999977360664918	WITHOUT_CLASSIFICATION	2.2639335082302363E-6	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999999406199114	WITHOUT_CLASSIFICATION	5.938008857683094E-8	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999999066778034	WITHOUT_CLASSIFICATION	9.332219672599405E-8	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999998645690127	WITHOUT_CLASSIFICATION	1.3543098726283885E-7	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999964902243866	WITHOUT_CLASSIFICATION	3.5097756132729244E-6	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999998272996615	WITHOUT_CLASSIFICATION	1.7270033840662194E-7	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999983417198448	WITHOUT_CLASSIFICATION	1.6582801552396127E-6	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999998729972137	WITHOUT_CLASSIFICATION	1.2700278626097967E-7	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999984820346564	WITHOUT_CLASSIFICATION	1.5179653436137976E-6	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999983212291724	WITHOUT_CLASSIFICATION	1.6787708276934994E-6	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999993396754463	WITHOUT_CLASSIFICATION	6.603245537802168E-7	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999920369944694	WITHOUT_CLASSIFICATION	7.963005530754455E-6	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999999216497487	WITHOUT_CLASSIFICATION	7.835025120066524E-8	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999991135848355	WITHOUT_CLASSIFICATION	8.864151645862065E-7	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999998378123416	WITHOUT_CLASSIFICATION	1.621876584085975E-7	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999997996169517	WITHOUT_CLASSIFICATION	2.003830481728098E-7	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999994343182044	WITHOUT_CLASSIFICATION	5.656817956719797E-7	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999478544239713	WITHOUT_CLASSIFICATION	5.214557602876413E-5	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999956735519355	WITHOUT_CLASSIFICATION	4.3264480645116075E-6	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999986284581492	WITHOUT_CLASSIFICATION	1.3715418508320018E-6	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999947905257658	WITHOUT_CLASSIFICATION	5.209474234176844E-6	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999993817693952	WITHOUT_CLASSIFICATION	6.182306047137845E-7	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999975242111829	WITHOUT_CLASSIFICATION	2.4757888169699423E-6	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.999996198551971	WITHOUT_CLASSIFICATION	3.801448029007695E-6	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999898744373225	WITHOUT_CLASSIFICATION	1.0125562677608168E-5	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9997352097343797	WITHOUT_CLASSIFICATION	2.6479026562037025E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9997352097343797	WITHOUT_CLASSIFICATION	2.6479026562037025E-4	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999998468982618	WITHOUT_CLASSIFICATION	1.5310173823363137E-7	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9999967751314416	WITHOUT_CLASSIFICATION	3.2248685584761955E-6	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.999995737121045	WITHOUT_CLASSIFICATION	4.2628789550479364E-6	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999994990177904	WITHOUT_CLASSIFICATION	5.009822096169934E-7	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999987158058917	WITHOUT_CLASSIFICATION	1.284194108292673E-6	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999992702047303	WITHOUT_CLASSIFICATION	7.297952695779001E-7	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999354189503434	WITHOUT_CLASSIFICATION	6.45810496566644E-5	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999354189503434	WITHOUT_CLASSIFICATION	6.45810496566644E-5	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999990912784328	WITHOUT_CLASSIFICATION	9.087215673506532E-7	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.7021227448131703	WITHOUT_CLASSIFICATION	0.2978772551868297	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.999999515288429	WITHOUT_CLASSIFICATION	4.847115709401124E-7	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.999999515288429	WITHOUT_CLASSIFICATION	4.847115709401124E-7	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999996713238608	WITHOUT_CLASSIFICATION	3.28676139176119E-7	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999997343646212	WITHOUT_CLASSIFICATION	2.6563537885936416E-7	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999997343646212	WITHOUT_CLASSIFICATION	2.6563537885936416E-7	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999549649311223	WITHOUT_CLASSIFICATION	4.5035068877697706E-5	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999549649311223	WITHOUT_CLASSIFICATION	4.5035068877697706E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999990458579162	WITHOUT_CLASSIFICATION	9.541420837489696E-7	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999990458579162	WITHOUT_CLASSIFICATION	9.541420837489696E-7	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9999977437039647	WITHOUT_CLASSIFICATION	2.256296035389446E-6	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999999036937491	WITHOUT_CLASSIFICATION	9.630625090372404E-8	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999999916861618	WITHOUT_CLASSIFICATION	8.313838194839507E-9	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999993490543136	WITHOUT_CLASSIFICATION	6.509456864401608E-7	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.999999989240121	WITHOUT_CLASSIFICATION	1.0759878978695321E-8	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999994141498588	WITHOUT_CLASSIFICATION	5.858501410839546E-7	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999997414590343	WITHOUT_CLASSIFICATION	2.5854096572952697E-7	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999997872089118	WITHOUT_CLASSIFICATION	2.1279108818094836E-7	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999997414590343	WITHOUT_CLASSIFICATION	2.5854096572952697E-7	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9994777431198029	WITHOUT_CLASSIFICATION	5.222568801972038E-4	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999839604367472	WITHOUT_CLASSIFICATION	1.6039563252719568E-5	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.999999840196381	WITHOUT_CLASSIFICATION	1.598036190755063E-7	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999960143108055	WITHOUT_CLASSIFICATION	3.985689194391929E-6	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999997674080476	WITHOUT_CLASSIFICATION	2.3259195226809885E-7	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999811728277832	WITHOUT_CLASSIFICATION	1.882717221683525E-5	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999948162913916	WITHOUT_CLASSIFICATION	5.1837086084238975E-6	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999952319815765	WITHOUT_CLASSIFICATION	4.768018423536523E-6	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999347989117	WITHOUT_CLASSIFICATION	6.520108832692005E-8	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999998024725105	WITHOUT_CLASSIFICATION	1.9752748951898465E-7	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999995303482239	WITHOUT_CLASSIFICATION	4.6965177604235965E-7	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999999898447658	WITHOUT_CLASSIFICATION	1.015523412429747E-8	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.9998413448462112	WITHOUT_CLASSIFICATION	1.5865515378869397E-4	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9999988816665276	WITHOUT_CLASSIFICATION	1.1183334723891583E-6	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.999998158313769	WITHOUT_CLASSIFICATION	1.8416862310170396E-6	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999999842418179	WITHOUT_CLASSIFICATION	1.5758182020493886E-8	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.999971344126575	WITHOUT_CLASSIFICATION	2.8655873425023078E-5	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999948446001503	WITHOUT_CLASSIFICATION	5.155399849691798E-6	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9997989653809664	WITHOUT_CLASSIFICATION	2.0103461903363083E-4	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999929247365394	WITHOUT_CLASSIFICATION	7.075263460605214E-6	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.999999578434168	WITHOUT_CLASSIFICATION	4.2156583196721993E-7	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.999997305327385	WITHOUT_CLASSIFICATION	2.6946726150734688E-6	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999942946029062	WITHOUT_CLASSIFICATION	5.705397093826091E-6	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999403451480162	WITHOUT_CLASSIFICATION	5.96548519837633E-5	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999931798793191	WITHOUT_CLASSIFICATION	6.820120680771861E-6	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999998271710034	WITHOUT_CLASSIFICATION	1.728289965210089E-7	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999999962354065	WITHOUT_CLASSIFICATION	3.764593545107685E-9	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999655308841249	WITHOUT_CLASSIFICATION	3.446911587516161E-5	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999999953638169	WITHOUT_CLASSIFICATION	4.636183038325603E-9	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999998822922104	WITHOUT_CLASSIFICATION	1.1770778959072507E-7	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999999859593401	WITHOUT_CLASSIFICATION	1.4040659891793684E-8	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999992508848	WITHOUT_CLASSIFICATION	7.491150761538493E-10	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999999860990556	WITHOUT_CLASSIFICATION	1.3900944435691992E-8	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999972264804573	WITHOUT_CLASSIFICATION	2.7735195426788602E-6	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.999999997497726	WITHOUT_CLASSIFICATION	2.502273962134546E-9	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999999973273668	WITHOUT_CLASSIFICATION	2.67263322623189E-9	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999999905183137	WITHOUT_CLASSIFICATION	9.481686350158523E-9	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999999893527372	WITHOUT_CLASSIFICATION	1.0647262801809829E-8	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999999757099669	WITHOUT_CLASSIFICATION	2.4290033101556503E-8	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999999921984867	WITHOUT_CLASSIFICATION	7.801513200891465E-9	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999999932250292	WITHOUT_CLASSIFICATION	6.7749708830374655E-9	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999813692133	WITHOUT_CLASSIFICATION	1.863078667112211E-8	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999999868355441	WITHOUT_CLASSIFICATION	1.3164455731021898E-8	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999999826365878	WITHOUT_CLASSIFICATION	1.7363412185137696E-8	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999976548836	WITHOUT_CLASSIFICATION	2.34511638022308E-9	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999999928145709	WITHOUT_CLASSIFICATION	7.18542917860299E-9	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999999896131776	WITHOUT_CLASSIFICATION	1.038682235133259E-8	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999999636502962	WITHOUT_CLASSIFICATION	3.634970387910292E-8	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999998478913743	WITHOUT_CLASSIFICATION	1.5210862564031622E-7	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999988493291764	WITHOUT_CLASSIFICATION	1.1506708237287029E-6	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999972584356221	WITHOUT_CLASSIFICATION	2.741564377880047E-6	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999998349760807	WITHOUT_CLASSIFICATION	1.650239193266939E-7	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999872751189322	WITHOUT_CLASSIFICATION	1.2724881067856506E-5	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9998119499532877	WITHOUT_CLASSIFICATION	1.8805004671227849E-4	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999999560652738	WITHOUT_CLASSIFICATION	4.393472622394873E-8	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999999560652738	WITHOUT_CLASSIFICATION	4.393472622394873E-8	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999325140904	WITHOUT_CLASSIFICATION	6.748590965592144E-8	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999997763697253	WITHOUT_CLASSIFICATION	2.2363027465902132E-7	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999996879819947	WITHOUT_CLASSIFICATION	3.1201800532107226E-7	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999988580052083	WITHOUT_CLASSIFICATION	1.1419947917948867E-6	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999988155036178	WITHOUT_CLASSIFICATION	1.184496382226475E-6	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999958636982432	WITHOUT_CLASSIFICATION	4.1363017568261634E-6	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999992424800731	WITHOUT_CLASSIFICATION	7.575199268271515E-7	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999987315387959	WITHOUT_CLASSIFICATION	1.2684612040422385E-6	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9997726219076364	WITHOUT_CLASSIFICATION	2.2737809236359483E-4	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999998616629941	WITHOUT_CLASSIFICATION	1.3833700574417313E-7	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999995671192063	WITHOUT_CLASSIFICATION	4.328807937034576E-7	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999995671192063	WITHOUT_CLASSIFICATION	4.328807937034576E-7	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.998803420517392	WITHOUT_CLASSIFICATION	0.0011965794826080175	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999980490362971	WITHOUT_CLASSIFICATION	1.950963702979152E-6	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.999999229129142	WITHOUT_CLASSIFICATION	7.70870857996149E-7	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999998890918779	WITHOUT_CLASSIFICATION	1.1090812217611898E-7	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999998691991486	WITHOUT_CLASSIFICATION	1.3080085142588496E-7	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999978675451524	WITHOUT_CLASSIFICATION	2.132454847504392E-6	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999992385997294	WITHOUT_CLASSIFICATION	7.614002706729046E-7	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999957178861655	WITHOUT_CLASSIFICATION	4.282113834513013E-6	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999997793657406	WITHOUT_CLASSIFICATION	2.2063425941109458E-7	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9993854645173229	WITHOUT_CLASSIFICATION	6.145354826770604E-4	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999999965553431	WITHOUT_CLASSIFICATION	3.4446568688382694E-9	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999990099497434	WITHOUT_CLASSIFICATION	9.900502565069065E-7	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999985745312772	WITHOUT_CLASSIFICATION	1.425468722931338E-6	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999985745312772	WITHOUT_CLASSIFICATION	1.425468722931338E-6	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999998963398756	WITHOUT_CLASSIFICATION	1.0366012432663706E-7	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999969001884408	WITHOUT_CLASSIFICATION	3.099811559256282E-6	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999993434900076	WITHOUT_CLASSIFICATION	6.565099924641233E-7	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999980349354458	WITHOUT_CLASSIFICATION	1.9650645542011246E-6	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999910763912824	WITHOUT_CLASSIFICATION	8.923608717690085E-6	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999993807622137	WITHOUT_CLASSIFICATION	6.192377861841165E-7	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999990626549243	WITHOUT_CLASSIFICATION	9.373450756429604E-7	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999977356082851	WITHOUT_CLASSIFICATION	2.2643917149401008E-6	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9990195263387648	WITHOUT_CLASSIFICATION	9.804736612352507E-4	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999985629863501	WITHOUT_CLASSIFICATION	1.4370136499267547E-6	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.999999229129142	WITHOUT_CLASSIFICATION	7.70870857996149E-7	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999930885288402	WITHOUT_CLASSIFICATION	6.911471159774147E-6	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999993259141932	WITHOUT_CLASSIFICATION	6.740858067441122E-7	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999998240138636	WITHOUT_CLASSIFICATION	1.7598613644865299E-7	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999999832920526	WITHOUT_CLASSIFICATION	1.6707947342194775E-8	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999992577669777	WITHOUT_CLASSIFICATION	7.42233022397601E-7	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999999121007508	WITHOUT_CLASSIFICATION	8.789924920385532E-8	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999786418626454	WITHOUT_CLASSIFICATION	2.135813735451912E-5	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999878554737199	WITHOUT_CLASSIFICATION	1.2144526279924577E-5	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999985383591378	WITHOUT_CLASSIFICATION	1.4616408622605144E-6	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999840590690801	WITHOUT_CLASSIFICATION	1.5940930919888423E-5	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999640289366316	WITHOUT_CLASSIFICATION	3.5971063368370025E-5	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999999964881036	WITHOUT_CLASSIFICATION	3.511896408458292E-9	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999994791623891	WITHOUT_CLASSIFICATION	5.208376109391203E-7	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999993469467969	WITHOUT_CLASSIFICATION	6.530532031198898E-7	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999996423679086	WITHOUT_CLASSIFICATION	3.576320912849241E-7	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.999999903422931	WITHOUT_CLASSIFICATION	9.65770690033685E-8	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999989580443808	WITHOUT_CLASSIFICATION	1.0419556192172453E-6	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999923885897282	WITHOUT_CLASSIFICATION	7.611410271802024E-6	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999537797194598	WITHOUT_CLASSIFICATION	4.622028054027313E-5	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.999999929481376	WITHOUT_CLASSIFICATION	7.051862409036121E-8	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999999970506942	WITHOUT_CLASSIFICATION	2.949305922671243E-9	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999966588180708	WITHOUT_CLASSIFICATION	3.3411819292212334E-6	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999997687761691	WITHOUT_CLASSIFICATION	2.312238309609889E-7	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999554622603616	WITHOUT_CLASSIFICATION	4.4537739638308876E-5	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.999994895918143	WITHOUT_CLASSIFICATION	5.104081857063411E-6	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999999585835835	WITHOUT_CLASSIFICATION	4.141641649479128E-8	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9999978208268125	WITHOUT_CLASSIFICATION	2.179173187408293E-6	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999952741811364	WITHOUT_CLASSIFICATION	4.7258188636122135E-6	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9999983953208763	WITHOUT_CLASSIFICATION	1.6046791236842697E-6	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999996559911738	WITHOUT_CLASSIFICATION	3.440088261543307E-7	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.999996756558713	WITHOUT_CLASSIFICATION	3.2434412868746905E-6	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.999996756558713	WITHOUT_CLASSIFICATION	3.2434412868746905E-6	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9989715620476972	WITHOUT_CLASSIFICATION	0.0010284379523027645	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9992717419697318	WITHOUT_CLASSIFICATION	7.282580302681767E-4	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.999999878379307	WITHOUT_CLASSIFICATION	1.2162069301563197E-7	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9996037358541605	WITHOUT_CLASSIFICATION	3.9626414583946384E-4	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999982299996112	WITHOUT_CLASSIFICATION	1.7700003887351466E-6	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.999998508922251	WITHOUT_CLASSIFICATION	1.49107774915307E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999919713188633	WITHOUT_CLASSIFICATION	8.028681136585058E-6	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999963839025688	WITHOUT_CLASSIFICATION	3.6160974311434426E-6	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999971622392954	WITHOUT_CLASSIFICATION	2.8377607046902657E-6	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999998581411744	WITHOUT_CLASSIFICATION	1.4185882561352312E-7	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999999049728646	WITHOUT_CLASSIFICATION	9.502713541345394E-8	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9999996030407913	WITHOUT_CLASSIFICATION	3.9695920871519117E-7	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.999999929724287	WITHOUT_CLASSIFICATION	7.027571302762216E-8	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999992981059334	WITHOUT_CLASSIFICATION	7.018940666659904E-7	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.999999985938803	WITHOUT_CLASSIFICATION	1.4061196881305158E-8	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999971874204331	WITHOUT_CLASSIFICATION	2.812579566874338E-6	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999996315426	WITHOUT_CLASSIFICATION	3.684573368560169E-10	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999998569776353	WITHOUT_CLASSIFICATION	1.4302236468454695E-7	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.9999988825776879	WITHOUT_CLASSIFICATION	1.1174223120989126E-6	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999994995368447	WITHOUT_CLASSIFICATION	5.004631553796014E-7	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999763171347517	WITHOUT_CLASSIFICATION	2.3682865248374533E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999763171347517	WITHOUT_CLASSIFICATION	2.3682865248374533E-5	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9999993762684853	WITHOUT_CLASSIFICATION	6.237315146302469E-7	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999979990449577	WITHOUT_CLASSIFICATION	2.0009550422128947E-6	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999581944869663	WITHOUT_CLASSIFICATION	4.180551303369217E-5	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999996987825351	WITHOUT_CLASSIFICATION	3.012174649372467E-7	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999970344914699	WITHOUT_CLASSIFICATION	2.9655085301758797E-6	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9995417577734582	WITHOUT_CLASSIFICATION	4.5824222654183074E-4	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999999501540852	WITHOUT_CLASSIFICATION	4.9845914870511815E-8	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999703946426	WITHOUT_CLASSIFICATION	2.9605357460589793E-8	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999995562862289	WITHOUT_CLASSIFICATION	4.4371377105481554E-7	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999901301196689	WITHOUT_CLASSIFICATION	9.869880331123242E-6	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9999991597590334	WITHOUT_CLASSIFICATION	8.402409667106734E-7	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999996687636016	WITHOUT_CLASSIFICATION	3.3123639840489763E-7	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999959803607664	WITHOUT_CLASSIFICATION	4.0196392336318586E-6	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.999999925514445	WITHOUT_CLASSIFICATION	7.448555494215618E-8	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999959407323097	WITHOUT_CLASSIFICATION	4.059267690403125E-6	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999978720305356	WITHOUT_CLASSIFICATION	2.127969464443324E-6	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999979271275594	WITHOUT_CLASSIFICATION	2.072872440512852E-6	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9999994499628782	WITHOUT_CLASSIFICATION	5.50037121868992E-7	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999476932425	WITHOUT_CLASSIFICATION	5.230675738213039E-8	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999999134420934	WITHOUT_CLASSIFICATION	8.65579067125126E-8	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999858218150155	WITHOUT_CLASSIFICATION	1.41781849846502E-5	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999997730143985	WITHOUT_CLASSIFICATION	2.269856015884031E-7	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999997166463434	WITHOUT_CLASSIFICATION	2.8335365672797504E-7	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999997353131513	WITHOUT_CLASSIFICATION	2.6468684864421564E-7	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999997994605995	WITHOUT_CLASSIFICATION	2.005394006334001E-7	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999979324535853	WITHOUT_CLASSIFICATION	2.0675464147797376E-6	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.9999996432540476	WITHOUT_CLASSIFICATION	3.5674595249888673E-7	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999997350839324	WITHOUT_CLASSIFICATION	2.6491606761630127E-7	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999879400130717	WITHOUT_CLASSIFICATION	1.2059986928318186E-5	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999935768130535	WITHOUT_CLASSIFICATION	6.42318694656091E-6	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999995644231646	WITHOUT_CLASSIFICATION	4.355768352691235E-7	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999970900973616	WITHOUT_CLASSIFICATION	2.909902638413778E-6	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999998490937552	WITHOUT_CLASSIFICATION	1.5090624480047565E-7	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.9999975245742312	WITHOUT_CLASSIFICATION	2.475425768823679E-6	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999998119268468	WITHOUT_CLASSIFICATION	1.880731531833129E-7	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999999995617933	WITHOUT_CLASSIFICATION	4.3820668314940025E-10	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999999683908335	WITHOUT_CLASSIFICATION	3.160916656840725E-8	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9999740025032823	WITHOUT_CLASSIFICATION	2.599749671783282E-5	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999997036849607	WITHOUT_CLASSIFICATION	2.9631503930825916E-7	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999728420673397	WITHOUT_CLASSIFICATION	2.7157932660353805E-5	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999999942027912	WITHOUT_CLASSIFICATION	5.797208866335854E-9	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999994689036578	WITHOUT_CLASSIFICATION	5.310963423461311E-7	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999999082080174	WITHOUT_CLASSIFICATION	9.179198251863726E-8	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999989920482382	WITHOUT_CLASSIFICATION	1.007951761871979E-6	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999943885433145	WITHOUT_CLASSIFICATION	5.6114566855532335E-6	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999989920482382	WITHOUT_CLASSIFICATION	1.007951761871979E-6	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999870423291496	WITHOUT_CLASSIFICATION	1.295767085039594E-5	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9557673687427697	WITHOUT_CLASSIFICATION	0.044232631257230266	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999789466866196	WITHOUT_CLASSIFICATION	2.1053313380486674E-5	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.852759631283408	IMPLEMENTATION	0.14724036871659194	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999965959601925	WITHOUT_CLASSIFICATION	3.404039807577793E-6	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999397568826347	WITHOUT_CLASSIFICATION	6.024311736522847E-5	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.999999892685735	WITHOUT_CLASSIFICATION	1.073142651102148E-7	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999999958010672	WITHOUT_CLASSIFICATION	4.198932803071312E-9	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999999345329671	WITHOUT_CLASSIFICATION	6.546703289299441E-8	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.7639844587965022	IMPLEMENTATION	0.2360155412034977	WITHOUT_CLASSIFICATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999363539539331	WITHOUT_CLASSIFICATION	6.364604606690668E-5	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.999996342444789	WITHOUT_CLASSIFICATION	3.6575552110788056E-6	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9995065692682791	WITHOUT_CLASSIFICATION	4.934307317208624E-4	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999997534099514	WITHOUT_CLASSIFICATION	2.465900486498231E-7	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9752393963951209	WITHOUT_CLASSIFICATION	0.024760603604879035	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.5417448874853455	IMPLEMENTATION	0.4582551125146545	WITHOUT_CLASSIFICATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999999981625102	WITHOUT_CLASSIFICATION	1.8374899296823233E-9	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999991102218315	WITHOUT_CLASSIFICATION	8.897781684518104E-7	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999981354769262	WITHOUT_CLASSIFICATION	1.8645230737708377E-6	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999936292130077	WITHOUT_CLASSIFICATION	6.370786992356598E-6	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999989204418048	WITHOUT_CLASSIFICATION	1.0795581951208323E-6	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999993833525165	WITHOUT_CLASSIFICATION	6.166474834936497E-7	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999938415976533	WITHOUT_CLASSIFICATION	6.15840234683534E-6	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999990803699639	WITHOUT_CLASSIFICATION	9.196300361717904E-7	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999958695014636	WITHOUT_CLASSIFICATION	4.130498536411816E-6	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999999324041211	WITHOUT_CLASSIFICATION	6.75958789113635E-8	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999998996154078	WITHOUT_CLASSIFICATION	1.0038459230148535E-7	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999982119525032	WITHOUT_CLASSIFICATION	1.7880474967777283E-6	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999985617631466	WITHOUT_CLASSIFICATION	1.4382368534350433E-6	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999999997379931	WITHOUT_CLASSIFICATION	2.620068253961393E-10	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999970550573628	WITHOUT_CLASSIFICATION	2.9449426372670787E-6	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999966061546115	WITHOUT_CLASSIFICATION	3.3938453884832504E-6	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999938508725784	WITHOUT_CLASSIFICATION	6.149127421582849E-6	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.99999933663305	WITHOUT_CLASSIFICATION	6.63366950076078E-7	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.999993693116301	WITHOUT_CLASSIFICATION	6.306883698947362E-6	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9999997661268261	WITHOUT_CLASSIFICATION	2.3387317392029189E-7	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999997842474362	WITHOUT_CLASSIFICATION	2.1575256375323783E-7	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999818493599	WITHOUT_CLASSIFICATION	1.8150640089371604E-8	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999977226305266	WITHOUT_CLASSIFICATION	2.277369473399847E-6	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999957441410434	WITHOUT_CLASSIFICATION	4.255858956581302E-6	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999940492811492	WITHOUT_CLASSIFICATION	5.950718850763304E-6	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999998948881146	WITHOUT_CLASSIFICATION	1.0511188542711548E-7	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999994022479654	WITHOUT_CLASSIFICATION	5.977520346803971E-7	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999867702576823	WITHOUT_CLASSIFICATION	1.3229742317571462E-5	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999867702576823	WITHOUT_CLASSIFICATION	1.3229742317571462E-5	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999983839636188	WITHOUT_CLASSIFICATION	1.6160363811080052E-6	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999965854851489	WITHOUT_CLASSIFICATION	3.4145148511354235E-6	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999999955804354	WITHOUT_CLASSIFICATION	4.4195646787479295E-9	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999999224931294	WITHOUT_CLASSIFICATION	7.750687061401704E-8	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999995221776	WITHOUT_CLASSIFICATION	4.778224376303216E-10	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999992736258136	WITHOUT_CLASSIFICATION	7.263741862386798E-7	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999699920798713	WITHOUT_CLASSIFICATION	3.0007920128831603E-5	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999998192529048	WITHOUT_CLASSIFICATION	1.8074709512714028E-7	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999990814650529	WITHOUT_CLASSIFICATION	9.18534947059422E-7	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.999999946710399	WITHOUT_CLASSIFICATION	5.3289601041541286E-8	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999997682843705	WITHOUT_CLASSIFICATION	2.3171562946177527E-7	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999978699040437	WITHOUT_CLASSIFICATION	2.1300959561842092E-6	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999999951811354	WITHOUT_CLASSIFICATION	4.818864623008849E-9	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999601714298726	WITHOUT_CLASSIFICATION	3.9828570127470034E-5	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999999923614403	WITHOUT_CLASSIFICATION	7.638559707131215E-9	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9995960392573594	WITHOUT_CLASSIFICATION	4.03960742640675E-4	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999975679735538	WITHOUT_CLASSIFICATION	2.4320264462040818E-6	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999998617874684	WITHOUT_CLASSIFICATION	1.3821253165940616E-7	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999997919721598	WITHOUT_CLASSIFICATION	2.0802784006159853E-7	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999994179264147	WITHOUT_CLASSIFICATION	5.82073585419366E-7	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.9998069704658179	WITHOUT_CLASSIFICATION	1.9302953418207867E-4	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.999476945832714	WITHOUT_CLASSIFICATION	5.230541672859946E-4	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.99995391352483	WITHOUT_CLASSIFICATION	4.6086475169898036E-5	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999996501252733	WITHOUT_CLASSIFICATION	3.498747267276423E-7	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999999589917464	WITHOUT_CLASSIFICATION	4.1008253567789905E-8	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999958486691284	WITHOUT_CLASSIFICATION	4.151330871648822E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999978643851	WITHOUT_CLASSIFICATION	2.135614987002128E-9	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999986671661579	WITHOUT_CLASSIFICATION	1.3328338421029555E-6	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999978072705371	WITHOUT_CLASSIFICATION	2.1927294628835398E-6	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999996869993873	WITHOUT_CLASSIFICATION	3.130006125655055E-7	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999999079393106	WITHOUT_CLASSIFICATION	9.206068936980415E-8	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999998863812641	WITHOUT_CLASSIFICATION	1.1361873580023775E-7	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.999999924802744	WITHOUT_CLASSIFICATION	7.519725591839533E-8	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.999996055404797	WITHOUT_CLASSIFICATION	3.9445952031107665E-6	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999998969694021	WITHOUT_CLASSIFICATION	1.0303059794589192E-7	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.999997353076891	WITHOUT_CLASSIFICATION	2.646923109115895E-6	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999964539088837	WITHOUT_CLASSIFICATION	3.5460911162659325E-6	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999975675815195	WITHOUT_CLASSIFICATION	2.43241848049326E-6	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999060437036043	WITHOUT_CLASSIFICATION	9.395629639574038E-5	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999977380895221	WITHOUT_CLASSIFICATION	2.2619104779706236E-6	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999960836047359	WITHOUT_CLASSIFICATION	3.916395264101504E-6	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999903325434735	WITHOUT_CLASSIFICATION	9.667456526551011E-6	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999992005660195	WITHOUT_CLASSIFICATION	7.994339805402543E-7	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999999003846727	WITHOUT_CLASSIFICATION	9.961532729297803E-8	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999843017601364	WITHOUT_CLASSIFICATION	1.5698239863548055E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999946972285529	WITHOUT_CLASSIFICATION	5.302771447093743E-6	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999965221393158	WITHOUT_CLASSIFICATION	3.4778606843126537E-6	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999999970176178	WITHOUT_CLASSIFICATION	2.9823821501460078E-9	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.9999913909830191	WITHOUT_CLASSIFICATION	8.60901698078505E-6	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999891632402942	WITHOUT_CLASSIFICATION	1.0836759705794637E-5	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.999999890197952	WITHOUT_CLASSIFICATION	1.0980204798836037E-7	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999975613924241	WITHOUT_CLASSIFICATION	2.4386075759287626E-6	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999997585052347	WITHOUT_CLASSIFICATION	2.414947652234778E-7	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999975686292184	WITHOUT_CLASSIFICATION	2.4313707816546636E-6	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999963076273434	WITHOUT_CLASSIFICATION	3.692372656613197E-6	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999999182323734	WITHOUT_CLASSIFICATION	8.176762658835114E-8	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999992433030283	WITHOUT_CLASSIFICATION	7.566969717880545E-7	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999977457499948	WITHOUT_CLASSIFICATION	2.254250005195635E-6	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999968342372066	WITHOUT_CLASSIFICATION	3.16576279336934E-6	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999995491317271	WITHOUT_CLASSIFICATION	4.5086827293667454E-7	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.999999960434071	WITHOUT_CLASSIFICATION	3.956592902034118E-8	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999998881125894	WITHOUT_CLASSIFICATION	1.1188741048836851E-7	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999679712479	WITHOUT_CLASSIFICATION	3.2028752085680634E-8	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999998453976666	WITHOUT_CLASSIFICATION	1.5460233329472788E-7	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9999812885491997	WITHOUT_CLASSIFICATION	1.871145080036571E-5	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999979860072975	WITHOUT_CLASSIFICATION	2.0139927024397335E-6	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999978998080137	WITHOUT_CLASSIFICATION	2.100191986262035E-6	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999984198114538	WITHOUT_CLASSIFICATION	1.5801885462543846E-6	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.99998600490872	WITHOUT_CLASSIFICATION	1.3995091280024435E-5	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999972718475472	WITHOUT_CLASSIFICATION	2.7281524527918427E-6	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999790090054846	WITHOUT_CLASSIFICATION	2.0990994515329817E-5	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999996938938894	WITHOUT_CLASSIFICATION	3.0610611053350995E-7	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999976907747482	WITHOUT_CLASSIFICATION	2.309225251715425E-6	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999971932280461	WITHOUT_CLASSIFICATION	2.8067719538471593E-6	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.99999774672574	WITHOUT_CLASSIFICATION	2.2532742599164376E-6	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9999974843782727	WITHOUT_CLASSIFICATION	2.515621727149786E-6	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.999997142464051	WITHOUT_CLASSIFICATION	2.85753594902009E-6	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9999964842343259	WITHOUT_CLASSIFICATION	3.5157656741498165E-6	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9999969914706407	WITHOUT_CLASSIFICATION	3.0085293592879026E-6	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9999966012538077	WITHOUT_CLASSIFICATION	3.398746192297236E-6	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9999962717205301	WITHOUT_CLASSIFICATION	3.7282794698882876E-6	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.999996200788995	WITHOUT_CLASSIFICATION	3.799211004963462E-6	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9999964173772186	WITHOUT_CLASSIFICATION	3.582622781441443E-6	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9999961174139405	WITHOUT_CLASSIFICATION	3.8825860596065444E-6	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9999979146919513	WITHOUT_CLASSIFICATION	2.0853080487795826E-6	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9999983851947677	WITHOUT_CLASSIFICATION	1.6148052323170145E-6	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9999980809356038	WITHOUT_CLASSIFICATION	1.919064396110731E-6	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9999980902464861	WITHOUT_CLASSIFICATION	1.90975351389067E-6	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9999979624386777	WITHOUT_CLASSIFICATION	2.037561322419266E-6	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.999997968779757	WITHOUT_CLASSIFICATION	2.0312202429722304E-6	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9999978737459075	WITHOUT_CLASSIFICATION	2.1262540924738508E-6	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9999984130244242	WITHOUT_CLASSIFICATION	1.5869755758580309E-6	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.999998191939874	WITHOUT_CLASSIFICATION	1.8080601259452369E-6	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9999923594059926	WITHOUT_CLASSIFICATION	7.640594007436061E-6	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.999997760194919	WITHOUT_CLASSIFICATION	2.2398050809627863E-6	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999942491183343	WITHOUT_CLASSIFICATION	5.750881665659533E-6	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999910570245397	WITHOUT_CLASSIFICATION	8.942975460235142E-6	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999931327501694	WITHOUT_CLASSIFICATION	6.867249830498771E-6	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999978664609513	WITHOUT_CLASSIFICATION	2.1335390487104647E-6	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999927547337816	WITHOUT_CLASSIFICATION	7.245266218454044E-6	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9998283712445745	WITHOUT_CLASSIFICATION	1.7162875542546638E-4	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999925640450921	WITHOUT_CLASSIFICATION	7.435954908000113E-6	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999965072136862	WITHOUT_CLASSIFICATION	3.4927863138671932E-6	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.6446590263542519	WITHOUT_CLASSIFICATION	0.35534097364574807	IMPLEMENTATION
// integer division	WITHOUT_CLASSIFICATION	0.9999983801069638	WITHOUT_CLASSIFICATION	1.6198930361000692E-6	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999999405934771	WITHOUT_CLASSIFICATION	5.940652287145202E-8	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999998237224775	WITHOUT_CLASSIFICATION	1.7627752244716897E-7	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999998237224775	WITHOUT_CLASSIFICATION	1.7627752244716897E-7	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999971711703547	WITHOUT_CLASSIFICATION	2.828829645363542E-6	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999666981615797	WITHOUT_CLASSIFICATION	3.330183842033409E-5	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999998820919	WITHOUT_CLASSIFICATION	1.1790814079476904E-10	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999994506176895	WITHOUT_CLASSIFICATION	5.493823105804181E-7	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999999302893149	WITHOUT_CLASSIFICATION	6.971068507739846E-8	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999994365851352	WITHOUT_CLASSIFICATION	5.634148647170488E-7	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.999998295425611	WITHOUT_CLASSIFICATION	1.7045743888693705E-6	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999936792419573	WITHOUT_CLASSIFICATION	6.3207580427372E-6	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9998351232777474	WITHOUT_CLASSIFICATION	1.6487672225269892E-4	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9999992404912079	WITHOUT_CLASSIFICATION	7.595087919895508E-7	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999976932227216	WITHOUT_CLASSIFICATION	2.306777278397861E-6	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999993004192079	WITHOUT_CLASSIFICATION	6.99580792112195E-7	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9999988908194498	WITHOUT_CLASSIFICATION	1.1091805501447339E-6	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999933141457635	WITHOUT_CLASSIFICATION	6.685854236371902E-6	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999991287263227	WITHOUT_CLASSIFICATION	8.712736772679389E-7	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.9999952601999988	WITHOUT_CLASSIFICATION	4.73980000119558E-6	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999992265415772	WITHOUT_CLASSIFICATION	7.734584228618038E-7	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999998723177366	WITHOUT_CLASSIFICATION	1.276822633547988E-7	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999998789721106	WITHOUT_CLASSIFICATION	1.2102788938272068E-7	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999974607084555	WITHOUT_CLASSIFICATION	2.5392915445248735E-6	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999999492679934	WITHOUT_CLASSIFICATION	5.0732006714599573E-8	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999999731568561	WITHOUT_CLASSIFICATION	2.684314384268654E-8	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999975214381489	WITHOUT_CLASSIFICATION	2.4785618510403125E-6	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999999979657506	WITHOUT_CLASSIFICATION	2.034249459515685E-9	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999991479962613	WITHOUT_CLASSIFICATION	8.520037386797704E-7	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999981777923341	WITHOUT_CLASSIFICATION	1.822207665894307E-6	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999997796436656	WITHOUT_CLASSIFICATION	2.2035633438415502E-7	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999946386557084	WITHOUT_CLASSIFICATION	5.361344291678388E-6	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999983431428919	WITHOUT_CLASSIFICATION	1.6568571081428074E-6	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999972471150552	WITHOUT_CLASSIFICATION	2.7528849448081215E-6	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999971956198453	WITHOUT_CLASSIFICATION	2.804380154631027E-6	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.999998745020509	WITHOUT_CLASSIFICATION	1.2549794910151683E-6	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999960768221191	WITHOUT_CLASSIFICATION	3.923177880855218E-6	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999981154244628	WITHOUT_CLASSIFICATION	1.8845755372184856E-6	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999976185558265	WITHOUT_CLASSIFICATION	2.381444173571027E-6	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999863680969729	WITHOUT_CLASSIFICATION	1.3631903027171559E-5	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999929992326998	WITHOUT_CLASSIFICATION	7.000767300135764E-6	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999999663745165	WITHOUT_CLASSIFICATION	3.362548353047214E-8	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999988086883007	WITHOUT_CLASSIFICATION	1.1913116993323496E-6	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999970392984826	WITHOUT_CLASSIFICATION	2.960701517512283E-6	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.999999655571372	WITHOUT_CLASSIFICATION	3.444286278861785E-7	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999991378985387	WITHOUT_CLASSIFICATION	8.621014612865064E-7	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999863477622128	WITHOUT_CLASSIFICATION	1.3652237787198215E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.999999289974198	WITHOUT_CLASSIFICATION	7.100258021120871E-7	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.999999289974198	WITHOUT_CLASSIFICATION	7.100258021120871E-7	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999989001328862	WITHOUT_CLASSIFICATION	1.0998671137838674E-6	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999998927832575	WITHOUT_CLASSIFICATION	1.0721674236777729E-7	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999997750830788	WITHOUT_CLASSIFICATION	2.249169213265128E-7	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9999769764315871	WITHOUT_CLASSIFICATION	2.302356841284284E-5	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999999295832682	WITHOUT_CLASSIFICATION	7.041673170095258E-8	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9999996389785772	WITHOUT_CLASSIFICATION	3.6102142277552707E-7	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999967407783897	WITHOUT_CLASSIFICATION	3.2592216103028027E-6	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999966910952242	WITHOUT_CLASSIFICATION	3.3089047759180247E-6	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999722111401907	WITHOUT_CLASSIFICATION	2.7788859809322324E-5	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999943960875035	WITHOUT_CLASSIFICATION	5.603912496574066E-6	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999970053814797	WITHOUT_CLASSIFICATION	2.994618520252975E-6	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999979531761559	WITHOUT_CLASSIFICATION	2.0468238440544758E-6	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999437029983868	WITHOUT_CLASSIFICATION	5.6297001613168014E-5	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999998336084671	WITHOUT_CLASSIFICATION	1.6639153290599096E-7	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.5375564643054643	WITHOUT_CLASSIFICATION	0.46244353569453556	IMPLEMENTATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999309776319119	WITHOUT_CLASSIFICATION	6.90223680881228E-5	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999927846632938	WITHOUT_CLASSIFICATION	7.215336706121405E-6	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999996337852366	WITHOUT_CLASSIFICATION	3.6621476338741526E-7	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999999996128951	WITHOUT_CLASSIFICATION	3.8710484724326265E-10	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9997345421780115	WITHOUT_CLASSIFICATION	2.654578219884982E-4	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.999998152783344	WITHOUT_CLASSIFICATION	1.8472166559745743E-6	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.999998152783344	WITHOUT_CLASSIFICATION	1.8472166559745743E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999990165317859	WITHOUT_CLASSIFICATION	9.834682141192445E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999990165317859	WITHOUT_CLASSIFICATION	9.834682141192445E-7	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999985602429924	WITHOUT_CLASSIFICATION	1.43975700764857E-6	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999959052899394	WITHOUT_CLASSIFICATION	4.0947100605848166E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999660153929449	WITHOUT_CLASSIFICATION	3.398460705512924E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999995427064525	WITHOUT_CLASSIFICATION	4.572935475538832E-7	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999999916861618	WITHOUT_CLASSIFICATION	8.313838194839507E-9	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.999999930616559	WITHOUT_CLASSIFICATION	6.938344101507445E-8	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9997630436393636	WITHOUT_CLASSIFICATION	2.3695636063634056E-4	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9999994799739382	WITHOUT_CLASSIFICATION	5.200260616972291E-7	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999992415182004	WITHOUT_CLASSIFICATION	7.584817996130888E-7	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999997732592167	WITHOUT_CLASSIFICATION	2.2674078326616537E-7	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999991802767185	WITHOUT_CLASSIFICATION	8.197232813931903E-7	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999970353692365	WITHOUT_CLASSIFICATION	2.9646307636114386E-6	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999999839872726	WITHOUT_CLASSIFICATION	1.6012727401355546E-8	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999993857502616	WITHOUT_CLASSIFICATION	6.142497384658691E-7	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999999932069755	WITHOUT_CLASSIFICATION	6.79302454356417E-9	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.9999997822112653	WITHOUT_CLASSIFICATION	2.1778873463924608E-7	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999275128599504	WITHOUT_CLASSIFICATION	7.248714004949282E-5	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999998523006792	WITHOUT_CLASSIFICATION	1.4769932072476237E-7	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9999971928543415	WITHOUT_CLASSIFICATION	2.8071456586086986E-6	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999988872338876	WITHOUT_CLASSIFICATION	1.1127661124092677E-6	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999991140149146	WITHOUT_CLASSIFICATION	8.8598508535712E-7	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999459178791574	WITHOUT_CLASSIFICATION	5.408212084248758E-5	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999997237431107	WITHOUT_CLASSIFICATION	2.76256889257355E-7	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999998996154078	WITHOUT_CLASSIFICATION	1.0038459230148535E-7	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999992736258136	WITHOUT_CLASSIFICATION	7.263741862386798E-7	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999913896759212	WITHOUT_CLASSIFICATION	8.610324078793963E-6	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999999562224267	WITHOUT_CLASSIFICATION	4.3777573241722646E-8	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.999997469780649	WITHOUT_CLASSIFICATION	2.530219350990176E-6	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999883138954849	WITHOUT_CLASSIFICATION	1.1686104515105078E-5	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999996679890325	WITHOUT_CLASSIFICATION	3.3201096749637463E-7	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999996679890325	WITHOUT_CLASSIFICATION	3.3201096749637463E-7	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999991755903921	WITHOUT_CLASSIFICATION	8.244096079485682E-7	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999953333701521	WITHOUT_CLASSIFICATION	4.6666298478577825E-6	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999749294416718	WITHOUT_CLASSIFICATION	2.5070558328244215E-5	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999995132712701	WITHOUT_CLASSIFICATION	4.867287298273924E-7	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.99999882072569	WITHOUT_CLASSIFICATION	1.1792743100457246E-6	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9999226596827525	WITHOUT_CLASSIFICATION	7.734031724745082E-5	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.999993700207336	WITHOUT_CLASSIFICATION	6.299792663898478E-6	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9998254074944415	WITHOUT_CLASSIFICATION	1.7459250555850367E-4	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999929507290845	WITHOUT_CLASSIFICATION	7.049270915522301E-6	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999993567507783	WITHOUT_CLASSIFICATION	6.432492215483575E-7	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9999998059785258	WITHOUT_CLASSIFICATION	1.940214741889883E-7	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999966900554716	WITHOUT_CLASSIFICATION	3.3099445283697646E-6	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999787655153934	WITHOUT_CLASSIFICATION	2.1234484606540616E-5	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999998438259928	WITHOUT_CLASSIFICATION	1.5617400719241995E-7	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999997367265956	WITHOUT_CLASSIFICATION	2.632734043960109E-7	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999977360664918	WITHOUT_CLASSIFICATION	2.2639335082302363E-6	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999965374298297	WITHOUT_CLASSIFICATION	3.4625701701359963E-6	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999990592326892	WITHOUT_CLASSIFICATION	9.407673109168983E-7	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999992075385272	WITHOUT_CLASSIFICATION	7.924614726986741E-7	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999926842222836	WITHOUT_CLASSIFICATION	7.315777716423E-6	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999998585959581	WITHOUT_CLASSIFICATION	1.4140404186284568E-7	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999999488822103	WITHOUT_CLASSIFICATION	5.111778963901222E-8	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999998163880744	WITHOUT_CLASSIFICATION	1.836119254638547E-7	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9999955962626274	WITHOUT_CLASSIFICATION	4.403737372705829E-6	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999994191383873	WITHOUT_CLASSIFICATION	5.8086161262924E-7	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999874343739302	WITHOUT_CLASSIFICATION	1.2565626069807576E-5	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999939787501165	WITHOUT_CLASSIFICATION	6.0212498833649745E-6	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999917378446224	WITHOUT_CLASSIFICATION	8.26215537763788E-6	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999997753970884	WITHOUT_CLASSIFICATION	2.246029117256068E-7	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999975687487355	WITHOUT_CLASSIFICATION	2.43125126450551E-6	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.999991083888745	WITHOUT_CLASSIFICATION	8.916111255074234E-6	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999987439816707	WITHOUT_CLASSIFICATION	1.2560183293712584E-6	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999998800898339	WITHOUT_CLASSIFICATION	1.1991016620056376E-7	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9999459586804914	WITHOUT_CLASSIFICATION	5.404131950869195E-5	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999995472120035	WITHOUT_CLASSIFICATION	4.5278799651913077E-7	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999997911404251	WITHOUT_CLASSIFICATION	2.0885957493645564E-7	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999941693926956	WITHOUT_CLASSIFICATION	5.830607304423992E-6	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999710624579279	WITHOUT_CLASSIFICATION	2.89375420720806E-5	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999984379431884	WITHOUT_CLASSIFICATION	1.5620568116458569E-6	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999145143186091	WITHOUT_CLASSIFICATION	8.548568139092614E-5	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999995143494613	WITHOUT_CLASSIFICATION	4.856505386369035E-7	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999986523335755	WITHOUT_CLASSIFICATION	1.3476664244198164E-6	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9999996634055103	WITHOUT_CLASSIFICATION	3.3659448963601936E-7	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9999996307766317	WITHOUT_CLASSIFICATION	3.6922336831064055E-7	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.999984235409352	WITHOUT_CLASSIFICATION	1.576459064801534E-5	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999999973555562	WITHOUT_CLASSIFICATION	2.6444438357901004E-9	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999986929198087	WITHOUT_CLASSIFICATION	1.307080191256609E-6	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999973177814	WITHOUT_CLASSIFICATION	2.682218580782434E-9	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999975989103578	WITHOUT_CLASSIFICATION	2.401089642287575E-6	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9999928764528807	WITHOUT_CLASSIFICATION	7.123547119384937E-6	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999970166565613	WITHOUT_CLASSIFICATION	2.983343438727888E-6	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999977893576606	WITHOUT_CLASSIFICATION	2.210642339320102E-6	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999928928284669	WITHOUT_CLASSIFICATION	7.1071715330918144E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999958184859824	WITHOUT_CLASSIFICATION	4.181514017563098E-6	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999925552780595	WITHOUT_CLASSIFICATION	7.444721940459203E-6	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999969452376288	WITHOUT_CLASSIFICATION	3.0547623712313263E-6	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999959920975239	WITHOUT_CLASSIFICATION	4.007902476126772E-6	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999999948868605	WITHOUT_CLASSIFICATION	5.113139529813632E-9	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999973580067779	WITHOUT_CLASSIFICATION	2.6419932220789503E-6	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999973186840794	WITHOUT_CLASSIFICATION	2.681315920563672E-6	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999874375754938	WITHOUT_CLASSIFICATION	1.2562424506263172E-5	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999970166565613	WITHOUT_CLASSIFICATION	2.983343438727888E-6	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999928928284669	WITHOUT_CLASSIFICATION	7.1071715330918144E-6	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999977893576606	WITHOUT_CLASSIFICATION	2.210642339320102E-6	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999976799866929	WITHOUT_CLASSIFICATION	2.320013307100629E-6	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999955049824407	WITHOUT_CLASSIFICATION	4.495017559310883E-6	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999989649474534	WITHOUT_CLASSIFICATION	1.035052546562297E-6	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9999996486220768	WITHOUT_CLASSIFICATION	3.513779231899708E-7	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9996518960467613	WITHOUT_CLASSIFICATION	3.481039532386995E-4	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999996533782867	WITHOUT_CLASSIFICATION	3.4662171321148743E-7	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999991181657839	WITHOUT_CLASSIFICATION	8.818342161717564E-7	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999997521183094	WITHOUT_CLASSIFICATION	2.4788169068023613E-7	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999946204615041	WITHOUT_CLASSIFICATION	5.379538495972131E-6	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999988189317929	WITHOUT_CLASSIFICATION	1.1810682072143487E-6	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999972052088312	WITHOUT_CLASSIFICATION	2.7947911687715865E-6	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.99995527097372	WITHOUT_CLASSIFICATION	4.472902627994844E-5	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999987608568263	WITHOUT_CLASSIFICATION	1.239143173651779E-6	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9999879201586565	WITHOUT_CLASSIFICATION	1.20798413435333E-5	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999999854355048	WITHOUT_CLASSIFICATION	1.4564495207489533E-8	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9999599816247824	WITHOUT_CLASSIFICATION	4.001837521768778E-5	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.9999637695780992	WITHOUT_CLASSIFICATION	3.623042190074942E-5	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999991545727485	WITHOUT_CLASSIFICATION	8.454272515733786E-7	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999991545727485	WITHOUT_CLASSIFICATION	8.454272515733786E-7	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999990465823793	WITHOUT_CLASSIFICATION	9.534176206001448E-7	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.9999964570962353	WITHOUT_CLASSIFICATION	3.5429037647432745E-6	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999950747723914	WITHOUT_CLASSIFICATION	4.9252276086175515E-6	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999450435051089	WITHOUT_CLASSIFICATION	5.495649489096723E-5	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999987680030797	WITHOUT_CLASSIFICATION	1.2319969202282954E-6	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999872259636182	WITHOUT_CLASSIFICATION	1.2774036381634516E-5	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999997811990234	WITHOUT_CLASSIFICATION	2.188009765947185E-7	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999983637183593	WITHOUT_CLASSIFICATION	1.636281640738326E-6	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999951800863653	WITHOUT_CLASSIFICATION	4.8199136347233716E-6	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.999999653373783	WITHOUT_CLASSIFICATION	3.466262169845646E-7	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.99999726417587	WITHOUT_CLASSIFICATION	2.7358241300324335E-6	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9999960283721739	WITHOUT_CLASSIFICATION	3.9716278260637496E-6	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999938473565468	WITHOUT_CLASSIFICATION	6.152643453076814E-6	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999997044058792	WITHOUT_CLASSIFICATION	2.9559412082990634E-7	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999982222855964	WITHOUT_CLASSIFICATION	1.7777144035494787E-6	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999914501355	WITHOUT_CLASSIFICATION	8.549864506888878E-9	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999958887911446	WITHOUT_CLASSIFICATION	4.111208855345418E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999967192844	WITHOUT_CLASSIFICATION	3.2807156025445644E-9	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999967192844	WITHOUT_CLASSIFICATION	3.2807156025445644E-9	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9999848041015341	WITHOUT_CLASSIFICATION	1.5195898465744118E-5	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9999968220571199	WITHOUT_CLASSIFICATION	3.177942880045365E-6	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999999248288636	WITHOUT_CLASSIFICATION	7.51711363823897E-8	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9999940932545146	WITHOUT_CLASSIFICATION	5.90674548545223E-6	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999986966571033	WITHOUT_CLASSIFICATION	1.3033428967592986E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999967192844	WITHOUT_CLASSIFICATION	3.2807156025445644E-9	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999967192844	WITHOUT_CLASSIFICATION	3.2807156025445644E-9	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999914364737897	WITHOUT_CLASSIFICATION	8.563526210256013E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999914364737897	WITHOUT_CLASSIFICATION	8.563526210256013E-6	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999243108959897	WITHOUT_CLASSIFICATION	7.568910401034255E-5	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999936798330181	WITHOUT_CLASSIFICATION	6.320166981958008E-6	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.999999845201207	WITHOUT_CLASSIFICATION	1.5479879307737725E-7	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999996437469938	WITHOUT_CLASSIFICATION	3.562530062467659E-7	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999990995503677	WITHOUT_CLASSIFICATION	9.004496323048378E-7	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999990995503677	WITHOUT_CLASSIFICATION	9.004496323048378E-7	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.999999768056809	WITHOUT_CLASSIFICATION	2.3194319101829017E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999948844998405	WITHOUT_CLASSIFICATION	5.11550015943959E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999997917220534	WITHOUT_CLASSIFICATION	2.0827794661088082E-7	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999925097520577	WITHOUT_CLASSIFICATION	7.490247942321782E-6	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999917972861656	WITHOUT_CLASSIFICATION	8.202713834365165E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998779987522797	WITHOUT_CLASSIFICATION	1.2200124772026954E-4	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999964065487847	WITHOUT_CLASSIFICATION	3.5934512152806404E-6	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999998496263245	WITHOUT_CLASSIFICATION	1.5037367562920088E-7	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999994519641342	WITHOUT_CLASSIFICATION	5.480358658602955E-7	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999953309050588	WITHOUT_CLASSIFICATION	4.669094941217915E-6	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999990040959583	WITHOUT_CLASSIFICATION	9.959040416100594E-7	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999997240098227	WITHOUT_CLASSIFICATION	2.759901772792007E-7	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999846151203192	WITHOUT_CLASSIFICATION	1.538487968070693E-5	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999998608576841	WITHOUT_CLASSIFICATION	1.391423159878013E-7	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999914501355	WITHOUT_CLASSIFICATION	8.549864506888878E-9	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999967192844	WITHOUT_CLASSIFICATION	3.2807156025445644E-9	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999914364737897	WITHOUT_CLASSIFICATION	8.563526210256013E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998779987522797	WITHOUT_CLASSIFICATION	1.2200124772026954E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999898620552	WITHOUT_CLASSIFICATION	1.0137944840647659E-8	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999898620552	WITHOUT_CLASSIFICATION	1.0137944840647659E-8	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999416449346232	WITHOUT_CLASSIFICATION	5.835506537671775E-5	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999986912815013	WITHOUT_CLASSIFICATION	1.308718498596557E-6	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999999680703526	WITHOUT_CLASSIFICATION	3.1929647360561715E-8	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999953582539923	WITHOUT_CLASSIFICATION	4.641746007708648E-6	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999943452249875	WITHOUT_CLASSIFICATION	5.65477501235704E-6	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999999995909891	WITHOUT_CLASSIFICATION	4.0901090710241546E-10	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999997646391584	WITHOUT_CLASSIFICATION	2.3536084162022573E-7	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.999995746401509	WITHOUT_CLASSIFICATION	4.253598490963224E-6	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999997850236252	WITHOUT_CLASSIFICATION	2.1497637480678317E-7	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999993626947513	WITHOUT_CLASSIFICATION	6.373052487280677E-7	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999874591465749	WITHOUT_CLASSIFICATION	1.254085342511589E-5	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999229021261	WITHOUT_CLASSIFICATION	7.709787381594478E-8	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999999410932193	WITHOUT_CLASSIFICATION	5.8906780581322386E-8	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999958887911446	WITHOUT_CLASSIFICATION	4.111208855345418E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999914364737897	WITHOUT_CLASSIFICATION	8.563526210256013E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999948844998405	WITHOUT_CLASSIFICATION	5.11550015943959E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999997917220534	WITHOUT_CLASSIFICATION	2.0827794661088082E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999997917220534	WITHOUT_CLASSIFICATION	2.0827794661088082E-7	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999917972861656	WITHOUT_CLASSIFICATION	8.202713834365165E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998779987522797	WITHOUT_CLASSIFICATION	1.2200124772026954E-4	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998779987522797	WITHOUT_CLASSIFICATION	1.2200124772026954E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999898620552	WITHOUT_CLASSIFICATION	1.0137944840647659E-8	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999960057350155	WITHOUT_CLASSIFICATION	3.994264984491216E-6	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999812354079729	WITHOUT_CLASSIFICATION	1.8764592027126455E-5	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999982534483	WITHOUT_CLASSIFICATION	1.7465516912363552E-9	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999969637584115	WITHOUT_CLASSIFICATION	3.0362415884765716E-6	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999895357866985	WITHOUT_CLASSIFICATION	1.0464213301578635E-5	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.999906016207504	WITHOUT_CLASSIFICATION	9.39837924960188E-5	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999987923093346	WITHOUT_CLASSIFICATION	1.2076906653612257E-6	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999998714915718	WITHOUT_CLASSIFICATION	1.2850842818753174E-7	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999993271779638	WITHOUT_CLASSIFICATION	6.72822036237515E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999948844998405	WITHOUT_CLASSIFICATION	5.11550015943959E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999997917220534	WITHOUT_CLASSIFICATION	2.0827794661088082E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999997917220534	WITHOUT_CLASSIFICATION	2.0827794661088082E-7	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999917972861656	WITHOUT_CLASSIFICATION	8.202713834365165E-6	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.999995746401509	WITHOUT_CLASSIFICATION	4.253598490963224E-6	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999993626947513	WITHOUT_CLASSIFICATION	6.373052487280677E-7	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999987714946261	WITHOUT_CLASSIFICATION	1.2285053738974622E-6	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999978333992581	WITHOUT_CLASSIFICATION	2.1666007419194862E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999891167735234	WITHOUT_CLASSIFICATION	1.0883226476555392E-5	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999891167735234	WITHOUT_CLASSIFICATION	1.0883226476555392E-5	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999994387317178	WITHOUT_CLASSIFICATION	5.612682821678766E-7	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999999938276978	WITHOUT_CLASSIFICATION	6.172302245679182E-9	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999997405153142	WITHOUT_CLASSIFICATION	2.5948468590356577E-7	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999682138725501	WITHOUT_CLASSIFICATION	3.1786127449905674E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.999999902863597	WITHOUT_CLASSIFICATION	9.713640297097343E-8	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.999999902863597	WITHOUT_CLASSIFICATION	9.713640297097343E-8	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9997423953398227	WITHOUT_CLASSIFICATION	2.5760466017726754E-4	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9997423953398227	WITHOUT_CLASSIFICATION	2.5760466017726754E-4	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999972515985709	WITHOUT_CLASSIFICATION	2.748401429113541E-6	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999972515985709	WITHOUT_CLASSIFICATION	2.748401429113541E-6	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999972187070276	WITHOUT_CLASSIFICATION	2.78129297229186E-6	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999985257423747	WITHOUT_CLASSIFICATION	1.4742576253845556E-6	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999096085523379	WITHOUT_CLASSIFICATION	9.039144766205269E-5	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999995027448543	WITHOUT_CLASSIFICATION	4.972551456670476E-7	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999999594168872	WITHOUT_CLASSIFICATION	4.058311285531461E-8	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.9999992130605946	WITHOUT_CLASSIFICATION	7.869394053854136E-7	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999999036963338	WITHOUT_CLASSIFICATION	9.630366619170847E-8	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999994498680876	WITHOUT_CLASSIFICATION	5.501319123394006E-7	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.999992910914869	WITHOUT_CLASSIFICATION	7.089085130991467E-6	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999954896465529	WITHOUT_CLASSIFICATION	4.510353447061163E-6	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999972728961604	WITHOUT_CLASSIFICATION	2.727103839525646E-6	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999998348441387	WITHOUT_CLASSIFICATION	1.651558613429334E-7	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999964018990021	WITHOUT_CLASSIFICATION	3.598100997952385E-6	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999981830840594	WITHOUT_CLASSIFICATION	1.8169159407147373E-6	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999981830840594	WITHOUT_CLASSIFICATION	1.8169159407147373E-6	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999573084356529	WITHOUT_CLASSIFICATION	4.2691564347139E-5	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.999999930616559	WITHOUT_CLASSIFICATION	6.938344101507445E-8	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.999985989861797	WITHOUT_CLASSIFICATION	1.4010138203029952E-5	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999993216065	WITHOUT_CLASSIFICATION	6.783935063254795E-10	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999999736019994	WITHOUT_CLASSIFICATION	2.6398000667563956E-8	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999999445213035	WITHOUT_CLASSIFICATION	5.5478696606100314E-8	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999999727460936	WITHOUT_CLASSIFICATION	2.7253906366000452E-8	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999984086682149	WITHOUT_CLASSIFICATION	1.5913317850792686E-6	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999996943373678	WITHOUT_CLASSIFICATION	3.056626321870353E-7	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999999496341065	WITHOUT_CLASSIFICATION	5.036589347843663E-8	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999978356869387	WITHOUT_CLASSIFICATION	2.164313061221292E-6	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999991469296814	WITHOUT_CLASSIFICATION	8.530703186836645E-7	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999999802772509	WITHOUT_CLASSIFICATION	1.9722749075056933E-8	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9660439592748891	WITHOUT_CLASSIFICATION	0.03395604072511098	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999999166784563	WITHOUT_CLASSIFICATION	8.332154365430716E-8	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.999999899670655	WITHOUT_CLASSIFICATION	1.0032934503010377E-7	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9999976880231679	WITHOUT_CLASSIFICATION	2.311976832094388E-6	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999978528884167	WITHOUT_CLASSIFICATION	2.147111583301869E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999993347867675	WITHOUT_CLASSIFICATION	6.65213232584809E-7	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999993347867675	WITHOUT_CLASSIFICATION	6.65213232584809E-7	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999974204916847	WITHOUT_CLASSIFICATION	2.5795083152430877E-6	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999997612711553	WITHOUT_CLASSIFICATION	2.387288447588337E-7	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999843014439326	WITHOUT_CLASSIFICATION	1.5698556067381554E-5	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999843014439326	WITHOUT_CLASSIFICATION	1.5698556067381554E-5	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999997627666077	WITHOUT_CLASSIFICATION	2.3723339231162298E-7	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.999999449674153	WITHOUT_CLASSIFICATION	5.503258469402615E-7	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999757009442707	WITHOUT_CLASSIFICATION	2.4299055729315293E-5	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999976047492815	WITHOUT_CLASSIFICATION	2.3952507185940017E-6	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999999940469635	WITHOUT_CLASSIFICATION	5.9530364784557795E-9	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999999488087915	WITHOUT_CLASSIFICATION	5.1191208392438476E-8	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999999488087915	WITHOUT_CLASSIFICATION	5.1191208392438476E-8	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999127954643	WITHOUT_CLASSIFICATION	8.720453572308325E-8	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999999912867499	WITHOUT_CLASSIFICATION	8.713250087553084E-9	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999945293655601	WITHOUT_CLASSIFICATION	5.47063443993533E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999998457198822	WITHOUT_CLASSIFICATION	1.5428011765789372E-7	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999997612711553	WITHOUT_CLASSIFICATION	2.387288447588337E-7	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999968692347385	WITHOUT_CLASSIFICATION	3.130765261497397E-6	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999998027832087	WITHOUT_CLASSIFICATION	1.9721679133368418E-7	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999998027832087	WITHOUT_CLASSIFICATION	1.9721679133368418E-7	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9998894128446669	WITHOUT_CLASSIFICATION	1.1058715533316861E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999498555262	WITHOUT_CLASSIFICATION	5.014447385074188E-8	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999498555262	WITHOUT_CLASSIFICATION	5.014447385074188E-8	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9994099826090371	WITHOUT_CLASSIFICATION	5.900173909629172E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9994099826090371	WITHOUT_CLASSIFICATION	5.900173909629172E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9994099826090371	WITHOUT_CLASSIFICATION	5.900173909629172E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999498555262	WITHOUT_CLASSIFICATION	5.014447385074188E-8	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999498555262	WITHOUT_CLASSIFICATION	5.014447385074188E-8	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9998894128446669	WITHOUT_CLASSIFICATION	1.1058715533316861E-4	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999999372362736	WITHOUT_CLASSIFICATION	6.276372647253549E-8	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9999995900329739	WITHOUT_CLASSIFICATION	4.099670262139485E-7	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.999998307493577	WITHOUT_CLASSIFICATION	1.6925064230434066E-6	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9999698360883175	WITHOUT_CLASSIFICATION	3.0163911682515508E-5	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999477777508	WITHOUT_CLASSIFICATION	5.222224908170138E-8	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999674061941628	WITHOUT_CLASSIFICATION	3.2593805837301026E-5	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999987500257906	WITHOUT_CLASSIFICATION	1.2499742093497497E-6	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.999999928065546	WITHOUT_CLASSIFICATION	7.193445397697073E-8	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999978356869387	WITHOUT_CLASSIFICATION	2.164313061221292E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999498555262	WITHOUT_CLASSIFICATION	5.014447385074188E-8	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999498555262	WITHOUT_CLASSIFICATION	5.014447385074188E-8	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999650246925	WITHOUT_CLASSIFICATION	3.497530757163847E-8	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.999992425936217	WITHOUT_CLASSIFICATION	7.574063783012583E-6	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999992418371568	WITHOUT_CLASSIFICATION	7.581628430750073E-7	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999024427856	WITHOUT_CLASSIFICATION	9.755721446509387E-8	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999242812361726	WITHOUT_CLASSIFICATION	7.57187638273861E-5	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999566793264654	WITHOUT_CLASSIFICATION	4.3320673534576106E-5	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999454692656	WITHOUT_CLASSIFICATION	5.453073443564811E-8	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999952867570933	WITHOUT_CLASSIFICATION	4.713242906644934E-6	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999955757253267	WITHOUT_CLASSIFICATION	4.4242746731981685E-6	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999544119682	WITHOUT_CLASSIFICATION	4.558803173883077E-8	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999782922898648	WITHOUT_CLASSIFICATION	2.1707710135140935E-5	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999950543058557	WITHOUT_CLASSIFICATION	4.9456941443516956E-6	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999990011811017	WITHOUT_CLASSIFICATION	9.988188981860135E-7	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9998121428527681	WITHOUT_CLASSIFICATION	1.878571472318923E-4	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999977623005253	WITHOUT_CLASSIFICATION	2.237699474777505E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999996594445544	WITHOUT_CLASSIFICATION	3.405554456282135E-7	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999996594445544	WITHOUT_CLASSIFICATION	3.405554456282135E-7	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999996594445544	WITHOUT_CLASSIFICATION	3.405554456282135E-7	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999988379164866	WITHOUT_CLASSIFICATION	1.1620835133277082E-6	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999993853179937	WITHOUT_CLASSIFICATION	6.146820063654413E-7	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999977232057248	WITHOUT_CLASSIFICATION	2.276794275254071E-6	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999992974139941	WITHOUT_CLASSIFICATION	7.025860060151025E-7	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999257193326433	WITHOUT_CLASSIFICATION	7.428066735669896E-5	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999999097802748	WITHOUT_CLASSIFICATION	9.021972520409299E-8	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999999967291322	WITHOUT_CLASSIFICATION	3.2708678445669173E-9	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999999626580609	WITHOUT_CLASSIFICATION	3.734193915120842E-8	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999997829150102	WITHOUT_CLASSIFICATION	2.1708498976265674E-7	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999999015933734	WITHOUT_CLASSIFICATION	9.840662673112592E-8	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999988414622986	WITHOUT_CLASSIFICATION	1.1585377013636826E-6	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999962461562841	WITHOUT_CLASSIFICATION	3.753843715869091E-6	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999127954643	WITHOUT_CLASSIFICATION	8.720453572308325E-8	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999498555262	WITHOUT_CLASSIFICATION	5.014447385074188E-8	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999498555262	WITHOUT_CLASSIFICATION	5.014447385074188E-8	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9998894128446669	WITHOUT_CLASSIFICATION	1.1058715533316861E-4	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999674061941628	WITHOUT_CLASSIFICATION	3.2593805837301026E-5	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.999992425936217	WITHOUT_CLASSIFICATION	7.574063783012583E-6	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999024427856	WITHOUT_CLASSIFICATION	9.755721446509387E-8	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999566793264654	WITHOUT_CLASSIFICATION	4.3320673534576106E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999992418371568	WITHOUT_CLASSIFICATION	7.581628430750073E-7	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999454692656	WITHOUT_CLASSIFICATION	5.453073443564811E-8	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999544119682	WITHOUT_CLASSIFICATION	4.558803173883077E-8	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999955757253267	WITHOUT_CLASSIFICATION	4.4242746731981685E-6	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999950543058557	WITHOUT_CLASSIFICATION	4.9456941443516956E-6	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999803426643474	WITHOUT_CLASSIFICATION	1.965733565247927E-5	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9992932459227858	WITHOUT_CLASSIFICATION	7.067540772142672E-4	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999980495363128	WITHOUT_CLASSIFICATION	1.9504636871840987E-6	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999999972041852	WITHOUT_CLASSIFICATION	2.795814882973685E-9	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999985271999299	WITHOUT_CLASSIFICATION	1.472800070115618E-6	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999372257457256	WITHOUT_CLASSIFICATION	6.277425427445893E-5	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999998369307249	WITHOUT_CLASSIFICATION	1.6306927508004234E-7	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.999880934463461	WITHOUT_CLASSIFICATION	1.1906553653896746E-4	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999994560516513	WITHOUT_CLASSIFICATION	5.439483486927237E-7	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.99999087013736	WITHOUT_CLASSIFICATION	9.129862640092435E-6	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9998961286631526	WITHOUT_CLASSIFICATION	1.0387133684737307E-4	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999999695955108	WITHOUT_CLASSIFICATION	3.0404489199497897E-7	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999962281151934	WITHOUT_CLASSIFICATION	3.7718848064886965E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999990525701145	WITHOUT_CLASSIFICATION	9.474298855993583E-7	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999995368524787	WITHOUT_CLASSIFICATION	4.631475212330533E-7	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999991004517256	WITHOUT_CLASSIFICATION	8.995482744038434E-7	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999472834752	WITHOUT_CLASSIFICATION	5.271652479956489E-8	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999896990894395	WITHOUT_CLASSIFICATION	1.030091056042612E-5	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999962123960443	WITHOUT_CLASSIFICATION	3.7876039556698523E-6	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999993382854075	WITHOUT_CLASSIFICATION	6.617145924529108E-7	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999999019469537	WITHOUT_CLASSIFICATION	9.8053046381975E-8	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999996276916	WITHOUT_CLASSIFICATION	3.723084431903143E-10	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999996276916	WITHOUT_CLASSIFICATION	3.723084431903143E-10	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999996927529727	WITHOUT_CLASSIFICATION	3.072470272424662E-7	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999999870254022	WITHOUT_CLASSIFICATION	1.2974597849456609E-8	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999945383635002	WITHOUT_CLASSIFICATION	5.461636499798409E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999945383635002	WITHOUT_CLASSIFICATION	5.461636499798409E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999945383635002	WITHOUT_CLASSIFICATION	5.461636499798409E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999795301593848	WITHOUT_CLASSIFICATION	2.0469840615213546E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999795301593848	WITHOUT_CLASSIFICATION	2.0469840615213546E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999795301593848	WITHOUT_CLASSIFICATION	2.0469840615213546E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999795301593848	WITHOUT_CLASSIFICATION	2.0469840615213546E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999784354103896	WITHOUT_CLASSIFICATION	2.1564589610383722E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999784354103896	WITHOUT_CLASSIFICATION	2.1564589610383722E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999784354103896	WITHOUT_CLASSIFICATION	2.1564589610383722E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999740812228585	WITHOUT_CLASSIFICATION	2.5918777141569052E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999740812228585	WITHOUT_CLASSIFICATION	2.5918777141569052E-5	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999723181639841	WITHOUT_CLASSIFICATION	2.7681836015932464E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.999971632172337	WITHOUT_CLASSIFICATION	2.8367827663045367E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999999870254022	WITHOUT_CLASSIFICATION	1.2974597849456609E-8	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999999031284849	WITHOUT_CLASSIFICATION	9.68715151773459E-8	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999945383635002	WITHOUT_CLASSIFICATION	5.461636499798409E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999945383635002	WITHOUT_CLASSIFICATION	5.461636499798409E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999795301593848	WITHOUT_CLASSIFICATION	2.0469840615213546E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999795301593848	WITHOUT_CLASSIFICATION	2.0469840615213546E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999795301593848	WITHOUT_CLASSIFICATION	2.0469840615213546E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999784354103896	WITHOUT_CLASSIFICATION	2.1564589610383722E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999784354103896	WITHOUT_CLASSIFICATION	2.1564589610383722E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999740812228585	WITHOUT_CLASSIFICATION	2.5918777141569052E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.999971632172337	WITHOUT_CLASSIFICATION	2.8367827663045367E-5	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999960697266083	WITHOUT_CLASSIFICATION	3.930273391750706E-6	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999960697266083	WITHOUT_CLASSIFICATION	3.930273391750706E-6	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999995691672896	WITHOUT_CLASSIFICATION	4.308327103110174E-7	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999995691672896	WITHOUT_CLASSIFICATION	4.308327103110174E-7	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999941712338474	WITHOUT_CLASSIFICATION	5.828766152561801E-6	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999941712338474	WITHOUT_CLASSIFICATION	5.828766152561801E-6	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999994522441366	WITHOUT_CLASSIFICATION	5.477558634949295E-7	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999954244395626	WITHOUT_CLASSIFICATION	4.57556043739356E-6	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999954244395626	WITHOUT_CLASSIFICATION	4.57556043739356E-6	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999865423505467	WITHOUT_CLASSIFICATION	1.3457649453298025E-5	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999865423505467	WITHOUT_CLASSIFICATION	1.3457649453298025E-5	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.999999402643713	WITHOUT_CLASSIFICATION	5.973562869491956E-7	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999995906008822	WITHOUT_CLASSIFICATION	4.0939911772896357E-7	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999995906008822	WITHOUT_CLASSIFICATION	4.0939911772896357E-7	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999984719868515	WITHOUT_CLASSIFICATION	1.5280131483830891E-6	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999983920726065	WITHOUT_CLASSIFICATION	1.6079273935467634E-6	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999999015831789	WITHOUT_CLASSIFICATION	9.841682108361003E-8	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999795301593848	WITHOUT_CLASSIFICATION	2.0469840615213546E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999795301593848	WITHOUT_CLASSIFICATION	2.0469840615213546E-5	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999984719868515	WITHOUT_CLASSIFICATION	1.5280131483830891E-6	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999996224002496	WITHOUT_CLASSIFICATION	3.7759975041072155E-7	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999993599177861	WITHOUT_CLASSIFICATION	6.40082213930942E-7	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999993599177861	WITHOUT_CLASSIFICATION	6.40082213930942E-7	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999993599177861	WITHOUT_CLASSIFICATION	6.40082213930942E-7	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9997636417808098	WITHOUT_CLASSIFICATION	2.36358219190256E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999989108491577	WITHOUT_CLASSIFICATION	1.0891508423296486E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999958855880226	WITHOUT_CLASSIFICATION	4.1144119774059585E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999958855880226	WITHOUT_CLASSIFICATION	4.1144119774059585E-5	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9998979081377176	WITHOUT_CLASSIFICATION	1.0209186228239219E-4	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999624231159654	WITHOUT_CLASSIFICATION	3.757688403451804E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999981269152262	WITHOUT_CLASSIFICATION	1.8730847738851872E-6	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999960151719038	WITHOUT_CLASSIFICATION	3.9848280961776844E-6	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.999989880884824	WITHOUT_CLASSIFICATION	1.0119115176062078E-5	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999998632890733	WITHOUT_CLASSIFICATION	1.3671092671340806E-7	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999998632890733	WITHOUT_CLASSIFICATION	1.3671092671340806E-7	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.999989953423764	WITHOUT_CLASSIFICATION	1.0046576236079228E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999665009399458	WITHOUT_CLASSIFICATION	3.349906005420463E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999665009399458	WITHOUT_CLASSIFICATION	3.349906005420463E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999795301593848	WITHOUT_CLASSIFICATION	2.0469840615213546E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999993599177861	WITHOUT_CLASSIFICATION	6.40082213930942E-7	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999989108491577	WITHOUT_CLASSIFICATION	1.0891508423296486E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999958855880226	WITHOUT_CLASSIFICATION	4.1144119774059585E-5	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9998979081377176	WITHOUT_CLASSIFICATION	1.0209186228239219E-4	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999624231159654	WITHOUT_CLASSIFICATION	3.757688403451804E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999981269152262	WITHOUT_CLASSIFICATION	1.8730847738851872E-6	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999960151719038	WITHOUT_CLASSIFICATION	3.9848280961776844E-6	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999665009399458	WITHOUT_CLASSIFICATION	3.349906005420463E-5	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999999535337897	WITHOUT_CLASSIFICATION	4.646621032267728E-8	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999997592771133	WITHOUT_CLASSIFICATION	2.407228866520301E-7	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999999893488474	WITHOUT_CLASSIFICATION	1.0651152718067831E-8	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999594699380018	WITHOUT_CLASSIFICATION	4.0530061998219004E-5	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999987415460748	WITHOUT_CLASSIFICATION	1.25845392520329E-6	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999989611274112	WITHOUT_CLASSIFICATION	1.0388725888440836E-6	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999996713026863	WITHOUT_CLASSIFICATION	3.2869731364034554E-7	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999996713026863	WITHOUT_CLASSIFICATION	3.2869731364034554E-7	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999682324110349	WITHOUT_CLASSIFICATION	3.1767588965090215E-5	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999726722276492	WITHOUT_CLASSIFICATION	2.73277723507606E-5	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999334571284171	WITHOUT_CLASSIFICATION	6.654287158288586E-5	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999630572468802	WITHOUT_CLASSIFICATION	3.694275311984917E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999066847470705	WITHOUT_CLASSIFICATION	9.331525292962705E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999066847470705	WITHOUT_CLASSIFICATION	9.331525292962705E-5	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999285110968574	WITHOUT_CLASSIFICATION	7.148890314251896E-5	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999786800248103	WITHOUT_CLASSIFICATION	2.1319975189829334E-5	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9991647933786271	WITHOUT_CLASSIFICATION	8.35206621372965E-4	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9991647933786271	WITHOUT_CLASSIFICATION	8.35206621372965E-4	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999528841866604	WITHOUT_CLASSIFICATION	4.7115813339588894E-5	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9998324385010936	WITHOUT_CLASSIFICATION	1.675614989063632E-4	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.999989880884824	WITHOUT_CLASSIFICATION	1.0119115176062078E-5	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999996094846386	WITHOUT_CLASSIFICATION	3.9051536140321033E-7	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999999994012019	WITHOUT_CLASSIFICATION	5.987980983485152E-9	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999995811733158	WITHOUT_CLASSIFICATION	4.188266843229507E-7	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999989526790725	WITHOUT_CLASSIFICATION	1.0473209275568826E-6	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.9999999396013892	WITHOUT_CLASSIFICATION	6.039861079494982E-8	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999992309347491	WITHOUT_CLASSIFICATION	7.690652509085998E-7	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999976516683535	WITHOUT_CLASSIFICATION	2.3483316464489663E-6	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999991945190614	WITHOUT_CLASSIFICATION	8.054809386062418E-7	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.999999666530593	WITHOUT_CLASSIFICATION	3.3346940700252723E-7	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.999999666530593	WITHOUT_CLASSIFICATION	3.3346940700252723E-7	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999935559978328	WITHOUT_CLASSIFICATION	6.444002167148296E-6	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999935559978328	WITHOUT_CLASSIFICATION	6.444002167148296E-6	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999999409295868	WITHOUT_CLASSIFICATION	5.907041328223474E-8	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.999999797462927	WITHOUT_CLASSIFICATION	2.0253707306635427E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.999999797462927	WITHOUT_CLASSIFICATION	2.0253707306635427E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.999999797462927	WITHOUT_CLASSIFICATION	2.0253707306635427E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999759535997	WITHOUT_CLASSIFICATION	2.4046400316549494E-8	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.999999863022245	WITHOUT_CLASSIFICATION	1.3697775495087697E-7	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.999999863022245	WITHOUT_CLASSIFICATION	1.3697775495087697E-7	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999659161294	WITHOUT_CLASSIFICATION	3.408387060165148E-8	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999933893739108	WITHOUT_CLASSIFICATION	6.610626089208323E-6	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999937730503352	WITHOUT_CLASSIFICATION	6.226949664724287E-6	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9999917081434575	WITHOUT_CLASSIFICATION	8.29185654252091E-6	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999818197819997	WITHOUT_CLASSIFICATION	1.818021800027258E-5	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9999775351626236	WITHOUT_CLASSIFICATION	2.246483737640361E-5	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999294537052601	WITHOUT_CLASSIFICATION	7.054629473985752E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999962281151934	WITHOUT_CLASSIFICATION	3.7718848064886965E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999962281151934	WITHOUT_CLASSIFICATION	3.7718848064886965E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999759535997	WITHOUT_CLASSIFICATION	2.4046400316549494E-8	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999659161294	WITHOUT_CLASSIFICATION	3.408387060165148E-8	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999920849987	WITHOUT_CLASSIFICATION	7.915001312507397E-9	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999933893739108	WITHOUT_CLASSIFICATION	6.610626089208323E-6	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999937730503352	WITHOUT_CLASSIFICATION	6.226949664724287E-6	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.99997994375764	WITHOUT_CLASSIFICATION	2.0056242360023647E-5	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9999994432512527	WITHOUT_CLASSIFICATION	5.567487472994337E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999983362759026	WITHOUT_CLASSIFICATION	1.6637240974538827E-6	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.9999946184613173	WITHOUT_CLASSIFICATION	5.38153868260954E-6	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.999992262236075	WITHOUT_CLASSIFICATION	7.737763925001904E-6	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999999283754015	WITHOUT_CLASSIFICATION	7.162459847159546E-8	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999994461195038	WITHOUT_CLASSIFICATION	5.538804961836488E-7	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.99997994375764	WITHOUT_CLASSIFICATION	2.0056242360023647E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999968756307325	WITHOUT_CLASSIFICATION	3.124369267636298E-6	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999968756307325	WITHOUT_CLASSIFICATION	3.124369267636298E-6	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999995068331436	WITHOUT_CLASSIFICATION	4.931668563190086E-7	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999662372544852	WITHOUT_CLASSIFICATION	3.376274551485154E-5	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.999999421022559	WITHOUT_CLASSIFICATION	5.78977440926057E-7	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999866489529942	WITHOUT_CLASSIFICATION	1.3351047005897824E-5	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999934249202052	WITHOUT_CLASSIFICATION	6.575079794893914E-6	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9993328106705168	WITHOUT_CLASSIFICATION	6.671893294831534E-4	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999993809908011	WITHOUT_CLASSIFICATION	6.190091987655574E-7	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999557631857867	WITHOUT_CLASSIFICATION	4.423681421325655E-5	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999999379584926	WITHOUT_CLASSIFICATION	6.204150740995675E-8	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9999999041342528	WITHOUT_CLASSIFICATION	9.586574715465943E-8	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999995007637644	WITHOUT_CLASSIFICATION	4.992362355676262E-7	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999866489529942	WITHOUT_CLASSIFICATION	1.3351047005897824E-5	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999934249202052	WITHOUT_CLASSIFICATION	6.575079794893914E-6	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999552449320749	WITHOUT_CLASSIFICATION	4.475506792519778E-5	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9999999140161219	WITHOUT_CLASSIFICATION	8.59838780731818E-8	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999999895675464	WITHOUT_CLASSIFICATION	1.0432453585882658E-8	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999980806484112	WITHOUT_CLASSIFICATION	1.919351588708088E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999999950110856	WITHOUT_CLASSIFICATION	4.988914435468074E-9	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999998919732022	WITHOUT_CLASSIFICATION	1.0802679791020262E-7	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9999849378583647	WITHOUT_CLASSIFICATION	1.5062141635402678E-5	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9999992238377794	WITHOUT_CLASSIFICATION	7.761622205583872E-7	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999999059473547	WITHOUT_CLASSIFICATION	9.40526453805142E-8	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999998056434066	WITHOUT_CLASSIFICATION	1.9435659346241117E-7	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999995255657107	WITHOUT_CLASSIFICATION	4.7443428930863375E-7	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9999905104629544	WITHOUT_CLASSIFICATION	9.48953704557152E-6	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999972105256358	WITHOUT_CLASSIFICATION	2.7894743642013896E-6	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999998682243325	WITHOUT_CLASSIFICATION	1.3177566751147146E-7	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999999249114322	WITHOUT_CLASSIFICATION	7.508856782915146E-8	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999587895357	WITHOUT_CLASSIFICATION	4.121046420101661E-8	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999929425616955	WITHOUT_CLASSIFICATION	7.057438304612171E-6	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999870466335431	WITHOUT_CLASSIFICATION	1.2953366457023485E-5	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999940016269842	WITHOUT_CLASSIFICATION	5.9983730157919064E-6	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999566233144269	WITHOUT_CLASSIFICATION	4.3376685573104925E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999929425616955	WITHOUT_CLASSIFICATION	7.057438304612171E-6	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999870466335431	WITHOUT_CLASSIFICATION	1.2953366457023485E-5	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999940016269842	WITHOUT_CLASSIFICATION	5.9983730157919064E-6	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.999998576575824	WITHOUT_CLASSIFICATION	1.4234241758918498E-6	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999977762551098	WITHOUT_CLASSIFICATION	2.2237448902538397E-6	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999997873149722	WITHOUT_CLASSIFICATION	2.1268502788711377E-7	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.999997892406398	WITHOUT_CLASSIFICATION	2.107593602022445E-6	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999955517275916	WITHOUT_CLASSIFICATION	4.448272408490845E-6	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999898369062123	WITHOUT_CLASSIFICATION	1.0163093787727436E-5	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999996483223357	WITHOUT_CLASSIFICATION	3.5167766429960125E-7	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999966901074822	WITHOUT_CLASSIFICATION	3.3098925179054093E-6	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9999999014043904	WITHOUT_CLASSIFICATION	9.859560949657194E-8	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9999984143456958	WITHOUT_CLASSIFICATION	1.5856543042210033E-6	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.8806587902484518	WITHOUT_CLASSIFICATION	0.11934120975154816	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999998827525417	WITHOUT_CLASSIFICATION	1.1724745830690042E-7	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999983517564175	WITHOUT_CLASSIFICATION	1.6482435825942858E-6	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.999912918857684	WITHOUT_CLASSIFICATION	8.708114231601432E-5	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999960255554842	WITHOUT_CLASSIFICATION	3.974444515847521E-6	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999996595291847	WITHOUT_CLASSIFICATION	3.404708153023214E-7	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999995174840011	WITHOUT_CLASSIFICATION	4.825159989965264E-7	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999995344795619	WITHOUT_CLASSIFICATION	4.6552043804604487E-7	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9997376805291626	WITHOUT_CLASSIFICATION	2.623194708374452E-4	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999761795750517	WITHOUT_CLASSIFICATION	2.3820424948305523E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999998847038157	WITHOUT_CLASSIFICATION	1.1529618424617408E-7	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999985422194927	WITHOUT_CLASSIFICATION	1.4577805072380603E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999985422194927	WITHOUT_CLASSIFICATION	1.4577805072380603E-6	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999974913894137	WITHOUT_CLASSIFICATION	2.5086105862004966E-6	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999974913894137	WITHOUT_CLASSIFICATION	2.5086105862004966E-6	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999980086438154	WITHOUT_CLASSIFICATION	1.9913561847032847E-6	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999980086438154	WITHOUT_CLASSIFICATION	1.9913561847032847E-6	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999746763798248	WITHOUT_CLASSIFICATION	2.53236201751228E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999294188413	WITHOUT_CLASSIFICATION	7.058115869583638E-8	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999851604259	WITHOUT_CLASSIFICATION	1.4839574222456932E-8	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999977597616789	WITHOUT_CLASSIFICATION	2.240238321143383E-6	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999911446075397	WITHOUT_CLASSIFICATION	8.855392460216525E-6	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999663633915743	WITHOUT_CLASSIFICATION	3.363660842576355E-5	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999977944624848	WITHOUT_CLASSIFICATION	2.2055375151250315E-6	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.999990459999484	WITHOUT_CLASSIFICATION	9.540000516063954E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999962281151934	WITHOUT_CLASSIFICATION	3.7718848064886965E-6	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999746763798248	WITHOUT_CLASSIFICATION	2.53236201751228E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999294188413	WITHOUT_CLASSIFICATION	7.058115869583638E-8	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999851604259	WITHOUT_CLASSIFICATION	1.4839574222456932E-8	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999911446075397	WITHOUT_CLASSIFICATION	8.855392460216525E-6	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999663633915743	WITHOUT_CLASSIFICATION	3.363660842576355E-5	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999900309276895	WITHOUT_CLASSIFICATION	9.969072310524661E-6	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9999998042533017	WITHOUT_CLASSIFICATION	1.9574669840559916E-7	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999948139819643	WITHOUT_CLASSIFICATION	5.186018035675534E-6	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999948139819643	WITHOUT_CLASSIFICATION	5.186018035675534E-6	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999828979531349	WITHOUT_CLASSIFICATION	1.710204686512878E-5	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999992542376989	WITHOUT_CLASSIFICATION	7.457623011600092E-7	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999995305425634	WITHOUT_CLASSIFICATION	4.6945743657928465E-7	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.99999987081108	WITHOUT_CLASSIFICATION	1.2918892002794069E-7	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.99999987081108	WITHOUT_CLASSIFICATION	1.2918892002794069E-7	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999993368041067	WITHOUT_CLASSIFICATION	6.631958932669228E-7	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999945742398	WITHOUT_CLASSIFICATION	5.425760135517219E-9	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999877544972136	WITHOUT_CLASSIFICATION	1.2245502786423236E-5	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999997678953698	WITHOUT_CLASSIFICATION	2.3210463031313665E-7	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999998389006974	WITHOUT_CLASSIFICATION	1.610993025840962E-7	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999990525701145	WITHOUT_CLASSIFICATION	9.474298855993583E-7	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999995368524787	WITHOUT_CLASSIFICATION	4.631475212330533E-7	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999991004517256	WITHOUT_CLASSIFICATION	8.995482744038434E-7	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999472834752	WITHOUT_CLASSIFICATION	5.271652479956489E-8	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999993382854075	WITHOUT_CLASSIFICATION	6.617145924529108E-7	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999999019469537	WITHOUT_CLASSIFICATION	9.8053046381975E-8	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999993368041067	WITHOUT_CLASSIFICATION	6.631958932669228E-7	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999945742398	WITHOUT_CLASSIFICATION	5.425760135517219E-9	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999997678953698	WITHOUT_CLASSIFICATION	2.3210463031313665E-7	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.999999092082276	WITHOUT_CLASSIFICATION	9.079177238792595E-7	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999995305425634	WITHOUT_CLASSIFICATION	4.6945743657928465E-7	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999995305425634	WITHOUT_CLASSIFICATION	4.6945743657928465E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999995007637644	WITHOUT_CLASSIFICATION	4.992362355676262E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999995007637644	WITHOUT_CLASSIFICATION	4.992362355676262E-7	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999996903009336	WITHOUT_CLASSIFICATION	3.096990663929769E-7	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999996903009336	WITHOUT_CLASSIFICATION	3.096990663929769E-7	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999993257231955	WITHOUT_CLASSIFICATION	6.742768044054475E-7	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999997084856833	WITHOUT_CLASSIFICATION	2.9151431672587053E-7	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999992041689693	WITHOUT_CLASSIFICATION	7.958310308063601E-7	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999976897021825	WITHOUT_CLASSIFICATION	2.3102978174214473E-6	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999970579541182	WITHOUT_CLASSIFICATION	2.942045881852112E-6	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999825343611818	WITHOUT_CLASSIFICATION	1.7465638818313345E-5	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999999735146478	WITHOUT_CLASSIFICATION	2.648535217895853E-8	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999875804499354	WITHOUT_CLASSIFICATION	1.2419550064605216E-5	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999999409198157	WITHOUT_CLASSIFICATION	5.908018419001031E-8	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999997436524471	WITHOUT_CLASSIFICATION	2.56347552859005E-7	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999991109550798	WITHOUT_CLASSIFICATION	8.89044920286579E-7	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.999999949121568	WITHOUT_CLASSIFICATION	5.08784321422226E-8	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.999999956488357	WITHOUT_CLASSIFICATION	4.351164297260097E-8	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999818376441968	WITHOUT_CLASSIFICATION	1.816235580325071E-5	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999961877229097	WITHOUT_CLASSIFICATION	3.8122770903686487E-6	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9999449319326016	WITHOUT_CLASSIFICATION	5.506806739850332E-5	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9999991900473465	WITHOUT_CLASSIFICATION	8.099526535128912E-7	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999904556733348	WITHOUT_CLASSIFICATION	9.544326665314575E-6	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999988596092901	WITHOUT_CLASSIFICATION	1.1403907098981844E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999995368524787	WITHOUT_CLASSIFICATION	4.631475212330533E-7	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999472834752	WITHOUT_CLASSIFICATION	5.271652479956489E-8	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999996276916	WITHOUT_CLASSIFICATION	3.723084431903143E-10	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999958855880226	WITHOUT_CLASSIFICATION	4.1144119774059585E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999958855880226	WITHOUT_CLASSIFICATION	4.1144119774059585E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.999999092082276	WITHOUT_CLASSIFICATION	9.079177238792595E-7	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999995305425634	WITHOUT_CLASSIFICATION	4.6945743657928465E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999995007637644	WITHOUT_CLASSIFICATION	4.992362355676262E-7	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999996903009336	WITHOUT_CLASSIFICATION	3.096990663929769E-7	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.999999531269671	WITHOUT_CLASSIFICATION	4.6873032899926543E-7	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999857210560866	WITHOUT_CLASSIFICATION	1.4278943913261697E-5	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.999579943667461	WITHOUT_CLASSIFICATION	4.2005633253912507E-4	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999997326473906	WITHOUT_CLASSIFICATION	2.6735260934421027E-7	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.999999510685645	WITHOUT_CLASSIFICATION	4.893143550241068E-7	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.999999510685645	WITHOUT_CLASSIFICATION	4.893143550241068E-7	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999999767973118	WITHOUT_CLASSIFICATION	2.3202688272898464E-8	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.999994010053214	WITHOUT_CLASSIFICATION	5.989946786081391E-6	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999917058193122	WITHOUT_CLASSIFICATION	8.294180687811795E-6	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999977015400454	WITHOUT_CLASSIFICATION	2.2984599544973497E-6	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999990347264567	WITHOUT_CLASSIFICATION	9.652735432472019E-7	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999990347264567	WITHOUT_CLASSIFICATION	9.652735432472019E-7	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9997490162965131	WITHOUT_CLASSIFICATION	2.509837034868876E-4	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9999909608475885	WITHOUT_CLASSIFICATION	9.039152411375578E-6	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999987578239713	WITHOUT_CLASSIFICATION	1.2421760286676854E-6	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9998668143428161	WITHOUT_CLASSIFICATION	1.3318565718390085E-4	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999003954500217	WITHOUT_CLASSIFICATION	9.9604549978379E-5	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999997482403147	WITHOUT_CLASSIFICATION	2.5175968536894134E-7	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999909049524349	WITHOUT_CLASSIFICATION	9.09504756503264E-6	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.999999722707587	WITHOUT_CLASSIFICATION	2.772924130904589E-7	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9997035068871639	WITHOUT_CLASSIFICATION	2.9649311283614564E-4	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9999935150574248	WITHOUT_CLASSIFICATION	6.4849425750656945E-6	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999999976871663	WITHOUT_CLASSIFICATION	2.312833716804941E-9	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999871145441138	WITHOUT_CLASSIFICATION	1.2885455886062856E-5	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9982016412855041	WITHOUT_CLASSIFICATION	0.0017983587144958443	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999984010194908	WITHOUT_CLASSIFICATION	1.5989805092145227E-6	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999983599244173	WITHOUT_CLASSIFICATION	1.6400755826599053E-6	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999942261891551	WITHOUT_CLASSIFICATION	5.773810844915892E-6	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999990902037492	WITHOUT_CLASSIFICATION	9.097962508762432E-7	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.999999710633824	WITHOUT_CLASSIFICATION	2.893661759680743E-7	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999830885062679	WITHOUT_CLASSIFICATION	1.691149373205404E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999995911840904	WITHOUT_CLASSIFICATION	4.0881590957526016E-7	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.999999720758115	WITHOUT_CLASSIFICATION	2.7924188494542436E-7	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999998228181848	WITHOUT_CLASSIFICATION	1.7718181513984463E-7	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999998228181848	WITHOUT_CLASSIFICATION	1.7718181513984463E-7	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999994800188328	WITHOUT_CLASSIFICATION	5.199811671413944E-7	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999999040163418	WITHOUT_CLASSIFICATION	9.598365827583871E-8	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999984086682149	WITHOUT_CLASSIFICATION	1.5913317850792686E-6	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999984086682149	WITHOUT_CLASSIFICATION	1.5913317850792686E-6	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9962490930329365	WITHOUT_CLASSIFICATION	0.0037509069670634805	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999997757744729	WITHOUT_CLASSIFICATION	2.2422552718569958E-7	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999947925670315	WITHOUT_CLASSIFICATION	5.2074329685663386E-6	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999954341743376	WITHOUT_CLASSIFICATION	4.565825662400319E-6	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999954341743376	WITHOUT_CLASSIFICATION	4.565825662400319E-6	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999909487122969	WITHOUT_CLASSIFICATION	9.051287703073412E-6	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999864527389	WITHOUT_CLASSIFICATION	1.354726107117066E-8	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.99999996118885	WITHOUT_CLASSIFICATION	3.881114988068727E-8	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.999976175074316	WITHOUT_CLASSIFICATION	2.3824925684000113E-5	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999999484323155	WITHOUT_CLASSIFICATION	5.1567684424127284E-8	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.999999401582852	WITHOUT_CLASSIFICATION	5.98417147941338E-7	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999983993476791	WITHOUT_CLASSIFICATION	1.6006523208483611E-6	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999966966765104	WITHOUT_CLASSIFICATION	3.303323489557551E-6	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9999996507083396	WITHOUT_CLASSIFICATION	3.4929166037601456E-7	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999975634047987	WITHOUT_CLASSIFICATION	2.4365952012462545E-6	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.999999860186637	WITHOUT_CLASSIFICATION	1.3981336299841452E-7	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9994729996622121	WITHOUT_CLASSIFICATION	5.270003377878032E-4	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9999951742782762	WITHOUT_CLASSIFICATION	4.825721723828316E-6	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999996485656035	WITHOUT_CLASSIFICATION	3.5143439648396035E-7	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999972731577988	WITHOUT_CLASSIFICATION	2.726842201095005E-6	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999999673800133	WITHOUT_CLASSIFICATION	3.261998671263201E-8	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999897456553	WITHOUT_CLASSIFICATION	1.0254344724400492E-8	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.999983572450301	WITHOUT_CLASSIFICATION	1.6427549699036636E-5	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999984997682263	WITHOUT_CLASSIFICATION	1.5002317736805541E-6	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.999999996755901	WITHOUT_CLASSIFICATION	3.2440989388970335E-9	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9999941916441463	WITHOUT_CLASSIFICATION	5.808355853631003E-6	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9999965972666046	WITHOUT_CLASSIFICATION	3.4027333952692453E-6	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999983806067407	WITHOUT_CLASSIFICATION	1.6193932593032174E-6	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999988382765674	WITHOUT_CLASSIFICATION	1.1617234326165573E-6	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999901918092086	WITHOUT_CLASSIFICATION	9.808190791405832E-6	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999996216300047	WITHOUT_CLASSIFICATION	3.7836999533007455E-7	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999412135545764	WITHOUT_CLASSIFICATION	5.87864454234652E-5	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999996366862142	WITHOUT_CLASSIFICATION	3.6331378578633505E-7	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999982487920155	WITHOUT_CLASSIFICATION	1.7512079845182275E-6	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999145529849	WITHOUT_CLASSIFICATION	8.544701516064125E-8	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999998553067257	WITHOUT_CLASSIFICATION	1.4469327427581825E-7	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999996485656035	WITHOUT_CLASSIFICATION	3.5143439648396035E-7	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999996366862142	WITHOUT_CLASSIFICATION	3.6331378578633505E-7	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999982487920155	WITHOUT_CLASSIFICATION	1.7512079845182275E-6	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999998553067257	WITHOUT_CLASSIFICATION	1.4469327427581825E-7	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999959641536589	WITHOUT_CLASSIFICATION	4.035846341162138E-6	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9999795612715341	WITHOUT_CLASSIFICATION	2.043872846580379E-5	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999989236556561	WITHOUT_CLASSIFICATION	1.0763443439184389E-6	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.999996981336729	WITHOUT_CLASSIFICATION	3.0186632709594875E-6	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999987598247672	WITHOUT_CLASSIFICATION	1.2401752329246658E-6	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999999996083282	WITHOUT_CLASSIFICATION	3.9167189322548455E-10	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9999990023723527	WITHOUT_CLASSIFICATION	9.976276472669077E-7	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9999982114725736	WITHOUT_CLASSIFICATION	1.7885274263057292E-6	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9999998855293557	WITHOUT_CLASSIFICATION	1.1447064431726694E-7	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999998461017381	WITHOUT_CLASSIFICATION	1.5389826187783727E-7	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999897683751553	WITHOUT_CLASSIFICATION	1.0231624844572194E-5	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999897683751553	WITHOUT_CLASSIFICATION	1.0231624844572194E-5	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999999803314519	WITHOUT_CLASSIFICATION	1.9668548135464722E-8	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999997620413791	WITHOUT_CLASSIFICATION	2.37958620976098E-7	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999277069389	WITHOUT_CLASSIFICATION	7.229306112003544E-8	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999993912076213	WITHOUT_CLASSIFICATION	6.087923788382495E-7	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999999244562844	WITHOUT_CLASSIFICATION	7.554371561398021E-8	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999997859092087	WITHOUT_CLASSIFICATION	2.140907911754528E-7	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999772049185326	WITHOUT_CLASSIFICATION	2.2795081467405424E-5	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999155265842	WITHOUT_CLASSIFICATION	8.447341579737613E-8	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999995726743893	WITHOUT_CLASSIFICATION	4.273256105741106E-7	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999459250367	WITHOUT_CLASSIFICATION	5.407496327504553E-8	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999999607714065	WITHOUT_CLASSIFICATION	3.92285934727051E-8	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999998223478598	WITHOUT_CLASSIFICATION	1.7765214031801803E-7	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999938177254067	WITHOUT_CLASSIFICATION	6.18227459319818E-6	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999799260280418	WITHOUT_CLASSIFICATION	2.007397195834009E-5	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9999913562255704	WITHOUT_CLASSIFICATION	8.643774429472695E-6	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999895232413515	WITHOUT_CLASSIFICATION	1.0476758648507131E-5	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9999956443003676	WITHOUT_CLASSIFICATION	4.3556996323512815E-6	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9999977838134331	WITHOUT_CLASSIFICATION	2.2161865669642414E-6	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9999837571267215	WITHOUT_CLASSIFICATION	1.6242873278496067E-5	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9999773093395165	WITHOUT_CLASSIFICATION	2.269066048354478E-5	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.999993589203218	WITHOUT_CLASSIFICATION	6.410796781990332E-6	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9999969772251273	WITHOUT_CLASSIFICATION	3.0227748728705614E-6	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999989569926924	WITHOUT_CLASSIFICATION	1.0430073076764097E-6	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9999943088691561	WITHOUT_CLASSIFICATION	5.691130843855191E-6	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999999713573239	WITHOUT_CLASSIFICATION	2.8642676064946496E-8	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9999773655990857	WITHOUT_CLASSIFICATION	2.263440091424885E-5	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999999999626156	WITHOUT_CLASSIFICATION	3.7384560076994695E-11	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999999133752925	WITHOUT_CLASSIFICATION	8.662470741330273E-8	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.9999998650979215	WITHOUT_CLASSIFICATION	1.3490207851734516E-7	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999994410450617	WITHOUT_CLASSIFICATION	5.589549384275375E-7	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999992300181475	WITHOUT_CLASSIFICATION	7.699818525817441E-7	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9999997106403707	WITHOUT_CLASSIFICATION	2.893596293003258E-7	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999990812409395	WITHOUT_CLASSIFICATION	9.187590606009564E-7	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999920108334148	WITHOUT_CLASSIFICATION	7.989166585136215E-6	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999996957851746	WITHOUT_CLASSIFICATION	3.0421482543365093E-7	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999994899377803	WITHOUT_CLASSIFICATION	5.100622195894183E-7	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999998860473499	WITHOUT_CLASSIFICATION	1.1395265011785577E-7	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999992648816735	WITHOUT_CLASSIFICATION	7.35118326607226E-7	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999975424283643	WITHOUT_CLASSIFICATION	2.457571635813752E-6	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999975293692228	WITHOUT_CLASSIFICATION	2.470630777294202E-6	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999998197496267	WITHOUT_CLASSIFICATION	1.8025037343301986E-7	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999616291866739	WITHOUT_CLASSIFICATION	3.8370813326125754E-5	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.99999500019107	WITHOUT_CLASSIFICATION	4.999808930062049E-6	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999999903466195	WITHOUT_CLASSIFICATION	9.653380456377649E-9	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999975195609184	WITHOUT_CLASSIFICATION	2.480439081455565E-6	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999994309679145	WITHOUT_CLASSIFICATION	5.690320854920181E-7	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999994474587075	WITHOUT_CLASSIFICATION	5.525412925919327E-7	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999999931771202	WITHOUT_CLASSIFICATION	6.822879865861294E-9	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999998582959858	WITHOUT_CLASSIFICATION	1.41704014176909E-7	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999996438588248	WITHOUT_CLASSIFICATION	3.561411751883595E-7	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.999840577656032	WITHOUT_CLASSIFICATION	1.5942234396798056E-4	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999994025963365	WITHOUT_CLASSIFICATION	5.974036636303326E-7	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999999862719098	WITHOUT_CLASSIFICATION	1.37280902352903E-8	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999999767602324	WITHOUT_CLASSIFICATION	2.323976754450499E-8	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999961117504784	WITHOUT_CLASSIFICATION	3.888249521625935E-6	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999993967677292	WITHOUT_CLASSIFICATION	6.032322707634576E-7	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999858554079754	WITHOUT_CLASSIFICATION	1.4144592024738834E-5	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9998434838441373	WITHOUT_CLASSIFICATION	1.56516155862644E-4	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9991287270758463	WITHOUT_CLASSIFICATION	8.712729241536509E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.999837348672358	WITHOUT_CLASSIFICATION	1.6265132764204724E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.999837348672358	WITHOUT_CLASSIFICATION	1.6265132764204724E-4	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999998776206139	WITHOUT_CLASSIFICATION	1.223793861763508E-7	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999856011299713	WITHOUT_CLASSIFICATION	1.439887002874714E-5	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999549298791	WITHOUT_CLASSIFICATION	4.507012081663001E-8	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999997226044035	WITHOUT_CLASSIFICATION	2.7739559639081205E-7	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999970483470921	WITHOUT_CLASSIFICATION	2.9516529078406683E-6	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999989162531145	WITHOUT_CLASSIFICATION	1.0837468854897306E-6	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.999976173799875	WITHOUT_CLASSIFICATION	2.3826200124906063E-5	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9998420622786103	WITHOUT_CLASSIFICATION	1.579377213896772E-4	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.999999168034834	WITHOUT_CLASSIFICATION	8.319651658662648E-7	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999987183849307	WITHOUT_CLASSIFICATION	1.2816150691951147E-6	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999996969028585	WITHOUT_CLASSIFICATION	3.0309714145471504E-7	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9999980777410545	WITHOUT_CLASSIFICATION	1.9222589454418855E-6	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.999996695891556	WITHOUT_CLASSIFICATION	3.3041084439531595E-6	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9991357283778235	WITHOUT_CLASSIFICATION	8.642716221765824E-4	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999957308073018	WITHOUT_CLASSIFICATION	4.2691926982119845E-6	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999989663282912	WITHOUT_CLASSIFICATION	1.0336717087482448E-6	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9999958833688815	WITHOUT_CLASSIFICATION	4.11663111864225E-6	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.999999968543493	WITHOUT_CLASSIFICATION	3.1456507062801187E-8	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999985038544184	WITHOUT_CLASSIFICATION	1.4961455816120288E-6	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999923857336053	WITHOUT_CLASSIFICATION	7.614266394734911E-6	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999998673956387	WITHOUT_CLASSIFICATION	1.326043612103887E-7	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999980702808033	WITHOUT_CLASSIFICATION	1.929719196726919E-6	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9990100414962992	WITHOUT_CLASSIFICATION	9.899585037007402E-4	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999958019573902	WITHOUT_CLASSIFICATION	4.19804260969801E-6	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999999480217834	WITHOUT_CLASSIFICATION	5.197821667235994E-8	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999826986121465	WITHOUT_CLASSIFICATION	1.7301387853486808E-5	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999992419769222	WITHOUT_CLASSIFICATION	7.580230777094326E-7	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999999990865318	WITHOUT_CLASSIFICATION	9.134680589553993E-10	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999997069807096	WITHOUT_CLASSIFICATION	2.9301929036778523E-7	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999999998574294	WITHOUT_CLASSIFICATION	1.4257060313977432E-10	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999980421655256	WITHOUT_CLASSIFICATION	1.9578344744807357E-6	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999987596649744	WITHOUT_CLASSIFICATION	1.24033502554461E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999914829011073	WITHOUT_CLASSIFICATION	8.517098892741379E-6	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999717995616919	WITHOUT_CLASSIFICATION	2.8200438308063344E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999914829011073	WITHOUT_CLASSIFICATION	8.517098892741379E-6	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999995381506037	WITHOUT_CLASSIFICATION	4.618493962308752E-7	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999996049242172	WITHOUT_CLASSIFICATION	3.95075782679051E-7	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999996049242172	WITHOUT_CLASSIFICATION	3.95075782679051E-7	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999996049242172	WITHOUT_CLASSIFICATION	3.95075782679051E-7	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999995491268635	WITHOUT_CLASSIFICATION	4.508731364624769E-7	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999995491268635	WITHOUT_CLASSIFICATION	4.508731364624769E-7	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999934172053574	WITHOUT_CLASSIFICATION	6.582794642632112E-6	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999999905211335	WITHOUT_CLASSIFICATION	9.478866511461804E-9	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999969716876141	WITHOUT_CLASSIFICATION	3.028312385785483E-6	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999538387218342	WITHOUT_CLASSIFICATION	4.616127816578183E-5	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999997166678518	WITHOUT_CLASSIFICATION	2.8333214819873923E-7	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999831681830904	WITHOUT_CLASSIFICATION	1.6831816909519148E-5	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999898574961174	WITHOUT_CLASSIFICATION	1.0142503882646418E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999986064969546	WITHOUT_CLASSIFICATION	1.393503045406652E-6	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999983194915487	WITHOUT_CLASSIFICATION	1.68050845136517E-6	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999951974046815	WITHOUT_CLASSIFICATION	4.802595318571689E-6	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999936449649826	WITHOUT_CLASSIFICATION	6.355035017460204E-6	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999959611647158	WITHOUT_CLASSIFICATION	4.038835284178618E-6	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999967437831572	WITHOUT_CLASSIFICATION	3.256216842899884E-6	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9999991344300395	WITHOUT_CLASSIFICATION	8.655699604898324E-7	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999997203192179	WITHOUT_CLASSIFICATION	2.7968078199257364E-7	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.999999871393963	WITHOUT_CLASSIFICATION	1.2860603706506633E-7	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999999694735267	WITHOUT_CLASSIFICATION	3.052647342781345E-8	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999989804573757	WITHOUT_CLASSIFICATION	1.0195426243530228E-6	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999989804573757	WITHOUT_CLASSIFICATION	1.0195426243530228E-6	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9999989853820164	WITHOUT_CLASSIFICATION	1.0146179836818784E-6	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999982652450227	WITHOUT_CLASSIFICATION	1.7347549772945806E-6	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999982652450227	WITHOUT_CLASSIFICATION	1.7347549772945806E-6	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999990069739189	WITHOUT_CLASSIFICATION	9.93026081128729E-7	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9999996788394059	WITHOUT_CLASSIFICATION	3.2116059411598653E-7	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.999924070041347	WITHOUT_CLASSIFICATION	7.592995865305655E-5	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9999991263267588	WITHOUT_CLASSIFICATION	8.736732412446794E-7	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9999980852676398	WITHOUT_CLASSIFICATION	1.9147323602576942E-6	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999998565910557	WITHOUT_CLASSIFICATION	1.4340894441309365E-7	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.999999752694773	WITHOUT_CLASSIFICATION	2.473052269369912E-7	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999812285954395	WITHOUT_CLASSIFICATION	1.8771404560534596E-5	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999979635368712	WITHOUT_CLASSIFICATION	2.036463128692668E-6	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999891828436639	WITHOUT_CLASSIFICATION	1.0817156336054027E-5	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999758845170937	WITHOUT_CLASSIFICATION	2.411548290632414E-5	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.999971203565113	WITHOUT_CLASSIFICATION	2.8796434886957344E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999913896759212	WITHOUT_CLASSIFICATION	8.610324078793963E-6	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999999679076461	WITHOUT_CLASSIFICATION	3.20923538239994E-8	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999986064969546	WITHOUT_CLASSIFICATION	1.393503045406652E-6	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999792551827789	WITHOUT_CLASSIFICATION	2.0744817221173538E-5	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999996853089543	WITHOUT_CLASSIFICATION	3.14691045581293E-7	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999826466627544	WITHOUT_CLASSIFICATION	1.7353337245611653E-5	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999826466627544	WITHOUT_CLASSIFICATION	1.7353337245611653E-5	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999997198065015	WITHOUT_CLASSIFICATION	2.8019349858312555E-7	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999995779912032	WITHOUT_CLASSIFICATION	4.22008796756137E-7	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.999999804462558	WITHOUT_CLASSIFICATION	1.9553744195715647E-7	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9999966500208408	WITHOUT_CLASSIFICATION	3.3499791591796286E-6	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999999992998613	WITHOUT_CLASSIFICATION	7.001387859859671E-10	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999994378273085	WITHOUT_CLASSIFICATION	5.621726914834435E-7	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999932035660383	WITHOUT_CLASSIFICATION	6.796433961762709E-6	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.999999048020086	WITHOUT_CLASSIFICATION	9.519799141100235E-7	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999911502388585	WITHOUT_CLASSIFICATION	8.849761141411423E-6	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999997574305767	WITHOUT_CLASSIFICATION	2.4256942329486763E-7	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9998361195792388	WITHOUT_CLASSIFICATION	1.638804207611661E-4	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999882995854592	WITHOUT_CLASSIFICATION	1.1700414540800158E-5	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.938958167781316	WITHOUT_CLASSIFICATION	0.061041832218683846	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999988440090649	WITHOUT_CLASSIFICATION	1.155990935040105E-6	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999999929905258	WITHOUT_CLASSIFICATION	7.0094741227783445E-9	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999999158763465	WITHOUT_CLASSIFICATION	8.41236534799384E-8	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999745932600925	WITHOUT_CLASSIFICATION	2.540673990744177E-5	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.999912003626366	WITHOUT_CLASSIFICATION	8.799637363388752E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999985691234986	WITHOUT_CLASSIFICATION	1.4308765015041336E-6	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999599238972	WITHOUT_CLASSIFICATION	4.0076102722272605E-8	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999990633307942	WITHOUT_CLASSIFICATION	9.366692058768886E-7	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999906804715575	WITHOUT_CLASSIFICATION	9.319528442476831E-6	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999999514158694	WITHOUT_CLASSIFICATION	4.858413053362126E-8	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999998903628703	WITHOUT_CLASSIFICATION	1.096371298141816E-7	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999856152332876	WITHOUT_CLASSIFICATION	1.4384766712489507E-5	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999957129144796	WITHOUT_CLASSIFICATION	4.287085520341723E-6	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999994522674626	WITHOUT_CLASSIFICATION	5.47732537453449E-7	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999982412994304	WITHOUT_CLASSIFICATION	1.7587005695838253E-6	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.999999991517155	WITHOUT_CLASSIFICATION	8.482844908306782E-9	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999999983927976	WITHOUT_CLASSIFICATION	1.6072023701760369E-9	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999998660223055	WITHOUT_CLASSIFICATION	1.3397769439105736E-7	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999453543598696	WITHOUT_CLASSIFICATION	5.464564013046045E-5	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999991516010842	WITHOUT_CLASSIFICATION	8.483989158250973E-7	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999999520615439	WITHOUT_CLASSIFICATION	4.7938455986979974E-8	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999997245260726	WITHOUT_CLASSIFICATION	2.754739274614325E-7	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.9999984294995139	WITHOUT_CLASSIFICATION	1.5705004860524137E-6	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999982412994304	WITHOUT_CLASSIFICATION	1.7587005695838253E-6	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999968960013	WITHOUT_CLASSIFICATION	3.1039986665088955E-9	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999997245260726	WITHOUT_CLASSIFICATION	2.754739274614325E-7	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999908580745694	WITHOUT_CLASSIFICATION	9.141925430634889E-6	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999993360923242	WITHOUT_CLASSIFICATION	6.639076759227654E-7	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999927909831754	WITHOUT_CLASSIFICATION	7.209016824569597E-6	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999986415104477	WITHOUT_CLASSIFICATION	1.358489552389548E-6	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999990959093515	WITHOUT_CLASSIFICATION	9.040906485033065E-7	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999919080227431	WITHOUT_CLASSIFICATION	8.09197725697432E-6	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999919080227431	WITHOUT_CLASSIFICATION	8.09197725697432E-6	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9973618015785816	WITHOUT_CLASSIFICATION	0.0026381984214183087	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.99998171365287	WITHOUT_CLASSIFICATION	1.828634712987338E-5	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.999946810653168	WITHOUT_CLASSIFICATION	5.3189346831966184E-5	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.999946810653168	WITHOUT_CLASSIFICATION	5.3189346831966184E-5	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999962139388187	WITHOUT_CLASSIFICATION	3.786061181291182E-6	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9997654283022815	WITHOUT_CLASSIFICATION	2.3457169771847042E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999587628345399	WITHOUT_CLASSIFICATION	4.123716546008244E-5	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999587628345399	WITHOUT_CLASSIFICATION	4.123716546008244E-5	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999903284235473	WITHOUT_CLASSIFICATION	9.67157645275976E-6	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999974149356293	WITHOUT_CLASSIFICATION	2.585064370691858E-6	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999999350539623	WITHOUT_CLASSIFICATION	6.494603759166564E-8	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999994662444273	WITHOUT_CLASSIFICATION	5.337555727673354E-7	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999987991016658	WITHOUT_CLASSIFICATION	1.200898334210207E-6	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999828465965652	WITHOUT_CLASSIFICATION	1.7153403434785992E-5	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999998191379807	WITHOUT_CLASSIFICATION	1.8086201923170574E-7	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999989182169946	WITHOUT_CLASSIFICATION	1.081783005399147E-6	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.999993083532563	WITHOUT_CLASSIFICATION	6.916467436920684E-6	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999940348086231	WITHOUT_CLASSIFICATION	5.9651913768974095E-6	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9999876241710991	WITHOUT_CLASSIFICATION	1.2375828900902336E-5	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.999991810197685	WITHOUT_CLASSIFICATION	8.189802314922385E-6	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999998507963805	WITHOUT_CLASSIFICATION	1.492036195392395E-7	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999846442863085	WITHOUT_CLASSIFICATION	1.535571369154213E-5	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999254048506552	WITHOUT_CLASSIFICATION	7.459514934479987E-5	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999997584572654	WITHOUT_CLASSIFICATION	2.415427345844491E-7	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999995510619395	WITHOUT_CLASSIFICATION	4.4893806055219354E-7	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999974848611145	WITHOUT_CLASSIFICATION	2.5151388854485287E-6	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999997507531642	WITHOUT_CLASSIFICATION	2.492468358265275E-7	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9211730300354115	WITHOUT_CLASSIFICATION	0.07882696996458849	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999988384648483	WITHOUT_CLASSIFICATION	1.1615351517282776E-6	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999988800320192	WITHOUT_CLASSIFICATION	1.1199679808387563E-6	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999992580633379	WITHOUT_CLASSIFICATION	7.419366622279435E-7	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999964848587702	WITHOUT_CLASSIFICATION	3.5151412298554994E-6	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999975951358815	WITHOUT_CLASSIFICATION	2.4048641185309636E-6	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999992786798064	WITHOUT_CLASSIFICATION	7.213201935759202E-7	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999996499544548	WITHOUT_CLASSIFICATION	3.500455451818225E-7	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9999967595569601	WITHOUT_CLASSIFICATION	3.240443039977136E-6	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999995491317271	WITHOUT_CLASSIFICATION	4.5086827293667454E-7	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999995491317271	WITHOUT_CLASSIFICATION	4.5086827293667454E-7	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999999996982424	WITHOUT_CLASSIFICATION	3.0175756777225897E-10	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999999934760944	WITHOUT_CLASSIFICATION	6.523905610721094E-9	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999998794756958	WITHOUT_CLASSIFICATION	1.205243041981199E-7	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999983058456882	WITHOUT_CLASSIFICATION	1.6941543118321955E-6	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999964799981202	WITHOUT_CLASSIFICATION	3.5200018798169712E-6	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9999926024897784	WITHOUT_CLASSIFICATION	7.3975102216395315E-6	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999849296061354	WITHOUT_CLASSIFICATION	1.5070393864669769E-5	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998470728095	WITHOUT_CLASSIFICATION	1.5292719037944366E-7	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999999808057041	WITHOUT_CLASSIFICATION	1.919429591645144E-8	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999999722764377	WITHOUT_CLASSIFICATION	2.772356231349013E-8	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999935576956916	WITHOUT_CLASSIFICATION	6.442304308260042E-6	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999993194724759	WITHOUT_CLASSIFICATION	6.805275241126707E-7	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999959072794137	WITHOUT_CLASSIFICATION	4.092720586260707E-6	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999790527155873	WITHOUT_CLASSIFICATION	2.0947284412693423E-5	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999999620371284	WITHOUT_CLASSIFICATION	3.796287156032607E-8	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999978888608231	WITHOUT_CLASSIFICATION	2.111139176944448E-6	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.99999836153662	WITHOUT_CLASSIFICATION	1.6384633799763026E-6	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999966645933307	WITHOUT_CLASSIFICATION	3.3354066693447782E-6	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9999974629234668	WITHOUT_CLASSIFICATION	2.537076533269007E-6	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999997264393526	WITHOUT_CLASSIFICATION	2.7356064733976396E-7	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999990681022273	WITHOUT_CLASSIFICATION	9.31897772702918E-7	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999850413198762	WITHOUT_CLASSIFICATION	1.4958680123829264E-5	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.999999871626861	WITHOUT_CLASSIFICATION	1.283731391086226E-7	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999997331275974	WITHOUT_CLASSIFICATION	2.66872402586419E-7	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999889739499885	WITHOUT_CLASSIFICATION	1.1026050011482373E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998629483841317	WITHOUT_CLASSIFICATION	1.370516158682713E-4	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999999786227397	WITHOUT_CLASSIFICATION	2.1377260315800988E-8	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999986578979807	WITHOUT_CLASSIFICATION	1.342102019365246E-6	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9999981947425853	WITHOUT_CLASSIFICATION	1.8052574146637803E-6	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9999994286987998	WITHOUT_CLASSIFICATION	5.713012002414806E-7	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999999497011127	WITHOUT_CLASSIFICATION	5.02988873829743E-8	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999979249989018	WITHOUT_CLASSIFICATION	2.0750010982349174E-6	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999974143743933	WITHOUT_CLASSIFICATION	2.5856256067043187E-6	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9999979743257618	WITHOUT_CLASSIFICATION	2.025674238235902E-6	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.999999531650479	WITHOUT_CLASSIFICATION	4.683495211175359E-7	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999433049448644	WITHOUT_CLASSIFICATION	5.669505513557954E-5	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999872777205201	WITHOUT_CLASSIFICATION	1.2722279479939005E-5	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999851919043322	WITHOUT_CLASSIFICATION	1.480809566769816E-5	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999991661529651	WITHOUT_CLASSIFICATION	8.338470349044129E-7	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.999999997190932	WITHOUT_CLASSIFICATION	2.809068018065542E-9	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999999413262246	WITHOUT_CLASSIFICATION	5.8673775427030315E-8	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999987612062111	WITHOUT_CLASSIFICATION	1.2387937888821372E-6	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999889377319436	WITHOUT_CLASSIFICATION	1.1062268056325856E-5	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999889377319436	WITHOUT_CLASSIFICATION	1.1062268056325856E-5	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999794437529315	WITHOUT_CLASSIFICATION	2.0556247068627667E-5	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999999740151598	WITHOUT_CLASSIFICATION	2.5984840146186153E-8	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9980753636718553	WITHOUT_CLASSIFICATION	0.0019246363281446449	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999995151748589	WITHOUT_CLASSIFICATION	4.848251411982629E-7	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9997376805291626	WITHOUT_CLASSIFICATION	2.623194708374452E-4	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999761795750517	WITHOUT_CLASSIFICATION	2.3820424948305523E-5	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9994157675660122	WITHOUT_CLASSIFICATION	5.842324339877352E-4	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999198008467719	WITHOUT_CLASSIFICATION	8.019915322805169E-5	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999954364998543	WITHOUT_CLASSIFICATION	4.5635001457186876E-6	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9999957678430147	WITHOUT_CLASSIFICATION	4.232156985283302E-6	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9999985991758356	WITHOUT_CLASSIFICATION	1.4008241644310351E-6	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.9999709094674559	WITHOUT_CLASSIFICATION	2.9090532544048E-5	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.999992202301008	WITHOUT_CLASSIFICATION	7.79769899200477E-6	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999995428730636	WITHOUT_CLASSIFICATION	4.571269363961711E-7	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999946931320239	WITHOUT_CLASSIFICATION	5.3068679760937935E-6	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9999880505955632	WITHOUT_CLASSIFICATION	1.1949404436889952E-5	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999991219728964	WITHOUT_CLASSIFICATION	8.780271035352629E-7	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9999761036474326	WITHOUT_CLASSIFICATION	2.3896352567406872E-5	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999926564219958	WITHOUT_CLASSIFICATION	7.3435780042958785E-6	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9999162539437517	WITHOUT_CLASSIFICATION	8.374605624832202E-5	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999771757940527	WITHOUT_CLASSIFICATION	2.2824205947414017E-5	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999663613298321	WITHOUT_CLASSIFICATION	3.363867016785105E-5	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999919191632142	WITHOUT_CLASSIFICATION	8.080836785865495E-6	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999941549344701	WITHOUT_CLASSIFICATION	5.845065529859804E-6	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999996181341346	WITHOUT_CLASSIFICATION	3.8186586534473653E-7	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999972113613449	WITHOUT_CLASSIFICATION	2.7886386551239163E-6	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999909067228755	WITHOUT_CLASSIFICATION	9.093277124560844E-6	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999962558165026	WITHOUT_CLASSIFICATION	3.74418349734507E-6	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999995127394494	WITHOUT_CLASSIFICATION	4.872605505347633E-7	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9999725633474765	WITHOUT_CLASSIFICATION	2.7436652523488824E-5	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999990923114607	WITHOUT_CLASSIFICATION	9.076885393861414E-7	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.999999989267909	WITHOUT_CLASSIFICATION	1.0732091040779808E-8	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.999989404302158	WITHOUT_CLASSIFICATION	1.0595697842057118E-5	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9983631152593583	WITHOUT_CLASSIFICATION	0.0016368847406418125	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999851919043322	WITHOUT_CLASSIFICATION	1.480809566769816E-5	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999843630492153	WITHOUT_CLASSIFICATION	1.5636950784635953E-5	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999999346000935	WITHOUT_CLASSIFICATION	6.539990642317372E-8	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999999346000935	WITHOUT_CLASSIFICATION	6.539990642317372E-8	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999999651865951	WITHOUT_CLASSIFICATION	3.481340500991317E-8	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999999588200026	WITHOUT_CLASSIFICATION	4.117999751652232E-8	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999649474990856	WITHOUT_CLASSIFICATION	3.5052500914451834E-5	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.9999310133970168	WITHOUT_CLASSIFICATION	6.898660298317012E-5	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9950022202747864	WITHOUT_CLASSIFICATION	0.004997779725213544	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9953000112012264	WITHOUT_CLASSIFICATION	0.004699988798773569	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9960010420629258	WITHOUT_CLASSIFICATION	0.003998957937074186	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9965890788204931	WITHOUT_CLASSIFICATION	0.0034109211795067974	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9781844567439105	WITHOUT_CLASSIFICATION	0.021815543256089507	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9854178024020473	WITHOUT_CLASSIFICATION	0.01458219759795266	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9840927879689619	WITHOUT_CLASSIFICATION	0.015907212031037996	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9620251871868817	WITHOUT_CLASSIFICATION	0.037974812813118215	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9990564476544311	WITHOUT_CLASSIFICATION	9.435523455689719E-4	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999985564084374	WITHOUT_CLASSIFICATION	1.4435915626150805E-6	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999999996520547	WITHOUT_CLASSIFICATION	3.479453451900892E-10	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999972119653799	WITHOUT_CLASSIFICATION	2.7880346201502328E-6	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9988951743427567	WITHOUT_CLASSIFICATION	0.001104825657243359	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9888829021743504	WITHOUT_CLASSIFICATION	0.01111709782564968	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.994093394533628	WITHOUT_CLASSIFICATION	0.00590660546637201	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.99607301493295	WITHOUT_CLASSIFICATION	0.003926985067050101	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9966035774969575	WITHOUT_CLASSIFICATION	0.003396422503042564	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9951809974586149	WITHOUT_CLASSIFICATION	0.004819002541385081	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999995648247755	WITHOUT_CLASSIFICATION	4.3517522452985886E-7	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999997476200029	WITHOUT_CLASSIFICATION	2.523799970572964E-7	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999999954808935	WITHOUT_CLASSIFICATION	4.5191065267390276E-9	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9983368800350805	WITHOUT_CLASSIFICATION	0.0016631199649195464	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999980764652022	WITHOUT_CLASSIFICATION	1.923534797739595E-6	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999992394301557	WITHOUT_CLASSIFICATION	7.605698443198766E-7	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999945953290456	WITHOUT_CLASSIFICATION	5.404670954496267E-6	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999975105303976	WITHOUT_CLASSIFICATION	2.489469602315085E-6	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9999999087578322	WITHOUT_CLASSIFICATION	9.124216786698236E-8	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999993502604302	WITHOUT_CLASSIFICATION	6.497395698162443E-7	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9999997494410131	WITHOUT_CLASSIFICATION	2.505589869260127E-7	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999999974878776	WITHOUT_CLASSIFICATION	2.512122276378245E-9	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999967384947952	WITHOUT_CLASSIFICATION	3.2615052048927027E-6	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999945989671724	WITHOUT_CLASSIFICATION	5.401032827606499E-6	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999998936360768	WITHOUT_CLASSIFICATION	1.0636392325660848E-7	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9983368800350805	WITHOUT_CLASSIFICATION	0.0016631199649195464	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999980764652022	WITHOUT_CLASSIFICATION	1.923534797739595E-6	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999992394301557	WITHOUT_CLASSIFICATION	7.605698443198766E-7	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999975105303976	WITHOUT_CLASSIFICATION	2.489469602315085E-6	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9998610850630665	WITHOUT_CLASSIFICATION	1.3891493693358927E-4	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999749439048	WITHOUT_CLASSIFICATION	2.5056095174532237E-8	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999699630012556	WITHOUT_CLASSIFICATION	3.003699874441503E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999943872722252	WITHOUT_CLASSIFICATION	5.612727774799176E-6	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999898691324266	WITHOUT_CLASSIFICATION	1.0130867573325975E-5	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999886407543	WITHOUT_CLASSIFICATION	1.1359245733377987E-8	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999994542136638	WITHOUT_CLASSIFICATION	5.457863362622723E-7	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999986668026918	WITHOUT_CLASSIFICATION	1.3331973081434723E-6	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999992528437875	WITHOUT_CLASSIFICATION	7.471562123345185E-7	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999864933828123	WITHOUT_CLASSIFICATION	1.3506617187834959E-5	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999985984093326	WITHOUT_CLASSIFICATION	1.4015906674723631E-6	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999989085139894	WITHOUT_CLASSIFICATION	1.091486010482402E-6	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.999999947227288	WITHOUT_CLASSIFICATION	5.277271192635095E-8	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999994048019646	WITHOUT_CLASSIFICATION	5.951980354048465E-7	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9999958895135703	WITHOUT_CLASSIFICATION	4.110486429613208E-6	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9999743111112698	WITHOUT_CLASSIFICATION	2.5688888730171336E-5	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999998931034033	WITHOUT_CLASSIFICATION	1.0689659666852943E-7	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999702124723425	WITHOUT_CLASSIFICATION	2.9787527657387833E-5	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999994516302855	WITHOUT_CLASSIFICATION	5.483697144516671E-7	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999998936360768	WITHOUT_CLASSIFICATION	1.0636392325660848E-7	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999749439048	WITHOUT_CLASSIFICATION	2.5056095174532237E-8	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999699630012556	WITHOUT_CLASSIFICATION	3.003699874441503E-5	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999898691324266	WITHOUT_CLASSIFICATION	1.0130867573325975E-5	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999886407543	WITHOUT_CLASSIFICATION	1.1359245733377987E-8	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999994542136638	WITHOUT_CLASSIFICATION	5.457863362622723E-7	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999986668026918	WITHOUT_CLASSIFICATION	1.3331973081434723E-6	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999995007408679	WITHOUT_CLASSIFICATION	4.99259132145201E-7	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999926653116	WITHOUT_CLASSIFICATION	7.334688400016868E-6	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999998045363061	WITHOUT_CLASSIFICATION	1.9546369396828604E-7	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999851204286	WITHOUT_CLASSIFICATION	1.487957143062982E-8	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.999998556521535	WITHOUT_CLASSIFICATION	1.4434784649584282E-6	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.999998556521535	WITHOUT_CLASSIFICATION	1.4434784649584282E-6	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9999999512568366	WITHOUT_CLASSIFICATION	4.874316345213595E-8	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999648421964344	WITHOUT_CLASSIFICATION	3.515780356559231E-5	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999995553288569	WITHOUT_CLASSIFICATION	4.446711431326057E-7	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999985897675343	WITHOUT_CLASSIFICATION	1.4102324657212776E-6	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999988532949047	WITHOUT_CLASSIFICATION	1.146705095323354E-6	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999856202097493	WITHOUT_CLASSIFICATION	1.4379790250613146E-5	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9999995208633636	WITHOUT_CLASSIFICATION	4.791366362921369E-7	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999996260584911	WITHOUT_CLASSIFICATION	3.739415088281619E-7	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999999661393882	WITHOUT_CLASSIFICATION	3.386061171362427E-8	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999503660781697	WITHOUT_CLASSIFICATION	4.9633921830311456E-5	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999687009668226	WITHOUT_CLASSIFICATION	3.1299033177526766E-5	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.999823198014777	WITHOUT_CLASSIFICATION	1.7680198522299458E-4	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.999995443464211	WITHOUT_CLASSIFICATION	4.556535788983841E-6	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999986434408346	WITHOUT_CLASSIFICATION	1.356559165371447E-6	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999956275862396	WITHOUT_CLASSIFICATION	4.372413760430041E-6	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999972214928372	WITHOUT_CLASSIFICATION	2.778507162790927E-6	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.999995266439423	WITHOUT_CLASSIFICATION	4.7335605770095345E-6	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999981601452955	WITHOUT_CLASSIFICATION	1.8398547045091316E-6	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999982474351824	WITHOUT_CLASSIFICATION	1.7525648175333914E-6	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.999973927666973	WITHOUT_CLASSIFICATION	2.607233302708908E-5	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.8106495003653096	WITHOUT_CLASSIFICATION	0.18935049963469044	IMPLEMENTATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999997440549625	WITHOUT_CLASSIFICATION	2.559450375066715E-7	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999999188123968	WITHOUT_CLASSIFICATION	8.118760319667244E-8	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9394757726187525	IMPLEMENTATION	0.06052422738124755	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999893246790087	WITHOUT_CLASSIFICATION	1.067532099131961E-5	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999844975353093	WITHOUT_CLASSIFICATION	1.550246469075512E-5	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999955484865	WITHOUT_CLASSIFICATION	4.451513473794918E-9	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999999084043242	WITHOUT_CLASSIFICATION	9.159567574092221E-8	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9999966652013795	WITHOUT_CLASSIFICATION	3.3347986204676447E-6	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999893246790087	WITHOUT_CLASSIFICATION	1.067532099131961E-5	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999844975353093	WITHOUT_CLASSIFICATION	1.550246469075512E-5	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999986434408346	WITHOUT_CLASSIFICATION	1.356559165371447E-6	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9998865802767658	WITHOUT_CLASSIFICATION	1.1341972323418469E-4	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999967324970406	WITHOUT_CLASSIFICATION	3.2675029594499984E-6	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999959867007481	WITHOUT_CLASSIFICATION	4.013299251866112E-6	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999993063006561	WITHOUT_CLASSIFICATION	6.936993437447604E-7	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999946802563054	WITHOUT_CLASSIFICATION	5.319743694520494E-6	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999816001367796	WITHOUT_CLASSIFICATION	1.8399863220424673E-5	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999243799401328	WITHOUT_CLASSIFICATION	7.562005986721248E-5	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999699604041166	WITHOUT_CLASSIFICATION	3.0039595883467137E-5	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9998720459609902	WITHOUT_CLASSIFICATION	1.279540390098107E-4	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.999999996737132	WITHOUT_CLASSIFICATION	3.262867890317085E-9	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999986334914084	WITHOUT_CLASSIFICATION	1.366508591555582E-6	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9998721547705953	WITHOUT_CLASSIFICATION	1.2784522940465022E-4	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999992432951927	WITHOUT_CLASSIFICATION	7.567048073565631E-7	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999999985486047	WITHOUT_CLASSIFICATION	1.4513952706179542E-9	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999999975285593	WITHOUT_CLASSIFICATION	2.471440714544551E-9	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999997421742168	WITHOUT_CLASSIFICATION	2.5782578313701285E-7	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999948266269921	WITHOUT_CLASSIFICATION	5.173373007765363E-6	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999913119712793	WITHOUT_CLASSIFICATION	8.688028720624155E-6	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9969615918537791	WITHOUT_CLASSIFICATION	0.0030384081462208326	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999999143384963	WITHOUT_CLASSIFICATION	8.566150366897947E-8	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999998817332101	WITHOUT_CLASSIFICATION	1.1826678997006702E-7	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999934171535086	WITHOUT_CLASSIFICATION	6.5828464914504454E-6	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999105120922787	WITHOUT_CLASSIFICATION	8.948790772124742E-5	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999997657298656	WITHOUT_CLASSIFICATION	2.342701344035486E-7	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999999821787681	WITHOUT_CLASSIFICATION	1.7821231916969168E-8	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999998230671163	WITHOUT_CLASSIFICATION	1.7693288366684367E-7	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.999983166477181	WITHOUT_CLASSIFICATION	1.6833522819067657E-5	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999920455120564	WITHOUT_CLASSIFICATION	7.954487943486813E-6	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999962278341727	WITHOUT_CLASSIFICATION	3.7721658272410244E-6	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999999997712071	WITHOUT_CLASSIFICATION	2.2879285088663768E-10	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999952759482915	WITHOUT_CLASSIFICATION	4.7240517084661815E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983919606729352	WITHOUT_CLASSIFICATION	0.001608039327064815	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983919606729352	WITHOUT_CLASSIFICATION	0.001608039327064815	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.999995443464211	WITHOUT_CLASSIFICATION	4.556535788983841E-6	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.999999961918541	WITHOUT_CLASSIFICATION	3.8081459024547034E-8	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9998732794940811	WITHOUT_CLASSIFICATION	1.2672050591878975E-4	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999990121927833	WITHOUT_CLASSIFICATION	9.878072166741199E-7	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999926319219432	WITHOUT_CLASSIFICATION	7.36807805679408E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999926319219432	WITHOUT_CLASSIFICATION	7.36807805679408E-6	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999041633333	WITHOUT_CLASSIFICATION	9.58366667437943E-8	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999978491272353	WITHOUT_CLASSIFICATION	2.150872764710305E-6	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999946076450911	WITHOUT_CLASSIFICATION	5.3923549089105856E-6	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.99999609306392	WITHOUT_CLASSIFICATION	3.906936079964475E-6	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999999978125625	WITHOUT_CLASSIFICATION	2.1874373930115977E-9	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999999272618154	WITHOUT_CLASSIFICATION	7.273818464695277E-8	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999999906719452	WITHOUT_CLASSIFICATION	9.328054709602889E-9	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999398769301693	WITHOUT_CLASSIFICATION	6.012306983072035E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.999999907161315	WITHOUT_CLASSIFICATION	9.283868489945928E-8	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999803515293487	WITHOUT_CLASSIFICATION	1.9648470651311536E-5	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999985081128158	WITHOUT_CLASSIFICATION	1.4918871842684063E-6	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999992792424911	WITHOUT_CLASSIFICATION	7.207575088893424E-7	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999987703476461	WITHOUT_CLASSIFICATION	1.2296523539532754E-6	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999999406459832	WITHOUT_CLASSIFICATION	5.935401676973465E-8	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999997287480356	WITHOUT_CLASSIFICATION	2.7125196447646194E-7	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.9999976717806672	WITHOUT_CLASSIFICATION	2.32821933267769E-6	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999986835666408	WITHOUT_CLASSIFICATION	1.316433359214487E-6	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999986835666408	WITHOUT_CLASSIFICATION	1.316433359214487E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999932178284737	WITHOUT_CLASSIFICATION	6.7821715262163495E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999932178284737	WITHOUT_CLASSIFICATION	6.7821715262163495E-6	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999619562842	WITHOUT_CLASSIFICATION	3.804371592338182E-8	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999999822461957	WITHOUT_CLASSIFICATION	1.7753804229929898E-8	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999999938286508	WITHOUT_CLASSIFICATION	6.171349165656247E-9	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9877583998867714	WITHOUT_CLASSIFICATION	0.012241600113228552	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999998050155867	WITHOUT_CLASSIFICATION	1.9498441330704329E-7	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999963898517613	WITHOUT_CLASSIFICATION	3.6101482385631188E-6	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999940200424843	WITHOUT_CLASSIFICATION	5.979957515683E-6	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999992792424911	WITHOUT_CLASSIFICATION	7.207575088893424E-7	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999987703476461	WITHOUT_CLASSIFICATION	1.2296523539532754E-6	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999997287480356	WITHOUT_CLASSIFICATION	2.7125196447646194E-7	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999828339692528	WITHOUT_CLASSIFICATION	1.7166030747144222E-5	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.99999688081399	WITHOUT_CLASSIFICATION	3.119186009985027E-6	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999979940054057	WITHOUT_CLASSIFICATION	2.0059945943697045E-6	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999811063252374	WITHOUT_CLASSIFICATION	1.889367476265377E-5	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999999965623084	WITHOUT_CLASSIFICATION	3.437691603777532E-9	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.999999984252032	WITHOUT_CLASSIFICATION	1.5747967948820866E-8	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999997308391309	WITHOUT_CLASSIFICATION	2.6916086924859203E-7	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999971008449828	WITHOUT_CLASSIFICATION	2.8991550172449114E-6	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999979505501171	WITHOUT_CLASSIFICATION	2.0494498829317707E-6	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999971904101	WITHOUT_CLASSIFICATION	2.8095898769663266E-9	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999992242592612	WITHOUT_CLASSIFICATION	7.757407387523569E-7	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999997958429258	WITHOUT_CLASSIFICATION	2.041570741417099E-7	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999985094548813	WITHOUT_CLASSIFICATION	1.4905451186286386E-6	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999997206124359	WITHOUT_CLASSIFICATION	2.7938756411602506E-7	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9993918215223329	WITHOUT_CLASSIFICATION	6.0817847766727E-4	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999998333184252	WITHOUT_CLASSIFICATION	1.6668157477996226E-7	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999999184844063	WITHOUT_CLASSIFICATION	8.151559376650887E-8	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9972660914012387	WITHOUT_CLASSIFICATION	0.0027339085987613055	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.999991129154302	WITHOUT_CLASSIFICATION	8.870845698026868E-6	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999999939543011	WITHOUT_CLASSIFICATION	6.045698906606827E-9	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999999916993859	WITHOUT_CLASSIFICATION	8.30061410466576E-9	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999755605799742	WITHOUT_CLASSIFICATION	2.443942002588561E-5	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999992055347491	WITHOUT_CLASSIFICATION	7.944652509922333E-7	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999999349318968	WITHOUT_CLASSIFICATION	6.506810326949577E-8	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9998538491279058	WITHOUT_CLASSIFICATION	1.4615087209428684E-4	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999990677291745	WITHOUT_CLASSIFICATION	9.322708254734882E-7	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9998302284019055	WITHOUT_CLASSIFICATION	1.6977159809453314E-4	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999766859018091	WITHOUT_CLASSIFICATION	2.331409819086612E-5	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999999994628721	WITHOUT_CLASSIFICATION	5.371278779414464E-10	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999971492722813	WITHOUT_CLASSIFICATION	2.8507277185353105E-6	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999997540905223	WITHOUT_CLASSIFICATION	2.4590947768939685E-7	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.999998220051297	WITHOUT_CLASSIFICATION	1.77994870297571E-6	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999972479524688	WITHOUT_CLASSIFICATION	2.75204753108327E-6	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999988080683985	WITHOUT_CLASSIFICATION	1.1919316015238356E-6	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999961463541408	WITHOUT_CLASSIFICATION	3.853645859253478E-6	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999981119145035	WITHOUT_CLASSIFICATION	1.8880854964072857E-6	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.999986944284249	WITHOUT_CLASSIFICATION	1.3055715750945884E-5	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999919998571973	WITHOUT_CLASSIFICATION	8.000142802580194E-6	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999985280999889	WITHOUT_CLASSIFICATION	1.4719000111352222E-6	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999999526974028	WITHOUT_CLASSIFICATION	4.730259707074511E-8	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999994996498722	WITHOUT_CLASSIFICATION	5.003501278090728E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9998732794940811	WITHOUT_CLASSIFICATION	1.2672050591878975E-4	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.999986944284249	WITHOUT_CLASSIFICATION	1.3055715750945884E-5	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999984516719966	WITHOUT_CLASSIFICATION	1.548328003376111E-6	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999989575580489	WITHOUT_CLASSIFICATION	1.0424419511255246E-6	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.999965785920665	WITHOUT_CLASSIFICATION	3.4214079334987826E-5	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999566904782089	WITHOUT_CLASSIFICATION	4.3309521791127844E-5	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999566904782089	WITHOUT_CLASSIFICATION	4.3309521791127844E-5	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9988540495130184	WITHOUT_CLASSIFICATION	0.0011459504869816397	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999847728652349	WITHOUT_CLASSIFICATION	1.5227134765215897E-5	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999575497020099	WITHOUT_CLASSIFICATION	4.245029799010664E-5	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999999985058298	WITHOUT_CLASSIFICATION	1.4941702255290239E-9	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9967248713371298	WITHOUT_CLASSIFICATION	0.0032751286628700835	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999680681538898	WITHOUT_CLASSIFICATION	3.1931846110269985E-5	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999976970077296	WITHOUT_CLASSIFICATION	2.3029922703726677E-6	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999936795709167	WITHOUT_CLASSIFICATION	6.320429083345771E-6	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.999999945358191	WITHOUT_CLASSIFICATION	5.464180892661537E-8	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.999999945358191	WITHOUT_CLASSIFICATION	5.464180892661537E-8	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999983552926146	WITHOUT_CLASSIFICATION	1.6447073853892425E-6	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999689833616314	WITHOUT_CLASSIFICATION	3.101663836856535E-5	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999996044386148	WITHOUT_CLASSIFICATION	3.955613852677033E-7	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9999992769692995	WITHOUT_CLASSIFICATION	7.230307004179002E-7	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999996068855931	WITHOUT_CLASSIFICATION	3.9311440687427993E-7	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999998715054567	WITHOUT_CLASSIFICATION	1.2849454341020265E-7	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.999999972139377	WITHOUT_CLASSIFICATION	2.7860623035888256E-8	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999999943608066	WITHOUT_CLASSIFICATION	5.639193459059327E-9	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9999988684399452	WITHOUT_CLASSIFICATION	1.1315600547276894E-6	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999998800273756	WITHOUT_CLASSIFICATION	1.1997262435933877E-7	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999780428367397	WITHOUT_CLASSIFICATION	2.1957163260223615E-5	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999995529707747	WITHOUT_CLASSIFICATION	4.4702922520831917E-7	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999321055192196	WITHOUT_CLASSIFICATION	6.789448078039196E-5	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999992664934552	WITHOUT_CLASSIFICATION	7.335065447810664E-7	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999992664934552	WITHOUT_CLASSIFICATION	7.335065447810664E-7	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999999938276978	WITHOUT_CLASSIFICATION	6.172302245679182E-9	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999986668026918	WITHOUT_CLASSIFICATION	1.3331973081434723E-6	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999999764061744	WITHOUT_CLASSIFICATION	2.3593825661702833E-8	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.999999950045484	WITHOUT_CLASSIFICATION	4.995451594733311E-8	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999987619151	WITHOUT_CLASSIFICATION	1.2380848374423935E-9	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999991966655921	WITHOUT_CLASSIFICATION	8.033344078327758E-7	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999960387581353	WITHOUT_CLASSIFICATION	3.961241864793954E-6	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999972699056966	WITHOUT_CLASSIFICATION	2.7300943034077787E-6	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999729268114813	WITHOUT_CLASSIFICATION	2.7073188518584484E-5	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9999836913181044	WITHOUT_CLASSIFICATION	1.630868189555484E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999684816927332	WITHOUT_CLASSIFICATION	3.1518307266822675E-5	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999997900426846	WITHOUT_CLASSIFICATION	2.09957315521449E-7	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9994454360213622	WITHOUT_CLASSIFICATION	5.545639786377136E-4	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999999945479352	WITHOUT_CLASSIFICATION	5.452064824996007E-9	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999997443763592	WITHOUT_CLASSIFICATION	2.556236407535941E-7	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999999086961215	WITHOUT_CLASSIFICATION	9.13038785065841E-8	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999997668111311	WITHOUT_CLASSIFICATION	2.331888688550649E-7	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999976667046696	WITHOUT_CLASSIFICATION	2.3332953305154115E-6	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999993553031566	WITHOUT_CLASSIFICATION	6.446968434140001E-7	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999514949394225	WITHOUT_CLASSIFICATION	4.850506057744383E-5	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9999317696339076	WITHOUT_CLASSIFICATION	6.823036609234419E-5	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9999994311068438	WITHOUT_CLASSIFICATION	5.688931562616439E-7	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9995831969768679	WITHOUT_CLASSIFICATION	4.168030231321078E-4	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999870254071145	WITHOUT_CLASSIFICATION	1.297459288563061E-5	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9937417522936933	IMPLEMENTATION	0.006258247706306725	WITHOUT_CLASSIFICATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999944679869058	WITHOUT_CLASSIFICATION	5.532013094226108E-6	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9999994878207248	WITHOUT_CLASSIFICATION	5.121792751864036E-7	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9999960783732836	WITHOUT_CLASSIFICATION	3.921626716422899E-6	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9999938285074602	WITHOUT_CLASSIFICATION	6.1714925398326785E-6	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9993424138037239	WITHOUT_CLASSIFICATION	6.575861962761338E-4	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999946504494182	WITHOUT_CLASSIFICATION	5.349550581847712E-6	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9999993558652169	WITHOUT_CLASSIFICATION	6.441347831036303E-7	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999990541778566	WITHOUT_CLASSIFICATION	9.458221433260974E-7	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9993388482241586	WITHOUT_CLASSIFICATION	6.611517758412312E-4	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.999999199906751	WITHOUT_CLASSIFICATION	8.000932489087433E-7	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999985727933444	WITHOUT_CLASSIFICATION	1.427206655676464E-6	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.99999377345692	WITHOUT_CLASSIFICATION	6.2265430799257084E-6	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999998220114381	WITHOUT_CLASSIFICATION	1.779885619445887E-7	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999999893951443	WITHOUT_CLASSIFICATION	1.0604855755199493E-8	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999996128593496	WITHOUT_CLASSIFICATION	3.871406503442827E-7	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999953826227594	WITHOUT_CLASSIFICATION	4.617377240450782E-6	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.998875965671268	WITHOUT_CLASSIFICATION	0.0011240343287320365	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9997622648972213	WITHOUT_CLASSIFICATION	2.3773510277882393E-4	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999880883910294	WITHOUT_CLASSIFICATION	1.1911608970560649E-5	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9999966399247984	WITHOUT_CLASSIFICATION	3.360075201752394E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999660153929449	WITHOUT_CLASSIFICATION	3.398460705512924E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999995427064525	WITHOUT_CLASSIFICATION	4.572935475538832E-7	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999997850236252	WITHOUT_CLASSIFICATION	2.1497637480678317E-7	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999969637584115	WITHOUT_CLASSIFICATION	3.0362415884765716E-6	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999893246790087	WITHOUT_CLASSIFICATION	1.067532099131961E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999893246790087	WITHOUT_CLASSIFICATION	1.067532099131961E-5	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999978471583522	WITHOUT_CLASSIFICATION	2.152841647786538E-6	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999987222328331	WITHOUT_CLASSIFICATION	1.277767166881534E-6	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999992231173412	WITHOUT_CLASSIFICATION	7.768826588185307E-7	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999999982198814	WITHOUT_CLASSIFICATION	1.7801186527152245E-9	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999992542056996	WITHOUT_CLASSIFICATION	7.457943004800276E-7	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999998331331894	WITHOUT_CLASSIFICATION	1.6686681062299928E-7	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999999943829339	WITHOUT_CLASSIFICATION	5.617066064421655E-9	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999944775747	WITHOUT_CLASSIFICATION	5.522425286625224E-9	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999982624977	WITHOUT_CLASSIFICATION	1.7375022092280122E-9	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999999449308855	WITHOUT_CLASSIFICATION	5.5069114388658406E-8	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999986276292242	WITHOUT_CLASSIFICATION	1.3723707758083235E-6	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999986276292242	WITHOUT_CLASSIFICATION	1.3723707758083235E-6	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999986276292242	WITHOUT_CLASSIFICATION	1.3723707758083235E-6	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999989056569338	WITHOUT_CLASSIFICATION	1.0943430661074404E-6	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999999635102708	WITHOUT_CLASSIFICATION	3.648972919209246E-8	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9999949446074838	WITHOUT_CLASSIFICATION	5.055392516244463E-6	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.999999738227071	WITHOUT_CLASSIFICATION	2.6177292906515206E-7	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.999999738227071	WITHOUT_CLASSIFICATION	2.6177292906515206E-7	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999930514666514	WITHOUT_CLASSIFICATION	6.9485333485713685E-6	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.999957878183942	WITHOUT_CLASSIFICATION	4.2121816058076005E-5	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999999189608337	WITHOUT_CLASSIFICATION	8.103916632532114E-8	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999989649718984	WITHOUT_CLASSIFICATION	1.0350281014811846E-6	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999985448483768	WITHOUT_CLASSIFICATION	1.4551516232460027E-6	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9996983920516862	WITHOUT_CLASSIFICATION	3.0160794831380803E-4	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999992297080269	WITHOUT_CLASSIFICATION	7.702919730933468E-7	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999355355722291	WITHOUT_CLASSIFICATION	6.446442777083203E-5	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999999470068116	WITHOUT_CLASSIFICATION	5.299318842841833E-8	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999998820371898	WITHOUT_CLASSIFICATION	1.1796281011969055E-7	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999998820371898	WITHOUT_CLASSIFICATION	1.1796281011969055E-7	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999990907471197	WITHOUT_CLASSIFICATION	9.092528802535397E-7	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999994856010618	WITHOUT_CLASSIFICATION	5.143989383342857E-7	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999989106938173	WITHOUT_CLASSIFICATION	1.0893061827005673E-6	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999989545401649	WITHOUT_CLASSIFICATION	1.045459835107821E-6	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999998968812409	WITHOUT_CLASSIFICATION	1.0311875913367657E-7	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999906528126756	WITHOUT_CLASSIFICATION	9.347187324441412E-6	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999946666003701	WITHOUT_CLASSIFICATION	5.333399629955329E-6	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999408665714317	WITHOUT_CLASSIFICATION	5.913342856840657E-5	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999991554675143	WITHOUT_CLASSIFICATION	8.445324856713412E-7	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9999986796637726	WITHOUT_CLASSIFICATION	1.320336227365883E-6	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999794013430022	WITHOUT_CLASSIFICATION	2.0598656997740555E-5	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999984017166276	WITHOUT_CLASSIFICATION	1.5982833724580977E-6	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9999992140280961	WITHOUT_CLASSIFICATION	7.859719039505702E-7	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999150857587089	WITHOUT_CLASSIFICATION	8.491424129111608E-5	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9917950361859074	WITHOUT_CLASSIFICATION	0.008204963814092602	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9998800387217472	WITHOUT_CLASSIFICATION	1.1996127825283599E-4	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999938228013937	WITHOUT_CLASSIFICATION	6.177198606274836E-6	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999972193197858	WITHOUT_CLASSIFICATION	2.7806802142940813E-6	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999995268057525	WITHOUT_CLASSIFICATION	4.7319424746232426E-7	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999999528463049	WITHOUT_CLASSIFICATION	4.715369497064679E-8	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.99954160207293	WITHOUT_CLASSIFICATION	4.583979270701497E-4	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.999986112003916	WITHOUT_CLASSIFICATION	1.3887996083914369E-5	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999992743023667	WITHOUT_CLASSIFICATION	7.256976334273623E-7	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999997106256535	WITHOUT_CLASSIFICATION	2.893743464613972E-7	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999981491149261	WITHOUT_CLASSIFICATION	1.8508850739976488E-6	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999964306925926	WITHOUT_CLASSIFICATION	3.5693074074519087E-6	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.999997025902003	WITHOUT_CLASSIFICATION	2.974097996950668E-6	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999993525698706	WITHOUT_CLASSIFICATION	6.474301294201707E-7	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999956354038804	WITHOUT_CLASSIFICATION	4.364596119675868E-6	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.999998234160309	WITHOUT_CLASSIFICATION	1.765839691086972E-6	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999964333675364	WITHOUT_CLASSIFICATION	3.566632463584323E-6	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999949397795159	WITHOUT_CLASSIFICATION	5.060220484121243E-6	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.999999538574705	WITHOUT_CLASSIFICATION	4.614252948753668E-7	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999964333675364	WITHOUT_CLASSIFICATION	3.566632463584323E-6	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.999982631473267	WITHOUT_CLASSIFICATION	1.736852673295231E-5	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999970335406949	WITHOUT_CLASSIFICATION	2.9664593051192537E-6	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999682025098892	WITHOUT_CLASSIFICATION	3.179749011084036E-5	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999763377873426	WITHOUT_CLASSIFICATION	2.3662212657440317E-5	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999997161402119	WITHOUT_CLASSIFICATION	2.8385978814019674E-7	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999995095885795	WITHOUT_CLASSIFICATION	4.90411420442146E-7	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999994590494827	WITHOUT_CLASSIFICATION	5.409505173200882E-7	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999845781716933	WITHOUT_CLASSIFICATION	1.5421828306637137E-5	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999502446299768	WITHOUT_CLASSIFICATION	4.975537002309144E-5	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999366298117176	WITHOUT_CLASSIFICATION	6.337018828238602E-5	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999177081147572	WITHOUT_CLASSIFICATION	8.229188524276371E-5	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999384545106732	WITHOUT_CLASSIFICATION	6.154548932675061E-5	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.999895253742747	WITHOUT_CLASSIFICATION	1.047462572530492E-4	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999011777824374	WITHOUT_CLASSIFICATION	9.882221756271956E-5	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999615690047091	WITHOUT_CLASSIFICATION	3.843099529096081E-5	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999837682942435	WITHOUT_CLASSIFICATION	1.623170575653324E-5	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999686817426457	WITHOUT_CLASSIFICATION	3.1318257354188186E-5	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999949224474384	WITHOUT_CLASSIFICATION	5.077552561692634E-6	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.999980364652158	WITHOUT_CLASSIFICATION	1.9635347842025946E-5	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9997364437864193	WITHOUT_CLASSIFICATION	2.635562135806698E-4	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999698745657581	WITHOUT_CLASSIFICATION	3.0125434241732423E-5	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999965682772742	WITHOUT_CLASSIFICATION	3.4317227256816513E-6	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.999941807358013	WITHOUT_CLASSIFICATION	5.8192641986920975E-5	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999297038468025	WITHOUT_CLASSIFICATION	7.029615319756003E-5	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999863825059986	WITHOUT_CLASSIFICATION	1.3617494001441823E-5	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999999951581912	WITHOUT_CLASSIFICATION	4.84180889793322E-9	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999977588753355	WITHOUT_CLASSIFICATION	2.2411246644115976E-6	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999985136649364	WITHOUT_CLASSIFICATION	1.4863350635279305E-6	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.999958441423313	WITHOUT_CLASSIFICATION	4.155857668690841E-5	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9999230347605905	WITHOUT_CLASSIFICATION	7.696523940950911E-5	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9999993391294548	WITHOUT_CLASSIFICATION	6.608705450997777E-7	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9999468095348002	WITHOUT_CLASSIFICATION	5.3190465199782407E-5	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9064128597198415	WITHOUT_CLASSIFICATION	0.09358714028015847	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999997750079594	WITHOUT_CLASSIFICATION	2.2499204060729543E-7	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999874124956841	WITHOUT_CLASSIFICATION	1.2587504315895134E-5	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.999999589931904	WITHOUT_CLASSIFICATION	4.100680960782812E-7	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9999994024740706	WITHOUT_CLASSIFICATION	5.975259293754507E-7	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.999997838303171	WITHOUT_CLASSIFICATION	2.161696828955967E-6	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999915449573328	WITHOUT_CLASSIFICATION	8.455042667314419E-6	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9999977963231486	WITHOUT_CLASSIFICATION	2.2036768514742797E-6	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9999864150036013	WITHOUT_CLASSIFICATION	1.358499639873676E-5	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999976985608534	WITHOUT_CLASSIFICATION	2.3014391465230835E-6	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9998884363563746	WITHOUT_CLASSIFICATION	1.1156364362549402E-4	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9999992375993463	WITHOUT_CLASSIFICATION	7.624006537614677E-7	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999987112981823	WITHOUT_CLASSIFICATION	1.288701817641445E-6	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9999996687673816	WITHOUT_CLASSIFICATION	3.3123261846253415E-7	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9999852655134661	WITHOUT_CLASSIFICATION	1.4734486533797359E-5	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999998024562979	WITHOUT_CLASSIFICATION	1.975437021129824E-7	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999999691646586	WITHOUT_CLASSIFICATION	3.083534143785549E-8	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.9999995779859823	WITHOUT_CLASSIFICATION	4.220140178069169E-7	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999946133305007	WITHOUT_CLASSIFICATION	5.386669499360859E-6	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999999929163291	WITHOUT_CLASSIFICATION	7.083670760638837E-9	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999774854767051	WITHOUT_CLASSIFICATION	2.251452329501244E-5	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999999691646586	WITHOUT_CLASSIFICATION	3.083534143785549E-8	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.6041604283423685	IMPLEMENTATION	0.3958395716576315	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.6041604283423685	IMPLEMENTATION	0.3958395716576315	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999966568802601	WITHOUT_CLASSIFICATION	3.3431197399651766E-6	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999998203278541	WITHOUT_CLASSIFICATION	1.7967214587719446E-7	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999998567610379	WITHOUT_CLASSIFICATION	1.4323896213261526E-7	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999997275274373	WITHOUT_CLASSIFICATION	2.7247256272464217E-7	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999997406582065	WITHOUT_CLASSIFICATION	2.593417934505732E-7	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999953213576125	WITHOUT_CLASSIFICATION	4.6786423875111625E-6	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999993304571261	WITHOUT_CLASSIFICATION	6.695428739318297E-7	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9996936680655907	IMPLEMENTATION	3.063319344093956E-4	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999975542878866	WITHOUT_CLASSIFICATION	2.445712113400314E-6	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.999999033832144	WITHOUT_CLASSIFICATION	9.661678559518293E-7	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999999999977653	WITHOUT_CLASSIFICATION	2.234659208331735E-12	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999997918860046	WITHOUT_CLASSIFICATION	2.081139954419689E-7	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999992084388578	WITHOUT_CLASSIFICATION	7.915611421667475E-7	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999993256212283	WITHOUT_CLASSIFICATION	6.743787717316002E-7	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.999999731411922	WITHOUT_CLASSIFICATION	2.6858807798140293E-7	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999997062551116	WITHOUT_CLASSIFICATION	2.9374488832007335E-7	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999999896315194	WITHOUT_CLASSIFICATION	1.036848072121826E-8	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999935628351542	WITHOUT_CLASSIFICATION	6.437164845867502E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999935628351542	WITHOUT_CLASSIFICATION	6.437164845867502E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999935628351542	WITHOUT_CLASSIFICATION	6.437164845867502E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999935628351542	WITHOUT_CLASSIFICATION	6.437164845867502E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999935628351542	WITHOUT_CLASSIFICATION	6.437164845867502E-6	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9999966658891841	WITHOUT_CLASSIFICATION	3.3341108159240633E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999974222508249	WITHOUT_CLASSIFICATION	2.577749175241025E-6	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999923385041922	WITHOUT_CLASSIFICATION	7.661495807708039E-6	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999879828078	WITHOUT_CLASSIFICATION	1.201719230962488E-8	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999859195468006	WITHOUT_CLASSIFICATION	1.4080453199343153E-5	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.99999995230714	WITHOUT_CLASSIFICATION	4.769286006678589E-8	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999959925385897	WITHOUT_CLASSIFICATION	4.0074614102229956E-6	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999981376766008	WITHOUT_CLASSIFICATION	1.8623233991608575E-6	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999940484268222	WITHOUT_CLASSIFICATION	5.951573177829808E-6	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9999975046542243	WITHOUT_CLASSIFICATION	2.4953457756653734E-6	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9999971609895212	WITHOUT_CLASSIFICATION	2.8390104786977404E-6	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9999973077952199	WITHOUT_CLASSIFICATION	2.692204780108061E-6	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9999968606622874	WITHOUT_CLASSIFICATION	3.1393377125615208E-6	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9999972128849948	WITHOUT_CLASSIFICATION	2.787115005244041E-6	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9999967795664989	WITHOUT_CLASSIFICATION	3.2204335010178775E-6	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9999966321691096	WITHOUT_CLASSIFICATION	3.367830890281192E-6	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9999961441199061	WITHOUT_CLASSIFICATION	3.855880093849024E-6	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9999972983288886	WITHOUT_CLASSIFICATION	2.7016711114441818E-6	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9999964463667597	WITHOUT_CLASSIFICATION	3.5536332403868205E-6	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999973006395234	WITHOUT_CLASSIFICATION	2.699360476631827E-6	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9999965520812459	WITHOUT_CLASSIFICATION	3.447918754095255E-6	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.999995923808933	WITHOUT_CLASSIFICATION	4.076191067055243E-6	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999967172223099	WITHOUT_CLASSIFICATION	3.2827776902248393E-6	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9999962772852924	WITHOUT_CLASSIFICATION	3.722714707556713E-6	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999968235626121	WITHOUT_CLASSIFICATION	3.1764373878296234E-6	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9999974778441731	WITHOUT_CLASSIFICATION	2.5221558268209327E-6	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9999973783546043	WITHOUT_CLASSIFICATION	2.6216453956145724E-6	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9999973520741623	WITHOUT_CLASSIFICATION	2.647925837762413E-6	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999973105526269	WITHOUT_CLASSIFICATION	2.689447373217279E-6	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999983124853922	WITHOUT_CLASSIFICATION	1.687514607810045E-6	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999971560109981	WITHOUT_CLASSIFICATION	2.8439890018559107E-6	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9999969691415683	WITHOUT_CLASSIFICATION	3.030858431621444E-6	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9999968367830857	WITHOUT_CLASSIFICATION	3.163216914257948E-6	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9999965674523779	WITHOUT_CLASSIFICATION	3.4325476221383966E-6	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9999974937239323	WITHOUT_CLASSIFICATION	2.5062760675629196E-6	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9999967563191278	WITHOUT_CLASSIFICATION	3.243680872091171E-6	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.999996685567099	WITHOUT_CLASSIFICATION	3.314432900918932E-6	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9999965820364828	WITHOUT_CLASSIFICATION	3.417963517352971E-6	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.9999979600228543	WITHOUT_CLASSIFICATION	2.0399771456704596E-6	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.999996565363106	WITHOUT_CLASSIFICATION	3.434636894088832E-6	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9999967868140224	WITHOUT_CLASSIFICATION	3.213185977568801E-6	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999968511689303	WITHOUT_CLASSIFICATION	3.1488310695722946E-6	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9999971551599561	WITHOUT_CLASSIFICATION	2.844840043781612E-6	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9999967366531513	WITHOUT_CLASSIFICATION	3.263346848675588E-6	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9999980472275712	WITHOUT_CLASSIFICATION	1.952772428739446E-6	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9999977205961421	WITHOUT_CLASSIFICATION	2.279403857826452E-6	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9999970695065117	WITHOUT_CLASSIFICATION	2.9304934882600643E-6	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9999982580960026	WITHOUT_CLASSIFICATION	1.7419039973945973E-6	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9999969770431569	WITHOUT_CLASSIFICATION	3.0229568429961044E-6	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9999966787886515	WITHOUT_CLASSIFICATION	3.321211348573403E-6	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999923385041922	WITHOUT_CLASSIFICATION	7.661495807708039E-6	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999962946513501	WITHOUT_CLASSIFICATION	3.7053486499116786E-6	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999979143828372	WITHOUT_CLASSIFICATION	2.0856171626641177E-6	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999967579172037	WITHOUT_CLASSIFICATION	3.242082796283883E-6	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999964819169073	WITHOUT_CLASSIFICATION	3.5180830928505866E-6	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9999960654270833	WITHOUT_CLASSIFICATION	3.9345729166373415E-6	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9999959971460347	WITHOUT_CLASSIFICATION	4.002853965351733E-6	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9999964995326142	WITHOUT_CLASSIFICATION	3.5004673859766895E-6	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999961584024003	WITHOUT_CLASSIFICATION	3.841597599656789E-6	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9999961504465957	WITHOUT_CLASSIFICATION	3.849553404287529E-6	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.999996013334393	WITHOUT_CLASSIFICATION	3.98666560699477E-6	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9999962818990427	WITHOUT_CLASSIFICATION	3.718100957195363E-6	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.9999961143108026	WITHOUT_CLASSIFICATION	3.8856891973161114E-6	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.999996135265958	WITHOUT_CLASSIFICATION	3.864734042010811E-6	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9999974960954108	WITHOUT_CLASSIFICATION	2.503904589213193E-6	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9999967835385475	WITHOUT_CLASSIFICATION	3.216461452538819E-6	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999980507796308	WITHOUT_CLASSIFICATION	1.9492203692516132E-6	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.999996926960779	WITHOUT_CLASSIFICATION	3.0730392208839386E-6	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9999966475244015	WITHOUT_CLASSIFICATION	3.3524755985854174E-6	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9999966528151926	WITHOUT_CLASSIFICATION	3.3471848074863277E-6	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9999963370809896	WITHOUT_CLASSIFICATION	3.6629190105058987E-6	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9999965696902839	WITHOUT_CLASSIFICATION	3.4303097161706734E-6	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9999961931929714	WITHOUT_CLASSIFICATION	3.806807028633707E-6	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9999960201735564	WITHOUT_CLASSIFICATION	3.979826443597303E-6	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9999974729621383	WITHOUT_CLASSIFICATION	2.527037861789418E-6	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.999995636760247	WITHOUT_CLASSIFICATION	4.36323975296768E-6	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9999975043292091	WITHOUT_CLASSIFICATION	2.4956707908784827E-6	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999965673111256	WITHOUT_CLASSIFICATION	3.4326888744464154E-6	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999956867836349	WITHOUT_CLASSIFICATION	4.313216364971777E-6	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9999978090998832	WITHOUT_CLASSIFICATION	2.1909001167221E-6	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9999965071572224	WITHOUT_CLASSIFICATION	3.4928427774915623E-6	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9999978706497392	WITHOUT_CLASSIFICATION	2.129350260767961E-6	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9999964157918971	WITHOUT_CLASSIFICATION	3.584208102931906E-6	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9999964122224225	WITHOUT_CLASSIFICATION	3.587777577364048E-6	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.999996700346179	WITHOUT_CLASSIFICATION	3.2996538210085987E-6	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9999963933882678	WITHOUT_CLASSIFICATION	3.6066117321020655E-6	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9999962259015309	WITHOUT_CLASSIFICATION	3.7740984689887754E-6	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9999970116416305	WITHOUT_CLASSIFICATION	2.9883583695495915E-6	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.999996447955667	WITHOUT_CLASSIFICATION	3.5520443329298985E-6	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9999957750934159	WITHOUT_CLASSIFICATION	4.22490658423464E-6	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9999974272185317	WITHOUT_CLASSIFICATION	2.5727814683513385E-6	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9999960775979897	WITHOUT_CLASSIFICATION	3.92240201027354E-6	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9999956864958848	WITHOUT_CLASSIFICATION	4.313504115286687E-6	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999964481195073	WITHOUT_CLASSIFICATION	3.551880492672428E-6	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9999960523364493	WITHOUT_CLASSIFICATION	3.947663550716407E-6	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999966126504503	WITHOUT_CLASSIFICATION	3.3873495497588964E-6	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999959219094023	WITHOUT_CLASSIFICATION	4.0780905976918155E-6	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999966114522627	WITHOUT_CLASSIFICATION	3.3885477372700893E-6	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999961356778799	WITHOUT_CLASSIFICATION	3.864322120089674E-6	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9999954136860734	WITHOUT_CLASSIFICATION	4.586313926651185E-6	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.999997465101681	WITHOUT_CLASSIFICATION	2.5348983190135843E-6	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9999972627226231	WITHOUT_CLASSIFICATION	2.737277376902888E-6	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9999972449651809	WITHOUT_CLASSIFICATION	2.755034819079646E-6	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9999970604907069	WITHOUT_CLASSIFICATION	2.9395092930048418E-6	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9999968797171072	WITHOUT_CLASSIFICATION	3.1202828928992443E-6	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9999973278713514	WITHOUT_CLASSIFICATION	2.672128648517022E-6	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9999969715117205	WITHOUT_CLASSIFICATION	3.028488279502061E-6	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9999977744152501	WITHOUT_CLASSIFICATION	2.225584749830232E-6	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.99999617708609	WITHOUT_CLASSIFICATION	3.8229139100496075E-6	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9999962851401568	WITHOUT_CLASSIFICATION	3.7148598431878307E-6	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999962248434079	WITHOUT_CLASSIFICATION	3.775156592118374E-6	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.999996948140144	WITHOUT_CLASSIFICATION	3.0518598560510257E-6	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999963069268374	WITHOUT_CLASSIFICATION	3.6930731625347083E-6	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9999969110746183	WITHOUT_CLASSIFICATION	3.0889253817700654E-6	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9999962151601838	WITHOUT_CLASSIFICATION	3.7848398161363636E-6	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9999968607012947	WITHOUT_CLASSIFICATION	3.139298705311346E-6	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9999959438258996	WITHOUT_CLASSIFICATION	4.056174100404769E-6	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9999968075099341	WITHOUT_CLASSIFICATION	3.1924900658611765E-6	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9999959281925379	WITHOUT_CLASSIFICATION	4.071807462146302E-6	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9999958939608298	WITHOUT_CLASSIFICATION	4.106039170140615E-6	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9999962155443368	WITHOUT_CLASSIFICATION	3.7844556632089513E-6	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999963159019467	WITHOUT_CLASSIFICATION	3.6840980533842307E-6	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999960475054162	WITHOUT_CLASSIFICATION	3.952494583878597E-6	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999959750073032	WITHOUT_CLASSIFICATION	4.0249926968262165E-6	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9999973070084431	WITHOUT_CLASSIFICATION	2.6929915567739994E-6	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.999996445730173	WITHOUT_CLASSIFICATION	3.5542698270512107E-6	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9999968135398272	WITHOUT_CLASSIFICATION	3.186460172979842E-6	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9999978173684422	WITHOUT_CLASSIFICATION	2.182631557834067E-6	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9999967348641581	WITHOUT_CLASSIFICATION	3.265135841916245E-6	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9999963259162095	WITHOUT_CLASSIFICATION	3.6740837904446406E-6	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999966318562444	WITHOUT_CLASSIFICATION	3.3681437555337692E-6	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9999959680174485	WITHOUT_CLASSIFICATION	4.031982551505825E-6	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9999976768194669	WITHOUT_CLASSIFICATION	2.32318053312429E-6	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999959790904228	WITHOUT_CLASSIFICATION	4.020909577165098E-6	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9999962422888927	WITHOUT_CLASSIFICATION	3.7577111073859355E-6	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9999960225727966	WITHOUT_CLASSIFICATION	3.977427203364382E-6	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999974021801794	WITHOUT_CLASSIFICATION	2.5978198205548238E-6	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9999961769065643	WITHOUT_CLASSIFICATION	3.823093435749374E-6	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.999995514546774	WITHOUT_CLASSIFICATION	4.485453225892764E-6	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.999996347382412	WITHOUT_CLASSIFICATION	3.6526175879211097E-6	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9999958572770594	WITHOUT_CLASSIFICATION	4.1427229406060164E-6	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999974920226911	WITHOUT_CLASSIFICATION	2.5079773088698302E-6	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9999962833592859	WITHOUT_CLASSIFICATION	3.716640714142682E-6	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9999958611902803	WITHOUT_CLASSIFICATION	4.138809719742543E-6	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9999955891738026	WITHOUT_CLASSIFICATION	4.410826197407658E-6	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.999998258111319	WITHOUT_CLASSIFICATION	1.741888680944942E-6	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999984048014302	WITHOUT_CLASSIFICATION	1.5951985698008025E-6	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9999982696529258	WITHOUT_CLASSIFICATION	1.7303470741421186E-6	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9999983568546027	WITHOUT_CLASSIFICATION	1.6431453973723021E-6	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9999983694198402	WITHOUT_CLASSIFICATION	1.6305801598541955E-6	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9999985539950371	WITHOUT_CLASSIFICATION	1.4460049628919746E-6	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.999998489347022	WITHOUT_CLASSIFICATION	1.5106529780495587E-6	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9999984835472427	WITHOUT_CLASSIFICATION	1.5164527573246434E-6	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9999983938211287	WITHOUT_CLASSIFICATION	1.6061788713880462E-6	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9999982958037382	WITHOUT_CLASSIFICATION	1.7041962617526288E-6	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9999983429088586	WITHOUT_CLASSIFICATION	1.6570911414276224E-6	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9999982571840589	WITHOUT_CLASSIFICATION	1.742815941183348E-6	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9999981899742278	WITHOUT_CLASSIFICATION	1.810025772243373E-6	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.999998045612024	WITHOUT_CLASSIFICATION	1.9543879759462404E-6	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.999998033080382	WITHOUT_CLASSIFICATION	1.9669196179615925E-6	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9999984784140867	WITHOUT_CLASSIFICATION	1.5215859131937099E-6	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9999982275126694	WITHOUT_CLASSIFICATION	1.772487330514248E-6	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999979905830332	WITHOUT_CLASSIFICATION	2.009416966757419E-6	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9999983698356741	WITHOUT_CLASSIFICATION	1.630164325829709E-6	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9999982374250542	WITHOUT_CLASSIFICATION	1.762574945871643E-6	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9999978314462283	WITHOUT_CLASSIFICATION	2.168553771689886E-6	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999970489516703	WITHOUT_CLASSIFICATION	2.9510483297261657E-6	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.99999728561561	WITHOUT_CLASSIFICATION	2.7143843900965534E-6	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9999972932202876	WITHOUT_CLASSIFICATION	2.7067797123792164E-6	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9999970119799632	WITHOUT_CLASSIFICATION	2.988020036867367E-6	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.999998400420884	WITHOUT_CLASSIFICATION	1.599579115981877E-6	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999972567475842	WITHOUT_CLASSIFICATION	2.7432524158517593E-6	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9999975665138985	WITHOUT_CLASSIFICATION	2.4334861014820947E-6	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9999972004443312	WITHOUT_CLASSIFICATION	2.7995556688565955E-6	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999984677365586	WITHOUT_CLASSIFICATION	1.5322634413490773E-6	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9999973749060254	WITHOUT_CLASSIFICATION	2.6250939746279403E-6	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9999975762222195	WITHOUT_CLASSIFICATION	2.4237777804014037E-6	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999974466708681	WITHOUT_CLASSIFICATION	2.5533291318382315E-6	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9999974860972348	WITHOUT_CLASSIFICATION	2.513902765113604E-6	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9999974150379284	WITHOUT_CLASSIFICATION	2.584962071636922E-6	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9999973419805118	WITHOUT_CLASSIFICATION	2.658019488117287E-6	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9999972026780136	WITHOUT_CLASSIFICATION	2.7973219863667625E-6	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9999973941797525	WITHOUT_CLASSIFICATION	2.6058202474886935E-6	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9999972466010605	WITHOUT_CLASSIFICATION	2.753398939554934E-6	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999986677418164	WITHOUT_CLASSIFICATION	1.3322581835242058E-6	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999982898562163	WITHOUT_CLASSIFICATION	1.7101437837465768E-6	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999986661795705	WITHOUT_CLASSIFICATION	1.3338204296257786E-6	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9999979782884475	WITHOUT_CLASSIFICATION	2.0217115525284613E-6	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9999984428648347	WITHOUT_CLASSIFICATION	1.5571351651812331E-6	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9999980839217114	WITHOUT_CLASSIFICATION	1.9160782885689996E-6	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.9999981608219732	WITHOUT_CLASSIFICATION	1.8391780267577648E-6	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999978621475293	WITHOUT_CLASSIFICATION	2.137852470630911E-6	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999979379414108	WITHOUT_CLASSIFICATION	2.0620585892117372E-6	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9999979315905106	WITHOUT_CLASSIFICATION	2.068409489310405E-6	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9999977253492962	WITHOUT_CLASSIFICATION	2.274650703886626E-6	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9999987221873163	WITHOUT_CLASSIFICATION	1.2778126836229407E-6	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9999980358391627	WITHOUT_CLASSIFICATION	1.9641608373423964E-6	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9999986569555847	WITHOUT_CLASSIFICATION	1.3430444153600362E-6	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9999977469159913	WITHOUT_CLASSIFICATION	2.253084008798618E-6	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.999997705589022	WITHOUT_CLASSIFICATION	2.294410977922991E-6	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9999984701758893	WITHOUT_CLASSIFICATION	1.529824110738704E-6	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9999982021741126	WITHOUT_CLASSIFICATION	1.7978258873402552E-6	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.99999726573351	WITHOUT_CLASSIFICATION	2.73426649004921E-6	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.999997508617782	WITHOUT_CLASSIFICATION	2.4913822178453102E-6	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999986744408331	WITHOUT_CLASSIFICATION	1.3255591669773479E-6	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9999978961618043	WITHOUT_CLASSIFICATION	2.1038381956203757E-6	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9999975212798528	WITHOUT_CLASSIFICATION	2.4787201471739196E-6	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999977771518775	WITHOUT_CLASSIFICATION	2.2228481224197997E-6	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9999979947606736	WITHOUT_CLASSIFICATION	2.0052393263239766E-6	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9999976922159892	WITHOUT_CLASSIFICATION	2.3077840107814946E-6	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9999976344346104	WITHOUT_CLASSIFICATION	2.365565389651573E-6	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9999974599586525	WITHOUT_CLASSIFICATION	2.540041347407735E-6	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999973399985468	WITHOUT_CLASSIFICATION	2.660001453192669E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999977594219922	WITHOUT_CLASSIFICATION	2.2405780078458705E-6	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9999976121189001	WITHOUT_CLASSIFICATION	2.387881099923782E-6	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9999976144993344	WITHOUT_CLASSIFICATION	2.3855006655279053E-6	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.999997662959184	WITHOUT_CLASSIFICATION	2.337040815934395E-6	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9999984317908401	WITHOUT_CLASSIFICATION	1.5682091599053054E-6	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9999975606155449	WITHOUT_CLASSIFICATION	2.4393844550583067E-6	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9999978783535001	WITHOUT_CLASSIFICATION	2.121646499969933E-6	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999977577211449	WITHOUT_CLASSIFICATION	2.2422788552131005E-6	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999978699800727	WITHOUT_CLASSIFICATION	2.1300199273185334E-6	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.999997648952756	WITHOUT_CLASSIFICATION	2.35104724404235E-6	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999984271102438	WITHOUT_CLASSIFICATION	1.572889756295686E-6	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9999972261711715	WITHOUT_CLASSIFICATION	2.773828828421215E-6	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9999985174692969	WITHOUT_CLASSIFICATION	1.4825307030700237E-6	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9999977339121422	WITHOUT_CLASSIFICATION	2.2660878579147055E-6	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.99999750260244	WITHOUT_CLASSIFICATION	2.4973975598732848E-6	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999973795110946	WITHOUT_CLASSIFICATION	2.6204889055102476E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999984844097021	WITHOUT_CLASSIFICATION	1.5155902979372365E-6	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9999984583815684	WITHOUT_CLASSIFICATION	1.541618431519991E-6	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999975694603831	WITHOUT_CLASSIFICATION	2.4305396169106477E-6	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9999974061643279	WITHOUT_CLASSIFICATION	2.593835672221564E-6	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9999975092655519	WITHOUT_CLASSIFICATION	2.4907344481262818E-6	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9999983755125637	WITHOUT_CLASSIFICATION	1.6244874363194162E-6	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9999974881792151	WITHOUT_CLASSIFICATION	2.511820785029706E-6	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9999972971843073	WITHOUT_CLASSIFICATION	2.702815692717768E-6	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.9999973279719585	WITHOUT_CLASSIFICATION	2.6720280414713175E-6	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9999975026798242	WITHOUT_CLASSIFICATION	2.497320175649427E-6	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9999972559793325	WITHOUT_CLASSIFICATION	2.7440206674439054E-6	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9999975719330098	WITHOUT_CLASSIFICATION	2.428066990279758E-6	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9999971250420365	WITHOUT_CLASSIFICATION	2.8749579634809378E-6	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9999973308289727	WITHOUT_CLASSIFICATION	2.669171027348381E-6	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999972948210597	WITHOUT_CLASSIFICATION	2.705178940317243E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999974573643875	WITHOUT_CLASSIFICATION	2.542635612469779E-6	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.999998357616994	WITHOUT_CLASSIFICATION	1.6423830059971327E-6	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9999980878207467	WITHOUT_CLASSIFICATION	1.9121792532932315E-6	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9999978934892694	WITHOUT_CLASSIFICATION	2.106510730607415E-6	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9999975739039904	WITHOUT_CLASSIFICATION	2.4260960096535204E-6	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999976333099837	WITHOUT_CLASSIFICATION	2.366690016347809E-6	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999978481170629	WITHOUT_CLASSIFICATION	2.1518829369827306E-6	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9999975392027846	WITHOUT_CLASSIFICATION	2.4607972153917718E-6	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9999974919537943	WITHOUT_CLASSIFICATION	2.5080462057022587E-6	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9999974354786202	WITHOUT_CLASSIFICATION	2.5645213797619814E-6	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9999974386545438	WITHOUT_CLASSIFICATION	2.5613454562579208E-6	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9999973263509683	WITHOUT_CLASSIFICATION	2.6736490318290883E-6	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9999975250964165	WITHOUT_CLASSIFICATION	2.4749035835909255E-6	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9999971487648951	WITHOUT_CLASSIFICATION	2.8512351049549934E-6	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9999976953008495	WITHOUT_CLASSIFICATION	2.3046991504393113E-6	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9999970574850345	WITHOUT_CLASSIFICATION	2.9425149654259845E-6	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.9999971709518645	WITHOUT_CLASSIFICATION	2.829048135498326E-6	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9999974538852692	WITHOUT_CLASSIFICATION	2.546114730733486E-6	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.999998250238751	WITHOUT_CLASSIFICATION	1.7497612489477723E-6	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999981772680252	WITHOUT_CLASSIFICATION	1.8227319748002082E-6	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999978097715722	WITHOUT_CLASSIFICATION	2.190228427899195E-6	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9999973283601403	WITHOUT_CLASSIFICATION	2.6716398596247633E-6	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999978714177289	WITHOUT_CLASSIFICATION	2.1285822711916277E-6	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9999977147909225	WITHOUT_CLASSIFICATION	2.2852090775553173E-6	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999974154700633	WITHOUT_CLASSIFICATION	2.5845299367987056E-6	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9999972271478444	WITHOUT_CLASSIFICATION	2.772852155649379E-6	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9999971656284012	WITHOUT_CLASSIFICATION	2.8343715988334546E-6	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999976927184513	WITHOUT_CLASSIFICATION	2.307281548832894E-6	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9999974208622143	WITHOUT_CLASSIFICATION	2.5791377856870667E-6	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9999976456565428	WITHOUT_CLASSIFICATION	2.354343457096878E-6	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.999998184355735	WITHOUT_CLASSIFICATION	1.815644265008925E-6	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.9999976316845745	WITHOUT_CLASSIFICATION	2.368315425507947E-6	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999972945297165	WITHOUT_CLASSIFICATION	2.705470283460176E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999977711845616	WITHOUT_CLASSIFICATION	2.2288154384696303E-6	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999827935237147	WITHOUT_CLASSIFICATION	1.7206476285289922E-5	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9997212101013027	WITHOUT_CLASSIFICATION	2.787898986972716E-4	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999867499518345	WITHOUT_CLASSIFICATION	1.3250048165571128E-5	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999897702369611	WITHOUT_CLASSIFICATION	1.0229763038901649E-5	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999399718199757	WITHOUT_CLASSIFICATION	6.0028180024211686E-5	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999977436721944	WITHOUT_CLASSIFICATION	2.2563278055761597E-6	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9959122289817668	WITHOUT_CLASSIFICATION	0.004087771018233179	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9962066556000534	WITHOUT_CLASSIFICATION	0.0037933443999466467	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999818749837732	WITHOUT_CLASSIFICATION	1.8125016226786025E-5	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9997454375527127	WITHOUT_CLASSIFICATION	2.545624472873036E-4	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9998826097281902	WITHOUT_CLASSIFICATION	1.173902718097978E-4	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.999996756207008	WITHOUT_CLASSIFICATION	3.24379299200252E-6	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999996004471735	WITHOUT_CLASSIFICATION	3.9955282659093575E-7	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9998272728407263	WITHOUT_CLASSIFICATION	1.7272715927385654E-4	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999957464285255	WITHOUT_CLASSIFICATION	4.253571474508766E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9985185256916441	WITHOUT_CLASSIFICATION	0.001481474308355882	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.999886428355214	WITHOUT_CLASSIFICATION	1.1357164478603225E-4	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998997654660028	WITHOUT_CLASSIFICATION	1.0023453399721392E-4	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999927144867	WITHOUT_CLASSIFICATION	7.285513299495567E-9	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999652798609	WITHOUT_CLASSIFICATION	3.4720139147590485E-8	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999994605835097	WITHOUT_CLASSIFICATION	5.394164902589321E-7	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999988796232265	WITHOUT_CLASSIFICATION	1.1203767735205778E-6	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999998915681403	WITHOUT_CLASSIFICATION	1.0843185973016315E-7	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999996198689202	WITHOUT_CLASSIFICATION	3.8013107980399293E-7	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999996198689202	WITHOUT_CLASSIFICATION	3.8013107980399293E-7	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999998813871056	WITHOUT_CLASSIFICATION	1.1861289443177623E-7	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9990113463115636	WITHOUT_CLASSIFICATION	9.886536884363712E-4	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999992552760305	WITHOUT_CLASSIFICATION	7.447239694939233E-7	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999985878983885	WITHOUT_CLASSIFICATION	1.4121016114179316E-6	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999932119120138	WITHOUT_CLASSIFICATION	6.788087986166266E-6	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999999956929047	WITHOUT_CLASSIFICATION	4.3070952650032786E-9	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999972419057701	WITHOUT_CLASSIFICATION	2.758094229889098E-6	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999999271116979	WITHOUT_CLASSIFICATION	7.288830203158368E-8	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999888437911767	WITHOUT_CLASSIFICATION	1.1156208823237364E-5	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999934939169725	WITHOUT_CLASSIFICATION	6.506083027622514E-6	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9999998855921785	WITHOUT_CLASSIFICATION	1.1440782156766107E-7	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999999926159095	WITHOUT_CLASSIFICATION	7.384090513431127E-9	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.999999977682116	WITHOUT_CLASSIFICATION	2.2317884011205043E-8	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999954387293465	WITHOUT_CLASSIFICATION	4.561270653584411E-6	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999973606777832	WITHOUT_CLASSIFICATION	2.6393222168032447E-6	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999933942439103	WITHOUT_CLASSIFICATION	6.605756089721578E-6	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999999659857106	WITHOUT_CLASSIFICATION	3.4014289396812124E-8	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9995039281242142	WITHOUT_CLASSIFICATION	4.960718757858171E-4	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999998745669905	WITHOUT_CLASSIFICATION	1.2543300964830373E-7	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999703519879365	WITHOUT_CLASSIFICATION	2.9648012063450375E-5	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999521538079	WITHOUT_CLASSIFICATION	4.784619201809961E-8	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9999925827762811	WITHOUT_CLASSIFICATION	7.417223718911992E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9113346903056084	WITHOUT_CLASSIFICATION	0.0886653096943915	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9998045572301489	WITHOUT_CLASSIFICATION	1.9544276985097213E-4	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9113346903056084	WITHOUT_CLASSIFICATION	0.0886653096943915	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999169537418457	WITHOUT_CLASSIFICATION	8.304625815426548E-5	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9998617728016959	WITHOUT_CLASSIFICATION	1.3822719830403022E-4	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9703971290197251	WITHOUT_CLASSIFICATION	0.029602870980274865	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9998892450657456	WITHOUT_CLASSIFICATION	1.107549342543155E-4	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999906203850988	WITHOUT_CLASSIFICATION	9.37961490127652E-6	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999930481712823	WITHOUT_CLASSIFICATION	6.951828717706407E-6	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999930481712823	WITHOUT_CLASSIFICATION	6.951828717706407E-6	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999930481712823	WITHOUT_CLASSIFICATION	6.951828717706407E-6	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999964293693192	WITHOUT_CLASSIFICATION	3.5706306808764814E-6	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9997228357294972	WITHOUT_CLASSIFICATION	2.7716427050290186E-4	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.999996249853839	WITHOUT_CLASSIFICATION	3.7501461610728948E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999994530578969	WITHOUT_CLASSIFICATION	5.4694210309312085E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999994530578969	WITHOUT_CLASSIFICATION	5.4694210309312085E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999994530578969	WITHOUT_CLASSIFICATION	5.4694210309312085E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999994530578969	WITHOUT_CLASSIFICATION	5.4694210309312085E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999994530578969	WITHOUT_CLASSIFICATION	5.4694210309312085E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999994530578969	WITHOUT_CLASSIFICATION	5.4694210309312085E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.999993699186094	WITHOUT_CLASSIFICATION	6.3008139059284445E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.999993699186094	WITHOUT_CLASSIFICATION	6.3008139059284445E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.999993699186094	WITHOUT_CLASSIFICATION	6.3008139059284445E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.999993699186094	WITHOUT_CLASSIFICATION	6.3008139059284445E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.999993699186094	WITHOUT_CLASSIFICATION	6.3008139059284445E-6	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999810520150689	WITHOUT_CLASSIFICATION	1.8947984931044238E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999810520150689	WITHOUT_CLASSIFICATION	1.8947984931044238E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999810520150689	WITHOUT_CLASSIFICATION	1.8947984931044238E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999810520150689	WITHOUT_CLASSIFICATION	1.8947984931044238E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999810520150689	WITHOUT_CLASSIFICATION	1.8947984931044238E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999684477757925	WITHOUT_CLASSIFICATION	3.155222420750498E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999684477757925	WITHOUT_CLASSIFICATION	3.155222420750498E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999684477757925	WITHOUT_CLASSIFICATION	3.155222420750498E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999684477757925	WITHOUT_CLASSIFICATION	3.155222420750498E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999684477757925	WITHOUT_CLASSIFICATION	3.155222420750498E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999684477757925	WITHOUT_CLASSIFICATION	3.155222420750498E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999908197501866	WITHOUT_CLASSIFICATION	9.180249813370435E-6	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999908197501866	WITHOUT_CLASSIFICATION	9.180249813370435E-6	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999908197501866	WITHOUT_CLASSIFICATION	9.180249813370435E-6	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999908197501866	WITHOUT_CLASSIFICATION	9.180249813370435E-6	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999908197501866	WITHOUT_CLASSIFICATION	9.180249813370435E-6	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999851409690085	WITHOUT_CLASSIFICATION	1.4859030991594248E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999851409690085	WITHOUT_CLASSIFICATION	1.4859030991594248E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999851409690085	WITHOUT_CLASSIFICATION	1.4859030991594248E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999851409690085	WITHOUT_CLASSIFICATION	1.4859030991594248E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999851409690085	WITHOUT_CLASSIFICATION	1.4859030991594248E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999923385041922	WITHOUT_CLASSIFICATION	7.661495807708039E-6	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999923385041922	WITHOUT_CLASSIFICATION	7.661495807708039E-6	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999923385041922	WITHOUT_CLASSIFICATION	7.661495807708039E-6	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999923385041922	WITHOUT_CLASSIFICATION	7.661495807708039E-6	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999923385041922	WITHOUT_CLASSIFICATION	7.661495807708039E-6	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999879828078	WITHOUT_CLASSIFICATION	1.201719230962488E-8	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.99999995230714	WITHOUT_CLASSIFICATION	4.769286006678589E-8	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999959925385897	WITHOUT_CLASSIFICATION	4.0074614102229956E-6	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999981376766008	WITHOUT_CLASSIFICATION	1.8623233991608575E-6	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999940484268222	WITHOUT_CLASSIFICATION	5.951573177829808E-6	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999974149356293	WITHOUT_CLASSIFICATION	2.585064370691858E-6	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999973006395234	WITHOUT_CLASSIFICATION	2.699360476631827E-6	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999968235626121	WITHOUT_CLASSIFICATION	3.1764373878296234E-6	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999973105526269	WITHOUT_CLASSIFICATION	2.689447373217279E-6	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999983124853922	WITHOUT_CLASSIFICATION	1.687514607810045E-6	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999974755270689	WITHOUT_CLASSIFICATION	2.524472931173183E-6	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999971560109981	WITHOUT_CLASSIFICATION	2.8439890018559107E-6	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9999981904699304	WITHOUT_CLASSIFICATION	1.8095300695037075E-6	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9999972151781977	WITHOUT_CLASSIFICATION	2.784821802235609E-6	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9999967880249512	WITHOUT_CLASSIFICATION	3.2119750488430947E-6	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9999970666251375	WITHOUT_CLASSIFICATION	2.9333748624225625E-6	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9999965304375501	WITHOUT_CLASSIFICATION	3.469562449810493E-6	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9999968213450221	WITHOUT_CLASSIFICATION	3.1786549779587915E-6	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9999958910842082	WITHOUT_CLASSIFICATION	4.108915791856001E-6	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9999959634894362	WITHOUT_CLASSIFICATION	4.036510563806684E-6	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9999970783702963	WITHOUT_CLASSIFICATION	2.921629703767309E-6	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9999969496315116	WITHOUT_CLASSIFICATION	3.050368488376313E-6	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9999966789786155	WITHOUT_CLASSIFICATION	3.3210213844077618E-6	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9999967271652941	WITHOUT_CLASSIFICATION	3.2728347058092864E-6	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9999962459624075	WITHOUT_CLASSIFICATION	3.7540375925883046E-6	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9999958087284992	WITHOUT_CLASSIFICATION	4.191271500728563E-6	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9999961760270893	WITHOUT_CLASSIFICATION	3.823972910612839E-6	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9999966528191623	WITHOUT_CLASSIFICATION	3.347180837651091E-6	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.999995742388226	WITHOUT_CLASSIFICATION	4.257611774109751E-6	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9999971565975732	WITHOUT_CLASSIFICATION	2.8434024268509787E-6	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9999974476576867	WITHOUT_CLASSIFICATION	2.5523423133633904E-6	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9999969445251031	WITHOUT_CLASSIFICATION	3.0554748969571174E-6	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9999968912461885	WITHOUT_CLASSIFICATION	3.1087538114123946E-6	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9999967085628909	WITHOUT_CLASSIFICATION	3.2914371091978218E-6	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.999996888493361	WITHOUT_CLASSIFICATION	3.1115066390688856E-6	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9999969706215945	WITHOUT_CLASSIFICATION	3.0293784055465337E-6	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9999966781795188	WITHOUT_CLASSIFICATION	3.321820481241763E-6	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9999966670635441	WITHOUT_CLASSIFICATION	3.3329364559799495E-6	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.999996804168482	WITHOUT_CLASSIFICATION	3.1958315179544323E-6	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9999975197559214	WITHOUT_CLASSIFICATION	2.4802440785684646E-6	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9999967835029444	WITHOUT_CLASSIFICATION	3.2164970556737326E-6	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9999965295810193	WITHOUT_CLASSIFICATION	3.4704189807587404E-6	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9999963813648834	WITHOUT_CLASSIFICATION	3.61863511663126E-6	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.999997615954233	WITHOUT_CLASSIFICATION	2.384045766942333E-6	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9999974257001936	WITHOUT_CLASSIFICATION	2.5742998064746476E-6	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9999974207936335	WITHOUT_CLASSIFICATION	2.579206366392087E-6	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9999976182234145	WITHOUT_CLASSIFICATION	2.3817765855686597E-6	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.9999974819231565	WITHOUT_CLASSIFICATION	2.5180768433830834E-6	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.999996755478549	WITHOUT_CLASSIFICATION	3.2445214508843055E-6	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999979143828372	WITHOUT_CLASSIFICATION	2.0856171626641177E-6	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999967579172037	WITHOUT_CLASSIFICATION	3.242082796283883E-6	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999964819169073	WITHOUT_CLASSIFICATION	3.5180830928505866E-6	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999961584024003	WITHOUT_CLASSIFICATION	3.841597599656789E-6	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999980507796308	WITHOUT_CLASSIFICATION	1.9492203692516132E-6	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999965673111256	WITHOUT_CLASSIFICATION	3.4326888744464154E-6	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999966742968447	WITHOUT_CLASSIFICATION	3.325703155325358E-6	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999956867836349	WITHOUT_CLASSIFICATION	4.313216364971777E-6	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999964481195073	WITHOUT_CLASSIFICATION	3.551880492672428E-6	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999966126504503	WITHOUT_CLASSIFICATION	3.3873495497588964E-6	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999963000640354	WITHOUT_CLASSIFICATION	3.6999359645561563E-6	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999959219094023	WITHOUT_CLASSIFICATION	4.0780905976918155E-6	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999966114522627	WITHOUT_CLASSIFICATION	3.3885477372700893E-6	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9999969251855356	WITHOUT_CLASSIFICATION	3.0748144643100184E-6	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9999963964427098	WITHOUT_CLASSIFICATION	3.603557290211437E-6	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9999966882643478	WITHOUT_CLASSIFICATION	3.3117356522853135E-6	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9999961889873008	WITHOUT_CLASSIFICATION	3.811012699205096E-6	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9999970063508997	WITHOUT_CLASSIFICATION	2.9936491002832214E-6	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9999968930316926	WITHOUT_CLASSIFICATION	3.106968307441304E-6	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.9999964651332393	WITHOUT_CLASSIFICATION	3.534866760679393E-6	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9999960040677509	WITHOUT_CLASSIFICATION	3.995932249058889E-6	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9999963374571936	WITHOUT_CLASSIFICATION	3.662542806512219E-6	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9999963803992257	WITHOUT_CLASSIFICATION	3.6196007744593986E-6	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.999996771678611	WITHOUT_CLASSIFICATION	3.2283213889503622E-6	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9999960535306577	WITHOUT_CLASSIFICATION	3.94646934224329E-6	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9999962923757547	WITHOUT_CLASSIFICATION	3.707624245285471E-6	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9999968640203607	WITHOUT_CLASSIFICATION	3.135979639429468E-6	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.999996324967243	WITHOUT_CLASSIFICATION	3.6750327569457138E-6	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9999977027313148	WITHOUT_CLASSIFICATION	2.297268685227632E-6	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.999996054007682	WITHOUT_CLASSIFICATION	3.945992318002217E-6	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.999996103302537	WITHOUT_CLASSIFICATION	3.896697463026494E-6	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9999964291916678	WITHOUT_CLASSIFICATION	3.5708083321753175E-6	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.999995857061253	WITHOUT_CLASSIFICATION	4.142938746981146E-6	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9999966912855967	WITHOUT_CLASSIFICATION	3.3087144033907257E-6	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.999995705321129	WITHOUT_CLASSIFICATION	4.294678870972747E-6	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9999962130151495	WITHOUT_CLASSIFICATION	3.7869848505466956E-6	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9999966356205607	WITHOUT_CLASSIFICATION	3.3643794392214826E-6	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9999959527260287	WITHOUT_CLASSIFICATION	4.047273971388911E-6	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9999957033325487	WITHOUT_CLASSIFICATION	4.296667451278586E-6	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9999971126858052	WITHOUT_CLASSIFICATION	2.8873141948368274E-6	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9999972280211135	WITHOUT_CLASSIFICATION	2.771978886539037E-6	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9999962511574427	WITHOUT_CLASSIFICATION	3.7488425573409084E-6	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9999958274009513	WITHOUT_CLASSIFICATION	4.1725990487576765E-6	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.999996410029108	WITHOUT_CLASSIFICATION	3.5899708920766144E-6	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9999956403565256	WITHOUT_CLASSIFICATION	4.359643474359565E-6	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9999979234984591	WITHOUT_CLASSIFICATION	2.076501541010253E-6	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9999972028984961	WITHOUT_CLASSIFICATION	2.7971015037373357E-6	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9999968113866184	WITHOUT_CLASSIFICATION	3.1886133815151875E-6	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9999967328023538	WITHOUT_CLASSIFICATION	3.267197646244502E-6	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.999996948140144	WITHOUT_CLASSIFICATION	3.0518598560510257E-6	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999967235763133	WITHOUT_CLASSIFICATION	3.276423686816434E-6	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999963069268374	WITHOUT_CLASSIFICATION	3.6930731625347083E-6	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999963159019467	WITHOUT_CLASSIFICATION	3.6840980533842307E-6	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999959750073032	WITHOUT_CLASSIFICATION	4.0249926968262165E-6	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999966318562444	WITHOUT_CLASSIFICATION	3.3681437555337692E-6	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999959790904228	WITHOUT_CLASSIFICATION	4.020909577165098E-6	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999974021801794	WITHOUT_CLASSIFICATION	2.5978198205548238E-6	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999974920226911	WITHOUT_CLASSIFICATION	2.5079773088698302E-6	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999984048014302	WITHOUT_CLASSIFICATION	1.5951985698008025E-6	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999983446384287	WITHOUT_CLASSIFICATION	1.6553615712345118E-6	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9999979570397142	WITHOUT_CLASSIFICATION	2.0429602857547593E-6	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9999965570720146	WITHOUT_CLASSIFICATION	3.4429279852732853E-6	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.999996557782121	WITHOUT_CLASSIFICATION	3.4422178790494917E-6	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.9999968968515403	WITHOUT_CLASSIFICATION	3.1031484596666896E-6	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9999971574802499	WITHOUT_CLASSIFICATION	2.8425197502077282E-6	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9999960023378056	WITHOUT_CLASSIFICATION	3.997662194389356E-6	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9999976052332861	WITHOUT_CLASSIFICATION	2.3947667139047923E-6	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9999963291726933	WITHOUT_CLASSIFICATION	3.6708273066041338E-6	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9999959714978378	WITHOUT_CLASSIFICATION	4.0285021622119E-6	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.9999959631549623	WITHOUT_CLASSIFICATION	4.036845037623214E-6	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9999962819756072	WITHOUT_CLASSIFICATION	3.7180243927397437E-6	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9999963475639039	WITHOUT_CLASSIFICATION	3.65243609620303E-6	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9999956848802787	WITHOUT_CLASSIFICATION	4.315119721299201E-6	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9999977083155034	WITHOUT_CLASSIFICATION	2.291684496539873E-6	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9999975117166654	WITHOUT_CLASSIFICATION	2.4882833345962607E-6	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9999970637233915	WITHOUT_CLASSIFICATION	2.9362766085353007E-6	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9999972286178423	WITHOUT_CLASSIFICATION	2.7713821577551966E-6	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9999965899035508	WITHOUT_CLASSIFICATION	3.4100964492223782E-6	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9999963266482393	WITHOUT_CLASSIFICATION	3.67335176079478E-6	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9999965383866245	WITHOUT_CLASSIFICATION	3.4616133754369114E-6	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9999969430788918	WITHOUT_CLASSIFICATION	3.0569211081961998E-6	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9999958096594214	WITHOUT_CLASSIFICATION	4.190340578680934E-6	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9999969198306553	WITHOUT_CLASSIFICATION	3.0801693447541663E-6	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9999958373757777	WITHOUT_CLASSIFICATION	4.162624222357622E-6	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9999960221424862	WITHOUT_CLASSIFICATION	3.977857513811731E-6	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9999956173211367	WITHOUT_CLASSIFICATION	4.3826788631843615E-6	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9999953365375676	WITHOUT_CLASSIFICATION	4.663462432434587E-6	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9999961490190121	WITHOUT_CLASSIFICATION	3.850980987930285E-6	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9999982923453048	WITHOUT_CLASSIFICATION	1.7076546952644198E-6	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9999985533886926	WITHOUT_CLASSIFICATION	1.4466113073824876E-6	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9999984181001235	WITHOUT_CLASSIFICATION	1.5818998765894234E-6	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9999983199904127	WITHOUT_CLASSIFICATION	1.6800095872519785E-6	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9999984563711171	WITHOUT_CLASSIFICATION	1.5436288829620739E-6	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9999984258037888	WITHOUT_CLASSIFICATION	1.5741962111661993E-6	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9999981351763241	WITHOUT_CLASSIFICATION	1.864823675936471E-6	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9999983172366225	WITHOUT_CLASSIFICATION	1.6827633775325015E-6	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9999980974342966	WITHOUT_CLASSIFICATION	1.9025657035054347E-6	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9999982154213091	WITHOUT_CLASSIFICATION	1.7845786909504326E-6	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.999998244375501	WITHOUT_CLASSIFICATION	1.7556244990875858E-6	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999970489516703	WITHOUT_CLASSIFICATION	2.9510483297261657E-6	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999976580447426	WITHOUT_CLASSIFICATION	2.3419552573310264E-6	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.999998400420884	WITHOUT_CLASSIFICATION	1.599579115981877E-6	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999984677365586	WITHOUT_CLASSIFICATION	1.5322634413490773E-6	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999974466708681	WITHOUT_CLASSIFICATION	2.5533291318382315E-6	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999986677418164	WITHOUT_CLASSIFICATION	1.3322581835242058E-6	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999982898562163	WITHOUT_CLASSIFICATION	1.7101437837465768E-6	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999978621475293	WITHOUT_CLASSIFICATION	2.137852470630911E-6	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999979379414108	WITHOUT_CLASSIFICATION	2.0620585892117372E-6	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999977256221645	WITHOUT_CLASSIFICATION	2.2743778355133498E-6	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9999981680947615	WITHOUT_CLASSIFICATION	1.8319052385128E-6	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9999983894420076	WITHOUT_CLASSIFICATION	1.6105579923158312E-6	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9999980972762624	WITHOUT_CLASSIFICATION	1.9027237374959656E-6	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9999983302057265	WITHOUT_CLASSIFICATION	1.6697942734821809E-6	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9999982379205046	WITHOUT_CLASSIFICATION	1.7620794954151902E-6	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9999973902031533	WITHOUT_CLASSIFICATION	2.6097968467787043E-6	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9999971044646702	WITHOUT_CLASSIFICATION	2.895535329960519E-6	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9999973045517161	WITHOUT_CLASSIFICATION	2.6954482839170194E-6	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9999979348975956	WITHOUT_CLASSIFICATION	2.0651024044051013E-6	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9999976523260824	WITHOUT_CLASSIFICATION	2.347673917613247E-6	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9999974535055747	WITHOUT_CLASSIFICATION	2.5464944253649277E-6	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9999973465195088	WITHOUT_CLASSIFICATION	2.653480491288271E-6	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9999973510649185	WITHOUT_CLASSIFICATION	2.6489350815856808E-6	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.999997241374021	WITHOUT_CLASSIFICATION	2.7586259789683773E-6	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9999976311478282	WITHOUT_CLASSIFICATION	2.36885217178335E-6	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.999997374886306	WITHOUT_CLASSIFICATION	2.6251136939569093E-6	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.999997141685771	WITHOUT_CLASSIFICATION	2.858314229077069E-6	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9999977654906673	WITHOUT_CLASSIFICATION	2.234509332627167E-6	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9999981975106433	WITHOUT_CLASSIFICATION	1.8024893565905758E-6	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.999997046087946	WITHOUT_CLASSIFICATION	2.9539120538579827E-6	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9999978962998001	WITHOUT_CLASSIFICATION	2.1037002000183774E-6	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9999976656156745	WITHOUT_CLASSIFICATION	2.334384325543044E-6	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9999980901646442	WITHOUT_CLASSIFICATION	1.9098353557106716E-6	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9999981160565705	WITHOUT_CLASSIFICATION	1.8839434294136652E-6	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9999979524092706	WITHOUT_CLASSIFICATION	2.047590729393207E-6	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9999980945307186	WITHOUT_CLASSIFICATION	1.9054692813510762E-6	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9999979941081745	WITHOUT_CLASSIFICATION	2.0058918255159685E-6	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9999980093934164	WITHOUT_CLASSIFICATION	1.9906065835832553E-6	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9999986667882553	WITHOUT_CLASSIFICATION	1.3332117447459284E-6	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9999979371019838	WITHOUT_CLASSIFICATION	2.062898016080747E-6	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9999977722689473	WITHOUT_CLASSIFICATION	2.227731052723702E-6	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9999977534222533	WITHOUT_CLASSIFICATION	2.2465777467228365E-6	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9999978302846871	WITHOUT_CLASSIFICATION	2.1697153128251425E-6	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9999979138134548	WITHOUT_CLASSIFICATION	2.0861865452207895E-6	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9999977175704126	WITHOUT_CLASSIFICATION	2.282429587396999E-6	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9999979112368264	WITHOUT_CLASSIFICATION	2.088763173680441E-6	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9999978385088704	WITHOUT_CLASSIFICATION	2.1614911296808712E-6	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9999983554193637	WITHOUT_CLASSIFICATION	1.6445806362959664E-6	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999977771518775	WITHOUT_CLASSIFICATION	2.2228481224197997E-6	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999973399985468	WITHOUT_CLASSIFICATION	2.660001453192669E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999977594219922	WITHOUT_CLASSIFICATION	2.2405780078458705E-6	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999974617356405	WITHOUT_CLASSIFICATION	2.538264359413887E-6	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999978699800727	WITHOUT_CLASSIFICATION	2.1300199273185334E-6	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999984271102438	WITHOUT_CLASSIFICATION	1.572889756295686E-6	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999973795110946	WITHOUT_CLASSIFICATION	2.6204889055102476E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999984844097021	WITHOUT_CLASSIFICATION	1.5155902979372365E-6	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999972948210597	WITHOUT_CLASSIFICATION	2.705178940317243E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999974573643875	WITHOUT_CLASSIFICATION	2.542635612469779E-6	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9999982862994687	WITHOUT_CLASSIFICATION	1.7137005311889077E-6	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9999972974500583	WITHOUT_CLASSIFICATION	2.7025499417237636E-6	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9999972275965509	WITHOUT_CLASSIFICATION	2.7724034492330125E-6	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9999978279008593	WITHOUT_CLASSIFICATION	2.172099140687536E-6	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9999977646843666	WITHOUT_CLASSIFICATION	2.2353156333168656E-6	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9999977651454026	WITHOUT_CLASSIFICATION	2.2348545974001675E-6	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9999971436389765	WITHOUT_CLASSIFICATION	2.8563610235779213E-6	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.999998044475632	WITHOUT_CLASSIFICATION	1.9555243679603437E-6	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9999979583072568	WITHOUT_CLASSIFICATION	2.0416927431026883E-6	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9999978094045406	WITHOUT_CLASSIFICATION	2.190595459286706E-6	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9999975790558916	WITHOUT_CLASSIFICATION	2.420944108494177E-6	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9999973445555004	WITHOUT_CLASSIFICATION	2.6554444994992766E-6	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9999973422518151	WITHOUT_CLASSIFICATION	2.6577481847804463E-6	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9999973114936762	WITHOUT_CLASSIFICATION	2.6885063237148716E-6	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9999971990471596	WITHOUT_CLASSIFICATION	2.8009528405000154E-6	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9999974470676964	WITHOUT_CLASSIFICATION	2.5529323035317475E-6	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9999972717558403	WITHOUT_CLASSIFICATION	2.7282441597819713E-6	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9999983294127913	WITHOUT_CLASSIFICATION	1.6705872086300135E-6	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9999982842840527	WITHOUT_CLASSIFICATION	1.7157159473719973E-6	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9999973365635059	WITHOUT_CLASSIFICATION	2.6634364940378673E-6	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9999978080187273	WITHOUT_CLASSIFICATION	2.1919812727118645E-6	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.9999977182825173	WITHOUT_CLASSIFICATION	2.281717482708222E-6	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9999985884809244	WITHOUT_CLASSIFICATION	1.4115190756064491E-6	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9999975755250238	WITHOUT_CLASSIFICATION	2.424474976226273E-6	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9999976439778541	WITHOUT_CLASSIFICATION	2.356022146066051E-6	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9999977669311858	WITHOUT_CLASSIFICATION	2.2330688141270427E-6	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9999976026159972	WITHOUT_CLASSIFICATION	2.397384002807561E-6	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9999977759034591	WITHOUT_CLASSIFICATION	2.224096541026933E-6	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.999997429283519	WITHOUT_CLASSIFICATION	2.5707164810651544E-6	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9999975837534187	WITHOUT_CLASSIFICATION	2.4162465813039956E-6	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9999975545203089	WITHOUT_CLASSIFICATION	2.4454796910101337E-6	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9999979862160464	WITHOUT_CLASSIFICATION	2.013783953604722E-6	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9999973245318755	WITHOUT_CLASSIFICATION	2.675468124619773E-6	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9999979781856722	WITHOUT_CLASSIFICATION	2.021814327761696E-6	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9999977011413206	WITHOUT_CLASSIFICATION	2.298858679385392E-6	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9999979615407802	WITHOUT_CLASSIFICATION	2.0384592196674167E-6	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9999970557601117	WITHOUT_CLASSIFICATION	2.9442398882614985E-6	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9999974791678032	WITHOUT_CLASSIFICATION	2.520832196848073E-6	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.999997313935384	WITHOUT_CLASSIFICATION	2.6860646158912443E-6	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999973529680846	WITHOUT_CLASSIFICATION	2.6470319154694016E-6	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999976333099837	WITHOUT_CLASSIFICATION	2.366690016347809E-6	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999978481170629	WITHOUT_CLASSIFICATION	2.1518829369827306E-6	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.999998250238751	WITHOUT_CLASSIFICATION	1.7497612489477723E-6	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999971733816612	WITHOUT_CLASSIFICATION	2.8266183388376017E-6	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999978097715722	WITHOUT_CLASSIFICATION	2.190228427899195E-6	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999978714177289	WITHOUT_CLASSIFICATION	2.1285822711916277E-6	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999974154700633	WITHOUT_CLASSIFICATION	2.5845299367987056E-6	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999972945297165	WITHOUT_CLASSIFICATION	2.705470283460176E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999977711845616	WITHOUT_CLASSIFICATION	2.2288154384696303E-6	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9999978452493784	WITHOUT_CLASSIFICATION	2.1547506215670064E-6	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9999983162780038	WITHOUT_CLASSIFICATION	1.6837219961306119E-6	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9999976295836052	WITHOUT_CLASSIFICATION	2.3704163949165262E-6	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9999977951050089	WITHOUT_CLASSIFICATION	2.2048949911926653E-6	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9999973666049422	WITHOUT_CLASSIFICATION	2.6333950578287335E-6	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9999973821471416	WITHOUT_CLASSIFICATION	2.6178528584539273E-6	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9999973233958587	WITHOUT_CLASSIFICATION	2.6766041413413255E-6	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9999974555358264	WITHOUT_CLASSIFICATION	2.5444641736073805E-6	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9999972168534272	WITHOUT_CLASSIFICATION	2.783146572742927E-6	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9999983063549471	WITHOUT_CLASSIFICATION	1.6936450528168408E-6	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9999974070418499	WITHOUT_CLASSIFICATION	2.592958150091279E-6	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9999974574270775	WITHOUT_CLASSIFICATION	2.542572922607794E-6	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.9999983729559728	WITHOUT_CLASSIFICATION	1.627044027171475E-6	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9999971348830746	WITHOUT_CLASSIFICATION	2.865116925319801E-6	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9999970844530018	WITHOUT_CLASSIFICATION	2.915546998037529E-6	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9999976459945825	WITHOUT_CLASSIFICATION	2.3540054175720508E-6	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9999973713910182	WITHOUT_CLASSIFICATION	2.6286089817888956E-6	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9999977337840777	WITHOUT_CLASSIFICATION	2.2662159221842203E-6	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9999975199817797	WITHOUT_CLASSIFICATION	2.480018220292143E-6	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9999974798038662	WITHOUT_CLASSIFICATION	2.520196133745218E-6	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9999974648132021	WITHOUT_CLASSIFICATION	2.5351867978348015E-6	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9999975442229517	WITHOUT_CLASSIFICATION	2.455777048315176E-6	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9999971659322888	WITHOUT_CLASSIFICATION	2.8340677111706564E-6	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9999970815170208	WITHOUT_CLASSIFICATION	2.9184829791178103E-6	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9999971754478963	WITHOUT_CLASSIFICATION	2.824552103595776E-6	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9999977755040986	WITHOUT_CLASSIFICATION	2.2244959013549635E-6	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9999975702261751	WITHOUT_CLASSIFICATION	2.429773824854824E-6	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9999973218890351	WITHOUT_CLASSIFICATION	2.6781109648733212E-6	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.99999713367444	WITHOUT_CLASSIFICATION	2.8663255600022137E-6	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9999969791110795	WITHOUT_CLASSIFICATION	3.0208889204364945E-6	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9999984640673714	WITHOUT_CLASSIFICATION	1.5359326287251885E-6	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9999983545562555	WITHOUT_CLASSIFICATION	1.645443744428484E-6	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.99999822318859	WITHOUT_CLASSIFICATION	1.7768114100065382E-6	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9999982116619334	WITHOUT_CLASSIFICATION	1.7883380666177298E-6	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9999975436753968	WITHOUT_CLASSIFICATION	2.4563246030887048E-6	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9999979269536436	WITHOUT_CLASSIFICATION	2.073046356443902E-6	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9999977624816617	WITHOUT_CLASSIFICATION	2.2375183383490707E-6	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.9999975647274457	WITHOUT_CLASSIFICATION	2.4352725542277934E-6	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9999974828561752	WITHOUT_CLASSIFICATION	2.517143824804586E-6	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9959122289817668	WITHOUT_CLASSIFICATION	0.004087771018233179	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9962066556000534	WITHOUT_CLASSIFICATION	0.0037933443999466467	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999996004471735	WITHOUT_CLASSIFICATION	3.9955282659093575E-7	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999957464285255	WITHOUT_CLASSIFICATION	4.253571474508766E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9985185256916441	WITHOUT_CLASSIFICATION	0.001481474308355882	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.999886428355214	WITHOUT_CLASSIFICATION	1.1357164478603225E-4	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998997654660028	WITHOUT_CLASSIFICATION	1.0023453399721392E-4	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999902712871711	WITHOUT_CLASSIFICATION	9.728712828856037E-6	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.999997807024048	WITHOUT_CLASSIFICATION	2.19297595210874E-6	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9999973806781696	WITHOUT_CLASSIFICATION	2.6193218304940335E-6	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9999978109736173	WITHOUT_CLASSIFICATION	2.1890263826772383E-6	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9999972051696657	WITHOUT_CLASSIFICATION	2.7948303342366954E-6	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9999973569777951	WITHOUT_CLASSIFICATION	2.6430222048168417E-6	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9999973787285952	WITHOUT_CLASSIFICATION	2.6212714046926458E-6	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9999982777133233	WITHOUT_CLASSIFICATION	1.722286676695885E-6	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9999981455208382	WITHOUT_CLASSIFICATION	1.8544791618686798E-6	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9999970137416082	WITHOUT_CLASSIFICATION	2.9862583918283652E-6	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9999972554651584	WITHOUT_CLASSIFICATION	2.744534841607002E-6	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9999975177060987	WITHOUT_CLASSIFICATION	2.4822939013429295E-6	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9999974024640286	WITHOUT_CLASSIFICATION	2.5975359713242805E-6	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.9999977705567247	WITHOUT_CLASSIFICATION	2.229443275250598E-6	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9999974657345994	WITHOUT_CLASSIFICATION	2.534265400551425E-6	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9999982481400103	WITHOUT_CLASSIFICATION	1.751859989838767E-6	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9999973178787549	WITHOUT_CLASSIFICATION	2.682121245233503E-6	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9999972142572077	WITHOUT_CLASSIFICATION	2.7857427923034628E-6	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9999975367613948	WITHOUT_CLASSIFICATION	2.4632386051029566E-6	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9999976307882564	WITHOUT_CLASSIFICATION	2.3692117435485064E-6	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9999972427139341	WITHOUT_CLASSIFICATION	2.757286065904675E-6	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.999998101104608	WITHOUT_CLASSIFICATION	1.8988953921040255E-6	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9999978765711295	WITHOUT_CLASSIFICATION	2.123428870442239E-6	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9999985595092115	WITHOUT_CLASSIFICATION	1.4404907884912394E-6	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999812457321101	WITHOUT_CLASSIFICATION	1.8754267889927127E-5	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999806237130219	WITHOUT_CLASSIFICATION	1.9376286978119635E-5	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999998955838032	WITHOUT_CLASSIFICATION	1.0441619675156371E-7	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999908417627896	WITHOUT_CLASSIFICATION	9.158237210273301E-6	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999997756504245	WITHOUT_CLASSIFICATION	2.2434957544152073E-7	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9998985573018947	WITHOUT_CLASSIFICATION	1.0144269810529652E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999652798609	WITHOUT_CLASSIFICATION	3.4720139147590485E-8	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999994605835097	WITHOUT_CLASSIFICATION	5.394164902589321E-7	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999996198689202	WITHOUT_CLASSIFICATION	3.8013107980399293E-7	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999996198689202	WITHOUT_CLASSIFICATION	3.8013107980399293E-7	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999925491449967	WITHOUT_CLASSIFICATION	7.450855003247689E-6	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999952677008718	WITHOUT_CLASSIFICATION	4.732299128250653E-6	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999999960638081	WITHOUT_CLASSIFICATION	3.936192017575334E-9	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999990689317544	WITHOUT_CLASSIFICATION	9.310682456406455E-7	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999999889479374	WITHOUT_CLASSIFICATION	1.105206265066328E-8	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999792516283467	WITHOUT_CLASSIFICATION	2.074837165337378E-5	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9998571995589033	WITHOUT_CLASSIFICATION	1.4280044109670845E-4	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999961044833454	WITHOUT_CLASSIFICATION	3.895516654587575E-6	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999991855735655	WITHOUT_CLASSIFICATION	8.144264343951279E-7	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999852212313542	WITHOUT_CLASSIFICATION	1.4778768645739813E-5	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999052027179961	WITHOUT_CLASSIFICATION	9.479728200382683E-5	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9998338316655699	WITHOUT_CLASSIFICATION	1.661683344301412E-4	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999991691516664	WITHOUT_CLASSIFICATION	8.308483334333426E-7	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999999606136643	WITHOUT_CLASSIFICATION	3.938633572086126E-8	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999759507921951	WITHOUT_CLASSIFICATION	2.4049207804828358E-5	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999759507921951	WITHOUT_CLASSIFICATION	2.4049207804828358E-5	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999957621188131	WITHOUT_CLASSIFICATION	4.237881186833109E-6	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999998618900675	WITHOUT_CLASSIFICATION	1.3810993245559253E-7	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999999266534012	WITHOUT_CLASSIFICATION	7.334659884787523E-8	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999832765370261	WITHOUT_CLASSIFICATION	1.6723462973920695E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996491182134	WITHOUT_CLASSIFICATION	3.508817866219649E-7	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999990816774693	WITHOUT_CLASSIFICATION	9.183225306680062E-7	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999944063209667	WITHOUT_CLASSIFICATION	5.593679033360713E-6	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999990816774693	WITHOUT_CLASSIFICATION	9.183225306680062E-7	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999992106886825	WITHOUT_CLASSIFICATION	7.893113176639502E-7	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999991090537546	WITHOUT_CLASSIFICATION	8.909462454573969E-7	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9999786174038208	WITHOUT_CLASSIFICATION	2.1382596179159547E-5	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9999549905990691	WITHOUT_CLASSIFICATION	4.500940093078773E-5	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999983535342596	WITHOUT_CLASSIFICATION	1.6464657403544192E-6	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999987543328237	WITHOUT_CLASSIFICATION	1.2456671762271822E-6	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9974639923164719	WITHOUT_CLASSIFICATION	0.00253600768352822	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999933993055852	WITHOUT_CLASSIFICATION	6.600694414793001E-6	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999994123906093	WITHOUT_CLASSIFICATION	5.876093907027654E-7	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999985543430692	WITHOUT_CLASSIFICATION	1.4456569309283788E-6	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999999790857107	WITHOUT_CLASSIFICATION	2.0914289377182674E-8	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999997045170607	WITHOUT_CLASSIFICATION	2.9548293938011706E-7	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999970976359237	WITHOUT_CLASSIFICATION	2.9023640762724224E-6	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9995200994962952	WITHOUT_CLASSIFICATION	4.799005037047935E-4	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.999999916116591	WITHOUT_CLASSIFICATION	8.388340894661834E-8	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.999999916116591	WITHOUT_CLASSIFICATION	8.388340894661834E-8	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999980961086373	WITHOUT_CLASSIFICATION	1.9038913626903063E-6	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999965657493298	WITHOUT_CLASSIFICATION	3.434250670135823E-6	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999941795083768	WITHOUT_CLASSIFICATION	5.820491623216901E-6	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999999850296948	WITHOUT_CLASSIFICATION	1.497030518192912E-8	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9999999152019506	WITHOUT_CLASSIFICATION	8.47980492918104E-8	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999990816774693	WITHOUT_CLASSIFICATION	9.183225306680062E-7	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999997311768712	WITHOUT_CLASSIFICATION	2.688231287217116E-7	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999415340183	WITHOUT_CLASSIFICATION	5.84659817134619E-8	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999980232383784	WITHOUT_CLASSIFICATION	1.9767616215866083E-6	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999997463813505	WITHOUT_CLASSIFICATION	2.536186495454583E-7	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999964337987	WITHOUT_CLASSIFICATION	3.5662013586388737E-9	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9995023310860154	WITHOUT_CLASSIFICATION	4.976689139846313E-4	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999509333816018	WITHOUT_CLASSIFICATION	4.906661839827004E-5	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999987266998228	WITHOUT_CLASSIFICATION	1.2733001771607957E-6	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999968610054918	WITHOUT_CLASSIFICATION	3.138994508126529E-6	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9998737828437074	WITHOUT_CLASSIFICATION	1.2621715629260207E-4	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999676011700169	WITHOUT_CLASSIFICATION	3.2398829982990604E-5	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999997111767756	WITHOUT_CLASSIFICATION	2.8882322443823823E-7	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999999856880966	WITHOUT_CLASSIFICATION	1.4311903468465883E-8	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999963442806459	WITHOUT_CLASSIFICATION	3.6557193541353284E-6	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9998577050902007	WITHOUT_CLASSIFICATION	1.4229490979923254E-4	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999995002568327	WITHOUT_CLASSIFICATION	4.997431674023438E-7	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999996571747215	WITHOUT_CLASSIFICATION	3.428252784605129E-7	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9999992438883116	WITHOUT_CLASSIFICATION	7.561116883301385E-7	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.999980843637226	WITHOUT_CLASSIFICATION	1.9156362773996767E-5	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9997256720686338	WITHOUT_CLASSIFICATION	2.743279313662322E-4	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999945812974758	WITHOUT_CLASSIFICATION	5.4187025242247845E-6	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.999992138119018	WITHOUT_CLASSIFICATION	7.861880981996994E-6	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999995866364099	WITHOUT_CLASSIFICATION	4.133635901295126E-7	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999996679810166	WITHOUT_CLASSIFICATION	3.3201898340596166E-7	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.999999738581503	WITHOUT_CLASSIFICATION	2.6141849696087636E-7	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999998199723732	WITHOUT_CLASSIFICATION	1.8002762678521513E-7	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999993778378301	WITHOUT_CLASSIFICATION	6.221621698639486E-7	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999990876913453	WITHOUT_CLASSIFICATION	9.123086548162819E-7	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999772665239324	WITHOUT_CLASSIFICATION	2.2733476067619754E-5	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999996828329497	WITHOUT_CLASSIFICATION	3.171670502732264E-7	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999991728024544	WITHOUT_CLASSIFICATION	8.271975457224184E-7	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9999974967897062	WITHOUT_CLASSIFICATION	2.503210293872714E-6	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999994347818076	WITHOUT_CLASSIFICATION	5.652181923704282E-7	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999998297824411	WITHOUT_CLASSIFICATION	1.7021755900295774E-7	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999511069156731	WITHOUT_CLASSIFICATION	4.889308432680942E-5	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999989459824369	WITHOUT_CLASSIFICATION	1.0540175631073996E-6	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999977103397452	WITHOUT_CLASSIFICATION	2.2896602547923895E-6	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9999983436967497	WITHOUT_CLASSIFICATION	1.656303250389867E-6	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9999994366138245	WITHOUT_CLASSIFICATION	5.633861755050996E-7	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999998950766273	WITHOUT_CLASSIFICATION	1.0492337266754823E-7	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999902712871711	WITHOUT_CLASSIFICATION	9.728712828856037E-6	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999428470640546	WITHOUT_CLASSIFICATION	5.715293594533116E-5	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999959052899394	WITHOUT_CLASSIFICATION	4.0947100605848166E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999660153929449	WITHOUT_CLASSIFICATION	3.398460705512924E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999995427064525	WITHOUT_CLASSIFICATION	4.572935475538832E-7	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999991090537546	WITHOUT_CLASSIFICATION	8.909462454573969E-7	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999827950304352	WITHOUT_CLASSIFICATION	1.7204969564811094E-5	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999996435241153	WITHOUT_CLASSIFICATION	3.5647588465000384E-7	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.99999992820906	WITHOUT_CLASSIFICATION	7.179093999766942E-8	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999843445751929	WITHOUT_CLASSIFICATION	1.565542480707321E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999843445751929	WITHOUT_CLASSIFICATION	1.565542480707321E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999867628236975	WITHOUT_CLASSIFICATION	1.3237176302534016E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999867628236975	WITHOUT_CLASSIFICATION	1.3237176302534016E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999867628236975	WITHOUT_CLASSIFICATION	1.3237176302534016E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999749853143804	WITHOUT_CLASSIFICATION	2.5014685619553747E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999749853143804	WITHOUT_CLASSIFICATION	2.5014685619553747E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999957662504104	WITHOUT_CLASSIFICATION	4.2337495895008345E-6	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999957662504104	WITHOUT_CLASSIFICATION	4.2337495895008345E-6	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999990867670195	WITHOUT_CLASSIFICATION	9.132329803519066E-7	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999988297905582	WITHOUT_CLASSIFICATION	1.1702094417664578E-6	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999992543968396	WITHOUT_CLASSIFICATION	7.456031603313281E-7	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999992543968396	WITHOUT_CLASSIFICATION	7.456031603313281E-7	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.999999985762532	WITHOUT_CLASSIFICATION	1.4237467835723329E-8	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.99999933210638	WITHOUT_CLASSIFICATION	6.678936200337092E-7	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999997358344165	WITHOUT_CLASSIFICATION	2.6416558349054694E-7	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999997399987224	WITHOUT_CLASSIFICATION	2.6000127770675627E-7	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999988639274792	WITHOUT_CLASSIFICATION	1.136072520868565E-6	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999998795885633	WITHOUT_CLASSIFICATION	1.204114367346293E-7	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999996909472063	WITHOUT_CLASSIFICATION	3.0905279366212597E-7	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999995736095473	WITHOUT_CLASSIFICATION	4.263904527837352E-7	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9999995719473311	WITHOUT_CLASSIFICATION	4.280526689163656E-7	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9999682734736617	WITHOUT_CLASSIFICATION	3.172652633831584E-5	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999998128553746	WITHOUT_CLASSIFICATION	1.871446253956268E-7	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9999995900471327	WITHOUT_CLASSIFICATION	4.099528672205511E-7	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9999979153373778	WITHOUT_CLASSIFICATION	2.0846626221318287E-6	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9999974930883887	WITHOUT_CLASSIFICATION	2.506911611224658E-6	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999996939110516	WITHOUT_CLASSIFICATION	3.0608894849469483E-7	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999867380011505	WITHOUT_CLASSIFICATION	1.3261998849635785E-5	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9945547197511709	WITHOUT_CLASSIFICATION	0.0054452802488289655	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.999964759102783	WITHOUT_CLASSIFICATION	3.52408972169531E-5	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999955198782505	WITHOUT_CLASSIFICATION	4.480121749572457E-6	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999790565337416	WITHOUT_CLASSIFICATION	2.0943466258406293E-5	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999928321304529	WITHOUT_CLASSIFICATION	7.1678695471428294E-6	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.99998889165466	WITHOUT_CLASSIFICATION	1.1108345340096986E-5	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9999983319499269	WITHOUT_CLASSIFICATION	1.6680500731476514E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.999999970330675	WITHOUT_CLASSIFICATION	2.9669325116466597E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999273266728	WITHOUT_CLASSIFICATION	7.267332717374688E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999692862376	WITHOUT_CLASSIFICATION	3.0713762375151637E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999811539908	WITHOUT_CLASSIFICATION	1.8846009176987503E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999999960758592	WITHOUT_CLASSIFICATION	3.924140793932589E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999657916775	WITHOUT_CLASSIFICATION	3.420832246580797E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999162086571	WITHOUT_CLASSIFICATION	8.379134289398746E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999645874558	WITHOUT_CLASSIFICATION	3.541254420770039E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998994568896	WITHOUT_CLASSIFICATION	1.0054311048750394E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997537253853	WITHOUT_CLASSIFICATION	2.4627461474880614E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999092496357	WITHOUT_CLASSIFICATION	9.075036434543592E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997537253853	WITHOUT_CLASSIFICATION	2.4627461474880614E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997537253853	WITHOUT_CLASSIFICATION	2.4627461474880614E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997537253853	WITHOUT_CLASSIFICATION	2.4627461474880614E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997537253853	WITHOUT_CLASSIFICATION	2.4627461474880614E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997537253853	WITHOUT_CLASSIFICATION	2.4627461474880614E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997537253853	WITHOUT_CLASSIFICATION	2.4627461474880614E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999092496357	WITHOUT_CLASSIFICATION	9.075036434543592E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999092496357	WITHOUT_CLASSIFICATION	9.075036434543592E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999092496357	WITHOUT_CLASSIFICATION	9.075036434543592E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999092496357	WITHOUT_CLASSIFICATION	9.075036434543592E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999092496357	WITHOUT_CLASSIFICATION	9.075036434543592E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999092496357	WITHOUT_CLASSIFICATION	9.075036434543592E-8	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.999992021762827	WITHOUT_CLASSIFICATION	7.978237173012118E-6	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999987614892412	WITHOUT_CLASSIFICATION	1.238510758949571E-6	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999767839305154	WITHOUT_CLASSIFICATION	2.3216069484577135E-5	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999999703114427	WITHOUT_CLASSIFICATION	2.9688557301699327E-7	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999999891651765	WITHOUT_CLASSIFICATION	1.0834823443658319E-8	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998331719178	WITHOUT_CLASSIFICATION	1.668280822547655E-7	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999986835278185	WITHOUT_CLASSIFICATION	1.3164721814398598E-6	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999999940506423	WITHOUT_CLASSIFICATION	5.949357678120623E-9	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999933043453391	WITHOUT_CLASSIFICATION	6.695654660969946E-6	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999726776512304	WITHOUT_CLASSIFICATION	2.732234876952169E-5	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9792087347011167	WITHOUT_CLASSIFICATION	0.02079126529888331	IMPLEMENTATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999990325033	WITHOUT_CLASSIFICATION	9.674967940690584E-10	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999962568531086	WITHOUT_CLASSIFICATION	3.7431468913969287E-6	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999978283005	WITHOUT_CLASSIFICATION	2.1716994719683997E-9	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999993724364493	WITHOUT_CLASSIFICATION	6.275635507250728E-7	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999993704614398	WITHOUT_CLASSIFICATION	6.295385602956065E-7	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999987010271052	WITHOUT_CLASSIFICATION	1.2989728948240226E-6	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.999999924229444	WITHOUT_CLASSIFICATION	7.57705560154402E-8	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999998617505546	WITHOUT_CLASSIFICATION	1.3824944542238125E-7	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999999667200772	WITHOUT_CLASSIFICATION	3.3279922925803033E-8	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999999942391575	WITHOUT_CLASSIFICATION	5.760842397645538E-9	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999989816983917	WITHOUT_CLASSIFICATION	1.0183016082073475E-6	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999944063209667	WITHOUT_CLASSIFICATION	5.593679033360713E-6	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999999880827811	WITHOUT_CLASSIFICATION	1.1917218963580077E-8	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999994873596424	WITHOUT_CLASSIFICATION	5.126403574974106E-7	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999999960022172	WITHOUT_CLASSIFICATION	3.997782733356756E-9	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999989204705	WITHOUT_CLASSIFICATION	1.0795295100638618E-9	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.999982171343898	WITHOUT_CLASSIFICATION	1.782865610205835E-5	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.9999854633015527	WITHOUT_CLASSIFICATION	1.4536698447388478E-5	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999999980675206	WITHOUT_CLASSIFICATION	1.9324794260473444E-9	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.9999948407990203	WITHOUT_CLASSIFICATION	5.15920097963876E-6	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999999691545333	WITHOUT_CLASSIFICATION	3.084546680232692E-8	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999999994664551	WITHOUT_CLASSIFICATION	5.335448698257358E-10	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9999999506308764	WITHOUT_CLASSIFICATION	4.9369123518627414E-8	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999997436535383	WITHOUT_CLASSIFICATION	2.5634646173233904E-7	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.999996944008692	WITHOUT_CLASSIFICATION	3.0559913081028923E-6	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999895274319757	WITHOUT_CLASSIFICATION	1.0472568024339788E-5	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999999405832133	WITHOUT_CLASSIFICATION	5.941678666197964E-8	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999299500903	WITHOUT_CLASSIFICATION	7.004990967396145E-8	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999999965439025	WITHOUT_CLASSIFICATION	3.456097457245501E-9	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999989733781584	WITHOUT_CLASSIFICATION	1.026621841634041E-6	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999996283525686	WITHOUT_CLASSIFICATION	3.716474312829887E-7	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999999993296972	WITHOUT_CLASSIFICATION	6.703027856390291E-10	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999999797052579	WITHOUT_CLASSIFICATION	2.0294742062285547E-8	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999999797052579	WITHOUT_CLASSIFICATION	2.0294742062285547E-8	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999996216422072	WITHOUT_CLASSIFICATION	3.783577927660877E-7	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999996216422072	WITHOUT_CLASSIFICATION	3.783577927660877E-7	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999998559763572	WITHOUT_CLASSIFICATION	1.4402364279377818E-7	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999998559763572	WITHOUT_CLASSIFICATION	1.4402364279377818E-7	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999977183959	WITHOUT_CLASSIFICATION	2.2816040998983386E-6	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.999998204327507	WITHOUT_CLASSIFICATION	1.7956724930166957E-6	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999999791941253	WITHOUT_CLASSIFICATION	2.0805874672143518E-8	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.999999999224829	WITHOUT_CLASSIFICATION	7.751709863587408E-10	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999999847727051	WITHOUT_CLASSIFICATION	1.5227294841889044E-8	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999535823316891	WITHOUT_CLASSIFICATION	4.641766831100685E-5	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9999967221719621	WITHOUT_CLASSIFICATION	3.2778280380118056E-6	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999937276374	WITHOUT_CLASSIFICATION	6.2723626818732415E-9	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999999888134485	WITHOUT_CLASSIFICATION	1.1186551448118812E-8	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999999192565172	WITHOUT_CLASSIFICATION	8.07434828675242E-8	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999999523511887	WITHOUT_CLASSIFICATION	4.764881126713094E-8	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999995603257839	WITHOUT_CLASSIFICATION	4.3967421620796884E-7	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999999956642289	WITHOUT_CLASSIFICATION	4.335770977812462E-9	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999987978399401	WITHOUT_CLASSIFICATION	1.2021600600021507E-6	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999968910519843	WITHOUT_CLASSIFICATION	3.1089480156679395E-6	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9999998727173285	WITHOUT_CLASSIFICATION	1.2728267146188022E-7	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.999998287912292	WITHOUT_CLASSIFICATION	1.7120877080754304E-6	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999998731506264	WITHOUT_CLASSIFICATION	1.2684937351377594E-7	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999947048774245	WITHOUT_CLASSIFICATION	5.295122575565508E-6	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9999984807987973	WITHOUT_CLASSIFICATION	1.5192012027897872E-6	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9999977072939353	WITHOUT_CLASSIFICATION	2.2927060646153932E-6	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.999991888558466	WITHOUT_CLASSIFICATION	8.111441533963387E-6	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999992736874126	WITHOUT_CLASSIFICATION	7.263125872773545E-7	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999999212778	WITHOUT_CLASSIFICATION	7.872220000051703E-8	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999999664100737	WITHOUT_CLASSIFICATION	3.358992636150702E-8	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999999988003947	WITHOUT_CLASSIFICATION	1.1996053846417733E-9	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.999999498614165	WITHOUT_CLASSIFICATION	5.013858350579953E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999972669119664	WITHOUT_CLASSIFICATION	2.73308803357665E-6	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999972669119664	WITHOUT_CLASSIFICATION	2.73308803357665E-6	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999972669119664	WITHOUT_CLASSIFICATION	2.73308803357665E-6	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9995135672598605	WITHOUT_CLASSIFICATION	4.8643274013945436E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9995135672598605	WITHOUT_CLASSIFICATION	4.8643274013945436E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999963442806459	WITHOUT_CLASSIFICATION	3.6557193541353284E-6	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999963442806459	WITHOUT_CLASSIFICATION	3.6557193541353284E-6	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999997729769475	WITHOUT_CLASSIFICATION	2.2702305239944405E-7	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9960902597677134	WITHOUT_CLASSIFICATION	0.0039097402322865096	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999973647062861	WITHOUT_CLASSIFICATION	2.635293713875613E-6	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999998611961124	WITHOUT_CLASSIFICATION	1.3880388766238733E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999972669119664	WITHOUT_CLASSIFICATION	2.73308803357665E-6	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999972669119664	WITHOUT_CLASSIFICATION	2.73308803357665E-6	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999972669119664	WITHOUT_CLASSIFICATION	2.73308803357665E-6	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9995135672598605	WITHOUT_CLASSIFICATION	4.8643274013945436E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9995135672598605	WITHOUT_CLASSIFICATION	4.8643274013945436E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9995135672598605	WITHOUT_CLASSIFICATION	4.8643274013945436E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999963442806459	WITHOUT_CLASSIFICATION	3.6557193541353284E-6	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999963442806459	WITHOUT_CLASSIFICATION	3.6557193541353284E-6	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999999774677307	WITHOUT_CLASSIFICATION	2.2532269323101197E-8	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999937809749856	WITHOUT_CLASSIFICATION	6.219025014348071E-6	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999994826708397	WITHOUT_CLASSIFICATION	5.173291602267448E-7	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999994826708397	WITHOUT_CLASSIFICATION	5.173291602267448E-7	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999994826708397	WITHOUT_CLASSIFICATION	5.173291602267448E-7	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999994826708397	WITHOUT_CLASSIFICATION	5.173291602267448E-7	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999994826708397	WITHOUT_CLASSIFICATION	5.173291602267448E-7	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999974929615199	WITHOUT_CLASSIFICATION	2.5070384801352815E-6	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999997351458544	WITHOUT_CLASSIFICATION	2.6485414564628783E-7	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999243980658061	WITHOUT_CLASSIFICATION	7.560193419393958E-5	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999971635634285	WITHOUT_CLASSIFICATION	2.836436571553454E-6	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.999997047096024	WITHOUT_CLASSIFICATION	2.9529039759878774E-6	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999959455359618	WITHOUT_CLASSIFICATION	4.054464038238504E-6	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9969132651716409	WITHOUT_CLASSIFICATION	0.003086734828359034	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999996209451488	WITHOUT_CLASSIFICATION	3.790548511285492E-7	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999980068485319	WITHOUT_CLASSIFICATION	1.993151468067765E-6	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999943058307043	WITHOUT_CLASSIFICATION	5.694169295684182E-6	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999953257761299	WITHOUT_CLASSIFICATION	4.674223870096834E-6	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999998396528275	WITHOUT_CLASSIFICATION	1.6034717250687409E-7	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999850655919158	WITHOUT_CLASSIFICATION	1.4934408084088588E-5	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.999999561021973	WITHOUT_CLASSIFICATION	4.389780270449306E-7	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999990721539166	WITHOUT_CLASSIFICATION	9.27846083518834E-7	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999861770326789	WITHOUT_CLASSIFICATION	1.382296732105199E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999861770326789	WITHOUT_CLASSIFICATION	1.382296732105199E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999861770326789	WITHOUT_CLASSIFICATION	1.382296732105199E-5	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999999440253288	WITHOUT_CLASSIFICATION	5.597467123545944E-8	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999999440220808	WITHOUT_CLASSIFICATION	5.5977919280642335E-8	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.999995280363334	WITHOUT_CLASSIFICATION	4.719636666139935E-6	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999998699615453	WITHOUT_CLASSIFICATION	1.30038454737436E-7	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.999995416065482	WITHOUT_CLASSIFICATION	4.583934518063888E-6	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.999999808180372	WITHOUT_CLASSIFICATION	1.9181962799398083E-7	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999998199832193	WITHOUT_CLASSIFICATION	1.8001678071701412E-7	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9999997992861039	WITHOUT_CLASSIFICATION	2.007138960903301E-7	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999997970159832	WITHOUT_CLASSIFICATION	2.0298401692047615E-7	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999999295215308	WITHOUT_CLASSIFICATION	7.047846917033111E-8	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999999133409189	WITHOUT_CLASSIFICATION	8.665908110628066E-8	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999998871603126	WITHOUT_CLASSIFICATION	1.1283968732779374E-7	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999987471535323	WITHOUT_CLASSIFICATION	1.2528464676695878E-6	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9999995871379573	WITHOUT_CLASSIFICATION	4.128620426685945E-7	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9999995713986557	WITHOUT_CLASSIFICATION	4.286013444053276E-7	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999988896559687	WITHOUT_CLASSIFICATION	1.1103440313006278E-6	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999985824260123	WITHOUT_CLASSIFICATION	1.4175739877369366E-6	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999998315094323	WITHOUT_CLASSIFICATION	1.6849056758040528E-7	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9999994746078271	WITHOUT_CLASSIFICATION	5.253921728332543E-7	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999963596343722	WITHOUT_CLASSIFICATION	3.6403656278748277E-6	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999973486997659	WITHOUT_CLASSIFICATION	2.6513002342314146E-6	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999883688568344	WITHOUT_CLASSIFICATION	1.1631143165612955E-5	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9998285023858481	WITHOUT_CLASSIFICATION	1.7149761415196653E-4	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999998036671539	WITHOUT_CLASSIFICATION	1.9633284604825302E-7	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9999983824439324	WITHOUT_CLASSIFICATION	1.6175560676823818E-6	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.999998457170126	WITHOUT_CLASSIFICATION	1.5428298739486734E-6	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9999994984891935	WITHOUT_CLASSIFICATION	5.015108066475668E-7	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9999963066583336	WITHOUT_CLASSIFICATION	3.693341666394497E-6	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999729268513299	WITHOUT_CLASSIFICATION	2.707314867014788E-5	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9999975565099022	WITHOUT_CLASSIFICATION	2.4434900977783025E-6	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9999972071571793	WITHOUT_CLASSIFICATION	2.7928428206080795E-6	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.999996642057045	WITHOUT_CLASSIFICATION	3.3579429550459195E-6	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.9999971510947863	WITHOUT_CLASSIFICATION	2.8489052138236215E-6	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9999968457859978	WITHOUT_CLASSIFICATION	3.1542140022650544E-6	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9999961828893902	WITHOUT_CLASSIFICATION	3.8171106098131306E-6	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9999961893604207	WITHOUT_CLASSIFICATION	3.810639579228958E-6	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999995715634333	WITHOUT_CLASSIFICATION	4.284365665686305E-7	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999945970087317	WITHOUT_CLASSIFICATION	5.40299126831693E-6	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999999987397247	WITHOUT_CLASSIFICATION	1.2602752663073964E-9	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999903877202387	WITHOUT_CLASSIFICATION	9.612279761277062E-6	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999999154504853	WITHOUT_CLASSIFICATION	8.454951472441083E-8	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999997342403179	WITHOUT_CLASSIFICATION	2.657596821606782E-7	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9998728446684083	WITHOUT_CLASSIFICATION	1.2715533159165726E-4	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999953506283112	WITHOUT_CLASSIFICATION	4.649371688735072E-6	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999997954604213	WITHOUT_CLASSIFICATION	2.045395788294018E-7	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999983698036252	WITHOUT_CLASSIFICATION	1.630196374737394E-6	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9998127198210622	WITHOUT_CLASSIFICATION	1.872801789378516E-4	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9998127198210622	WITHOUT_CLASSIFICATION	1.872801789378516E-4	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999966931470466	WITHOUT_CLASSIFICATION	3.3068529533978856E-6	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999996481625371	WITHOUT_CLASSIFICATION	3.5183746286972936E-7	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999955613880106	WITHOUT_CLASSIFICATION	4.438611989323886E-6	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999877521427507	WITHOUT_CLASSIFICATION	1.2247857249262913E-5	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.999999668475287	WITHOUT_CLASSIFICATION	3.3152471291755203E-7	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.999996864378189	WITHOUT_CLASSIFICATION	3.135621810923601E-6	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999958164271998	WITHOUT_CLASSIFICATION	4.183572800122472E-6	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999933275767	WITHOUT_CLASSIFICATION	6.672423281825161E-9	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.999999954415851	WITHOUT_CLASSIFICATION	4.55841490003438E-8	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999999461268947	WITHOUT_CLASSIFICATION	5.387310546442557E-8	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999998856126646	WITHOUT_CLASSIFICATION	1.1438733534216268E-7	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999998856126646	WITHOUT_CLASSIFICATION	1.1438733534216268E-7	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999998856126646	WITHOUT_CLASSIFICATION	1.1438733534216268E-7	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999998856126646	WITHOUT_CLASSIFICATION	1.1438733534216268E-7	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9999965549028772	WITHOUT_CLASSIFICATION	3.445097122847601E-6	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9999963957399329	WITHOUT_CLASSIFICATION	3.604260067008963E-6	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9999983457445059	WITHOUT_CLASSIFICATION	1.6542554941884876E-6	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9999942399638055	WITHOUT_CLASSIFICATION	5.760036194477882E-6	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999912713621587	WITHOUT_CLASSIFICATION	8.728637841334407E-6	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999997852860553	WITHOUT_CLASSIFICATION	2.1471394460783427E-7	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999990679664212	WITHOUT_CLASSIFICATION	9.320335788075735E-7	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999961520381018	WITHOUT_CLASSIFICATION	3.847961898254743E-6	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999961520381018	WITHOUT_CLASSIFICATION	3.847961898254743E-6	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999991955457614	WITHOUT_CLASSIFICATION	8.044542385573398E-7	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999986659675768	WITHOUT_CLASSIFICATION	1.3340324231262537E-6	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999991431449725	WITHOUT_CLASSIFICATION	8.568550273940076E-7	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999865075959	WITHOUT_CLASSIFICATION	1.3492404114945024E-8	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999865075959	WITHOUT_CLASSIFICATION	1.3492404114945024E-8	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999999934044077	WITHOUT_CLASSIFICATION	6.595592293608449E-9	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.99997980443676	WITHOUT_CLASSIFICATION	2.0195563239953726E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.99997980443676	WITHOUT_CLASSIFICATION	2.0195563239953726E-5	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999998578653416	WITHOUT_CLASSIFICATION	1.421346583984035E-7	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999971043138196	WITHOUT_CLASSIFICATION	2.8956861803197803E-6	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.99999983316687	WITHOUT_CLASSIFICATION	1.668331299445312E-7	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999992418857089	WITHOUT_CLASSIFICATION	7.581142910681232E-7	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9998990465028337	WITHOUT_CLASSIFICATION	1.009534971663614E-4	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.99999999825764	WITHOUT_CLASSIFICATION	1.7423599835972E-9	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999999906405601	WITHOUT_CLASSIFICATION	9.3594398342207E-9	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9999818444211134	WITHOUT_CLASSIFICATION	1.8155578886612448E-5	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999999485774447	WITHOUT_CLASSIFICATION	5.142255536605656E-8	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.99999933923371	WITHOUT_CLASSIFICATION	6.607662901024774E-7	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999987571480062	WITHOUT_CLASSIFICATION	1.2428519938275662E-6	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999956457538349	WITHOUT_CLASSIFICATION	4.3542461650735574E-6	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999985036937739	WITHOUT_CLASSIFICATION	1.4963062261167498E-6	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999949225717729	WITHOUT_CLASSIFICATION	5.077428227036703E-6	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999809270180396	WITHOUT_CLASSIFICATION	1.9072981960382117E-5	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999997911767143	WITHOUT_CLASSIFICATION	2.0882328572934255E-7	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9999988583819244	WITHOUT_CLASSIFICATION	1.1416180755956472E-6	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9999983276907056	WITHOUT_CLASSIFICATION	1.672309294381252E-6	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999997748030058	WITHOUT_CLASSIFICATION	2.251969942129779E-7	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999999698476808	WITHOUT_CLASSIFICATION	3.0152319238457824E-8	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999998455797481	WITHOUT_CLASSIFICATION	1.5442025190116522E-7	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999915105235025	WITHOUT_CLASSIFICATION	8.489476497481332E-6	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999893784598657	WITHOUT_CLASSIFICATION	1.0621540134334409E-5	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999994695446166	WITHOUT_CLASSIFICATION	5.304553832894117E-7	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999999996439305	WITHOUT_CLASSIFICATION	3.560694366299097E-10	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999999362857581	WITHOUT_CLASSIFICATION	6.371424183472889E-8	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999992838688194	WITHOUT_CLASSIFICATION	7.161311807100538E-7	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.999999907908161	WITHOUT_CLASSIFICATION	9.209183904366771E-8	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999979029218	WITHOUT_CLASSIFICATION	2.0970782338336535E-9	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999653207261733	WITHOUT_CLASSIFICATION	3.467927382674512E-5	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9999987435861456	WITHOUT_CLASSIFICATION	1.2564138543595678E-6	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999994615196498	WITHOUT_CLASSIFICATION	5.384803502355864E-7	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.8409830353006813	WITHOUT_CLASSIFICATION	0.1590169646993187	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999990027027764	WITHOUT_CLASSIFICATION	9.9729722360524E-7	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999976565313268	WITHOUT_CLASSIFICATION	2.343468673294606E-6	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999996069766689	WITHOUT_CLASSIFICATION	3.9302333112654235E-7	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999966234232646	WITHOUT_CLASSIFICATION	3.3765767354830773E-6	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999995313686577	WITHOUT_CLASSIFICATION	4.686313422156784E-7	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999876594820067	WITHOUT_CLASSIFICATION	1.2340517993223514E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999996069766689	WITHOUT_CLASSIFICATION	3.9302333112654235E-7	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999966234232646	WITHOUT_CLASSIFICATION	3.3765767354830773E-6	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.999986818433408	WITHOUT_CLASSIFICATION	1.3181566592091292E-5	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999998030005286	WITHOUT_CLASSIFICATION	1.9699947136453497E-7	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999998030005286	WITHOUT_CLASSIFICATION	1.9699947136453497E-7	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999818797557294	WITHOUT_CLASSIFICATION	1.8120244270689656E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999999632584	WITHOUT_CLASSIFICATION	3.6741715869739044E-11	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999994448052043	WITHOUT_CLASSIFICATION	5.551947957782889E-7	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999991868650213	WITHOUT_CLASSIFICATION	8.131349787224168E-7	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999925153162702	WITHOUT_CLASSIFICATION	7.4846837298214105E-6	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999971975883079	WITHOUT_CLASSIFICATION	2.8024116920700243E-6	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999886808101853	WITHOUT_CLASSIFICATION	1.1319189814773247E-5	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999961604097166	WITHOUT_CLASSIFICATION	3.83959028333072E-6	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9998766698675179	WITHOUT_CLASSIFICATION	1.2333013248212924E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999985690099545	WITHOUT_CLASSIFICATION	1.4309900454921074E-6	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999974174735464	WITHOUT_CLASSIFICATION	2.582526453520508E-6	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999998788906697	WITHOUT_CLASSIFICATION	1.2110933035832787E-7	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999998999794704	WITHOUT_CLASSIFICATION	1.0002052966952306E-7	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999904397734	WITHOUT_CLASSIFICATION	9.560226503061776E-9	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999904397734	WITHOUT_CLASSIFICATION	9.560226503061776E-9	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999962109349023	WITHOUT_CLASSIFICATION	3.789065097581545E-6	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999962109349023	WITHOUT_CLASSIFICATION	3.789065097581545E-6	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999999327289498	WITHOUT_CLASSIFICATION	6.727105008626392E-8	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999995165917257	WITHOUT_CLASSIFICATION	4.834082743750565E-7	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999935819485574	WITHOUT_CLASSIFICATION	6.4180514425746545E-6	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999998896942242	WITHOUT_CLASSIFICATION	1.1030577582426767E-7	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.999998892268414	WITHOUT_CLASSIFICATION	1.1077315860599854E-6	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999992905050307	WITHOUT_CLASSIFICATION	7.094949693967968E-7	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999994448052043	WITHOUT_CLASSIFICATION	5.551947957782889E-7	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999991868650213	WITHOUT_CLASSIFICATION	8.131349787224168E-7	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9998766698675179	WITHOUT_CLASSIFICATION	1.2333013248212924E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999985690099545	WITHOUT_CLASSIFICATION	1.4309900454921074E-6	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999990157718865	WITHOUT_CLASSIFICATION	9.84228113472913E-7	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999976812811835	WITHOUT_CLASSIFICATION	2.3187188164365214E-6	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999978081833835	WITHOUT_CLASSIFICATION	2.1918166164844885E-6	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.999999881593382	WITHOUT_CLASSIFICATION	1.1840661784669602E-7	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999998841827211	WITHOUT_CLASSIFICATION	1.1581727888855037E-7	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999995092309643	WITHOUT_CLASSIFICATION	4.907690357871672E-7	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.999999030354537	WITHOUT_CLASSIFICATION	9.696454631124759E-7	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999995918622577	WITHOUT_CLASSIFICATION	4.0813774232139386E-7	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999981425451306	WITHOUT_CLASSIFICATION	1.8574548692920829E-6	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999517543382193	WITHOUT_CLASSIFICATION	4.824566178071046E-5	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999539903351	WITHOUT_CLASSIFICATION	4.600966492414145E-8	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999995253730918	WITHOUT_CLASSIFICATION	4.7462690827108375E-7	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.9999891017074469	WITHOUT_CLASSIFICATION	1.0898292553126586E-5	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999910656902344	WITHOUT_CLASSIFICATION	8.93430976553169E-6	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999998549686011	WITHOUT_CLASSIFICATION	1.450313988710526E-7	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999890709842922	WITHOUT_CLASSIFICATION	1.092901570766044E-5	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999963862339657	WITHOUT_CLASSIFICATION	3.6137660343088763E-6	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.99999957920332	WITHOUT_CLASSIFICATION	4.207966799661842E-7	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999999651839386	WITHOUT_CLASSIFICATION	3.48160614198667E-8	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999998496624026	WITHOUT_CLASSIFICATION	1.503375973559111E-7	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999999707384134	WITHOUT_CLASSIFICATION	2.9261586603749743E-7	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999999707384134	WITHOUT_CLASSIFICATION	2.9261586603749743E-7	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999967318949293	WITHOUT_CLASSIFICATION	3.26810507071346E-6	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999944952997224	WITHOUT_CLASSIFICATION	5.5047002775516675E-6	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999999460336082	WITHOUT_CLASSIFICATION	5.3966391832957394E-8	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999989201869517	WITHOUT_CLASSIFICATION	1.0798130483141837E-6	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999989201869517	WITHOUT_CLASSIFICATION	1.0798130483141837E-6	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999978081833835	WITHOUT_CLASSIFICATION	2.1918166164844885E-6	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999967357615704	WITHOUT_CLASSIFICATION	3.2642384296355318E-6	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999994045668463	WITHOUT_CLASSIFICATION	5.954331536833277E-7	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999998557800994	WITHOUT_CLASSIFICATION	1.4421990056873218E-7	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999998618778594	WITHOUT_CLASSIFICATION	1.3812214066055221E-7	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999996884304547	WITHOUT_CLASSIFICATION	3.115695452593769E-7	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999995992619404	WITHOUT_CLASSIFICATION	4.007380596116726E-6	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999973640927843	WITHOUT_CLASSIFICATION	2.6359072157502815E-6	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9999902489495419	WITHOUT_CLASSIFICATION	9.751050458038378E-6	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999961477796944	WITHOUT_CLASSIFICATION	3.85222030557512E-6	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999998168592364	WITHOUT_CLASSIFICATION	1.83140763519379E-7	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999957731421616	WITHOUT_CLASSIFICATION	4.2268578383388275E-6	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999999514338496	WITHOUT_CLASSIFICATION	4.8566150502637544E-8	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999879825991679	WITHOUT_CLASSIFICATION	1.2017400832164427E-5	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.999998771307294	WITHOUT_CLASSIFICATION	1.2286927059641752E-6	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9999989596007186	WITHOUT_CLASSIFICATION	1.0403992814349468E-6	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999925155021706	WITHOUT_CLASSIFICATION	7.484497829293233E-6	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9999963776618512	WITHOUT_CLASSIFICATION	3.622338148757074E-6	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999999899421961	WITHOUT_CLASSIFICATION	1.0057803994021738E-8	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999932221560596	WITHOUT_CLASSIFICATION	6.777843940527218E-6	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999977482443	WITHOUT_CLASSIFICATION	2.2517557329795657E-9	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999995506390057	WITHOUT_CLASSIFICATION	4.4936099429421716E-7	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999962435777842	WITHOUT_CLASSIFICATION	3.756422215953984E-6	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999973781486516	WITHOUT_CLASSIFICATION	2.621851348293459E-6	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999998987261639	WITHOUT_CLASSIFICATION	1.0127383606589219E-7	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999997197547581	WITHOUT_CLASSIFICATION	2.8024524187005205E-7	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.999999592065079	WITHOUT_CLASSIFICATION	4.079349209013792E-7	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999975857406377	WITHOUT_CLASSIFICATION	2.414259362304577E-6	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999987640672315	WITHOUT_CLASSIFICATION	1.2359327684263165E-6	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.999992928537807	WITHOUT_CLASSIFICATION	7.071462193107828E-6	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999878198057	WITHOUT_CLASSIFICATION	1.2180194233439012E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999878198057	WITHOUT_CLASSIFICATION	1.2180194233439012E-8	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999999496707075	WITHOUT_CLASSIFICATION	5.03292925724734E-8	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999997511590603	WITHOUT_CLASSIFICATION	2.4884093975835385E-7	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999997511590603	WITHOUT_CLASSIFICATION	2.4884093975835385E-7	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999586770388	WITHOUT_CLASSIFICATION	4.132296119794936E-8	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999586770388	WITHOUT_CLASSIFICATION	4.132296119794936E-8	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999994671713406	WITHOUT_CLASSIFICATION	5.328286594334328E-7	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.999999784374969	WITHOUT_CLASSIFICATION	2.156250311941604E-7	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999997455099955	WITHOUT_CLASSIFICATION	2.5449000448668466E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999997801278239	WITHOUT_CLASSIFICATION	2.1987217600744767E-7	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999298735366	WITHOUT_CLASSIFICATION	7.012646340610422E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999958855880226	WITHOUT_CLASSIFICATION	4.1144119774059585E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999958855880226	WITHOUT_CLASSIFICATION	4.1144119774059585E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999998987261639	WITHOUT_CLASSIFICATION	1.0127383606589219E-7	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999998987261639	WITHOUT_CLASSIFICATION	1.0127383606589219E-7	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999998987261639	WITHOUT_CLASSIFICATION	1.0127383606589219E-7	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999997197547581	WITHOUT_CLASSIFICATION	2.8024524187005205E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999878198057	WITHOUT_CLASSIFICATION	1.2180194233439012E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999878198057	WITHOUT_CLASSIFICATION	1.2180194233439012E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999878198057	WITHOUT_CLASSIFICATION	1.2180194233439012E-8	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999994671713406	WITHOUT_CLASSIFICATION	5.328286594334328E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999994671713406	WITHOUT_CLASSIFICATION	5.328286594334328E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999994671713406	WITHOUT_CLASSIFICATION	5.328286594334328E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999997801278239	WITHOUT_CLASSIFICATION	2.1987217600744767E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999997801278239	WITHOUT_CLASSIFICATION	2.1987217600744767E-7	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.999999743284535	WITHOUT_CLASSIFICATION	2.567154649846216E-7	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999999213941454	WITHOUT_CLASSIFICATION	7.860585460504685E-8	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999999230478116	WITHOUT_CLASSIFICATION	7.695218843480575E-8	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9715396436830188	WITHOUT_CLASSIFICATION	0.028460356316981274	IMPLEMENTATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9999462748874787	WITHOUT_CLASSIFICATION	5.372511252137857E-5	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9999775822448007	WITHOUT_CLASSIFICATION	2.241775519923903E-5	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9999775822448007	WITHOUT_CLASSIFICATION	2.241775519923903E-5	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999992257852381	WITHOUT_CLASSIFICATION	7.742147618554639E-7	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999995992619404	WITHOUT_CLASSIFICATION	4.007380596116726E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999995992619404	WITHOUT_CLASSIFICATION	4.007380596116726E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999995992619404	WITHOUT_CLASSIFICATION	4.007380596116726E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999995992619404	WITHOUT_CLASSIFICATION	4.007380596116726E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999995992619404	WITHOUT_CLASSIFICATION	4.007380596116726E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999508705533	WITHOUT_CLASSIFICATION	4.9129446669761914E-8	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999508705533	WITHOUT_CLASSIFICATION	4.9129446669761914E-8	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999508705533	WITHOUT_CLASSIFICATION	4.9129446669761914E-8	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999999690375232	WITHOUT_CLASSIFICATION	3.096247681476746E-8	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999961745491336	WITHOUT_CLASSIFICATION	3.825450866412575E-6	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999997197547581	WITHOUT_CLASSIFICATION	2.8024524187005205E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999994671713406	WITHOUT_CLASSIFICATION	5.328286594334328E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999994671713406	WITHOUT_CLASSIFICATION	5.328286594334328E-7	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999995992619404	WITHOUT_CLASSIFICATION	4.007380596116726E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999995992619404	WITHOUT_CLASSIFICATION	4.007380596116726E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999508705533	WITHOUT_CLASSIFICATION	4.9129446669761914E-8	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999992257852381	WITHOUT_CLASSIFICATION	7.742147618554639E-7	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999993639291223	WITHOUT_CLASSIFICATION	6.360708776262383E-7	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.9999997844319786	WITHOUT_CLASSIFICATION	2.155680215101187E-7	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999994515277781	WITHOUT_CLASSIFICATION	5.484722219798447E-7	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.999999647786149	WITHOUT_CLASSIFICATION	3.522138509848763E-7	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999992178937007	WITHOUT_CLASSIFICATION	7.821062992881118E-7	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999998880804059	WITHOUT_CLASSIFICATION	1.1191959414917823E-7	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999706715758508	WITHOUT_CLASSIFICATION	2.9328424149231143E-5	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999974441678573	WITHOUT_CLASSIFICATION	2.555832142697767E-6	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999948661320374	WITHOUT_CLASSIFICATION	5.1338679626704364E-6	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999999080678367	WITHOUT_CLASSIFICATION	9.19321632678332E-8	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999279393560871	WITHOUT_CLASSIFICATION	7.206064391291883E-5	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999993612574923	WITHOUT_CLASSIFICATION	6.387425075939259E-7	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999846286041689	WITHOUT_CLASSIFICATION	1.5371395831100684E-5	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.997429343420735	WITHOUT_CLASSIFICATION	0.002570656579265017	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999999108820264	WITHOUT_CLASSIFICATION	8.911797360276765E-8	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999975054805532	WITHOUT_CLASSIFICATION	2.494519446810938E-6	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999957498585595	WITHOUT_CLASSIFICATION	4.250141440377628E-6	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999998013796474	WITHOUT_CLASSIFICATION	1.9862035264123514E-7	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999095847211551	WITHOUT_CLASSIFICATION	9.041527884490521E-5	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999998738784566	WITHOUT_CLASSIFICATION	1.2612154337048838E-7	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999997375731041	WITHOUT_CLASSIFICATION	2.6242689595531014E-7	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999995727013666	WITHOUT_CLASSIFICATION	4.2729863335962773E-7	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999495355671	WITHOUT_CLASSIFICATION	5.046443288221703E-8	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999999227040461	WITHOUT_CLASSIFICATION	7.729595392155524E-8	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999981600924965	WITHOUT_CLASSIFICATION	1.8399075033968141E-6	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999998365812545	WITHOUT_CLASSIFICATION	1.63418745488495E-7	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9999991537487659	WITHOUT_CLASSIFICATION	8.462512341686024E-7	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999997600226438	WITHOUT_CLASSIFICATION	2.399773562564196E-7	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999999165571173	WITHOUT_CLASSIFICATION	8.344288276088797E-8	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999924446574545	WITHOUT_CLASSIFICATION	7.555342545502738E-6	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999999969937907	WITHOUT_CLASSIFICATION	3.00620921602987E-9	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999594350071	WITHOUT_CLASSIFICATION	4.056499301460991E-8	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999999324310042	WITHOUT_CLASSIFICATION	6.75689958993404E-8	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.999999974145379	WITHOUT_CLASSIFICATION	2.585462105076859E-8	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999993639291223	WITHOUT_CLASSIFICATION	6.360708776262383E-7	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999749408067525	WITHOUT_CLASSIFICATION	2.5059193247390775E-5	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999817487454211	WITHOUT_CLASSIFICATION	1.8251254578827706E-5	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999994915381036	WITHOUT_CLASSIFICATION	5.084618963823224E-7	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999993137525088	WITHOUT_CLASSIFICATION	6.862474911081114E-7	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999993137525088	WITHOUT_CLASSIFICATION	6.862474911081114E-7	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9999923324784139	WITHOUT_CLASSIFICATION	7.667521586158122E-6	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9999923324784139	WITHOUT_CLASSIFICATION	7.667521586158122E-6	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999999915491253	WITHOUT_CLASSIFICATION	8.450874704715117E-9	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999999412297642	WITHOUT_CLASSIFICATION	5.8770235805168484E-8	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999996693132381	WITHOUT_CLASSIFICATION	3.3068676186311843E-7	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999965703588304	WITHOUT_CLASSIFICATION	3.42964116955328E-6	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999999805591485	WITHOUT_CLASSIFICATION	1.9440851463143107E-8	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999988892476661	WITHOUT_CLASSIFICATION	1.1107523339054983E-6	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999999382499817	WITHOUT_CLASSIFICATION	6.175001830210652E-8	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999931133133128	WITHOUT_CLASSIFICATION	6.886686687230277E-6	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999997337836471	WITHOUT_CLASSIFICATION	2.662163527720376E-7	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999926296407	WITHOUT_CLASSIFICATION	7.370359236904727E-9	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999656553783	WITHOUT_CLASSIFICATION	3.434462176121854E-8	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999974695959236	WITHOUT_CLASSIFICATION	2.5304040764806814E-6	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999974695959236	WITHOUT_CLASSIFICATION	2.5304040764806814E-6	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999999952577213	WITHOUT_CLASSIFICATION	4.742278663448126E-9	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.999999910949489	WITHOUT_CLASSIFICATION	8.905051093848466E-8	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999967189506763	WITHOUT_CLASSIFICATION	3.2810493237193833E-6	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999967189506763	WITHOUT_CLASSIFICATION	3.2810493237193833E-6	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999999722365677	WITHOUT_CLASSIFICATION	2.7763432304767014E-8	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999974078249	WITHOUT_CLASSIFICATION	2.5921751457513486E-9	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999985501722367	WITHOUT_CLASSIFICATION	1.4498277632212663E-6	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999999701295169	WITHOUT_CLASSIFICATION	2.987048302226356E-8	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999997517923751	WITHOUT_CLASSIFICATION	2.482076248154724E-7	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999995138789212	WITHOUT_CLASSIFICATION	4.861210787858946E-7	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9999697346819008	WITHOUT_CLASSIFICATION	3.0265318099189675E-5	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999999088573975	WITHOUT_CLASSIFICATION	9.114260249340301E-8	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.999999990066013	WITHOUT_CLASSIFICATION	9.933987009299369E-9	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9999996170504328	WITHOUT_CLASSIFICATION	3.8294956728855706E-7	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999844512449695	WITHOUT_CLASSIFICATION	1.554875503058373E-5	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999415668211477	WITHOUT_CLASSIFICATION	5.843317885229645E-5	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.999999676228145	WITHOUT_CLASSIFICATION	3.2377185491232987E-7	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999991468164411	WITHOUT_CLASSIFICATION	8.531835588252025E-7	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999943540097	WITHOUT_CLASSIFICATION	5.645990224426071E-9	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999996680289372	WITHOUT_CLASSIFICATION	3.319710627313719E-7	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999995241055558	WITHOUT_CLASSIFICATION	4.7589444421921735E-7	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999990844787019	WITHOUT_CLASSIFICATION	9.155212981767122E-7	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999999711349233	WITHOUT_CLASSIFICATION	2.886507669375046E-8	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999846316654	WITHOUT_CLASSIFICATION	1.5368334667794343E-8	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8892325787319656	IMPLEMENTATION	0.11076742126803438	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999996170817727	WITHOUT_CLASSIFICATION	3.829182273621372E-7	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999998673790351	WITHOUT_CLASSIFICATION	1.3262096490399619E-7	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999956787192471	WITHOUT_CLASSIFICATION	4.32128075291398E-6	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999998606813193	WITHOUT_CLASSIFICATION	1.3931868065557876E-7	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999988798968795	WITHOUT_CLASSIFICATION	1.1201031205058034E-6	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9999997192082484	WITHOUT_CLASSIFICATION	2.807917516055941E-7	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999974122627588	WITHOUT_CLASSIFICATION	2.5877372411105646E-6	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999997220696445	WITHOUT_CLASSIFICATION	2.7793035547602486E-7	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999998613097525	WITHOUT_CLASSIFICATION	1.3869024754119654E-7	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999995411968583	WITHOUT_CLASSIFICATION	4.5880314165163284E-7	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999990659228112	WITHOUT_CLASSIFICATION	9.340771886872627E-7	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999999827309864	WITHOUT_CLASSIFICATION	1.7269013598583438E-8	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999998930527721	WITHOUT_CLASSIFICATION	1.069472278139532E-7	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999998930527721	WITHOUT_CLASSIFICATION	1.069472278139532E-7	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999996274040536	WITHOUT_CLASSIFICATION	3.725959463969971E-7	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999887076760643	WITHOUT_CLASSIFICATION	1.1292323935690874E-5	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999999897562795	WITHOUT_CLASSIFICATION	1.0243720513632425E-8	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9999979467565717	WITHOUT_CLASSIFICATION	2.0532434283419697E-6	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9999832784594279	WITHOUT_CLASSIFICATION	1.6721540571986575E-5	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999986197333736	WITHOUT_CLASSIFICATION	1.3802666263760468E-6	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999978176470886	WITHOUT_CLASSIFICATION	2.182352911331586E-6	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999995526022621	WITHOUT_CLASSIFICATION	4.4739773775676024E-7	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999999154802617	WITHOUT_CLASSIFICATION	8.451973825384893E-8	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9999940971203312	WITHOUT_CLASSIFICATION	5.902879668853499E-6	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999999139094319	WITHOUT_CLASSIFICATION	8.609056810814822E-8	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999968554176616	WITHOUT_CLASSIFICATION	3.144582338469439E-6	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999982438164655	WITHOUT_CLASSIFICATION	1.7561835344639077E-6	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.99999785815031	WITHOUT_CLASSIFICATION	2.1418496901666343E-6	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999986322495237	WITHOUT_CLASSIFICATION	1.3677504763379426E-6	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999998186223664	WITHOUT_CLASSIFICATION	1.8137763355196266E-7	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999999534678398	WITHOUT_CLASSIFICATION	4.6532160255241885E-8	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.999988944605504	WITHOUT_CLASSIFICATION	1.1055394496041428E-5	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9972841376773356	WITHOUT_CLASSIFICATION	0.0027158623226643344	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999184413843362	WITHOUT_CLASSIFICATION	8.155861566381157E-5	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999999900125282	WITHOUT_CLASSIFICATION	9.987471853352915E-9	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.999996198551971	WITHOUT_CLASSIFICATION	3.801448029007695E-6	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999633019391427	WITHOUT_CLASSIFICATION	3.669806085734444E-5	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999980367585832	WITHOUT_CLASSIFICATION	1.963241416811947E-6	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999414099882569	WITHOUT_CLASSIFICATION	5.859001174298929E-5	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9997362677901319	WITHOUT_CLASSIFICATION	2.6373220986804506E-4	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999946101588	WITHOUT_CLASSIFICATION	5.389841234758793E-9	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999999650478787	WITHOUT_CLASSIFICATION	3.4952121342037585E-8	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.999997909124101	WITHOUT_CLASSIFICATION	2.090875899011408E-6	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999999093183705	WITHOUT_CLASSIFICATION	9.068162954893158E-8	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999998488197434	WITHOUT_CLASSIFICATION	1.5118025663643373E-7	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999997901313094	WITHOUT_CLASSIFICATION	2.098686907148895E-7	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999983873170988	WITHOUT_CLASSIFICATION	1.6126829011496395E-6	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999996924582206	WITHOUT_CLASSIFICATION	3.0754177938225407E-7	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.999998983526209	WITHOUT_CLASSIFICATION	1.016473791058198E-6	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999997375495149	WITHOUT_CLASSIFICATION	2.624504851579076E-7	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999752335360114	WITHOUT_CLASSIFICATION	2.4766463988534253E-5	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9999991968751641	WITHOUT_CLASSIFICATION	8.031248358115145E-7	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9999941850566195	WITHOUT_CLASSIFICATION	5.81494338049028E-6	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999998939210973	WITHOUT_CLASSIFICATION	1.0607890264223992E-7	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.999999307027354	WITHOUT_CLASSIFICATION	6.929726459768127E-7	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999993790927354	WITHOUT_CLASSIFICATION	6.209072645329292E-7	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999993790927354	WITHOUT_CLASSIFICATION	6.209072645329292E-7	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999989292118944	WITHOUT_CLASSIFICATION	1.0707881056081327E-6	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999995840362851	WITHOUT_CLASSIFICATION	4.159637149025244E-7	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999947946095967	WITHOUT_CLASSIFICATION	5.205390403372114E-6	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999996930149289	WITHOUT_CLASSIFICATION	3.0698507110717856E-7	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999989880091807	WITHOUT_CLASSIFICATION	1.0119908192524127E-6	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999999964546131	WITHOUT_CLASSIFICATION	3.5453867930066786E-9	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999996276916	WITHOUT_CLASSIFICATION	3.723084431903143E-10	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999904964613124	WITHOUT_CLASSIFICATION	9.503538687577469E-6	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999999910049279	WITHOUT_CLASSIFICATION	8.99507207899511E-9	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999998358974189	WITHOUT_CLASSIFICATION	1.6410258099639658E-7	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999998457198822	WITHOUT_CLASSIFICATION	1.5428011765789372E-7	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999999031284849	WITHOUT_CLASSIFICATION	9.68715151773459E-8	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999985627812554	WITHOUT_CLASSIFICATION	1.4372187445954144E-6	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999709482868104	WITHOUT_CLASSIFICATION	2.9051713189628475E-5	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999999304277953	WITHOUT_CLASSIFICATION	6.957220467390192E-8	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9998721071124642	WITHOUT_CLASSIFICATION	1.2789288753569262E-4	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999989575580489	WITHOUT_CLASSIFICATION	1.0424419511255246E-6	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999998371695198	WITHOUT_CLASSIFICATION	1.6283048025863918E-7	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999986025998999	WITHOUT_CLASSIFICATION	1.3974001000951242E-6	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9804337518293776	WITHOUT_CLASSIFICATION	0.019566248170622372	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999998965486437	WITHOUT_CLASSIFICATION	1.034513561984257E-7	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999957430031127	WITHOUT_CLASSIFICATION	4.256996887319914E-6	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.999999999938732	WITHOUT_CLASSIFICATION	6.126796295683012E-11	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999992207748521	WITHOUT_CLASSIFICATION	7.792251477420519E-7	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.999999907161315	WITHOUT_CLASSIFICATION	9.283868489945928E-8	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9995534715050701	WITHOUT_CLASSIFICATION	4.4652849492987705E-4	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.99999998002439	WITHOUT_CLASSIFICATION	1.9975610066777852E-8	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999972532844387	WITHOUT_CLASSIFICATION	2.7467155612752437E-6	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999998770647706	WITHOUT_CLASSIFICATION	1.2293522951612163E-7	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999997413954643	WITHOUT_CLASSIFICATION	2.586045356338938E-7	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.999999901335152	WITHOUT_CLASSIFICATION	9.866484792584339E-8	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999107953227	WITHOUT_CLASSIFICATION	8.920467724854722E-8	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999997413954643	WITHOUT_CLASSIFICATION	2.586045356338938E-7	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999995060072358	WITHOUT_CLASSIFICATION	4.93992764197589E-7	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999999996439305	WITHOUT_CLASSIFICATION	3.560694366299097E-10	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9892616290504228	WITHOUT_CLASSIFICATION	0.010738370949577247	IMPLEMENTATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9882947550253567	IMPLEMENTATION	0.011705244974643338	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999995837139457	WITHOUT_CLASSIFICATION	4.162860543739073E-7	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999994826708397	WITHOUT_CLASSIFICATION	5.173291602267448E-7	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999998128603079	WITHOUT_CLASSIFICATION	1.8713969213427957E-7	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999999516863881	WITHOUT_CLASSIFICATION	4.831361192641192E-8	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999999632584	WITHOUT_CLASSIFICATION	3.6741715869739044E-11	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999846316654	WITHOUT_CLASSIFICATION	1.5368334667794343E-8	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999999230478116	WITHOUT_CLASSIFICATION	7.695218843480575E-8	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999898620552	WITHOUT_CLASSIFICATION	1.0137944840647659E-8	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999837296987822	WITHOUT_CLASSIFICATION	1.6270301217697393E-5	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999954798135252	WITHOUT_CLASSIFICATION	4.520186474802004E-6	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999903597785095	WITHOUT_CLASSIFICATION	9.640221490553392E-6	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9999998711709632	WITHOUT_CLASSIFICATION	1.2882903685438855E-7	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9991829698424745	WITHOUT_CLASSIFICATION	8.170301575256025E-4	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999990035606771	WITHOUT_CLASSIFICATION	9.964393228877316E-7	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999999981510345	WITHOUT_CLASSIFICATION	1.8489655379663689E-9	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999999995790992	WITHOUT_CLASSIFICATION	4.20900776669882E-10	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9999955830087229	WITHOUT_CLASSIFICATION	4.416991277132695E-6	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.999991571904612	WITHOUT_CLASSIFICATION	8.428095387942614E-6	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9999873973344763	WITHOUT_CLASSIFICATION	1.260266552371518E-5	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999995493190181	WITHOUT_CLASSIFICATION	4.5068098183721654E-7	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9927286600371268	WITHOUT_CLASSIFICATION	0.007271339962873225	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999974755270689	WITHOUT_CLASSIFICATION	2.524472931173183E-6	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999968511689303	WITHOUT_CLASSIFICATION	3.1488310695722946E-6	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999997102478524	WITHOUT_CLASSIFICATION	2.8975214768807564E-7	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999703946426	WITHOUT_CLASSIFICATION	2.9605357460589793E-8	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999977457499948	WITHOUT_CLASSIFICATION	2.254250005195635E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999977457499948	WITHOUT_CLASSIFICATION	2.254250005195635E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999993347867675	WITHOUT_CLASSIFICATION	6.65213232584809E-7	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999907116451	WITHOUT_CLASSIFICATION	9.288354769143668E-9	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.99998171365287	WITHOUT_CLASSIFICATION	1.828634712987338E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9394757726187525	IMPLEMENTATION	0.06052422738124755	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9394757726187525	IMPLEMENTATION	0.06052422738124755	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9394757726187525	IMPLEMENTATION	0.06052422738124755	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9394757726187525	IMPLEMENTATION	0.06052422738124755	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999964501069856	WITHOUT_CLASSIFICATION	3.549893014485111E-6	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9998121428527681	WITHOUT_CLASSIFICATION	1.878571472318923E-4	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9999998434787319	WITHOUT_CLASSIFICATION	1.5652126806000304E-7	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9997355559665606	WITHOUT_CLASSIFICATION	2.644440334393243E-4	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999893246790087	WITHOUT_CLASSIFICATION	1.067532099131961E-5	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999947322069735	WITHOUT_CLASSIFICATION	5.267793026356746E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999781641642462	WITHOUT_CLASSIFICATION	2.1835835753745303E-5	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999781641642462	WITHOUT_CLASSIFICATION	2.1835835753745303E-5	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999999961740579	WITHOUT_CLASSIFICATION	3.825942123769741E-9	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9999986292709035	WITHOUT_CLASSIFICATION	1.3707290964458323E-6	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999997638163958	WITHOUT_CLASSIFICATION	2.3618360426306597E-7	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9998350102314657	WITHOUT_CLASSIFICATION	1.6498976853431338E-4	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999990011811017	WITHOUT_CLASSIFICATION	9.988188981860135E-7	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999990393434925	WITHOUT_CLASSIFICATION	9.606565074309704E-7	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999999654662158	WITHOUT_CLASSIFICATION	3.4533784029916007E-8	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.999998214629439	WITHOUT_CLASSIFICATION	1.7853705610118065E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999935628351542	WITHOUT_CLASSIFICATION	6.437164845867502E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999935628351542	WITHOUT_CLASSIFICATION	6.437164845867502E-6	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999107953227	WITHOUT_CLASSIFICATION	8.920467724854722E-8	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9999964840563151	WITHOUT_CLASSIFICATION	3.5159436849564753E-6	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9999968496921211	WITHOUT_CLASSIFICATION	3.150307878938192E-6	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.99999915701046	WITHOUT_CLASSIFICATION	8.429895399830225E-7	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999983554639	WITHOUT_CLASSIFICATION	1.6445360553474854E-9	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9999981538749287	WITHOUT_CLASSIFICATION	1.8461250712368209E-6	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.999999836038496	WITHOUT_CLASSIFICATION	1.6396150392397265E-7	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999981430195269	WITHOUT_CLASSIFICATION	1.8569804730425657E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999998847038157	WITHOUT_CLASSIFICATION	1.1529618424617408E-7	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999998847038157	WITHOUT_CLASSIFICATION	1.1529618424617408E-7	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999978406997372	WITHOUT_CLASSIFICATION	2.159300262755356E-6	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999997065869316	WITHOUT_CLASSIFICATION	2.9341306835571344E-7	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999999927665072	WITHOUT_CLASSIFICATION	7.233492737878292E-9	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999985422194927	WITHOUT_CLASSIFICATION	1.4577805072380603E-6	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999976368964207	WITHOUT_CLASSIFICATION	2.3631035792039412E-6	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9999981068594261	WITHOUT_CLASSIFICATION	1.893140573869645E-6	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999982222855964	WITHOUT_CLASSIFICATION	1.7777144035494787E-6	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999999695955108	WITHOUT_CLASSIFICATION	3.0404489199497897E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999999695955108	WITHOUT_CLASSIFICATION	3.0404489199497897E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999999695955108	WITHOUT_CLASSIFICATION	3.0404489199497897E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.999999695955108	WITHOUT_CLASSIFICATION	3.0404489199497897E-7	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999954341743376	WITHOUT_CLASSIFICATION	4.565825662400319E-6	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999999316928	WITHOUT_CLASSIFICATION	6.830719267437847E-11	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999995510619395	WITHOUT_CLASSIFICATION	4.4893806055219354E-7	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999995310526733	WITHOUT_CLASSIFICATION	4.6894732683658E-7	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999998776933936	WITHOUT_CLASSIFICATION	1.223066063876898E-7	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9999976759823274	WITHOUT_CLASSIFICATION	2.3240176726141686E-6	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999914501355	WITHOUT_CLASSIFICATION	8.549864506888878E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999962281151934	WITHOUT_CLASSIFICATION	3.7718848064886965E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999962281151934	WITHOUT_CLASSIFICATION	3.7718848064886965E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999962281151934	WITHOUT_CLASSIFICATION	3.7718848064886965E-6	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999992542376989	WITHOUT_CLASSIFICATION	7.457623011600092E-7	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999993863444081	WITHOUT_CLASSIFICATION	6.136555919682525E-7	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999914829011073	WITHOUT_CLASSIFICATION	8.517098892741379E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999914829011073	WITHOUT_CLASSIFICATION	8.517098892741379E-6	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999964848587702	WITHOUT_CLASSIFICATION	3.5151412298554994E-6	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999989890667965	WITHOUT_CLASSIFICATION	1.0109332034781494E-6	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999773358351965	WITHOUT_CLASSIFICATION	2.266416480340998E-5	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9999988539188318	WITHOUT_CLASSIFICATION	1.1460811681846365E-6	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999988976969	WITHOUT_CLASSIFICATION	1.102303078286851E-9	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999958887911446	WITHOUT_CLASSIFICATION	4.111208855345418E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999990525701145	WITHOUT_CLASSIFICATION	9.474298855993583E-7	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999990525701145	WITHOUT_CLASSIFICATION	9.474298855993583E-7	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.99999987081108	WITHOUT_CLASSIFICATION	1.2918892002794069E-7	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9990630225725956	WITHOUT_CLASSIFICATION	9.369774274043123E-4	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.999999809712027	WITHOUT_CLASSIFICATION	1.9028797308443248E-7	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999980651779921	WITHOUT_CLASSIFICATION	1.934822007930546E-6	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9719279370556904	WITHOUT_CLASSIFICATION	0.028072062944309608	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999886577029	WITHOUT_CLASSIFICATION	1.1342297133405678E-8	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9999993854741549	WITHOUT_CLASSIFICATION	6.145258450915827E-7	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999621193570611	WITHOUT_CLASSIFICATION	3.788064293891299E-5	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999859195468006	WITHOUT_CLASSIFICATION	1.4080453199343153E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999964716058867	WITHOUT_CLASSIFICATION	3.5283941133301392E-6	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999999854018687	WITHOUT_CLASSIFICATION	1.4598131183750235E-8	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999995368524787	WITHOUT_CLASSIFICATION	4.631475212330533E-7	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999996903009336	WITHOUT_CLASSIFICATION	3.096990663929769E-7	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9998935883151835	WITHOUT_CLASSIFICATION	1.0641168481652881E-4	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999999722764377	WITHOUT_CLASSIFICATION	2.772356231349013E-8	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999997466332852	WITHOUT_CLASSIFICATION	2.533667148109344E-7	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999802409989209	WITHOUT_CLASSIFICATION	1.9759001079090107E-5	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.99999995699677	WITHOUT_CLASSIFICATION	4.3003229852801316E-8	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999962123960443	WITHOUT_CLASSIFICATION	3.7876039556698523E-6	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.999999457521777	WITHOUT_CLASSIFICATION	5.424782229504687E-7	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999145529849	WITHOUT_CLASSIFICATION	8.544701516064125E-8	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9998610850630665	WITHOUT_CLASSIFICATION	1.3891493693358927E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983919606729352	WITHOUT_CLASSIFICATION	0.001608039327064815	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983919606729352	WITHOUT_CLASSIFICATION	0.001608039327064815	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983919606729352	WITHOUT_CLASSIFICATION	0.001608039327064815	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983919606729352	WITHOUT_CLASSIFICATION	0.001608039327064815	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983919606729352	WITHOUT_CLASSIFICATION	0.001608039327064815	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983919606729352	WITHOUT_CLASSIFICATION	0.001608039327064815	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983919606729352	WITHOUT_CLASSIFICATION	0.001608039327064815	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9983919606729352	WITHOUT_CLASSIFICATION	0.001608039327064815	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999999938286508	WITHOUT_CLASSIFICATION	6.171349165656247E-9	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9999995623844503	WITHOUT_CLASSIFICATION	4.3761554973682726E-7	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999999242597235	WITHOUT_CLASSIFICATION	7.57402764616924E-8	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999870423291496	WITHOUT_CLASSIFICATION	1.295767085039594E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999996276916	WITHOUT_CLASSIFICATION	3.723084431903143E-10	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999996276916	WITHOUT_CLASSIFICATION	3.723084431903143E-10	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999986941106864	WITHOUT_CLASSIFICATION	1.305889313580354E-6	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.999999987335456	WITHOUT_CLASSIFICATION	1.266454399834872E-8	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999982137033944	WITHOUT_CLASSIFICATION	1.7862966055920583E-6	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999999744592944	WITHOUT_CLASSIFICATION	2.5540705527328533E-8	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999945989671724	WITHOUT_CLASSIFICATION	5.401032827606499E-6	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9999987685184771	WITHOUT_CLASSIFICATION	1.2314815229477787E-6	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.99999884810938	WITHOUT_CLASSIFICATION	1.1518906200926972E-6	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999478544239713	WITHOUT_CLASSIFICATION	5.214557602876413E-5	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999965072136862	WITHOUT_CLASSIFICATION	3.4927863138671932E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999967192844	WITHOUT_CLASSIFICATION	3.2807156025445644E-9	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999967192844	WITHOUT_CLASSIFICATION	3.2807156025445644E-9	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999967192844	WITHOUT_CLASSIFICATION	3.2807156025445644E-9	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999945383635002	WITHOUT_CLASSIFICATION	5.461636499798409E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999945383635002	WITHOUT_CLASSIFICATION	5.461636499798409E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999945383635002	WITHOUT_CLASSIFICATION	5.461636499798409E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999945383635002	WITHOUT_CLASSIFICATION	5.461636499798409E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999945383635002	WITHOUT_CLASSIFICATION	5.461636499798409E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999945383635002	WITHOUT_CLASSIFICATION	5.461636499798409E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999945383635002	WITHOUT_CLASSIFICATION	5.461636499798409E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999945383635002	WITHOUT_CLASSIFICATION	5.461636499798409E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999945383635002	WITHOUT_CLASSIFICATION	5.461636499798409E-5	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.999999510685645	WITHOUT_CLASSIFICATION	4.893143550241068E-7	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.999971203565113	WITHOUT_CLASSIFICATION	2.8796434886957344E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999975242111829	WITHOUT_CLASSIFICATION	2.4757888169699423E-6	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999397568826347	WITHOUT_CLASSIFICATION	6.024311736522847E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999945383635002	WITHOUT_CLASSIFICATION	5.461636499798409E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999945383635002	WITHOUT_CLASSIFICATION	5.461636499798409E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999945383635002	WITHOUT_CLASSIFICATION	5.461636499798409E-5	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999917058193122	WITHOUT_CLASSIFICATION	8.294180687811795E-6	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999987598247672	WITHOUT_CLASSIFICATION	1.2401752329246658E-6	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999993490951236	WITHOUT_CLASSIFICATION	6.509048764189398E-7	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998629483841317	WITHOUT_CLASSIFICATION	1.370516158682713E-4	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998629483841317	WITHOUT_CLASSIFICATION	1.370516158682713E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999943872722252	WITHOUT_CLASSIFICATION	5.612727774799176E-6	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9998732794940811	WITHOUT_CLASSIFICATION	1.2672050591878975E-4	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999999521923096	WITHOUT_CLASSIFICATION	4.780769036546612E-8	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999999998658677	WITHOUT_CLASSIFICATION	1.3413220861653218E-10	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9997352097343797	WITHOUT_CLASSIFICATION	2.6479026562037025E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9997352097343797	WITHOUT_CLASSIFICATION	2.6479026562037025E-4	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999999784697776	WITHOUT_CLASSIFICATION	2.1530222375845343E-8	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999851814435	WITHOUT_CLASSIFICATION	1.4818556518738474E-8	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999948844998405	WITHOUT_CLASSIFICATION	5.11550015943959E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999795301593848	WITHOUT_CLASSIFICATION	2.0469840615213546E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999795301593848	WITHOUT_CLASSIFICATION	2.0469840615213546E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999795301593848	WITHOUT_CLASSIFICATION	2.0469840615213546E-5	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999990347264567	WITHOUT_CLASSIFICATION	9.652735432472019E-7	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999996853089543	WITHOUT_CLASSIFICATION	3.14691045581293E-7	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999996853089543	WITHOUT_CLASSIFICATION	3.14691045581293E-7	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.999999326067081	WITHOUT_CLASSIFICATION	6.739329189698056E-7	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.999999326067081	WITHOUT_CLASSIFICATION	6.739329189698056E-7	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999995007408679	WITHOUT_CLASSIFICATION	4.99259132145201E-7	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999926319219432	WITHOUT_CLASSIFICATION	7.36807805679408E-6	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999992058151385	WITHOUT_CLASSIFICATION	7.941848614976594E-7	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999990458579162	WITHOUT_CLASSIFICATION	9.541420837489696E-7	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999938415976533	WITHOUT_CLASSIFICATION	6.15840234683534E-6	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999972710982704	WITHOUT_CLASSIFICATION	2.728901729588846E-6	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999917972861656	WITHOUT_CLASSIFICATION	8.202713834365165E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999958855880226	WITHOUT_CLASSIFICATION	4.1144119774059585E-5	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999996015300142	WITHOUT_CLASSIFICATION	3.98469985829942E-7	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999987671577	WITHOUT_CLASSIFICATION	1.2328423298669874E-9	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.938958167781316	WITHOUT_CLASSIFICATION	0.061041832218683846	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999986578979807	WITHOUT_CLASSIFICATION	1.342102019365246E-6	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999999667541011	WITHOUT_CLASSIFICATION	3.324589895291216E-8	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999999906719452	WITHOUT_CLASSIFICATION	9.328054709602889E-9	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999985028638604	WITHOUT_CLASSIFICATION	1.4971361395274192E-6	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999998943700386	WITHOUT_CLASSIFICATION	1.0562996144011515E-7	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999996244122445	WITHOUT_CLASSIFICATION	3.755877554221457E-7	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999347989117	WITHOUT_CLASSIFICATION	6.520108832692005E-8	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999999953815402	WITHOUT_CLASSIFICATION	4.618459829125872E-9	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999995035344867	WITHOUT_CLASSIFICATION	4.964655133014323E-7	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999898620552	WITHOUT_CLASSIFICATION	1.0137944840647659E-8	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999665009399458	WITHOUT_CLASSIFICATION	3.349906005420463E-5	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999987856745984	WITHOUT_CLASSIFICATION	1.2143254015750542E-6	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999989121966177	WITHOUT_CLASSIFICATION	1.0878033822184246E-6	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999903220296119	WITHOUT_CLASSIFICATION	9.67797038799375E-6	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999993465039565	WITHOUT_CLASSIFICATION	6.534960435500215E-7	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999985280999889	WITHOUT_CLASSIFICATION	1.4719000111352222E-6	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999999944581783	WITHOUT_CLASSIFICATION	5.541821668936915E-9	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999977279006805	WITHOUT_CLASSIFICATION	2.272099319382307E-6	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999998073798801	WITHOUT_CLASSIFICATION	1.9262011973465833E-7	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999965166003395	WITHOUT_CLASSIFICATION	3.4833996604407557E-6	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999995213617225	WITHOUT_CLASSIFICATION	4.78638277507966E-7	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999997592771133	WITHOUT_CLASSIFICATION	2.407228866520301E-7	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999999928911156	WITHOUT_CLASSIFICATION	7.108884267171906E-9	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.999997305327385	WITHOUT_CLASSIFICATION	2.6946726150734688E-6	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999996196232517	WITHOUT_CLASSIFICATION	3.8037674824650573E-7	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999990406136526	WITHOUT_CLASSIFICATION	9.59386347339092E-7	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999927365018851	WITHOUT_CLASSIFICATION	7.263498114893973E-6	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999989611274112	WITHOUT_CLASSIFICATION	1.0388725888440836E-6	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999155265842	WITHOUT_CLASSIFICATION	8.447341579737613E-8	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.999999975136712	WITHOUT_CLASSIFICATION	2.486328800810004E-8	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999999497011127	WITHOUT_CLASSIFICATION	5.02988873829743E-8	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999999857618778	WITHOUT_CLASSIFICATION	1.4238122231106457E-8	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999999903274219	WITHOUT_CLASSIFICATION	9.672577987299698E-9	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999999950967456	WITHOUT_CLASSIFICATION	4.903254367630179E-9	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999969637584115	WITHOUT_CLASSIFICATION	3.0362415884765716E-6	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9999999525736178	WITHOUT_CLASSIFICATION	4.7426382084325425E-8	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999992143516	WITHOUT_CLASSIFICATION	7.856484929860324E-10	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999891713097	WITHOUT_CLASSIFICATION	1.0828690333261673E-8	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999970550573628	WITHOUT_CLASSIFICATION	2.9449426372670787E-6	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999998537882421	WITHOUT_CLASSIFICATION	1.4621175794228154E-7	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999682138725501	WITHOUT_CLASSIFICATION	3.1786127449905674E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999682138725501	WITHOUT_CLASSIFICATION	3.1786127449905674E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999999994012019	WITHOUT_CLASSIFICATION	5.987980983485152E-9	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999999994012019	WITHOUT_CLASSIFICATION	5.987980983485152E-9	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999616291866739	WITHOUT_CLASSIFICATION	3.8370813326125754E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999616291866739	WITHOUT_CLASSIFICATION	3.8370813326125754E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999935850121412	WITHOUT_CLASSIFICATION	6.414987858808952E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999935850121412	WITHOUT_CLASSIFICATION	6.414987858808952E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999990165317859	WITHOUT_CLASSIFICATION	9.834682141192445E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999990165317859	WITHOUT_CLASSIFICATION	9.834682141192445E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999990165317859	WITHOUT_CLASSIFICATION	9.834682141192445E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999990165317859	WITHOUT_CLASSIFICATION	9.834682141192445E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999990165317859	WITHOUT_CLASSIFICATION	9.834682141192445E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999990165317859	WITHOUT_CLASSIFICATION	9.834682141192445E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999990165317859	WITHOUT_CLASSIFICATION	9.834682141192445E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999990165317859	WITHOUT_CLASSIFICATION	9.834682141192445E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999990165317859	WITHOUT_CLASSIFICATION	9.834682141192445E-7	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999995811733158	WITHOUT_CLASSIFICATION	4.188266843229507E-7	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999995811733158	WITHOUT_CLASSIFICATION	4.188266843229507E-7	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999995811733158	WITHOUT_CLASSIFICATION	4.188266843229507E-7	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999803515293487	WITHOUT_CLASSIFICATION	1.9648470651311536E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999919713188633	WITHOUT_CLASSIFICATION	8.028681136585058E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999919713188633	WITHOUT_CLASSIFICATION	8.028681136585058E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999919713188633	WITHOUT_CLASSIFICATION	8.028681136585058E-6	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999998478913743	WITHOUT_CLASSIFICATION	1.5210862564031622E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999998478913743	WITHOUT_CLASSIFICATION	1.5210862564031622E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999998478913743	WITHOUT_CLASSIFICATION	1.5210862564031622E-7	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999966061546115	WITHOUT_CLASSIFICATION	3.3938453884832504E-6	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.999998168440395	WITHOUT_CLASSIFICATION	1.8315596049520862E-6	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999896038737642	WITHOUT_CLASSIFICATION	1.039612623580786E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999908019556017	WITHOUT_CLASSIFICATION	9.198044398244422E-6	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999908019556017	WITHOUT_CLASSIFICATION	9.198044398244422E-6	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999908019556017	WITHOUT_CLASSIFICATION	9.198044398244422E-6	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999989591141695	WITHOUT_CLASSIFICATION	1.040885830567136E-6	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999998013140327	WITHOUT_CLASSIFICATION	1.9868596736748495E-7	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999998013140327	WITHOUT_CLASSIFICATION	1.9868596736748495E-7	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999902203693222	WITHOUT_CLASSIFICATION	9.779630677947786E-6	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9998478734206918	WITHOUT_CLASSIFICATION	1.5212657930821122E-4	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9998478734206918	WITHOUT_CLASSIFICATION	1.5212657930821122E-4	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9988249229351224	IMPLEMENTATION	0.0011750770648776326	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999428470640546	WITHOUT_CLASSIFICATION	5.715293594533116E-5	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9995568882861228	WITHOUT_CLASSIFICATION	4.4311171387722144E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999759535997	WITHOUT_CLASSIFICATION	2.4046400316549494E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999759535997	WITHOUT_CLASSIFICATION	2.4046400316549494E-8	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999997960819734	WITHOUT_CLASSIFICATION	2.0391802663560254E-7	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.999987961360802	WITHOUT_CLASSIFICATION	1.203863919793751E-5	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999952343713574	WITHOUT_CLASSIFICATION	4.765628642645253E-6	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999988237369658	WITHOUT_CLASSIFICATION	1.176263034173265E-6	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999960037419949	WITHOUT_CLASSIFICATION	3.996258005068584E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999759535997	WITHOUT_CLASSIFICATION	2.4046400316549494E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999759535997	WITHOUT_CLASSIFICATION	2.4046400316549494E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999759535997	WITHOUT_CLASSIFICATION	2.4046400316549494E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999759535997	WITHOUT_CLASSIFICATION	2.4046400316549494E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999759535997	WITHOUT_CLASSIFICATION	2.4046400316549494E-8	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999985691234986	WITHOUT_CLASSIFICATION	1.4308765015041336E-6	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999872777205201	WITHOUT_CLASSIFICATION	1.2722279479939005E-5	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999590690334	WITHOUT_CLASSIFICATION	4.093096655990379E-8	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999985081128158	WITHOUT_CLASSIFICATION	1.4918871842684063E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999999999921485	WITHOUT_CLASSIFICATION	7.851472992356392E-12	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9977166079192936	WITHOUT_CLASSIFICATION	0.0022833920807064484	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999999534602432	WITHOUT_CLASSIFICATION	4.65397567866484E-8	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999883138954849	WITHOUT_CLASSIFICATION	1.1686104515105078E-5	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999920849987	WITHOUT_CLASSIFICATION	7.915001312507397E-9	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999995911840904	WITHOUT_CLASSIFICATION	4.0881590957526016E-7	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999599238972	WITHOUT_CLASSIFICATION	4.0076102722272605E-8	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999957430031127	WITHOUT_CLASSIFICATION	4.256996887319914E-6	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999995536132305	WITHOUT_CLASSIFICATION	4.463867695043935E-7	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999358196016	WITHOUT_CLASSIFICATION	6.418039837425694E-8	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999998800377702	WITHOUT_CLASSIFICATION	1.19962229893618E-7	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9962257383427118	WITHOUT_CLASSIFICATION	0.0037742616572882873	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999971399802869	WITHOUT_CLASSIFICATION	2.8600197130743377E-6	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999942077068134	WITHOUT_CLASSIFICATION	5.792293186654717E-6	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999992623698316	WITHOUT_CLASSIFICATION	7.376301683065229E-7	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999992385997294	WITHOUT_CLASSIFICATION	7.614002706729046E-7	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999997682296669	WITHOUT_CLASSIFICATION	2.3177033327926648E-7	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999993567507783	WITHOUT_CLASSIFICATION	6.432492215483575E-7	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999998358974189	WITHOUT_CLASSIFICATION	1.6410258099639658E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999983362759026	WITHOUT_CLASSIFICATION	1.6637240974538827E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999983362759026	WITHOUT_CLASSIFICATION	1.6637240974538827E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999983362759026	WITHOUT_CLASSIFICATION	1.6637240974538827E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999983362759026	WITHOUT_CLASSIFICATION	1.6637240974538827E-6	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999974106059017	WITHOUT_CLASSIFICATION	2.5893940983030325E-6	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999999795719244	WITHOUT_CLASSIFICATION	2.0428075530676213E-8	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999999935272552	WITHOUT_CLASSIFICATION	6.47274485466744E-9	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999999935272552	WITHOUT_CLASSIFICATION	6.47274485466744E-9	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999587895357	WITHOUT_CLASSIFICATION	4.121046420101661E-8	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999996997649273	WITHOUT_CLASSIFICATION	3.002350727146051E-7	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999968960013	WITHOUT_CLASSIFICATION	3.1039986665088955E-9	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999976919655492	WITHOUT_CLASSIFICATION	2.308034450787928E-6	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999999822461957	WITHOUT_CLASSIFICATION	1.7753804229929898E-8	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999608849175254	WITHOUT_CLASSIFICATION	3.911508247451873E-5	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999793024893813	WITHOUT_CLASSIFICATION	2.0697510618676497E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999973201782885	WITHOUT_CLASSIFICATION	2.6798217115097447E-6	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999973201782885	WITHOUT_CLASSIFICATION	2.6798217115097447E-6	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999973201782885	WITHOUT_CLASSIFICATION	2.6798217115097447E-6	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999973201782885	WITHOUT_CLASSIFICATION	2.6798217115097447E-6	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999941481146309	WITHOUT_CLASSIFICATION	5.851885369083789E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999978643851	WITHOUT_CLASSIFICATION	2.135614987002128E-9	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999978643851	WITHOUT_CLASSIFICATION	2.135614987002128E-9	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999978643851	WITHOUT_CLASSIFICATION	2.135614987002128E-9	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999999727460936	WITHOUT_CLASSIFICATION	2.7253906366000452E-8	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.999999527101937	WITHOUT_CLASSIFICATION	4.7289806304769613E-7	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999990897585728	WITHOUT_CLASSIFICATION	9.102414272169806E-7	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9394757726187525	IMPLEMENTATION	0.06052422738124755	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9394757726187525	IMPLEMENTATION	0.06052422738124755	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999336673285	WITHOUT_CLASSIFICATION	6.633267151027054E-8	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999999919819851	WITHOUT_CLASSIFICATION	8.018014872104211E-9	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999248388127508	WITHOUT_CLASSIFICATION	7.516118724922049E-5	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999248388127508	WITHOUT_CLASSIFICATION	7.516118724922049E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999965374298297	WITHOUT_CLASSIFICATION	3.4625701701359963E-6	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999965374298297	WITHOUT_CLASSIFICATION	3.4625701701359963E-6	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999999966971015	WITHOUT_CLASSIFICATION	3.3028984961392856E-9	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9995583788268462	WITHOUT_CLASSIFICATION	4.416211731537168E-4	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999997520740332	WITHOUT_CLASSIFICATION	2.479259667659104E-7	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.999999192730571	WITHOUT_CLASSIFICATION	8.072694290177508E-7	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999979421637349	WITHOUT_CLASSIFICATION	2.0578362651016047E-6	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999980179851488	WITHOUT_CLASSIFICATION	1.982014851197743E-6	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999998526397035	WITHOUT_CLASSIFICATION	1.47360296473452E-7	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999871523418754	WITHOUT_CLASSIFICATION	1.2847658124512047E-5	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999996094440043	WITHOUT_CLASSIFICATION	3.905559956404027E-7	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999973177814	WITHOUT_CLASSIFICATION	2.682218580782434E-9	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999973177814	WITHOUT_CLASSIFICATION	2.682218580782434E-9	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999994752892996	WITHOUT_CLASSIFICATION	5.247107004509837E-7	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999994752892996	WITHOUT_CLASSIFICATION	5.247107004509837E-7	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.99999980560195	WITHOUT_CLASSIFICATION	1.9439804984967274E-7	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999946972285529	WITHOUT_CLASSIFICATION	5.302771447093743E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999958184859824	WITHOUT_CLASSIFICATION	4.181514017563098E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999974222508249	WITHOUT_CLASSIFICATION	2.577749175241025E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999974222508249	WITHOUT_CLASSIFICATION	2.577749175241025E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999974222508249	WITHOUT_CLASSIFICATION	2.577749175241025E-6	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9999970069978581	WITHOUT_CLASSIFICATION	2.9930021420046247E-6	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9999965939974079	WITHOUT_CLASSIFICATION	3.406002592116933E-6	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9999972536873594	WITHOUT_CLASSIFICATION	2.7463126406702525E-6	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9999978911367642	WITHOUT_CLASSIFICATION	2.1088632357804955E-6	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9999963751045896	WITHOUT_CLASSIFICATION	3.624895410473094E-6	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999962946513501	WITHOUT_CLASSIFICATION	3.7053486499116786E-6	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9999969524436485	WITHOUT_CLASSIFICATION	3.047556351461699E-6	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9999957815543152	WITHOUT_CLASSIFICATION	4.218445684776688E-6	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999989037859575	WITHOUT_CLASSIFICATION	1.0962140424938855E-6	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999977762551098	WITHOUT_CLASSIFICATION	2.2237448902538397E-6	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9997935239581218	WITHOUT_CLASSIFICATION	2.0647604187806997E-4	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999999941202405	WITHOUT_CLASSIFICATION	5.879759451031677E-9	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999999908545415	WITHOUT_CLASSIFICATION	9.145458583038575E-9	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9394757726187525	IMPLEMENTATION	0.06052422738124755	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999967149945119	WITHOUT_CLASSIFICATION	3.2850054880935284E-6	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999994995368447	WITHOUT_CLASSIFICATION	5.004631553796014E-7	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999977457499948	WITHOUT_CLASSIFICATION	2.254250005195635E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999776051644721	WITHOUT_CLASSIFICATION	2.2394835527868924E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999776051644721	WITHOUT_CLASSIFICATION	2.2394835527868924E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999776051644721	WITHOUT_CLASSIFICATION	2.2394835527868924E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999776051644721	WITHOUT_CLASSIFICATION	2.2394835527868924E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999776051644721	WITHOUT_CLASSIFICATION	2.2394835527868924E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.999994530578969	WITHOUT_CLASSIFICATION	5.4694210309312085E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999776051644721	WITHOUT_CLASSIFICATION	2.2394835527868924E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999776051644721	WITHOUT_CLASSIFICATION	2.2394835527868924E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999776051644721	WITHOUT_CLASSIFICATION	2.2394835527868924E-5	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999996687214395	WITHOUT_CLASSIFICATION	3.3127856038668754E-7	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999986285867091	WITHOUT_CLASSIFICATION	1.3714132909315995E-6	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999999995204949	WITHOUT_CLASSIFICATION	4.795051394008097E-10	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999979221951771	WITHOUT_CLASSIFICATION	2.0778048229471698E-6	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999985418257942	WITHOUT_CLASSIFICATION	1.4581742057529405E-6	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999999929163291	WITHOUT_CLASSIFICATION	7.083670760638837E-9	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999999713740761	WITHOUT_CLASSIFICATION	2.862592374950451E-8	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9999967217696036	WITHOUT_CLASSIFICATION	3.278230396382169E-6	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999978535753483	WITHOUT_CLASSIFICATION	2.1464246517545273E-6	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999978535753483	WITHOUT_CLASSIFICATION	2.1464246517545273E-6	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9999967175550704	WITHOUT_CLASSIFICATION	3.282444929681449E-6	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.999996185629453	WITHOUT_CLASSIFICATION	3.8143705469495933E-6	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999966742968447	WITHOUT_CLASSIFICATION	3.325703155325358E-6	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9999968146442981	WITHOUT_CLASSIFICATION	3.185355701961665E-6	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.999996700346179	WITHOUT_CLASSIFICATION	3.2996538210085987E-6	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9999965221026866	WITHOUT_CLASSIFICATION	3.4778973132837184E-6	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9999956954691622	WITHOUT_CLASSIFICATION	4.304530837793024E-6	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999963000640354	WITHOUT_CLASSIFICATION	3.6999359645561563E-6	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999961356778799	WITHOUT_CLASSIFICATION	3.864322120089674E-6	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9999976320995193	WITHOUT_CLASSIFICATION	2.3679004806242504E-6	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9999974434350568	WITHOUT_CLASSIFICATION	2.556564943236141E-6	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9999964177980363	WITHOUT_CLASSIFICATION	3.582201963717585E-6	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999962248434079	WITHOUT_CLASSIFICATION	3.775156592118374E-6	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999967235763133	WITHOUT_CLASSIFICATION	3.276423686816434E-6	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9999964672500866	WITHOUT_CLASSIFICATION	3.5327499133637047E-6	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9999959326877984	WITHOUT_CLASSIFICATION	4.067312201695103E-6	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999960475054162	WITHOUT_CLASSIFICATION	3.952494583878597E-6	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9999965476091244	WITHOUT_CLASSIFICATION	3.4523908756937355E-6	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9999963149530969	WITHOUT_CLASSIFICATION	3.6850469031316644E-6	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.999996656214339	WITHOUT_CLASSIFICATION	3.3437856609813852E-6	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9999973556315199	WITHOUT_CLASSIFICATION	2.644368480089661E-6	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.999996347382412	WITHOUT_CLASSIFICATION	3.6526175879211097E-6	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9999965219533657	WITHOUT_CLASSIFICATION	3.478046634331392E-6	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9999981549861098	WITHOUT_CLASSIFICATION	1.8450138902433116E-6	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9999983683350417	WITHOUT_CLASSIFICATION	1.6316649583136488E-6	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999983446384287	WITHOUT_CLASSIFICATION	1.6553615712345118E-6	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9999980488975752	WITHOUT_CLASSIFICATION	1.9511024248828283E-6	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9999983376433913	WITHOUT_CLASSIFICATION	1.662356608815622E-6	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999979905830332	WITHOUT_CLASSIFICATION	2.009416966757419E-6	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.999998244375501	WITHOUT_CLASSIFICATION	1.7556244990875858E-6	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999976580447426	WITHOUT_CLASSIFICATION	2.3419552573310264E-6	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999972567475842	WITHOUT_CLASSIFICATION	2.7432524158517593E-6	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9999976579219304	WITHOUT_CLASSIFICATION	2.3420780695438463E-6	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9999971268245141	WITHOUT_CLASSIFICATION	2.8731754858778008E-6	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9999985348945708	WITHOUT_CLASSIFICATION	1.4651054292590613E-6	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999986661795705	WITHOUT_CLASSIFICATION	1.3338204296257786E-6	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9999977216314689	WITHOUT_CLASSIFICATION	2.278368531092053E-6	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999977256221645	WITHOUT_CLASSIFICATION	2.2743778355133498E-6	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.999997760391623	WITHOUT_CLASSIFICATION	2.2396083768909817E-6	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9999978999132632	WITHOUT_CLASSIFICATION	2.10008673684101E-6	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9999979672822982	WITHOUT_CLASSIFICATION	2.032717701819775E-6	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999986744408331	WITHOUT_CLASSIFICATION	1.3255591669773479E-6	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9999979232600861	WITHOUT_CLASSIFICATION	2.0767399139524727E-6	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9999973511245034	WITHOUT_CLASSIFICATION	2.648875496556465E-6	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9999974298084537	WITHOUT_CLASSIFICATION	2.5701915462944774E-6	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999974617356405	WITHOUT_CLASSIFICATION	2.538264359413887E-6	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999977577211449	WITHOUT_CLASSIFICATION	2.2422788552131005E-6	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9999975678734196	WITHOUT_CLASSIFICATION	2.4321265803397676E-6	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9999978058068411	WITHOUT_CLASSIFICATION	2.1941931590240887E-6	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999975694603831	WITHOUT_CLASSIFICATION	2.4305396169106477E-6	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.999998021554516	WITHOUT_CLASSIFICATION	1.9784454839702118E-6	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.999997821218536	WITHOUT_CLASSIFICATION	2.1787814639836153E-6	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.9999978652944338	WITHOUT_CLASSIFICATION	2.1347055662096544E-6	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999982448057344	WITHOUT_CLASSIFICATION	1.7551942655759667E-6	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999982448057344	WITHOUT_CLASSIFICATION	1.7551942655759667E-6	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999973529680846	WITHOUT_CLASSIFICATION	2.6470319154694016E-6	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9999985917607368	WITHOUT_CLASSIFICATION	1.4082392632230843E-6	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9999976483760123	WITHOUT_CLASSIFICATION	2.3516239876207184E-6	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9999978495107145	WITHOUT_CLASSIFICATION	2.150489285549627E-6	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9999972984987756	WITHOUT_CLASSIFICATION	2.701501224260718E-6	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999981772680252	WITHOUT_CLASSIFICATION	1.8227319748002082E-6	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999971733816612	WITHOUT_CLASSIFICATION	2.8266183388376017E-6	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9999973467696222	WITHOUT_CLASSIFICATION	2.6532303778228585E-6	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999976927184513	WITHOUT_CLASSIFICATION	2.307281548832894E-6	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9999974796255447	WITHOUT_CLASSIFICATION	2.520374455349136E-6	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999860417858731	WITHOUT_CLASSIFICATION	1.3958214126905315E-5	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999860417858731	WITHOUT_CLASSIFICATION	1.3958214126905315E-5	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999827935237147	WITHOUT_CLASSIFICATION	1.7206476285289922E-5	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999399718199757	WITHOUT_CLASSIFICATION	6.0028180024211686E-5	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999977436721944	WITHOUT_CLASSIFICATION	2.2563278055761597E-6	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999997289379238	WITHOUT_CLASSIFICATION	2.710620762572843E-7	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999652798609	WITHOUT_CLASSIFICATION	3.4720139147590485E-8	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999652798609	WITHOUT_CLASSIFICATION	3.4720139147590485E-8	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999652798609	WITHOUT_CLASSIFICATION	3.4720139147590485E-8	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999652798609	WITHOUT_CLASSIFICATION	3.4720139147590485E-8	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9113346903056084	WITHOUT_CLASSIFICATION	0.0886653096943915	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999998462737301	WITHOUT_CLASSIFICATION	1.5372626995152701E-7	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9999968248396824	WITHOUT_CLASSIFICATION	3.1751603175921832E-6	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9999958979719215	WITHOUT_CLASSIFICATION	4.102028078528161E-6	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.999996908959415	WITHOUT_CLASSIFICATION	3.091040585084205E-6	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9999975764107658	WITHOUT_CLASSIFICATION	2.4235892341601465E-6	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9999976935957854	WITHOUT_CLASSIFICATION	2.3064042145547912E-6	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9999971822520428	WITHOUT_CLASSIFICATION	2.8177479571320803E-6	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9999977704663918	WITHOUT_CLASSIFICATION	2.2295336081158537E-6	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9999969837017468	WITHOUT_CLASSIFICATION	3.0162982531458452E-6	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9999959504713424	WITHOUT_CLASSIFICATION	4.0495286576149485E-6	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.999996892366846	WITHOUT_CLASSIFICATION	3.1076331541255954E-6	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9999966176649995	WITHOUT_CLASSIFICATION	3.382335000577412E-6	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9999960801678636	WITHOUT_CLASSIFICATION	3.9198321364543974E-6	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9999957504120479	WITHOUT_CLASSIFICATION	4.249587952127589E-6	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9999973253646061	WITHOUT_CLASSIFICATION	2.674635393961809E-6	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9999956767025026	WITHOUT_CLASSIFICATION	4.323297497456366E-6	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9999971658121594	WITHOUT_CLASSIFICATION	2.834187840571479E-6	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9999969475476251	WITHOUT_CLASSIFICATION	3.0524523749487496E-6	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9999966253609641	WITHOUT_CLASSIFICATION	3.3746390358232573E-6	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9999966314387123	WITHOUT_CLASSIFICATION	3.3685612877092754E-6	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9999973207309886	WITHOUT_CLASSIFICATION	2.679269011350608E-6	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9999965825536393	WITHOUT_CLASSIFICATION	3.4174463606057752E-6	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9999961471577214	WITHOUT_CLASSIFICATION	3.852842278513003E-6	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9999963097090117	WITHOUT_CLASSIFICATION	3.6902909883143928E-6	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9999982068121362	WITHOUT_CLASSIFICATION	1.7931878636664751E-6	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9999983842190655	WITHOUT_CLASSIFICATION	1.6157809345049957E-6	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9999981830140662	WITHOUT_CLASSIFICATION	1.8169859338449194E-6	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9999981710682149	WITHOUT_CLASSIFICATION	1.8289317851953688E-6	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9999973343415826	WITHOUT_CLASSIFICATION	2.6656584174936178E-6	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9999972863952412	WITHOUT_CLASSIFICATION	2.7136047587994202E-6	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9999975300123931	WITHOUT_CLASSIFICATION	2.4699876068480674E-6	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9999979971534593	WITHOUT_CLASSIFICATION	2.002846540764526E-6	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9999976673202645	WITHOUT_CLASSIFICATION	2.3326797354802486E-6	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9999978890074943	WITHOUT_CLASSIFICATION	2.1109925056398817E-6	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9999982653543008	WITHOUT_CLASSIFICATION	1.734645699246902E-6	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9999976006668235	WITHOUT_CLASSIFICATION	2.3993331764626923E-6	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9999972359194867	WITHOUT_CLASSIFICATION	2.764080513148974E-6	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9999978075216	WITHOUT_CLASSIFICATION	2.1924784000831606E-6	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9999975158539747	WITHOUT_CLASSIFICATION	2.484146025246049E-6	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.999998698754524	WITHOUT_CLASSIFICATION	1.301245476001633E-6	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.999997605736661	WITHOUT_CLASSIFICATION	2.3942633390003534E-6	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9999973738586857	WITHOUT_CLASSIFICATION	2.6261413144008557E-6	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9999975684456448	WITHOUT_CLASSIFICATION	2.431554355108593E-6	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9999974300491166	WITHOUT_CLASSIFICATION	2.5699508835011866E-6	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9999973608799524	WITHOUT_CLASSIFICATION	2.639120047537787E-6	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9999976975175509	WITHOUT_CLASSIFICATION	2.3024824491008598E-6	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9999971553041401	WITHOUT_CLASSIFICATION	2.8446958597957463E-6	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.999997780752447	WITHOUT_CLASSIFICATION	2.2192475530629446E-6	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.999997643863561	WITHOUT_CLASSIFICATION	2.3561364390121616E-6	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9999971517018413	WITHOUT_CLASSIFICATION	2.848298158716117E-6	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9999974577262413	WITHOUT_CLASSIFICATION	2.542273758754534E-6	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9999978636730323	WITHOUT_CLASSIFICATION	2.136326967605491E-6	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9999974645039195	WITHOUT_CLASSIFICATION	2.535496080422824E-6	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9999976183712354	WITHOUT_CLASSIFICATION	2.381628764652893E-6	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9999976956631439	WITHOUT_CLASSIFICATION	2.3043368561322917E-6	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9999983874348518	WITHOUT_CLASSIFICATION	1.6125651481623995E-6	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9999975130629909	WITHOUT_CLASSIFICATION	2.4869370090454964E-6	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9999985381946964	WITHOUT_CLASSIFICATION	1.4618053036180846E-6	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999998394294551	WITHOUT_CLASSIFICATION	1.605705448851975E-7	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999998618900675	WITHOUT_CLASSIFICATION	1.3810993245559253E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996491182134	WITHOUT_CLASSIFICATION	3.508817866219649E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996491182134	WITHOUT_CLASSIFICATION	3.508817866219649E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996491182134	WITHOUT_CLASSIFICATION	3.508817866219649E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996491182134	WITHOUT_CLASSIFICATION	3.508817866219649E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996491182134	WITHOUT_CLASSIFICATION	3.508817866219649E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996491182134	WITHOUT_CLASSIFICATION	3.508817866219649E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996491182134	WITHOUT_CLASSIFICATION	3.508817866219649E-7	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999991090537546	WITHOUT_CLASSIFICATION	8.909462454573969E-7	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999991090537546	WITHOUT_CLASSIFICATION	8.909462454573969E-7	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999991090537546	WITHOUT_CLASSIFICATION	8.909462454573969E-7	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999991090537546	WITHOUT_CLASSIFICATION	8.909462454573969E-7	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9995200994962952	WITHOUT_CLASSIFICATION	4.799005037047935E-4	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9995200994962952	WITHOUT_CLASSIFICATION	4.799005037047935E-4	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999999980317997	WITHOUT_CLASSIFICATION	1.968200301483321E-9	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999843445751929	WITHOUT_CLASSIFICATION	1.565542480707321E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999843445751929	WITHOUT_CLASSIFICATION	1.565542480707321E-5	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999950609531385	WITHOUT_CLASSIFICATION	4.939046861578052E-6	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999937180788391	WITHOUT_CLASSIFICATION	6.281921160891697E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998994568896	WITHOUT_CLASSIFICATION	1.0054311048750394E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998994568896	WITHOUT_CLASSIFICATION	1.0054311048750394E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998994568896	WITHOUT_CLASSIFICATION	1.0054311048750394E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998994568896	WITHOUT_CLASSIFICATION	1.0054311048750394E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998994568896	WITHOUT_CLASSIFICATION	1.0054311048750394E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998994568896	WITHOUT_CLASSIFICATION	1.0054311048750394E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998994568896	WITHOUT_CLASSIFICATION	1.0054311048750394E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997537253853	WITHOUT_CLASSIFICATION	2.4627461474880614E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999092496357	WITHOUT_CLASSIFICATION	9.075036434543592E-8	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.999982171343898	WITHOUT_CLASSIFICATION	1.782865610205835E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.999982171343898	WITHOUT_CLASSIFICATION	1.782865610205835E-5	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999998672357445	WITHOUT_CLASSIFICATION	1.3276425540167156E-7	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999989733781584	WITHOUT_CLASSIFICATION	1.026621841634041E-6	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999989733781584	WITHOUT_CLASSIFICATION	1.026621841634041E-6	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999999996596504	WITHOUT_CLASSIFICATION	3.4034957147845534E-10	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9966915445232428	IMPLEMENTATION	0.0033084554767570918	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999998408446931	WITHOUT_CLASSIFICATION	1.591553069179832E-7	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999999060844176	WITHOUT_CLASSIFICATION	9.391558244771992E-8	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999998858840694	WITHOUT_CLASSIFICATION	1.1411593053976914E-7	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999970746166286	WITHOUT_CLASSIFICATION	2.925383371462353E-6	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.999991891443799	WITHOUT_CLASSIFICATION	8.108556201070199E-6	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.999997693256534	WITHOUT_CLASSIFICATION	2.3067434660435652E-6	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999991431449725	WITHOUT_CLASSIFICATION	8.568550273940076E-7	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9996017238086586	WITHOUT_CLASSIFICATION	3.982761913413356E-4	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999877521427507	WITHOUT_CLASSIFICATION	1.2247857249262913E-5	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999999009423692	WITHOUT_CLASSIFICATION	9.90576308030431E-8	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999933275767	WITHOUT_CLASSIFICATION	6.672423281825161E-9	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999485584407061	WITHOUT_CLASSIFICATION	5.144155929398327E-5	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999818797557294	WITHOUT_CLASSIFICATION	1.8120244270689656E-5	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999980241955851	WITHOUT_CLASSIFICATION	1.9758044149038163E-6	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999269601973	WITHOUT_CLASSIFICATION	7.303980263969337E-8	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999925153162702	WITHOUT_CLASSIFICATION	7.4846837298214105E-6	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9998766698675179	WITHOUT_CLASSIFICATION	1.2333013248212924E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9998766698675179	WITHOUT_CLASSIFICATION	1.2333013248212924E-4	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999658885499921	WITHOUT_CLASSIFICATION	3.41114500078427E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999878198057	WITHOUT_CLASSIFICATION	1.2180194233439012E-8	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999998518147464	WITHOUT_CLASSIFICATION	1.481852536794353E-7	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999995992619404	WITHOUT_CLASSIFICATION	4.007380596116726E-6	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999706715758508	WITHOUT_CLASSIFICATION	2.9328424149231143E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999706715758508	WITHOUT_CLASSIFICATION	2.9328424149231143E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999706715758508	WITHOUT_CLASSIFICATION	2.9328424149231143E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999279393560871	WITHOUT_CLASSIFICATION	7.206064391291883E-5	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999997375731041	WITHOUT_CLASSIFICATION	2.6242689595531014E-7	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999998838840803	WITHOUT_CLASSIFICATION	1.1611591961204673E-7	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999999982469235	WITHOUT_CLASSIFICATION	1.7530764614380492E-9	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999999875100241	WITHOUT_CLASSIFICATION	1.2489976035163117E-8	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.999999808945773	WITHOUT_CLASSIFICATION	1.9105422703244852E-7	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999999391261846	WITHOUT_CLASSIFICATION	6.087381546294964E-8	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999926296407	WITHOUT_CLASSIFICATION	7.370359236904727E-9	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999997337836471	WITHOUT_CLASSIFICATION	2.662163527720376E-7	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999990420943302	WITHOUT_CLASSIFICATION	9.57905669798349E-7	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.999999938873982	WITHOUT_CLASSIFICATION	6.11260179618661E-8	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999999807007962	WITHOUT_CLASSIFICATION	1.929920372086426E-8	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8892325787319656	IMPLEMENTATION	0.11076742126803438	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999999609940051	WITHOUT_CLASSIFICATION	3.90059948281852E-8	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999767208693152	WITHOUT_CLASSIFICATION	2.327913068474702E-5	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.999999994214827	WITHOUT_CLASSIFICATION	5.785173093494885E-9	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999999493960806	WITHOUT_CLASSIFICATION	5.060391935326211E-8	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999998488197434	WITHOUT_CLASSIFICATION	1.5118025663643373E-7	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999082000032438	WITHOUT_CLASSIFICATION	9.179999675612633E-5	IMPLEMENTATION
