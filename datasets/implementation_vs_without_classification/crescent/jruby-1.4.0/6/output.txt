// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.8111260243814957	WITHOUT_CLASSIFICATION	0.1888739756185043	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.9575679716362077	IMPLEMENTATION	0.042432028363792375	WITHOUT_CLASSIFICATION
// TODO: Someday, enable.	IMPLEMENTATION	0.9527958800396217	IMPLEMENTATION	0.047204119960378425	WITHOUT_CLASSIFICATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.57570931377946	WITHOUT_CLASSIFICATION	0.42429068622054	IMPLEMENTATION
// TODO: non-strict option	IMPLEMENTATION	0.9712055354656967	IMPLEMENTATION	0.028794464534303312	WITHOUT_CLASSIFICATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.9685421196965641	IMPLEMENTATION	0.031457880303435916	WITHOUT_CLASSIFICATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.7844082808324174	IMPLEMENTATION	0.2155917191675825	WITHOUT_CLASSIFICATION
// TODO: rescan code range ?	IMPLEMENTATION	0.9324007330068751	IMPLEMENTATION	0.06759926699312495	WITHOUT_CLASSIFICATION
// TODO: rescan code range ?	IMPLEMENTATION	0.9324007330068751	IMPLEMENTATION	0.06759926699312495	WITHOUT_CLASSIFICATION
// TODO: pass this in?	IMPLEMENTATION	0.9919031643319188	IMPLEMENTATION	0.008096835668081122	WITHOUT_CLASSIFICATION
// FIXME: Pass block down?	IMPLEMENTATION	0.6873989187164677	WITHOUT_CLASSIFICATION	0.31260108128353226	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.9977043594981654	IMPLEMENTATION	0.002295640501834686	WITHOUT_CLASSIFICATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.6606244312074254	IMPLEMENTATION	0.3393755687925745	WITHOUT_CLASSIFICATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.8245675208478248	WITHOUT_CLASSIFICATION	0.17543247915217516	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.8312450687090943	IMPLEMENTATION	0.16875493129090557	WITHOUT_CLASSIFICATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.6810365209776184	WITHOUT_CLASSIFICATION	0.31896347902238176	IMPLEMENTATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.7980917041911479	WITHOUT_CLASSIFICATION	0.20190829580885208	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.9453881813313179	IMPLEMENTATION	0.054611818668682234	WITHOUT_CLASSIFICATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.892833705276883	WITHOUT_CLASSIFICATION	0.10716629472311702	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.7106789744977359	WITHOUT_CLASSIFICATION	0.289321025502264	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.9633754396949555	IMPLEMENTATION	0.03662456030504443	WITHOUT_CLASSIFICATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.5298029645318306	IMPLEMENTATION	0.47019703546816927	WITHOUT_CLASSIFICATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.9628569976032801	IMPLEMENTATION	0.03714300239671987	WITHOUT_CLASSIFICATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.8645281448933266	IMPLEMENTATION	0.13547185510667334	WITHOUT_CLASSIFICATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.9285598333822455	IMPLEMENTATION	0.07144016661775465	WITHOUT_CLASSIFICATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.9538157073560884	IMPLEMENTATION	0.04618429264391146	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.9994570719601622	IMPLEMENTATION	5.429280398379113E-4	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9998531416867664	IMPLEMENTATION	1.4685831323362164E-4	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.9994570719601622	IMPLEMENTATION	5.429280398379113E-4	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9998531416867664	IMPLEMENTATION	1.4685831323362164E-4	WITHOUT_CLASSIFICATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.9995756626896088	IMPLEMENTATION	4.2433731039117283E-4	WITHOUT_CLASSIFICATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.5760354111062231	WITHOUT_CLASSIFICATION	0.42396458889377686	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.9973664459510745	IMPLEMENTATION	0.002633554048925449	WITHOUT_CLASSIFICATION
// TODO: make threadsafe	IMPLEMENTATION	0.995088707812819	IMPLEMENTATION	0.00491129218718104	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9762958199536548	IMPLEMENTATION	0.023704180046345294	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9762958199536548	IMPLEMENTATION	0.023704180046345294	WITHOUT_CLASSIFICATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.9977894303253603	WITHOUT_CLASSIFICATION	0.0022105696746397884	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.8084667194862201	IMPLEMENTATION	0.19153328051377994	WITHOUT_CLASSIFICATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.9940486795193192	IMPLEMENTATION	0.005951320480680832	WITHOUT_CLASSIFICATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.9178851559899112	IMPLEMENTATION	0.0821148440100888	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9325104511856811	IMPLEMENTATION	0.06748954881431893	WITHOUT_CLASSIFICATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.987366262471911	IMPLEMENTATION	0.012633737528089113	WITHOUT_CLASSIFICATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.8994838831476621	IMPLEMENTATION	0.10051611685233788	WITHOUT_CLASSIFICATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.9866932737042596	WITHOUT_CLASSIFICATION	0.013306726295740473	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.686748736282945	IMPLEMENTATION	0.313251263717055	WITHOUT_CLASSIFICATION
// TODO: add trace call?	IMPLEMENTATION	0.9727755922956083	IMPLEMENTATION	0.027224407704391756	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9585036261492104	WITHOUT_CLASSIFICATION	0.04149637385078956	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.7371648997806356	WITHOUT_CLASSIFICATION	0.26283510021936435	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.851632228504537	WITHOUT_CLASSIFICATION	0.14836777149546307	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.8838590439872813	IMPLEMENTATION	0.11614095601271868	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9585036261492104	WITHOUT_CLASSIFICATION	0.04149637385078956	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.9990646429445998	WITHOUT_CLASSIFICATION	9.353570554002591E-4	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.797095598889097	IMPLEMENTATION	0.20290440111090305	WITHOUT_CLASSIFICATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.8871204552595818	IMPLEMENTATION	0.1128795447404181	WITHOUT_CLASSIFICATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.6531889373569875	IMPLEMENTATION	0.34681106264301254	WITHOUT_CLASSIFICATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.6178063315237693	WITHOUT_CLASSIFICATION	0.3821936684762306	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.7361110390211102	WITHOUT_CLASSIFICATION	0.2638889609788899	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.9919142078317289	WITHOUT_CLASSIFICATION	0.00808579216827118	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9483059504820608	WITHOUT_CLASSIFICATION	0.05169404951793923	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9998829003748975	WITHOUT_CLASSIFICATION	1.1709962510245625E-4	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.9878015981441132	WITHOUT_CLASSIFICATION	0.012198401855886797	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9998211742465708	IMPLEMENTATION	1.7882575342926429E-4	WITHOUT_CLASSIFICATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9998211742465708	IMPLEMENTATION	1.7882575342926429E-4	WITHOUT_CLASSIFICATION
// TODO: validate port as numeric	IMPLEMENTATION	0.9805350708623397	IMPLEMENTATION	0.019464929137660326	WITHOUT_CLASSIFICATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9999964083906049	IMPLEMENTATION	3.5916093951730746E-6	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.8376423020187271	IMPLEMENTATION	0.16235769798127286	WITHOUT_CLASSIFICATION
// TODO: deal with varargs	IMPLEMENTATION	0.7514857744169213	IMPLEMENTATION	0.2485142255830786	WITHOUT_CLASSIFICATION
// TODO: deal with varargs	IMPLEMENTATION	0.7514857744169213	IMPLEMENTATION	0.2485142255830786	WITHOUT_CLASSIFICATION
// TODO: other reserved names?	IMPLEMENTATION	0.9658883372859277	IMPLEMENTATION	0.03411166271407238	WITHOUT_CLASSIFICATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.8381221165908262	IMPLEMENTATION	0.1618778834091736	WITHOUT_CLASSIFICATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.9636211781811334	IMPLEMENTATION	0.03637882181886674	WITHOUT_CLASSIFICATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.8738546640312417	WITHOUT_CLASSIFICATION	0.12614533596875832	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.7305631690485554	WITHOUT_CLASSIFICATION	0.26943683095144455	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.7305631690485554	WITHOUT_CLASSIFICATION	0.26943683095144455	IMPLEMENTATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.9939622201494146	IMPLEMENTATION	0.006037779850585508	WITHOUT_CLASSIFICATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9282532716502764	IMPLEMENTATION	0.07174672834972357	WITHOUT_CLASSIFICATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9998775001808715	WITHOUT_CLASSIFICATION	1.2249981912842707E-4	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.9998458519131593	IMPLEMENTATION	1.5414808684074952E-4	WITHOUT_CLASSIFICATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.9594479957204364	IMPLEMENTATION	0.04055200427956363	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.6757325068543789	WITHOUT_CLASSIFICATION	0.3242674931456211	IMPLEMENTATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.9957612553018639	IMPLEMENTATION	0.004238744698136125	WITHOUT_CLASSIFICATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.9578415020338639	WITHOUT_CLASSIFICATION	0.04215849796613601	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.8786179763262204	WITHOUT_CLASSIFICATION	0.12138202367377957	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.8786179763262204	WITHOUT_CLASSIFICATION	0.12138202367377957	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.73954152874636	WITHOUT_CLASSIFICATION	0.2604584712536399	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.5344152634699321	IMPLEMENTATION	0.465584736530068	WITHOUT_CLASSIFICATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9965658969563401	WITHOUT_CLASSIFICATION	0.003434103043659883	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9965658969563401	WITHOUT_CLASSIFICATION	0.003434103043659883	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.8826120665615665	IMPLEMENTATION	0.11738793343843343	WITHOUT_CLASSIFICATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.6738870546663873	IMPLEMENTATION	0.3261129453336125	WITHOUT_CLASSIFICATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.6738870546663873	IMPLEMENTATION	0.3261129453336125	WITHOUT_CLASSIFICATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.6738870546663873	IMPLEMENTATION	0.3261129453336125	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.8874881257618878	IMPLEMENTATION	0.11251187423811211	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.8874881257618878	IMPLEMENTATION	0.11251187423811211	WITHOUT_CLASSIFICATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.987594736945963	IMPLEMENTATION	0.012405263054036867	WITHOUT_CLASSIFICATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9977007310076071	WITHOUT_CLASSIFICATION	0.0022992689923928785	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.7712919275623843	IMPLEMENTATION	0.22870807243761573	WITHOUT_CLASSIFICATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9993845091176845	IMPLEMENTATION	6.154908823154976E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9965619102553429	IMPLEMENTATION	0.0034380897446571893	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9965619102553429	IMPLEMENTATION	0.0034380897446571893	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9965619102553429	IMPLEMENTATION	0.0034380897446571893	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9325104511856811	IMPLEMENTATION	0.06748954881431893	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9325104511856811	IMPLEMENTATION	0.06748954881431893	WITHOUT_CLASSIFICATION
// TODO: check for ascii string	IMPLEMENTATION	0.6497308920574839	IMPLEMENTATION	0.35026910794251614	WITHOUT_CLASSIFICATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.9791185565958503	IMPLEMENTATION	0.020881443404149685	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9762958199536548	IMPLEMENTATION	0.023704180046345294	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9762958199536548	IMPLEMENTATION	0.023704180046345294	WITHOUT_CLASSIFICATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.7314355875280187	IMPLEMENTATION	0.26856441247198126	WITHOUT_CLASSIFICATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.7944367301628175	WITHOUT_CLASSIFICATION	0.20556326983718262	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.6810365209776184	WITHOUT_CLASSIFICATION	0.31896347902238176	IMPLEMENTATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9998609978930543	WITHOUT_CLASSIFICATION	1.390021069458168E-4	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.9987195469217695	IMPLEMENTATION	0.0012804530782305726	WITHOUT_CLASSIFICATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.8924515643148093	IMPLEMENTATION	0.10754843568519071	WITHOUT_CLASSIFICATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.9970850767312394	WITHOUT_CLASSIFICATION	0.0029149232687606377	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9996245498960267	WITHOUT_CLASSIFICATION	3.7545010397336273E-4	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9999939486979871	WITHOUT_CLASSIFICATION	6.051302012950934E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999915585015984	WITHOUT_CLASSIFICATION	8.441498401678695E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999915585015984	WITHOUT_CLASSIFICATION	8.441498401678695E-6	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999803847168428	WITHOUT_CLASSIFICATION	1.9615283157217052E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999803847168428	WITHOUT_CLASSIFICATION	1.9615283157217052E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999743148885467	WITHOUT_CLASSIFICATION	2.5685111453364623E-5	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.999999944812949	WITHOUT_CLASSIFICATION	5.5187051183850416E-8	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9999945151769534	WITHOUT_CLASSIFICATION	5.4848230466316345E-6	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999945671935351	WITHOUT_CLASSIFICATION	5.432806464944599E-6	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999918496725457	WITHOUT_CLASSIFICATION	8.150327454263998E-6	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999918496725457	WITHOUT_CLASSIFICATION	8.150327454263998E-6	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9999949035685287	WITHOUT_CLASSIFICATION	5.0964314712485275E-6	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999862601623588	WITHOUT_CLASSIFICATION	1.3739837641234163E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999862601623588	WITHOUT_CLASSIFICATION	1.3739837641234163E-5	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9999832201307178	WITHOUT_CLASSIFICATION	1.6779869282141024E-5	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999933109433148	WITHOUT_CLASSIFICATION	6.689056685228395E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999902197507201	WITHOUT_CLASSIFICATION	9.780249279919462E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999902197507201	WITHOUT_CLASSIFICATION	9.780249279919462E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999902197507201	WITHOUT_CLASSIFICATION	9.780249279919462E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999902197507201	WITHOUT_CLASSIFICATION	9.780249279919462E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999902197507201	WITHOUT_CLASSIFICATION	9.780249279919462E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999902197507201	WITHOUT_CLASSIFICATION	9.780249279919462E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999902197507201	WITHOUT_CLASSIFICATION	9.780249279919462E-6	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999977890234758	WITHOUT_CLASSIFICATION	2.2109765241963222E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999977890234758	WITHOUT_CLASSIFICATION	2.2109765241963222E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999977890234758	WITHOUT_CLASSIFICATION	2.2109765241963222E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999977890234758	WITHOUT_CLASSIFICATION	2.2109765241963222E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999977890234758	WITHOUT_CLASSIFICATION	2.2109765241963222E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999977890234758	WITHOUT_CLASSIFICATION	2.2109765241963222E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.999977890234758	WITHOUT_CLASSIFICATION	2.2109765241963222E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.99996937073887	WITHOUT_CLASSIFICATION	3.062926112989391E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.99996937073887	WITHOUT_CLASSIFICATION	3.062926112989391E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.99996937073887	WITHOUT_CLASSIFICATION	3.062926112989391E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.99996937073887	WITHOUT_CLASSIFICATION	3.062926112989391E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.99996937073887	WITHOUT_CLASSIFICATION	3.062926112989391E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.99996937073887	WITHOUT_CLASSIFICATION	3.062926112989391E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999908124093335	WITHOUT_CLASSIFICATION	9.187590666431719E-6	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999908124093335	WITHOUT_CLASSIFICATION	9.187590666431719E-6	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999908124093335	WITHOUT_CLASSIFICATION	9.187590666431719E-6	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999908124093335	WITHOUT_CLASSIFICATION	9.187590666431719E-6	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999908124093335	WITHOUT_CLASSIFICATION	9.187590666431719E-6	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999908124093335	WITHOUT_CLASSIFICATION	9.187590666431719E-6	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999845115530659	WITHOUT_CLASSIFICATION	1.548844693415378E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999845115530659	WITHOUT_CLASSIFICATION	1.548844693415378E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999845115530659	WITHOUT_CLASSIFICATION	1.548844693415378E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999845115530659	WITHOUT_CLASSIFICATION	1.548844693415378E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999845115530659	WITHOUT_CLASSIFICATION	1.548844693415378E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999845115530659	WITHOUT_CLASSIFICATION	1.548844693415378E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999845115530659	WITHOUT_CLASSIFICATION	1.548844693415378E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999991628610865	WITHOUT_CLASSIFICATION	8.371389135027242E-6	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999991628610865	WITHOUT_CLASSIFICATION	8.371389135027242E-6	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999991628610865	WITHOUT_CLASSIFICATION	8.371389135027242E-6	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999991628610865	WITHOUT_CLASSIFICATION	8.371389135027242E-6	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999568814662334	WITHOUT_CLASSIFICATION	4.3118533766520034E-5	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999568814662334	WITHOUT_CLASSIFICATION	4.3118533766520034E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999989975805271	WITHOUT_CLASSIFICATION	1.0024194728355455E-6	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9999992960271326	WITHOUT_CLASSIFICATION	7.039728674319609E-7	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9999628982355225	WITHOUT_CLASSIFICATION	3.710176447751268E-5	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999995378163489	WITHOUT_CLASSIFICATION	4.6218365106253357E-7	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999997135256455	WITHOUT_CLASSIFICATION	2.864743544336092E-7	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999983361263131	WITHOUT_CLASSIFICATION	1.6638736869554389E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999983361263131	WITHOUT_CLASSIFICATION	1.6638736869554389E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999983361263131	WITHOUT_CLASSIFICATION	1.6638736869554389E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999983361263131	WITHOUT_CLASSIFICATION	1.6638736869554389E-6	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999929114140731	WITHOUT_CLASSIFICATION	7.088585926902215E-6	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999992085000663	WITHOUT_CLASSIFICATION	7.914999337288942E-7	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999957587713724	WITHOUT_CLASSIFICATION	4.2412286276282925E-6	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999880554003782	WITHOUT_CLASSIFICATION	1.194459962170763E-5	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9999921539878884	WITHOUT_CLASSIFICATION	7.846012111623157E-6	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999984627083456	WITHOUT_CLASSIFICATION	1.537291654333251E-6	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999997519761337	WITHOUT_CLASSIFICATION	2.480238664009707E-7	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999997234376451	WITHOUT_CLASSIFICATION	2.765623549137428E-7	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999998768338841	WITHOUT_CLASSIFICATION	1.2316611591627217E-7	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.999995929416462	WITHOUT_CLASSIFICATION	4.070583537995535E-6	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999946004755478	WITHOUT_CLASSIFICATION	5.39952445217411E-6	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999999360657843	WITHOUT_CLASSIFICATION	6.39342157063807E-8	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999775648288723	WITHOUT_CLASSIFICATION	2.24351711276675E-5	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999995126805781	WITHOUT_CLASSIFICATION	4.873194220184247E-7	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999988794608584	WITHOUT_CLASSIFICATION	1.1205391416269057E-6	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999970837021624	WITHOUT_CLASSIFICATION	2.916297837622463E-6	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999690574843146	WITHOUT_CLASSIFICATION	3.09425156853007E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999983361263131	WITHOUT_CLASSIFICATION	1.6638736869554389E-6	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999990820031686	WITHOUT_CLASSIFICATION	9.179968313887057E-7	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.999999891438116	WITHOUT_CLASSIFICATION	1.0856188396536977E-7	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999995677683091	WITHOUT_CLASSIFICATION	4.322316908246583E-7	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999490115487133	WITHOUT_CLASSIFICATION	5.098845128663937E-5	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999987693790503	WITHOUT_CLASSIFICATION	1.2306209496909032E-6	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999983143127273	WITHOUT_CLASSIFICATION	1.685687272560852E-6	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.999990672620452	WITHOUT_CLASSIFICATION	9.327379547953212E-6	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999914535179861	WITHOUT_CLASSIFICATION	8.546482013980863E-6	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999452035887768	WITHOUT_CLASSIFICATION	5.4796411223152795E-5	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999998181109937	WITHOUT_CLASSIFICATION	1.818890062732697E-7	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.999991105078483	WITHOUT_CLASSIFICATION	8.894921517067313E-6	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999980687646699	WITHOUT_CLASSIFICATION	1.9312353300837892E-6	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999643474863009	WITHOUT_CLASSIFICATION	3.565251369907103E-5	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.999971547632047	WITHOUT_CLASSIFICATION	2.8452367952994545E-5	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999926352448698	WITHOUT_CLASSIFICATION	7.3647551301919655E-6	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999971412662172	WITHOUT_CLASSIFICATION	2.8587337828502675E-6	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9999967554933498	WITHOUT_CLASSIFICATION	3.2445066501924525E-6	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.999999594684578	WITHOUT_CLASSIFICATION	4.0531542203422373E-7	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.999999784371845	WITHOUT_CLASSIFICATION	2.1562815492868558E-7	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999998982892366	WITHOUT_CLASSIFICATION	1.0171076337154869E-7	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999985225838687	WITHOUT_CLASSIFICATION	1.4774161313409418E-6	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.999995029462419	WITHOUT_CLASSIFICATION	4.970537580904298E-6	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999997938920102	WITHOUT_CLASSIFICATION	2.061079897784666E-7	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9999476653254564	WITHOUT_CLASSIFICATION	5.2334674543523594E-5	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.999992008902973	WITHOUT_CLASSIFICATION	7.991097027036176E-6	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9999974903157427	WITHOUT_CLASSIFICATION	2.5096842572579646E-6	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999918408305003	WITHOUT_CLASSIFICATION	8.159169499767377E-6	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999995753979498	WITHOUT_CLASSIFICATION	4.2460205017642484E-7	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999998902292658	WITHOUT_CLASSIFICATION	1.0977073415635414E-7	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999960511134557	WITHOUT_CLASSIFICATION	3.948886544234506E-6	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999990178579437	WITHOUT_CLASSIFICATION	9.821420562911201E-7	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999976936112106	WITHOUT_CLASSIFICATION	2.306388789409936E-6	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999989769789774	WITHOUT_CLASSIFICATION	1.0230210225471795E-6	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999962782926279	WITHOUT_CLASSIFICATION	3.7217073721228748E-6	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999979038574489	WITHOUT_CLASSIFICATION	2.0961425511237837E-6	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999908053064779	WITHOUT_CLASSIFICATION	9.194693522104608E-6	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999999375618512	WITHOUT_CLASSIFICATION	6.243814874977456E-8	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.999998463383969	WITHOUT_CLASSIFICATION	1.536616030954786E-6	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999891096974259	WITHOUT_CLASSIFICATION	1.0890302573975014E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999946243223062	WITHOUT_CLASSIFICATION	5.375677693713037E-6	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999993227349531	WITHOUT_CLASSIFICATION	6.772650470257761E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.99999666581364	WITHOUT_CLASSIFICATION	3.334186360008662E-6	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999604518326259	WITHOUT_CLASSIFICATION	3.954816737417012E-5	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9004549360054623	WITHOUT_CLASSIFICATION	0.09954506399453758	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9004549360054623	WITHOUT_CLASSIFICATION	0.09954506399453758	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9996656309675862	WITHOUT_CLASSIFICATION	3.343690324137335E-4	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999997866867629	WITHOUT_CLASSIFICATION	2.1331323697264664E-7	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999981667945377	WITHOUT_CLASSIFICATION	1.8332054623485392E-6	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999977965304027	WITHOUT_CLASSIFICATION	2.203469597366604E-6	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999981636452289	WITHOUT_CLASSIFICATION	1.8363547711150004E-6	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999702668515289	WITHOUT_CLASSIFICATION	2.9733148471200284E-5	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9999968694909919	WITHOUT_CLASSIFICATION	3.130509008224112E-6	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9999920968933678	WITHOUT_CLASSIFICATION	7.903106632260918E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.99999666581364	WITHOUT_CLASSIFICATION	3.334186360008662E-6	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.999990907901466	WITHOUT_CLASSIFICATION	9.092098533991759E-6	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999932903545199	WITHOUT_CLASSIFICATION	6.7096454800077215E-6	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999851706569265	WITHOUT_CLASSIFICATION	1.4829343073416626E-5	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999978218092516	WITHOUT_CLASSIFICATION	2.1781907484034393E-6	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999995615866754	WITHOUT_CLASSIFICATION	4.3841332462937233E-7	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999991544818436	WITHOUT_CLASSIFICATION	8.455181562938626E-7	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999991544818436	WITHOUT_CLASSIFICATION	8.455181562938626E-7	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999991544818436	WITHOUT_CLASSIFICATION	8.455181562938626E-7	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999971058045197	WITHOUT_CLASSIFICATION	2.8941954802229546E-6	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999999960743982	WITHOUT_CLASSIFICATION	3.925601851273821E-9	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999994999371838	WITHOUT_CLASSIFICATION	5.000628161719205E-7	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.999999828708787	WITHOUT_CLASSIFICATION	1.712912130369163E-7	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999999325288428	WITHOUT_CLASSIFICATION	6.747115724346178E-8	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999999521472668	WITHOUT_CLASSIFICATION	4.785273323541111E-8	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999976780563979	WITHOUT_CLASSIFICATION	2.321943602139679E-6	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999996745677256	WITHOUT_CLASSIFICATION	3.2543227430066685E-7	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999985757853259	WITHOUT_CLASSIFICATION	1.4242146739795701E-6	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999985757853259	WITHOUT_CLASSIFICATION	1.4242146739795701E-6	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999991552578107	WITHOUT_CLASSIFICATION	8.4474218916769E-7	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999451295584	WITHOUT_CLASSIFICATION	5.4870441618849967E-8	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999993178580384	WITHOUT_CLASSIFICATION	6.821419615799643E-7	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999993178580384	WITHOUT_CLASSIFICATION	6.821419615799643E-7	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999995655307405	WITHOUT_CLASSIFICATION	4.344692593928583E-7	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999976697066854	WITHOUT_CLASSIFICATION	2.330293314611857E-6	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999973535621203	WITHOUT_CLASSIFICATION	2.6464378796992592E-6	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999997527851173	WITHOUT_CLASSIFICATION	2.4721488265800974E-7	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999976334472609	WITHOUT_CLASSIFICATION	2.3665527390329662E-6	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.9999995374117816	WITHOUT_CLASSIFICATION	4.625882182980083E-7	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999870525962711	WITHOUT_CLASSIFICATION	1.2947403728918481E-5	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9999962937611453	WITHOUT_CLASSIFICATION	3.7062388546938804E-6	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9999932058260912	WITHOUT_CLASSIFICATION	6.794173908749456E-6	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999994891181987	WITHOUT_CLASSIFICATION	5.108818013441567E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.99999666581364	WITHOUT_CLASSIFICATION	3.334186360008662E-6	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.999989648727963	WITHOUT_CLASSIFICATION	1.035127203688975E-5	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999995271113286	WITHOUT_CLASSIFICATION	4.728886714674232E-7	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999963360172203	WITHOUT_CLASSIFICATION	3.663982779782259E-6	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999609138538292	WITHOUT_CLASSIFICATION	3.908614617077341E-5	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999997877182744	WITHOUT_CLASSIFICATION	2.1228172566788474E-7	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999910468549114	WITHOUT_CLASSIFICATION	8.95314508866082E-6	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999960199794923	WITHOUT_CLASSIFICATION	3.980020507740242E-6	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999940236149741	WITHOUT_CLASSIFICATION	5.976385025926266E-6	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999958107840026	WITHOUT_CLASSIFICATION	4.189215997406541E-6	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.999995712126465	WITHOUT_CLASSIFICATION	4.28787353504996E-6	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999986810641558	WITHOUT_CLASSIFICATION	1.3189358442254156E-6	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999999476866861	WITHOUT_CLASSIFICATION	5.2313313996478594E-8	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999939353376447	WITHOUT_CLASSIFICATION	6.0646623552706224E-6	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999984230618374	WITHOUT_CLASSIFICATION	1.576938162624876E-6	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999986181643993	WITHOUT_CLASSIFICATION	1.381835600775812E-6	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9999896155081505	WITHOUT_CLASSIFICATION	1.0384491849483365E-5	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.999994064432087	WITHOUT_CLASSIFICATION	5.935567912925725E-6	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9999992962701179	WITHOUT_CLASSIFICATION	7.037298821912478E-7	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999587413478896	WITHOUT_CLASSIFICATION	4.1258652110278784E-5	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.999973214634028	WITHOUT_CLASSIFICATION	2.678536597204919E-5	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999989725215559	WITHOUT_CLASSIFICATION	1.0274784441036174E-6	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.999999382921659	WITHOUT_CLASSIFICATION	6.170783410084887E-7	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999996188903819	WITHOUT_CLASSIFICATION	3.811096181019244E-7	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999999542595763	WITHOUT_CLASSIFICATION	4.574042368920406E-8	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999999809781557	WITHOUT_CLASSIFICATION	1.9021844394802808E-8	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999995568469718	WITHOUT_CLASSIFICATION	4.431530281125783E-7	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999985813227927	WITHOUT_CLASSIFICATION	1.4186772071994257E-6	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999983228584155	WITHOUT_CLASSIFICATION	1.6771415845503773E-6	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999999584753745	WITHOUT_CLASSIFICATION	4.152462551516745E-8	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999966814600094	WITHOUT_CLASSIFICATION	3.318539990588777E-6	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999999876204634	WITHOUT_CLASSIFICATION	1.2379536613492909E-8	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9999998789008906	WITHOUT_CLASSIFICATION	1.2109910934083027E-7	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999776427181655	WITHOUT_CLASSIFICATION	2.2357281834572827E-5	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.999998784579202	WITHOUT_CLASSIFICATION	1.2154207979657078E-6	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999849092714762	WITHOUT_CLASSIFICATION	1.5090728523803475E-5	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999995327389226	WITHOUT_CLASSIFICATION	4.672610774085378E-7	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999960498454021	WITHOUT_CLASSIFICATION	3.950154597952753E-6	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9995427286900704	WITHOUT_CLASSIFICATION	4.572713099294475E-4	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999992080831795	WITHOUT_CLASSIFICATION	7.919168204444331E-7	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999988510649733	WITHOUT_CLASSIFICATION	1.1489350266964338E-6	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999988430556879	WITHOUT_CLASSIFICATION	1.1569443121904315E-6	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9999996430364921	WITHOUT_CLASSIFICATION	3.569635078692793E-7	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999986096393961	WITHOUT_CLASSIFICATION	1.3903606037916596E-6	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.999997466651727	WITHOUT_CLASSIFICATION	2.533348272991668E-6	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9999979399436683	WITHOUT_CLASSIFICATION	2.060056331827727E-6	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9999997959965272	WITHOUT_CLASSIFICATION	2.0400347288186347E-7	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9999873851211543	WITHOUT_CLASSIFICATION	1.2614878845818131E-5	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999916642641771	WITHOUT_CLASSIFICATION	8.335735822861534E-6	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999954256581106	WITHOUT_CLASSIFICATION	4.574341889362304E-6	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999988746253557	WITHOUT_CLASSIFICATION	1.1253746441855478E-6	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999986831436756	WITHOUT_CLASSIFICATION	1.3168563243887485E-6	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999907804688356	WITHOUT_CLASSIFICATION	9.219531164429375E-6	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999978300040818	WITHOUT_CLASSIFICATION	2.169995918164412E-6	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.99999857190619	WITHOUT_CLASSIFICATION	1.428093809967107E-6	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999968751675296	WITHOUT_CLASSIFICATION	3.1248324704904287E-6	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999941744153618	WITHOUT_CLASSIFICATION	5.825584638192743E-6	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999537765989595	WITHOUT_CLASSIFICATION	4.6223401040526994E-5	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.999999329043296	WITHOUT_CLASSIFICATION	6.709567040650804E-7	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.999993068920332	WITHOUT_CLASSIFICATION	6.931079668003534E-6	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9999445298514318	WITHOUT_CLASSIFICATION	5.547014856825244E-5	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999964572774251	WITHOUT_CLASSIFICATION	3.5427225747905095E-6	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999964572774251	WITHOUT_CLASSIFICATION	3.5427225747905095E-6	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999969762904656	WITHOUT_CLASSIFICATION	3.02370953435253E-6	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999969762904656	WITHOUT_CLASSIFICATION	3.02370953435253E-6	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999988434161884	WITHOUT_CLASSIFICATION	1.1565838116552798E-6	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999988434161884	WITHOUT_CLASSIFICATION	1.1565838116552798E-6	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999954849933079	WITHOUT_CLASSIFICATION	4.515006692027785E-6	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999954849933079	WITHOUT_CLASSIFICATION	4.515006692027785E-6	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9998832276045887	WITHOUT_CLASSIFICATION	1.1677239541129427E-4	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9999285437756443	WITHOUT_CLASSIFICATION	7.145622435572371E-5	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999970476954664	WITHOUT_CLASSIFICATION	2.9523045335805546E-6	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999999053195362	WITHOUT_CLASSIFICATION	9.468046386247925E-8	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999991639165812	WITHOUT_CLASSIFICATION	8.360834188458231E-7	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999992741366575	WITHOUT_CLASSIFICATION	7.258633424572142E-7	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999935271565974	WITHOUT_CLASSIFICATION	6.472843402581558E-6	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999993564815017	WITHOUT_CLASSIFICATION	6.435184982483562E-7	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999965636486768	WITHOUT_CLASSIFICATION	3.436351323250603E-6	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999997687532965	WITHOUT_CLASSIFICATION	2.312467034558299E-7	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999986062104472	WITHOUT_CLASSIFICATION	1.393789552766763E-6	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999977968800566	WITHOUT_CLASSIFICATION	2.203119943394976E-6	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999992685214809	WITHOUT_CLASSIFICATION	7.314785191450113E-7	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999855057121385	WITHOUT_CLASSIFICATION	1.4494287861434376E-5	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999995676543654	WITHOUT_CLASSIFICATION	4.3234563465229634E-7	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.999998697656563	WITHOUT_CLASSIFICATION	1.3023434369507814E-6	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.999999401525858	WITHOUT_CLASSIFICATION	5.98474142024039E-7	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999996786701539	WITHOUT_CLASSIFICATION	3.213298460864056E-7	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999989780944549	WITHOUT_CLASSIFICATION	1.0219055450090743E-6	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9998855715762913	WITHOUT_CLASSIFICATION	1.1442842370860505E-4	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999983311534134	WITHOUT_CLASSIFICATION	1.6688465866934443E-6	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999983184945006	WITHOUT_CLASSIFICATION	1.681505499412791E-6	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999869987980688	WITHOUT_CLASSIFICATION	1.3001201931148114E-5	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999990164388632	WITHOUT_CLASSIFICATION	9.83561136699762E-7	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999683958167678	WITHOUT_CLASSIFICATION	3.160418323232738E-5	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999716898786954	WITHOUT_CLASSIFICATION	2.8310121304635185E-5	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999795066204192	WITHOUT_CLASSIFICATION	2.0493379580756656E-5	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9998387964952697	WITHOUT_CLASSIFICATION	1.6120350473031812E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9998387964952697	WITHOUT_CLASSIFICATION	1.6120350473031812E-4	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999996969378829	WITHOUT_CLASSIFICATION	3.0306211710562746E-7	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9999968027697798	WITHOUT_CLASSIFICATION	3.1972302202791562E-6	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.999995477029457	WITHOUT_CLASSIFICATION	4.5229705429630195E-6	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999964800640181	WITHOUT_CLASSIFICATION	3.51993598193756E-6	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999913585801858	WITHOUT_CLASSIFICATION	8.64141981411522E-6	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999988557257039	WITHOUT_CLASSIFICATION	1.1442742960583366E-6	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999543316576506	WITHOUT_CLASSIFICATION	4.566834234949204E-5	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999543316576506	WITHOUT_CLASSIFICATION	4.566834234949204E-5	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999984275886874	WITHOUT_CLASSIFICATION	1.5724113125554367E-6	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.7556203007535299	WITHOUT_CLASSIFICATION	0.2443796992464701	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999995567143436	WITHOUT_CLASSIFICATION	4.432856564386067E-7	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999995567143436	WITHOUT_CLASSIFICATION	4.432856564386067E-7	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.99999941487392	WITHOUT_CLASSIFICATION	5.851260799652201E-7	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999989183931123	WITHOUT_CLASSIFICATION	1.0816068876846381E-6	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999989183931123	WITHOUT_CLASSIFICATION	1.0816068876846381E-6	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999627429113315	WITHOUT_CLASSIFICATION	3.725708866857197E-5	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999627429113315	WITHOUT_CLASSIFICATION	3.725708866857197E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999981006185109	WITHOUT_CLASSIFICATION	1.8993814891435262E-6	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999981006185109	WITHOUT_CLASSIFICATION	1.8993814891435262E-6	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9999957180072051	WITHOUT_CLASSIFICATION	4.28199279485273E-6	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.999999872246495	WITHOUT_CLASSIFICATION	1.277535049533079E-7	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999999790542391	WITHOUT_CLASSIFICATION	2.0945760880652903E-8	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999967584513987	WITHOUT_CLASSIFICATION	3.241548601279641E-6	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999999724654803	WITHOUT_CLASSIFICATION	2.753451965804037E-8	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999990812155669	WITHOUT_CLASSIFICATION	9.187844329729233E-7	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999987400069237	WITHOUT_CLASSIFICATION	1.2599930762287085E-6	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999991295046547	WITHOUT_CLASSIFICATION	8.704953453907166E-7	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999987400069237	WITHOUT_CLASSIFICATION	1.2599930762287085E-6	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.999758763358752	WITHOUT_CLASSIFICATION	2.412366412480642E-4	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999626207718632	WITHOUT_CLASSIFICATION	3.737922813681608E-5	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999990822769639	WITHOUT_CLASSIFICATION	9.177230361796792E-7	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999992778066611	WITHOUT_CLASSIFICATION	7.221933389523233E-7	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.999999713299583	WITHOUT_CLASSIFICATION	2.8670041705950033E-7	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9998891628895914	WITHOUT_CLASSIFICATION	1.1083711040866253E-4	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.999989247341861	WITHOUT_CLASSIFICATION	1.0752658139101095E-5	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999869953382821	WITHOUT_CLASSIFICATION	1.3004661717812827E-5	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999997570612987	WITHOUT_CLASSIFICATION	2.429387012601694E-7	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999991638843467	WITHOUT_CLASSIFICATION	8.361156532444834E-7	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999987029981031	WITHOUT_CLASSIFICATION	1.2970018968651433E-6	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999999310717689	WITHOUT_CLASSIFICATION	6.892823121175192E-8	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.9999617047887396	WITHOUT_CLASSIFICATION	3.829521126050832E-5	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9999974992119627	WITHOUT_CLASSIFICATION	2.500788037351888E-6	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999975170116152	WITHOUT_CLASSIFICATION	2.482988384657694E-6	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999999733329237	WITHOUT_CLASSIFICATION	2.666707622265843E-8	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999755870763134	WITHOUT_CLASSIFICATION	2.4412923686616716E-5	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999901822280239	WITHOUT_CLASSIFICATION	9.817771976099811E-6	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9998015698463913	WITHOUT_CLASSIFICATION	1.9843015360870508E-4	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999913025609137	WITHOUT_CLASSIFICATION	8.697439086307986E-6	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999994866716841	WITHOUT_CLASSIFICATION	5.133283159487863E-7	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999939328014799	WITHOUT_CLASSIFICATION	6.067198520162047E-6	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999802040475595	WITHOUT_CLASSIFICATION	1.9795952440456018E-5	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999092938595273	WITHOUT_CLASSIFICATION	9.070614047262248E-5	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999876819881779	WITHOUT_CLASSIFICATION	1.231801182201294E-5	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999998096190704	WITHOUT_CLASSIFICATION	1.903809295568551E-7	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999999945713324	WITHOUT_CLASSIFICATION	5.428667599368248E-9	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999156967951938	WITHOUT_CLASSIFICATION	8.43032048061486E-5	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.999999980612192	WITHOUT_CLASSIFICATION	1.9387808028063243E-8	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999997090579031	WITHOUT_CLASSIFICATION	2.909420968285031E-7	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.999999984616258	WITHOUT_CLASSIFICATION	1.538374197002483E-8	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999967940446	WITHOUT_CLASSIFICATION	3.2059555062079745E-9	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999999744727633	WITHOUT_CLASSIFICATION	2.552723661750787E-8	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999959331813735	WITHOUT_CLASSIFICATION	4.066818626490341E-6	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999999861247716	WITHOUT_CLASSIFICATION	1.387522845526626E-8	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999999857746067	WITHOUT_CLASSIFICATION	1.4225393386673508E-8	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.999999970077249	WITHOUT_CLASSIFICATION	2.9922751057541965E-8	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999999857169257	WITHOUT_CLASSIFICATION	1.4283074269550787E-8	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999997508977732	WITHOUT_CLASSIFICATION	2.491022267728491E-7	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999999841388872	WITHOUT_CLASSIFICATION	1.5861112697336766E-8	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999999862029296	WITHOUT_CLASSIFICATION	1.379707038832538E-8	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.999999960998057	WITHOUT_CLASSIFICATION	3.9001943029423714E-8	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.999999962338179	WITHOUT_CLASSIFICATION	3.766182098680436E-8	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999999389524222	WITHOUT_CLASSIFICATION	6.104757779988449E-8	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999905115561	WITHOUT_CLASSIFICATION	9.488443880066186E-9	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999999800343052	WITHOUT_CLASSIFICATION	1.9965694794816364E-8	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999999741612112	WITHOUT_CLASSIFICATION	2.5838788788093836E-8	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999999440517487	WITHOUT_CLASSIFICATION	5.594825136555875E-8	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999999713221874	WITHOUT_CLASSIFICATION	2.8677812597664064E-7	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999988705690971	WITHOUT_CLASSIFICATION	1.1294309028950974E-6	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999794959364867	WITHOUT_CLASSIFICATION	2.050406351321163E-5	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999990386908584	WITHOUT_CLASSIFICATION	9.613091416672517E-7	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999948521451033	WITHOUT_CLASSIFICATION	5.147854896768763E-6	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.999784243042325	WITHOUT_CLASSIFICATION	2.1575695767486045E-4	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999999441898288	WITHOUT_CLASSIFICATION	5.581017119817373E-8	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999999441898288	WITHOUT_CLASSIFICATION	5.581017119817373E-8	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999998667506214	WITHOUT_CLASSIFICATION	1.332493785678455E-7	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999996655356929	WITHOUT_CLASSIFICATION	3.344643071304764E-7	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999998067899064	WITHOUT_CLASSIFICATION	1.9321009365866517E-7	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999991796987798	WITHOUT_CLASSIFICATION	8.203012202058479E-7	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999892578223594	WITHOUT_CLASSIFICATION	1.0742177640722866E-5	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999981014589913	WITHOUT_CLASSIFICATION	1.8985410087174947E-6	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999994727873517	WITHOUT_CLASSIFICATION	5.272126483419021E-7	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999994205346697	WITHOUT_CLASSIFICATION	5.794653303675249E-7	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9997652691944158	WITHOUT_CLASSIFICATION	2.347308055841785E-4	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999999150593075	WITHOUT_CLASSIFICATION	8.494069250909718E-8	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999998068894299	WITHOUT_CLASSIFICATION	1.9311057014006536E-7	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999998068894299	WITHOUT_CLASSIFICATION	1.9311057014006536E-7	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9997916186780424	WITHOUT_CLASSIFICATION	2.0838132195761315E-4	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999961956873742	WITHOUT_CLASSIFICATION	3.80431262582019E-6	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999825131334288	WITHOUT_CLASSIFICATION	1.7486866571221487E-5	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999995979211445	WITHOUT_CLASSIFICATION	4.020788555651917E-7	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999994952019513	WITHOUT_CLASSIFICATION	5.04798048731827E-7	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999923822020073	WITHOUT_CLASSIFICATION	7.617797992742908E-6	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.999997832388455	WITHOUT_CLASSIFICATION	2.167611545066419E-6	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999932212806409	WITHOUT_CLASSIFICATION	6.778719359086985E-6	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.999999402379926	WITHOUT_CLASSIFICATION	5.97620073973372E-7	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9995977858086722	WITHOUT_CLASSIFICATION	4.022141913277689E-4	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999999662067497	WITHOUT_CLASSIFICATION	3.3793250227787095E-8	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999982650705102	WITHOUT_CLASSIFICATION	1.7349294897792875E-6	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999939126688391	WITHOUT_CLASSIFICATION	6.087331160867663E-6	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999939126688391	WITHOUT_CLASSIFICATION	6.087331160867663E-6	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999999409490222	WITHOUT_CLASSIFICATION	5.90509778414616E-8	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999900375810475	WITHOUT_CLASSIFICATION	9.962418952382266E-6	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999992805251645	WITHOUT_CLASSIFICATION	7.194748355197928E-7	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999612000973461	WITHOUT_CLASSIFICATION	3.879990265385943E-5	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999712792209674	WITHOUT_CLASSIFICATION	2.872077903263384E-5	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999960999403098	WITHOUT_CLASSIFICATION	3.900059690139563E-6	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999976851428423	WITHOUT_CLASSIFICATION	2.3148571576883773E-6	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999956019568109	WITHOUT_CLASSIFICATION	4.398043189076598E-6	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9988417969754394	WITHOUT_CLASSIFICATION	0.001158203024560564	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999966738754971	WITHOUT_CLASSIFICATION	3.3261245030351903E-6	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999825131334288	WITHOUT_CLASSIFICATION	1.7486866571221487E-5	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999896528378253	WITHOUT_CLASSIFICATION	1.0347162174762947E-5	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999993105108791	WITHOUT_CLASSIFICATION	6.894891209440687E-7	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999997110571239	WITHOUT_CLASSIFICATION	2.8894287607334103E-7	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999999315807553	WITHOUT_CLASSIFICATION	6.841924471788003E-8	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999984288797353	WITHOUT_CLASSIFICATION	1.5711202647704924E-6	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999993186801946	WITHOUT_CLASSIFICATION	6.813198054316332E-7	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999657615886428	WITHOUT_CLASSIFICATION	3.423841135711038E-5	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999842043496155	WITHOUT_CLASSIFICATION	1.5795650384432414E-5	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.99999901157934	WITHOUT_CLASSIFICATION	9.884206600677947E-7	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999878884094962	WITHOUT_CLASSIFICATION	1.2111590503803925E-5	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999629079788349	WITHOUT_CLASSIFICATION	3.7092021165010584E-5	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999999886716034	WITHOUT_CLASSIFICATION	1.1328396544658735E-8	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999992334506279	WITHOUT_CLASSIFICATION	7.66549372143061E-7	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999971751419664	WITHOUT_CLASSIFICATION	2.824858033720121E-6	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999995138494197	WITHOUT_CLASSIFICATION	4.861505803159606E-7	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.999999682416741	WITHOUT_CLASSIFICATION	3.175832591016764E-7	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999980711373729	WITHOUT_CLASSIFICATION	1.928862627079063E-6	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999807019694369	WITHOUT_CLASSIFICATION	1.9298030563041475E-5	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999364890261763	WITHOUT_CLASSIFICATION	6.351097382377987E-5	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.9999994600943183	WITHOUT_CLASSIFICATION	5.399056816344171E-7	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.999999996273703	WITHOUT_CLASSIFICATION	3.726297018461187E-9	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999896334629497	WITHOUT_CLASSIFICATION	1.0366537050477252E-5	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999988367343365	WITHOUT_CLASSIFICATION	1.1632656634995218E-6	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999168043041159	WITHOUT_CLASSIFICATION	8.319569588410488E-5	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999945650374011	WITHOUT_CLASSIFICATION	5.434962598875406E-6	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999999059144485	WITHOUT_CLASSIFICATION	9.408555144005627E-8	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9999957073669763	WITHOUT_CLASSIFICATION	4.2926330237360626E-6	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.999991176794062	WITHOUT_CLASSIFICATION	8.823205937933383E-6	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9999980397611148	WITHOUT_CLASSIFICATION	1.960238885136143E-6	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999997731367376	WITHOUT_CLASSIFICATION	2.2686326243306088E-7	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999947444935579	WITHOUT_CLASSIFICATION	5.255506442094127E-6	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999947444935579	WITHOUT_CLASSIFICATION	5.255506442094127E-6	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9990215911312711	WITHOUT_CLASSIFICATION	9.784088687288283E-4	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.999098688277756	WITHOUT_CLASSIFICATION	9.013117222438841E-4	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.9999995144027028	WITHOUT_CLASSIFICATION	4.85597297165989E-7	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9995912323831261	WITHOUT_CLASSIFICATION	4.087676168739391E-4	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.99999875504385	WITHOUT_CLASSIFICATION	1.244956149929962E-6	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999961896212014	WITHOUT_CLASSIFICATION	3.8103787985667857E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.99999666581364	WITHOUT_CLASSIFICATION	3.334186360008662E-6	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999963180721528	WITHOUT_CLASSIFICATION	3.681927847164818E-6	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999965443866672	WITHOUT_CLASSIFICATION	3.4556133328723208E-6	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999997049297649	WITHOUT_CLASSIFICATION	2.950702350699911E-7	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.999999651106688	WITHOUT_CLASSIFICATION	3.4889331199660694E-7	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.999998774119114	WITHOUT_CLASSIFICATION	1.2258808860196688E-6	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999999246385066	WITHOUT_CLASSIFICATION	7.536149331037504E-8	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999988510649733	WITHOUT_CLASSIFICATION	1.1489350266964338E-6	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999998993968937	WITHOUT_CLASSIFICATION	1.006031063462097E-7	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999743405247559	WITHOUT_CLASSIFICATION	2.565947524422746E-5	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999984546191	WITHOUT_CLASSIFICATION	1.545380925104666E-9	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999996156402104	WITHOUT_CLASSIFICATION	3.843597895090068E-7	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.9999992377144906	WITHOUT_CLASSIFICATION	7.622855094590622E-7	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999959985667061	WITHOUT_CLASSIFICATION	4.001433293971093E-6	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.999974597069368	WITHOUT_CLASSIFICATION	2.540293063208871E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.999974597069368	WITHOUT_CLASSIFICATION	2.540293063208871E-5	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9999991891603904	WITHOUT_CLASSIFICATION	8.108396095966241E-7	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999943279157685	WITHOUT_CLASSIFICATION	5.672084231474687E-6	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999821505920808	WITHOUT_CLASSIFICATION	1.7849407919142354E-5	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999993331354675	WITHOUT_CLASSIFICATION	6.668645324759604E-7	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999948507546945	WITHOUT_CLASSIFICATION	5.149245305427506E-6	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9985510282503043	WITHOUT_CLASSIFICATION	0.0014489717496957706	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999997144933992	WITHOUT_CLASSIFICATION	2.8550660075810123E-7	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999997701003974	WITHOUT_CLASSIFICATION	2.2989960251844526E-7	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999995482046565	WITHOUT_CLASSIFICATION	4.517953434314823E-7	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999670464722935	WITHOUT_CLASSIFICATION	3.295352770648668E-5	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9999988383349872	WITHOUT_CLASSIFICATION	1.1616650129153955E-6	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999997446973082	WITHOUT_CLASSIFICATION	2.553026917640698E-7	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999955653888548	WITHOUT_CLASSIFICATION	4.434611145220615E-6	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999997826088816	WITHOUT_CLASSIFICATION	2.1739111839123858E-7	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999665800995644	WITHOUT_CLASSIFICATION	3.3419900435674346E-5	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999920561288306	WITHOUT_CLASSIFICATION	7.943871169410905E-6	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999986596792133	WITHOUT_CLASSIFICATION	1.3403207866064973E-6	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9999989926159835	WITHOUT_CLASSIFICATION	1.0073840164698362E-6	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999996288476906	WITHOUT_CLASSIFICATION	3.7115230948391924E-7	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999998118008755	WITHOUT_CLASSIFICATION	1.8819912463492002E-7	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999766400146015	WITHOUT_CLASSIFICATION	2.3359985398451893E-5	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999995333226408	WITHOUT_CLASSIFICATION	4.6667735923630414E-7	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999995448988837	WITHOUT_CLASSIFICATION	4.5510111640967285E-7	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999945882120598	WITHOUT_CLASSIFICATION	5.411787940234191E-6	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999995367270713	WITHOUT_CLASSIFICATION	4.63272928756523E-7	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999979026462338	WITHOUT_CLASSIFICATION	2.0973537662567368E-6	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.9999995709368364	WITHOUT_CLASSIFICATION	4.290631635173689E-7	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999985659665136	WITHOUT_CLASSIFICATION	1.4340334864157573E-6	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.999985753542636	WITHOUT_CLASSIFICATION	1.4246457363999486E-5	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999930508099245	WITHOUT_CLASSIFICATION	6.949190075414359E-6	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999990109969087	WITHOUT_CLASSIFICATION	9.8900309123808E-7	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999970928691708	WITHOUT_CLASSIFICATION	2.907130829052663E-6	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999991099938564	WITHOUT_CLASSIFICATION	8.900061434702362E-7	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.9999945970802451	WITHOUT_CLASSIFICATION	5.402919754841489E-6	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999991802641781	WITHOUT_CLASSIFICATION	8.197358218139749E-7	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999999969323631	WITHOUT_CLASSIFICATION	3.0676369936097707E-9	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999998798877017	WITHOUT_CLASSIFICATION	1.2011229830298822E-7	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.999976882241068	WITHOUT_CLASSIFICATION	2.311775893204921E-5	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999991560083683	WITHOUT_CLASSIFICATION	8.439916316411269E-7	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999711966347825	WITHOUT_CLASSIFICATION	2.8803365217461127E-5	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999999752293746	WITHOUT_CLASSIFICATION	2.4770625393050327E-8	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999987721061357	WITHOUT_CLASSIFICATION	1.22789386424028E-6	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999997664405255	WITHOUT_CLASSIFICATION	2.3355947454449383E-7	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999976465611887	WITHOUT_CLASSIFICATION	2.353438811216637E-6	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999892716944153	WITHOUT_CLASSIFICATION	1.0728305584787705E-5	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999976465611887	WITHOUT_CLASSIFICATION	2.353438811216637E-6	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999253257877914	WITHOUT_CLASSIFICATION	7.46742122086127E-5	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9088141120840534	WITHOUT_CLASSIFICATION	0.09118588791594666	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999959749553565	WITHOUT_CLASSIFICATION	4.0250446434285875E-6	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.8462213523263553	IMPLEMENTATION	0.15377864767364474	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999964191105548	WITHOUT_CLASSIFICATION	3.580889445270514E-6	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999485692353522	WITHOUT_CLASSIFICATION	5.1430764647775924E-5	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9999997627242858	WITHOUT_CLASSIFICATION	2.3727571418573551E-7	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999999604406198	WITHOUT_CLASSIFICATION	3.955938022379781E-8	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999998733154527	WITHOUT_CLASSIFICATION	1.2668454722791975E-7	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.7743382516204093	IMPLEMENTATION	0.2256617483795907	WITHOUT_CLASSIFICATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9997154428877828	WITHOUT_CLASSIFICATION	2.845571122171362E-4	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999932333922124	WITHOUT_CLASSIFICATION	6.766607787567291E-6	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999131151189963	WITHOUT_CLASSIFICATION	8.688488100378787E-5	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.99999989069077	WITHOUT_CLASSIFICATION	1.0930923002585572E-7	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9789235630017126	WITHOUT_CLASSIFICATION	0.021076436998287387	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.5553694588546509	IMPLEMENTATION	0.4446305411453491	WITHOUT_CLASSIFICATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999999977031657	WITHOUT_CLASSIFICATION	2.296834279373803E-9	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999979725802628	WITHOUT_CLASSIFICATION	2.027419737168145E-6	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999981564337064	WITHOUT_CLASSIFICATION	1.8435662935818763E-6	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999965605116291	WITHOUT_CLASSIFICATION	3.439488370784533E-6	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999959226312193	WITHOUT_CLASSIFICATION	4.077368780673442E-6	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.999999212654819	WITHOUT_CLASSIFICATION	7.873451809900529E-7	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.999992986495144	WITHOUT_CLASSIFICATION	7.013504855949623E-6	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999981632163343	WITHOUT_CLASSIFICATION	1.8367836657989364E-6	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.999979246292149	WITHOUT_CLASSIFICATION	2.0753707851071797E-5	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999996334296407	WITHOUT_CLASSIFICATION	3.665703592835873E-7	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999998734745628	WITHOUT_CLASSIFICATION	1.265254372275976E-7	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999983120047828	WITHOUT_CLASSIFICATION	1.687995217195668E-6	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999946004755478	WITHOUT_CLASSIFICATION	5.39952445217411E-6	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999999994976565	WITHOUT_CLASSIFICATION	5.023436128748873E-10	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999969901672513	WITHOUT_CLASSIFICATION	3.00983274881879E-6	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999967095137119	WITHOUT_CLASSIFICATION	3.2904862881569314E-6	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999938831311971	WITHOUT_CLASSIFICATION	6.11686880287399E-6	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9999996104342255	WITHOUT_CLASSIFICATION	3.89565774605301E-7	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999887114083084	WITHOUT_CLASSIFICATION	1.1288591691605503E-5	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9999997087713558	WITHOUT_CLASSIFICATION	2.9122864418539693E-7	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999990898710903	WITHOUT_CLASSIFICATION	9.101289096355553E-7	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999593053188	WITHOUT_CLASSIFICATION	4.0694681272627264E-8	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999894536463982	WITHOUT_CLASSIFICATION	1.0546353601762392E-5	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999923101214858	WITHOUT_CLASSIFICATION	7.689878514238543E-6	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.999996030804315	WITHOUT_CLASSIFICATION	3.969195685017498E-6	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999999116851868	WITHOUT_CLASSIFICATION	8.831481330206434E-8	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999993819255808	WITHOUT_CLASSIFICATION	6.18074419187268E-7	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999872849493887	WITHOUT_CLASSIFICATION	1.2715050611259171E-5	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999872849493887	WITHOUT_CLASSIFICATION	1.2715050611259171E-5	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999991728011846	WITHOUT_CLASSIFICATION	8.271988154687231E-7	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.999985624133116	WITHOUT_CLASSIFICATION	1.4375866884079721E-5	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999999804900437	WITHOUT_CLASSIFICATION	1.9509956313187964E-8	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.999999648718489	WITHOUT_CLASSIFICATION	3.51281510971511E-7	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.999999998808276	WITHOUT_CLASSIFICATION	1.1917240557608441E-9	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999991600100633	WITHOUT_CLASSIFICATION	8.39989936825423E-7	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999731893088956	WITHOUT_CLASSIFICATION	2.681069110449044E-5	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999994043451081	WITHOUT_CLASSIFICATION	5.956548917972437E-7	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999991254870003	WITHOUT_CLASSIFICATION	8.745129996686587E-7	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999998866993022	WITHOUT_CLASSIFICATION	1.133006977809392E-7	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999998563549464	WITHOUT_CLASSIFICATION	1.4364505352416375E-7	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.999998309075875	WITHOUT_CLASSIFICATION	1.6909241250169306E-6	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999999850542546	WITHOUT_CLASSIFICATION	1.4945745433775206E-8	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999769161499833	WITHOUT_CLASSIFICATION	2.308385001668899E-5	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999999742048021	WITHOUT_CLASSIFICATION	2.579519781955603E-8	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9998839232238708	WITHOUT_CLASSIFICATION	1.1607677612930148E-4	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999918180329928	WITHOUT_CLASSIFICATION	8.181967007265161E-6	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999997246464297	WITHOUT_CLASSIFICATION	2.7535357025577935E-7	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999991452632845	WITHOUT_CLASSIFICATION	8.547367155021775E-7	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999988202547813	WITHOUT_CLASSIFICATION	1.179745218804303E-6	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.9999231117068264	WITHOUT_CLASSIFICATION	7.688829317368204E-5	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9998576685129988	WITHOUT_CLASSIFICATION	1.4233148700116605E-4	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9998530171808059	WITHOUT_CLASSIFICATION	1.4698281919411557E-4	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999983667579677	WITHOUT_CLASSIFICATION	1.6332420322906768E-6	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999999306661564	WITHOUT_CLASSIFICATION	6.933384359879056E-8	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999981882441861	WITHOUT_CLASSIFICATION	1.8117558139765778E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999956261947	WITHOUT_CLASSIFICATION	4.373805341583649E-9	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999973871818787	WITHOUT_CLASSIFICATION	2.6128181211729626E-6	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999928558690361	WITHOUT_CLASSIFICATION	7.144130963885808E-6	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999997234969472	WITHOUT_CLASSIFICATION	2.765030527852081E-7	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999984695380328	WITHOUT_CLASSIFICATION	1.5304619671335602E-6	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999997851757736	WITHOUT_CLASSIFICATION	2.1482422653464168E-7	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999995333388987	WITHOUT_CLASSIFICATION	4.666611013115232E-7	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999981121239104	WITHOUT_CLASSIFICATION	1.887876089483608E-6	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999998299429966	WITHOUT_CLASSIFICATION	1.7005700333130625E-7	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999937285604074	WITHOUT_CLASSIFICATION	6.271439592734852E-6	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999963964392791	WITHOUT_CLASSIFICATION	3.603560720965162E-6	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999963302897206	WITHOUT_CLASSIFICATION	3.6697102793238185E-6	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999026351597815	WITHOUT_CLASSIFICATION	9.73648402184843E-5	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999974462554081	WITHOUT_CLASSIFICATION	2.5537445918573548E-6	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999964180436711	WITHOUT_CLASSIFICATION	3.5819563289065236E-6	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999919927702489	WITHOUT_CLASSIFICATION	8.00722975110632E-6	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.999999704758728	WITHOUT_CLASSIFICATION	2.952412718856484E-7	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999997679553058	WITHOUT_CLASSIFICATION	2.320446942786689E-7	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999731266062203	WITHOUT_CLASSIFICATION	2.6873393779612692E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999996936399319	WITHOUT_CLASSIFICATION	3.063600681054618E-6	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999997335372762	WITHOUT_CLASSIFICATION	2.6646272378908088E-6	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999999502810528	WITHOUT_CLASSIFICATION	4.971894703669183E-8	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.9999893967215286	WITHOUT_CLASSIFICATION	1.060327847130975E-5	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999941117269319	WITHOUT_CLASSIFICATION	5.88827306819267E-6	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999997786664178	WITHOUT_CLASSIFICATION	2.2133358227986673E-7	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999957974907508	WITHOUT_CLASSIFICATION	4.202509249126847E-6	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999988082416076	WITHOUT_CLASSIFICATION	1.1917583924398788E-6	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999959167194168	WITHOUT_CLASSIFICATION	4.083280583191873E-6	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999931159145596	WITHOUT_CLASSIFICATION	6.8840854404232365E-6	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999988127947343	WITHOUT_CLASSIFICATION	1.187205265706136E-6	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999985731264525	WITHOUT_CLASSIFICATION	1.4268735475900223E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.99999278080259	WITHOUT_CLASSIFICATION	7.219197409959684E-6	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999932412660297	WITHOUT_CLASSIFICATION	6.758733970208533E-6	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999992847786913	WITHOUT_CLASSIFICATION	7.152213087763672E-7	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999990009052033	WITHOUT_CLASSIFICATION	9.990947966746163E-7	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999998556667059	WITHOUT_CLASSIFICATION	1.4433329399449914E-7	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999998964295163	WITHOUT_CLASSIFICATION	1.0357048379290181E-7	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999996477801756	WITHOUT_CLASSIFICATION	3.522198243607083E-7	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9999661156767977	WITHOUT_CLASSIFICATION	3.388432320227637E-5	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999965938672677	WITHOUT_CLASSIFICATION	3.4061327323614264E-6	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999976813349718	WITHOUT_CLASSIFICATION	2.3186650281837423E-6	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.999994752783434	WITHOUT_CLASSIFICATION	5.247216565954229E-6	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.9999785635755021	WITHOUT_CLASSIFICATION	2.1436424497849492E-5	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999934017039582	WITHOUT_CLASSIFICATION	6.598296041758441E-6	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999886486873715	WITHOUT_CLASSIFICATION	1.1351312628417368E-5	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999990120702508	WITHOUT_CLASSIFICATION	9.87929749231707E-7	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.999990185580427	WITHOUT_CLASSIFICATION	9.814419573105813E-6	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999968642264377	WITHOUT_CLASSIFICATION	3.13577356218798E-6	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9999962850533772	WITHOUT_CLASSIFICATION	3.71494662278169E-6	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9999958767193394	WITHOUT_CLASSIFICATION	4.123280660506343E-6	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9999952719656708	WITHOUT_CLASSIFICATION	4.728034329146827E-6	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.99999417585384	WITHOUT_CLASSIFICATION	5.82414616009255E-6	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9999949870626673	WITHOUT_CLASSIFICATION	5.0129373326392645E-6	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9999944046958715	WITHOUT_CLASSIFICATION	5.595304128526749E-6	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9999939226625023	WITHOUT_CLASSIFICATION	6.0773374976779645E-6	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.999993858276978	WITHOUT_CLASSIFICATION	6.141723022050514E-6	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9999940900928712	WITHOUT_CLASSIFICATION	5.909907128818925E-6	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9999938096164782	WITHOUT_CLASSIFICATION	6.19038352179631E-6	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9999961610595769	WITHOUT_CLASSIFICATION	3.838940423069337E-6	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9999969064102423	WITHOUT_CLASSIFICATION	3.0935897577244668E-6	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9999964335949998	WITHOUT_CLASSIFICATION	3.5664050001905165E-6	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9999964446201802	WITHOUT_CLASSIFICATION	3.5553798198064512E-6	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9999962058026276	WITHOUT_CLASSIFICATION	3.7941973724099354E-6	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9999962704004743	WITHOUT_CLASSIFICATION	3.729599525608483E-6	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9999961521667455	WITHOUT_CLASSIFICATION	3.84783325453232E-6	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9999969900350942	WITHOUT_CLASSIFICATION	3.009964905852497E-6	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.999996608218438	WITHOUT_CLASSIFICATION	3.3917815619785816E-6	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9999864185501185	WITHOUT_CLASSIFICATION	1.3581449881461934E-5	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999890805196958	WITHOUT_CLASSIFICATION	1.0919480304185459E-5	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999790226713507	WITHOUT_CLASSIFICATION	2.097732864931519E-5	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999904840781112	WITHOUT_CLASSIFICATION	9.515921888717394E-6	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999827742530307	WITHOUT_CLASSIFICATION	1.7225746969289416E-5	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999965182233459	WITHOUT_CLASSIFICATION	3.481776654161034E-6	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999911820250907	WITHOUT_CLASSIFICATION	8.81797490923882E-6	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9995736085004807	WITHOUT_CLASSIFICATION	4.263914995191926E-4	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999859452104857	WITHOUT_CLASSIFICATION	1.4054789514325615E-5	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999885216791066	WITHOUT_CLASSIFICATION	1.1478320893328381E-5	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.5511175499739471	IMPLEMENTATION	0.448882450026053	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9999976236061782	WITHOUT_CLASSIFICATION	2.3763938218372617E-6	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999998239399425	WITHOUT_CLASSIFICATION	1.760600575104078E-7	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999994580707855	WITHOUT_CLASSIFICATION	5.419292144697319E-7	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999994580707855	WITHOUT_CLASSIFICATION	5.419292144697319E-7	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999969893813291	WITHOUT_CLASSIFICATION	3.0106186708265684E-6	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999662386325449	WITHOUT_CLASSIFICATION	3.376136745522082E-5	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999987202028	WITHOUT_CLASSIFICATION	1.2797972050394606E-9	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.999998860493108	WITHOUT_CLASSIFICATION	1.139506891999966E-6	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999996925683758	WITHOUT_CLASSIFICATION	3.074316241896752E-7	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999980868746277	WITHOUT_CLASSIFICATION	1.913125372436962E-6	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9999948814414473	WITHOUT_CLASSIFICATION	5.118558552650118E-6	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.999994031493217	WITHOUT_CLASSIFICATION	5.9685067830814535E-6	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9998930359998057	WITHOUT_CLASSIFICATION	1.0696400019429062E-4	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.999998441856226	WITHOUT_CLASSIFICATION	1.55814377401546E-6	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999909958405196	WITHOUT_CLASSIFICATION	9.004159480435674E-6	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999993879117973	WITHOUT_CLASSIFICATION	6.120882027125661E-7	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9999983368402136	WITHOUT_CLASSIFICATION	1.6631597864162375E-6	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999748675027469	WITHOUT_CLASSIFICATION	2.513249725306432E-5	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999972449174472	WITHOUT_CLASSIFICATION	2.755082552695815E-6	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.9999978231004618	WITHOUT_CLASSIFICATION	2.1768995381623683E-6	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999983143127273	WITHOUT_CLASSIFICATION	1.685687272560852E-6	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999992989231241	WITHOUT_CLASSIFICATION	7.010768759314094E-7	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999995094452576	WITHOUT_CLASSIFICATION	4.905547423491554E-7	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999944141868728	WITHOUT_CLASSIFICATION	5.585813127091392E-6	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999997611952314	WITHOUT_CLASSIFICATION	2.3880476856908134E-7	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999999848181004	WITHOUT_CLASSIFICATION	1.5181899562210093E-8	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999966213709329	WITHOUT_CLASSIFICATION	3.378629067077472E-6	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999999885961209	WITHOUT_CLASSIFICATION	1.140387902561824E-8	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999989359528427	WITHOUT_CLASSIFICATION	1.0640471572408339E-6	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999924714633787	WITHOUT_CLASSIFICATION	7.528536621384767E-6	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999994138656138	WITHOUT_CLASSIFICATION	5.861343861545236E-7	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999905207164638	WITHOUT_CLASSIFICATION	9.479283536355192E-6	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999940793276257	WITHOUT_CLASSIFICATION	5.920672374214406E-6	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.999998064444017	WITHOUT_CLASSIFICATION	1.9355559831475835E-6	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999969786144814	WITHOUT_CLASSIFICATION	3.0213855185432575E-6	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999989455145927	WITHOUT_CLASSIFICATION	1.054485407239831E-6	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999969473248707	WITHOUT_CLASSIFICATION	3.0526751292690557E-6	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999974704330312	WITHOUT_CLASSIFICATION	2.529566968828041E-6	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999961251508476	WITHOUT_CLASSIFICATION	3.874849152491005E-6	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999631459896694	WITHOUT_CLASSIFICATION	3.685401033067392E-5	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999966104234002	WITHOUT_CLASSIFICATION	3.3895765998960093E-6	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999998521859854	WITHOUT_CLASSIFICATION	1.4781401456557843E-7	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999984995009658	WITHOUT_CLASSIFICATION	1.5004990343448974E-6	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999976867867274	WITHOUT_CLASSIFICATION	2.313213272554181E-6	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999968713559966	WITHOUT_CLASSIFICATION	3.128644003499131E-6	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999989984367325	WITHOUT_CLASSIFICATION	1.0015632675477291E-6	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999819080363674	WITHOUT_CLASSIFICATION	1.8091963632629285E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999969537167911	WITHOUT_CLASSIFICATION	3.0462832089627716E-6	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999969537167911	WITHOUT_CLASSIFICATION	3.0462832089627716E-6	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.999998663727119	WITHOUT_CLASSIFICATION	1.3362728810137202E-6	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999998061767149	WITHOUT_CLASSIFICATION	1.9382328518499173E-7	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999994860680663	WITHOUT_CLASSIFICATION	5.139319336462952E-7	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9999524888303165	WITHOUT_CLASSIFICATION	4.751116968345583E-5	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.999999828940991	WITHOUT_CLASSIFICATION	1.710590088608797E-7	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9999993069349631	WITHOUT_CLASSIFICATION	6.930650370268735E-7	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999793158337037	WITHOUT_CLASSIFICATION	2.068416629629595E-5	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999905982015448	WITHOUT_CLASSIFICATION	9.401798455224928E-6	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999755469365195	WITHOUT_CLASSIFICATION	2.445306348057921E-5	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.999996103199671	WITHOUT_CLASSIFICATION	3.896800328957921E-6	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999978004512023	WITHOUT_CLASSIFICATION	2.199548797604788E-6	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999956943578376	WITHOUT_CLASSIFICATION	4.305642162403457E-6	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.999852209751745	WITHOUT_CLASSIFICATION	1.4779024825494706E-4	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999998704388068	WITHOUT_CLASSIFICATION	1.2956119311898461E-7	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.5811506350390059	IMPLEMENTATION	0.4188493649609942	WITHOUT_CLASSIFICATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999947232926913	WITHOUT_CLASSIFICATION	5.276707308587908E-6	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999819966420269	WITHOUT_CLASSIFICATION	1.8003357973112897E-5	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999992863795142	WITHOUT_CLASSIFICATION	7.13620485744953E-7	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999999963240758	WITHOUT_CLASSIFICATION	3.675924117376628E-9	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9995427286900704	WITHOUT_CLASSIFICATION	4.572713099294475E-4	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999983577389301	WITHOUT_CLASSIFICATION	1.6422610698633958E-6	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999983577389301	WITHOUT_CLASSIFICATION	1.6422610698633958E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999979222681883	WITHOUT_CLASSIFICATION	2.0777318117248174E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999979222681883	WITHOUT_CLASSIFICATION	2.0777318117248174E-6	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999929226348687	WITHOUT_CLASSIFICATION	7.07736513135235E-6	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999894162149657	WITHOUT_CLASSIFICATION	1.0583785034268682E-5	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999666724090404	WITHOUT_CLASSIFICATION	3.3327590959733746E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.999998603983286	WITHOUT_CLASSIFICATION	1.3960167139425304E-6	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999999790542391	WITHOUT_CLASSIFICATION	2.0945760880652903E-8	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999998059555067	WITHOUT_CLASSIFICATION	1.9404449320080174E-7	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9998834133679736	WITHOUT_CLASSIFICATION	1.1658663202646372E-4	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9999986369116081	WITHOUT_CLASSIFICATION	1.3630883919473122E-6	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999977609783086	WITHOUT_CLASSIFICATION	2.2390216914436196E-6	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999995765588794	WITHOUT_CLASSIFICATION	4.234411207226463E-7	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999977141603843	WITHOUT_CLASSIFICATION	2.285839615687986E-6	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999950133977336	WITHOUT_CLASSIFICATION	4.9866022663855484E-6	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999999720473293	WITHOUT_CLASSIFICATION	2.7952670757402253E-8	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999988276061295	WITHOUT_CLASSIFICATION	1.172393870618576E-6	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999999432272576	WITHOUT_CLASSIFICATION	5.677274226887762E-8	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.9999996665392189	WITHOUT_CLASSIFICATION	3.334607810714783E-7	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999294628458484	WITHOUT_CLASSIFICATION	7.053715415157871E-5	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999996895542014	WITHOUT_CLASSIFICATION	3.10445798592727E-7	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9999968295304781	WITHOUT_CLASSIFICATION	3.17046952188869E-6	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999895881229702	WITHOUT_CLASSIFICATION	1.041187702978873E-5	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999992256944407	WITHOUT_CLASSIFICATION	7.743055594008991E-7	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.999975806837173	WITHOUT_CLASSIFICATION	2.4193162826995485E-5	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999995866513949	WITHOUT_CLASSIFICATION	4.1334860513727355E-7	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999998734745628	WITHOUT_CLASSIFICATION	1.265254372275976E-7	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999991600100633	WITHOUT_CLASSIFICATION	8.39989936825423E-7	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999923530404862	WITHOUT_CLASSIFICATION	7.646959513758037E-6	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999999072937962	WITHOUT_CLASSIFICATION	9.270620383277331E-8	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.999997460102789	WITHOUT_CLASSIFICATION	2.539897210921112E-6	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999781875066579	WITHOUT_CLASSIFICATION	2.1812493342074868E-5	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999996888132484	WITHOUT_CLASSIFICATION	3.111867516650192E-7	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999996888132484	WITHOUT_CLASSIFICATION	3.111867516650192E-7	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.999995542767374	WITHOUT_CLASSIFICATION	4.4572326260153845E-6	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999923566961132	WITHOUT_CLASSIFICATION	7.643303886779408E-6	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999656584097587	WITHOUT_CLASSIFICATION	3.434159024134525E-5	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999995787389409	WITHOUT_CLASSIFICATION	4.21261059216063E-7	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999974287278907	WITHOUT_CLASSIFICATION	2.571272109430977E-6	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9999085027452219	WITHOUT_CLASSIFICATION	9.149725477804515E-5	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999910824373053	WITHOUT_CLASSIFICATION	8.917562694742504E-6	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9997624076990683	WITHOUT_CLASSIFICATION	2.3759230093162826E-4	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999943669443149	WITHOUT_CLASSIFICATION	5.633055685184875E-6	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999972393212291	WITHOUT_CLASSIFICATION	2.7606787708989895E-6	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9999995852392632	WITHOUT_CLASSIFICATION	4.1476073665741844E-7	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999988138263247	WITHOUT_CLASSIFICATION	1.1861736752907308E-6	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.999974359158481	WITHOUT_CLASSIFICATION	2.564084151904792E-5	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.999999675675891	WITHOUT_CLASSIFICATION	3.2432410897978546E-7	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999992623542415	WITHOUT_CLASSIFICATION	7.376457584422023E-7	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999970476954664	WITHOUT_CLASSIFICATION	2.9523045335805546E-6	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999891951270328	WITHOUT_CLASSIFICATION	1.0804872967163865E-5	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999993500591736	WITHOUT_CLASSIFICATION	6.499408264670136E-7	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999976012155214	WITHOUT_CLASSIFICATION	2.3987844787261487E-6	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.999987234086701	WITHOUT_CLASSIFICATION	1.276591329895328E-5	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999995775835983	WITHOUT_CLASSIFICATION	4.2241640173277224E-7	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999998778712548	WITHOUT_CLASSIFICATION	1.221287452375062E-7	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999995851183472	WITHOUT_CLASSIFICATION	4.1488165272622056E-7	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9999952967399599	WITHOUT_CLASSIFICATION	4.703260040142245E-6	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999993112378702	WITHOUT_CLASSIFICATION	6.88762129697674E-7	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999836405130027	WITHOUT_CLASSIFICATION	1.6359486997338784E-5	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999940450297862	WITHOUT_CLASSIFICATION	5.954970213832097E-6	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999740999473774	WITHOUT_CLASSIFICATION	2.5900052622617668E-5	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999994269877605	WITHOUT_CLASSIFICATION	5.730122396000324E-7	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999983026487989	WITHOUT_CLASSIFICATION	1.6973512011105198E-6	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999906676049697	WITHOUT_CLASSIFICATION	9.332395030380367E-6	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999985541777662	WITHOUT_CLASSIFICATION	1.4458222337576994E-6	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999996572966963	WITHOUT_CLASSIFICATION	3.427033036800487E-7	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.999981146802427	WITHOUT_CLASSIFICATION	1.8853197572990812E-5	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999986427305363	WITHOUT_CLASSIFICATION	1.3572694637082989E-6	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999996384911876	WITHOUT_CLASSIFICATION	3.6150881245737894E-7	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999933975718962	WITHOUT_CLASSIFICATION	6.602428103813707E-6	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999136196648413	WITHOUT_CLASSIFICATION	8.638033515874744E-5	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999985225546066	WITHOUT_CLASSIFICATION	1.4774453933835906E-6	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9998688301468068	WITHOUT_CLASSIFICATION	1.3116985319312373E-4	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999997318592404	WITHOUT_CLASSIFICATION	2.6814075959140774E-7	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999963805603699	WITHOUT_CLASSIFICATION	3.619439630077261E-6	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.999999632169957	WITHOUT_CLASSIFICATION	3.67830043014823E-7	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9999984633888311	WITHOUT_CLASSIFICATION	1.536611168842533E-6	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999773192512885	WITHOUT_CLASSIFICATION	2.2680748711426146E-5	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999999928577046	WITHOUT_CLASSIFICATION	7.1422954154188E-9	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999949532589569	WITHOUT_CLASSIFICATION	5.046741043005009E-6	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999907130105	WITHOUT_CLASSIFICATION	9.286989502573639E-9	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999915646339519	WITHOUT_CLASSIFICATION	8.435366048085031E-6	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9999877168477664	WITHOUT_CLASSIFICATION	1.2283152233587641E-5	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999944811347846	WITHOUT_CLASSIFICATION	5.518865215388182E-6	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999964298933679	WITHOUT_CLASSIFICATION	3.5701066320825004E-6	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999914100214427	WITHOUT_CLASSIFICATION	8.589978557288659E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999952650971791	WITHOUT_CLASSIFICATION	4.7349028209069485E-6	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999914154835412	WITHOUT_CLASSIFICATION	8.584516458753367E-6	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999949214338076	WITHOUT_CLASSIFICATION	5.078566192365526E-6	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999930417987413	WITHOUT_CLASSIFICATION	6.9582012587052285E-6	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999999571615702	WITHOUT_CLASSIFICATION	4.2838429867578516E-8	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999945631874294	WITHOUT_CLASSIFICATION	5.436812570507203E-6	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999967856042955	WITHOUT_CLASSIFICATION	3.214395704551496E-6	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999865137766422	WITHOUT_CLASSIFICATION	1.3486223357894144E-5	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999944811347846	WITHOUT_CLASSIFICATION	5.518865215388182E-6	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999914100214427	WITHOUT_CLASSIFICATION	8.589978557288659E-6	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999964298933679	WITHOUT_CLASSIFICATION	3.5701066320825004E-6	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999974457782036	WITHOUT_CLASSIFICATION	2.554221796480537E-6	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999943040565734	WITHOUT_CLASSIFICATION	5.695943426490808E-6	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999977226132973	WITHOUT_CLASSIFICATION	2.2773867025560486E-6	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9999991985741614	WITHOUT_CLASSIFICATION	8.014258386489116E-7	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.999384051044124	WITHOUT_CLASSIFICATION	6.159489558760472E-4	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999993128192771	WITHOUT_CLASSIFICATION	6.871807228366417E-7	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.999999187144093	WITHOUT_CLASSIFICATION	8.128559071699497E-7	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999994537387921	WITHOUT_CLASSIFICATION	5.462612079066762E-7	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999925249389318	WITHOUT_CLASSIFICATION	7.475061068203736E-6	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999968461533977	WITHOUT_CLASSIFICATION	3.153846602446414E-6	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999956551613733	WITHOUT_CLASSIFICATION	4.3448386266281686E-6	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999489809798675	WITHOUT_CLASSIFICATION	5.101902013240334E-5	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999987644757632	WITHOUT_CLASSIFICATION	1.2355242367920773E-6	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9999787133299725	WITHOUT_CLASSIFICATION	2.1286670027582373E-5	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999999668691565	WITHOUT_CLASSIFICATION	3.313084342890728E-8	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9998924268000854	WITHOUT_CLASSIFICATION	1.0757319991455908E-4	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.9998459959689953	WITHOUT_CLASSIFICATION	1.5400403100482255E-4	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999976446425033	WITHOUT_CLASSIFICATION	2.3553574966427103E-6	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999976446425033	WITHOUT_CLASSIFICATION	2.3553574966427103E-6	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999985268755991	WITHOUT_CLASSIFICATION	1.473124400874859E-6	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.9999949298204592	WITHOUT_CLASSIFICATION	5.070179540790122E-6	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999883891663534	WITHOUT_CLASSIFICATION	1.161083364663441E-5	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999311522523534	WITHOUT_CLASSIFICATION	6.884774764658756E-5	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999979125615543	WITHOUT_CLASSIFICATION	2.087438445665287E-6	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999537034027236	WITHOUT_CLASSIFICATION	4.62965972762886E-5	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999996151102375	WITHOUT_CLASSIFICATION	3.8488976259994257E-7	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999978278610798	WITHOUT_CLASSIFICATION	2.1721389201924383E-6	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999961302456807	WITHOUT_CLASSIFICATION	3.869754319363354E-6	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999993683844036	WITHOUT_CLASSIFICATION	6.316155964017636E-7	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999932343531813	WITHOUT_CLASSIFICATION	6.76564681866385E-6	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9999951527195661	WITHOUT_CLASSIFICATION	4.8472804339442975E-6	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999845437649124	WITHOUT_CLASSIFICATION	1.5456235087578862E-5	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999996351690291	WITHOUT_CLASSIFICATION	3.6483097083406566E-7	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999979166492445	WITHOUT_CLASSIFICATION	2.083350755507421E-6	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999677756061	WITHOUT_CLASSIFICATION	3.222439392605681E-8	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.999995933800885	WITHOUT_CLASSIFICATION	4.0661991149622134E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999912795895	WITHOUT_CLASSIFICATION	8.720410528608031E-9	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999912795895	WITHOUT_CLASSIFICATION	8.720410528608031E-9	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9999717073641087	WITHOUT_CLASSIFICATION	2.8292635891298066E-5	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9999909254988478	WITHOUT_CLASSIFICATION	9.07450115216782E-6	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999999632387749	WITHOUT_CLASSIFICATION	3.676122510042641E-8	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.999993732234902	WITHOUT_CLASSIFICATION	6.267765098110947E-6	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999971109274012	WITHOUT_CLASSIFICATION	2.8890725989041762E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999912795895	WITHOUT_CLASSIFICATION	8.720410528608031E-9	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999912795895	WITHOUT_CLASSIFICATION	8.720410528608031E-9	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999732362992686	WITHOUT_CLASSIFICATION	2.676370073131557E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999732362992686	WITHOUT_CLASSIFICATION	2.676370073131557E-5	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.999854035174936	WITHOUT_CLASSIFICATION	1.4596482506402524E-4	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.999993525106143	WITHOUT_CLASSIFICATION	6.4748938569751935E-6	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999995636697847	WITHOUT_CLASSIFICATION	4.3633021536540454E-7	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999991785511125	WITHOUT_CLASSIFICATION	8.214488875047766E-7	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999977199340359	WITHOUT_CLASSIFICATION	2.2800659641158785E-6	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999977199340359	WITHOUT_CLASSIFICATION	2.2800659641158785E-6	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999993461475669	WITHOUT_CLASSIFICATION	6.538524330399968E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999921455254447	WITHOUT_CLASSIFICATION	7.85447455529028E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999984240361464	WITHOUT_CLASSIFICATION	1.5759638536267227E-6	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999901569972519	WITHOUT_CLASSIFICATION	9.843002748002674E-6	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999741050625514	WITHOUT_CLASSIFICATION	2.5894937448687477E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998120647398859	WITHOUT_CLASSIFICATION	1.879352601139609E-4	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999955195704587	WITHOUT_CLASSIFICATION	4.480429541222766E-6	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999995492097518	WITHOUT_CLASSIFICATION	4.5079024832022443E-7	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999995991908625	WITHOUT_CLASSIFICATION	4.0080913760770013E-7	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999918326225168	WITHOUT_CLASSIFICATION	8.167377483259811E-6	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999876284542978	WITHOUT_CLASSIFICATION	1.2371545702277273E-5	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999993121104747	WITHOUT_CLASSIFICATION	6.878895254312294E-7	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999439121474801	WITHOUT_CLASSIFICATION	5.6087852519939795E-5	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999996792285213	WITHOUT_CLASSIFICATION	3.207714786571978E-7	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999677756061	WITHOUT_CLASSIFICATION	3.222439392605681E-8	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999912795895	WITHOUT_CLASSIFICATION	8.720410528608031E-9	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999732362992686	WITHOUT_CLASSIFICATION	2.676370073131557E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998120647398859	WITHOUT_CLASSIFICATION	1.879352601139609E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999136765578	WITHOUT_CLASSIFICATION	8.632344225563633E-8	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999136765578	WITHOUT_CLASSIFICATION	8.632344225563633E-8	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999781221393528	WITHOUT_CLASSIFICATION	2.1877860647132877E-5	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999980489455339	WITHOUT_CLASSIFICATION	1.9510544661001215E-6	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999998742900317	WITHOUT_CLASSIFICATION	1.2570996829766532E-7	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999965134774665	WITHOUT_CLASSIFICATION	3.4865225334788903E-6	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999979568517763	WITHOUT_CLASSIFICATION	2.0431482236753594E-6	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999999973283575	WITHOUT_CLASSIFICATION	2.6716425328217827E-9	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999994914816112	WITHOUT_CLASSIFICATION	5.085183888013293E-7	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999923985376951	WITHOUT_CLASSIFICATION	7.601462304868091E-6	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999995507784551	WITHOUT_CLASSIFICATION	4.4922154479416754E-7	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999985677491231	WITHOUT_CLASSIFICATION	1.43225087691601E-6	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999707962467891	WITHOUT_CLASSIFICATION	2.9203753210858042E-5	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.999999628302458	WITHOUT_CLASSIFICATION	3.7169754200249515E-7	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.999999897507407	WITHOUT_CLASSIFICATION	1.0249259294504123E-7	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.999995933800885	WITHOUT_CLASSIFICATION	4.0661991149622134E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999732362992686	WITHOUT_CLASSIFICATION	2.676370073131557E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999921455254447	WITHOUT_CLASSIFICATION	7.85447455529028E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999984240361464	WITHOUT_CLASSIFICATION	1.5759638536267227E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999984240361464	WITHOUT_CLASSIFICATION	1.5759638536267227E-6	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999741050625514	WITHOUT_CLASSIFICATION	2.5894937448687477E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998120647398859	WITHOUT_CLASSIFICATION	1.879352601139609E-4	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9998120647398859	WITHOUT_CLASSIFICATION	1.879352601139609E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999136765578	WITHOUT_CLASSIFICATION	8.632344225563633E-8	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999706146606931	WITHOUT_CLASSIFICATION	2.938533930688817E-5	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999728116609895	WITHOUT_CLASSIFICATION	2.7188339010595236E-5	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999973378313	WITHOUT_CLASSIFICATION	2.6621686249998152E-9	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.999999580204347	WITHOUT_CLASSIFICATION	4.1979565308895243E-7	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999653291474808	WITHOUT_CLASSIFICATION	3.467085251910723E-5	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999589862038846	WITHOUT_CLASSIFICATION	4.101379611545457E-5	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.999994550924712	WITHOUT_CLASSIFICATION	5.449075287924852E-6	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999995190501646	WITHOUT_CLASSIFICATION	4.809498353881361E-7	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999967318259848	WITHOUT_CLASSIFICATION	3.268174015311066E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999921455254447	WITHOUT_CLASSIFICATION	7.85447455529028E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999984240361464	WITHOUT_CLASSIFICATION	1.5759638536267227E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999984240361464	WITHOUT_CLASSIFICATION	1.5759638536267227E-6	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999741050625514	WITHOUT_CLASSIFICATION	2.5894937448687477E-5	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999923985376951	WITHOUT_CLASSIFICATION	7.601462304868091E-6	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999985677491231	WITHOUT_CLASSIFICATION	1.43225087691601E-6	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999995591024559	WITHOUT_CLASSIFICATION	4.408975441759561E-7	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999876054342322	WITHOUT_CLASSIFICATION	1.2394565767914672E-5	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999898960875	WITHOUT_CLASSIFICATION	1.0103912500052712E-5	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999898960875	WITHOUT_CLASSIFICATION	1.0103912500052712E-5	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.999996677137535	WITHOUT_CLASSIFICATION	3.3228624648400942E-6	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999999741082887	WITHOUT_CLASSIFICATION	2.5891711382752052E-8	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999977182603592	WITHOUT_CLASSIFICATION	2.2817396408722164E-6	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999943144055646	WITHOUT_CLASSIFICATION	5.685594435391447E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.999999859680242	WITHOUT_CLASSIFICATION	1.4031975804486008E-7	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.999999859680242	WITHOUT_CLASSIFICATION	1.4031975804486008E-7	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9990792339471763	WITHOUT_CLASSIFICATION	9.207660528236167E-4	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9990792339471763	WITHOUT_CLASSIFICATION	9.207660528236167E-4	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.99998745838578	WITHOUT_CLASSIFICATION	1.254161422008583E-5	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.99998745838578	WITHOUT_CLASSIFICATION	1.254161422008583E-5	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.999997215584703	WITHOUT_CLASSIFICATION	2.7844152970884128E-6	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.999995809848978	WITHOUT_CLASSIFICATION	4.190151022041938E-6	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.999833878334442	WITHOUT_CLASSIFICATION	1.6612166555795497E-4	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999967919377231	WITHOUT_CLASSIFICATION	3.2080622769593468E-6	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999999183465591	WITHOUT_CLASSIFICATION	8.165344084246104E-8	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.9999980176499652	WITHOUT_CLASSIFICATION	1.9823500347387136E-6	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999999213870572	WITHOUT_CLASSIFICATION	7.861294284916295E-8	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999994925131931	WITHOUT_CLASSIFICATION	5.074868070188112E-7	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999989269415959	WITHOUT_CLASSIFICATION	1.0730584041400127E-6	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.999999320727342	WITHOUT_CLASSIFICATION	6.792726580781802E-7	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999983274224501	WITHOUT_CLASSIFICATION	1.6725775498642263E-6	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999996587418518	WITHOUT_CLASSIFICATION	3.4125814820235525E-7	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999927245272795	WITHOUT_CLASSIFICATION	7.27547272042014E-6	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999976555296826	WITHOUT_CLASSIFICATION	2.3444703174848924E-6	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999976555296826	WITHOUT_CLASSIFICATION	2.3444703174848924E-6	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999379957452753	WITHOUT_CLASSIFICATION	6.200425472468718E-5	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999998059555067	WITHOUT_CLASSIFICATION	1.9404449320080174E-7	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999863343561323	WITHOUT_CLASSIFICATION	1.3665643867811493E-5	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999952003396	WITHOUT_CLASSIFICATION	4.799660423423441E-9	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999998383359741	WITHOUT_CLASSIFICATION	1.6166402601265396E-7	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999997996460491	WITHOUT_CLASSIFICATION	2.0035395087143888E-7	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999999480115622	WITHOUT_CLASSIFICATION	5.198843778281188E-8	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999991422356794	WITHOUT_CLASSIFICATION	8.577643205393444E-7	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999991370883499	WITHOUT_CLASSIFICATION	8.629116500711835E-7	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999999562428719	WITHOUT_CLASSIFICATION	4.375712825312226E-8	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999968907585836	WITHOUT_CLASSIFICATION	3.1092414165618684E-6	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999965818634863	WITHOUT_CLASSIFICATION	3.4181365137427494E-6	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.999999956710748	WITHOUT_CLASSIFICATION	4.328925202499302E-8	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.812249406351063	WITHOUT_CLASSIFICATION	0.18775059364893695	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999977974402761	WITHOUT_CLASSIFICATION	2.2025597238885155E-6	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999995309753557	WITHOUT_CLASSIFICATION	4.690246444152299E-7	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9999968023468705	WITHOUT_CLASSIFICATION	3.1976531295893274E-6	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999946939606494	WITHOUT_CLASSIFICATION	5.306039350609157E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999982077501678	WITHOUT_CLASSIFICATION	1.7922498322552766E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999982077501678	WITHOUT_CLASSIFICATION	1.7922498322552766E-6	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999986199173035	WITHOUT_CLASSIFICATION	1.3800826964318454E-6	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999994545750853	WITHOUT_CLASSIFICATION	5.454249146871514E-7	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999723099482777	WITHOUT_CLASSIFICATION	2.769005172231703E-5	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999723099482777	WITHOUT_CLASSIFICATION	2.769005172231703E-5	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999990562619427	WITHOUT_CLASSIFICATION	9.43738057126938E-7	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999987776802249	WITHOUT_CLASSIFICATION	1.2223197749723213E-6	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999429985837414	WITHOUT_CLASSIFICATION	5.700141625856604E-5	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999938141015994	WITHOUT_CLASSIFICATION	6.185898400565589E-6	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999999840953445	WITHOUT_CLASSIFICATION	1.590465542026762E-8	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999998366501193	WITHOUT_CLASSIFICATION	1.6334988084292124E-7	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999998366501193	WITHOUT_CLASSIFICATION	1.6334988084292124E-7	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999998109307526	WITHOUT_CLASSIFICATION	1.8906924735638697E-7	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999999771827	WITHOUT_CLASSIFICATION	2.2817300038931386E-8	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999944416400564	WITHOUT_CLASSIFICATION	5.558359943753796E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999996678734063	WITHOUT_CLASSIFICATION	3.3212659357471506E-7	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999994545750853	WITHOUT_CLASSIFICATION	5.454249146871514E-7	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.999992373937076	WITHOUT_CLASSIFICATION	7.626062924086192E-6	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999993930451524	WITHOUT_CLASSIFICATION	6.069548474998516E-7	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999993930451524	WITHOUT_CLASSIFICATION	6.069548474998516E-7	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999038226793384	WITHOUT_CLASSIFICATION	9.617732066164448E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997094221318	WITHOUT_CLASSIFICATION	2.9057786816392676E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997094221318	WITHOUT_CLASSIFICATION	2.9057786816392676E-7	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997377913318273	WITHOUT_CLASSIFICATION	2.6220866817266986E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997377913318273	WITHOUT_CLASSIFICATION	2.6220866817266986E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997377913318273	WITHOUT_CLASSIFICATION	2.6220866817266986E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997094221318	WITHOUT_CLASSIFICATION	2.9057786816392676E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997094221318	WITHOUT_CLASSIFICATION	2.9057786816392676E-7	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999038226793384	WITHOUT_CLASSIFICATION	9.617732066164448E-5	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999999205270861	WITHOUT_CLASSIFICATION	7.94729139646091E-8	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9999977847763751	WITHOUT_CLASSIFICATION	2.2152236249603254E-6	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999945900915067	WITHOUT_CLASSIFICATION	5.409908493337619E-6	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9999316616308369	WITHOUT_CLASSIFICATION	6.833836916309608E-5	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999992372377158	WITHOUT_CLASSIFICATION	7.627622842829021E-7	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999951907890796	WITHOUT_CLASSIFICATION	4.80921092039044E-6	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999970594625962	WITHOUT_CLASSIFICATION	2.940537403785531E-6	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999997728537782	WITHOUT_CLASSIFICATION	2.2714622186196743E-7	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999968907585836	WITHOUT_CLASSIFICATION	3.1092414165618684E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997094221318	WITHOUT_CLASSIFICATION	2.9057786816392676E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997094221318	WITHOUT_CLASSIFICATION	2.9057786816392676E-7	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999386790018	WITHOUT_CLASSIFICATION	6.13209981781719E-8	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999961828951964	WITHOUT_CLASSIFICATION	3.817104803520375E-6	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999992591712711	WITHOUT_CLASSIFICATION	7.408287288700264E-7	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999997671593214	WITHOUT_CLASSIFICATION	2.3284067856114933E-7	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9997841397692164	WITHOUT_CLASSIFICATION	2.158602307834744E-4	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999406370958963	WITHOUT_CLASSIFICATION	5.9362904103772085E-5	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999995471548571	WITHOUT_CLASSIFICATION	4.5284514289622506E-7	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999885508049727	WITHOUT_CLASSIFICATION	1.1449195027362004E-5	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999969789172436	WITHOUT_CLASSIFICATION	3.021082756321292E-6	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.999999583154011	WITHOUT_CLASSIFICATION	4.168459889711625E-7	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999822480183527	WITHOUT_CLASSIFICATION	1.7751981647364903E-5	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999896044094616	WITHOUT_CLASSIFICATION	1.0395590538310628E-5	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999947000015587	WITHOUT_CLASSIFICATION	5.299998441286432E-6	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.999581702826571	WITHOUT_CLASSIFICATION	4.1829717342906477E-4	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999943431508996	WITHOUT_CLASSIFICATION	5.6568491002916415E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999993988371145	WITHOUT_CLASSIFICATION	6.011628855771624E-7	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999993988371145	WITHOUT_CLASSIFICATION	6.011628855771624E-7	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999993988371145	WITHOUT_CLASSIFICATION	6.011628855771624E-7	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999922513548519	WITHOUT_CLASSIFICATION	7.74864514800529E-6	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999986920221552	WITHOUT_CLASSIFICATION	1.3079778448497777E-6	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999856585793313	WITHOUT_CLASSIFICATION	1.434142066865261E-5	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999988858320994	WITHOUT_CLASSIFICATION	1.1141679005075443E-6	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999183954239759	WITHOUT_CLASSIFICATION	8.160457602409249E-5	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999995210189072	WITHOUT_CLASSIFICATION	4.789810927904971E-7	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999999726755804	WITHOUT_CLASSIFICATION	2.7324419575913422E-8	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999999706577571	WITHOUT_CLASSIFICATION	2.934224286934462E-8	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999997328377456	WITHOUT_CLASSIFICATION	2.671622544992295E-7	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999996060535162	WITHOUT_CLASSIFICATION	3.939464838133713E-7	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.999998303153858	WITHOUT_CLASSIFICATION	1.6968461420034892E-6	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999844231908965	WITHOUT_CLASSIFICATION	1.5576809103480153E-5	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999998109307526	WITHOUT_CLASSIFICATION	1.8906924735638697E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997094221318	WITHOUT_CLASSIFICATION	2.9057786816392676E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997094221318	WITHOUT_CLASSIFICATION	2.9057786816392676E-7	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999038226793384	WITHOUT_CLASSIFICATION	9.617732066164448E-5	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999951907890796	WITHOUT_CLASSIFICATION	4.80921092039044E-6	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999961828951964	WITHOUT_CLASSIFICATION	3.817104803520375E-6	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999997671593214	WITHOUT_CLASSIFICATION	2.3284067856114933E-7	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999406370958963	WITHOUT_CLASSIFICATION	5.9362904103772085E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999992591712711	WITHOUT_CLASSIFICATION	7.408287288700264E-7	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999995471548571	WITHOUT_CLASSIFICATION	4.5284514289622506E-7	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.999999583154011	WITHOUT_CLASSIFICATION	4.168459889711625E-7	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999969789172436	WITHOUT_CLASSIFICATION	3.021082756321292E-6	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999896044094616	WITHOUT_CLASSIFICATION	1.0395590538310628E-5	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999941520550959	WITHOUT_CLASSIFICATION	5.8479449041170386E-6	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9994300730273153	WITHOUT_CLASSIFICATION	5.699269726845809E-4	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999973840750965	WITHOUT_CLASSIFICATION	2.6159249034040568E-6	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999999925235488	WITHOUT_CLASSIFICATION	7.476451186959357E-9	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999938277822589	WITHOUT_CLASSIFICATION	6.172217741127781E-6	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999205644052385	WITHOUT_CLASSIFICATION	7.943559476153645E-5	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999996365183628	WITHOUT_CLASSIFICATION	3.634816372776403E-7	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9998287321191144	WITHOUT_CLASSIFICATION	1.7126788088567212E-4	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999990293682072	WITHOUT_CLASSIFICATION	9.70631792912215E-7	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999767038846102	WITHOUT_CLASSIFICATION	2.3296115389731938E-5	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9998676634725959	WITHOUT_CLASSIFICATION	1.323365274041482E-4	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999997522769245	WITHOUT_CLASSIFICATION	2.477230755434283E-7	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999996566732109	WITHOUT_CLASSIFICATION	3.433267890929734E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999988519260685	WITHOUT_CLASSIFICATION	1.1480739315897385E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999992437405311	WITHOUT_CLASSIFICATION	7.562594689922587E-7	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999977793298644	WITHOUT_CLASSIFICATION	2.2206701355116083E-6	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999324624191	WITHOUT_CLASSIFICATION	6.7537580896306E-8	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999900523225828	WITHOUT_CLASSIFICATION	9.947677417360965E-6	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999927210324089	WITHOUT_CLASSIFICATION	7.278967591138679E-6	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999984671678726	WITHOUT_CLASSIFICATION	1.5328321273710095E-6	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999996593763292	WITHOUT_CLASSIFICATION	3.406236708507841E-7	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999964134175	WITHOUT_CLASSIFICATION	3.586582582430134E-9	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999964134175	WITHOUT_CLASSIFICATION	3.586582582430134E-9	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999994853167968	WITHOUT_CLASSIFICATION	5.14683203155646E-7	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.999999977389843	WITHOUT_CLASSIFICATION	2.261015686861071E-8	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999345300122577	WITHOUT_CLASSIFICATION	6.54699877421793E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999345300122577	WITHOUT_CLASSIFICATION	6.54699877421793E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999345300122577	WITHOUT_CLASSIFICATION	6.54699877421793E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999430995079566	WITHOUT_CLASSIFICATION	5.690049204345764E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999430995079566	WITHOUT_CLASSIFICATION	5.690049204345764E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999430995079566	WITHOUT_CLASSIFICATION	5.690049204345764E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999430995079566	WITHOUT_CLASSIFICATION	5.690049204345764E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999524963518823	WITHOUT_CLASSIFICATION	4.750364811774244E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999524963518823	WITHOUT_CLASSIFICATION	4.750364811774244E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999524963518823	WITHOUT_CLASSIFICATION	4.750364811774244E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999431574991202	WITHOUT_CLASSIFICATION	5.684250087981751E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999431574991202	WITHOUT_CLASSIFICATION	5.684250087981751E-5	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999386381008045	WITHOUT_CLASSIFICATION	6.136189919541005E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999252109092649	WITHOUT_CLASSIFICATION	7.478909073506434E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.999999977389843	WITHOUT_CLASSIFICATION	2.261015686861071E-8	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999998919512983	WITHOUT_CLASSIFICATION	1.0804870153728895E-7	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999345300122577	WITHOUT_CLASSIFICATION	6.54699877421793E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999345300122577	WITHOUT_CLASSIFICATION	6.54699877421793E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999430995079566	WITHOUT_CLASSIFICATION	5.690049204345764E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999430995079566	WITHOUT_CLASSIFICATION	5.690049204345764E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999430995079566	WITHOUT_CLASSIFICATION	5.690049204345764E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999524963518823	WITHOUT_CLASSIFICATION	4.750364811774244E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999524963518823	WITHOUT_CLASSIFICATION	4.750364811774244E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999431574991202	WITHOUT_CLASSIFICATION	5.684250087981751E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999252109092649	WITHOUT_CLASSIFICATION	7.478909073506434E-5	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999966492486255	WITHOUT_CLASSIFICATION	3.350751374473756E-6	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999966492486255	WITHOUT_CLASSIFICATION	3.350751374473756E-6	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999991499674854	WITHOUT_CLASSIFICATION	8.500325145849028E-7	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999991499674854	WITHOUT_CLASSIFICATION	8.500325145849028E-7	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999901705828866	WITHOUT_CLASSIFICATION	9.829417113390874E-6	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999901705828866	WITHOUT_CLASSIFICATION	9.829417113390874E-6	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.99999888676959	WITHOUT_CLASSIFICATION	1.1132304098569245E-6	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999976460553548	WITHOUT_CLASSIFICATION	2.353944645186439E-6	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999976460553548	WITHOUT_CLASSIFICATION	2.353944645186439E-6	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999913993759706	WITHOUT_CLASSIFICATION	8.600624029420494E-6	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999913993759706	WITHOUT_CLASSIFICATION	8.600624029420494E-6	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.999998841299186	WITHOUT_CLASSIFICATION	1.1587008140029778E-6	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999993001786469	WITHOUT_CLASSIFICATION	6.998213530370148E-7	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999993001786469	WITHOUT_CLASSIFICATION	6.998213530370148E-7	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999993771664849	WITHOUT_CLASSIFICATION	6.228335151078098E-7	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999969961628912	WITHOUT_CLASSIFICATION	3.003837108751615E-6	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999997014717148	WITHOUT_CLASSIFICATION	2.985282852284926E-7	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999430995079566	WITHOUT_CLASSIFICATION	5.690049204345764E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999430995079566	WITHOUT_CLASSIFICATION	5.690049204345764E-5	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999993771664849	WITHOUT_CLASSIFICATION	6.228335151078098E-7	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999992750362735	WITHOUT_CLASSIFICATION	7.24963726540779E-7	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999993859398784	WITHOUT_CLASSIFICATION	6.140601217299698E-7	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999993859398784	WITHOUT_CLASSIFICATION	6.140601217299698E-7	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999993859398784	WITHOUT_CLASSIFICATION	6.140601217299698E-7	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9997157088044312	WITHOUT_CLASSIFICATION	2.842911955688714E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.999996490750972	WITHOUT_CLASSIFICATION	3.5092490281755884E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999572533618222	WITHOUT_CLASSIFICATION	4.274663817790033E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999572533618222	WITHOUT_CLASSIFICATION	4.274663817790033E-5	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9997765597140736	WITHOUT_CLASSIFICATION	2.2344028592640936E-4	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999235846061784	WITHOUT_CLASSIFICATION	7.641539382166101E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999926214957086	WITHOUT_CLASSIFICATION	7.378504291345412E-6	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999945010175156	WITHOUT_CLASSIFICATION	5.4989824844601665E-6	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999928740410531	WITHOUT_CLASSIFICATION	7.125958946981058E-6	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999996714094821	WITHOUT_CLASSIFICATION	3.285905178867263E-7	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999996714094821	WITHOUT_CLASSIFICATION	3.285905178867263E-7	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999940699930271	WITHOUT_CLASSIFICATION	5.930006972889469E-6	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999266040230022	WITHOUT_CLASSIFICATION	7.339597699785462E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999266040230022	WITHOUT_CLASSIFICATION	7.339597699785462E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999430995079566	WITHOUT_CLASSIFICATION	5.690049204345764E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999993859398784	WITHOUT_CLASSIFICATION	6.140601217299698E-7	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.999996490750972	WITHOUT_CLASSIFICATION	3.5092490281755884E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999572533618222	WITHOUT_CLASSIFICATION	4.274663817790033E-5	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9997765597140736	WITHOUT_CLASSIFICATION	2.2344028592640936E-4	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999235846061784	WITHOUT_CLASSIFICATION	7.641539382166101E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999926214957086	WITHOUT_CLASSIFICATION	7.378504291345412E-6	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999945010175156	WITHOUT_CLASSIFICATION	5.4989824844601665E-6	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999266040230022	WITHOUT_CLASSIFICATION	7.339597699785462E-5	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999998962926221	WITHOUT_CLASSIFICATION	1.037073778694152E-7	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999994735270028	WITHOUT_CLASSIFICATION	5.264729973153816E-7	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999999691984678	WITHOUT_CLASSIFICATION	3.080153219252165E-8	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.999946726838469	WITHOUT_CLASSIFICATION	5.3273161531090725E-5	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999968774634104	WITHOUT_CLASSIFICATION	3.122536589725625E-6	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999977720255704	WITHOUT_CLASSIFICATION	2.2279744295943617E-6	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999993930206964	WITHOUT_CLASSIFICATION	6.069793035018764E-7	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999993930206964	WITHOUT_CLASSIFICATION	6.069793035018764E-7	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999481460158004	WITHOUT_CLASSIFICATION	5.185398419962461E-5	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.999923988323258	WITHOUT_CLASSIFICATION	7.601167674205378E-5	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9998873912665587	WITHOUT_CLASSIFICATION	1.1260873344129232E-4	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9998943821521802	WITHOUT_CLASSIFICATION	1.0561784781981589E-4	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9998523330972516	WITHOUT_CLASSIFICATION	1.4766690274843709E-4	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9998523330972516	WITHOUT_CLASSIFICATION	1.4766690274843709E-4	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9998495064125471	WITHOUT_CLASSIFICATION	1.5049358745296425E-4	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999590877643354	WITHOUT_CLASSIFICATION	4.091223566453416E-5	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9989347720633075	WITHOUT_CLASSIFICATION	0.001065227936692523	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9989347720633075	WITHOUT_CLASSIFICATION	0.001065227936692523	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9998770577601042	WITHOUT_CLASSIFICATION	1.2294223989581436E-4	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9997283952293898	WITHOUT_CLASSIFICATION	2.7160477061020406E-4	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999928740410531	WITHOUT_CLASSIFICATION	7.125958946981058E-6	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999996657975521	WITHOUT_CLASSIFICATION	3.342024478439236E-7	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999813578929	WITHOUT_CLASSIFICATION	1.864210715580083E-8	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999979289763298	WITHOUT_CLASSIFICATION	2.0710236701430713E-6	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999983911103651	WITHOUT_CLASSIFICATION	1.608889634846984E-6	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.9999998868594224	WITHOUT_CLASSIFICATION	1.1314057746791666E-7	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999994672830925	WITHOUT_CLASSIFICATION	5.327169074580725E-7	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999949913402518	WITHOUT_CLASSIFICATION	5.0086597482100575E-6	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999984621578059	WITHOUT_CLASSIFICATION	1.537842194126923E-6	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999982613021088	WITHOUT_CLASSIFICATION	1.7386978912381254E-6	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999982613021088	WITHOUT_CLASSIFICATION	1.7386978912381254E-6	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999894075687782	WITHOUT_CLASSIFICATION	1.0592431221825945E-5	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999894075687782	WITHOUT_CLASSIFICATION	1.0592431221825945E-5	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.999999850342688	WITHOUT_CLASSIFICATION	1.4965731198614823E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999995156967046	WITHOUT_CLASSIFICATION	4.843032953127879E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999995156967046	WITHOUT_CLASSIFICATION	4.843032953127879E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999995156967046	WITHOUT_CLASSIFICATION	4.843032953127879E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998792808529	WITHOUT_CLASSIFICATION	1.2071914707367325E-7	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.999999495030835	WITHOUT_CLASSIFICATION	5.049691649928169E-7	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.999999495030835	WITHOUT_CLASSIFICATION	5.049691649928169E-7	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999332056426	WITHOUT_CLASSIFICATION	6.679435739240516E-8	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999946898071251	WITHOUT_CLASSIFICATION	5.310192874946227E-6	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999881395233738	WITHOUT_CLASSIFICATION	1.1860476626239004E-5	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9999940435604013	WITHOUT_CLASSIFICATION	5.956439598677954E-6	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999561250540046	WITHOUT_CLASSIFICATION	4.387494599552562E-5	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9999869095124824	WITHOUT_CLASSIFICATION	1.3090487517522352E-5	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9998798545606296	WITHOUT_CLASSIFICATION	1.2014543937035634E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999996566732109	WITHOUT_CLASSIFICATION	3.433267890929734E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999996566732109	WITHOUT_CLASSIFICATION	3.433267890929734E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998792808529	WITHOUT_CLASSIFICATION	1.2071914707367325E-7	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999332056426	WITHOUT_CLASSIFICATION	6.679435739240516E-8	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999961091427	WITHOUT_CLASSIFICATION	3.890857307785879E-9	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999946898071251	WITHOUT_CLASSIFICATION	5.310192874946227E-6	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999881395233738	WITHOUT_CLASSIFICATION	1.1860476626239004E-5	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999654166980945	WITHOUT_CLASSIFICATION	3.4583301905609735E-5	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9999990294887755	WITHOUT_CLASSIFICATION	9.70511224401795E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999983819914796	WITHOUT_CLASSIFICATION	1.6180085204555282E-6	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.9999918227636878	WITHOUT_CLASSIFICATION	8.177236312219531E-6	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999981853828217	WITHOUT_CLASSIFICATION	1.8146171783029674E-6	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999997372014766	WITHOUT_CLASSIFICATION	2.6279852345300004E-7	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999990551642537	WITHOUT_CLASSIFICATION	9.448357462945162E-7	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999654166980945	WITHOUT_CLASSIFICATION	3.4583301905609735E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.999994373834163	WITHOUT_CLASSIFICATION	5.626165837010731E-6	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.999994373834163	WITHOUT_CLASSIFICATION	5.626165837010731E-6	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999963438195597	WITHOUT_CLASSIFICATION	3.6561804401751224E-6	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999494753694559	WITHOUT_CLASSIFICATION	5.052463054425176E-5	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999989801642722	WITHOUT_CLASSIFICATION	1.0198357277745609E-6	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999669974199356	WITHOUT_CLASSIFICATION	3.3002580064398465E-5	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999930945864439	WITHOUT_CLASSIFICATION	6.905413556084228E-6	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9991705073191997	WITHOUT_CLASSIFICATION	8.294926808003598E-4	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999993152106055	WITHOUT_CLASSIFICATION	6.847893944936222E-7	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999319033600119	WITHOUT_CLASSIFICATION	6.809663998797805E-5	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999998259420751	WITHOUT_CLASSIFICATION	1.740579247595749E-7	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9999998378169037	WITHOUT_CLASSIFICATION	1.6218309637708437E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999987061834028	WITHOUT_CLASSIFICATION	1.2938165972677335E-6	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999669974199356	WITHOUT_CLASSIFICATION	3.3002580064398465E-5	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999930945864439	WITHOUT_CLASSIFICATION	6.905413556084228E-6	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999214446558445	WITHOUT_CLASSIFICATION	7.855534415555443E-5	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9999998462177501	WITHOUT_CLASSIFICATION	1.5378224988137987E-7	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999999669440588	WITHOUT_CLASSIFICATION	3.305594129455017E-8	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999956018643781	WITHOUT_CLASSIFICATION	4.3981356218509435E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999999829271209	WITHOUT_CLASSIFICATION	1.707287909450968E-8	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999996879219709	WITHOUT_CLASSIFICATION	3.1207802911812284E-7	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9999719062657523	WITHOUT_CLASSIFICATION	2.809373424771518E-5	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9999991518117948	WITHOUT_CLASSIFICATION	8.481882052014139E-7	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999997965125829	WITHOUT_CLASSIFICATION	2.0348741706057856E-7	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999994685134257	WITHOUT_CLASSIFICATION	5.31486574324384E-7	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.999999418936546	WITHOUT_CLASSIFICATION	5.810634540259531E-7	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9999828169854522	WITHOUT_CLASSIFICATION	1.7183014547854374E-5	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999910135176766	WITHOUT_CLASSIFICATION	8.98648232337715E-6	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999991994540331	WITHOUT_CLASSIFICATION	8.00545966914756E-7	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999998689921787	WITHOUT_CLASSIFICATION	1.310078212279634E-7	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999998989704734	WITHOUT_CLASSIFICATION	1.0102952671476367E-7	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.999990880440055	WITHOUT_CLASSIFICATION	9.119559944991492E-6	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999874561386776	WITHOUT_CLASSIFICATION	1.254386132248085E-5	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999976174766675	WITHOUT_CLASSIFICATION	2.3825233324422024E-6	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999704814451315	WITHOUT_CLASSIFICATION	2.9518554868494356E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.999990880440055	WITHOUT_CLASSIFICATION	9.119559944991492E-6	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999874561386776	WITHOUT_CLASSIFICATION	1.254386132248085E-5	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999976174766675	WITHOUT_CLASSIFICATION	2.3825233324422024E-6	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9999989494182856	WITHOUT_CLASSIFICATION	1.0505817144774033E-6	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999985606555012	WITHOUT_CLASSIFICATION	1.439344498737268E-6	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999992387580101	WITHOUT_CLASSIFICATION	7.612419898774455E-7	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999955935356492	WITHOUT_CLASSIFICATION	4.406464350867527E-6	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999953010193238	WITHOUT_CLASSIFICATION	4.698980676249894E-6	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999904767452962	WITHOUT_CLASSIFICATION	9.523254703853108E-6	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999994060191861	WITHOUT_CLASSIFICATION	5.939808138775753E-7	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999950729243652	WITHOUT_CLASSIFICATION	4.927075634891454E-6	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9999998415404824	WITHOUT_CLASSIFICATION	1.584595176038532E-7	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9999966788396267	WITHOUT_CLASSIFICATION	3.3211603731477863E-6	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9496740724541036	WITHOUT_CLASSIFICATION	0.05032592754589632	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999998261698173	WITHOUT_CLASSIFICATION	1.7383018273913984E-7	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999969369677387	WITHOUT_CLASSIFICATION	3.0630322612176254E-6	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9996518524858918	WITHOUT_CLASSIFICATION	3.4814751410812357E-4	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999968995508535	WITHOUT_CLASSIFICATION	3.10044914650989E-6	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999993462385299	WITHOUT_CLASSIFICATION	6.53761470054218E-7	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999997412397279	WITHOUT_CLASSIFICATION	2.5876027213311806E-7	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.999997664900402	WITHOUT_CLASSIFICATION	2.3350995979827984E-6	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999979057563784	WITHOUT_CLASSIFICATION	2.094243621603736E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999740433352526	WITHOUT_CLASSIFICATION	2.5956664747309217E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999997466009475	WITHOUT_CLASSIFICATION	2.533990524978269E-7	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999982130427575	WITHOUT_CLASSIFICATION	1.7869572425771785E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999982130427575	WITHOUT_CLASSIFICATION	1.7869572425771785E-6	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999961999335735	WITHOUT_CLASSIFICATION	3.8000664266341124E-6	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999961999335735	WITHOUT_CLASSIFICATION	3.8000664266341124E-6	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999944328435014	WITHOUT_CLASSIFICATION	5.5671564985552904E-6	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999944328435014	WITHOUT_CLASSIFICATION	5.5671564985552904E-6	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.999966104792331	WITHOUT_CLASSIFICATION	3.389520766906269E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999998472781575	WITHOUT_CLASSIFICATION	1.5272184257587927E-7	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999651102897	WITHOUT_CLASSIFICATION	3.4889710290180614E-8	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999919423463001	WITHOUT_CLASSIFICATION	8.05765369989653E-6	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999888998581347	WITHOUT_CLASSIFICATION	1.1100141865251956E-5	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999665836232519	WITHOUT_CLASSIFICATION	3.341637674807238E-5	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.999997538992879	WITHOUT_CLASSIFICATION	2.461007121046009E-6	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9999820259849375	WITHOUT_CLASSIFICATION	1.7974015062547046E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999996566732109	WITHOUT_CLASSIFICATION	3.433267890929734E-6	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.999966104792331	WITHOUT_CLASSIFICATION	3.389520766906269E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999998472781575	WITHOUT_CLASSIFICATION	1.5272184257587927E-7	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999651102897	WITHOUT_CLASSIFICATION	3.4889710290180614E-8	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999888998581347	WITHOUT_CLASSIFICATION	1.1100141865251956E-5	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999665836232519	WITHOUT_CLASSIFICATION	3.341637674807238E-5	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.999986257309562	WITHOUT_CLASSIFICATION	1.3742690437918523E-5	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9999997063267664	WITHOUT_CLASSIFICATION	2.936732336399862E-7	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999973949672711	WITHOUT_CLASSIFICATION	2.605032728776093E-6	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999973949672711	WITHOUT_CLASSIFICATION	2.605032728776093E-6	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999879787298248	WITHOUT_CLASSIFICATION	1.202127017520379E-5	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999989825867794	WITHOUT_CLASSIFICATION	1.0174132205983797E-6	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999983405485438	WITHOUT_CLASSIFICATION	1.6594514562291542E-6	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999335841723	WITHOUT_CLASSIFICATION	6.641582772093213E-8	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999335841723	WITHOUT_CLASSIFICATION	6.641582772093213E-8	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999996272424586	WITHOUT_CLASSIFICATION	3.7275754133739433E-7	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999623036159	WITHOUT_CLASSIFICATION	3.7696384250662763E-8	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999833398382982	WITHOUT_CLASSIFICATION	1.6660161701733458E-5	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999994542043459	WITHOUT_CLASSIFICATION	5.457956541133002E-7	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999995040964859	WITHOUT_CLASSIFICATION	4.959035142623911E-7	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999988519260685	WITHOUT_CLASSIFICATION	1.1480739315897385E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999992437405311	WITHOUT_CLASSIFICATION	7.562594689922587E-7	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999977793298644	WITHOUT_CLASSIFICATION	2.2206701355116083E-6	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999324624191	WITHOUT_CLASSIFICATION	6.7537580896306E-8	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999984671678726	WITHOUT_CLASSIFICATION	1.5328321273710095E-6	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999996593763292	WITHOUT_CLASSIFICATION	3.406236708507841E-7	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999996272424586	WITHOUT_CLASSIFICATION	3.7275754133739433E-7	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999623036159	WITHOUT_CLASSIFICATION	3.7696384250662763E-8	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999994542043459	WITHOUT_CLASSIFICATION	5.457956541133002E-7	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999981709628587	WITHOUT_CLASSIFICATION	1.8290371413301755E-6	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999983405485438	WITHOUT_CLASSIFICATION	1.6594514562291542E-6	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999983405485438	WITHOUT_CLASSIFICATION	1.6594514562291542E-6	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999987061834028	WITHOUT_CLASSIFICATION	1.2938165972677335E-6	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999987061834028	WITHOUT_CLASSIFICATION	1.2938165972677335E-6	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999997660114639	WITHOUT_CLASSIFICATION	2.339885361148755E-7	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999997660114639	WITHOUT_CLASSIFICATION	2.339885361148755E-7	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999986652424172	WITHOUT_CLASSIFICATION	1.334757582777951E-6	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999988279659636	WITHOUT_CLASSIFICATION	1.1720340363668194E-6	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999995701424945	WITHOUT_CLASSIFICATION	4.2985750545518684E-7	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999970292466938	WITHOUT_CLASSIFICATION	2.9707533061264254E-6	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.999998002777544	WITHOUT_CLASSIFICATION	1.99722245606487E-6	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999691582102925	WITHOUT_CLASSIFICATION	3.084178970759983E-5	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999999029825818	WITHOUT_CLASSIFICATION	9.701741826178512E-8	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999794978868775	WITHOUT_CLASSIFICATION	2.0502113122525346E-5	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999998658204822	WITHOUT_CLASSIFICATION	1.3417951783013014E-7	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999997771148728	WITHOUT_CLASSIFICATION	2.2288512710285183E-7	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999963934271935	WITHOUT_CLASSIFICATION	3.606572806629142E-6	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9999998737495053	WITHOUT_CLASSIFICATION	1.262504946384027E-7	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999995300848464	WITHOUT_CLASSIFICATION	4.699151536399675E-7	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999674845071748	WITHOUT_CLASSIFICATION	3.251549282516811E-5	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999697447574298	WITHOUT_CLASSIFICATION	3.025524257016307E-5	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9999807037622361	WITHOUT_CLASSIFICATION	1.929623776380461E-5	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9999977497316382	WITHOUT_CLASSIFICATION	2.250268361706971E-6	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999911203416343	WITHOUT_CLASSIFICATION	8.87965836578447E-6	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999846896987235	WITHOUT_CLASSIFICATION	1.531030127656898E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999992437405311	WITHOUT_CLASSIFICATION	7.562594689922587E-7	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999324624191	WITHOUT_CLASSIFICATION	6.7537580896306E-8	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999964134175	WITHOUT_CLASSIFICATION	3.586582582430134E-9	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999572533618222	WITHOUT_CLASSIFICATION	4.274663817790033E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999572533618222	WITHOUT_CLASSIFICATION	4.274663817790033E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999981709628587	WITHOUT_CLASSIFICATION	1.8290371413301755E-6	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999983405485438	WITHOUT_CLASSIFICATION	1.6594514562291542E-6	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999987061834028	WITHOUT_CLASSIFICATION	1.2938165972677335E-6	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999997660114639	WITHOUT_CLASSIFICATION	2.339885361148755E-7	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999987745100118	WITHOUT_CLASSIFICATION	1.2254899881276068E-6	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999681043034085	WITHOUT_CLASSIFICATION	3.1895696591442296E-5	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9996133752342138	WITHOUT_CLASSIFICATION	3.866247657861781E-4	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999989675914941	WITHOUT_CLASSIFICATION	1.0324085059959846E-6	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999994042476608	WITHOUT_CLASSIFICATION	5.957523392100268E-7	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999994042476608	WITHOUT_CLASSIFICATION	5.957523392100268E-7	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999995821121931	WITHOUT_CLASSIFICATION	4.1788780682695925E-7	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.999988881791434	WITHOUT_CLASSIFICATION	1.1118208565994408E-5	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999869832757925	WITHOUT_CLASSIFICATION	1.3016724207645161E-5	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999953066320724	WITHOUT_CLASSIFICATION	4.693367927616392E-6	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999989989581692	WITHOUT_CLASSIFICATION	1.0010418307699607E-6	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999989989581692	WITHOUT_CLASSIFICATION	1.0010418307699607E-6	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999159176103696	WITHOUT_CLASSIFICATION	8.408238963043158E-5	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9999806428189584	WITHOUT_CLASSIFICATION	1.935718104160366E-5	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999956302241582	WITHOUT_CLASSIFICATION	4.369775841748632E-6	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9996359408645826	WITHOUT_CLASSIFICATION	3.640591354173352E-4	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.999910039834395	WITHOUT_CLASSIFICATION	8.996016560500237E-5	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999989693752763	WITHOUT_CLASSIFICATION	1.0306247237171779E-6	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.999987879214095	WITHOUT_CLASSIFICATION	1.2120785904965047E-5	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999995796761821	WITHOUT_CLASSIFICATION	4.2032381776060554E-7	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9997653130145174	WITHOUT_CLASSIFICATION	2.3468698548252887E-4	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9999953644239981	WITHOUT_CLASSIFICATION	4.635576001956743E-6	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999999714997124	WITHOUT_CLASSIFICATION	2.8500287595659995E-8	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999697297946119	WITHOUT_CLASSIFICATION	3.0270205388236522E-5	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9996936095217344	WITHOUT_CLASSIFICATION	3.0639047826561464E-4	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999997272580988	WITHOUT_CLASSIFICATION	2.7274190125013233E-7	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999956471638929	WITHOUT_CLASSIFICATION	4.352836107159161E-6	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999928067733451	WITHOUT_CLASSIFICATION	7.193226654803688E-6	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999975585219163	WITHOUT_CLASSIFICATION	2.441478083754705E-6	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999997500139279	WITHOUT_CLASSIFICATION	2.499860720344215E-7	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999570049355894	WITHOUT_CLASSIFICATION	4.299506441070216E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999989275914422	WITHOUT_CLASSIFICATION	1.0724085579219173E-6	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999991869495716	WITHOUT_CLASSIFICATION	8.130504284845196E-7	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.999999568288855	WITHOUT_CLASSIFICATION	4.317111449622259E-7	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.999999568288855	WITHOUT_CLASSIFICATION	4.317111449622259E-7	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999992260214806	WITHOUT_CLASSIFICATION	7.739785194271696E-7	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999998146271603	WITHOUT_CLASSIFICATION	1.8537283968711784E-7	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999991422356794	WITHOUT_CLASSIFICATION	8.577643205393444E-7	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999991422356794	WITHOUT_CLASSIFICATION	8.577643205393444E-7	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9927085064155308	WITHOUT_CLASSIFICATION	0.007291493584469299	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999992545661444	WITHOUT_CLASSIFICATION	7.45433855631383E-7	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999958294667061	WITHOUT_CLASSIFICATION	4.170533293934144E-6	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999883615138501	WITHOUT_CLASSIFICATION	1.1638486149915229E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999883615138501	WITHOUT_CLASSIFICATION	1.1638486149915229E-5	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999893065694646	WITHOUT_CLASSIFICATION	1.069343053538436E-5	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999631488434	WITHOUT_CLASSIFICATION	3.685115666917983E-8	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999998577809884	WITHOUT_CLASSIFICATION	1.422190114625946E-7	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999781418013046	WITHOUT_CLASSIFICATION	2.1858198695346404E-5	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.999999835037207	WITHOUT_CLASSIFICATION	1.649627928994019E-7	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999984537298939	WITHOUT_CLASSIFICATION	1.5462701061506036E-6	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999988305886295	WITHOUT_CLASSIFICATION	1.1694113705485645E-6	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999772542252598	WITHOUT_CLASSIFICATION	2.2745774740199454E-5	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9999982353238802	WITHOUT_CLASSIFICATION	1.7646761197573198E-6	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999927085280298	WITHOUT_CLASSIFICATION	7.291471970295283E-6	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999981970438007	WITHOUT_CLASSIFICATION	1.8029561994286507E-6	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9997042534436572	WITHOUT_CLASSIFICATION	2.957465563426985E-4	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9999934501422121	WITHOUT_CLASSIFICATION	6.549857787825841E-6	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999996105707616	WITHOUT_CLASSIFICATION	3.8942923845623376E-7	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999969334462376	WITHOUT_CLASSIFICATION	3.0665537623309826E-6	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999998885106973	WITHOUT_CLASSIFICATION	1.1148930276710496E-7	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.999999933459705	WITHOUT_CLASSIFICATION	6.654029504298074E-8	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999667898378244	WITHOUT_CLASSIFICATION	3.321016217563774E-5	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999969650147711	WITHOUT_CLASSIFICATION	3.0349852288730097E-6	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999999882199915	WITHOUT_CLASSIFICATION	1.178000859847579E-8	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9999963443413125	WITHOUT_CLASSIFICATION	3.6556586874651127E-6	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.999996859737064	WITHOUT_CLASSIFICATION	3.1402629360366346E-6	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999974909793419	WITHOUT_CLASSIFICATION	2.5090206581169916E-6	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999979114742354	WITHOUT_CLASSIFICATION	2.08852576452757E-6	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999918681972902	WITHOUT_CLASSIFICATION	8.13180270977268E-6	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999999467595875	WITHOUT_CLASSIFICATION	5.324041239438723E-8	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999651914310246	WITHOUT_CLASSIFICATION	3.480856897543471E-5	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999986245811392	WITHOUT_CLASSIFICATION	1.3754188608965994E-6	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999947158798331	WITHOUT_CLASSIFICATION	5.284120166879157E-6	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999997557759136	WITHOUT_CLASSIFICATION	2.4422408646152665E-7	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999997492303032	WITHOUT_CLASSIFICATION	2.5076969680910395E-7	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999996105707616	WITHOUT_CLASSIFICATION	3.8942923845623376E-7	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999986245811392	WITHOUT_CLASSIFICATION	1.3754188608965994E-6	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999947158798331	WITHOUT_CLASSIFICATION	5.284120166879157E-6	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999997492303032	WITHOUT_CLASSIFICATION	2.5076969680910395E-7	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999847836049625	WITHOUT_CLASSIFICATION	1.521639503755436E-5	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9999666445771057	WITHOUT_CLASSIFICATION	3.33554228942585E-5	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999984481844296	WITHOUT_CLASSIFICATION	1.5518155704038897E-6	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999906538525677	WITHOUT_CLASSIFICATION	9.346147432268669E-6	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999985610779472	WITHOUT_CLASSIFICATION	1.4389220529012783E-6	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999999990106698	WITHOUT_CLASSIFICATION	9.893301125644409E-10	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9999982910431093	WITHOUT_CLASSIFICATION	1.7089568907795735E-6	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9999983487220532	WITHOUT_CLASSIFICATION	1.6512779467961705E-6	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9999996947430384	WITHOUT_CLASSIFICATION	3.0525696164831686E-7	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.999997638574705	WITHOUT_CLASSIFICATION	2.3614252949000106E-6	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999869001750521	WITHOUT_CLASSIFICATION	1.3099824947879655E-5	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999869001750521	WITHOUT_CLASSIFICATION	1.3099824947879655E-5	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999999196916662	WITHOUT_CLASSIFICATION	8.030833385876468E-8	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999989216825652	WITHOUT_CLASSIFICATION	1.0783174347502421E-6	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999998231152575	WITHOUT_CLASSIFICATION	1.7688474246497329E-7	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999989815693607	WITHOUT_CLASSIFICATION	1.018430639234291E-6	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999997158236138	WITHOUT_CLASSIFICATION	2.8417638612598817E-7	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999997105368285	WITHOUT_CLASSIFICATION	2.8946317150297945E-7	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999173741683132	WITHOUT_CLASSIFICATION	8.26258316868955E-5	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999996357297491	WITHOUT_CLASSIFICATION	3.6427025078016126E-7	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999990123758337	WITHOUT_CLASSIFICATION	9.876241663446876E-7	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999997086296818	WITHOUT_CLASSIFICATION	2.9137031826178563E-7	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999999430730636	WITHOUT_CLASSIFICATION	5.692693639454252E-8	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999996057861356	WITHOUT_CLASSIFICATION	3.9421386448296217E-7	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999852165212564	WITHOUT_CLASSIFICATION	1.4783478743580504E-5	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999398016103307	WITHOUT_CLASSIFICATION	6.019838966929586E-5	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9999763684530117	WITHOUT_CLASSIFICATION	2.3631546988366566E-5	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999687065480749	WITHOUT_CLASSIFICATION	3.1293451925051757E-5	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9999897204545297	WITHOUT_CLASSIFICATION	1.0279545470208113E-5	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9999963908863535	WITHOUT_CLASSIFICATION	3.609113646525303E-6	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.999987079658385	WITHOUT_CLASSIFICATION	1.2920341615022218E-5	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9999544976920813	WITHOUT_CLASSIFICATION	4.5502307918746266E-5	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9999841352643454	WITHOUT_CLASSIFICATION	1.586473565457669E-5	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.999995767548134	WITHOUT_CLASSIFICATION	4.23245186596468E-6	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999964780418743	WITHOUT_CLASSIFICATION	3.52195812568175E-6	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9999878858564961	WITHOUT_CLASSIFICATION	1.2114143503808992E-5	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999998306934208	WITHOUT_CLASSIFICATION	1.693065792923872E-7	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9999203361972182	WITHOUT_CLASSIFICATION	7.966380278190599E-5	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.999999999896471	WITHOUT_CLASSIFICATION	1.0352891287741609E-10	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999998122470484	WITHOUT_CLASSIFICATION	1.8775295151487536E-7	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.9999995070472029	WITHOUT_CLASSIFICATION	4.92952797197952E-7	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999979742511125	WITHOUT_CLASSIFICATION	2.0257488874522685E-6	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999984488360691	WITHOUT_CLASSIFICATION	1.5511639308159914E-6	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.999999231878252	WITHOUT_CLASSIFICATION	7.681217480583577E-7	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999977458767656	WITHOUT_CLASSIFICATION	2.2541232343926565E-6	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999745889614245	WITHOUT_CLASSIFICATION	2.5411038575508542E-5	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999992671064416	WITHOUT_CLASSIFICATION	7.328935583817041E-7	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999958691071336	WITHOUT_CLASSIFICATION	4.13089286649796E-6	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.999999515560049	WITHOUT_CLASSIFICATION	4.844399510513928E-7	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999987751656273	WITHOUT_CLASSIFICATION	1.2248343727212425E-6	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.999992952127919	WITHOUT_CLASSIFICATION	7.047872080913896E-6	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999954417619086	WITHOUT_CLASSIFICATION	4.558238091417548E-6	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999985210624388	WITHOUT_CLASSIFICATION	1.4789375612215054E-6	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998562152141887	WITHOUT_CLASSIFICATION	1.4378478581125425E-4	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.9999931810312033	WITHOUT_CLASSIFICATION	6.81896879673752E-6	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.999999970116973	WITHOUT_CLASSIFICATION	2.9883027081243717E-8	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999983001284265	WITHOUT_CLASSIFICATION	1.699871573526875E-6	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999984165662824	WITHOUT_CLASSIFICATION	1.583433717571872E-6	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.999998498461509	WITHOUT_CLASSIFICATION	1.5015384909427602E-6	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999999931072822	WITHOUT_CLASSIFICATION	6.892717773353996E-9	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999981051262269	WITHOUT_CLASSIFICATION	1.8948737730490607E-6	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999993908663127	WITHOUT_CLASSIFICATION	6.09133687259858E-7	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9998381968445057	WITHOUT_CLASSIFICATION	1.6180315549425202E-4	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999985535439488	WITHOUT_CLASSIFICATION	1.4464560510911714E-6	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999993786671696	WITHOUT_CLASSIFICATION	6.21332830297694E-7	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999999483310558	WITHOUT_CLASSIFICATION	5.1668944198299306E-8	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999852212646531	WITHOUT_CLASSIFICATION	1.4778735346847407E-5	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999988735372067	WITHOUT_CLASSIFICATION	1.126462793305163E-6	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999579935068535	WITHOUT_CLASSIFICATION	4.200649314638632E-5	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9996828141420576	WITHOUT_CLASSIFICATION	3.17185857942332E-4	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9984389818650098	WITHOUT_CLASSIFICATION	0.001561018134990124	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9997132377342359	WITHOUT_CLASSIFICATION	2.867622657640953E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9997132377342359	WITHOUT_CLASSIFICATION	2.867622657640953E-4	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999996875112139	WITHOUT_CLASSIFICATION	3.124887860763006E-7	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999891604349491	WITHOUT_CLASSIFICATION	1.0839565050806721E-5	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999998617734698	WITHOUT_CLASSIFICATION	1.382265302077948E-7	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999992480212238	WITHOUT_CLASSIFICATION	7.519787762128506E-7	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999982125944613	WITHOUT_CLASSIFICATION	1.7874055386300119E-6	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999984127233903	WITHOUT_CLASSIFICATION	1.5872766096452271E-6	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999799169129917	WITHOUT_CLASSIFICATION	2.00830870082634E-5	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9997251105165356	WITHOUT_CLASSIFICATION	2.748894834643804E-4	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999994949554398	WITHOUT_CLASSIFICATION	5.050445601581075E-7	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999975088320765	WITHOUT_CLASSIFICATION	2.491167923549719E-6	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999994371584674	WITHOUT_CLASSIFICATION	5.628415325074606E-7	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9999965599111398	WITHOUT_CLASSIFICATION	3.4400888603365462E-6	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999931995662726	WITHOUT_CLASSIFICATION	6.800433727386808E-6	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9992895386873173	WITHOUT_CLASSIFICATION	7.104613126826218E-4	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999571114796564	WITHOUT_CLASSIFICATION	4.2888520343669865E-5	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999981972038874	WITHOUT_CLASSIFICATION	1.8027961125578135E-6	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9999888418394315	WITHOUT_CLASSIFICATION	1.1158160568535567E-5	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.999999949511413	WITHOUT_CLASSIFICATION	5.048858702847712E-8	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.999994933864241	WITHOUT_CLASSIFICATION	5.066135758957846E-6	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999930670586314	WITHOUT_CLASSIFICATION	6.932941368518131E-6	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999997114338143	WITHOUT_CLASSIFICATION	2.8856618571103585E-7	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.999978425583944	WITHOUT_CLASSIFICATION	2.1574416056041928E-5	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9983848692848926	WITHOUT_CLASSIFICATION	0.0016151307151073414	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999803735203521	WITHOUT_CLASSIFICATION	1.962647964790804E-5	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999997612900996	WITHOUT_CLASSIFICATION	2.387099003130892E-7	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999665971817795	WITHOUT_CLASSIFICATION	3.340281822047399E-5	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999985998571164	WITHOUT_CLASSIFICATION	1.4001428835231807E-6	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999999987712103	WITHOUT_CLASSIFICATION	1.2287897802471302E-9	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999987915884011	WITHOUT_CLASSIFICATION	1.2084115989560688E-6	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999999989408891	WITHOUT_CLASSIFICATION	1.0591109050850746E-9	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999959223071387	WITHOUT_CLASSIFICATION	4.077692861208774E-6	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999987283427598	WITHOUT_CLASSIFICATION	1.2716572401699954E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999820268550693	WITHOUT_CLASSIFICATION	1.7973144930629525E-5	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999735139781161	WITHOUT_CLASSIFICATION	2.6486021883888263E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999820268550693	WITHOUT_CLASSIFICATION	1.7973144930629525E-5	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999990961441579	WITHOUT_CLASSIFICATION	9.038558420287768E-7	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.999999287122222	WITHOUT_CLASSIFICATION	7.128777780200934E-7	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.999999287122222	WITHOUT_CLASSIFICATION	7.128777780200934E-7	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.999999287122222	WITHOUT_CLASSIFICATION	7.128777780200934E-7	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999993027440631	WITHOUT_CLASSIFICATION	6.972559369247148E-7	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999993027440631	WITHOUT_CLASSIFICATION	6.972559369247148E-7	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999854095850257	WITHOUT_CLASSIFICATION	1.459041497421176E-5	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999999268054308	WITHOUT_CLASSIFICATION	7.319456910997655E-8	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999915441879331	WITHOUT_CLASSIFICATION	8.455812066832325E-6	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.999849386614139	WITHOUT_CLASSIFICATION	1.5061338586100083E-4	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999993805024259	WITHOUT_CLASSIFICATION	6.194975741575431E-7	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999759481501665	WITHOUT_CLASSIFICATION	2.4051849833412196E-5	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999913919267881	WITHOUT_CLASSIFICATION	8.608073211927863E-6	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999947628520975	WITHOUT_CLASSIFICATION	5.237147902374155E-6	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999991573731136	WITHOUT_CLASSIFICATION	8.426268863854268E-7	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999925561368629	WITHOUT_CLASSIFICATION	7.443863137064539E-6	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999914265709999	WITHOUT_CLASSIFICATION	8.573429000127518E-6	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999950600404334	WITHOUT_CLASSIFICATION	4.939959566631596E-6	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999966820743005	WITHOUT_CLASSIFICATION	3.3179256995167547E-6	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9999990095613069	WITHOUT_CLASSIFICATION	9.904386931375043E-7	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999995823831057	WITHOUT_CLASSIFICATION	4.1761689428000936E-7	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9999998288605239	WITHOUT_CLASSIFICATION	1.7113947605974787E-7	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999999145280749	WITHOUT_CLASSIFICATION	8.54719250060483E-8	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999973362221504	WITHOUT_CLASSIFICATION	2.663777849531344E-6	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999973362221504	WITHOUT_CLASSIFICATION	2.663777849531344E-6	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9999987115266121	WITHOUT_CLASSIFICATION	1.288473387947016E-6	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999959598276341	WITHOUT_CLASSIFICATION	4.040172365867535E-6	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999959598276341	WITHOUT_CLASSIFICATION	4.040172365867535E-6	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999987450343069	WITHOUT_CLASSIFICATION	1.2549656931637978E-6	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9999994893938373	WITHOUT_CLASSIFICATION	5.106061626552196E-7	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9997147710784308	WITHOUT_CLASSIFICATION	2.852289215693046E-4	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9999974249957377	WITHOUT_CLASSIFICATION	2.5750042621955705E-6	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9999971719250605	WITHOUT_CLASSIFICATION	2.8280749394162416E-6	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999998061485325	WITHOUT_CLASSIFICATION	1.938514675899911E-7	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9999997165855622	WITHOUT_CLASSIFICATION	2.834144377575972E-7	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999711013883076	WITHOUT_CLASSIFICATION	2.88986116924109E-5	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999967138350022	WITHOUT_CLASSIFICATION	3.2861649977438304E-6	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999680878743172	WITHOUT_CLASSIFICATION	3.191212568281315E-5	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999433489974459	WITHOUT_CLASSIFICATION	5.665100255413079E-5	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999639323406453	WITHOUT_CLASSIFICATION	3.606765935466457E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999923530404862	WITHOUT_CLASSIFICATION	7.646959513758037E-6	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999999046844414	WITHOUT_CLASSIFICATION	9.531555851559829E-8	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999947628520975	WITHOUT_CLASSIFICATION	5.237147902374155E-6	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999699099756004	WITHOUT_CLASSIFICATION	3.0090024399627333E-5	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999992256388063	WITHOUT_CLASSIFICATION	7.743611936682392E-7	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999681207281219	WITHOUT_CLASSIFICATION	3.1879271878034054E-5	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999681207281219	WITHOUT_CLASSIFICATION	3.1879271878034054E-5	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999997880612214	WITHOUT_CLASSIFICATION	2.1193877854652143E-7	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.999998282479692	WITHOUT_CLASSIFICATION	1.7175203080430238E-6	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999982616046252	WITHOUT_CLASSIFICATION	1.7383953748108387E-6	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9999978301647745	WITHOUT_CLASSIFICATION	2.169835225510031E-6	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.999999998900822	WITHOUT_CLASSIFICATION	1.0991779258861202E-9	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999980576715664	WITHOUT_CLASSIFICATION	1.9423284335839353E-6	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999870546231135	WITHOUT_CLASSIFICATION	1.2945376886485254E-5	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.999999366700841	WITHOUT_CLASSIFICATION	6.332991590788996E-7	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999962876566705	WITHOUT_CLASSIFICATION	3.712343329494666E-6	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999998537609567	WITHOUT_CLASSIFICATION	1.4623904330405903E-7	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999028574542926	WITHOUT_CLASSIFICATION	9.714254570731927E-5	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999848838026082	WITHOUT_CLASSIFICATION	1.5116197391870384E-5	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9642099907010029	WITHOUT_CLASSIFICATION	0.03579000929899701	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999971677081458	WITHOUT_CLASSIFICATION	2.8322918542300426E-6	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999999530980518	WITHOUT_CLASSIFICATION	4.69019482430958E-8	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999996693718606	WITHOUT_CLASSIFICATION	3.306281393557215E-7	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999703372625393	WITHOUT_CLASSIFICATION	2.966273746072868E-5	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999487944532097	WITHOUT_CLASSIFICATION	5.120554679027864E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.99999505416334	WITHOUT_CLASSIFICATION	4.9458366600066904E-6	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999998593480359	WITHOUT_CLASSIFICATION	1.4065196414681647E-7	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999983857391265	WITHOUT_CLASSIFICATION	1.6142608734764306E-6	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999907634832658	WITHOUT_CLASSIFICATION	9.236516734238807E-6	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999997482189342	WITHOUT_CLASSIFICATION	2.517810658633907E-7	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999998693906269	WITHOUT_CLASSIFICATION	1.306093730943013E-7	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999945067493203	WITHOUT_CLASSIFICATION	5.49325067973474E-6	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.99999642644517	WITHOUT_CLASSIFICATION	3.5735548300187806E-6	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999992814211593	WITHOUT_CLASSIFICATION	7.185788407593045E-7	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999955134175791	WITHOUT_CLASSIFICATION	4.4865824208194245E-6	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999999341706104	WITHOUT_CLASSIFICATION	6.582938969519212E-8	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999999853505852	WITHOUT_CLASSIFICATION	1.4649414691173497E-8	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999998083884569	WITHOUT_CLASSIFICATION	1.9161154298780465E-7	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9998340991492006	WITHOUT_CLASSIFICATION	1.659008507993384E-4	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.999995762740906	WITHOUT_CLASSIFICATION	4.2372590941091835E-6	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999997914666775	WITHOUT_CLASSIFICATION	2.085333224088368E-7	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999990783022746	WITHOUT_CLASSIFICATION	9.216977253227436E-7	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.9999954660719401	WITHOUT_CLASSIFICATION	4.533928059868547E-6	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999955134175791	WITHOUT_CLASSIFICATION	4.4865824208194245E-6	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999963501588	WITHOUT_CLASSIFICATION	3.649841118385093E-9	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999990783022746	WITHOUT_CLASSIFICATION	9.216977253227436E-7	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999867561713178	WITHOUT_CLASSIFICATION	1.3243828682202079E-5	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999990906335637	WITHOUT_CLASSIFICATION	9.093664363474019E-7	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999858835758888	WITHOUT_CLASSIFICATION	1.4116424111221153E-5	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999979041515927	WITHOUT_CLASSIFICATION	2.095848407389188E-6	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.999998896656884	WITHOUT_CLASSIFICATION	1.1033431160304894E-6	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999954998761117	WITHOUT_CLASSIFICATION	4.500123888337691E-6	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999954998761117	WITHOUT_CLASSIFICATION	4.500123888337691E-6	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999956622357955	WITHOUT_CLASSIFICATION	4.337764204493718E-6	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.999992483143664	WITHOUT_CLASSIFICATION	7.516856336068681E-6	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999081197273247	WITHOUT_CLASSIFICATION	9.188027267529277E-5	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999081197273247	WITHOUT_CLASSIFICATION	9.188027267529277E-5	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999991157611335	WITHOUT_CLASSIFICATION	8.842388664152341E-7	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9997151265172134	WITHOUT_CLASSIFICATION	2.8487348278661304E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999399168672972	WITHOUT_CLASSIFICATION	6.008313270274329E-5	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999399168672972	WITHOUT_CLASSIFICATION	6.008313270274329E-5	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999931631890172	WITHOUT_CLASSIFICATION	6.836810982784144E-6	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999957392506763	WITHOUT_CLASSIFICATION	4.260749323751251E-6	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999998732953496	WITHOUT_CLASSIFICATION	1.2670465041629215E-7	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999995525312209	WITHOUT_CLASSIFICATION	4.4746877905797076E-7	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999957585372263	WITHOUT_CLASSIFICATION	4.241462773728851E-6	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999027161829918	WITHOUT_CLASSIFICATION	9.728381700820885E-5	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999997486346587	WITHOUT_CLASSIFICATION	2.5136534131031734E-7	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999981137002173	WITHOUT_CLASSIFICATION	1.8862997827349829E-6	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999973522213286	WITHOUT_CLASSIFICATION	2.6477786714600402E-6	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999847355780959	WITHOUT_CLASSIFICATION	1.526442190421251E-5	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9999830021210082	WITHOUT_CLASSIFICATION	1.6997878991795305E-5	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999967008563119	WITHOUT_CLASSIFICATION	3.299143687974208E-6	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999999029805042	WITHOUT_CLASSIFICATION	9.701949568288071E-8	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999920643202859	WITHOUT_CLASSIFICATION	7.935679714111367E-6	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999425554237902	WITHOUT_CLASSIFICATION	5.744457620981014E-5	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999987514217225	WITHOUT_CLASSIFICATION	1.248578277460547E-6	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999988974440227	WITHOUT_CLASSIFICATION	1.1025559772282378E-6	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999983659045991	WITHOUT_CLASSIFICATION	1.634095400852385E-6	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999993259262894	WITHOUT_CLASSIFICATION	6.74073710528229E-7	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.7363829237510409	WITHOUT_CLASSIFICATION	0.2636170762489591	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999984771442929	WITHOUT_CLASSIFICATION	1.5228557070727472E-6	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999997829561446	WITHOUT_CLASSIFICATION	2.1704385538801568E-7	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.999999291830295	WITHOUT_CLASSIFICATION	7.08169705001003E-7	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999945628381164	WITHOUT_CLASSIFICATION	5.437161883676242E-6	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999964936029162	WITHOUT_CLASSIFICATION	3.506397083891272E-6	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999985427632256	WITHOUT_CLASSIFICATION	1.4572367743752028E-6	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999995901213706	WITHOUT_CLASSIFICATION	4.098786294922912E-7	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9999946289600239	WITHOUT_CLASSIFICATION	5.371039976139176E-6	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999992847786913	WITHOUT_CLASSIFICATION	7.152213087763672E-7	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999992847786913	WITHOUT_CLASSIFICATION	7.152213087763672E-7	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999999992194879	WITHOUT_CLASSIFICATION	7.805120740025459E-10	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.999999984956528	WITHOUT_CLASSIFICATION	1.5043471965281313E-8	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999997012576178	WITHOUT_CLASSIFICATION	2.987423821689148E-7	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999888213588561	WITHOUT_CLASSIFICATION	1.1178641143812602E-5	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.999994117538497	WITHOUT_CLASSIFICATION	5.882461503120081E-6	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9999973058448018	WITHOUT_CLASSIFICATION	2.694155198110134E-6	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999830357422361	WITHOUT_CLASSIFICATION	1.6964257763853463E-5	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998268036996	WITHOUT_CLASSIFICATION	1.7319630026946684E-7	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999999937258492	WITHOUT_CLASSIFICATION	6.274150775343573E-9	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999996022775912	WITHOUT_CLASSIFICATION	3.9772240872184104E-7	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999567704553516	WITHOUT_CLASSIFICATION	4.322954464840094E-5	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999988365109905	WITHOUT_CLASSIFICATION	1.1634890094953993E-6	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999953097136317	WITHOUT_CLASSIFICATION	4.690286368286067E-6	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999510366270558	WITHOUT_CLASSIFICATION	4.89633729443654E-5	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999999245137041	WITHOUT_CLASSIFICATION	7.548629588448013E-8	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999988364092396	WITHOUT_CLASSIFICATION	1.1635907603772218E-6	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999984946184131	WITHOUT_CLASSIFICATION	1.5053815869343997E-6	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999979857734778	WITHOUT_CLASSIFICATION	2.0142265222126726E-6	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9999966282153295	WITHOUT_CLASSIFICATION	3.3717846704266735E-6	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999997953492611	WITHOUT_CLASSIFICATION	2.0465073890295896E-7	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999991095039048	WITHOUT_CLASSIFICATION	8.904960953354586E-7	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999949727284148	WITHOUT_CLASSIFICATION	5.027271585282629E-6	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.999999774871936	WITHOUT_CLASSIFICATION	2.251280638686063E-7	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999995507687034	WITHOUT_CLASSIFICATION	4.492312965072159E-7	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999952224884319	WITHOUT_CLASSIFICATION	4.777511568035963E-6	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9997649342188665	WITHOUT_CLASSIFICATION	2.350657811334886E-4	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999999788253222	WITHOUT_CLASSIFICATION	2.1174677813460613E-8	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999984900258848	WITHOUT_CLASSIFICATION	1.5099741152103127E-6	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9999960949249059	WITHOUT_CLASSIFICATION	3.905075094070949E-6	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9999978729674488	WITHOUT_CLASSIFICATION	2.1270325512066427E-6	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999998616750835	WITHOUT_CLASSIFICATION	1.3832491643022964E-7	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999960909440171	WITHOUT_CLASSIFICATION	3.909055982944171E-6	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999926688106443	WITHOUT_CLASSIFICATION	7.331189355642449E-6	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9999984471054694	WITHOUT_CLASSIFICATION	1.5528945306999646E-6	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999990790703958	WITHOUT_CLASSIFICATION	9.20929604305628E-7	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999383921997803	WITHOUT_CLASSIFICATION	6.160780021968684E-5	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999885405027314	WITHOUT_CLASSIFICATION	1.1459497268471986E-5	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999905718976351	WITHOUT_CLASSIFICATION	9.428102365003915E-6	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999968828003327	WITHOUT_CLASSIFICATION	3.117199667211735E-6	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999999843435448	WITHOUT_CLASSIFICATION	1.5656455225224106E-8	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999995336218503	WITHOUT_CLASSIFICATION	4.6637814977739814E-7	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999936759603202	WITHOUT_CLASSIFICATION	6.324039679879765E-6	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999815767870003	WITHOUT_CLASSIFICATION	1.842321299969199E-5	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999815767870003	WITHOUT_CLASSIFICATION	1.842321299969199E-5	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999863056074643	WITHOUT_CLASSIFICATION	1.3694392535636916E-5	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999999773975623	WITHOUT_CLASSIFICATION	2.2602437647300616E-8	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.996972382777265	WITHOUT_CLASSIFICATION	0.003027617222734927	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999993259973292	WITHOUT_CLASSIFICATION	6.740026707301542E-7	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999979057563784	WITHOUT_CLASSIFICATION	2.094243621603736E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999740433352526	WITHOUT_CLASSIFICATION	2.5956664747309217E-5	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999196885573234	WITHOUT_CLASSIFICATION	8.031144267668358E-5	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.999940121372056	WITHOUT_CLASSIFICATION	5.98786279439803E-5	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999936642152497	WITHOUT_CLASSIFICATION	6.335784750315658E-6	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9999948849296634	WITHOUT_CLASSIFICATION	5.115070336604745E-6	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9999964952683305	WITHOUT_CLASSIFICATION	3.5047316696199117E-6	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.9998986925333104	WITHOUT_CLASSIFICATION	1.013074666896146E-4	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9999942403503055	WITHOUT_CLASSIFICATION	5.759649694534223E-6	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.999998413470715	WITHOUT_CLASSIFICATION	1.586529285039823E-6	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999766160679916	WITHOUT_CLASSIFICATION	2.338393200834939E-5	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9999878910159921	WITHOUT_CLASSIFICATION	1.2108984007914908E-5	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999955900866249	WITHOUT_CLASSIFICATION	4.409913375107374E-6	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9999632994689707	WITHOUT_CLASSIFICATION	3.6700531029322346E-5	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999629622888508	WITHOUT_CLASSIFICATION	3.703771114910147E-5	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9999727502458791	WITHOUT_CLASSIFICATION	2.724975412095625E-5	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999749997944823	WITHOUT_CLASSIFICATION	2.5000205517640017E-5	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999184276708476	WITHOUT_CLASSIFICATION	8.15723291524902E-5	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999948224892223	WITHOUT_CLASSIFICATION	5.177510777665801E-6	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999966434676504	WITHOUT_CLASSIFICATION	3.3565323495954615E-6	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999989940455366	WITHOUT_CLASSIFICATION	1.005954463318452E-6	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999900023144679	WITHOUT_CLASSIFICATION	9.997685532183667E-6	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999921355439486	WITHOUT_CLASSIFICATION	7.864456051300388E-6	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999869198550467	WITHOUT_CLASSIFICATION	1.308014495320598E-5	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999995305384448	WITHOUT_CLASSIFICATION	4.6946155508756277E-7	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9999831054123591	WITHOUT_CLASSIFICATION	1.6894587640817915E-5	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999993101176177	WITHOUT_CLASSIFICATION	6.898823822812755E-7	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999999162299321	WITHOUT_CLASSIFICATION	8.377006788338022E-8	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999900518157657	WITHOUT_CLASSIFICATION	9.948184234377605E-6	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9972950056368199	WITHOUT_CLASSIFICATION	0.002704994363180118	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999905718976351	WITHOUT_CLASSIFICATION	9.428102365003915E-6	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.999996968004115	WITHOUT_CLASSIFICATION	3.031995884896785E-6	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999998704162284	WITHOUT_CLASSIFICATION	1.2958377159346823E-7	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999998704162284	WITHOUT_CLASSIFICATION	1.2958377159346823E-7	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999998237310493	WITHOUT_CLASSIFICATION	1.762689507184147E-7	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999999441081338	WITHOUT_CLASSIFICATION	5.5891866333155964E-8	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999743077854674	WITHOUT_CLASSIFICATION	2.569221453263078E-5	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.9999533396056643	WITHOUT_CLASSIFICATION	4.666039433565642E-5	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9967597824110309	WITHOUT_CLASSIFICATION	0.00324021758896906	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9969310331818786	WITHOUT_CLASSIFICATION	0.0030689668181214428	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9972580501355817	WITHOUT_CLASSIFICATION	0.0027419498644184045	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9962404905340382	WITHOUT_CLASSIFICATION	0.003759509465961758	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9950134526831574	WITHOUT_CLASSIFICATION	0.00498654731684245	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9959345101781473	WITHOUT_CLASSIFICATION	0.004065489821852808	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9938940813701337	WITHOUT_CLASSIFICATION	0.0061059186298664	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9871748455114941	WITHOUT_CLASSIFICATION	0.012825154488505772	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9980087708940857	WITHOUT_CLASSIFICATION	0.0019912291059143643	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999993415318336	WITHOUT_CLASSIFICATION	6.584681663802629E-7	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999999957770008	WITHOUT_CLASSIFICATION	4.222999200567595E-9	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.999994141467096	WITHOUT_CLASSIFICATION	5.858532904037548E-6	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9969416256583842	WITHOUT_CLASSIFICATION	0.003058374341615818	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9898727865687053	WITHOUT_CLASSIFICATION	0.01012721343129474	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9963413133876591	WITHOUT_CLASSIFICATION	0.003658686612340946	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9970178388632811	WITHOUT_CLASSIFICATION	0.002982161136718961	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9963041690932051	WITHOUT_CLASSIFICATION	0.003695830906795067	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9941120732650628	WITHOUT_CLASSIFICATION	0.005887926734937172	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999984382096013	WITHOUT_CLASSIFICATION	1.5617903985927667E-6	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.999999583726698	WITHOUT_CLASSIFICATION	4.162733021174316E-7	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999999817470334	WITHOUT_CLASSIFICATION	1.8252966523275207E-8	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9980741735276855	WITHOUT_CLASSIFICATION	0.0019258264723145074	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999992516642113	WITHOUT_CLASSIFICATION	7.483357886452847E-7	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999976751696973	WITHOUT_CLASSIFICATION	2.324830302645927E-6	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999919676893996	WITHOUT_CLASSIFICATION	8.03231060045575E-6	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.999997901215501	WITHOUT_CLASSIFICATION	2.0987844989158074E-6	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9999999348786529	WITHOUT_CLASSIFICATION	6.512134715332041E-8	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999988035118822	WITHOUT_CLASSIFICATION	1.1964881177906874E-6	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9999996799762597	WITHOUT_CLASSIFICATION	3.20023740219294E-7	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999999907171044	WITHOUT_CLASSIFICATION	9.282895631254274E-9	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999932010720025	WITHOUT_CLASSIFICATION	6.798927997503938E-6	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999933616865356	WITHOUT_CLASSIFICATION	6.638313464296921E-6	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999995223813967	WITHOUT_CLASSIFICATION	4.776186032858526E-7	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9980741735276855	WITHOUT_CLASSIFICATION	0.0019258264723145074	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999992516642113	WITHOUT_CLASSIFICATION	7.483357886452847E-7	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999976751696973	WITHOUT_CLASSIFICATION	2.324830302645927E-6	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.999997901215501	WITHOUT_CLASSIFICATION	2.0987844989158074E-6	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999173637616935	WITHOUT_CLASSIFICATION	8.263623830644551E-5	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999996803515033	WITHOUT_CLASSIFICATION	3.196484967088583E-7	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.999975128165264	WITHOUT_CLASSIFICATION	2.4871834736022677E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999909004145024	WITHOUT_CLASSIFICATION	9.099585497651368E-6	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999932853362191	WITHOUT_CLASSIFICATION	6.7146637809056E-6	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.999999965448032	WITHOUT_CLASSIFICATION	3.4551967880613214E-8	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999996724846327	WITHOUT_CLASSIFICATION	3.2751536727275693E-7	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999980308234524	WITHOUT_CLASSIFICATION	1.9691765475716654E-6	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999974466150483	WITHOUT_CLASSIFICATION	2.5533849517016445E-6	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999864392771574	WITHOUT_CLASSIFICATION	1.356072284270954E-5	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999988671137591	WITHOUT_CLASSIFICATION	1.132886240904628E-6	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999931133749362	WITHOUT_CLASSIFICATION	6.8866250637672545E-6	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999997347888447	WITHOUT_CLASSIFICATION	2.6521115525245037E-7	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999992159296602	WITHOUT_CLASSIFICATION	7.840703397949326E-7	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9999943406017542	WITHOUT_CLASSIFICATION	5.65939824586016E-6	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9999806596178423	WITHOUT_CLASSIFICATION	1.9340382157713906E-5	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999997814861321	WITHOUT_CLASSIFICATION	2.1851386797831542E-7	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9998884220844885	WITHOUT_CLASSIFICATION	1.1157791551149632E-4	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999997136082488	WITHOUT_CLASSIFICATION	2.863917512410501E-7	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999995223813967	WITHOUT_CLASSIFICATION	4.776186032858526E-7	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999996803515033	WITHOUT_CLASSIFICATION	3.196484967088583E-7	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.999975128165264	WITHOUT_CLASSIFICATION	2.4871834736022677E-5	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999932853362191	WITHOUT_CLASSIFICATION	6.7146637809056E-6	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.999999965448032	WITHOUT_CLASSIFICATION	3.4551967880613214E-8	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999996724846327	WITHOUT_CLASSIFICATION	3.2751536727275693E-7	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999980308234524	WITHOUT_CLASSIFICATION	1.9691765475716654E-6	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999985728411623	WITHOUT_CLASSIFICATION	1.4271588377248304E-6	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999990738299127	WITHOUT_CLASSIFICATION	9.261700873068503E-7	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999996143170752	WITHOUT_CLASSIFICATION	3.8568292483288995E-7	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999448552658	WITHOUT_CLASSIFICATION	5.514473413027646E-8	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999963513640237	WITHOUT_CLASSIFICATION	3.6486359763050506E-6	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999963513640237	WITHOUT_CLASSIFICATION	3.6486359763050506E-6	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9999999287555796	WITHOUT_CLASSIFICATION	7.124442033248431E-8	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999842758649867	WITHOUT_CLASSIFICATION	1.5724135013305607E-5	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.999998144094546	WITHOUT_CLASSIFICATION	1.8559054539575526E-6	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999962049146883	WITHOUT_CLASSIFICATION	3.79508531164167E-6	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999879068435642	WITHOUT_CLASSIFICATION	1.2093156435690071E-5	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999688449012574	WITHOUT_CLASSIFICATION	3.115509874265476E-5	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.999998616246358	WITHOUT_CLASSIFICATION	1.3837536419252891E-6	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.99999812137908	WITHOUT_CLASSIFICATION	1.8786209200712128E-6	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999995726423718	WITHOUT_CLASSIFICATION	4.273576281550771E-7	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999203153259584	WITHOUT_CLASSIFICATION	7.968467404164733E-5	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9998420161800866	WITHOUT_CLASSIFICATION	1.5798381991331007E-4	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9997119025445637	WITHOUT_CLASSIFICATION	2.880974554363049E-4	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999869569536376	WITHOUT_CLASSIFICATION	1.3043046362468335E-5	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999961642161388	WITHOUT_CLASSIFICATION	3.8357838611984035E-6	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999892444464198	WITHOUT_CLASSIFICATION	1.0755553580222525E-5	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.999993563235207	WITHOUT_CLASSIFICATION	6.436764792900827E-6	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9999929275011717	WITHOUT_CLASSIFICATION	7.0724988283088604E-6	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999951332244552	WITHOUT_CLASSIFICATION	4.8667755447544945E-6	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999961996102538	WITHOUT_CLASSIFICATION	3.800389746299187E-6	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999388754876806	WITHOUT_CLASSIFICATION	6.112451231941552E-5	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.5904682377255411	WITHOUT_CLASSIFICATION	0.40953176227445887	IMPLEMENTATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999992957451278	WITHOUT_CLASSIFICATION	7.042548721320189E-7	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999998524435311	WITHOUT_CLASSIFICATION	1.4755646898762764E-7	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.919332618588563	IMPLEMENTATION	0.080667381411437	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999911570073342	WITHOUT_CLASSIFICATION	8.842992665824554E-6	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999815077475055	WITHOUT_CLASSIFICATION	1.849225249453716E-5	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999736751034	WITHOUT_CLASSIFICATION	2.6324896556156548E-8	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999998639610108	WITHOUT_CLASSIFICATION	1.3603898918781302E-7	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9999944542622562	WITHOUT_CLASSIFICATION	5.545737743776005E-6	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999911570073342	WITHOUT_CLASSIFICATION	8.842992665824554E-6	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999815077475055	WITHOUT_CLASSIFICATION	1.849225249453716E-5	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999961642161388	WITHOUT_CLASSIFICATION	3.8357838611984035E-6	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999884007743071	WITHOUT_CLASSIFICATION	1.1599225692909142E-5	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999978134594024	WITHOUT_CLASSIFICATION	2.186540597642409E-6	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999931517035145	WITHOUT_CLASSIFICATION	6.848296485346985E-6	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999989882144292	WITHOUT_CLASSIFICATION	1.0117855707643394E-6	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999956022621952	WITHOUT_CLASSIFICATION	4.3977378048320995E-6	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999644114377148	WITHOUT_CLASSIFICATION	3.5588562285306436E-5	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9998150014041306	WITHOUT_CLASSIFICATION	1.8499859586934377E-4	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999526827946038	WITHOUT_CLASSIFICATION	4.7317205396209373E-5	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9998578776398205	WITHOUT_CLASSIFICATION	1.4212236017953158E-4	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999999744892781	WITHOUT_CLASSIFICATION	2.551072186994616E-8	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999978550358753	WITHOUT_CLASSIFICATION	2.1449641246435003E-6	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9995515770132183	WITHOUT_CLASSIFICATION	4.484229867817685E-4	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999986660832209	WITHOUT_CLASSIFICATION	1.3339167791789734E-6	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999999962850122	WITHOUT_CLASSIFICATION	3.714987762513242E-9	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999999967416802	WITHOUT_CLASSIFICATION	3.2583198498104225E-9	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999963902254992	WITHOUT_CLASSIFICATION	3.6097745007171735E-6	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.999951956640971	WITHOUT_CLASSIFICATION	4.804335902902904E-5	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999829167271398	WITHOUT_CLASSIFICATION	1.708327286021086E-5	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9822860598809054	WITHOUT_CLASSIFICATION	0.017713940119094627	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999996474063788	WITHOUT_CLASSIFICATION	3.5259362125025966E-7	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.999997504087175	WITHOUT_CLASSIFICATION	2.4959128250301166E-6	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999894084247666	WITHOUT_CLASSIFICATION	1.0591575233342695E-5	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.999910354659156	WITHOUT_CLASSIFICATION	8.964534084394271E-5	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999972985508537	WITHOUT_CLASSIFICATION	2.7014491463936504E-6	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999999099119083	WITHOUT_CLASSIFICATION	9.008809162705439E-8	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999996068637212	WITHOUT_CLASSIFICATION	3.931362787543109E-7	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9999857901313004	WITHOUT_CLASSIFICATION	1.4209868699572317E-5	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999420501673936	WITHOUT_CLASSIFICATION	5.794983260640159E-5	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999896135728755	WITHOUT_CLASSIFICATION	1.0386427124482845E-5	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999999954384403	WITHOUT_CLASSIFICATION	4.5615597668348055E-9	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999831174819487	WITHOUT_CLASSIFICATION	1.6882518051289657E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9976461060529007	WITHOUT_CLASSIFICATION	0.0023538939470992264	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9976461060529007	WITHOUT_CLASSIFICATION	0.0023538939470992264	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999869569536376	WITHOUT_CLASSIFICATION	1.3043046362468335E-5	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999997754004191	WITHOUT_CLASSIFICATION	2.2459958097575633E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.99954345744968	WITHOUT_CLASSIFICATION	4.565425503200004E-4	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999978021818735	WITHOUT_CLASSIFICATION	2.197818126588538E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.999958601740197	WITHOUT_CLASSIFICATION	4.139825980306778E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.999958601740197	WITHOUT_CLASSIFICATION	4.139825980306778E-5	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999986283490431	WITHOUT_CLASSIFICATION	1.3716509569177413E-6	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999957234880534	WITHOUT_CLASSIFICATION	4.276511946545644E-6	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999836836360321	WITHOUT_CLASSIFICATION	1.631636396797093E-5	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999802879132709	WITHOUT_CLASSIFICATION	1.971208672910203E-5	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999998327723009	WITHOUT_CLASSIFICATION	1.6722769926127005E-7	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999999885345325	WITHOUT_CLASSIFICATION	1.1465467488388489E-8	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999999897445164	WITHOUT_CLASSIFICATION	1.0255483498594185E-8	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999640873327992	WITHOUT_CLASSIFICATION	3.591266720078057E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999998408764441	WITHOUT_CLASSIFICATION	1.591235559288792E-7	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999827514575388	WITHOUT_CLASSIFICATION	1.7248542461118185E-5	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999981619776886	WITHOUT_CLASSIFICATION	1.8380223113600048E-6	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999988285071932	WITHOUT_CLASSIFICATION	1.1714928068070952E-6	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999958449274486	WITHOUT_CLASSIFICATION	4.155072551364556E-6	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.999999887034624	WITHOUT_CLASSIFICATION	1.129653760696358E-7	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999993894661403	WITHOUT_CLASSIFICATION	6.10533859677193E-7	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.9999970486153452	WITHOUT_CLASSIFICATION	2.951384654847379E-6	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999974948028182	WITHOUT_CLASSIFICATION	2.505197181779552E-6	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999974948028182	WITHOUT_CLASSIFICATION	2.505197181779552E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999925336971658	WITHOUT_CLASSIFICATION	7.466302834207364E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999925336971658	WITHOUT_CLASSIFICATION	7.466302834207364E-6	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999997982032353	WITHOUT_CLASSIFICATION	2.017967646475263E-7	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999999655389133	WITHOUT_CLASSIFICATION	3.44610866997605E-8	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999999926213503	WITHOUT_CLASSIFICATION	7.378649784017751E-9	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9932458499825934	WITHOUT_CLASSIFICATION	0.006754150017406629	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999996240368523	WITHOUT_CLASSIFICATION	3.759631476607389E-7	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999933801519573	WITHOUT_CLASSIFICATION	6.619848042683048E-6	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999778019157306	WITHOUT_CLASSIFICATION	2.2198084269381505E-5	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999988285071932	WITHOUT_CLASSIFICATION	1.1714928068070952E-6	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999958449274486	WITHOUT_CLASSIFICATION	4.155072551364556E-6	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999993894661403	WITHOUT_CLASSIFICATION	6.10533859677193E-7	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999457349340326	WITHOUT_CLASSIFICATION	5.426506596741401E-5	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999911348542839	WITHOUT_CLASSIFICATION	8.86514571599532E-6	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999974738433812	WITHOUT_CLASSIFICATION	2.5261566188177303E-6	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.999959817162014	WITHOUT_CLASSIFICATION	4.018283798595881E-5	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999999594657654	WITHOUT_CLASSIFICATION	4.053423475597029E-8	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999999914125092	WITHOUT_CLASSIFICATION	8.587490835907628E-9	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999988634082075	WITHOUT_CLASSIFICATION	1.1365917925080014E-6	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.999990310746218	WITHOUT_CLASSIFICATION	9.689253781975727E-6	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999948496752562	WITHOUT_CLASSIFICATION	5.1503247437920945E-6	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999980441187	WITHOUT_CLASSIFICATION	1.955881262624596E-9	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999935394119924	WITHOUT_CLASSIFICATION	6.460588007640926E-6	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999989698260223	WITHOUT_CLASSIFICATION	1.0301739777391888E-6	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999986072385252	WITHOUT_CLASSIFICATION	1.3927614748283686E-6	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999996716937022	WITHOUT_CLASSIFICATION	3.283062977500134E-7	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9987065481971806	WITHOUT_CLASSIFICATION	0.0012934518028193918	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999997529901801	WITHOUT_CLASSIFICATION	2.4700981991867067E-7	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.999999893481842	WITHOUT_CLASSIFICATION	1.0651815800893516E-7	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9883565457477423	WITHOUT_CLASSIFICATION	0.01164345425225769	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999931881764672	WITHOUT_CLASSIFICATION	6.811823532772694E-6	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999999739623525	WITHOUT_CLASSIFICATION	2.603764744173857E-8	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999999791915106	WITHOUT_CLASSIFICATION	2.0808489263603026E-8	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999870353403153	WITHOUT_CLASSIFICATION	1.2964659684632488E-5	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999979775246	WITHOUT_CLASSIFICATION	2.022475400046806E-6	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999998587522589	WITHOUT_CLASSIFICATION	1.4124774109953845E-7	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.999711677712565	WITHOUT_CLASSIFICATION	2.8832228743493976E-4	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999986141183073	WITHOUT_CLASSIFICATION	1.3858816928153755E-6	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9998506079004916	WITHOUT_CLASSIFICATION	1.4939209950841654E-4	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999868028200949	WITHOUT_CLASSIFICATION	1.3197179905068701E-5	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999999968597321	WITHOUT_CLASSIFICATION	3.1402678540797285E-9	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999890604441306	WITHOUT_CLASSIFICATION	1.0939555869379531E-5	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999976197155372	WITHOUT_CLASSIFICATION	2.3802844626498937E-6	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999985346415015	WITHOUT_CLASSIFICATION	1.4653584985867238E-6	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.999997262761091	WITHOUT_CLASSIFICATION	2.7372389090175673E-6	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999940301490438	WITHOUT_CLASSIFICATION	5.969850956234271E-6	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999966135073136	WITHOUT_CLASSIFICATION	3.3864926864268843E-6	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999981417510356	WITHOUT_CLASSIFICATION	1.8582489643903772E-6	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999763169709495	WITHOUT_CLASSIFICATION	2.3683029050482523E-5	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999905855868326	WITHOUT_CLASSIFICATION	9.414413167349624E-6	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999992089432715	WITHOUT_CLASSIFICATION	7.910567285479904E-7	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999999505390866	WITHOUT_CLASSIFICATION	4.9460913387161195E-8	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999995156670789	WITHOUT_CLASSIFICATION	4.843329211649077E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.99954345744968	WITHOUT_CLASSIFICATION	4.565425503200004E-4	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999763169709495	WITHOUT_CLASSIFICATION	2.3683029050482523E-5	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999990267897857	WITHOUT_CLASSIFICATION	9.732102142846129E-7	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999962642306266	WITHOUT_CLASSIFICATION	3.7357693732992907E-6	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999631211457897	WITHOUT_CLASSIFICATION	3.687885421037477E-5	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999734862498466	WITHOUT_CLASSIFICATION	2.6513750153280817E-5	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999734862498466	WITHOUT_CLASSIFICATION	2.6513750153280817E-5	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9993578650198831	WITHOUT_CLASSIFICATION	6.421349801168589E-4	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999381855809404	WITHOUT_CLASSIFICATION	6.181441905965615E-5	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.999791372676134	WITHOUT_CLASSIFICATION	2.0862732386584267E-4	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999999906651313	WITHOUT_CLASSIFICATION	9.334868668129375E-9	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9963057030878117	WITHOUT_CLASSIFICATION	0.003694296912188331	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999728646378235	WITHOUT_CLASSIFICATION	2.713536217645025E-5	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999903850442132	WITHOUT_CLASSIFICATION	9.61495578675405E-6	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999924188603099	WITHOUT_CLASSIFICATION	7.58113969010909E-6	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.999999914343041	WITHOUT_CLASSIFICATION	8.565695890038618E-8	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.999999914343041	WITHOUT_CLASSIFICATION	8.565695890038618E-8	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999957420617004	WITHOUT_CLASSIFICATION	4.2579382995853485E-6	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999354041937979	WITHOUT_CLASSIFICATION	6.459580620210651E-5	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999989291116782	WITHOUT_CLASSIFICATION	1.070888321834819E-6	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9999988375124658	WITHOUT_CLASSIFICATION	1.1624875341810823E-6	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999992041573794	WITHOUT_CLASSIFICATION	7.958426206005378E-7	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999996375766014	WITHOUT_CLASSIFICATION	3.6242339867763057E-7	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999998844991533	WITHOUT_CLASSIFICATION	1.1550084659131343E-7	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999999950974463	WITHOUT_CLASSIFICATION	4.902553646795243E-9	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9999972437717061	WITHOUT_CLASSIFICATION	2.7562282940114425E-6	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999997762731982	WITHOUT_CLASSIFICATION	2.2372680173394745E-7	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999887688177701	WITHOUT_CLASSIFICATION	1.1231182229901877E-5	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999992159372709	WITHOUT_CLASSIFICATION	7.840627290525436E-7	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999344364838856	WITHOUT_CLASSIFICATION	6.556351611442559E-5	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999989235780945	WITHOUT_CLASSIFICATION	1.0764219055412612E-6	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999989235780945	WITHOUT_CLASSIFICATION	1.0764219055412612E-6	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999999741082887	WITHOUT_CLASSIFICATION	2.5891711382752052E-8	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999980308234524	WITHOUT_CLASSIFICATION	1.9691765475716654E-6	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999999605289521	WITHOUT_CLASSIFICATION	3.9471047993623104E-8	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999997815192276	WITHOUT_CLASSIFICATION	2.184807723534527E-7	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999969152458	WITHOUT_CLASSIFICATION	3.084754186676308E-9	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999980756464575	WITHOUT_CLASSIFICATION	1.9243535425298593E-6	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999960243805216	WITHOUT_CLASSIFICATION	3.975619478453609E-6	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999969031300129	WITHOUT_CLASSIFICATION	3.0968699871060693E-6	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999703527350957	WITHOUT_CLASSIFICATION	2.964726490429373E-5	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9999877138642054	WITHOUT_CLASSIFICATION	1.2286135794711644E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9998619291068566	WITHOUT_CLASSIFICATION	1.3807089314347667E-4	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999997331641335	WITHOUT_CLASSIFICATION	2.668358665451345E-7	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9993415915982231	WITHOUT_CLASSIFICATION	6.584084017768778E-4	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999999876837888	WITHOUT_CLASSIFICATION	1.2316211120923003E-8	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999993216428662	WITHOUT_CLASSIFICATION	6.783571337228401E-7	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999989982562311	WITHOUT_CLASSIFICATION	1.0017437689402384E-6	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999993236352638	WITHOUT_CLASSIFICATION	6.763647362606388E-7	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999913598722804	WITHOUT_CLASSIFICATION	8.640127719698252E-6	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.999999445702901	WITHOUT_CLASSIFICATION	5.542970989098847E-7	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9998663069516528	WITHOUT_CLASSIFICATION	1.3369304834727163E-4	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9999110700393682	WITHOUT_CLASSIFICATION	8.89299606317296E-5	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9999993366813894	WITHOUT_CLASSIFICATION	6.633186105778625E-7	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9992999085710986	WITHOUT_CLASSIFICATION	7.000914289013701E-4	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999835116870391	WITHOUT_CLASSIFICATION	1.6488312960845707E-5	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9915489451631635	IMPLEMENTATION	0.008451054836836442	WITHOUT_CLASSIFICATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999845597613972	WITHOUT_CLASSIFICATION	1.5440238602737402E-5	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9999991114647211	WITHOUT_CLASSIFICATION	8.885352788253214E-7	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.999989437185173	WITHOUT_CLASSIFICATION	1.056281482705494E-5	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9999936256775862	WITHOUT_CLASSIFICATION	6.374322413812297E-6	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.998306540373499	WITHOUT_CLASSIFICATION	0.0016934596265010039	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999954237730554	WITHOUT_CLASSIFICATION	4.576226944607092E-6	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.999998942113061	WITHOUT_CLASSIFICATION	1.0578869389518646E-6	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999987509188365	WITHOUT_CLASSIFICATION	1.2490811636175717E-6	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9996556377719032	WITHOUT_CLASSIFICATION	3.4436222809670734E-4	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999984588042506	WITHOUT_CLASSIFICATION	1.5411957494067627E-6	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999975390770635	WITHOUT_CLASSIFICATION	2.46092293642272E-6	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999923038039036	WITHOUT_CLASSIFICATION	7.696196096466732E-6	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999993708951426	WITHOUT_CLASSIFICATION	6.291048574505738E-7	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.999999901095072	WITHOUT_CLASSIFICATION	9.890492807806127E-8	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999990487853834	WITHOUT_CLASSIFICATION	9.512146166486236E-7	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.999980373432754	WITHOUT_CLASSIFICATION	1.962656724605413E-5	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9990339310362927	WITHOUT_CLASSIFICATION	9.660689637072968E-4	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999081606713515	WITHOUT_CLASSIFICATION	9.183932864850313E-5	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999952695528602	WITHOUT_CLASSIFICATION	4.730447139738309E-6	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9999941657448372	WITHOUT_CLASSIFICATION	5.83425516282069E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999666724090404	WITHOUT_CLASSIFICATION	3.3327590959733746E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.999998603983286	WITHOUT_CLASSIFICATION	1.3960167139425304E-6	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999995507784551	WITHOUT_CLASSIFICATION	4.4922154479416754E-7	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.999999580204347	WITHOUT_CLASSIFICATION	4.1979565308895243E-7	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999911570073342	WITHOUT_CLASSIFICATION	8.842992665824554E-6	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999911570073342	WITHOUT_CLASSIFICATION	8.842992665824554E-6	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999551351543987	WITHOUT_CLASSIFICATION	4.486484560131456E-5	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999986436731191	WITHOUT_CLASSIFICATION	1.3563268808910377E-6	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.999998925594992	WITHOUT_CLASSIFICATION	1.0744050079389823E-6	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999999939696216	WITHOUT_CLASSIFICATION	6.030378414549686E-9	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999981678460317	WITHOUT_CLASSIFICATION	1.8321539682930227E-6	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999999075919597	WITHOUT_CLASSIFICATION	9.240804025226384E-8	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999999880744592	WITHOUT_CLASSIFICATION	1.1925540855429346E-8	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.999999994740366	WITHOUT_CLASSIFICATION	5.259633999384115E-9	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999961028767	WITHOUT_CLASSIFICATION	3.897123294077609E-9	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999999094312363	WITHOUT_CLASSIFICATION	9.056876369878111E-8	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999989411373852	WITHOUT_CLASSIFICATION	1.058862614778421E-6	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999989411373852	WITHOUT_CLASSIFICATION	1.058862614778421E-6	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999989411373852	WITHOUT_CLASSIFICATION	1.058862614778421E-6	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999990261652963	WITHOUT_CLASSIFICATION	9.738347036374758E-7	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999999827768541	WITHOUT_CLASSIFICATION	1.722314585732553E-8	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9999882621150287	WITHOUT_CLASSIFICATION	1.17378849712946E-5	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999993254065488	WITHOUT_CLASSIFICATION	6.745934512590808E-7	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999993254065488	WITHOUT_CLASSIFICATION	6.745934512590808E-7	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999959877365907	WITHOUT_CLASSIFICATION	4.012263409356947E-6	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999960254540716	WITHOUT_CLASSIFICATION	3.97454592843298E-6	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999998646728299	WITHOUT_CLASSIFICATION	1.3532717020982876E-7	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999979885892591	WITHOUT_CLASSIFICATION	2.01141074095647E-6	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999900533660391	WITHOUT_CLASSIFICATION	9.946633960953492E-6	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9998919503476213	WITHOUT_CLASSIFICATION	1.080496523785859E-4	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999992507019048	WITHOUT_CLASSIFICATION	7.492980951879202E-7	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.999928108511723	WITHOUT_CLASSIFICATION	7.189148827705137E-5	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999999682846136	WITHOUT_CLASSIFICATION	3.171538643865645E-8	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999998820421566	WITHOUT_CLASSIFICATION	1.1795784336202435E-7	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999998820421566	WITHOUT_CLASSIFICATION	1.1795784336202435E-7	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999974073112073	WITHOUT_CLASSIFICATION	2.5926887926501767E-6	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999975022237119	WITHOUT_CLASSIFICATION	2.497776288228616E-6	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999981014358575	WITHOUT_CLASSIFICATION	1.8985641424458316E-6	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.999998832966214	WITHOUT_CLASSIFICATION	1.1670337861010914E-6	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999996168828174	WITHOUT_CLASSIFICATION	3.8311718264601387E-7	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999919791609178	WITHOUT_CLASSIFICATION	8.020839082231486E-6	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.999991994899891	WITHOUT_CLASSIFICATION	8.005100108976151E-6	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999422588634942	WITHOUT_CLASSIFICATION	5.7741136505845664E-5	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999981424541685	WITHOUT_CLASSIFICATION	1.8575458314756993E-6	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9999972255823034	WITHOUT_CLASSIFICATION	2.7744176965679905E-6	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9998635776885504	WITHOUT_CLASSIFICATION	1.3642231144959035E-4	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999967579157641	WITHOUT_CLASSIFICATION	3.2420842358433504E-6	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9999983603619731	WITHOUT_CLASSIFICATION	1.639638026814457E-6	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9998590940222395	WITHOUT_CLASSIFICATION	1.4090597776054886E-4	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9940146183484743	WITHOUT_CLASSIFICATION	0.005985381651525737	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9998292666132355	WITHOUT_CLASSIFICATION	1.7073338676444733E-4	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999896736250256	WITHOUT_CLASSIFICATION	1.0326374974366874E-5	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999932728084049	WITHOUT_CLASSIFICATION	6.727191595154945E-6	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999992418425449	WITHOUT_CLASSIFICATION	7.581574551298463E-7	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999997304448206	WITHOUT_CLASSIFICATION	2.695551793057585E-7	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.995773709939865	WITHOUT_CLASSIFICATION	0.004226290060134967	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.999970339319451	WITHOUT_CLASSIFICATION	2.9660680549035505E-5	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999987604377657	WITHOUT_CLASSIFICATION	1.239562234336195E-6	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999993245107777	WITHOUT_CLASSIFICATION	6.754892222995283E-7	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999957896039974	WITHOUT_CLASSIFICATION	4.210396002600751E-6	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999969319336147	WITHOUT_CLASSIFICATION	3.0680663852194165E-6	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.999993087982593	WITHOUT_CLASSIFICATION	6.912017407003762E-6	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999973246567291	WITHOUT_CLASSIFICATION	2.675343270824168E-6	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999994572891561	WITHOUT_CLASSIFICATION	5.427108439279477E-7	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999970897259883	WITHOUT_CLASSIFICATION	2.9102740117568855E-6	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999948873591794	WITHOUT_CLASSIFICATION	5.112640820642491E-6	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999936923194553	WITHOUT_CLASSIFICATION	6.307680544618112E-6	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999989917767613	WITHOUT_CLASSIFICATION	1.0082232386591271E-6	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999948873591794	WITHOUT_CLASSIFICATION	5.112640820642491E-6	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999769095640633	WITHOUT_CLASSIFICATION	2.3090435936695014E-5	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999982093010229	WITHOUT_CLASSIFICATION	1.790698977104738E-6	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999695716650812	WITHOUT_CLASSIFICATION	3.0428334918771215E-5	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999689989364969	WITHOUT_CLASSIFICATION	3.100106350309419E-5	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999991042548723	WITHOUT_CLASSIFICATION	8.95745127814274E-7	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999998743900073	WITHOUT_CLASSIFICATION	1.2560999274394985E-7	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999984832556312	WITHOUT_CLASSIFICATION	1.5167443687546545E-6	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999853124801715	WITHOUT_CLASSIFICATION	1.4687519828528272E-5	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999535048136573	WITHOUT_CLASSIFICATION	4.6495186342760254E-5	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999101483017767	WITHOUT_CLASSIFICATION	8.985169822327688E-5	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9998650192855629	WITHOUT_CLASSIFICATION	1.3498071443713381E-4	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999214966172175	WITHOUT_CLASSIFICATION	7.850338278246923E-5	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9998100783501767	WITHOUT_CLASSIFICATION	1.899216498233767E-4	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9997892927596121	WITHOUT_CLASSIFICATION	2.1070724038774354E-4	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999585580189901	WITHOUT_CLASSIFICATION	4.1441981009799956E-5	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999598361982697	WITHOUT_CLASSIFICATION	4.016380173019475E-5	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999529582006377	WITHOUT_CLASSIFICATION	4.704179936222498E-5	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999918690220058	WITHOUT_CLASSIFICATION	8.13097799430596E-6	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999660559225276	WITHOUT_CLASSIFICATION	3.39440774723667E-5	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9996311266882669	WITHOUT_CLASSIFICATION	3.688733117330989E-4	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999475093799804	WITHOUT_CLASSIFICATION	5.249062001945675E-5	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999917192837545	WITHOUT_CLASSIFICATION	8.280716245446146E-6	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999207971337551	WITHOUT_CLASSIFICATION	7.92028662449024E-5	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.999914548857651	WITHOUT_CLASSIFICATION	8.545114234905556E-5	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999799948162403	WITHOUT_CLASSIFICATION	2.000518375975257E-5	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999999701877775	WITHOUT_CLASSIFICATION	2.9812222511922315E-8	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999974547468792	WITHOUT_CLASSIFICATION	2.5452531208582593E-6	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999971384242845	WITHOUT_CLASSIFICATION	2.861575715468333E-6	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9999508389785273	WITHOUT_CLASSIFICATION	4.916102147259778E-5	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9999535557608066	WITHOUT_CLASSIFICATION	4.6444239193513084E-5	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9999983235644935	WITHOUT_CLASSIFICATION	1.6764355064799987E-6	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.999814090673195	WITHOUT_CLASSIFICATION	1.8590932680498742E-4	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9784437634562858	WITHOUT_CLASSIFICATION	0.021556236543714146	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999998341201831	WITHOUT_CLASSIFICATION	1.6587981688369195E-7	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999761673325187	WITHOUT_CLASSIFICATION	2.3832667481255758E-5	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9999986631311998	WITHOUT_CLASSIFICATION	1.3368688002659662E-6	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9999984490819952	WITHOUT_CLASSIFICATION	1.550918004760369E-6	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9999952223041259	WITHOUT_CLASSIFICATION	4.777695874173519E-6	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999861706204768	WITHOUT_CLASSIFICATION	1.3829379523209755E-5	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9999947415069432	WITHOUT_CLASSIFICATION	5.258493056781443E-6	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9999744541978605	WITHOUT_CLASSIFICATION	2.554580213961082E-5	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999948363955642	WITHOUT_CLASSIFICATION	5.163604435842987E-6	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9999525207417547	WITHOUT_CLASSIFICATION	4.747925824541523E-5	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9999989957111531	WITHOUT_CLASSIFICATION	1.0042888469144399E-6	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999978081280463	WITHOUT_CLASSIFICATION	2.1918719537077133E-6	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.999999401905833	WITHOUT_CLASSIFICATION	5.980941669419728E-7	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9999829078515251	WITHOUT_CLASSIFICATION	1.7092148474919332E-5	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999987728301706	WITHOUT_CLASSIFICATION	1.2271698294168895E-6	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999996607699	WITHOUT_CLASSIFICATION	3.392300999430468E-7	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.9999989832459345	WITHOUT_CLASSIFICATION	1.0167540654877695E-6	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.999994969730287	WITHOUT_CLASSIFICATION	5.030269712978494E-6	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999999768352289	WITHOUT_CLASSIFICATION	2.316477106466219E-8	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9998031865718834	WITHOUT_CLASSIFICATION	1.968134281167406E-4	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999996607699	WITHOUT_CLASSIFICATION	3.392300999430468E-7	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.5028117243166274	IMPLEMENTATION	0.49718827568337265	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.5028117243166274	IMPLEMENTATION	0.49718827568337265	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999965752196553	WITHOUT_CLASSIFICATION	3.4247803447651508E-6	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.999999734206655	WITHOUT_CLASSIFICATION	2.6579334501048755E-7	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999997519894406	WITHOUT_CLASSIFICATION	2.480105594239311E-7	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999998193602435	WITHOUT_CLASSIFICATION	1.8063975638206016E-7	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999995443699999	WITHOUT_CLASSIFICATION	4.5563000007991116E-7	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999960860801279	WITHOUT_CLASSIFICATION	3.913919872119046E-6	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999981119308312	WITHOUT_CLASSIFICATION	1.8880691687809535E-6	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9998934189641147	IMPLEMENTATION	1.0658103588527965E-4	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.999994139725445	WITHOUT_CLASSIFICATION	5.860274554929914E-6	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999968747282706	WITHOUT_CLASSIFICATION	3.1252717293753535E-6	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999999999866042	WITHOUT_CLASSIFICATION	1.3395766324340503E-11	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.999999431853768	WITHOUT_CLASSIFICATION	5.681462318951561E-7	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999941673764862	WITHOUT_CLASSIFICATION	5.832623513829345E-6	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999988467249338	WITHOUT_CLASSIFICATION	1.1532750661530944E-6	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999988548712898	WITHOUT_CLASSIFICATION	1.1451287101733769E-6	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999989967142769	WITHOUT_CLASSIFICATION	1.003285723101114E-6	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999999159922619	WITHOUT_CLASSIFICATION	8.400773800384109E-8	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999882229374162	WITHOUT_CLASSIFICATION	1.1777062583689444E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999882229374162	WITHOUT_CLASSIFICATION	1.1777062583689444E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999882229374162	WITHOUT_CLASSIFICATION	1.1777062583689444E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999882229374162	WITHOUT_CLASSIFICATION	1.1777062583689444E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999882229374162	WITHOUT_CLASSIFICATION	1.1777062583689444E-5	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9999945340995426	WITHOUT_CLASSIFICATION	5.465900457343223E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999978927837938	WITHOUT_CLASSIFICATION	2.1072162062497265E-6	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999929798134118	WITHOUT_CLASSIFICATION	7.020186588112985E-6	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999215230323	WITHOUT_CLASSIFICATION	7.847696769623E-8	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999882097591601	WITHOUT_CLASSIFICATION	1.1790240839817877E-5	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999457750757	WITHOUT_CLASSIFICATION	5.422492433518204E-8	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999887907032591	WITHOUT_CLASSIFICATION	1.1209296740822367E-5	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.99999866342522	WITHOUT_CLASSIFICATION	1.3365747799813897E-6	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999934091773957	WITHOUT_CLASSIFICATION	6.590822604325528E-6	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9999958985188309	WITHOUT_CLASSIFICATION	4.10148116919201E-6	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9999952799701677	WITHOUT_CLASSIFICATION	4.720029832360947E-6	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.999995596596201	WITHOUT_CLASSIFICATION	4.403403799042149E-6	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9999949045411316	WITHOUT_CLASSIFICATION	5.095458868454745E-6	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9999954186115678	WITHOUT_CLASSIFICATION	4.581388432161219E-6	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9999948073107121	WITHOUT_CLASSIFICATION	5.192689287893364E-6	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9999944214066309	WITHOUT_CLASSIFICATION	5.578593369122098E-6	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.999993565647587	WITHOUT_CLASSIFICATION	6.434352413056533E-6	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9999955197816712	WITHOUT_CLASSIFICATION	4.480218328764629E-6	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9999941026033975	WITHOUT_CLASSIFICATION	5.897396602540563E-6	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999956067847899	WITHOUT_CLASSIFICATION	4.3932152101555166E-6	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9999942200511157	WITHOUT_CLASSIFICATION	5.779948884307694E-6	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9999933049079801	WITHOUT_CLASSIFICATION	6.695092019958101E-6	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999945671935351	WITHOUT_CLASSIFICATION	5.432806464944599E-6	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9999937492924239	WITHOUT_CLASSIFICATION	6.250707576155562E-6	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999946305688902	WITHOUT_CLASSIFICATION	5.369431109894906E-6	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9999959084839756	WITHOUT_CLASSIFICATION	4.091516024475614E-6	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9999956665744374	WITHOUT_CLASSIFICATION	4.333425562558409E-6	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9999956219701004	WITHOUT_CLASSIFICATION	4.378029899568459E-6	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999955838849048	WITHOUT_CLASSIFICATION	4.4161150951667725E-6	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999970638171629	WITHOUT_CLASSIFICATION	2.936182837136873E-6	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999951703830644	WITHOUT_CLASSIFICATION	4.829616935595714E-6	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9999949327506608	WITHOUT_CLASSIFICATION	5.06724933919775E-6	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9999947197734682	WITHOUT_CLASSIFICATION	5.280226531748193E-6	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9999942221111301	WITHOUT_CLASSIFICATION	5.777888869807444E-6	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9999956841075149	WITHOUT_CLASSIFICATION	4.315892485079748E-6	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9999945414199592	WITHOUT_CLASSIFICATION	5.458580040786832E-6	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9999944509704621	WITHOUT_CLASSIFICATION	5.549029537803797E-6	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9999942722491232	WITHOUT_CLASSIFICATION	5.727750876848483E-6	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.9999965236641806	WITHOUT_CLASSIFICATION	3.4763358194991016E-6	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9999943246554073	WITHOUT_CLASSIFICATION	5.675344592712291E-6	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9999945651877127	WITHOUT_CLASSIFICATION	5.434812287363083E-6	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.999994596228818	WITHOUT_CLASSIFICATION	5.403771181979068E-6	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9999952401541455	WITHOUT_CLASSIFICATION	4.75984585443403E-6	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9999944971695574	WITHOUT_CLASSIFICATION	5.502830442593515E-6	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9999967633495267	WITHOUT_CLASSIFICATION	3.2366504732026256E-6	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9999961926891322	WITHOUT_CLASSIFICATION	3.80731086789837E-6	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9999953472866329	WITHOUT_CLASSIFICATION	4.65271336710877E-6	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9999971050956891	WITHOUT_CLASSIFICATION	2.8949043109709477E-6	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9999951631573478	WITHOUT_CLASSIFICATION	4.836842652074238E-6	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9999945367100984	WITHOUT_CLASSIFICATION	5.463289901561732E-6	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999929798134118	WITHOUT_CLASSIFICATION	7.020186588112985E-6	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999939939059171	WITHOUT_CLASSIFICATION	6.006094082857419E-6	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.99999646886655	WITHOUT_CLASSIFICATION	3.5311334498842504E-6	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999946311101594	WITHOUT_CLASSIFICATION	5.368889840631982E-6	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999941251729946	WITHOUT_CLASSIFICATION	5.874827005514996E-6	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9999934906538515	WITHOUT_CLASSIFICATION	6.509346148501595E-6	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9999935540132219	WITHOUT_CLASSIFICATION	6.445986778074459E-6	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9999941798502897	WITHOUT_CLASSIFICATION	5.820149710212418E-6	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999936465466803	WITHOUT_CLASSIFICATION	6.353453319650301E-6	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9999936753755662	WITHOUT_CLASSIFICATION	6.324624433740773E-6	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9999935142503994	WITHOUT_CLASSIFICATION	6.4857496006244885E-6	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9999937757347644	WITHOUT_CLASSIFICATION	6.224265235565593E-6	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.999993603595058	WITHOUT_CLASSIFICATION	6.396404941997317E-6	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.9999937192788334	WITHOUT_CLASSIFICATION	6.280721166619594E-6	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9999958502151928	WITHOUT_CLASSIFICATION	4.1497848072646335E-6	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9999949291404574	WITHOUT_CLASSIFICATION	5.070859542552103E-6	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999967881730261	WITHOUT_CLASSIFICATION	3.2118269739216093E-6	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9999950049735836	WITHOUT_CLASSIFICATION	4.995026416351887E-6	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9999945840103308	WITHOUT_CLASSIFICATION	5.415989669195959E-6	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9999944897273346	WITHOUT_CLASSIFICATION	5.51027266543234E-6	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.999993931026555	WITHOUT_CLASSIFICATION	6.06897344500602E-6	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9999943791232947	WITHOUT_CLASSIFICATION	5.6208767053075385E-6	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9999937690164191	WITHOUT_CLASSIFICATION	6.230983580910764E-6	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9999935291542522	WITHOUT_CLASSIFICATION	6.470845747829615E-6	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9999958216074494	WITHOUT_CLASSIFICATION	4.178392550672291E-6	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9999929939548505	WITHOUT_CLASSIFICATION	7.006045149463747E-6	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9999958604776104	WITHOUT_CLASSIFICATION	4.13952238964819E-6	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.999994358999839	WITHOUT_CLASSIFICATION	5.641000160940047E-6	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999930989407247	WITHOUT_CLASSIFICATION	6.9010592752435275E-6	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.999996437006488	WITHOUT_CLASSIFICATION	3.562993512105882E-6	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9999944753292666	WITHOUT_CLASSIFICATION	5.52467073342648E-6	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9999964416837602	WITHOUT_CLASSIFICATION	3.558316239811492E-6	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9999941489565906	WITHOUT_CLASSIFICATION	5.851043409454571E-6	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9999942320754306	WITHOUT_CLASSIFICATION	5.7679245695236975E-6	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.999994629733935	WITHOUT_CLASSIFICATION	5.370266064887022E-6	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9999941744076155	WITHOUT_CLASSIFICATION	5.825592384495981E-6	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.999993805603963	WITHOUT_CLASSIFICATION	6.194396036972535E-6	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9999951817500432	WITHOUT_CLASSIFICATION	4.818249956787967E-6	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9999941971850347	WITHOUT_CLASSIFICATION	5.802814965323909E-6	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9999932209243174	WITHOUT_CLASSIFICATION	6.779075682559023E-6	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9999957509466253	WITHOUT_CLASSIFICATION	4.249053374698727E-6	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9999936558315252	WITHOUT_CLASSIFICATION	6.344168474783789E-6	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.999993106059116	WITHOUT_CLASSIFICATION	6.893940884067541E-6	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999942411800529	WITHOUT_CLASSIFICATION	5.758819947215305E-6	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.999993615691374	WITHOUT_CLASSIFICATION	6.384308625953653E-6	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999943549530087	WITHOUT_CLASSIFICATION	5.645046991324203E-6	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.999993312083359	WITHOUT_CLASSIFICATION	6.687916641069178E-6	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999946247576582	WITHOUT_CLASSIFICATION	5.375242341794208E-6	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999938134532381	WITHOUT_CLASSIFICATION	6.186546761788469E-6	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9999927720538861	WITHOUT_CLASSIFICATION	7.2279461137877E-6	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9999958323546663	WITHOUT_CLASSIFICATION	4.1676453337050555E-6	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9999954600720535	WITHOUT_CLASSIFICATION	4.5399279465365825E-6	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9999955109544658	WITHOUT_CLASSIFICATION	4.489045534272766E-6	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9999951349859163	WITHOUT_CLASSIFICATION	4.865014083717341E-6	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9999947645668988	WITHOUT_CLASSIFICATION	5.2354331012280895E-6	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9999956083582728	WITHOUT_CLASSIFICATION	4.391641727110667E-6	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9999949748906155	WITHOUT_CLASSIFICATION	5.02510938449125E-6	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9999962486439976	WITHOUT_CLASSIFICATION	3.751356002446213E-6	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9999937294888548	WITHOUT_CLASSIFICATION	6.270511145239697E-6	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9999938420809387	WITHOUT_CLASSIFICATION	6.157919061288607E-6	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999938529383735	WITHOUT_CLASSIFICATION	6.147061626441606E-6	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999948764539192	WITHOUT_CLASSIFICATION	5.123546080816659E-6	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999938983738497	WITHOUT_CLASSIFICATION	6.101626150359738E-6	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9999948435638195	WITHOUT_CLASSIFICATION	5.1564361804605435E-6	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9999937851708186	WITHOUT_CLASSIFICATION	6.214829181421584E-6	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9999948384518451	WITHOUT_CLASSIFICATION	5.1615481548995266E-6	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9999933172612228	WITHOUT_CLASSIFICATION	6.68273877717102E-6	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9999948148249217	WITHOUT_CLASSIFICATION	5.185175078345246E-6	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9999933183929308	WITHOUT_CLASSIFICATION	6.681607069171441E-6	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9999933594782683	WITHOUT_CLASSIFICATION	6.640521731786793E-6	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9999938086466124	WITHOUT_CLASSIFICATION	6.1913533876508924E-6	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999939745252778	WITHOUT_CLASSIFICATION	6.025474722102282E-6	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999935036664588	WITHOUT_CLASSIFICATION	6.49633354124207E-6	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999934495932387	WITHOUT_CLASSIFICATION	6.550406761316848E-6	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9999957463162937	WITHOUT_CLASSIFICATION	4.2536837062974E-6	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9999946745139531	WITHOUT_CLASSIFICATION	5.325486046955656E-6	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9999949037057825	WITHOUT_CLASSIFICATION	5.096294217507749E-6	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.999996403856743	WITHOUT_CLASSIFICATION	3.5961432570146544E-6	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9999947285464658	WITHOUT_CLASSIFICATION	5.2714535342740275E-6	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9999940986543905	WITHOUT_CLASSIFICATION	5.9013456094822424E-6	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999945872997738	WITHOUT_CLASSIFICATION	5.412700226348662E-6	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9999935448676717	WITHOUT_CLASSIFICATION	6.455132328363715E-6	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9999961921766828	WITHOUT_CLASSIFICATION	3.8078233171631584E-6	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999935950791393	WITHOUT_CLASSIFICATION	6.404920860671463E-6	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9999938565128107	WITHOUT_CLASSIFICATION	6.143487189345125E-6	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9999935398285034	WITHOUT_CLASSIFICATION	6.4601714966945335E-6	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999957554754685	WITHOUT_CLASSIFICATION	4.244524531460606E-6	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9999938513345776	WITHOUT_CLASSIFICATION	6.148665422351418E-6	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9999928830695503	WITHOUT_CLASSIFICATION	7.1169304496715246E-6	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999941637146351	WITHOUT_CLASSIFICATION	5.836285364949386E-6	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9999932835999822	WITHOUT_CLASSIFICATION	6.716400017813844E-6	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999958567519588	WITHOUT_CLASSIFICATION	4.1432480412142854E-6	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.999993957306931	WITHOUT_CLASSIFICATION	6.042693068963184E-6	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9999932639720327	WITHOUT_CLASSIFICATION	6.736027967369362E-6	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9999929847334207	WITHOUT_CLASSIFICATION	7.0152665793886505E-6	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.999997208103861	WITHOUT_CLASSIFICATION	2.791896139077192E-6	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999974269869426	WITHOUT_CLASSIFICATION	2.573013057383265E-6	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9999972139395886	WITHOUT_CLASSIFICATION	2.7860604114272247E-6	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9999973192984537	WITHOUT_CLASSIFICATION	2.6807015462242807E-6	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9999973839715185	WITHOUT_CLASSIFICATION	2.616028481468348E-6	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.999997655319637	WITHOUT_CLASSIFICATION	2.3446803629889888E-6	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9999975464765848	WITHOUT_CLASSIFICATION	2.4535234152361102E-6	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9999974658085193	WITHOUT_CLASSIFICATION	2.5341914806635735E-6	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9999973136455399	WITHOUT_CLASSIFICATION	2.686354460164361E-6	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9999972696591669	WITHOUT_CLASSIFICATION	2.7303408331269615E-6	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9999972666705729	WITHOUT_CLASSIFICATION	2.7333294271694247E-6	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9999972107042736	WITHOUT_CLASSIFICATION	2.789295726403309E-6	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9999971365859663	WITHOUT_CLASSIFICATION	2.8634140336837034E-6	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9999968977939392	WITHOUT_CLASSIFICATION	3.102206060914771E-6	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9999969181172194	WITHOUT_CLASSIFICATION	3.0818827806200183E-6	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9999974873687941	WITHOUT_CLASSIFICATION	2.512631205960769E-6	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9999971146892764	WITHOUT_CLASSIFICATION	2.8853107236117854E-6	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999968514754571	WITHOUT_CLASSIFICATION	3.1485245428913572E-6	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9999973576397893	WITHOUT_CLASSIFICATION	2.642360210763032E-6	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.999997167833105	WITHOUT_CLASSIFICATION	2.832166894950313E-6	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9999966223502437	WITHOUT_CLASSIFICATION	3.3776497562076753E-6	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999953076644069	WITHOUT_CLASSIFICATION	4.692335593067353E-6	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.9999956312684886	WITHOUT_CLASSIFICATION	4.36873151151289E-6	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9999956221259177	WITHOUT_CLASSIFICATION	4.3778740822071155E-6	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9999953062079187	WITHOUT_CLASSIFICATION	4.6937920813579665E-6	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999973478780936	WITHOUT_CLASSIFICATION	2.6521219065059023E-6	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999955767700361	WITHOUT_CLASSIFICATION	4.423229963883994E-6	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9999960497270188	WITHOUT_CLASSIFICATION	3.95027298108275E-6	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9999955170296619	WITHOUT_CLASSIFICATION	4.482970338140249E-6	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999974499096054	WITHOUT_CLASSIFICATION	2.5500903946155266E-6	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9999957834008885	WITHOUT_CLASSIFICATION	4.216599111595312E-6	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.99999603484099	WITHOUT_CLASSIFICATION	3.965159009982827E-6	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999957750309215	WITHOUT_CLASSIFICATION	4.224969078425154E-6	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9999958993820794	WITHOUT_CLASSIFICATION	4.100617920534661E-6	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9999958122718592	WITHOUT_CLASSIFICATION	4.18772814089692E-6	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9999956296069867	WITHOUT_CLASSIFICATION	4.370393013339927E-6	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9999953314848028	WITHOUT_CLASSIFICATION	4.668515197257961E-6	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9999956126238022	WITHOUT_CLASSIFICATION	4.3873761977680036E-6	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9999956512988905	WITHOUT_CLASSIFICATION	4.348701109576131E-6	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999977010403951	WITHOUT_CLASSIFICATION	2.2989596048364797E-6	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999971930961361	WITHOUT_CLASSIFICATION	2.8069038638281974E-6	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999977400840917	WITHOUT_CLASSIFICATION	2.2599159083233958E-6	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9999966145744609	WITHOUT_CLASSIFICATION	3.3854255390612466E-6	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9999972497037452	WITHOUT_CLASSIFICATION	2.7502962549270936E-6	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9999967448650543	WITHOUT_CLASSIFICATION	3.2551349456314207E-6	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.9999968923982676	WITHOUT_CLASSIFICATION	3.1076017323298664E-6	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999964248970098	WITHOUT_CLASSIFICATION	3.5751029901398544E-6	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999965610115608	WITHOUT_CLASSIFICATION	3.4389884391265824E-6	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9999965135810881	WITHOUT_CLASSIFICATION	3.486418911792931E-6	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9999962114543579	WITHOUT_CLASSIFICATION	3.788545642001007E-6	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.999997774564955	WITHOUT_CLASSIFICATION	2.2254350449517838E-6	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9999966483162942	WITHOUT_CLASSIFICATION	3.3516837057648577E-6	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9999977368005395	WITHOUT_CLASSIFICATION	2.2631994605369303E-6	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9999962413322794	WITHOUT_CLASSIFICATION	3.758667720586095E-6	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9999962100463506	WITHOUT_CLASSIFICATION	3.789953649271875E-6	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9999974721039381	WITHOUT_CLASSIFICATION	2.5278960618204297E-6	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9999970925298167	WITHOUT_CLASSIFICATION	2.907470183224853E-6	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9999956040392998	WITHOUT_CLASSIFICATION	4.395960700260643E-6	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.999995940464029	WITHOUT_CLASSIFICATION	4.059535971000837E-6	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999977588477198	WITHOUT_CLASSIFICATION	2.2411522802721546E-6	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9999964890551282	WITHOUT_CLASSIFICATION	3.510944871798701E-6	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9999959675187885	WITHOUT_CLASSIFICATION	4.032481211476364E-6	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999962470722725	WITHOUT_CLASSIFICATION	3.7529277274632508E-6	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9999966912012581	WITHOUT_CLASSIFICATION	3.308798741956287E-6	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.999996165288451	WITHOUT_CLASSIFICATION	3.834711548957543E-6	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9999961366512801	WITHOUT_CLASSIFICATION	3.863348719903119E-6	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9999958200410866	WITHOUT_CLASSIFICATION	4.179958913440664E-6	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.999995644190359	WITHOUT_CLASSIFICATION	4.355809640964246E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999963607251486	WITHOUT_CLASSIFICATION	3.63927485143334E-6	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9999961049255858	WITHOUT_CLASSIFICATION	3.895074414245456E-6	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9999961422595502	WITHOUT_CLASSIFICATION	3.85774044975313E-6	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.999996180029541	WITHOUT_CLASSIFICATION	3.8199704589170335E-6	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9999973839107362	WITHOUT_CLASSIFICATION	2.616089263649107E-6	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9999960190254717	WITHOUT_CLASSIFICATION	3.980974528203153E-6	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9999964646992557	WITHOUT_CLASSIFICATION	3.535300744239716E-6	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999961869592772	WITHOUT_CLASSIFICATION	3.813040722736231E-6	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.999996442223714	WITHOUT_CLASSIFICATION	3.5577762859473893E-6	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9999960990213868	WITHOUT_CLASSIFICATION	3.900978613217741E-6	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999973797860198	WITHOUT_CLASSIFICATION	2.620213980196745E-6	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.999995528349785	WITHOUT_CLASSIFICATION	4.471650215004391E-6	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9999974726482684	WITHOUT_CLASSIFICATION	2.527351731539242E-6	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9999961978352674	WITHOUT_CLASSIFICATION	3.8021647326211388E-6	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9999958596124415	WITHOUT_CLASSIFICATION	4.140387558428076E-6	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999957242896329	WITHOUT_CLASSIFICATION	4.275710367023072E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999974954851271	WITHOUT_CLASSIFICATION	2.5045148729125866E-6	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9999974611812472	WITHOUT_CLASSIFICATION	2.5388187527491545E-6	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999960516330494	WITHOUT_CLASSIFICATION	3.948366950573676E-6	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9999957701122648	WITHOUT_CLASSIFICATION	4.229887735164498E-6	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9999959462316655	WITHOUT_CLASSIFICATION	4.0537683344838995E-6	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9999973022652334	WITHOUT_CLASSIFICATION	2.6977347667087884E-6	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9999959148230351	WITHOUT_CLASSIFICATION	4.085176964915526E-6	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9999955449225268	WITHOUT_CLASSIFICATION	4.4550774730702926E-6	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.9999956117693578	WITHOUT_CLASSIFICATION	4.3882306421570075E-6	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9999957874644757	WITHOUT_CLASSIFICATION	4.212535524329143E-6	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9999955826385671	WITHOUT_CLASSIFICATION	4.4173614328845E-6	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9999960298022946	WITHOUT_CLASSIFICATION	3.97019770533527E-6	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9999953820354514	WITHOUT_CLASSIFICATION	4.617964548718989E-6	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9999956223254313	WITHOUT_CLASSIFICATION	4.377674568824636E-6	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.999995661360861	WITHOUT_CLASSIFICATION	4.338639138921891E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999958387769935	WITHOUT_CLASSIFICATION	4.161223006528863E-6	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9999972756984783	WITHOUT_CLASSIFICATION	2.7243015216542663E-6	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9999968992464897	WITHOUT_CLASSIFICATION	3.100753510372716E-6	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9999964942140461	WITHOUT_CLASSIFICATION	3.5057859537829385E-6	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9999960188165533	WITHOUT_CLASSIFICATION	3.981183446737126E-6	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999961235131322	WITHOUT_CLASSIFICATION	3.876486867825224E-6	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999964455688206	WITHOUT_CLASSIFICATION	3.5544311792957207E-6	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9999959010092714	WITHOUT_CLASSIFICATION	4.098990728615226E-6	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.999995914879457	WITHOUT_CLASSIFICATION	4.085120543035415E-6	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9999958017752775	WITHOUT_CLASSIFICATION	4.198224722514563E-6	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9999958168609688	WITHOUT_CLASSIFICATION	4.183139031231623E-6	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.999995629532717	WITHOUT_CLASSIFICATION	4.370467282978012E-6	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9999958653432361	WITHOUT_CLASSIFICATION	4.134656763804159E-6	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9999954020892331	WITHOUT_CLASSIFICATION	4.597910766877028E-6	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9999961929535759	WITHOUT_CLASSIFICATION	3.8070464241707826E-6	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9999952503526839	WITHOUT_CLASSIFICATION	4.749647316123104E-6	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.9999953555237585	WITHOUT_CLASSIFICATION	4.644476241491187E-6	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9999958704903708	WITHOUT_CLASSIFICATION	4.129509629250628E-6	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999971529999444	WITHOUT_CLASSIFICATION	2.8470000557063055E-6	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.999997009227698	WITHOUT_CLASSIFICATION	2.990772302117768E-6	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999964134932051	WITHOUT_CLASSIFICATION	3.586506794791034E-6	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9999957088474516	WITHOUT_CLASSIFICATION	4.291152548375215E-6	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999964966683316	WITHOUT_CLASSIFICATION	3.5033316683588744E-6	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9999962148012438	WITHOUT_CLASSIFICATION	3.7851987563253868E-6	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999958333189839	WITHOUT_CLASSIFICATION	4.166681016067566E-6	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9999955415472501	WITHOUT_CLASSIFICATION	4.458452749881276E-6	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9999954650147147	WITHOUT_CLASSIFICATION	4.534985285324075E-6	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999962541246561	WITHOUT_CLASSIFICATION	3.7458753438165843E-6	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9999958238320439	WITHOUT_CLASSIFICATION	4.1761679562149526E-6	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9999960890135599	WITHOUT_CLASSIFICATION	3.910986440098655E-6	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9999969334284808	WITHOUT_CLASSIFICATION	3.0665715192285834E-6	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.999995982714257	WITHOUT_CLASSIFICATION	4.017285742966392E-6	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999954535067406	WITHOUT_CLASSIFICATION	4.546493259429979E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999962110189748	WITHOUT_CLASSIFICATION	3.7889810250762916E-6	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.999983791325181	WITHOUT_CLASSIFICATION	1.6208674818909175E-5	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9994844097498139	WITHOUT_CLASSIFICATION	5.155902501861179E-4	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999851794109317	WITHOUT_CLASSIFICATION	1.4820589068312709E-5	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999853420661161	WITHOUT_CLASSIFICATION	1.465793388396566E-5	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999556459834088	WITHOUT_CLASSIFICATION	4.435401659119448E-5	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999962542218106	WITHOUT_CLASSIFICATION	3.745778189467817E-6	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9971874484015858	WITHOUT_CLASSIFICATION	0.002812551598414254	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9973929735914915	WITHOUT_CLASSIFICATION	0.002607026408508659	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999865120104598	WITHOUT_CLASSIFICATION	1.3487989540146956E-5	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9996314909224481	WITHOUT_CLASSIFICATION	3.685090775519492E-4	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9997555003355449	WITHOUT_CLASSIFICATION	2.4449966445499517E-4	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9999946877948881	WITHOUT_CLASSIFICATION	5.312205111976044E-6	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999993535777494	WITHOUT_CLASSIFICATION	6.464222506852888E-7	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9997390593361848	WITHOUT_CLASSIFICATION	2.6094066381525627E-4	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999910391915501	WITHOUT_CLASSIFICATION	8.960808449855606E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9990782684438152	WITHOUT_CLASSIFICATION	9.217315561847408E-4	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.999801175563145	WITHOUT_CLASSIFICATION	1.9882443685491726E-4	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999535793601196	WITHOUT_CLASSIFICATION	4.642063988029537E-5	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999695275635	WITHOUT_CLASSIFICATION	3.047243651779941E-8	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999997388164529	WITHOUT_CLASSIFICATION	2.6118354714527225E-7	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999983643904279	WITHOUT_CLASSIFICATION	1.6356095721882004E-6	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999968127870162	WITHOUT_CLASSIFICATION	3.187212983751395E-6	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999999277573621	WITHOUT_CLASSIFICATION	7.224263784343609E-8	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999993104024151	WITHOUT_CLASSIFICATION	6.89597584846538E-7	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999993104024151	WITHOUT_CLASSIFICATION	6.89597584846538E-7	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999999521197507	WITHOUT_CLASSIFICATION	4.78802493844368E-8	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9995398616293735	WITHOUT_CLASSIFICATION	4.601383706264093E-4	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999973558169734	WITHOUT_CLASSIFICATION	2.6441830266800587E-6	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999976970883836	WITHOUT_CLASSIFICATION	2.3029116163985813E-6	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999858245976824	WITHOUT_CLASSIFICATION	1.417540231762737E-5	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999999865347203	WITHOUT_CLASSIFICATION	1.3465279638159873E-8	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999949545363855	WITHOUT_CLASSIFICATION	5.045463614455089E-6	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999998990281901	WITHOUT_CLASSIFICATION	1.0097180981645835E-7	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999871939029135	WITHOUT_CLASSIFICATION	1.280609708655579E-5	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999844002967725	WITHOUT_CLASSIFICATION	1.5599703227595107E-5	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9999998468186407	WITHOUT_CLASSIFICATION	1.5318135917128762E-7	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999999616029956	WITHOUT_CLASSIFICATION	3.839700437124434E-8	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999999523298805	WITHOUT_CLASSIFICATION	4.7670119589896466E-8	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999931086308811	WITHOUT_CLASSIFICATION	6.891369118941824E-6	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999961239122785	WITHOUT_CLASSIFICATION	3.87608772152223E-6	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999923144765428	WITHOUT_CLASSIFICATION	7.685523457156166E-6	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999998669028257	WITHOUT_CLASSIFICATION	1.3309717431825832E-7	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9995599576282197	WITHOUT_CLASSIFICATION	4.4004237178031E-4	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999996858664901	WITHOUT_CLASSIFICATION	3.1413350990127666E-7	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999825445588542	WITHOUT_CLASSIFICATION	1.7455441145841084E-5	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999998170690241	WITHOUT_CLASSIFICATION	1.829309758661964E-7	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9999934185776721	WITHOUT_CLASSIFICATION	6.581422327802955E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9804669998090199	WITHOUT_CLASSIFICATION	0.019533000190980195	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9990656072285542	WITHOUT_CLASSIFICATION	9.34392771445811E-4	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9804669998090199	WITHOUT_CLASSIFICATION	0.019533000190980195	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.999679795384301	WITHOUT_CLASSIFICATION	3.202046156990468E-4	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9994868235503664	WITHOUT_CLASSIFICATION	5.131764496334971E-4	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9681934895187309	WITHOUT_CLASSIFICATION	0.03180651048126914	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9998514246045458	WITHOUT_CLASSIFICATION	1.4857539545425717E-4	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999694905383728	WITHOUT_CLASSIFICATION	3.0509461627152877E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999898274356576	WITHOUT_CLASSIFICATION	1.0172564342453896E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999898274356576	WITHOUT_CLASSIFICATION	1.0172564342453896E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999898274356576	WITHOUT_CLASSIFICATION	1.0172564342453896E-5	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999954847784521	WITHOUT_CLASSIFICATION	4.515221547873127E-6	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9998080803635663	WITHOUT_CLASSIFICATION	1.9191963643371625E-4	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999974971533536	WITHOUT_CLASSIFICATION	2.502846646302569E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999898716196266	WITHOUT_CLASSIFICATION	1.012838037337233E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999898716196266	WITHOUT_CLASSIFICATION	1.012838037337233E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999898716196266	WITHOUT_CLASSIFICATION	1.012838037337233E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999898716196266	WITHOUT_CLASSIFICATION	1.012838037337233E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999898716196266	WITHOUT_CLASSIFICATION	1.012838037337233E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999898716196266	WITHOUT_CLASSIFICATION	1.012838037337233E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999915585015984	WITHOUT_CLASSIFICATION	8.441498401678695E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999915585015984	WITHOUT_CLASSIFICATION	8.441498401678695E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999915585015984	WITHOUT_CLASSIFICATION	8.441498401678695E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999915585015984	WITHOUT_CLASSIFICATION	8.441498401678695E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999915585015984	WITHOUT_CLASSIFICATION	8.441498401678695E-6	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999803847168428	WITHOUT_CLASSIFICATION	1.9615283157217052E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999803847168428	WITHOUT_CLASSIFICATION	1.9615283157217052E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999803847168428	WITHOUT_CLASSIFICATION	1.9615283157217052E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999803847168428	WITHOUT_CLASSIFICATION	1.9615283157217052E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999803847168428	WITHOUT_CLASSIFICATION	1.9615283157217052E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999743148885467	WITHOUT_CLASSIFICATION	2.5685111453364623E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999743148885467	WITHOUT_CLASSIFICATION	2.5685111453364623E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999743148885467	WITHOUT_CLASSIFICATION	2.5685111453364623E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999743148885467	WITHOUT_CLASSIFICATION	2.5685111453364623E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999743148885467	WITHOUT_CLASSIFICATION	2.5685111453364623E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999743148885467	WITHOUT_CLASSIFICATION	2.5685111453364623E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999918496725457	WITHOUT_CLASSIFICATION	8.150327454263998E-6	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999918496725457	WITHOUT_CLASSIFICATION	8.150327454263998E-6	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999918496725457	WITHOUT_CLASSIFICATION	8.150327454263998E-6	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999918496725457	WITHOUT_CLASSIFICATION	8.150327454263998E-6	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999918496725457	WITHOUT_CLASSIFICATION	8.150327454263998E-6	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999862601623588	WITHOUT_CLASSIFICATION	1.3739837641234163E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999862601623588	WITHOUT_CLASSIFICATION	1.3739837641234163E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999862601623588	WITHOUT_CLASSIFICATION	1.3739837641234163E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999862601623588	WITHOUT_CLASSIFICATION	1.3739837641234163E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999862601623588	WITHOUT_CLASSIFICATION	1.3739837641234163E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999929798134118	WITHOUT_CLASSIFICATION	7.020186588112985E-6	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999929798134118	WITHOUT_CLASSIFICATION	7.020186588112985E-6	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999929798134118	WITHOUT_CLASSIFICATION	7.020186588112985E-6	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999929798134118	WITHOUT_CLASSIFICATION	7.020186588112985E-6	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999929798134118	WITHOUT_CLASSIFICATION	7.020186588112985E-6	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999215230323	WITHOUT_CLASSIFICATION	7.847696769623E-8	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999457750757	WITHOUT_CLASSIFICATION	5.422492433518204E-8	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999887907032591	WITHOUT_CLASSIFICATION	1.1209296740822367E-5	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.99999866342522	WITHOUT_CLASSIFICATION	1.3365747799813897E-6	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999934091773957	WITHOUT_CLASSIFICATION	6.590822604325528E-6	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999957392506763	WITHOUT_CLASSIFICATION	4.260749323751251E-6	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999956067847899	WITHOUT_CLASSIFICATION	4.3932152101555166E-6	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999946305688902	WITHOUT_CLASSIFICATION	5.369431109894906E-6	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999955838849048	WITHOUT_CLASSIFICATION	4.4161150951667725E-6	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999970638171629	WITHOUT_CLASSIFICATION	2.936182837136873E-6	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999956955326139	WITHOUT_CLASSIFICATION	4.30446738614676E-6	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999951703830644	WITHOUT_CLASSIFICATION	4.829616935595714E-6	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9999968808601088	WITHOUT_CLASSIFICATION	3.119139891236843E-6	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9999953014200418	WITHOUT_CLASSIFICATION	4.698579958271284E-6	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9999947033902092	WITHOUT_CLASSIFICATION	5.296609790852947E-6	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9999951236519669	WITHOUT_CLASSIFICATION	4.876348033228944E-6	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9999943155990363	WITHOUT_CLASSIFICATION	5.684400963725354E-6	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9999948340237149	WITHOUT_CLASSIFICATION	5.165976285104784E-6	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9999933060909997	WITHOUT_CLASSIFICATION	6.693909000308776E-6	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.999993345740599	WITHOUT_CLASSIFICATION	6.654259400988784E-6	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9999950611060712	WITHOUT_CLASSIFICATION	4.938893928837996E-6	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9999947715918575	WITHOUT_CLASSIFICATION	5.228408142625999E-6	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.99999434332125	WITHOUT_CLASSIFICATION	5.656678749945081E-6	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9999945758620291	WITHOUT_CLASSIFICATION	5.424137970957137E-6	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9999936708526787	WITHOUT_CLASSIFICATION	6.329147321359028E-6	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9999932220673501	WITHOUT_CLASSIFICATION	6.777932649987771E-6	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9999936388539401	WITHOUT_CLASSIFICATION	6.361146059918552E-6	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9999945151015548	WITHOUT_CLASSIFICATION	5.484898445232975E-6	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9999931775577251	WITHOUT_CLASSIFICATION	6.822442274919515E-6	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9999952399110155	WITHOUT_CLASSIFICATION	4.760088984471223E-6	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9999956834135396	WITHOUT_CLASSIFICATION	4.316586460322272E-6	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9999948520071392	WITHOUT_CLASSIFICATION	5.147992860770774E-6	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9999947141506241	WITHOUT_CLASSIFICATION	5.285849375829012E-6	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9999943969245155	WITHOUT_CLASSIFICATION	5.603075484487962E-6	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.999994736968929	WITHOUT_CLASSIFICATION	5.263031070903126E-6	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9999949071696748	WITHOUT_CLASSIFICATION	5.0928303252133485E-6	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9999944131145051	WITHOUT_CLASSIFICATION	5.5868854950011344E-6	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9999944365072111	WITHOUT_CLASSIFICATION	5.563492788968215E-6	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.9999945275784523	WITHOUT_CLASSIFICATION	5.472421547717567E-6	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9999957889024139	WITHOUT_CLASSIFICATION	4.211097586148388E-6	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9999945508943456	WITHOUT_CLASSIFICATION	5.449105654411462E-6	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9999942941820849	WITHOUT_CLASSIFICATION	5.705817915200874E-6	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9999940794201305	WITHOUT_CLASSIFICATION	5.920579869507533E-6	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9999960918531593	WITHOUT_CLASSIFICATION	3.908146840709133E-6	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9999957429950218	WITHOUT_CLASSIFICATION	4.257004978226001E-6	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.999995813613787	WITHOUT_CLASSIFICATION	4.186386212989197E-6	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9999960174064639	WITHOUT_CLASSIFICATION	3.982593536079945E-6	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.9999958582170706	WITHOUT_CLASSIFICATION	4.141782929371358E-6	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.9999946101086965	WITHOUT_CLASSIFICATION	5.3898913034847326E-6	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.99999646886655	WITHOUT_CLASSIFICATION	3.5311334498842504E-6	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999946311101594	WITHOUT_CLASSIFICATION	5.368889840631982E-6	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999941251729946	WITHOUT_CLASSIFICATION	5.874827005514996E-6	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999936465466803	WITHOUT_CLASSIFICATION	6.353453319650301E-6	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999967881730261	WITHOUT_CLASSIFICATION	3.2118269739216093E-6	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.999994358999839	WITHOUT_CLASSIFICATION	5.641000160940047E-6	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999946828785887	WITHOUT_CLASSIFICATION	5.317121411288692E-6	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999930989407247	WITHOUT_CLASSIFICATION	6.9010592752435275E-6	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999942411800529	WITHOUT_CLASSIFICATION	5.758819947215305E-6	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999943549530087	WITHOUT_CLASSIFICATION	5.645046991324203E-6	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999938592929225	WITHOUT_CLASSIFICATION	6.14070707747398E-6	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.999993312083359	WITHOUT_CLASSIFICATION	6.687916641069178E-6	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999946247576582	WITHOUT_CLASSIFICATION	5.375242341794208E-6	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9999948943818883	WITHOUT_CLASSIFICATION	5.105618111685764E-6	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9999940838090776	WITHOUT_CLASSIFICATION	5.916190922347275E-6	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.999994537381012	WITHOUT_CLASSIFICATION	5.462618988043937E-6	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9999936699225233	WITHOUT_CLASSIFICATION	6.330077476751459E-6	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9999950565887312	WITHOUT_CLASSIFICATION	4.943411268842432E-6	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9999949589761287	WITHOUT_CLASSIFICATION	5.0410238713078325E-6	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.9999941987348704	WITHOUT_CLASSIFICATION	5.801265129657593E-6	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9999935449327586	WITHOUT_CLASSIFICATION	6.455067241334085E-6	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9999938490501775	WITHOUT_CLASSIFICATION	6.150949822394601E-6	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9999939889786467	WITHOUT_CLASSIFICATION	6.011021353340512E-6	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9999947408006892	WITHOUT_CLASSIFICATION	5.259199310913807E-6	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9999936462244045	WITHOUT_CLASSIFICATION	6.353775595484137E-6	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9999939060432272	WITHOUT_CLASSIFICATION	6.093956772705245E-6	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9999948084326418	WITHOUT_CLASSIFICATION	5.191567358255074E-6	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9999940292837255	WITHOUT_CLASSIFICATION	5.970716274516292E-6	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9999961765621411	WITHOUT_CLASSIFICATION	3.823437858816893E-6	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.9999936090020433	WITHOUT_CLASSIFICATION	6.3909979566569605E-6	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9999937348236089	WITHOUT_CLASSIFICATION	6.265176391089896E-6	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9999940299162196	WITHOUT_CLASSIFICATION	5.97008378045694E-6	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9999933188927645	WITHOUT_CLASSIFICATION	6.681107235357337E-6	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9999946810194287	WITHOUT_CLASSIFICATION	5.318980571225608E-6	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9999930920506109	WITHOUT_CLASSIFICATION	6.907949389123931E-6	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9999936382528823	WITHOUT_CLASSIFICATION	6.361747117681271E-6	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9999943706989947	WITHOUT_CLASSIFICATION	5.629301005310299E-6	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9999933321612089	WITHOUT_CLASSIFICATION	6.6678387911336615E-6	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9999931248490227	WITHOUT_CLASSIFICATION	6.875150977279418E-6	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9999953146715658	WITHOUT_CLASSIFICATION	4.68532843425086E-6	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.999995457913733	WITHOUT_CLASSIFICATION	4.542086267020029E-6	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9999939733081916	WITHOUT_CLASSIFICATION	6.026691808384383E-6	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9999933531246662	WITHOUT_CLASSIFICATION	6.6468753338089385E-6	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9999941702120264	WITHOUT_CLASSIFICATION	5.829787973583456E-6	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9999930868778323	WITHOUT_CLASSIFICATION	6.913122167712196E-6	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9999965475775109	WITHOUT_CLASSIFICATION	3.4524224891670056E-6	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9999954231046506	WITHOUT_CLASSIFICATION	4.576895349301628E-6	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9999948104213131	WITHOUT_CLASSIFICATION	5.1895786869310555E-6	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9999947123291951	WITHOUT_CLASSIFICATION	5.287670804863197E-6	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999948764539192	WITHOUT_CLASSIFICATION	5.123546080816659E-6	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999944642301783	WITHOUT_CLASSIFICATION	5.535769821661023E-6	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999938983738497	WITHOUT_CLASSIFICATION	6.101626150359738E-6	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999939745252778	WITHOUT_CLASSIFICATION	6.025474722102282E-6	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999934495932387	WITHOUT_CLASSIFICATION	6.550406761316848E-6	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999945872997738	WITHOUT_CLASSIFICATION	5.412700226348662E-6	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999935950791393	WITHOUT_CLASSIFICATION	6.404920860671463E-6	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999957554754685	WITHOUT_CLASSIFICATION	4.244524531460606E-6	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999958567519588	WITHOUT_CLASSIFICATION	4.1432480412142854E-6	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999974269869426	WITHOUT_CLASSIFICATION	2.573013057383265E-6	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999972927995633	WITHOUT_CLASSIFICATION	2.7072004366731006E-6	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9999965251386242	WITHOUT_CLASSIFICATION	3.474861375698695E-6	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9999942850801417	WITHOUT_CLASSIFICATION	5.714919858300679E-6	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.999994367352986	WITHOUT_CLASSIFICATION	5.632647014061196E-6	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.9999948365166503	WITHOUT_CLASSIFICATION	5.163483349618298E-6	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9999953421192077	WITHOUT_CLASSIFICATION	4.657880792207702E-6	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9999934783330564	WITHOUT_CLASSIFICATION	6.521666943652525E-6	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9999959460634852	WITHOUT_CLASSIFICATION	4.053936514778812E-6	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9999939229179821	WITHOUT_CLASSIFICATION	6.077082018012394E-6	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9999933661895732	WITHOUT_CLASSIFICATION	6.633810426723482E-6	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.9999933962905752	WITHOUT_CLASSIFICATION	6.6037094248050644E-6	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9999938674395938	WITHOUT_CLASSIFICATION	6.132560406214413E-6	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9999940035312999	WITHOUT_CLASSIFICATION	5.996468700246779E-6	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9999930487537078	WITHOUT_CLASSIFICATION	6.951246292206391E-6	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9999961670045204	WITHOUT_CLASSIFICATION	3.832995479596373E-6	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9999960206411551	WITHOUT_CLASSIFICATION	3.979358844909614E-6	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9999953751862626	WITHOUT_CLASSIFICATION	4.624813737421129E-6	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9999955010689378	WITHOUT_CLASSIFICATION	4.4989310621939575E-6	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9999945517393053	WITHOUT_CLASSIFICATION	5.4482606948125E-6	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9999941540310103	WITHOUT_CLASSIFICATION	5.845968989672065E-6	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9999943714666031	WITHOUT_CLASSIFICATION	5.628533396907943E-6	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9999951342178137	WITHOUT_CLASSIFICATION	4.8657821862703505E-6	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9999933452714792	WITHOUT_CLASSIFICATION	6.654728520853376E-6	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9999951042889035	WITHOUT_CLASSIFICATION	4.895711096575992E-6	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9999933570011794	WITHOUT_CLASSIFICATION	6.642998820503167E-6	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9999936071757299	WITHOUT_CLASSIFICATION	6.392824270042767E-6	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9999930234239635	WITHOUT_CLASSIFICATION	6.976576036425887E-6	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9999927186905271	WITHOUT_CLASSIFICATION	7.281309472954477E-6	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9999937609199652	WITHOUT_CLASSIFICATION	6.239080034773711E-6	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9999972181754917	WITHOUT_CLASSIFICATION	2.7818245083763187E-6	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9999976333376384	WITHOUT_CLASSIFICATION	2.366662361596693E-6	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9999974539821351	WITHOUT_CLASSIFICATION	2.5460178649580513E-6	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9999972756949351	WITHOUT_CLASSIFICATION	2.724305064955514E-6	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9999974683983983	WITHOUT_CLASSIFICATION	2.531601601553782E-6	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9999974323985477	WITHOUT_CLASSIFICATION	2.5676014524088056E-6	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9999970143938024	WITHOUT_CLASSIFICATION	2.9856061976018654E-6	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9999972353566317	WITHOUT_CLASSIFICATION	2.7646433682978714E-6	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9999969542133926	WITHOUT_CLASSIFICATION	3.0457866073179143E-6	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9999971527118748	WITHOUT_CLASSIFICATION	2.847288125212934E-6	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999971488227651	WITHOUT_CLASSIFICATION	2.8511772349155123E-6	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999953076644069	WITHOUT_CLASSIFICATION	4.692335593067353E-6	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999961553396196	WITHOUT_CLASSIFICATION	3.844660380393785E-6	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999973478780936	WITHOUT_CLASSIFICATION	2.6521219065059023E-6	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999974499096054	WITHOUT_CLASSIFICATION	2.5500903946155266E-6	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999957750309215	WITHOUT_CLASSIFICATION	4.224969078425154E-6	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999977010403951	WITHOUT_CLASSIFICATION	2.2989596048364797E-6	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999971930961361	WITHOUT_CLASSIFICATION	2.8069038638281974E-6	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999964248970098	WITHOUT_CLASSIFICATION	3.5751029901398544E-6	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999965610115608	WITHOUT_CLASSIFICATION	3.4389884391265824E-6	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999962084702491	WITHOUT_CLASSIFICATION	3.791529750888081E-6	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9999970305833614	WITHOUT_CLASSIFICATION	2.9694166385508788E-6	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9999973514760984	WITHOUT_CLASSIFICATION	2.648523901505058E-6	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9999969298342153	WITHOUT_CLASSIFICATION	3.0701657847364454E-6	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.999997328096368	WITHOUT_CLASSIFICATION	2.6719036320302796E-6	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9999971999817023	WITHOUT_CLASSIFICATION	2.8000182976709505E-6	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9999957917187632	WITHOUT_CLASSIFICATION	4.208281236785663E-6	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9999953241757319	WITHOUT_CLASSIFICATION	4.675824268149781E-6	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.999995470784117	WITHOUT_CLASSIFICATION	4.529215883009007E-6	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9999965800978441	WITHOUT_CLASSIFICATION	3.4199021557937338E-6	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9999961106376887	WITHOUT_CLASSIFICATION	3.889362311311849E-6	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9999957996446388	WITHOUT_CLASSIFICATION	4.200355361145294E-6	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9999957077533963	WITHOUT_CLASSIFICATION	4.292246603699676E-6	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9999957246108406	WITHOUT_CLASSIFICATION	4.275389159360549E-6	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9999955329014744	WITHOUT_CLASSIFICATION	4.467098525735684E-6	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.99999610526169	WITHOUT_CLASSIFICATION	3.894738310017004E-6	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9999957875321646	WITHOUT_CLASSIFICATION	4.212467835469731E-6	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9999954643001607	WITHOUT_CLASSIFICATION	4.535699839229678E-6	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9999961795453078	WITHOUT_CLASSIFICATION	3.820454692168415E-6	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9999971470773931	WITHOUT_CLASSIFICATION	2.8529226068199587E-6	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9999953116423522	WITHOUT_CLASSIFICATION	4.688357647754009E-6	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9999964836441398	WITHOUT_CLASSIFICATION	3.5163558602609496E-6	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9999961696025789	WITHOUT_CLASSIFICATION	3.830397421226957E-6	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9999967563592245	WITHOUT_CLASSIFICATION	3.2436407754024643E-6	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9999967372103424	WITHOUT_CLASSIFICATION	3.262789657697588E-6	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.999996562491163	WITHOUT_CLASSIFICATION	3.4375088371305383E-6	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9999967652972069	WITHOUT_CLASSIFICATION	3.2347027930812567E-6	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9999965563040014	WITHOUT_CLASSIFICATION	3.4436959985249015E-6	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9999966296038689	WITHOUT_CLASSIFICATION	3.3703961310373194E-6	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9999977063989237	WITHOUT_CLASSIFICATION	2.2936010762614063E-6	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9999965198549227	WITHOUT_CLASSIFICATION	3.4801450773462805E-6	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9999962289502382	WITHOUT_CLASSIFICATION	3.7710497617322913E-6	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9999962519830855	WITHOUT_CLASSIFICATION	3.748016914398595E-6	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9999963142464817	WITHOUT_CLASSIFICATION	3.6857535181858065E-6	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9999964642379195	WITHOUT_CLASSIFICATION	3.5357620804515657E-6	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9999962259223777	WITHOUT_CLASSIFICATION	3.774077622256861E-6	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9999965061368398	WITHOUT_CLASSIFICATION	3.493863160144105E-6	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9999963531008165	WITHOUT_CLASSIFICATION	3.6468991835110072E-6	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9999972844341068	WITHOUT_CLASSIFICATION	2.7155658930286146E-6	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999962470722725	WITHOUT_CLASSIFICATION	3.7529277274632508E-6	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.999995644190359	WITHOUT_CLASSIFICATION	4.355809640964246E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999963607251486	WITHOUT_CLASSIFICATION	3.63927485143334E-6	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999957756163639	WITHOUT_CLASSIFICATION	4.2243836360444016E-6	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.999996442223714	WITHOUT_CLASSIFICATION	3.5577762859473893E-6	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999973797860198	WITHOUT_CLASSIFICATION	2.620213980196745E-6	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999957242896329	WITHOUT_CLASSIFICATION	4.275710367023072E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999974954851271	WITHOUT_CLASSIFICATION	2.5045148729125866E-6	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.999995661360861	WITHOUT_CLASSIFICATION	4.338639138921891E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999958387769935	WITHOUT_CLASSIFICATION	4.161223006528863E-6	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9999971472556172	WITHOUT_CLASSIFICATION	2.8527443827822426E-6	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9999956695647513	WITHOUT_CLASSIFICATION	4.330435248776276E-6	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.999995586932279	WITHOUT_CLASSIFICATION	4.413067721085758E-6	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9999964274654802	WITHOUT_CLASSIFICATION	3.57253451976823E-6	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9999963113242478	WITHOUT_CLASSIFICATION	3.688675752198843E-6	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9999963644270837	WITHOUT_CLASSIFICATION	3.6355729162525043E-6	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9999954200901491	WITHOUT_CLASSIFICATION	4.579909850896764E-6	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9999967232879381	WITHOUT_CLASSIFICATION	3.2767120620235664E-6	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9999965312092256	WITHOUT_CLASSIFICATION	3.468790774260185E-6	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.999996401351907	WITHOUT_CLASSIFICATION	3.598648092904216E-6	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9999961042235	WITHOUT_CLASSIFICATION	3.895776499914333E-6	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9999956650416345	WITHOUT_CLASSIFICATION	4.33495836552056E-6	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.99999568554479	WITHOUT_CLASSIFICATION	4.314455209960322E-6	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9999956615882795	WITHOUT_CLASSIFICATION	4.338411720567253E-6	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9999955063175532	WITHOUT_CLASSIFICATION	4.493682446821228E-6	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9999957862832193	WITHOUT_CLASSIFICATION	4.213716780761319E-6	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9999956276158991	WITHOUT_CLASSIFICATION	4.372384100926173E-6	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9999972447082408	WITHOUT_CLASSIFICATION	2.7552917593024356E-6	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9999971593765259	WITHOUT_CLASSIFICATION	2.840623474088929E-6	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9999957467093771	WITHOUT_CLASSIFICATION	4.253290622954734E-6	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9999964111955136	WITHOUT_CLASSIFICATION	3.58880448634813E-6	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.9999962679713534	WITHOUT_CLASSIFICATION	3.7320286465131863E-6	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9999976358251557	WITHOUT_CLASSIFICATION	2.364174844308451E-6	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9999960483188765	WITHOUT_CLASSIFICATION	3.951681123539212E-6	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9999961191605691	WITHOUT_CLASSIFICATION	3.880839430888101E-6	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9999963115474529	WITHOUT_CLASSIFICATION	3.6884525469502773E-6	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9999960147861786	WITHOUT_CLASSIFICATION	3.985213821354935E-6	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9999962294305962	WITHOUT_CLASSIFICATION	3.7705694039104787E-6	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.999995792778997	WITHOUT_CLASSIFICATION	4.207221003074417E-6	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9999959873377957	WITHOUT_CLASSIFICATION	4.0126622042765015E-6	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9999960334309117	WITHOUT_CLASSIFICATION	3.966569088230676E-6	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9999968134456826	WITHOUT_CLASSIFICATION	3.186554317345091E-6	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9999957579793227	WITHOUT_CLASSIFICATION	4.242020677250497E-6	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9999966619057645	WITHOUT_CLASSIFICATION	3.3380942353458522E-6	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9999961720940006	WITHOUT_CLASSIFICATION	3.827905999462218E-6	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9999965959367155	WITHOUT_CLASSIFICATION	3.4040632844503043E-6	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9999952714521024	WITHOUT_CLASSIFICATION	4.728547897568784E-6	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9999958971790168	WITHOUT_CLASSIFICATION	4.102820983119429E-6	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9999957176704294	WITHOUT_CLASSIFICATION	4.282329570627412E-6	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999956713385736	WITHOUT_CLASSIFICATION	4.3286614263856806E-6	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999961235131322	WITHOUT_CLASSIFICATION	3.876486867825224E-6	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999964455688206	WITHOUT_CLASSIFICATION	3.5544311792957207E-6	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999971529999444	WITHOUT_CLASSIFICATION	2.8470000557063055E-6	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999954448629752	WITHOUT_CLASSIFICATION	4.5551370247890996E-6	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999964134932051	WITHOUT_CLASSIFICATION	3.586506794791034E-6	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999964966683316	WITHOUT_CLASSIFICATION	3.5033316683588744E-6	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999958333189839	WITHOUT_CLASSIFICATION	4.166681016067566E-6	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999954535067406	WITHOUT_CLASSIFICATION	4.546493259429979E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999962110189748	WITHOUT_CLASSIFICATION	3.7889810250762916E-6	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.999996573994478	WITHOUT_CLASSIFICATION	3.426005521901157E-6	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.999997222462353	WITHOUT_CLASSIFICATION	2.777537647096708E-6	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9999961109623804	WITHOUT_CLASSIFICATION	3.8890376196533366E-6	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9999963353451072	WITHOUT_CLASSIFICATION	3.664654892805276E-6	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9999957096282457	WITHOUT_CLASSIFICATION	4.290371754298777E-6	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.999995768493336	WITHOUT_CLASSIFICATION	4.2315066639326334E-6	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9999956374442204	WITHOUT_CLASSIFICATION	4.362555779583833E-6	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9999958735342885	WITHOUT_CLASSIFICATION	4.126465711410005E-6	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9999954877428325	WITHOUT_CLASSIFICATION	4.512257167532652E-6	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9999971791086184	WITHOUT_CLASSIFICATION	2.8208913816892666E-6	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9999957721368087	WITHOUT_CLASSIFICATION	4.227863191251451E-6	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9999957065287006	WITHOUT_CLASSIFICATION	4.293471299427292E-6	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.999997349793522	WITHOUT_CLASSIFICATION	2.650206477939771E-6	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.999995454798069	WITHOUT_CLASSIFICATION	4.54520193103523E-6	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9999954319542741	WITHOUT_CLASSIFICATION	4.568045725991826E-6	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9999961963373833	WITHOUT_CLASSIFICATION	3.803662616752082E-6	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9999958109812723	WITHOUT_CLASSIFICATION	4.189018727602685E-6	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.999996300200077	WITHOUT_CLASSIFICATION	3.6997999230272617E-6	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9999959250670575	WITHOUT_CLASSIFICATION	4.074932942505216E-6	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9999958632498591	WITHOUT_CLASSIFICATION	4.136750140899572E-6	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9999958189578411	WITHOUT_CLASSIFICATION	4.1810421589388286E-6	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9999959336692346	WITHOUT_CLASSIFICATION	4.066330765398003E-6	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9999954613931101	WITHOUT_CLASSIFICATION	4.5386068898116955E-6	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9999953092793642	WITHOUT_CLASSIFICATION	4.690720635723603E-6	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.999995449939931	WITHOUT_CLASSIFICATION	4.550060069118518E-6	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9999962892251952	WITHOUT_CLASSIFICATION	3.710774804769834E-6	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9999959634020741	WITHOUT_CLASSIFICATION	4.036597925873573E-6	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9999956036926754	WITHOUT_CLASSIFICATION	4.396307324717685E-6	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9999954708026659	WITHOUT_CLASSIFICATION	4.529197334154551E-6	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9999952426250608	WITHOUT_CLASSIFICATION	4.757374939124591E-6	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9999973606697193	WITHOUT_CLASSIFICATION	2.6393302807594747E-6	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9999972076309853	WITHOUT_CLASSIFICATION	2.792369014634483E-6	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9999969581970949	WITHOUT_CLASSIFICATION	3.041802905213972E-6	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9999969922889352	WITHOUT_CLASSIFICATION	3.007711064871019E-6	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9999958208184575	WITHOUT_CLASSIFICATION	4.1791815424760926E-6	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9999964208346777	WITHOUT_CLASSIFICATION	3.5791653223403228E-6	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9999961971768846	WITHOUT_CLASSIFICATION	3.8028231154186637E-6	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.9999958960094132	WITHOUT_CLASSIFICATION	4.1039905867829595E-6	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9999957344873845	WITHOUT_CLASSIFICATION	4.265512615523914E-6	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9971874484015858	WITHOUT_CLASSIFICATION	0.002812551598414254	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9973929735914915	WITHOUT_CLASSIFICATION	0.002607026408508659	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999993535777494	WITHOUT_CLASSIFICATION	6.464222506852888E-7	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999910391915501	WITHOUT_CLASSIFICATION	8.960808449855606E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9990782684438152	WITHOUT_CLASSIFICATION	9.217315561847408E-4	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.999801175563145	WITHOUT_CLASSIFICATION	1.9882443685491726E-4	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999535793601196	WITHOUT_CLASSIFICATION	4.642063988029537E-5	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999910044582586	WITHOUT_CLASSIFICATION	8.995541741498562E-6	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.9999962375523123	WITHOUT_CLASSIFICATION	3.7624476876921717E-6	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9999955716505757	WITHOUT_CLASSIFICATION	4.428349424335553E-6	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9999962674467168	WITHOUT_CLASSIFICATION	3.732553283197423E-6	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9999953432897749	WITHOUT_CLASSIFICATION	4.656710225084638E-6	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9999955160369196	WITHOUT_CLASSIFICATION	4.483963080356396E-6	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9999956099901299	WITHOUT_CLASSIFICATION	4.390009870029254E-6	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9999972814622219	WITHOUT_CLASSIFICATION	2.7185377780490724E-6	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9999970789413997	WITHOUT_CLASSIFICATION	2.9210586003812915E-6	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9999953130883461	WITHOUT_CLASSIFICATION	4.686911653899242E-6	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9999954545414077	WITHOUT_CLASSIFICATION	4.545458592293322E-6	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9999960447966201	WITHOUT_CLASSIFICATION	3.955203379998091E-6	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9999957944467986	WITHOUT_CLASSIFICATION	4.205553201301558E-6	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.9999963859182847	WITHOUT_CLASSIFICATION	3.61408171538963E-6	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9999958599991849	WITHOUT_CLASSIFICATION	4.140000815049625E-6	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9999971403669468	WITHOUT_CLASSIFICATION	2.85963305333146E-6	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9999957140720939	WITHOUT_CLASSIFICATION	4.285927906166352E-6	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9999954672371462	WITHOUT_CLASSIFICATION	4.53276285377716E-6	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9999960678154427	WITHOUT_CLASSIFICATION	3.932184557292109E-6	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9999961356892922	WITHOUT_CLASSIFICATION	3.864310707743567E-6	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9999956049218042	WITHOUT_CLASSIFICATION	4.3950781958687825E-6	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9999967668426643	WITHOUT_CLASSIFICATION	3.233157335677042E-6	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9999964000461076	WITHOUT_CLASSIFICATION	3.599953892530007E-6	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9999975228195415	WITHOUT_CLASSIFICATION	2.4771804586179735E-6	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999715703772835	WITHOUT_CLASSIFICATION	2.842962271651105E-5	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999704755852983	WITHOUT_CLASSIFICATION	2.9524414701725465E-5	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999994872240944	WITHOUT_CLASSIFICATION	5.127759056626559E-7	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999985216615661	WITHOUT_CLASSIFICATION	1.4783384337874553E-6	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999997331458136	WITHOUT_CLASSIFICATION	2.668541863177058E-7	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.999792540003746	WITHOUT_CLASSIFICATION	2.0745999625396675E-4	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999997388164529	WITHOUT_CLASSIFICATION	2.6118354714527225E-7	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999983643904279	WITHOUT_CLASSIFICATION	1.6356095721882004E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999993104024151	WITHOUT_CLASSIFICATION	6.89597584846538E-7	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999993104024151	WITHOUT_CLASSIFICATION	6.89597584846538E-7	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999783516612334	WITHOUT_CLASSIFICATION	2.1648338766612652E-5	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999850117127353	WITHOUT_CLASSIFICATION	1.4988287264597917E-5	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999999686062578	WITHOUT_CLASSIFICATION	3.139374212363335E-8	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999972686303253	WITHOUT_CLASSIFICATION	2.7313696746483217E-6	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999999892343999	WITHOUT_CLASSIFICATION	1.0765599994126249E-8	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.999963502904393	WITHOUT_CLASSIFICATION	3.6497095607014886E-5	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9996859886184138	WITHOUT_CLASSIFICATION	3.140113815861746E-4	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999938954652823	WITHOUT_CLASSIFICATION	6.104534717773656E-6	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999935938328163	WITHOUT_CLASSIFICATION	6.40616718374315E-6	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999933137755768	WITHOUT_CLASSIFICATION	6.686224423194501E-6	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9998733721596884	WITHOUT_CLASSIFICATION	1.2662784031147576E-4	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9998393075052889	WITHOUT_CLASSIFICATION	1.6069249471102276E-4	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999941791499445	WITHOUT_CLASSIFICATION	5.820850055444199E-6	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999996938193577	WITHOUT_CLASSIFICATION	3.06180642307005E-7	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999615929035913	WITHOUT_CLASSIFICATION	3.840709640868976E-5	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999615929035913	WITHOUT_CLASSIFICATION	3.840709640868976E-5	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999857703790128	WITHOUT_CLASSIFICATION	1.422962098723327E-5	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999996694237693	WITHOUT_CLASSIFICATION	3.3057623069414114E-7	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999998845077955	WITHOUT_CLASSIFICATION	1.1549220438351625E-7	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999615246846433	WITHOUT_CLASSIFICATION	3.847531535662024E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998292150776	WITHOUT_CLASSIFICATION	1.7078492245449153E-7	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999998282376011	WITHOUT_CLASSIFICATION	1.7176239890664732E-6	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.999994048862431	WITHOUT_CLASSIFICATION	5.951137568907031E-6	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999998282376011	WITHOUT_CLASSIFICATION	1.7176239890664732E-6	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999970605401183	WITHOUT_CLASSIFICATION	2.93945988181169E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999994318522841	WITHOUT_CLASSIFICATION	5.681477158787839E-7	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.99997164553424	WITHOUT_CLASSIFICATION	2.835446576007107E-5	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9999521196205068	WITHOUT_CLASSIFICATION	4.788037949324342E-5	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999983699960169	WITHOUT_CLASSIFICATION	1.6300039831368742E-6	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999988511678056	WITHOUT_CLASSIFICATION	1.1488321944628828E-6	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9964555885387265	WITHOUT_CLASSIFICATION	0.0035444114612734542	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999841497391904	WITHOUT_CLASSIFICATION	1.5850260809671666E-5	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999978321021901	WITHOUT_CLASSIFICATION	2.1678978098829163E-6	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999996748764788	WITHOUT_CLASSIFICATION	3.2512352121615296E-7	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999996872083461	WITHOUT_CLASSIFICATION	3.1279165384939384E-7	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999992926794367	WITHOUT_CLASSIFICATION	7.073205632461356E-7	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999968856106715	WITHOUT_CLASSIFICATION	3.1143893284374002E-6	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998745368044071	WITHOUT_CLASSIFICATION	1.2546319559288282E-4	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999998068397454	WITHOUT_CLASSIFICATION	1.931602545954584E-7	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999998068397454	WITHOUT_CLASSIFICATION	1.931602545954584E-7	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999939641827982	WITHOUT_CLASSIFICATION	6.035817201907482E-6	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999934688418332	WITHOUT_CLASSIFICATION	6.531158166765085E-6	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999880351286434	WITHOUT_CLASSIFICATION	1.1964871356613754E-5	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999999335927126	WITHOUT_CLASSIFICATION	6.64072875137302E-8	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9999997126278207	WITHOUT_CLASSIFICATION	2.873721792764868E-7	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999998282376011	WITHOUT_CLASSIFICATION	1.7176239890664732E-6	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999993669981914	WITHOUT_CLASSIFICATION	6.330018086478387E-7	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999998554226017	WITHOUT_CLASSIFICATION	1.445773984037293E-7	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999964605307011	WITHOUT_CLASSIFICATION	3.539469298795932E-6	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999992977411201	WITHOUT_CLASSIFICATION	7.022588800152394E-7	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999841160617	WITHOUT_CLASSIFICATION	1.5883938235454075E-8	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9991478816647223	WITHOUT_CLASSIFICATION	8.521183352776992E-4	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9997785155407679	WITHOUT_CLASSIFICATION	2.2148445923212898E-4	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999989313571744	WITHOUT_CLASSIFICATION	1.0686428256344608E-6	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999866715772754	WITHOUT_CLASSIFICATION	1.3328422724497684E-5	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9998393105826481	WITHOUT_CLASSIFICATION	1.6068941735198256E-4	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999606807145102	WITHOUT_CLASSIFICATION	3.9319285489785154E-5	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999997990277839	WITHOUT_CLASSIFICATION	2.0097221618240108E-7	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999999408430074	WITHOUT_CLASSIFICATION	5.915699273208029E-8	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999874837560175	WITHOUT_CLASSIFICATION	1.251624398243462E-5	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9996337546228803	WITHOUT_CLASSIFICATION	3.662453771196566E-4	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999990109767428	WITHOUT_CLASSIFICATION	9.890232571434607E-7	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999992704757851	WITHOUT_CLASSIFICATION	7.295242149564748E-7	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9999982946158846	WITHOUT_CLASSIFICATION	1.705384115388422E-6	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9999769413396102	WITHOUT_CLASSIFICATION	2.305866038982247E-5	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9996715070548096	WITHOUT_CLASSIFICATION	3.2849294519051196E-4	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999955777042244	WITHOUT_CLASSIFICATION	4.422295775596034E-6	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999729964733491	WITHOUT_CLASSIFICATION	2.700352665093495E-5	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999992909995522	WITHOUT_CLASSIFICATION	7.090004478170171E-7	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999996099980168	WITHOUT_CLASSIFICATION	3.900019831677972E-7	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999991903836534	WITHOUT_CLASSIFICATION	8.096163467620113E-7	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.999999640013216	WITHOUT_CLASSIFICATION	3.5998678407005075E-7	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999995105543154	WITHOUT_CLASSIFICATION	4.89445684681929E-7	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999990066805146	WITHOUT_CLASSIFICATION	9.933194854315812E-7	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999605376363992	WITHOUT_CLASSIFICATION	3.9462363600758195E-5	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999993793860957	WITHOUT_CLASSIFICATION	6.206139043663291E-7	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999989644704292	WITHOUT_CLASSIFICATION	1.035529570724661E-6	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9999962875337068	WITHOUT_CLASSIFICATION	3.7124662930743704E-6	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.999996943590559	WITHOUT_CLASSIFICATION	3.056409440922254E-6	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999997651643032	WITHOUT_CLASSIFICATION	2.3483569689127235E-7	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999722944680173	WITHOUT_CLASSIFICATION	2.770553198279701E-5	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999992394174629	WITHOUT_CLASSIFICATION	7.605825370306707E-7	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999954980027692	WITHOUT_CLASSIFICATION	4.501997230824399E-6	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9999924570935556	WITHOUT_CLASSIFICATION	7.5429064445311476E-6	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9999988188101223	WITHOUT_CLASSIFICATION	1.1811898776401795E-6	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999998022098322	WITHOUT_CLASSIFICATION	1.9779016783770068E-7	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999910044582586	WITHOUT_CLASSIFICATION	8.995541741498562E-6	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999610013008933	WITHOUT_CLASSIFICATION	3.899869910672073E-5	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999894162149657	WITHOUT_CLASSIFICATION	1.0583785034268682E-5	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999666724090404	WITHOUT_CLASSIFICATION	3.3327590959733746E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.999998603983286	WITHOUT_CLASSIFICATION	1.3960167139425304E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999994318522841	WITHOUT_CLASSIFICATION	5.681477158787839E-7	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999765023440141	WITHOUT_CLASSIFICATION	2.349765598582634E-5	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999998097095254	WITHOUT_CLASSIFICATION	1.9029047448746473E-7	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.999999731690667	WITHOUT_CLASSIFICATION	2.683093329057009E-7	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999920194340174	WITHOUT_CLASSIFICATION	7.980565982554731E-6	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999920194340174	WITHOUT_CLASSIFICATION	7.980565982554731E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999926381490406	WITHOUT_CLASSIFICATION	7.36185095937965E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999926381490406	WITHOUT_CLASSIFICATION	7.36185095937965E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999926381490406	WITHOUT_CLASSIFICATION	7.36185095937965E-6	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.999954992650049	WITHOUT_CLASSIFICATION	4.500734995093573E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.999954992650049	WITHOUT_CLASSIFICATION	4.500734995093573E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999943215027322	WITHOUT_CLASSIFICATION	5.678497267867566E-6	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999943215027322	WITHOUT_CLASSIFICATION	5.678497267867566E-6	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999982906567743	WITHOUT_CLASSIFICATION	1.7093432256400309E-6	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999991387773539	WITHOUT_CLASSIFICATION	8.612226461436726E-7	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999986445345745	WITHOUT_CLASSIFICATION	1.3554654254817786E-6	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999986445345745	WITHOUT_CLASSIFICATION	1.3554654254817786E-6	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999999074971851	WITHOUT_CLASSIFICATION	9.250281489848032E-8	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999991876037156	WITHOUT_CLASSIFICATION	8.123962843547706E-7	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999991041908062	WITHOUT_CLASSIFICATION	8.958091938370633E-7	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.999999661425809	WITHOUT_CLASSIFICATION	3.385741909404485E-7	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999936750960964	WITHOUT_CLASSIFICATION	6.324903903683895E-6	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999998981215331	WITHOUT_CLASSIFICATION	1.0187846689125576E-7	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999997744806103	WITHOUT_CLASSIFICATION	2.255193897856514E-7	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999995863279912	WITHOUT_CLASSIFICATION	4.1367200880939324E-7	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9999989785713408	WITHOUT_CLASSIFICATION	1.0214286592256762E-6	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9999897822475582	WITHOUT_CLASSIFICATION	1.021775244175587E-5	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999986185277645	WITHOUT_CLASSIFICATION	1.3814722355175733E-6	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9999978839680441	WITHOUT_CLASSIFICATION	2.1160319559073215E-6	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9999970461094111	WITHOUT_CLASSIFICATION	2.9538905889094067E-6	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9999857781689259	WITHOUT_CLASSIFICATION	1.4221831074104278E-5	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999993166935663	WITHOUT_CLASSIFICATION	6.833064337424444E-7	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999805127093014	WITHOUT_CLASSIFICATION	1.948729069854379E-5	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9433418600393857	WITHOUT_CLASSIFICATION	0.05665813996061427	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999646859121926	WITHOUT_CLASSIFICATION	3.531408780730529E-5	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999947601739352	WITHOUT_CLASSIFICATION	5.239826064863765E-6	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999793751793907	WITHOUT_CLASSIFICATION	2.0624820609192094E-5	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999898772623488	WITHOUT_CLASSIFICATION	1.0122737651337316E-5	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.999983620594659	WITHOUT_CLASSIFICATION	1.637940534106417E-5	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9999974060541471	WITHOUT_CLASSIFICATION	2.5939458529304663E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999611341944	WITHOUT_CLASSIFICATION	3.8865805612975436E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999998917264173	WITHOUT_CLASSIFICATION	1.0827358259494997E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999659297213	WITHOUT_CLASSIFICATION	3.4070278693810394E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999757632195	WITHOUT_CLASSIFICATION	2.4236780431983577E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999494335206	WITHOUT_CLASSIFICATION	5.0566479430770703E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999509455568	WITHOUT_CLASSIFICATION	4.905444324258787E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999999863342593	WITHOUT_CLASSIFICATION	1.366574069845684E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999999956998227	WITHOUT_CLASSIFICATION	4.3001773105862714E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998608895063	WITHOUT_CLASSIFICATION	1.3911049376993357E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999996124616845	WITHOUT_CLASSIFICATION	3.8753831557258725E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998661880406	WITHOUT_CLASSIFICATION	1.3381195933837655E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999996124616845	WITHOUT_CLASSIFICATION	3.8753831557258725E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999996124616845	WITHOUT_CLASSIFICATION	3.8753831557258725E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999996124616845	WITHOUT_CLASSIFICATION	3.8753831557258725E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999996124616845	WITHOUT_CLASSIFICATION	3.8753831557258725E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999996124616845	WITHOUT_CLASSIFICATION	3.8753831557258725E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999996124616845	WITHOUT_CLASSIFICATION	3.8753831557258725E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998661880406	WITHOUT_CLASSIFICATION	1.3381195933837655E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998661880406	WITHOUT_CLASSIFICATION	1.3381195933837655E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998661880406	WITHOUT_CLASSIFICATION	1.3381195933837655E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998661880406	WITHOUT_CLASSIFICATION	1.3381195933837655E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998661880406	WITHOUT_CLASSIFICATION	1.3381195933837655E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998661880406	WITHOUT_CLASSIFICATION	1.3381195933837655E-7	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999885091142894	WITHOUT_CLASSIFICATION	1.149088571069631E-5	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999989937673618	WITHOUT_CLASSIFICATION	1.0062326382136478E-6	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999884585969709	WITHOUT_CLASSIFICATION	1.1541403029092664E-5	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999997546811714	WITHOUT_CLASSIFICATION	2.4531882852923975E-7	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999999874509643	WITHOUT_CLASSIFICATION	1.2549035601797887E-8	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998536570123	WITHOUT_CLASSIFICATION	1.4634298780435014E-7	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999984506310634	WITHOUT_CLASSIFICATION	1.5493689365816905E-6	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999999352322241	WITHOUT_CLASSIFICATION	6.476777591561143E-8	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999819443352136	WITHOUT_CLASSIFICATION	1.8055664786392638E-5	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999454049525406	WITHOUT_CLASSIFICATION	5.459504745941324E-5	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9999053962079649	WITHOUT_CLASSIFICATION	9.46037920350742E-5	IMPLEMENTATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999925911947	WITHOUT_CLASSIFICATION	7.408805415604345E-9	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.999990493306172	WITHOUT_CLASSIFICATION	9.506693828028099E-6	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999211522093	WITHOUT_CLASSIFICATION	7.884779067251462E-8	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999988679648356	WITHOUT_CLASSIFICATION	1.132035164294068E-6	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999991649393111	WITHOUT_CLASSIFICATION	8.35060688938674E-7	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999990997391552	WITHOUT_CLASSIFICATION	9.00260844869555E-7	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999997914962667	WITHOUT_CLASSIFICATION	2.0850373341137832E-7	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999998386524487	WITHOUT_CLASSIFICATION	1.6134755136721608E-7	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999997024797904	WITHOUT_CLASSIFICATION	2.97520209571262E-7	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999999430582096	WITHOUT_CLASSIFICATION	5.6941790414097766E-8	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999967737817739	WITHOUT_CLASSIFICATION	3.226218226266403E-6	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.999994048862431	WITHOUT_CLASSIFICATION	5.951137568907031E-6	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.999999982463277	WITHOUT_CLASSIFICATION	1.7536723051457984E-8	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999984574868028	WITHOUT_CLASSIFICATION	1.5425131970905812E-6	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999999829943548	WITHOUT_CLASSIFICATION	1.700564520541005E-8	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999972325148	WITHOUT_CLASSIFICATION	2.767485155701632E-9	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999297396051343	WITHOUT_CLASSIFICATION	7.026039486561448E-5	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.9999707411850837	WITHOUT_CLASSIFICATION	2.9258814916227103E-5	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999999914786786	WITHOUT_CLASSIFICATION	8.521321396825761E-9	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.9999878593465863	WITHOUT_CLASSIFICATION	1.2140653413659513E-5	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999998309675895	WITHOUT_CLASSIFICATION	1.6903241062716398E-7	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999999976549362	WITHOUT_CLASSIFICATION	2.3450637738276193E-9	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9999997669731266	WITHOUT_CLASSIFICATION	2.3302687329630277E-7	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999986569605747	WITHOUT_CLASSIFICATION	1.343039425356897E-6	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999861835762152	WITHOUT_CLASSIFICATION	1.3816423784839343E-5	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.999958106426752	WITHOUT_CLASSIFICATION	4.18935732479848E-5	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999993946437902	WITHOUT_CLASSIFICATION	6.053562098029458E-7	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999997210784957	WITHOUT_CLASSIFICATION	2.7892150440795877E-7	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.999999992267325	WITHOUT_CLASSIFICATION	7.732674931082977E-9	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999984634543992	WITHOUT_CLASSIFICATION	1.5365456007267783E-6	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999983859374006	WITHOUT_CLASSIFICATION	1.614062599369857E-6	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999999839166336	WITHOUT_CLASSIFICATION	1.6083366506276777E-8	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999998603556034	WITHOUT_CLASSIFICATION	1.3964439664032013E-7	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999998603556034	WITHOUT_CLASSIFICATION	1.3964439664032013E-7	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999985305858821	WITHOUT_CLASSIFICATION	1.4694141179129378E-6	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999985305858821	WITHOUT_CLASSIFICATION	1.4694141179129378E-6	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.999999776590846	WITHOUT_CLASSIFICATION	2.2340915389567147E-7	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.999999776590846	WITHOUT_CLASSIFICATION	2.2340915389567147E-7	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999894797847567	WITHOUT_CLASSIFICATION	1.0520215243280808E-5	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999954592405828	WITHOUT_CLASSIFICATION	4.540759417222621E-6	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999999379565384	WITHOUT_CLASSIFICATION	6.204346155391442E-8	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999999990218033	WITHOUT_CLASSIFICATION	9.781966803601287E-10	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999999085886561	WITHOUT_CLASSIFICATION	9.141134395908974E-8	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999853620188863	WITHOUT_CLASSIFICATION	1.4637981113559482E-5	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9999905175518079	WITHOUT_CLASSIFICATION	9.482448192057623E-6	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999676552505	WITHOUT_CLASSIFICATION	3.234474960156987E-8	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999999586020853	WITHOUT_CLASSIFICATION	4.1397914622522157E-8	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999997473681056	WITHOUT_CLASSIFICATION	2.526318943870435E-7	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999999744116201	WITHOUT_CLASSIFICATION	2.5588379936108354E-8	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999997493650469	WITHOUT_CLASSIFICATION	2.50634953123578E-7	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999999897392876	WITHOUT_CLASSIFICATION	1.0260712427052334E-8	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999984316410186	WITHOUT_CLASSIFICATION	1.5683589813143298E-6	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999961841225858	WITHOUT_CLASSIFICATION	3.8158774141209984E-6	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9999997419935199	WITHOUT_CLASSIFICATION	2.5800648005819456E-7	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999996372983226	WITHOUT_CLASSIFICATION	3.627016773497199E-7	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999994839367503	WITHOUT_CLASSIFICATION	5.160632496866058E-7	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999964774881992	WITHOUT_CLASSIFICATION	3.522511800855433E-6	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9999953545865351	WITHOUT_CLASSIFICATION	4.645413464956278E-6	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9999971023634103	WITHOUT_CLASSIFICATION	2.8976365896689308E-6	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999962446443283	WITHOUT_CLASSIFICATION	3.755355671620569E-6	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999988613701357	WITHOUT_CLASSIFICATION	1.1386298643134074E-6	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999986310353755	WITHOUT_CLASSIFICATION	1.3689646245525877E-6	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999999098798145	WITHOUT_CLASSIFICATION	9.012018545125107E-8	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999999968636943	WITHOUT_CLASSIFICATION	3.136305621926056E-9	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9999983584797342	WITHOUT_CLASSIFICATION	1.6415202658641314E-6	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999806891397786	WITHOUT_CLASSIFICATION	1.931086022154509E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999806891397786	WITHOUT_CLASSIFICATION	1.931086022154509E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999806891397786	WITHOUT_CLASSIFICATION	1.931086022154509E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9992813466952332	WITHOUT_CLASSIFICATION	7.186533047668821E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9992813466952332	WITHOUT_CLASSIFICATION	7.186533047668821E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999874837560175	WITHOUT_CLASSIFICATION	1.251624398243462E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999874837560175	WITHOUT_CLASSIFICATION	1.251624398243462E-5	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999993639126653	WITHOUT_CLASSIFICATION	6.360873345671892E-7	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9923328426142212	WITHOUT_CLASSIFICATION	0.007667157385778764	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999944304726347	WITHOUT_CLASSIFICATION	5.569527365200651E-6	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999987148680465	WITHOUT_CLASSIFICATION	1.2851319535319138E-6	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999806891397786	WITHOUT_CLASSIFICATION	1.931086022154509E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999806891397786	WITHOUT_CLASSIFICATION	1.931086022154509E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999806891397786	WITHOUT_CLASSIFICATION	1.931086022154509E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9992813466952332	WITHOUT_CLASSIFICATION	7.186533047668821E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9992813466952332	WITHOUT_CLASSIFICATION	7.186533047668821E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9992813466952332	WITHOUT_CLASSIFICATION	7.186533047668821E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999874837560175	WITHOUT_CLASSIFICATION	1.251624398243462E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999874837560175	WITHOUT_CLASSIFICATION	1.251624398243462E-5	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999999720372823	WITHOUT_CLASSIFICATION	2.7962717682990792E-8	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999915497128142	WITHOUT_CLASSIFICATION	8.450287185749762E-6	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999985709330873	WITHOUT_CLASSIFICATION	1.4290669126386116E-6	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999985709330873	WITHOUT_CLASSIFICATION	1.4290669126386116E-6	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999985709330873	WITHOUT_CLASSIFICATION	1.4290669126386116E-6	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999985709330873	WITHOUT_CLASSIFICATION	1.4290669126386116E-6	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999985709330873	WITHOUT_CLASSIFICATION	1.4290669126386116E-6	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999975994334678	WITHOUT_CLASSIFICATION	2.4005665321496263E-6	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999995001165813	WITHOUT_CLASSIFICATION	4.998834185895364E-7	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9998143357999053	WITHOUT_CLASSIFICATION	1.8566420009474523E-4	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999963609950792	WITHOUT_CLASSIFICATION	3.639004920750692E-6	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999977867685731	WITHOUT_CLASSIFICATION	2.213231426856115E-6	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999759293201079	WITHOUT_CLASSIFICATION	2.4070679892142916E-5	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.999431376139091	WITHOUT_CLASSIFICATION	5.686238609088993E-4	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999990288895398	WITHOUT_CLASSIFICATION	9.711104601467814E-7	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999967449257959	WITHOUT_CLASSIFICATION	3.2550742041430393E-6	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.999988609782909	WITHOUT_CLASSIFICATION	1.1390217090982656E-5	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999890444737967	WITHOUT_CLASSIFICATION	1.095552620331211E-5	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.999999682482796	WITHOUT_CLASSIFICATION	3.175172040186808E-7	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999888999506629	WITHOUT_CLASSIFICATION	1.1100049337154112E-5	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999990969160385	WITHOUT_CLASSIFICATION	9.030839613870662E-7	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999991537916828	WITHOUT_CLASSIFICATION	8.462083172856116E-7	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999767974998651	WITHOUT_CLASSIFICATION	2.3202500134898677E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999767974998651	WITHOUT_CLASSIFICATION	2.3202500134898677E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999767974998651	WITHOUT_CLASSIFICATION	2.3202500134898677E-5	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999998865088817	WITHOUT_CLASSIFICATION	1.1349111823542465E-7	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999998865032801	WITHOUT_CLASSIFICATION	1.1349671984112759E-7	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999876365758686	WITHOUT_CLASSIFICATION	1.236342413129885E-5	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999978693946333	WITHOUT_CLASSIFICATION	2.1306053667063714E-6	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999945827164644	WITHOUT_CLASSIFICATION	5.4172835356241895E-6	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.999999518477192	WITHOUT_CLASSIFICATION	4.815228080789144E-7	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999994373616841	WITHOUT_CLASSIFICATION	5.626383159112224E-7	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.999999363981603	WITHOUT_CLASSIFICATION	6.360183969764595E-7	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999995811621011	WITHOUT_CLASSIFICATION	4.188378989271737E-7	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.999999785711307	WITHOUT_CLASSIFICATION	2.1428869290768936E-7	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999997121820026	WITHOUT_CLASSIFICATION	2.8781799740057176E-7	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999996293527673	WITHOUT_CLASSIFICATION	3.70647232674704E-7	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.99999343781229	WITHOUT_CLASSIFICATION	6.5621877099812875E-6	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9999990779958906	WITHOUT_CLASSIFICATION	9.220041093852146E-7	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9999993678271939	WITHOUT_CLASSIFICATION	6.321728061419174E-7	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.999994022848317	WITHOUT_CLASSIFICATION	5.977151683080009E-6	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999925925655965	WITHOUT_CLASSIFICATION	7.40743440354037E-6	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999992410007836	WITHOUT_CLASSIFICATION	7.589992163707714E-7	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9999980752971468	WITHOUT_CLASSIFICATION	1.9247028532920625E-6	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999971718638555	WITHOUT_CLASSIFICATION	2.8281361445215977E-6	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999949841873649	WITHOUT_CLASSIFICATION	5.015812635132264E-6	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999907519079688	WITHOUT_CLASSIFICATION	9.24809203122537E-6	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9995514587569658	WITHOUT_CLASSIFICATION	4.48541243034262E-4	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999995169626009	WITHOUT_CLASSIFICATION	4.830373991407779E-7	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9999971607960642	WITHOUT_CLASSIFICATION	2.8392039358475177E-6	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9999970403889943	WITHOUT_CLASSIFICATION	2.9596110057395737E-6	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9999991515874758	WITHOUT_CLASSIFICATION	8.484125243189398E-7	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9999945557806954	WITHOUT_CLASSIFICATION	5.4442193046122075E-6	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999639344043856	WITHOUT_CLASSIFICATION	3.606559561434359E-5	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9999955946880206	WITHOUT_CLASSIFICATION	4.405311979454302E-6	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9999949386374661	WITHOUT_CLASSIFICATION	5.061362533885835E-6	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9999938460939383	WITHOUT_CLASSIFICATION	6.153906061656299E-6	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.9999947900723681	WITHOUT_CLASSIFICATION	5.2099276317700426E-6	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9999942313149874	WITHOUT_CLASSIFICATION	5.7686850125082195E-6	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9999933072888566	WITHOUT_CLASSIFICATION	6.692711143297954E-6	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.999993427416101	WITHOUT_CLASSIFICATION	6.572583899037085E-6	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999994352572423	WITHOUT_CLASSIFICATION	5.647427577658175E-7	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999964587899831	WITHOUT_CLASSIFICATION	3.5412100168614486E-6	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999999962404379	WITHOUT_CLASSIFICATION	3.7595621059427075E-9	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999432508869563	WITHOUT_CLASSIFICATION	5.6749113043622086E-5	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999997876713684	WITHOUT_CLASSIFICATION	2.123286315214511E-7	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999997053776393	WITHOUT_CLASSIFICATION	2.9462236076399647E-7	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999794361848315	WITHOUT_CLASSIFICATION	2.056381516847072E-5	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999904996901153	WITHOUT_CLASSIFICATION	9.500309884727053E-6	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999993839901951	WITHOUT_CLASSIFICATION	6.160098048382947E-7	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999938649948306	WITHOUT_CLASSIFICATION	6.135005169492999E-6	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9997757928581618	WITHOUT_CLASSIFICATION	2.2420714183816247E-4	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9997757928581618	WITHOUT_CLASSIFICATION	2.2420714183816247E-4	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999921249554258	WITHOUT_CLASSIFICATION	7.875044574221523E-6	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999984778197006	WITHOUT_CLASSIFICATION	1.5221802994343289E-6	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999890493718624	WITHOUT_CLASSIFICATION	1.0950628137612706E-5	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999678342443189	WITHOUT_CLASSIFICATION	3.216575568112848E-5	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999996095421977	WITHOUT_CLASSIFICATION	3.9045780228452846E-7	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999979493945274	WITHOUT_CLASSIFICATION	2.0506054725937822E-6	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999929637112591	WITHOUT_CLASSIFICATION	7.036288740993907E-6	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999696978855	WITHOUT_CLASSIFICATION	3.03021145553461E-8	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999999301021623	WITHOUT_CLASSIFICATION	6.989783773467584E-8	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999994330323351	WITHOUT_CLASSIFICATION	5.669676649738651E-7	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999996615807974	WITHOUT_CLASSIFICATION	3.3841920246662447E-7	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999996615807974	WITHOUT_CLASSIFICATION	3.3841920246662447E-7	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999996615807974	WITHOUT_CLASSIFICATION	3.3841920246662447E-7	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999996615807974	WITHOUT_CLASSIFICATION	3.3841920246662447E-7	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9999965752435843	WITHOUT_CLASSIFICATION	3.4247564156683155E-6	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9999963564180772	WITHOUT_CLASSIFICATION	3.643581922702833E-6	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9999910481131671	WITHOUT_CLASSIFICATION	8.951886832830656E-6	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9999932368155425	WITHOUT_CLASSIFICATION	6.7631844574393235E-6	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999792798206968	WITHOUT_CLASSIFICATION	2.072017930324275E-5	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999994400386384	WITHOUT_CLASSIFICATION	5.599613616835209E-7	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.999998512993687	WITHOUT_CLASSIFICATION	1.487006312959135E-6	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999967636237477	WITHOUT_CLASSIFICATION	3.2363762522725857E-6	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999967636237477	WITHOUT_CLASSIFICATION	3.2363762522725857E-6	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999991026586154	WITHOUT_CLASSIFICATION	8.973413846480666E-7	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999974356615046	WITHOUT_CLASSIFICATION	2.5643384954404763E-6	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999986435515695	WITHOUT_CLASSIFICATION	1.3564484304487402E-6	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999592091651	WITHOUT_CLASSIFICATION	4.079083490057214E-8	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999592091651	WITHOUT_CLASSIFICATION	4.079083490057214E-8	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999999754619344	WITHOUT_CLASSIFICATION	2.4538065535619374E-8	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999636395493559	WITHOUT_CLASSIFICATION	3.636045064425745E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999636395493559	WITHOUT_CLASSIFICATION	3.636045064425745E-5	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999994237541187	WITHOUT_CLASSIFICATION	5.762458812783477E-7	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999808043990613	WITHOUT_CLASSIFICATION	1.9195600938700252E-5	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999991828056467	WITHOUT_CLASSIFICATION	8.171943533468969E-7	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999997703594655	WITHOUT_CLASSIFICATION	2.2964053437367874E-7	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.999983660860203	WITHOUT_CLASSIFICATION	1.6339139796996984E-5	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999703050559	WITHOUT_CLASSIFICATION	2.9694944093776074E-8	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999999514448389	WITHOUT_CLASSIFICATION	4.855516111898871E-8	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9999593875554222	WITHOUT_CLASSIFICATION	4.061244457781835E-5	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.999999792095797	WITHOUT_CLASSIFICATION	2.079042029381882E-7	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999975480199089	WITHOUT_CLASSIFICATION	2.451980091104007E-6	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999898001564003	WITHOUT_CLASSIFICATION	1.0199843599734763E-5	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999953827592339	WITHOUT_CLASSIFICATION	4.617240766059376E-6	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999958517867792	WITHOUT_CLASSIFICATION	4.148213220749378E-6	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999915900326953	WITHOUT_CLASSIFICATION	8.409967304580572E-6	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999760046241988	WITHOUT_CLASSIFICATION	2.3995375801181833E-5	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999997289143667	WITHOUT_CLASSIFICATION	2.710856332744149E-7	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9999975151097598	WITHOUT_CLASSIFICATION	2.4848902403058995E-6	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9999954559088591	WITHOUT_CLASSIFICATION	4.544091140837049E-6	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999991369232587	WITHOUT_CLASSIFICATION	8.630767412237182E-7	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999996653077343	WITHOUT_CLASSIFICATION	3.3469226572970406E-7	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999995627037028	WITHOUT_CLASSIFICATION	4.372962971218804E-7	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999793859051451	WITHOUT_CLASSIFICATION	2.061409485487735E-5	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999675764639706	WITHOUT_CLASSIFICATION	3.242353602933057E-5	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999978549794976	WITHOUT_CLASSIFICATION	2.1450205025650924E-6	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.999999987925002	WITHOUT_CLASSIFICATION	1.2074997918365474E-8	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999986417807518	WITHOUT_CLASSIFICATION	1.3582192482180184E-6	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999973872375416	WITHOUT_CLASSIFICATION	2.6127624584251307E-6	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999998850618569	WITHOUT_CLASSIFICATION	1.1493814317633463E-7	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999831495733	WITHOUT_CLASSIFICATION	1.6850426742424456E-8	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999457096389982	WITHOUT_CLASSIFICATION	5.4290361001791533E-5	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9999979386321823	WITHOUT_CLASSIFICATION	2.0613678176385204E-6	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999991729511317	WITHOUT_CLASSIFICATION	8.27048868264938E-7	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9316608920839294	WITHOUT_CLASSIFICATION	0.06833910791607045	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999987373711191	WITHOUT_CLASSIFICATION	1.262628880928713E-6	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999946553839794	WITHOUT_CLASSIFICATION	5.3446160206831275E-6	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999959684981035	WITHOUT_CLASSIFICATION	4.03150189656609E-6	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999910939019423	WITHOUT_CLASSIFICATION	8.906098057736661E-6	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999986733706084	WITHOUT_CLASSIFICATION	1.3266293914836252E-6	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999785892612574	WITHOUT_CLASSIFICATION	2.1410738742554854E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999959684981035	WITHOUT_CLASSIFICATION	4.03150189656609E-6	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999910939019423	WITHOUT_CLASSIFICATION	8.906098057736661E-6	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999543225435021	WITHOUT_CLASSIFICATION	4.567745649788449E-5	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999994987390817	WITHOUT_CLASSIFICATION	5.012609182736192E-7	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999994987390817	WITHOUT_CLASSIFICATION	5.012609182736192E-7	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999164293648976	WITHOUT_CLASSIFICATION	8.357063510247128E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999995859402	WITHOUT_CLASSIFICATION	4.1405985302517297E-10	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999985467780874	WITHOUT_CLASSIFICATION	1.4532219125958815E-6	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999983658564995	WITHOUT_CLASSIFICATION	1.6341435005494988E-6	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999558103309875	WITHOUT_CLASSIFICATION	4.418966901257573E-5	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999962516413098	WITHOUT_CLASSIFICATION	3.748358690291302E-6	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999633610567704	WITHOUT_CLASSIFICATION	3.6638943229560054E-5	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999561067544709	WITHOUT_CLASSIFICATION	4.389324552921422E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999129662627659	WITHOUT_CLASSIFICATION	8.7033737234062E-5	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999973745049845	WITHOUT_CLASSIFICATION	2.625495015519155E-6	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999994515790454	WITHOUT_CLASSIFICATION	5.484209545978938E-7	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999996234868226	WITHOUT_CLASSIFICATION	3.765131774545855E-7	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999998490336224	WITHOUT_CLASSIFICATION	1.5096637756402714E-7	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999668141752	WITHOUT_CLASSIFICATION	3.318582481689349E-8	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999668141752	WITHOUT_CLASSIFICATION	3.318582481689349E-8	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999924458866608	WITHOUT_CLASSIFICATION	7.554113339180078E-6	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999924458866608	WITHOUT_CLASSIFICATION	7.554113339180078E-6	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999997941372515	WITHOUT_CLASSIFICATION	2.0586274863610174E-7	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999989428445016	WITHOUT_CLASSIFICATION	1.0571554984353291E-6	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999883412197065	WITHOUT_CLASSIFICATION	1.1658780293570074E-5	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999997410806567	WITHOUT_CLASSIFICATION	2.5891934325584545E-7	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999995219151202	WITHOUT_CLASSIFICATION	4.780848797326311E-7	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999962287156186	WITHOUT_CLASSIFICATION	3.771284381392753E-6	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999985467780874	WITHOUT_CLASSIFICATION	1.4532219125958815E-6	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999983658564995	WITHOUT_CLASSIFICATION	1.6341435005494988E-6	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999129662627659	WITHOUT_CLASSIFICATION	8.7033737234062E-5	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999973745049845	WITHOUT_CLASSIFICATION	2.625495015519155E-6	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999987626153655	WITHOUT_CLASSIFICATION	1.237384634549688E-6	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999848299800838	WITHOUT_CLASSIFICATION	1.5170019916323997E-5	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999966599912341	WITHOUT_CLASSIFICATION	3.3400087659752887E-6	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999996444289466	WITHOUT_CLASSIFICATION	3.5557105338447515E-7	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.999999634514981	WITHOUT_CLASSIFICATION	3.6548501908749126E-7	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999985125621091	WITHOUT_CLASSIFICATION	1.4874378909097644E-6	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999996299172516	WITHOUT_CLASSIFICATION	3.700827484341198E-7	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999986493326511	WITHOUT_CLASSIFICATION	1.3506673488204803E-6	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999854739212547	WITHOUT_CLASSIFICATION	1.4526078745268726E-5	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999339162242994	WITHOUT_CLASSIFICATION	6.608377570066719E-5	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999998536631884	WITHOUT_CLASSIFICATION	1.4633681146828627E-7	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999978484890227	WITHOUT_CLASSIFICATION	2.1515109772739694E-6	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.999969099758863	WITHOUT_CLASSIFICATION	3.0900241137053974E-5	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999906115298786	WITHOUT_CLASSIFICATION	9.388470121342787E-6	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999996597154108	WITHOUT_CLASSIFICATION	3.402845891971005E-7	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999782240288106	WITHOUT_CLASSIFICATION	2.1775971189404136E-5	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999962611914518	WITHOUT_CLASSIFICATION	3.7388085482491164E-6	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.99999899077611	WITHOUT_CLASSIFICATION	1.009223889932511E-6	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999998464246272	WITHOUT_CLASSIFICATION	1.535753727480671E-7	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999997116131567	WITHOUT_CLASSIFICATION	2.883868433212681E-7	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999999347071141	WITHOUT_CLASSIFICATION	6.52928858892302E-7	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999999347071141	WITHOUT_CLASSIFICATION	6.52928858892302E-7	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999890241488919	WITHOUT_CLASSIFICATION	1.0975851108074083E-5	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999948668873888	WITHOUT_CLASSIFICATION	5.133112611227274E-6	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999997884214217	WITHOUT_CLASSIFICATION	2.11578578283866E-7	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999965682307197	WITHOUT_CLASSIFICATION	3.431769280262307E-6	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999965682307197	WITHOUT_CLASSIFICATION	3.431769280262307E-6	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999966599912341	WITHOUT_CLASSIFICATION	3.3400087659752887E-6	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999908057159858	WITHOUT_CLASSIFICATION	9.194284014287364E-6	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999978420112373	WITHOUT_CLASSIFICATION	2.1579887627468218E-6	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999992025566995	WITHOUT_CLASSIFICATION	7.974433005172505E-7	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999993389076091	WITHOUT_CLASSIFICATION	6.610923909036738E-7	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999987581699792	WITHOUT_CLASSIFICATION	1.2418300208602767E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999912590262867	WITHOUT_CLASSIFICATION	8.740973713195998E-6	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999913312806652	WITHOUT_CLASSIFICATION	8.66871933475391E-6	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9999858434761174	WITHOUT_CLASSIFICATION	1.4156523882508891E-5	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999952730565652	WITHOUT_CLASSIFICATION	4.7269434348454145E-6	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999983188883219	WITHOUT_CLASSIFICATION	1.6811116780928379E-6	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999849976530389	WITHOUT_CLASSIFICATION	1.5002346961072606E-5	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999998171794938	WITHOUT_CLASSIFICATION	1.828205061818482E-7	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999773671168076	WITHOUT_CLASSIFICATION	2.2632883192381736E-5	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999992806971096	WITHOUT_CLASSIFICATION	7.193028902481758E-7	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9999979901033372	WITHOUT_CLASSIFICATION	2.009896662845907E-6	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.999989626089243	WITHOUT_CLASSIFICATION	1.0373910756974454E-5	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9999949279469794	WITHOUT_CLASSIFICATION	5.072053020590435E-6	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.999999964724164	WITHOUT_CLASSIFICATION	3.5275836034107176E-8	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.99996124528862	WITHOUT_CLASSIFICATION	3.875471138003968E-5	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999852203362	WITHOUT_CLASSIFICATION	1.4779663907215383E-8	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999994650214077	WITHOUT_CLASSIFICATION	5.349785922829199E-7	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999932975072487	WITHOUT_CLASSIFICATION	6.702492751268385E-6	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999960320929777	WITHOUT_CLASSIFICATION	3.967907022338362E-6	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999998703894653	WITHOUT_CLASSIFICATION	1.296105348687858E-7	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999992588607503	WITHOUT_CLASSIFICATION	7.411392496775753E-7	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.999998694382332	WITHOUT_CLASSIFICATION	1.3056176680571908E-6	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999928359683196	WITHOUT_CLASSIFICATION	7.164031680509591E-6	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999856300541149	WITHOUT_CLASSIFICATION	1.4369945885136309E-5	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999898731850534	WITHOUT_CLASSIFICATION	1.0126814946522143E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999566072042	WITHOUT_CLASSIFICATION	4.3392795777648966E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999566072042	WITHOUT_CLASSIFICATION	4.3392795777648966E-8	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999994690947555	WITHOUT_CLASSIFICATION	5.309052446141763E-7	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999995695493391	WITHOUT_CLASSIFICATION	4.3045066088952907E-7	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999995695493391	WITHOUT_CLASSIFICATION	4.3045066088952907E-7	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999450747493	WITHOUT_CLASSIFICATION	5.492525070263949E-8	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999450747493	WITHOUT_CLASSIFICATION	5.492525070263949E-8	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999989940091781	WITHOUT_CLASSIFICATION	1.0059908219172092E-6	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999997683172611	WITHOUT_CLASSIFICATION	2.3168273890713586E-7	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999995495128116	WITHOUT_CLASSIFICATION	4.5048718844005275E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999993373474191	WITHOUT_CLASSIFICATION	6.626525809168266E-7	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999998155813127	WITHOUT_CLASSIFICATION	1.844186872087127E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999572533618222	WITHOUT_CLASSIFICATION	4.274663817790033E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999572533618222	WITHOUT_CLASSIFICATION	4.274663817790033E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999998703894653	WITHOUT_CLASSIFICATION	1.296105348687858E-7	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999998703894653	WITHOUT_CLASSIFICATION	1.296105348687858E-7	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999998703894653	WITHOUT_CLASSIFICATION	1.296105348687858E-7	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999992588607503	WITHOUT_CLASSIFICATION	7.411392496775753E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999566072042	WITHOUT_CLASSIFICATION	4.3392795777648966E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999566072042	WITHOUT_CLASSIFICATION	4.3392795777648966E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999566072042	WITHOUT_CLASSIFICATION	4.3392795777648966E-8	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999989940091781	WITHOUT_CLASSIFICATION	1.0059908219172092E-6	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999989940091781	WITHOUT_CLASSIFICATION	1.0059908219172092E-6	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999989940091781	WITHOUT_CLASSIFICATION	1.0059908219172092E-6	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999993373474191	WITHOUT_CLASSIFICATION	6.626525809168266E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999993373474191	WITHOUT_CLASSIFICATION	6.626525809168266E-7	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.99999956665867	WITHOUT_CLASSIFICATION	4.333413300428335E-7	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999998764810426	WITHOUT_CLASSIFICATION	1.2351895733525473E-7	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999996968543547	WITHOUT_CLASSIFICATION	3.0314564528655854E-7	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.963113915963819	WITHOUT_CLASSIFICATION	0.036886084036180995	IMPLEMENTATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9998863803471472	WITHOUT_CLASSIFICATION	1.1361965285285383E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9999624661035079	WITHOUT_CLASSIFICATION	3.753389649212473E-5	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9999624661035079	WITHOUT_CLASSIFICATION	3.753389649212473E-5	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999977639934912	WITHOUT_CLASSIFICATION	2.2360065087515107E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999912590262867	WITHOUT_CLASSIFICATION	8.740973713195998E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999912590262867	WITHOUT_CLASSIFICATION	8.740973713195998E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999912590262867	WITHOUT_CLASSIFICATION	8.740973713195998E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999912590262867	WITHOUT_CLASSIFICATION	8.740973713195998E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999912590262867	WITHOUT_CLASSIFICATION	8.740973713195998E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999997286430551	WITHOUT_CLASSIFICATION	2.7135694492687125E-7	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999997286430551	WITHOUT_CLASSIFICATION	2.7135694492687125E-7	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999997286430551	WITHOUT_CLASSIFICATION	2.7135694492687125E-7	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999999447562643	WITHOUT_CLASSIFICATION	5.5243735662028054E-8	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.999992250002889	WITHOUT_CLASSIFICATION	7.749997110878148E-6	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999992588607503	WITHOUT_CLASSIFICATION	7.411392496775753E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999989940091781	WITHOUT_CLASSIFICATION	1.0059908219172092E-6	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999989940091781	WITHOUT_CLASSIFICATION	1.0059908219172092E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999912590262867	WITHOUT_CLASSIFICATION	8.740973713195998E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999912590262867	WITHOUT_CLASSIFICATION	8.740973713195998E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999997286430551	WITHOUT_CLASSIFICATION	2.7135694492687125E-7	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999977639934912	WITHOUT_CLASSIFICATION	2.2360065087515107E-6	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999986523043977	WITHOUT_CLASSIFICATION	1.3476956024420213E-6	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.9999994345696768	WITHOUT_CLASSIFICATION	5.654303231197127E-7	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999986270586255	WITHOUT_CLASSIFICATION	1.3729413744612539E-6	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999972172286734	WITHOUT_CLASSIFICATION	2.78277132662542E-6	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999985810272572	WITHOUT_CLASSIFICATION	1.4189727428153619E-6	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.999999512420749	WITHOUT_CLASSIFICATION	4.87579250895543E-7	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999459062405782	WITHOUT_CLASSIFICATION	5.4093759421717404E-5	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999975148990474	WITHOUT_CLASSIFICATION	2.4851009525978564E-6	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999962511214057	WITHOUT_CLASSIFICATION	3.7488785943130344E-6	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.999999590239862	WITHOUT_CLASSIFICATION	4.097601381065544E-7	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999651924431707	WITHOUT_CLASSIFICATION	3.480755682920312E-5	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999979591843148	WITHOUT_CLASSIFICATION	2.0408156853297813E-6	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999885641068943	WITHOUT_CLASSIFICATION	1.1435893105729305E-5	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999807861512557	WITHOUT_CLASSIFICATION	1.9213848744346964E-5	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999996008448394	WITHOUT_CLASSIFICATION	3.991551605677851E-7	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999955548267749	WITHOUT_CLASSIFICATION	4.445173225093924E-6	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999887549784987	WITHOUT_CLASSIFICATION	1.1245021501305788E-5	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999999191199432	WITHOUT_CLASSIFICATION	8.088005680333649E-8	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.999931484061237	WITHOUT_CLASSIFICATION	6.851593876296907E-5	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999998667973271	WITHOUT_CLASSIFICATION	1.3320267276134324E-7	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999993463211463	WITHOUT_CLASSIFICATION	6.536788536170615E-7	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999903547279219	WITHOUT_CLASSIFICATION	9.645272078179627E-6	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999976236647313	WITHOUT_CLASSIFICATION	2.376335268612792E-6	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999994918185957	WITHOUT_CLASSIFICATION	5.081814043869612E-7	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999990065923069	WITHOUT_CLASSIFICATION	9.934076931361353E-7	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999996725651806	WITHOUT_CLASSIFICATION	3.27434819348931E-7	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.999999177778828	WITHOUT_CLASSIFICATION	8.222211720482406E-7	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999996235279209	WITHOUT_CLASSIFICATION	3.7647207906886177E-7	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999997064350424	WITHOUT_CLASSIFICATION	2.9356495759512754E-7	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999958849321556	WITHOUT_CLASSIFICATION	4.1150678443554926E-6	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999999934704461	WITHOUT_CLASSIFICATION	6.529553921621128E-9	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999332086561	WITHOUT_CLASSIFICATION	6.679134383688424E-8	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999998507565653	WITHOUT_CLASSIFICATION	1.4924343479754885E-7	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999664167804	WITHOUT_CLASSIFICATION	3.358321971569258E-8	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999986523043977	WITHOUT_CLASSIFICATION	1.3476956024420213E-6	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999844280718146	WITHOUT_CLASSIFICATION	1.5571928185295097E-5	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999951601610018	WITHOUT_CLASSIFICATION	4.839838998214053E-6	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999987688269014	WITHOUT_CLASSIFICATION	1.2311730985483463E-6	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.999997297311938	WITHOUT_CLASSIFICATION	2.702688062137785E-6	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.999997297311938	WITHOUT_CLASSIFICATION	2.702688062137785E-6	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9999951273449494	WITHOUT_CLASSIFICATION	4.872655050608322E-6	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9999951273449494	WITHOUT_CLASSIFICATION	4.872655050608322E-6	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999999841525403	WITHOUT_CLASSIFICATION	1.584745965078904E-8	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999997951936312	WITHOUT_CLASSIFICATION	2.0480636874162938E-7	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999995989787139	WITHOUT_CLASSIFICATION	4.0102128611622725E-7	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.999996494603263	WITHOUT_CLASSIFICATION	3.5053967369157116E-6	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999998133010923	WITHOUT_CLASSIFICATION	1.8669890776875273E-7	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999992152137134	WITHOUT_CLASSIFICATION	7.84786286500957E-7	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999999069387898	WITHOUT_CLASSIFICATION	9.306121022157752E-8	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999940806148123	WITHOUT_CLASSIFICATION	5.9193851876799855E-6	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999988221683755	WITHOUT_CLASSIFICATION	1.1778316244272507E-6	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999868128491	WITHOUT_CLASSIFICATION	1.3187150985638064E-8	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999661764006	WITHOUT_CLASSIFICATION	3.382359935301863E-8	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999983382418914	WITHOUT_CLASSIFICATION	1.6617581085243828E-6	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999983382418914	WITHOUT_CLASSIFICATION	1.6617581085243828E-6	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999999958785732	WITHOUT_CLASSIFICATION	4.121426755674805E-9	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999996744137334	WITHOUT_CLASSIFICATION	3.255862666262833E-7	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999953391911424	WITHOUT_CLASSIFICATION	4.6608088575908925E-6	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999953391911424	WITHOUT_CLASSIFICATION	4.6608088575908925E-6	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999997849945564	WITHOUT_CLASSIFICATION	2.1500544354634565E-7	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999948025129	WITHOUT_CLASSIFICATION	5.197487138275755E-9	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999980407246805	WITHOUT_CLASSIFICATION	1.959275319590205E-6	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999999233395515	WITHOUT_CLASSIFICATION	7.666044848262934E-8	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999998442712523	WITHOUT_CLASSIFICATION	1.5572874774586702E-7	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999945297206493	WITHOUT_CLASSIFICATION	5.470279350693889E-6	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9999807973600813	WITHOUT_CLASSIFICATION	1.9202639918637123E-5	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999998780502873	WITHOUT_CLASSIFICATION	1.219497126387749E-7	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999999760312122	WITHOUT_CLASSIFICATION	2.3968787893301685E-8	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.999999296471765	WITHOUT_CLASSIFICATION	7.035282350224348E-7	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999878102519074	WITHOUT_CLASSIFICATION	1.2189748092485192E-5	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.999955518450454	WITHOUT_CLASSIFICATION	4.448154954596137E-5	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999993504534739	WITHOUT_CLASSIFICATION	6.495465260099583E-7	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.999996970135935	WITHOUT_CLASSIFICATION	3.029864064906232E-6	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999985785438	WITHOUT_CLASSIFICATION	1.4214561431757204E-9	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.999998991178543	WITHOUT_CLASSIFICATION	1.0088214570502066E-6	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999994238860539	WITHOUT_CLASSIFICATION	5.761139459922087E-7	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999982746236171	WITHOUT_CLASSIFICATION	1.7253763828009854E-6	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999999748879295	WITHOUT_CLASSIFICATION	2.5112070566220908E-8	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999744602267	WITHOUT_CLASSIFICATION	2.553977333563249E-8	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9313896925215187	IMPLEMENTATION	0.06861030747848126	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999985354964595	WITHOUT_CLASSIFICATION	1.4645035405494775E-6	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999992261926242	WITHOUT_CLASSIFICATION	7.738073758254157E-7	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999913462279256	WITHOUT_CLASSIFICATION	8.653772074445836E-6	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999996854090624	WITHOUT_CLASSIFICATION	3.1459093759329663E-7	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999944394263689	WITHOUT_CLASSIFICATION	5.560573631013959E-6	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9999995311495755	WITHOUT_CLASSIFICATION	4.688504245278287E-7	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999976940820648	WITHOUT_CLASSIFICATION	2.3059179351752403E-6	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999999687801927	WITHOUT_CLASSIFICATION	3.1219807227484766E-8	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999997800159649	WITHOUT_CLASSIFICATION	2.1998403506171854E-7	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999994594700311	WITHOUT_CLASSIFICATION	5.405299689342434E-7	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999979760753329	WITHOUT_CLASSIFICATION	2.0239246670873422E-6	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.999999964183506	WITHOUT_CLASSIFICATION	3.5816493903493804E-8	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999995688373207	WITHOUT_CLASSIFICATION	4.311626793828923E-7	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999995688373207	WITHOUT_CLASSIFICATION	4.311626793828923E-7	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999994338202272	WITHOUT_CLASSIFICATION	5.661797729694651E-7	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999889240797322	WITHOUT_CLASSIFICATION	1.107592026779547E-5	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999999824786426	WITHOUT_CLASSIFICATION	1.752135732501857E-8	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9999966414432423	WITHOUT_CLASSIFICATION	3.3585567578073538E-6	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9999796557928565	WITHOUT_CLASSIFICATION	2.034420714351897E-5	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999979705420676	WITHOUT_CLASSIFICATION	2.029457932387089E-6	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999960226520975	WITHOUT_CLASSIFICATION	3.977347902423782E-6	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999992011065247	WITHOUT_CLASSIFICATION	7.988934752559231E-7	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999998469440566	WITHOUT_CLASSIFICATION	1.5305594337826093E-7	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9999896580576149	WITHOUT_CLASSIFICATION	1.034194238518086E-5	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.999999896855471	WITHOUT_CLASSIFICATION	1.0314452894692694E-7	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.999969591895586	WITHOUT_CLASSIFICATION	3.0408104413955425E-5	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999963000365788	WITHOUT_CLASSIFICATION	3.69996342125049E-6	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999977282153395	WITHOUT_CLASSIFICATION	2.2717846605008792E-6	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999986838296328	WITHOUT_CLASSIFICATION	1.316170367184875E-6	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999991035484557	WITHOUT_CLASSIFICATION	8.964515442754439E-7	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999998869108427	WITHOUT_CLASSIFICATION	1.1308915729808117E-7	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.999991762431682	WITHOUT_CLASSIFICATION	8.237568318010808E-6	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9989938246659135	WITHOUT_CLASSIFICATION	0.0010061753340864716	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.999919543276401	WITHOUT_CLASSIFICATION	8.045672359901854E-5	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999999748689513	WITHOUT_CLASSIFICATION	2.5131048765008458E-8	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999716898786954	WITHOUT_CLASSIFICATION	2.8310121304635185E-5	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999415679670856	WITHOUT_CLASSIFICATION	5.8432032914513555E-5	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999953625643105	WITHOUT_CLASSIFICATION	4.637435689447781E-6	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9998428773136018	WITHOUT_CLASSIFICATION	1.5712268639825878E-4	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9997744445882827	WITHOUT_CLASSIFICATION	2.255554117173465E-4	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999806275982	WITHOUT_CLASSIFICATION	1.937240172250234E-8	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.999999923393405	WITHOUT_CLASSIFICATION	7.66065949260935E-8	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9999930818275423	WITHOUT_CLASSIFICATION	6.918172457657233E-6	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999996633963354	WITHOUT_CLASSIFICATION	3.366036645594544E-7	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.99999865049086	WITHOUT_CLASSIFICATION	1.3495091400303505E-6	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999996605252042	WITHOUT_CLASSIFICATION	3.394747957754274E-7	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999979060835605	WITHOUT_CLASSIFICATION	2.0939164395575497E-6	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999993651065355	WITHOUT_CLASSIFICATION	6.348934644256946E-7	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999984954817479	WITHOUT_CLASSIFICATION	1.5045182520734906E-6	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999995206330878	WITHOUT_CLASSIFICATION	4.793669121094835E-7	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999539774370617	WITHOUT_CLASSIFICATION	4.6022562938303205E-5	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9999989799754799	WITHOUT_CLASSIFICATION	1.0200245200494877E-6	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9999909206042104	WITHOUT_CLASSIFICATION	9.079395789656399E-6	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999995323122985	WITHOUT_CLASSIFICATION	4.676877014366224E-7	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999989345684218	WITHOUT_CLASSIFICATION	1.0654315781700029E-6	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999983415313699	WITHOUT_CLASSIFICATION	1.6584686301139467E-6	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999983415313699	WITHOUT_CLASSIFICATION	1.6584686301139467E-6	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999979234069702	WITHOUT_CLASSIFICATION	2.076593029714284E-6	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999981909009534	WITHOUT_CLASSIFICATION	1.8090990465563845E-6	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999922953464846	WITHOUT_CLASSIFICATION	7.704653515345498E-6	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999916395128217	WITHOUT_CLASSIFICATION	8.360487178305635E-6	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999987304340531	WITHOUT_CLASSIFICATION	1.2695659468732779E-6	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999999868270769	WITHOUT_CLASSIFICATION	1.3172923093745353E-8	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999964134175	WITHOUT_CLASSIFICATION	3.586582582430134E-9	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999631833595066	WITHOUT_CLASSIFICATION	3.681664049333734E-5	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999999586464903	WITHOUT_CLASSIFICATION	4.1353509744577986E-8	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999997095094572	WITHOUT_CLASSIFICATION	2.904905429025324E-7	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999996678734063	WITHOUT_CLASSIFICATION	3.3212659357471506E-7	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999998919512983	WITHOUT_CLASSIFICATION	1.0804870153728895E-7	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999780841573221	WITHOUT_CLASSIFICATION	2.1915842677866535E-5	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.999979044702591	WITHOUT_CLASSIFICATION	2.0955297408918783E-5	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999998717209744	WITHOUT_CLASSIFICATION	1.2827902553314937E-7	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.999521092556959	WITHOUT_CLASSIFICATION	4.7890744304101066E-4	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999962642306266	WITHOUT_CLASSIFICATION	3.7357693732992907E-6	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999995245228516	WITHOUT_CLASSIFICATION	4.7547714838971244E-7	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.999997038490056	WITHOUT_CLASSIFICATION	2.961509943954283E-6	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.973604284440087	WITHOUT_CLASSIFICATION	0.026395715559912988	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999997797632347	WITHOUT_CLASSIFICATION	2.2023676526948404E-7	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999962584282709	WITHOUT_CLASSIFICATION	3.741571729128128E-6	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999991039786	WITHOUT_CLASSIFICATION	8.960213385656655E-10	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999935784449046	WITHOUT_CLASSIFICATION	6.421555095413098E-6	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999998408764441	WITHOUT_CLASSIFICATION	1.591235559288792E-7	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9998552543008746	WITHOUT_CLASSIFICATION	1.4474569912537494E-4	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999999349166371	WITHOUT_CLASSIFICATION	6.50833629506791E-8	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999976583565018	WITHOUT_CLASSIFICATION	2.3416434982876826E-6	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999994851823936	WITHOUT_CLASSIFICATION	5.148176064051822E-7	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999995874793296	WITHOUT_CLASSIFICATION	4.125206704484232E-7	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999995756701626	WITHOUT_CLASSIFICATION	4.2432983730297504E-7	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999998437823604	WITHOUT_CLASSIFICATION	1.5621763962138868E-7	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999995874793296	WITHOUT_CLASSIFICATION	4.125206704484232E-7	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999964701403732	WITHOUT_CLASSIFICATION	3.5298596268200077E-6	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.999999987925002	WITHOUT_CLASSIFICATION	1.2074997918365474E-8	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9710277641233683	WITHOUT_CLASSIFICATION	0.02897223587663158	IMPLEMENTATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9824757554724884	IMPLEMENTATION	0.017524244527511487	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999995434381207	WITHOUT_CLASSIFICATION	4.565618792392198E-7	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999985709330873	WITHOUT_CLASSIFICATION	1.4290669126386116E-6	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999989146941595	WITHOUT_CLASSIFICATION	1.085305840546704E-6	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999999662794582	WITHOUT_CLASSIFICATION	3.372054179606487E-8	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999995859402	WITHOUT_CLASSIFICATION	4.1405985302517297E-10	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999744602267	WITHOUT_CLASSIFICATION	2.553977333563249E-8	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999996968543547	WITHOUT_CLASSIFICATION	3.0314564528655854E-7	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999136765578	WITHOUT_CLASSIFICATION	8.632344225563633E-8	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999697535636183	WITHOUT_CLASSIFICATION	3.0246436381792987E-5	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999987000888786	WITHOUT_CLASSIFICATION	1.2999111214535119E-6	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999913685667955	WITHOUT_CLASSIFICATION	8.63143320462704E-6	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.999999599800154	WITHOUT_CLASSIFICATION	4.00199845919819E-7	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9956467645791711	WITHOUT_CLASSIFICATION	0.004353235420828859	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999949420403897	WITHOUT_CLASSIFICATION	5.0579596102544905E-6	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999999895620743	WITHOUT_CLASSIFICATION	1.0437925711772059E-8	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999999609027597	WITHOUT_CLASSIFICATION	3.9097240275827855E-8	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.999996157920707	WITHOUT_CLASSIFICATION	3.842079293124339E-6	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9999909686511266	WITHOUT_CLASSIFICATION	9.031348873416252E-6	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9999846343433145	WITHOUT_CLASSIFICATION	1.5365656685514526E-5	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999995748050061	WITHOUT_CLASSIFICATION	4.251949938774884E-7	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9930015481972286	WITHOUT_CLASSIFICATION	0.006998451802771441	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999956955326139	WITHOUT_CLASSIFICATION	4.30446738614676E-6	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.999994596228818	WITHOUT_CLASSIFICATION	5.403771181979068E-6	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999994212467685	WITHOUT_CLASSIFICATION	5.787532314661361E-7	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999997701003974	WITHOUT_CLASSIFICATION	2.2989960251844526E-7	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.99999278080259	WITHOUT_CLASSIFICATION	7.219197409959684E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.99999278080259	WITHOUT_CLASSIFICATION	7.219197409959684E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999982077501678	WITHOUT_CLASSIFICATION	1.7922498322552766E-6	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999548129692	WITHOUT_CLASSIFICATION	4.518703090224925E-8	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.999992483143664	WITHOUT_CLASSIFICATION	7.516856336068681E-6	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.919332618588563	IMPLEMENTATION	0.080667381411437	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.919332618588563	IMPLEMENTATION	0.080667381411437	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.919332618588563	IMPLEMENTATION	0.080667381411437	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.919332618588563	IMPLEMENTATION	0.080667381411437	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999909122218722	WITHOUT_CLASSIFICATION	9.087778127825115E-6	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.999581702826571	WITHOUT_CLASSIFICATION	4.1829717342906477E-4	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9999990473197604	WITHOUT_CLASSIFICATION	9.526802395785561E-7	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9989633370940647	WITHOUT_CLASSIFICATION	0.0010366629059352748	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999911570073342	WITHOUT_CLASSIFICATION	8.842992665824554E-6	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999887422199254	WITHOUT_CLASSIFICATION	1.125778007462247E-5	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999776427181655	WITHOUT_CLASSIFICATION	2.2357281834572827E-5	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999776427181655	WITHOUT_CLASSIFICATION	2.2357281834572827E-5	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999996705143323	WITHOUT_CLASSIFICATION	3.2948566769123153E-7	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9999974861457479	WITHOUT_CLASSIFICATION	2.513854252001662E-6	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999988938399926	WITHOUT_CLASSIFICATION	1.1061600074469939E-6	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.999997358706579	WITHOUT_CLASSIFICATION	2.6412934210504105E-6	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999947000015587	WITHOUT_CLASSIFICATION	5.299998441286432E-6	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999988826400357	WITHOUT_CLASSIFICATION	1.117359964298384E-6	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.99999992991893	WITHOUT_CLASSIFICATION	7.008106993716128E-8	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999948070954214	WITHOUT_CLASSIFICATION	5.192904578552423E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999882229374162	WITHOUT_CLASSIFICATION	1.1777062583689444E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999882229374162	WITHOUT_CLASSIFICATION	1.1777062583689444E-5	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999998437823604	WITHOUT_CLASSIFICATION	1.5621763962138868E-7	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9999941814297385	WITHOUT_CLASSIFICATION	5.818570261409887E-6	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9999947275195494	WITHOUT_CLASSIFICATION	5.272480450585418E-6	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.999997801384356	WITHOUT_CLASSIFICATION	2.1986156439706545E-6	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999797888982	WITHOUT_CLASSIFICATION	2.021110185373807E-8	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9999965608092881	WITHOUT_CLASSIFICATION	3.4391907119855083E-6	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999988886058903	WITHOUT_CLASSIFICATION	1.1113941097888494E-6	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999960943054064	WITHOUT_CLASSIFICATION	3.905694593541585E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999997466009475	WITHOUT_CLASSIFICATION	2.533990524978269E-7	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999997466009475	WITHOUT_CLASSIFICATION	2.533990524978269E-7	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999934727913365	WITHOUT_CLASSIFICATION	6.527208663456765E-6	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999997109801999	WITHOUT_CLASSIFICATION	2.8901980009079224E-7	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999999363047	WITHOUT_CLASSIFICATION	6.369530006453343E-8	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999982130427575	WITHOUT_CLASSIFICATION	1.7869572425771785E-6	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999840184717549	WITHOUT_CLASSIFICATION	1.5981528245116674E-5	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9999963398918982	WITHOUT_CLASSIFICATION	3.6601081019087147E-6	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999979166492445	WITHOUT_CLASSIFICATION	2.083350755507421E-6	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999997522769245	WITHOUT_CLASSIFICATION	2.477230755434283E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999997522769245	WITHOUT_CLASSIFICATION	2.477230755434283E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999997522769245	WITHOUT_CLASSIFICATION	2.477230755434283E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999997522769245	WITHOUT_CLASSIFICATION	2.477230755434283E-7	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999883615138501	WITHOUT_CLASSIFICATION	1.1638486149915229E-5	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999999210346	WITHOUT_CLASSIFICATION	7.896542599781433E-11	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999988974440227	WITHOUT_CLASSIFICATION	1.1025559772282378E-6	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999969524561304	WITHOUT_CLASSIFICATION	3.047543869580479E-6	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999997655270493	WITHOUT_CLASSIFICATION	2.3447295061605936E-7	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9999956719384676	WITHOUT_CLASSIFICATION	4.328061532361371E-6	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999677756061	WITHOUT_CLASSIFICATION	3.222439392605681E-8	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999996566732109	WITHOUT_CLASSIFICATION	3.433267890929734E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999996566732109	WITHOUT_CLASSIFICATION	3.433267890929734E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999996566732109	WITHOUT_CLASSIFICATION	3.433267890929734E-6	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999989825867794	WITHOUT_CLASSIFICATION	1.0174132205983797E-6	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999953308429291	WITHOUT_CLASSIFICATION	4.669157070855879E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999820268550693	WITHOUT_CLASSIFICATION	1.7973144930629525E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999820268550693	WITHOUT_CLASSIFICATION	1.7973144930629525E-5	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999945628381164	WITHOUT_CLASSIFICATION	5.437161883676242E-6	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999992551205896	WITHOUT_CLASSIFICATION	7.448794104759217E-7	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999238633724565	WITHOUT_CLASSIFICATION	7.613662754343897E-5	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9999978971119465	WITHOUT_CLASSIFICATION	2.102888053425103E-6	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999925243555	WITHOUT_CLASSIFICATION	7.475644643881491E-9	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.999995933800885	WITHOUT_CLASSIFICATION	4.0661991149622134E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999988519260685	WITHOUT_CLASSIFICATION	1.1480739315897385E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999988519260685	WITHOUT_CLASSIFICATION	1.1480739315897385E-6	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999335841723	WITHOUT_CLASSIFICATION	6.641582772093213E-8	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.999574253681071	WITHOUT_CLASSIFICATION	4.257463189289646E-4	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.99999903300211	WITHOUT_CLASSIFICATION	9.669978900078268E-7	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999977942372652	WITHOUT_CLASSIFICATION	2.2057627348599526E-6	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9880580198573464	WITHOUT_CLASSIFICATION	0.011941980142653493	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999677348886	WITHOUT_CLASSIFICATION	3.226511138572146E-8	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9999992964735851	WITHOUT_CLASSIFICATION	7.035264148130666E-7	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.99996937073887	WITHOUT_CLASSIFICATION	3.062926112989391E-5	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999882097591601	WITHOUT_CLASSIFICATION	1.1790240839817877E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999956378394352	WITHOUT_CLASSIFICATION	4.362160564817354E-6	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999999680700303	WITHOUT_CLASSIFICATION	3.192996965501419E-8	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999992437405311	WITHOUT_CLASSIFICATION	7.562594689922587E-7	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999997660114639	WITHOUT_CLASSIFICATION	2.339885361148755E-7	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9998164372581568	WITHOUT_CLASSIFICATION	1.8356274184312294E-4	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999996022775912	WITHOUT_CLASSIFICATION	3.9772240872184104E-7	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999989822864822	WITHOUT_CLASSIFICATION	1.0177135177322886E-6	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999495205369834	WITHOUT_CLASSIFICATION	5.047946301664173E-5	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999999155405158	WITHOUT_CLASSIFICATION	8.445948417053649E-8	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999927210324089	WITHOUT_CLASSIFICATION	7.278967591138679E-6	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999992601659999	WITHOUT_CLASSIFICATION	7.398340001755274E-7	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999997557759136	WITHOUT_CLASSIFICATION	2.4422408646152665E-7	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999173637616935	WITHOUT_CLASSIFICATION	8.263623830644551E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9976461060529007	WITHOUT_CLASSIFICATION	0.0023538939470992264	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9976461060529007	WITHOUT_CLASSIFICATION	0.0023538939470992264	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9976461060529007	WITHOUT_CLASSIFICATION	0.0023538939470992264	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9976461060529007	WITHOUT_CLASSIFICATION	0.0023538939470992264	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9976461060529007	WITHOUT_CLASSIFICATION	0.0023538939470992264	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9976461060529007	WITHOUT_CLASSIFICATION	0.0023538939470992264	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9976461060529007	WITHOUT_CLASSIFICATION	0.0023538939470992264	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9976461060529007	WITHOUT_CLASSIFICATION	0.0023538939470992264	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999999926213503	WITHOUT_CLASSIFICATION	7.378649784017751E-9	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9999996155580535	WITHOUT_CLASSIFICATION	3.8444194648161175E-7	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.999999746927633	WITHOUT_CLASSIFICATION	2.5307236687965725E-7	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999253257877914	WITHOUT_CLASSIFICATION	7.46742122086127E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999964134175	WITHOUT_CLASSIFICATION	3.586582582430134E-9	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999964134175	WITHOUT_CLASSIFICATION	3.586582582430134E-9	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999959459895948	WITHOUT_CLASSIFICATION	4.054010405101866E-6	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999999625667803	WITHOUT_CLASSIFICATION	3.743321978145139E-8	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999961953226244	WITHOUT_CLASSIFICATION	3.804677375635635E-6	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999999847908747	WITHOUT_CLASSIFICATION	1.5209125244516708E-8	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999933616865356	WITHOUT_CLASSIFICATION	6.638313464296921E-6	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9999969741539217	WITHOUT_CLASSIFICATION	3.0258460782670966E-6	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9999983115698511	WITHOUT_CLASSIFICATION	1.6884301488989013E-6	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9998855715762913	WITHOUT_CLASSIFICATION	1.1442842370860505E-4	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999885216791066	WITHOUT_CLASSIFICATION	1.1478320893328381E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999912795895	WITHOUT_CLASSIFICATION	8.720410528608031E-9	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999912795895	WITHOUT_CLASSIFICATION	8.720410528608031E-9	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999912795895	WITHOUT_CLASSIFICATION	8.720410528608031E-9	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999345300122577	WITHOUT_CLASSIFICATION	6.54699877421793E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999345300122577	WITHOUT_CLASSIFICATION	6.54699877421793E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999345300122577	WITHOUT_CLASSIFICATION	6.54699877421793E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999345300122577	WITHOUT_CLASSIFICATION	6.54699877421793E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999345300122577	WITHOUT_CLASSIFICATION	6.54699877421793E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999345300122577	WITHOUT_CLASSIFICATION	6.54699877421793E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999345300122577	WITHOUT_CLASSIFICATION	6.54699877421793E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999345300122577	WITHOUT_CLASSIFICATION	6.54699877421793E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999345300122577	WITHOUT_CLASSIFICATION	6.54699877421793E-5	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999994042476608	WITHOUT_CLASSIFICATION	5.957523392100268E-7	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999639323406453	WITHOUT_CLASSIFICATION	3.606765935466457E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999683958167678	WITHOUT_CLASSIFICATION	3.160418323232738E-5	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999485692353522	WITHOUT_CLASSIFICATION	5.1430764647775924E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999345300122577	WITHOUT_CLASSIFICATION	6.54699877421793E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999345300122577	WITHOUT_CLASSIFICATION	6.54699877421793E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999345300122577	WITHOUT_CLASSIFICATION	6.54699877421793E-5	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999869832757925	WITHOUT_CLASSIFICATION	1.3016724207645161E-5	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999985610779472	WITHOUT_CLASSIFICATION	1.4389220529012783E-6	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999988628593773	WITHOUT_CLASSIFICATION	1.137140622714484E-6	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9997649342188665	WITHOUT_CLASSIFICATION	2.350657811334886E-4	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9997649342188665	WITHOUT_CLASSIFICATION	2.350657811334886E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999909004145024	WITHOUT_CLASSIFICATION	9.099585497651368E-6	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.99954345744968	WITHOUT_CLASSIFICATION	4.565425503200004E-4	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999999120045958	WITHOUT_CLASSIFICATION	8.799540422884036E-8	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999999989094507	WITHOUT_CLASSIFICATION	1.0905493387968462E-9	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9998387964952697	WITHOUT_CLASSIFICATION	1.6120350473031812E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9998387964952697	WITHOUT_CLASSIFICATION	1.6120350473031812E-4	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999997960783464	WITHOUT_CLASSIFICATION	2.0392165356249171E-7	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999460374068	WITHOUT_CLASSIFICATION	5.396259306181622E-8	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999921455254447	WITHOUT_CLASSIFICATION	7.85447455529028E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999430995079566	WITHOUT_CLASSIFICATION	5.690049204345764E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999430995079566	WITHOUT_CLASSIFICATION	5.690049204345764E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999430995079566	WITHOUT_CLASSIFICATION	5.690049204345764E-5	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999989989581692	WITHOUT_CLASSIFICATION	1.0010418307699607E-6	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999992256388063	WITHOUT_CLASSIFICATION	7.743611936682392E-7	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999992256388063	WITHOUT_CLASSIFICATION	7.743611936682392E-7	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999985380058242	WITHOUT_CLASSIFICATION	1.4619941759233444E-6	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999985380058242	WITHOUT_CLASSIFICATION	1.4619941759233444E-6	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999985728411623	WITHOUT_CLASSIFICATION	1.4271588377248304E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.999958601740197	WITHOUT_CLASSIFICATION	4.139825980306778E-5	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999986056483656	WITHOUT_CLASSIFICATION	1.394351634436869E-6	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999981006185109	WITHOUT_CLASSIFICATION	1.8993814891435262E-6	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.999992986495144	WITHOUT_CLASSIFICATION	7.013504855949623E-6	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999945540575175	WITHOUT_CLASSIFICATION	5.445942482585922E-6	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999741050625514	WITHOUT_CLASSIFICATION	2.5894937448687477E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999572533618222	WITHOUT_CLASSIFICATION	4.274663817790033E-5	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999995654138033	WITHOUT_CLASSIFICATION	4.3458619676617115E-7	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999929102719	WITHOUT_CLASSIFICATION	7.089728121077506E-9	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9642099907010029	WITHOUT_CLASSIFICATION	0.03579000929899701	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999984900258848	WITHOUT_CLASSIFICATION	1.5099741152103127E-6	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999998970210254	WITHOUT_CLASSIFICATION	1.0297897454716491E-7	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999999897445164	WITHOUT_CLASSIFICATION	1.0255483498594185E-8	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.999995045103245	WITHOUT_CLASSIFICATION	4.954896755072332E-6	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999998244195584	WITHOUT_CLASSIFICATION	1.7558044168798324E-7	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999969889283069	WITHOUT_CLASSIFICATION	3.0110716932239695E-6	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999997570612987	WITHOUT_CLASSIFICATION	2.429387012601694E-7	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999999793645299	WITHOUT_CLASSIFICATION	2.0635470065004313E-8	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999992100251569	WITHOUT_CLASSIFICATION	7.899748430810858E-7	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999136765578	WITHOUT_CLASSIFICATION	8.632344225563633E-8	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999266040230022	WITHOUT_CLASSIFICATION	7.339597699785462E-5	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999989350892472	WITHOUT_CLASSIFICATION	1.0649107528369397E-6	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999987508704101	WITHOUT_CLASSIFICATION	1.2491295898854456E-6	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999931000639423	WITHOUT_CLASSIFICATION	6.899936057663591E-6	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999979922451628	WITHOUT_CLASSIFICATION	2.00775483714353E-6	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999992089432715	WITHOUT_CLASSIFICATION	7.910567285479904E-7	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999999932039183	WITHOUT_CLASSIFICATION	6.796081733374415E-9	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999938571283533	WITHOUT_CLASSIFICATION	6.142871646655883E-6	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999993723546817	WITHOUT_CLASSIFICATION	6.276453182083198E-7	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999961138287469	WITHOUT_CLASSIFICATION	3.886171253074622E-6	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.999996811651888	WITHOUT_CLASSIFICATION	3.188348112021867E-6	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999994735270028	WITHOUT_CLASSIFICATION	5.264729973153816E-7	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999999739508693	WITHOUT_CLASSIFICATION	2.6049130746767648E-8	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999939328014799	WITHOUT_CLASSIFICATION	6.067198520162047E-6	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999998154879711	WITHOUT_CLASSIFICATION	1.845120290156623E-7	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999976178569824	WITHOUT_CLASSIFICATION	2.3821430175686586E-6	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999876923831507	WITHOUT_CLASSIFICATION	1.2307616849429111E-5	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999977720255704	WITHOUT_CLASSIFICATION	2.2279744295943617E-6	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999996357297491	WITHOUT_CLASSIFICATION	3.6427025078016126E-7	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999995340752198	WITHOUT_CLASSIFICATION	4.659247802508298E-7	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999998616750835	WITHOUT_CLASSIFICATION	1.3832491643022964E-7	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999999449187831	WITHOUT_CLASSIFICATION	5.508121696951933E-8	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999999668766592	WITHOUT_CLASSIFICATION	3.312334090585747E-8	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999999804170339	WITHOUT_CLASSIFICATION	1.9582966091638466E-8	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.999999580204347	WITHOUT_CLASSIFICATION	4.1979565308895243E-7	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9999998588252889	WITHOUT_CLASSIFICATION	1.411747111832876E-7	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999949486403	WITHOUT_CLASSIFICATION	5.051359701605076E-9	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999747536283	WITHOUT_CLASSIFICATION	2.5246371672969317E-8	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999969901672513	WITHOUT_CLASSIFICATION	3.00983274881879E-6	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999994797591412	WITHOUT_CLASSIFICATION	5.202408587252959E-7	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999943144055646	WITHOUT_CLASSIFICATION	5.685594435391447E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.999943144055646	WITHOUT_CLASSIFICATION	5.685594435391447E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999813578929	WITHOUT_CLASSIFICATION	1.864210715580083E-8	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999813578929	WITHOUT_CLASSIFICATION	1.864210715580083E-8	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998562152141887	WITHOUT_CLASSIFICATION	1.4378478581125425E-4	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998562152141887	WITHOUT_CLASSIFICATION	1.4378478581125425E-4	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999946243223062	WITHOUT_CLASSIFICATION	5.375677693713037E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999946243223062	WITHOUT_CLASSIFICATION	5.375677693713037E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999979222681883	WITHOUT_CLASSIFICATION	2.0777318117248174E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999979222681883	WITHOUT_CLASSIFICATION	2.0777318117248174E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999979222681883	WITHOUT_CLASSIFICATION	2.0777318117248174E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999979222681883	WITHOUT_CLASSIFICATION	2.0777318117248174E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999979222681883	WITHOUT_CLASSIFICATION	2.0777318117248174E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999979222681883	WITHOUT_CLASSIFICATION	2.0777318117248174E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999979222681883	WITHOUT_CLASSIFICATION	2.0777318117248174E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999979222681883	WITHOUT_CLASSIFICATION	2.0777318117248174E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999979222681883	WITHOUT_CLASSIFICATION	2.0777318117248174E-6	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999979289763298	WITHOUT_CLASSIFICATION	2.0710236701430713E-6	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999979289763298	WITHOUT_CLASSIFICATION	2.0710236701430713E-6	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999979289763298	WITHOUT_CLASSIFICATION	2.0710236701430713E-6	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999827514575388	WITHOUT_CLASSIFICATION	1.7248542461118185E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.99999666581364	WITHOUT_CLASSIFICATION	3.334186360008662E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.99999666581364	WITHOUT_CLASSIFICATION	3.334186360008662E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.99999666581364	WITHOUT_CLASSIFICATION	3.334186360008662E-6	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999999713221874	WITHOUT_CLASSIFICATION	2.8677812597664064E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999999713221874	WITHOUT_CLASSIFICATION	2.8677812597664064E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999999713221874	WITHOUT_CLASSIFICATION	2.8677812597664064E-7	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999967095137119	WITHOUT_CLASSIFICATION	3.2904862881569314E-6	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9999974231312224	WITHOUT_CLASSIFICATION	2.5768687775466077E-6	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999908124093335	WITHOUT_CLASSIFICATION	9.187590666431719E-6	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999991628610865	WITHOUT_CLASSIFICATION	8.371389135027242E-6	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999991628610865	WITHOUT_CLASSIFICATION	8.371389135027242E-6	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999991628610865	WITHOUT_CLASSIFICATION	8.371389135027242E-6	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.999998696066415	WITHOUT_CLASSIFICATION	1.303933585089482E-6	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999997971714908	WITHOUT_CLASSIFICATION	2.0282850916850978E-7	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999997971714908	WITHOUT_CLASSIFICATION	2.0282850916850978E-7	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999604518326259	WITHOUT_CLASSIFICATION	3.954816737417012E-5	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.999284750858908	WITHOUT_CLASSIFICATION	7.152491410920918E-4	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.999284750858908	WITHOUT_CLASSIFICATION	7.152491410920918E-4	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9989224373718646	IMPLEMENTATION	0.0010775626281354844	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999610013008933	WITHOUT_CLASSIFICATION	3.899869910672073E-5	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9984830061854573	WITHOUT_CLASSIFICATION	0.0015169938145427272	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998792808529	WITHOUT_CLASSIFICATION	1.2071914707367325E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998792808529	WITHOUT_CLASSIFICATION	1.2071914707367325E-7	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999981636452289	WITHOUT_CLASSIFICATION	1.8363547711150004E-6	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999911194953348	WITHOUT_CLASSIFICATION	8.88050466520695E-6	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999586453757986	WITHOUT_CLASSIFICATION	4.1354624201405486E-5	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999887570325733	WITHOUT_CLASSIFICATION	1.1242967426730139E-5	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999719877648319	WITHOUT_CLASSIFICATION	2.8012235168157038E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998792808529	WITHOUT_CLASSIFICATION	1.2071914707367325E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998792808529	WITHOUT_CLASSIFICATION	1.2071914707367325E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998792808529	WITHOUT_CLASSIFICATION	1.2071914707367325E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998792808529	WITHOUT_CLASSIFICATION	1.2071914707367325E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998792808529	WITHOUT_CLASSIFICATION	1.2071914707367325E-7	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.99999505416334	WITHOUT_CLASSIFICATION	4.9458366600066904E-6	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999885405027314	WITHOUT_CLASSIFICATION	1.1459497268471986E-5	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999998652989643	WITHOUT_CLASSIFICATION	1.3470103559740615E-7	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999981619776886	WITHOUT_CLASSIFICATION	1.8380223113600048E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999999998204974	WITHOUT_CLASSIFICATION	1.7950259745010254E-10	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9995967860414063	WITHOUT_CLASSIFICATION	4.0321395859373394E-4	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999999902470523	WITHOUT_CLASSIFICATION	9.752947694319097E-9	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999781875066579	WITHOUT_CLASSIFICATION	2.1812493342074868E-5	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999961091427	WITHOUT_CLASSIFICATION	3.890857307785879E-9	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999989275914422	WITHOUT_CLASSIFICATION	1.0724085579219173E-6	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999998593480359	WITHOUT_CLASSIFICATION	1.4065196414681647E-7	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999962584282709	WITHOUT_CLASSIFICATION	3.741571729128128E-6	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.999998525276585	WITHOUT_CLASSIFICATION	1.4747234151102807E-6	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999451295584	WITHOUT_CLASSIFICATION	5.4870441618849967E-8	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999996002937503	WITHOUT_CLASSIFICATION	3.9970624964621215E-7	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9912511002225792	WITHOUT_CLASSIFICATION	0.008748899777420901	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999861892640025	WITHOUT_CLASSIFICATION	1.3810735997379041E-5	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.999996229626518	WITHOUT_CLASSIFICATION	3.7703734820135043E-6	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999988810300476	WITHOUT_CLASSIFICATION	1.118969952413419E-6	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.999997832388455	WITHOUT_CLASSIFICATION	2.167611545066419E-6	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999994577836685	WITHOUT_CLASSIFICATION	5.422163313761956E-7	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999972393212291	WITHOUT_CLASSIFICATION	2.7606787708989895E-6	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999997095094572	WITHOUT_CLASSIFICATION	2.904905429025324E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999983819914796	WITHOUT_CLASSIFICATION	1.6180085204555282E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999983819914796	WITHOUT_CLASSIFICATION	1.6180085204555282E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999983819914796	WITHOUT_CLASSIFICATION	1.6180085204555282E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999983819914796	WITHOUT_CLASSIFICATION	1.6180085204555282E-6	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999973396616495	WITHOUT_CLASSIFICATION	2.660338350508035E-6	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999999815046785	WITHOUT_CLASSIFICATION	1.8495321565318005E-8	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.999999952320919	WITHOUT_CLASSIFICATION	4.767908095075672E-8	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.999999952320919	WITHOUT_CLASSIFICATION	4.767908095075672E-8	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999998989704734	WITHOUT_CLASSIFICATION	1.0102952671476367E-7	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999995936037978	WITHOUT_CLASSIFICATION	4.063962022729816E-7	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999963501588	WITHOUT_CLASSIFICATION	3.649841118385093E-9	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999946657647678	WITHOUT_CLASSIFICATION	5.3342352321733085E-6	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999999655389133	WITHOUT_CLASSIFICATION	3.44610866997605E-8	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999809877880199	WITHOUT_CLASSIFICATION	1.9012211980062952E-5	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999749392993306	WITHOUT_CLASSIFICATION	2.506070066939939E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999969011707416	WITHOUT_CLASSIFICATION	3.0988292584662035E-6	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999969011707416	WITHOUT_CLASSIFICATION	3.0988292584662035E-6	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999969011707416	WITHOUT_CLASSIFICATION	3.0988292584662035E-6	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999969011707416	WITHOUT_CLASSIFICATION	3.0988292584662035E-6	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.999987299910923	WITHOUT_CLASSIFICATION	1.2700089076928915E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999956261947	WITHOUT_CLASSIFICATION	4.373805341583649E-9	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999956261947	WITHOUT_CLASSIFICATION	4.373805341583649E-9	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999956261947	WITHOUT_CLASSIFICATION	4.373805341583649E-9	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999999480115622	WITHOUT_CLASSIFICATION	5.198843778281188E-8	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999991821896912	WITHOUT_CLASSIFICATION	8.178103087571202E-7	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999989522775575	WITHOUT_CLASSIFICATION	1.0477224424461418E-6	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.919332618588563	IMPLEMENTATION	0.080667381411437	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.919332618588563	IMPLEMENTATION	0.080667381411437	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999998006641949	WITHOUT_CLASSIFICATION	1.9933580514336624E-7	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999999972147819	WITHOUT_CLASSIFICATION	2.785217990331489E-9	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999542108726209	WITHOUT_CLASSIFICATION	4.57891273791571E-5	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999542108726209	WITHOUT_CLASSIFICATION	4.57891273791571E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999891951270328	WITHOUT_CLASSIFICATION	1.0804872967163865E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999891951270328	WITHOUT_CLASSIFICATION	1.0804872967163865E-5	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999999948834072	WITHOUT_CLASSIFICATION	5.116592802318565E-9	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9988793781063469	WITHOUT_CLASSIFICATION	0.0011206218936531177	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999994640940303	WITHOUT_CLASSIFICATION	5.35905969758179E-7	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999965499971555	WITHOUT_CLASSIFICATION	3.4500028445442226E-6	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999967071743656	WITHOUT_CLASSIFICATION	3.292825634425812E-6	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999988264461502	WITHOUT_CLASSIFICATION	1.1735538497203605E-6	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999995271113286	WITHOUT_CLASSIFICATION	4.728886714674232E-7	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999621568819034	WITHOUT_CLASSIFICATION	3.7843118096704755E-5	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999994872896065	WITHOUT_CLASSIFICATION	5.127103933577115E-7	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999907130105	WITHOUT_CLASSIFICATION	9.286989502573639E-9	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999907130105	WITHOUT_CLASSIFICATION	9.286989502573639E-9	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999984230618374	WITHOUT_CLASSIFICATION	1.576938162624876E-6	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999984230618374	WITHOUT_CLASSIFICATION	1.576938162624876E-6	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999992659117147	WITHOUT_CLASSIFICATION	7.340882851757547E-7	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999996936399319	WITHOUT_CLASSIFICATION	3.063600681054618E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999952650971791	WITHOUT_CLASSIFICATION	4.7349028209069485E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999978927837938	WITHOUT_CLASSIFICATION	2.1072162062497265E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999978927837938	WITHOUT_CLASSIFICATION	2.1072162062497265E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999978927837938	WITHOUT_CLASSIFICATION	2.1072162062497265E-6	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9999949271736036	WITHOUT_CLASSIFICATION	5.072826396352277E-6	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9999942895416492	WITHOUT_CLASSIFICATION	5.710458350822165E-6	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9999954978502367	WITHOUT_CLASSIFICATION	4.5021497633142135E-6	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.99999646041499	WITHOUT_CLASSIFICATION	3.539585010036358E-6	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9999940783335035	WITHOUT_CLASSIFICATION	5.921666496539093E-6	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999939939059171	WITHOUT_CLASSIFICATION	6.006094082857419E-6	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.999995065539857	WITHOUT_CLASSIFICATION	4.9344601430771764E-6	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9999952430216038	WITHOUT_CLASSIFICATION	4.756978396146479E-6	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999957663935014	WITHOUT_CLASSIFICATION	4.233606498692779E-6	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999985606555012	WITHOUT_CLASSIFICATION	1.439344498737268E-6	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999168792528731	WITHOUT_CLASSIFICATION	8.312074712685565E-5	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999999652537277	WITHOUT_CLASSIFICATION	3.4746272406711704E-8	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999999780579036	WITHOUT_CLASSIFICATION	2.1942096269517006E-8	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.919332618588563	IMPLEMENTATION	0.080667381411437	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999956773537725	WITHOUT_CLASSIFICATION	4.322646227538383E-6	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999959985667061	WITHOUT_CLASSIFICATION	4.001433293971093E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.99999278080259	WITHOUT_CLASSIFICATION	7.219197409959684E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999507528336559	WITHOUT_CLASSIFICATION	4.924716634417829E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999507528336559	WITHOUT_CLASSIFICATION	4.924716634417829E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999507528336559	WITHOUT_CLASSIFICATION	4.924716634417829E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999507528336559	WITHOUT_CLASSIFICATION	4.924716634417829E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999507528336559	WITHOUT_CLASSIFICATION	4.924716634417829E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999898716196266	WITHOUT_CLASSIFICATION	1.012838037337233E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999507528336559	WITHOUT_CLASSIFICATION	4.924716634417829E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999507528336559	WITHOUT_CLASSIFICATION	4.924716634417829E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999507528336559	WITHOUT_CLASSIFICATION	4.924716634417829E-5	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999967886684137	WITHOUT_CLASSIFICATION	3.211331586304103E-6	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999984949055055	WITHOUT_CLASSIFICATION	1.5050944945339437E-6	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999999988309848	WITHOUT_CLASSIFICATION	1.1690152282053818E-9	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999970191752164	WITHOUT_CLASSIFICATION	2.980824783588864E-6	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999985639496279	WITHOUT_CLASSIFICATION	1.4360503720303092E-6	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999999768352289	WITHOUT_CLASSIFICATION	2.316477106466219E-8	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999999486518458	WITHOUT_CLASSIFICATION	5.1348154154463605E-8	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9999945913606005	WITHOUT_CLASSIFICATION	5.408639399508537E-6	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999964716521816	WITHOUT_CLASSIFICATION	3.5283478183290534E-6	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999964716521816	WITHOUT_CLASSIFICATION	3.5283478183290534E-6	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.99999457317089	WITHOUT_CLASSIFICATION	5.426829109980035E-6	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9999938003063588	WITHOUT_CLASSIFICATION	6.19969364127535E-6	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999946828785887	WITHOUT_CLASSIFICATION	5.317121411288692E-6	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9999947841635584	WITHOUT_CLASSIFICATION	5.215836441575967E-6	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.999994629733935	WITHOUT_CLASSIFICATION	5.370266064887022E-6	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9999942458585869	WITHOUT_CLASSIFICATION	5.754141413087297E-6	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9999930746351913	WITHOUT_CLASSIFICATION	6.925364808702256E-6	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999938592929225	WITHOUT_CLASSIFICATION	6.14070707747398E-6	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999938134532381	WITHOUT_CLASSIFICATION	6.186546761788469E-6	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9999960575507287	WITHOUT_CLASSIFICATION	3.942449271297748E-6	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9999957052396404	WITHOUT_CLASSIFICATION	4.294760359536527E-6	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9999941420606666	WITHOUT_CLASSIFICATION	5.857939333412734E-6	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999938529383735	WITHOUT_CLASSIFICATION	6.147061626441606E-6	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999944642301783	WITHOUT_CLASSIFICATION	5.535769821661023E-6	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9999941251536302	WITHOUT_CLASSIFICATION	5.874846369742736E-6	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9999933155001217	WITHOUT_CLASSIFICATION	6.684499878376336E-6	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999935036664588	WITHOUT_CLASSIFICATION	6.49633354124207E-6	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9999945646719923	WITHOUT_CLASSIFICATION	5.435328007616732E-6	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9999941166750341	WITHOUT_CLASSIFICATION	5.883324965947214E-6	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.9999945796949725	WITHOUT_CLASSIFICATION	5.420305027410012E-6	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9999957334761097	WITHOUT_CLASSIFICATION	4.266523890380384E-6	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999941637146351	WITHOUT_CLASSIFICATION	5.836285364949386E-6	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9999945289308062	WITHOUT_CLASSIFICATION	5.47106919383763E-6	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9999970316082746	WITHOUT_CLASSIFICATION	2.968391725304468E-6	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9999973440889184	WITHOUT_CLASSIFICATION	2.6559110816517835E-6	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999972927995633	WITHOUT_CLASSIFICATION	2.7072004366731006E-6	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9999968642885199	WITHOUT_CLASSIFICATION	3.1357114800513514E-6	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.999997266018373	WITHOUT_CLASSIFICATION	2.733981626996453E-6	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999968514754571	WITHOUT_CLASSIFICATION	3.1485245428913572E-6	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999971488227651	WITHOUT_CLASSIFICATION	2.8511772349155123E-6	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999961553396196	WITHOUT_CLASSIFICATION	3.844660380393785E-6	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999955767700361	WITHOUT_CLASSIFICATION	4.423229963883994E-6	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9999961161578385	WITHOUT_CLASSIFICATION	3.883842161472453E-6	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9999953857022443	WITHOUT_CLASSIFICATION	4.614297755623312E-6	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9999974990617094	WITHOUT_CLASSIFICATION	2.5009382905814384E-6	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999977400840917	WITHOUT_CLASSIFICATION	2.2599159083233958E-6	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9999962391052706	WITHOUT_CLASSIFICATION	3.7608947294187503E-6	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999962084702491	WITHOUT_CLASSIFICATION	3.791529750888081E-6	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.9999962369476278	WITHOUT_CLASSIFICATION	3.763052372192211E-6	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9999965137638483	WITHOUT_CLASSIFICATION	3.486236151733514E-6	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9999967832296962	WITHOUT_CLASSIFICATION	3.2167703037738275E-6	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999977588477198	WITHOUT_CLASSIFICATION	2.2411522802721546E-6	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9999965634327018	WITHOUT_CLASSIFICATION	3.4365672981648635E-6	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9999956845801486	WITHOUT_CLASSIFICATION	4.315419851353428E-6	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9999957926545193	WITHOUT_CLASSIFICATION	4.207345480671504E-6	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999957756163639	WITHOUT_CLASSIFICATION	4.2243836360444016E-6	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999961869592772	WITHOUT_CLASSIFICATION	3.813040722736231E-6	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9999960271717467	WITHOUT_CLASSIFICATION	3.972828253290684E-6	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9999964108744799	WITHOUT_CLASSIFICATION	3.5891255201893037E-6	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999960516330494	WITHOUT_CLASSIFICATION	3.948366950573676E-6	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9999967121726303	WITHOUT_CLASSIFICATION	3.2878273696724376E-6	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9999963493416449	WITHOUT_CLASSIFICATION	3.6506583552204415E-6	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.9999964168615656	WITHOUT_CLASSIFICATION	3.5831384343247236E-6	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999971233001693	WITHOUT_CLASSIFICATION	2.876699830758667E-6	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999971233001693	WITHOUT_CLASSIFICATION	2.876699830758667E-6	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999956713385736	WITHOUT_CLASSIFICATION	4.3286614263856806E-6	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9999976083053115	WITHOUT_CLASSIFICATION	2.391694688517005E-6	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9999961450565881	WITHOUT_CLASSIFICATION	3.854943411935765E-6	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.999996432329874	WITHOUT_CLASSIFICATION	3.567670126051358E-6	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9999955430283483	WITHOUT_CLASSIFICATION	4.456971651734911E-6	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.999997009227698	WITHOUT_CLASSIFICATION	2.990772302117768E-6	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999954448629752	WITHOUT_CLASSIFICATION	4.5551370247890996E-6	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9999957006311774	WITHOUT_CLASSIFICATION	4.299368822641818E-6	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999962541246561	WITHOUT_CLASSIFICATION	3.7458753438165843E-6	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9999958245366158	WITHOUT_CLASSIFICATION	4.175463384135412E-6	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999824487812304	WITHOUT_CLASSIFICATION	1.7551218769593737E-5	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999824487812304	WITHOUT_CLASSIFICATION	1.7551218769593737E-5	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.999983791325181	WITHOUT_CLASSIFICATION	1.6208674818909175E-5	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999556459834088	WITHOUT_CLASSIFICATION	4.435401659119448E-5	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999962542218106	WITHOUT_CLASSIFICATION	3.745778189467817E-6	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.999999733667677	WITHOUT_CLASSIFICATION	2.66332322968734E-7	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999997388164529	WITHOUT_CLASSIFICATION	2.6118354714527225E-7	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999997388164529	WITHOUT_CLASSIFICATION	2.6118354714527225E-7	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999997388164529	WITHOUT_CLASSIFICATION	2.6118354714527225E-7	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999997388164529	WITHOUT_CLASSIFICATION	2.6118354714527225E-7	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9804669998090199	WITHOUT_CLASSIFICATION	0.019533000190980195	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999999062795418	WITHOUT_CLASSIFICATION	9.37204580978224E-8	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9999948241701483	WITHOUT_CLASSIFICATION	5.17582985165719E-6	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9999933574731587	WITHOUT_CLASSIFICATION	6.642526841436519E-6	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.99999491709503	WITHOUT_CLASSIFICATION	5.08290496999579E-6	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9999959461444031	WITHOUT_CLASSIFICATION	4.053855596873581E-6	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9999961013943798	WITHOUT_CLASSIFICATION	3.8986056202759785E-6	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9999952446833872	WITHOUT_CLASSIFICATION	4.755316612873549E-6	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.999996298394519	WITHOUT_CLASSIFICATION	3.701605481094852E-6	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9999950915125541	WITHOUT_CLASSIFICATION	4.908487445977004E-6	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9999934229322321	WITHOUT_CLASSIFICATION	6.577067767853852E-6	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9999947645233956	WITHOUT_CLASSIFICATION	5.235476604381397E-6	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9999946340380022	WITHOUT_CLASSIFICATION	5.365961997833625E-6	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9999936476680298	WITHOUT_CLASSIFICATION	6.352331970238626E-6	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9999931961849933	WITHOUT_CLASSIFICATION	6.803815006717216E-6	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9999956986303153	WITHOUT_CLASSIFICATION	4.301369684647136E-6	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9999930441059101	WITHOUT_CLASSIFICATION	6.955894089890603E-6	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9999953234498099	WITHOUT_CLASSIFICATION	4.676550190141838E-6	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9999949074762602	WITHOUT_CLASSIFICATION	5.092523739808394E-6	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9999943914070717	WITHOUT_CLASSIFICATION	5.608592928340548E-6	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9999944359698809	WITHOUT_CLASSIFICATION	5.564030119103896E-6	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9999957241943151	WITHOUT_CLASSIFICATION	4.275805684948186E-6	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9999944896646015	WITHOUT_CLASSIFICATION	5.510335398548674E-6	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9999937170698714	WITHOUT_CLASSIFICATION	6.28293012861005E-6	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9999941119078659	WITHOUT_CLASSIFICATION	5.888092134154889E-6	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9999970896585385	WITHOUT_CLASSIFICATION	2.9103414614893325E-6	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.999997418301711	WITHOUT_CLASSIFICATION	2.5816982891035763E-6	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.999997053717868	WITHOUT_CLASSIFICATION	2.9462821319738195E-6	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9999970047362954	WITHOUT_CLASSIFICATION	2.995263704652692E-6	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9999956562960793	WITHOUT_CLASSIFICATION	4.343703920639987E-6	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.999995509126449	WITHOUT_CLASSIFICATION	4.490873551057878E-6	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.999996066112466	WITHOUT_CLASSIFICATION	3.933887533874875E-6	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9999966535709188	WITHOUT_CLASSIFICATION	3.34642908126926E-6	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9999960996000924	WITHOUT_CLASSIFICATION	3.900399907616641E-6	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9999963813510571	WITHOUT_CLASSIFICATION	3.6186489428496184E-6	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9999971390275574	WITHOUT_CLASSIFICATION	2.860972442595305E-6	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9999961064538179	WITHOUT_CLASSIFICATION	3.893546182178715E-6	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9999955392008415	WITHOUT_CLASSIFICATION	4.460799158584513E-6	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9999963604976565	WITHOUT_CLASSIFICATION	3.639502343552516E-6	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9999959679968894	WITHOUT_CLASSIFICATION	4.032003110549534E-6	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.9999977864954013	WITHOUT_CLASSIFICATION	2.2135045988102573E-6	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9999961260031496	WITHOUT_CLASSIFICATION	3.873996850361866E-6	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9999956958614433	WITHOUT_CLASSIFICATION	4.304138556666969E-6	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9999960700341155	WITHOUT_CLASSIFICATION	3.929965884457789E-6	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.999995754997445	WITHOUT_CLASSIFICATION	4.245002555088343E-6	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9999955208332111	WITHOUT_CLASSIFICATION	4.479166788918038E-6	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9999962109742884	WITHOUT_CLASSIFICATION	3.789025711519094E-6	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9999954075320662	WITHOUT_CLASSIFICATION	4.592467933835852E-6	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9999963358705051	WITHOUT_CLASSIFICATION	3.66412949477345E-6	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9999961658746719	WITHOUT_CLASSIFICATION	3.83412532810601E-6	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9999954779184017	WITHOUT_CLASSIFICATION	4.5220815981982386E-6	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9999959288532294	WITHOUT_CLASSIFICATION	4.071146770624381E-6	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9999963106824621	WITHOUT_CLASSIFICATION	3.6893175378692442E-6	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9999957364846912	WITHOUT_CLASSIFICATION	4.2635153087191445E-6	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9999959477587721	WITHOUT_CLASSIFICATION	4.0522412278859445E-6	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9999962881780613	WITHOUT_CLASSIFICATION	3.7118219388212903E-6	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9999973638310564	WITHOUT_CLASSIFICATION	2.636168943523079E-6	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9999960330144408	WITHOUT_CLASSIFICATION	3.966985559141204E-6	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9999974903006471	WITHOUT_CLASSIFICATION	2.509699352929869E-6	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999995026200661	WITHOUT_CLASSIFICATION	4.973799338189798E-7	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999996694237693	WITHOUT_CLASSIFICATION	3.3057623069414114E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998292150776	WITHOUT_CLASSIFICATION	1.7078492245449153E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998292150776	WITHOUT_CLASSIFICATION	1.7078492245449153E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998292150776	WITHOUT_CLASSIFICATION	1.7078492245449153E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998292150776	WITHOUT_CLASSIFICATION	1.7078492245449153E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998292150776	WITHOUT_CLASSIFICATION	1.7078492245449153E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998292150776	WITHOUT_CLASSIFICATION	1.7078492245449153E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998292150776	WITHOUT_CLASSIFICATION	1.7078492245449153E-7	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999994318522841	WITHOUT_CLASSIFICATION	5.681477158787839E-7	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999994318522841	WITHOUT_CLASSIFICATION	5.681477158787839E-7	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999994318522841	WITHOUT_CLASSIFICATION	5.681477158787839E-7	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999994318522841	WITHOUT_CLASSIFICATION	5.681477158787839E-7	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998745368044071	WITHOUT_CLASSIFICATION	1.2546319559288282E-4	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998745368044071	WITHOUT_CLASSIFICATION	1.2546319559288282E-4	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999999793120804	WITHOUT_CLASSIFICATION	2.068791956583795E-8	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999920194340174	WITHOUT_CLASSIFICATION	7.980565982554731E-6	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999920194340174	WITHOUT_CLASSIFICATION	7.980565982554731E-6	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999975784113941	WITHOUT_CLASSIFICATION	2.421588605901655E-6	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999845042716846	WITHOUT_CLASSIFICATION	1.549572831540216E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998608895063	WITHOUT_CLASSIFICATION	1.3911049376993357E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998608895063	WITHOUT_CLASSIFICATION	1.3911049376993357E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998608895063	WITHOUT_CLASSIFICATION	1.3911049376993357E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998608895063	WITHOUT_CLASSIFICATION	1.3911049376993357E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998608895063	WITHOUT_CLASSIFICATION	1.3911049376993357E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998608895063	WITHOUT_CLASSIFICATION	1.3911049376993357E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998608895063	WITHOUT_CLASSIFICATION	1.3911049376993357E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999996124616845	WITHOUT_CLASSIFICATION	3.8753831557258725E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998661880406	WITHOUT_CLASSIFICATION	1.3381195933837655E-7	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999297396051343	WITHOUT_CLASSIFICATION	7.026039486561448E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999297396051343	WITHOUT_CLASSIFICATION	7.026039486561448E-5	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999995794395151	WITHOUT_CLASSIFICATION	4.205604848295604E-7	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999984634543992	WITHOUT_CLASSIFICATION	1.5365456007267783E-6	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999984634543992	WITHOUT_CLASSIFICATION	1.5365456007267783E-6	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999999993145481	WITHOUT_CLASSIFICATION	6.85451863946918E-10	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.6743654658180178	IMPLEMENTATION	0.3256345341819822	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999996227494014	WITHOUT_CLASSIFICATION	3.772505986419122E-7	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.999999713271003	WITHOUT_CLASSIFICATION	2.86728997021646E-7	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999997559172897	WITHOUT_CLASSIFICATION	2.440827102601161E-7	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999973372799716	WITHOUT_CLASSIFICATION	2.6627200284301375E-6	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999838022695391	WITHOUT_CLASSIFICATION	1.619773046089676E-5	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999949035901813	WITHOUT_CLASSIFICATION	5.096409818771182E-6	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999986435515695	WITHOUT_CLASSIFICATION	1.3564484304487402E-6	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9996994434022258	WITHOUT_CLASSIFICATION	3.005565977741343E-4	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999678342443189	WITHOUT_CLASSIFICATION	3.216575568112848E-5	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999999774871924	WITHOUT_CLASSIFICATION	2.2512807528888897E-8	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999696978855	WITHOUT_CLASSIFICATION	3.03021145553461E-8	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999945871203973	WITHOUT_CLASSIFICATION	5.412879602763108E-6	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999164293648976	WITHOUT_CLASSIFICATION	8.357063510247128E-5	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999960485823982	WITHOUT_CLASSIFICATION	3.951417601848211E-6	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999435187082	WITHOUT_CLASSIFICATION	5.648129184998568E-8	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999558103309875	WITHOUT_CLASSIFICATION	4.418966901257573E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999129662627659	WITHOUT_CLASSIFICATION	8.7033737234062E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999129662627659	WITHOUT_CLASSIFICATION	8.7033737234062E-5	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999133498353606	WITHOUT_CLASSIFICATION	8.665016463934744E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999566072042	WITHOUT_CLASSIFICATION	4.3392795777648966E-8	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999993145554754	WITHOUT_CLASSIFICATION	6.854445246503874E-7	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999912590262867	WITHOUT_CLASSIFICATION	8.740973713195998E-6	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999459062405782	WITHOUT_CLASSIFICATION	5.4093759421717404E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999459062405782	WITHOUT_CLASSIFICATION	5.4093759421717404E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999459062405782	WITHOUT_CLASSIFICATION	5.4093759421717404E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999651924431707	WITHOUT_CLASSIFICATION	3.480755682920312E-5	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999993463211463	WITHOUT_CLASSIFICATION	6.536788536170615E-7	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999992039786458	WITHOUT_CLASSIFICATION	7.960213541544343E-7	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999999810720153	WITHOUT_CLASSIFICATION	1.8927984753420928E-8	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999998086020574	WITHOUT_CLASSIFICATION	1.913979425607171E-7	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999998741656968	WITHOUT_CLASSIFICATION	1.2583430323461685E-7	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999999653806995	WITHOUT_CLASSIFICATION	3.461930053914286E-8	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999868128491	WITHOUT_CLASSIFICATION	1.3187150985638064E-8	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999988221683755	WITHOUT_CLASSIFICATION	1.1778316244272507E-6	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999989075163525	WITHOUT_CLASSIFICATION	1.092483647485577E-6	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9999999115278476	WITHOUT_CLASSIFICATION	8.847215239066877E-8	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999999558374548	WITHOUT_CLASSIFICATION	4.4162545141040396E-8	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9313896925215187	IMPLEMENTATION	0.06861030747848126	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999998009955696	WITHOUT_CLASSIFICATION	1.99004430347347E-7	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.999958201900222	WITHOUT_CLASSIFICATION	4.1798099777991644E-5	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999999854483416	WITHOUT_CLASSIFICATION	1.4551658541906385E-8	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999994174083138	WITHOUT_CLASSIFICATION	5.825916862831079E-7	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.99999865049086	WITHOUT_CLASSIFICATION	1.3495091400303505E-6	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9998194491009773	WITHOUT_CLASSIFICATION	1.8055089902275291E-4	IMPLEMENTATION
