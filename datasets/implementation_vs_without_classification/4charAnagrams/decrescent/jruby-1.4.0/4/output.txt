// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.9576837457948199	WITHOUT_CLASSIFICATION	0.042316254205180134	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.763078004680963	IMPLEMENTATION	0.23692199531903693	WITHOUT_CLASSIFICATION
// TODO: Someday, enable.	IMPLEMENTATION	0.6516472386327405	WITHOUT_CLASSIFICATION	0.34835276136725957	IMPLEMENTATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.6359688507819583	IMPLEMENTATION	0.36403114921804175	WITHOUT_CLASSIFICATION
// TODO: non-strict option	IMPLEMENTATION	0.7509137011086751	WITHOUT_CLASSIFICATION	0.24908629889132486	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.8303071680046616	IMPLEMENTATION	0.1696928319953383	WITHOUT_CLASSIFICATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.998966026793752	WITHOUT_CLASSIFICATION	0.0010339732062479463	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.647518631448246	WITHOUT_CLASSIFICATION	0.35248136855175416	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.647518631448246	WITHOUT_CLASSIFICATION	0.35248136855175416	IMPLEMENTATION
// TODO: pass this in?	IMPLEMENTATION	0.5520561839435012	IMPLEMENTATION	0.4479438160564988	WITHOUT_CLASSIFICATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9999526938616901	WITHOUT_CLASSIFICATION	4.730613830997789E-5	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.9770510926791245	IMPLEMENTATION	0.022948907320875584	WITHOUT_CLASSIFICATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.939379390325613	IMPLEMENTATION	0.06062060967438704	WITHOUT_CLASSIFICATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.9971591727411515	WITHOUT_CLASSIFICATION	0.0028408272588485977	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.7394788095709351	IMPLEMENTATION	0.26052119042906474	WITHOUT_CLASSIFICATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9610708530649491	WITHOUT_CLASSIFICATION	0.03892914693505089	IMPLEMENTATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9810733056837896	WITHOUT_CLASSIFICATION	0.018926694316210455	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.5765803573720297	WITHOUT_CLASSIFICATION	0.4234196426279703	IMPLEMENTATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.7068480821316956	WITHOUT_CLASSIFICATION	0.29315191786830447	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.9843594445056515	WITHOUT_CLASSIFICATION	0.015640555494348396	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.5297331932962923	IMPLEMENTATION	0.47026680670370763	WITHOUT_CLASSIFICATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.9882299593168536	WITHOUT_CLASSIFICATION	0.01177004068314631	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.6732540510844136	WITHOUT_CLASSIFICATION	0.3267459489155865	IMPLEMENTATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.9051008122169794	WITHOUT_CLASSIFICATION	0.09489918778302062	IMPLEMENTATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.9984076696523094	IMPLEMENTATION	0.0015923303476905893	WITHOUT_CLASSIFICATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.6560431615459651	WITHOUT_CLASSIFICATION	0.34395683845403485	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.5553581696887928	IMPLEMENTATION	0.44464183031120713	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9811935769319892	IMPLEMENTATION	0.01880642306801083	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.5553581696887928	IMPLEMENTATION	0.44464183031120713	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9811935769319892	IMPLEMENTATION	0.01880642306801083	WITHOUT_CLASSIFICATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.725998572600572	WITHOUT_CLASSIFICATION	0.27400142739942795	IMPLEMENTATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.9259127762940444	WITHOUT_CLASSIFICATION	0.0740872237059555	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.9985012953995035	IMPLEMENTATION	0.0014987046004966025	WITHOUT_CLASSIFICATION
// TODO: make threadsafe	IMPLEMENTATION	0.9923461570607396	IMPLEMENTATION	0.007653842939260436	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9256741487917383	WITHOUT_CLASSIFICATION	0.07432585120826174	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9256741487917383	WITHOUT_CLASSIFICATION	0.07432585120826174	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.9759214264685329	WITHOUT_CLASSIFICATION	0.024078573531467185	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.7655706037200114	WITHOUT_CLASSIFICATION	0.23442939627998854	IMPLEMENTATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.8925371455593968	WITHOUT_CLASSIFICATION	0.10746285444060318	IMPLEMENTATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.9730542565437492	WITHOUT_CLASSIFICATION	0.026945743456250837	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9966997303193862	IMPLEMENTATION	0.0033002696806138355	WITHOUT_CLASSIFICATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.8814556193324863	IMPLEMENTATION	0.11854438066751381	WITHOUT_CLASSIFICATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.9996947488885946	IMPLEMENTATION	3.052511114054897E-4	WITHOUT_CLASSIFICATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.999484315048506	WITHOUT_CLASSIFICATION	5.156849514941342E-4	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.8845829948289579	WITHOUT_CLASSIFICATION	0.11541700517104211	IMPLEMENTATION
// TODO: add trace call?	IMPLEMENTATION	0.948987104691435	IMPLEMENTATION	0.05101289530856512	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9999623913343423	WITHOUT_CLASSIFICATION	3.760866565782739E-5	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.9916527141825944	WITHOUT_CLASSIFICATION	0.008347285817405603	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.9906403560683223	WITHOUT_CLASSIFICATION	0.009359643931677644	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.9785012915745334	IMPLEMENTATION	0.021498708425466573	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9999623913343423	WITHOUT_CLASSIFICATION	3.760866565782739E-5	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.9999847004799474	WITHOUT_CLASSIFICATION	1.529952005270281E-5	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.9977212021967746	WITHOUT_CLASSIFICATION	0.0022787978032253594	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.963631907647676	IMPLEMENTATION	0.03636809235232394	WITHOUT_CLASSIFICATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.9612892029603434	WITHOUT_CLASSIFICATION	0.03871079703965667	IMPLEMENTATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.9999905299110426	WITHOUT_CLASSIFICATION	9.470088957238332E-6	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.9992903764333264	WITHOUT_CLASSIFICATION	7.096235666735715E-4	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.9092177214940521	WITHOUT_CLASSIFICATION	0.09078227850594787	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9976955768341115	WITHOUT_CLASSIFICATION	0.002304423165888492	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9999438441799151	WITHOUT_CLASSIFICATION	5.615582008490843E-5	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.9996104408575145	WITHOUT_CLASSIFICATION	3.8955914248556956E-4	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9970812274062877	IMPLEMENTATION	0.0029187725937123545	WITHOUT_CLASSIFICATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9970812274062877	IMPLEMENTATION	0.0029187725937123545	WITHOUT_CLASSIFICATION
// TODO: validate port as numeric	IMPLEMENTATION	0.7881111230251928	WITHOUT_CLASSIFICATION	0.21188887697480718	IMPLEMENTATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9999769379985561	IMPLEMENTATION	2.3062001443880663E-5	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.6297288171271855	WITHOUT_CLASSIFICATION	0.3702711828728146	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.5701353440498967	WITHOUT_CLASSIFICATION	0.4298646559501032	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.5701353440498967	WITHOUT_CLASSIFICATION	0.4298646559501032	IMPLEMENTATION
// TODO: other reserved names?	IMPLEMENTATION	0.995286287506279	IMPLEMENTATION	0.004713712493721041	WITHOUT_CLASSIFICATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.7755714229313803	IMPLEMENTATION	0.22442857706861968	WITHOUT_CLASSIFICATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.8360471776157669	IMPLEMENTATION	0.16395282238423325	WITHOUT_CLASSIFICATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.9965335582757409	WITHOUT_CLASSIFICATION	0.003466441724259088	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.7257051796966044	IMPLEMENTATION	0.2742948203033957	WITHOUT_CLASSIFICATION
// TODO: call ruby method	IMPLEMENTATION	0.7257051796966044	IMPLEMENTATION	0.2742948203033957	WITHOUT_CLASSIFICATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.9910308809900179	IMPLEMENTATION	0.008969119009982141	WITHOUT_CLASSIFICATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9995243851815964	WITHOUT_CLASSIFICATION	4.756148184035662E-4	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9999996736680032	WITHOUT_CLASSIFICATION	3.2633199672261897E-7	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.9589380481407581	IMPLEMENTATION	0.04106195185924185	WITHOUT_CLASSIFICATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.8453742480504289	IMPLEMENTATION	0.15462575194957115	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.8299883935409783	IMPLEMENTATION	0.1700116064590217	WITHOUT_CLASSIFICATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.6599666115417163	WITHOUT_CLASSIFICATION	0.3400333884582837	IMPLEMENTATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.7136221131354258	WITHOUT_CLASSIFICATION	0.2863778868645742	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9763611597763839	WITHOUT_CLASSIFICATION	0.02363884022361599	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9763611597763839	WITHOUT_CLASSIFICATION	0.02363884022361599	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.9994704539876412	WITHOUT_CLASSIFICATION	5.295460123587147E-4	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.9992976154003179	WITHOUT_CLASSIFICATION	7.023845996820863E-4	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9998756678701177	WITHOUT_CLASSIFICATION	1.2433212988226326E-4	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9998756678701177	WITHOUT_CLASSIFICATION	1.2433212988226326E-4	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.943278195566602	WITHOUT_CLASSIFICATION	0.05672180443339811	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9960768458331459	WITHOUT_CLASSIFICATION	0.003923154166854072	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9960768458331459	WITHOUT_CLASSIFICATION	0.003923154166854072	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9960768458331459	WITHOUT_CLASSIFICATION	0.003923154166854072	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.9024699333058069	WITHOUT_CLASSIFICATION	0.09753006669419303	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.9024699333058069	WITHOUT_CLASSIFICATION	0.09753006669419303	IMPLEMENTATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.5746244544237084	IMPLEMENTATION	0.42537554557629165	WITHOUT_CLASSIFICATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9993483909781151	WITHOUT_CLASSIFICATION	6.51609021884964E-4	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.9902170401449746	WITHOUT_CLASSIFICATION	0.009782959855025355	IMPLEMENTATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9999748984082139	IMPLEMENTATION	2.5101591786143227E-5	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.999762015900438	IMPLEMENTATION	2.3798409956203047E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.999762015900438	IMPLEMENTATION	2.3798409956203047E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.999762015900438	IMPLEMENTATION	2.3798409956203047E-4	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9966997303193862	IMPLEMENTATION	0.0033002696806138355	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9966997303193862	IMPLEMENTATION	0.0033002696806138355	WITHOUT_CLASSIFICATION
// TODO: check for ascii string	IMPLEMENTATION	0.9462214405239031	WITHOUT_CLASSIFICATION	0.05377855947609683	IMPLEMENTATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.5805384705166996	IMPLEMENTATION	0.41946152948330034	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9256741487917383	WITHOUT_CLASSIFICATION	0.07432585120826174	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9256741487917383	WITHOUT_CLASSIFICATION	0.07432585120826174	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.9309531982964477	IMPLEMENTATION	0.06904680170355224	WITHOUT_CLASSIFICATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.8932169908075493	WITHOUT_CLASSIFICATION	0.1067830091924507	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9610708530649491	WITHOUT_CLASSIFICATION	0.03892914693505089	IMPLEMENTATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9982777857427177	WITHOUT_CLASSIFICATION	0.0017222142572822854	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.9972816012045352	IMPLEMENTATION	0.002718398795464855	WITHOUT_CLASSIFICATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.9988609174485863	IMPLEMENTATION	0.001139082551413757	WITHOUT_CLASSIFICATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.7962936533852834	WITHOUT_CLASSIFICATION	0.2037063466147167	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999965495755304	WITHOUT_CLASSIFICATION	3.45042446952453E-6	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9999994632701531	WITHOUT_CLASSIFICATION	5.36729846814202E-7	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999952930014494	WITHOUT_CLASSIFICATION	4.70699855055844E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999952930014494	WITHOUT_CLASSIFICATION	4.70699855055844E-6	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999622062451989	WITHOUT_CLASSIFICATION	3.779375480106882E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999622062451989	WITHOUT_CLASSIFICATION	3.779375480106882E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998909834524525	WITHOUT_CLASSIFICATION	1.0901654754743129E-4	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999888285962983	WITHOUT_CLASSIFICATION	1.1171403701688896E-5	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9999997212631054	WITHOUT_CLASSIFICATION	2.787368945574535E-7	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999997733794016	WITHOUT_CLASSIFICATION	2.2662059838147283E-7	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999123259821444	WITHOUT_CLASSIFICATION	8.767401785560456E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999123259821444	WITHOUT_CLASSIFICATION	8.767401785560456E-5	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9999982391394281	WITHOUT_CLASSIFICATION	1.7608605719771082E-6	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998437573030936	WITHOUT_CLASSIFICATION	1.5624269690639315E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998437573030936	WITHOUT_CLASSIFICATION	1.5624269690639315E-4	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9999989738503048	WITHOUT_CLASSIFICATION	1.026149695230892E-6	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999995733593913	WITHOUT_CLASSIFICATION	4.266406087811268E-7	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999878138999552	WITHOUT_CLASSIFICATION	1.218610004482984E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999878138999552	WITHOUT_CLASSIFICATION	1.218610004482984E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999878138999552	WITHOUT_CLASSIFICATION	1.218610004482984E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999878138999552	WITHOUT_CLASSIFICATION	1.218610004482984E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999878138999552	WITHOUT_CLASSIFICATION	1.218610004482984E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999878138999552	WITHOUT_CLASSIFICATION	1.218610004482984E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999878138999552	WITHOUT_CLASSIFICATION	1.218610004482984E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999428646426348	WITHOUT_CLASSIFICATION	5.7135357365071076E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999428646426348	WITHOUT_CLASSIFICATION	5.7135357365071076E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999428646426348	WITHOUT_CLASSIFICATION	5.7135357365071076E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999428646426348	WITHOUT_CLASSIFICATION	5.7135357365071076E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999428646426348	WITHOUT_CLASSIFICATION	5.7135357365071076E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999428646426348	WITHOUT_CLASSIFICATION	5.7135357365071076E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999428646426348	WITHOUT_CLASSIFICATION	5.7135357365071076E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997716490962636	WITHOUT_CLASSIFICATION	2.283509037364012E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997716490962636	WITHOUT_CLASSIFICATION	2.283509037364012E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997716490962636	WITHOUT_CLASSIFICATION	2.283509037364012E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997716490962636	WITHOUT_CLASSIFICATION	2.283509037364012E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997716490962636	WITHOUT_CLASSIFICATION	2.283509037364012E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997716490962636	WITHOUT_CLASSIFICATION	2.283509037364012E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998674374088822	WITHOUT_CLASSIFICATION	1.3256259111790207E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998674374088822	WITHOUT_CLASSIFICATION	1.3256259111790207E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998674374088822	WITHOUT_CLASSIFICATION	1.3256259111790207E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998674374088822	WITHOUT_CLASSIFICATION	1.3256259111790207E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998674374088822	WITHOUT_CLASSIFICATION	1.3256259111790207E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998674374088822	WITHOUT_CLASSIFICATION	1.3256259111790207E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999763770269863	WITHOUT_CLASSIFICATION	2.362297301371378E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999763770269863	WITHOUT_CLASSIFICATION	2.362297301371378E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999763770269863	WITHOUT_CLASSIFICATION	2.362297301371378E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999763770269863	WITHOUT_CLASSIFICATION	2.362297301371378E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999763770269863	WITHOUT_CLASSIFICATION	2.362297301371378E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999763770269863	WITHOUT_CLASSIFICATION	2.362297301371378E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999763770269863	WITHOUT_CLASSIFICATION	2.362297301371378E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997177016988256	WITHOUT_CLASSIFICATION	2.822983011743856E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997177016988256	WITHOUT_CLASSIFICATION	2.822983011743856E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997177016988256	WITHOUT_CLASSIFICATION	2.822983011743856E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997177016988256	WITHOUT_CLASSIFICATION	2.822983011743856E-4	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999980373548003	WITHOUT_CLASSIFICATION	1.9626451995802474E-6	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999980373548003	WITHOUT_CLASSIFICATION	1.9626451995802474E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.99999987736597	WITHOUT_CLASSIFICATION	1.226340299808141E-7	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9999994779631233	WITHOUT_CLASSIFICATION	5.22036876634476E-7	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9999979972654032	WITHOUT_CLASSIFICATION	2.002734596854566E-6	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999992018195093	WITHOUT_CLASSIFICATION	7.981804906618743E-7	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999728627611835	WITHOUT_CLASSIFICATION	2.7137238816612435E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999958362239362	WITHOUT_CLASSIFICATION	4.163776063784257E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999958362239362	WITHOUT_CLASSIFICATION	4.163776063784257E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999958362239362	WITHOUT_CLASSIFICATION	4.163776063784257E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999958362239362	WITHOUT_CLASSIFICATION	4.163776063784257E-6	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999609029985849	WITHOUT_CLASSIFICATION	3.909700141511289E-5	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.999993310221463	WITHOUT_CLASSIFICATION	6.68977853696668E-6	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999958852201073	WITHOUT_CLASSIFICATION	4.114779892702743E-6	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999992327346139	WITHOUT_CLASSIFICATION	7.67265386077531E-7	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9999991293192647	WITHOUT_CLASSIFICATION	8.706807352628742E-7	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999998372185974	WITHOUT_CLASSIFICATION	1.627814026930326E-7	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999981660196102	WITHOUT_CLASSIFICATION	1.8339803897316019E-6	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999999923481507	WITHOUT_CLASSIFICATION	7.65184923365709E-9	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999912252587	WITHOUT_CLASSIFICATION	8.774741299972769E-9	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.999999462278347	WITHOUT_CLASSIFICATION	5.377216530124854E-7	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999991217838566	WITHOUT_CLASSIFICATION	8.782161432500444E-7	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999491364518387	WITHOUT_CLASSIFICATION	5.086354816134094E-5	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9998399952144369	WITHOUT_CLASSIFICATION	1.6000478556323409E-4	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999997953361385	WITHOUT_CLASSIFICATION	2.0466386156380203E-7	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998232446676	WITHOUT_CLASSIFICATION	1.7675533244289212E-7	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999998111084215	WITHOUT_CLASSIFICATION	1.8889157850901542E-7	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9996224334930986	WITHOUT_CLASSIFICATION	3.775665069012449E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999958362239362	WITHOUT_CLASSIFICATION	4.163776063784257E-6	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999989559840087	WITHOUT_CLASSIFICATION	1.0440159912592427E-6	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999999748198278	WITHOUT_CLASSIFICATION	2.518017224982762E-8	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999990964822534	WITHOUT_CLASSIFICATION	9.035177466711486E-7	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999186505427745	WITHOUT_CLASSIFICATION	8.134945722549921E-5	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.999768920044339	WITHOUT_CLASSIFICATION	2.310799556610218E-4	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.999999968033475	WITHOUT_CLASSIFICATION	3.196652503816918E-8	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999999860265697	WITHOUT_CLASSIFICATION	1.3973430356384084E-8	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999998951772076	WITHOUT_CLASSIFICATION	1.0482279244887439E-7	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999964620541751	WITHOUT_CLASSIFICATION	3.5379458248318683E-6	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999997478745088	WITHOUT_CLASSIFICATION	2.5212549122038016E-7	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999996893941152	WITHOUT_CLASSIFICATION	3.106058848103872E-7	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999992132639732	WITHOUT_CLASSIFICATION	7.867360267439617E-7	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999996166072375	WITHOUT_CLASSIFICATION	3.8339276252097445E-7	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999352382754302	WITHOUT_CLASSIFICATION	6.476172456979174E-5	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999944472540373	WITHOUT_CLASSIFICATION	5.552745962698285E-6	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999996190105329	WITHOUT_CLASSIFICATION	3.8098946716749515E-7	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9999998980622093	WITHOUT_CLASSIFICATION	1.019377905575329E-7	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999999933659263	WITHOUT_CLASSIFICATION	6.634073782828831E-9	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999990942233764	WITHOUT_CLASSIFICATION	9.057766236839407E-7	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999999861923262	WITHOUT_CLASSIFICATION	1.3807673839054412E-8	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9998489836334463	WITHOUT_CLASSIFICATION	1.51016366553708E-4	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999993879598745	WITHOUT_CLASSIFICATION	6.120401253705532E-7	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999999627357764	WITHOUT_CLASSIFICATION	3.7264223590434246E-8	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.999861717694833	WITHOUT_CLASSIFICATION	1.382823051670317E-4	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.999999466792763	WITHOUT_CLASSIFICATION	5.332072370820166E-7	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9999996067930556	WITHOUT_CLASSIFICATION	3.932069445369176E-7	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999978007669614	WITHOUT_CLASSIFICATION	2.199233038601987E-6	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999859165221007	WITHOUT_CLASSIFICATION	1.4083477899368718E-5	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.999999998824297	WITHOUT_CLASSIFICATION	1.17570305743874E-9	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999997950825799	WITHOUT_CLASSIFICATION	2.049174200522233E-7	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999999472231889	WITHOUT_CLASSIFICATION	5.277681118094826E-8	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999996516379935	WITHOUT_CLASSIFICATION	3.4836200648265256E-7	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999999906141064	WITHOUT_CLASSIFICATION	9.385893672320826E-9	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999999063267709	WITHOUT_CLASSIFICATION	9.367322902492297E-8	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999829729500935	WITHOUT_CLASSIFICATION	1.7027049906514774E-5	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999997835823579	WITHOUT_CLASSIFICATION	2.16417642005761E-7	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999990156784014	WITHOUT_CLASSIFICATION	9.843215985856916E-7	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999999999757099	WITHOUT_CLASSIFICATION	2.4290140203413834E-11	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999981606343226	WITHOUT_CLASSIFICATION	1.8393656773945636E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999964720430864	WITHOUT_CLASSIFICATION	3.527956913658426E-6	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999999800649869	WITHOUT_CLASSIFICATION	1.9935013174720398E-8	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.99999916130861	WITHOUT_CLASSIFICATION	8.386913900329749E-7	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999994412979826	WITHOUT_CLASSIFICATION	5.587020174640036E-7	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.936970046060628	WITHOUT_CLASSIFICATION	0.06302995393937205	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.936970046060628	WITHOUT_CLASSIFICATION	0.06302995393937205	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.7078012108358385	WITHOUT_CLASSIFICATION	0.29219878916416153	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999899944267864	WITHOUT_CLASSIFICATION	1.0005573213605559E-5	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999931793534828	WITHOUT_CLASSIFICATION	6.820646517343807E-6	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.999999465820754	WITHOUT_CLASSIFICATION	5.341792459690473E-7	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999772717611983	WITHOUT_CLASSIFICATION	2.2728238801627805E-5	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999995277408638	WITHOUT_CLASSIFICATION	4.7225913613530733E-7	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9999995362941502	WITHOUT_CLASSIFICATION	4.6370584984276797E-7	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.999996235623463	WITHOUT_CLASSIFICATION	3.764376537107241E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.99999916130861	WITHOUT_CLASSIFICATION	8.386913900329749E-7	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999999991021646	WITHOUT_CLASSIFICATION	8.978353424439498E-10	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999799400944276	WITHOUT_CLASSIFICATION	2.0059905572338832E-5	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9893618737787003	WITHOUT_CLASSIFICATION	0.010638126221299588	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999998411307638	WITHOUT_CLASSIFICATION	1.5886923613489397E-7	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.999999734278709	WITHOUT_CLASSIFICATION	2.65721291003649E-7	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999601543137	WITHOUT_CLASSIFICATION	3.98456863074454E-8	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999601543137	WITHOUT_CLASSIFICATION	3.98456863074454E-8	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999601543137	WITHOUT_CLASSIFICATION	3.98456863074454E-8	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999999470638026	WITHOUT_CLASSIFICATION	5.293619748833163E-8	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999995831338218	WITHOUT_CLASSIFICATION	4.1686617817367257E-7	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999999989176485	WITHOUT_CLASSIFICATION	1.0823514442746538E-9	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999727967814636	WITHOUT_CLASSIFICATION	2.7203218536452705E-5	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.999998927214129	WITHOUT_CLASSIFICATION	1.0727858709619735E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999999752935467	WITHOUT_CLASSIFICATION	2.470645338842756E-8	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999691055456834	WITHOUT_CLASSIFICATION	3.0894454316601456E-5	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999522832005	WITHOUT_CLASSIFICATION	4.7716799582509066E-8	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999987768000959	WITHOUT_CLASSIFICATION	1.2231999040593855E-6	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999987768000959	WITHOUT_CLASSIFICATION	1.2231999040593855E-6	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999998535580304	WITHOUT_CLASSIFICATION	1.46441969499009E-7	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999740872915831	WITHOUT_CLASSIFICATION	2.5912708416848443E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999999265304284	WITHOUT_CLASSIFICATION	7.346957158403148E-8	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999999265304284	WITHOUT_CLASSIFICATION	7.346957158403148E-8	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.999999831299412	WITHOUT_CLASSIFICATION	1.687005880484023E-7	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999998240692982	WITHOUT_CLASSIFICATION	1.759307017329146E-7	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999895750596511	WITHOUT_CLASSIFICATION	1.0424940348863752E-5	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999999998815023	WITHOUT_CLASSIFICATION	1.1849774550477142E-10	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999972927494787	WITHOUT_CLASSIFICATION	2.7072505214144467E-6	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.9999994160362762	WITHOUT_CLASSIFICATION	5.839637238601715E-7	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999989054905719	WITHOUT_CLASSIFICATION	1.094509428119339E-6	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9999992231188143	WITHOUT_CLASSIFICATION	7.768811857479892E-7	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9999909337823918	WITHOUT_CLASSIFICATION	9.066217608221677E-6	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999998890106563	WITHOUT_CLASSIFICATION	1.1098934376413264E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.99999916130861	WITHOUT_CLASSIFICATION	8.386913900329749E-7	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999999745810189	WITHOUT_CLASSIFICATION	2.54189810933959E-8	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999969015693	WITHOUT_CLASSIFICATION	3.0984307995604406E-9	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999957036588499	WITHOUT_CLASSIFICATION	4.296341150089427E-6	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9994694600990703	WITHOUT_CLASSIFICATION	5.305399009296236E-4	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999989155187442	WITHOUT_CLASSIFICATION	1.0844812557643376E-6	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999914586297922	WITHOUT_CLASSIFICATION	8.541370207838489E-6	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999996127713348	WITHOUT_CLASSIFICATION	3.8722866528398514E-7	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999996235519208	WITHOUT_CLASSIFICATION	3.764480792319169E-7	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999999955023857	WITHOUT_CLASSIFICATION	4.497614302134539E-9	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9998624259379859	WITHOUT_CLASSIFICATION	1.375740620141189E-4	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999987250240001	WITHOUT_CLASSIFICATION	1.2749759998905916E-6	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999999992400443	WITHOUT_CLASSIFICATION	7.599557026301919E-10	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999596913679444	WITHOUT_CLASSIFICATION	4.0308632055651484E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999995763034534	WITHOUT_CLASSIFICATION	4.236965465949191E-7	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999999863368059	WITHOUT_CLASSIFICATION	1.3663194120791604E-8	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9999977222463062	WITHOUT_CLASSIFICATION	2.2777536938919635E-6	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999956238413554	WITHOUT_CLASSIFICATION	4.376158644577783E-6	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9999999602292087	WITHOUT_CLASSIFICATION	3.9770791258257105E-8	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.999999968058686	WITHOUT_CLASSIFICATION	3.1941314034623916E-8	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999980398274924	WITHOUT_CLASSIFICATION	1.9601725077142095E-6	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.999999325815183	WITHOUT_CLASSIFICATION	6.741848170295231E-7	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999999878196035	WITHOUT_CLASSIFICATION	1.2180396525294936E-8	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999993692334589	WITHOUT_CLASSIFICATION	6.307665410347458E-7	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999998485624627	WITHOUT_CLASSIFICATION	1.514375373434506E-7	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999999531827011	WITHOUT_CLASSIFICATION	4.681729896125591E-8	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9996811399212607	WITHOUT_CLASSIFICATION	3.1886007873923716E-4	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.999983510181759	WITHOUT_CLASSIFICATION	1.6489818241036522E-5	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999997201161106	WITHOUT_CLASSIFICATION	2.7988388938306744E-7	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999999226115553	WITHOUT_CLASSIFICATION	7.738844469662635E-8	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999998696013468	WITHOUT_CLASSIFICATION	1.3039865314256622E-7	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999999779766356	WITHOUT_CLASSIFICATION	2.202336429384119E-8	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9999992196175349	WITHOUT_CLASSIFICATION	7.803824649901463E-7	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999946195947247	WITHOUT_CLASSIFICATION	5.38040527529155E-6	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999994198896498	WITHOUT_CLASSIFICATION	5.801103501867991E-7	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999984982118677	WITHOUT_CLASSIFICATION	1.501788132306472E-6	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999878645725646	WITHOUT_CLASSIFICATION	1.2135427435413715E-5	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999994714897793	WITHOUT_CLASSIFICATION	5.285102207162825E-7	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999930164921256	WITHOUT_CLASSIFICATION	6.983507874443745E-6	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999957339644886	WITHOUT_CLASSIFICATION	4.266035511396535E-6	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999998388722433	WITHOUT_CLASSIFICATION	1.6112775665157938E-7	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999997657345984	WITHOUT_CLASSIFICATION	2.3426540160770176E-7	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9999999668986825	WITHOUT_CLASSIFICATION	3.310131740867499E-8	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999999904065034	WITHOUT_CLASSIFICATION	9.593496488207673E-9	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999998662781412	WITHOUT_CLASSIFICATION	1.337218588175449E-7	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9999961254604577	WITHOUT_CLASSIFICATION	3.874539542287471E-6	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9999993909342255	WITHOUT_CLASSIFICATION	6.090657743932403E-7	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9999997680164918	WITHOUT_CLASSIFICATION	2.3198350825570952E-7	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999859252653936	WITHOUT_CLASSIFICATION	1.4074734606337792E-5	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999999852869925	WITHOUT_CLASSIFICATION	1.4713007529605259E-8	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999825570904288	WITHOUT_CLASSIFICATION	1.744290957114463E-5	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9995065108341106	WITHOUT_CLASSIFICATION	4.934891658893118E-4	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999875954581874	WITHOUT_CLASSIFICATION	1.2404541812587544E-5	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.999998586932015	WITHOUT_CLASSIFICATION	1.4130679850477567E-6	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999999434982	WITHOUT_CLASSIFICATION	5.650179994988513E-8	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999910529647631	WITHOUT_CLASSIFICATION	8.947035236866448E-6	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999993985034515	WITHOUT_CLASSIFICATION	6.014965484895265E-7	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999996440320494	WITHOUT_CLASSIFICATION	3.559679505733061E-7	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999990989541453	WITHOUT_CLASSIFICATION	9.010458547478139E-7	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.999999123356764	WITHOUT_CLASSIFICATION	8.766432360574985E-7	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9999975893356441	WITHOUT_CLASSIFICATION	2.4106643557814544E-6	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999985591558109	WITHOUT_CLASSIFICATION	1.4408441891118002E-6	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999985591558109	WITHOUT_CLASSIFICATION	1.4408441891118002E-6	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.99999861987063	WITHOUT_CLASSIFICATION	1.3801293700342717E-6	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.99999861987063	WITHOUT_CLASSIFICATION	1.3801293700342717E-6	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999996745856279	WITHOUT_CLASSIFICATION	3.254143720664945E-7	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999996745856279	WITHOUT_CLASSIFICATION	3.254143720664945E-7	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999991485028816	WITHOUT_CLASSIFICATION	8.514971183963304E-7	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999991485028816	WITHOUT_CLASSIFICATION	8.514971183963304E-7	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9999999039239411	WITHOUT_CLASSIFICATION	9.607605879163394E-8	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9999957072042515	WITHOUT_CLASSIFICATION	4.29279574861555E-6	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999989608615939	WITHOUT_CLASSIFICATION	1.039138406072315E-6	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999999956908477	WITHOUT_CLASSIFICATION	4.309152309282754E-9	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999997696854322	WITHOUT_CLASSIFICATION	2.303145676921569E-7	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999999151760898	WITHOUT_CLASSIFICATION	8.482391026901298E-8	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999890601064494	WITHOUT_CLASSIFICATION	1.0939893550563927E-5	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999999537324221	WITHOUT_CLASSIFICATION	4.626757799527208E-8	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999998509615367	WITHOUT_CLASSIFICATION	1.4903846332692354E-7	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999999531199826	WITHOUT_CLASSIFICATION	4.688001745495312E-8	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999915390825226	WITHOUT_CLASSIFICATION	8.460917477395586E-6	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999999058895914	WITHOUT_CLASSIFICATION	9.41104085557336E-8	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999992607088803	WITHOUT_CLASSIFICATION	7.392911196512416E-7	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999981197941924	WITHOUT_CLASSIFICATION	1.8802058076188323E-6	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999993021092864	WITHOUT_CLASSIFICATION	6.978907135891294E-7	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999998489239361	WITHOUT_CLASSIFICATION	1.5107606397145689E-7	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999606007012083	WITHOUT_CLASSIFICATION	3.9399298791756324E-5	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999999528601791	WITHOUT_CLASSIFICATION	4.713982089057945E-8	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999999663418493	WITHOUT_CLASSIFICATION	3.365815071182306E-8	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999089079480465	WITHOUT_CLASSIFICATION	9.109205195350518E-5	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999998207219436	WITHOUT_CLASSIFICATION	1.7927805636630098E-7	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999995649318708	WITHOUT_CLASSIFICATION	4.350681291292587E-7	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999461327477472	WITHOUT_CLASSIFICATION	5.3867252252795655E-5	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999999796914053	WITHOUT_CLASSIFICATION	2.0308594813912093E-8	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999993540190645	WITHOUT_CLASSIFICATION	6.45980935630636E-7	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999999898656774	WITHOUT_CLASSIFICATION	1.013432265020018E-8	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.999999101584138	WITHOUT_CLASSIFICATION	8.984158620673876E-7	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999961026336469	WITHOUT_CLASSIFICATION	3.897366353125168E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999961026336469	WITHOUT_CLASSIFICATION	3.897366353125168E-6	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999999334559078	WITHOUT_CLASSIFICATION	6.654409230579505E-8	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9999985547200068	WITHOUT_CLASSIFICATION	1.445279993162424E-6	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.999996978569084	WITHOUT_CLASSIFICATION	3.021430916133962E-6	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999999997327629	WITHOUT_CLASSIFICATION	2.672371116793164E-10	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999998289501689	WITHOUT_CLASSIFICATION	1.7104983099948673E-7	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999996784291307	WITHOUT_CLASSIFICATION	3.215708692820086E-7	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999985732952804	WITHOUT_CLASSIFICATION	1.4267047196546437E-6	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999985732952804	WITHOUT_CLASSIFICATION	1.4267047196546437E-6	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999997982576436	WITHOUT_CLASSIFICATION	2.0174235633419426E-7	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9000210293877233	WITHOUT_CLASSIFICATION	0.09997897061227674	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999992032344271	WITHOUT_CLASSIFICATION	7.967655728435625E-7	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999992032344271	WITHOUT_CLASSIFICATION	7.967655728435625E-7	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999999623955627	WITHOUT_CLASSIFICATION	3.7604437322465067E-8	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999997924614246	WITHOUT_CLASSIFICATION	2.075385755251728E-7	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999997924614246	WITHOUT_CLASSIFICATION	2.075385755251728E-7	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999701048984938	WITHOUT_CLASSIFICATION	2.9895101506155004E-5	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999701048984938	WITHOUT_CLASSIFICATION	2.9895101506155004E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999990973519552	WITHOUT_CLASSIFICATION	9.026480446529089E-7	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999990973519552	WITHOUT_CLASSIFICATION	9.026480446529089E-7	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9999997549829954	WITHOUT_CLASSIFICATION	2.450170045746206E-7	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.999997941311715	WITHOUT_CLASSIFICATION	2.0586882849625582E-6	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999997695603412	WITHOUT_CLASSIFICATION	2.3043965883615754E-7	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999999995497371	WITHOUT_CLASSIFICATION	4.502628780424644E-10	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999999965983636	WITHOUT_CLASSIFICATION	3.4016365327823443E-9	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999997206508144	WITHOUT_CLASSIFICATION	2.7934918558038627E-7	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999999310294955	WITHOUT_CLASSIFICATION	6.897050445786366E-8	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999999736058851	WITHOUT_CLASSIFICATION	2.639411491075511E-8	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999999310294955	WITHOUT_CLASSIFICATION	6.897050445786366E-8	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9985355603150629	WITHOUT_CLASSIFICATION	0.0014644396849371728	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999961525996441	WITHOUT_CLASSIFICATION	3.84740035575866E-6	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999980410839489	WITHOUT_CLASSIFICATION	1.9589160511617578E-6	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999920371882755	WITHOUT_CLASSIFICATION	7.962811724561664E-6	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999998460588477	WITHOUT_CLASSIFICATION	1.539411522955083E-7	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9998344582977249	WITHOUT_CLASSIFICATION	1.6554170227511825E-4	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999816146443176	WITHOUT_CLASSIFICATION	1.8385355682412103E-5	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999917221026878	WITHOUT_CLASSIFICATION	8.277897312222644E-6	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999996769268208	WITHOUT_CLASSIFICATION	3.23073179301095E-7	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999988824888906	WITHOUT_CLASSIFICATION	1.1175111094044117E-6	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999999829977034	WITHOUT_CLASSIFICATION	1.7002296546871103E-8	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999998643434111	WITHOUT_CLASSIFICATION	1.356565889195033E-7	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.9999590047665438	WITHOUT_CLASSIFICATION	4.099523345621728E-5	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.999999042401761	WITHOUT_CLASSIFICATION	9.575982390576055E-7	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999998281386799	WITHOUT_CLASSIFICATION	1.718613199963751E-7	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999999294570477	WITHOUT_CLASSIFICATION	7.054295219158572E-8	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.999999042885132	WITHOUT_CLASSIFICATION	9.571148680580288E-7	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.99994054233606	WITHOUT_CLASSIFICATION	5.945766394006389E-5	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9992414894294741	WITHOUT_CLASSIFICATION	7.585105705257778E-4	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9997630740329035	WITHOUT_CLASSIFICATION	2.369259670964765E-4	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999999953600802	WITHOUT_CLASSIFICATION	4.6399198530077724E-9	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999988880202004	WITHOUT_CLASSIFICATION	1.1119797995703649E-6	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.999999995911963	WITHOUT_CLASSIFICATION	4.0880370171922486E-9	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999986739159329	WITHOUT_CLASSIFICATION	1.3260840671809104E-6	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999979573870694	WITHOUT_CLASSIFICATION	2.042612930689495E-6	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999994972711629	WITHOUT_CLASSIFICATION	5.027288370728221E-7	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999999497275098	WITHOUT_CLASSIFICATION	5.027249013093054E-8	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999999441151135	WITHOUT_CLASSIFICATION	5.588488647640741E-8	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999999931041692	WITHOUT_CLASSIFICATION	6.895830814331346E-9	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999995890117132	WITHOUT_CLASSIFICATION	4.109882868378697E-7	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999998754944527	WITHOUT_CLASSIFICATION	1.245055472481589E-7	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999561678690793	WITHOUT_CLASSIFICATION	4.383213092072919E-5	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999999485443658	WITHOUT_CLASSIFICATION	5.145563410344787E-8	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999989561957812	WITHOUT_CLASSIFICATION	1.0438042188228757E-6	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9997285989856762	WITHOUT_CLASSIFICATION	2.714010143238236E-4	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999981098698463	WITHOUT_CLASSIFICATION	1.890130153784691E-6	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999998953513621	WITHOUT_CLASSIFICATION	1.0464863788983614E-7	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999950685938087	WITHOUT_CLASSIFICATION	4.931406191266914E-6	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999982203894431	WITHOUT_CLASSIFICATION	1.7796105569114066E-6	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999999747515469	WITHOUT_CLASSIFICATION	2.5248453056945318E-8	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.999999909134801	WITHOUT_CLASSIFICATION	9.086519908137847E-8	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999981494782174	WITHOUT_CLASSIFICATION	1.8505217825965021E-6	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.999999882458373	WITHOUT_CLASSIFICATION	1.1754162701203599E-7	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999995359545951	WITHOUT_CLASSIFICATION	4.6404540490548334E-7	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999998316597293	WITHOUT_CLASSIFICATION	1.6834027069142281E-7	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999998573254868	WITHOUT_CLASSIFICATION	1.4267451323273573E-7	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.999999970485467	WITHOUT_CLASSIFICATION	2.951453302888945E-8	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999994017431415	WITHOUT_CLASSIFICATION	5.982568584867457E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999993957877263	WITHOUT_CLASSIFICATION	6.042122736685926E-7	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999979133866096	WITHOUT_CLASSIFICATION	2.086613390396296E-6	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999957071313493	WITHOUT_CLASSIFICATION	4.292868650653567E-6	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999998854627169	WITHOUT_CLASSIFICATION	1.1453728311846602E-7	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999888936324713	WITHOUT_CLASSIFICATION	1.1106367528674575E-5	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999998211863589	WITHOUT_CLASSIFICATION	1.7881364103156407E-7	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999978880922528	WITHOUT_CLASSIFICATION	2.111907747198209E-6	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999978880922528	WITHOUT_CLASSIFICATION	2.111907747198209E-6	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999935509717	WITHOUT_CLASSIFICATION	6.449028311315426E-9	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999440791305	WITHOUT_CLASSIFICATION	5.5920869498353525E-8	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999999892126576	WITHOUT_CLASSIFICATION	1.0787342325910553E-8	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999959559925455	WITHOUT_CLASSIFICATION	4.04400745438076E-6	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999986205594559	WITHOUT_CLASSIFICATION	1.3794405442286269E-6	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999957635945254	WITHOUT_CLASSIFICATION	4.236405474589988E-6	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999998895594829	WITHOUT_CLASSIFICATION	1.1044051710546829E-7	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9994586799562294	WITHOUT_CLASSIFICATION	5.413200437707069E-4	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999972055890738	WITHOUT_CLASSIFICATION	2.7944109262509516E-6	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999999053797846	WITHOUT_CLASSIFICATION	9.462021549089102E-8	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999979767347251	WITHOUT_CLASSIFICATION	2.023265274989991E-6	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999979767347251	WITHOUT_CLASSIFICATION	2.023265274989991E-6	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9989169168875562	WITHOUT_CLASSIFICATION	0.0010830831124437384	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999999447179265	WITHOUT_CLASSIFICATION	5.528207347727303E-8	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999996365926661	WITHOUT_CLASSIFICATION	3.6340733382549794E-7	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999999996360578	WITHOUT_CLASSIFICATION	3.6394225354795904E-10	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999999977546035	WITHOUT_CLASSIFICATION	2.245396511764068E-9	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.999999962782007	WITHOUT_CLASSIFICATION	3.721799307476656E-8	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999922901655	WITHOUT_CLASSIFICATION	7.70983463308381E-9	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999999867122995	WITHOUT_CLASSIFICATION	1.3287700623613105E-8	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999997763206308	WITHOUT_CLASSIFICATION	2.2367936933551808E-7	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999798206520527	WITHOUT_CLASSIFICATION	2.0179347947273483E-5	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999999994774392	WITHOUT_CLASSIFICATION	5.225607326910736E-10	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999997503641741	WITHOUT_CLASSIFICATION	2.4963582596337144E-7	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999996845092262	WITHOUT_CLASSIFICATION	3.1549077384279156E-7	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999996845092262	WITHOUT_CLASSIFICATION	3.1549077384279156E-7	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999976447384321	WITHOUT_CLASSIFICATION	2.355261567781761E-6	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.999995977963275	WITHOUT_CLASSIFICATION	4.0220367250525685E-6	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999997330491874	WITHOUT_CLASSIFICATION	2.669508125841633E-7	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999977681412361	WITHOUT_CLASSIFICATION	2.231858763956181E-6	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999986973659708	WITHOUT_CLASSIFICATION	1.3026340292448934E-6	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999999820945218	WITHOUT_CLASSIFICATION	1.7905478215769375E-8	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999991118838569	WITHOUT_CLASSIFICATION	8.881161430829277E-7	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999999869970798	WITHOUT_CLASSIFICATION	1.3002920170731677E-8	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999967677913533	WITHOUT_CLASSIFICATION	3.232208646596567E-6	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999999583665543	WITHOUT_CLASSIFICATION	4.163344572674725E-8	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999996365926661	WITHOUT_CLASSIFICATION	3.6340733382549794E-7	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999994181088324	WITHOUT_CLASSIFICATION	5.818911676463015E-7	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999994524109945	WITHOUT_CLASSIFICATION	5.475890054946185E-7	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999999621375492	WITHOUT_CLASSIFICATION	3.7862450791034636E-8	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999990290622509	WITHOUT_CLASSIFICATION	9.709377491389694E-7	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999998388272435	WITHOUT_CLASSIFICATION	1.6117275648769296E-7	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999999740145974	WITHOUT_CLASSIFICATION	2.5985402571588586E-8	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999949723339847	WITHOUT_CLASSIFICATION	5.027666015321696E-6	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999966951123858	WITHOUT_CLASSIFICATION	3.304887614341983E-6	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999999975028515	WITHOUT_CLASSIFICATION	2.4971485453752077E-9	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999886676239593	WITHOUT_CLASSIFICATION	1.13323760406758E-5	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999927339641392	WITHOUT_CLASSIFICATION	7.266035860706329E-6	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999997150590936	WITHOUT_CLASSIFICATION	2.8494090647174776E-7	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999974022512198	WITHOUT_CLASSIFICATION	2.597748780160593E-6	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.999957671256647	WITHOUT_CLASSIFICATION	4.232874335297363E-5	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999980731758185	WITHOUT_CLASSIFICATION	1.9268241814816567E-6	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.999998024059452	WITHOUT_CLASSIFICATION	1.975940548003732E-6	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999986490150685	WITHOUT_CLASSIFICATION	1.3509849315628023E-6	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999999569364943	WITHOUT_CLASSIFICATION	4.3063505731653235E-8	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999954213924122	WITHOUT_CLASSIFICATION	4.578607587780042E-6	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.9999999939551973	WITHOUT_CLASSIFICATION	6.044802730399507E-9	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999999981975277	WITHOUT_CLASSIFICATION	1.8024722841378698E-9	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999953111219408	WITHOUT_CLASSIFICATION	4.68887805915916E-6	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.999999670047328	WITHOUT_CLASSIFICATION	3.2995267199960096E-7	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999986043788079	WITHOUT_CLASSIFICATION	1.3956211920630246E-6	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999997744771488	WITHOUT_CLASSIFICATION	2.2552285130659434E-7	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999999904270379	WITHOUT_CLASSIFICATION	9.57296207048143E-9	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9999983940057647	WITHOUT_CLASSIFICATION	1.605994235237651E-6	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999995528015231	WITHOUT_CLASSIFICATION	4.471984769663903E-7	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9999965634454937	WITHOUT_CLASSIFICATION	3.4365545061959418E-6	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999971093587104	WITHOUT_CLASSIFICATION	2.8906412895600722E-6	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999988883167231	WITHOUT_CLASSIFICATION	1.1116832768630753E-6	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999988883167231	WITHOUT_CLASSIFICATION	1.1116832768630753E-6	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9986786119768305	WITHOUT_CLASSIFICATION	0.0013213880231694604	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9995256628035444	WITHOUT_CLASSIFICATION	4.7433719645566925E-4	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.9999999992337303	WITHOUT_CLASSIFICATION	7.662698071514268E-10	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9998217370023722	WITHOUT_CLASSIFICATION	1.7826299762781577E-4	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999909213835944	WITHOUT_CLASSIFICATION	9.078616405614261E-6	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999998945405163	WITHOUT_CLASSIFICATION	1.0545948372954553E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.99999916130861	WITHOUT_CLASSIFICATION	8.386913900329749E-7	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999999907484064	WITHOUT_CLASSIFICATION	9.251593532639612E-9	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.999998683757872	WITHOUT_CLASSIFICATION	1.3162421278963057E-6	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999992588319149	WITHOUT_CLASSIFICATION	7.411680850995824E-7	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999998856645378	WITHOUT_CLASSIFICATION	1.1433546230431442E-7	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9999995233967525	WITHOUT_CLASSIFICATION	4.7660324745371917E-7	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999990985829877	WITHOUT_CLASSIFICATION	9.014170122498038E-7	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999998388722433	WITHOUT_CLASSIFICATION	1.6112775665157938E-7	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9990068804764927	WITHOUT_CLASSIFICATION	9.9311952350736E-4	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999097844109393	WITHOUT_CLASSIFICATION	9.021558906079258E-5	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999972992956019	WITHOUT_CLASSIFICATION	2.700704398180956E-6	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999999683003867	WITHOUT_CLASSIFICATION	3.1699613201596255E-8	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.999999355204898	WITHOUT_CLASSIFICATION	6.447951020537073E-7	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999735640817251	WITHOUT_CLASSIFICATION	2.6435918274924833E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999538784768497	WITHOUT_CLASSIFICATION	4.6121523150310765E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999538784768497	WITHOUT_CLASSIFICATION	4.6121523150310765E-5	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9999931284911037	WITHOUT_CLASSIFICATION	6.871508896236563E-6	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999946962678284	WITHOUT_CLASSIFICATION	5.303732171553903E-6	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999995654550816	WITHOUT_CLASSIFICATION	4.3454491829031766E-7	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999999966969192	WITHOUT_CLASSIFICATION	3.3030808017899543E-9	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999999989003706	WITHOUT_CLASSIFICATION	1.0996294213077512E-9	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999247558793601	WITHOUT_CLASSIFICATION	7.52441206398617E-5	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999998936049977	WITHOUT_CLASSIFICATION	1.0639500233712487E-7	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999998017636	WITHOUT_CLASSIFICATION	1.9823641536635347E-10	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999969419199786	WITHOUT_CLASSIFICATION	3.0580800214236523E-6	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999968424236342	WITHOUT_CLASSIFICATION	3.1575763658465347E-6	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.999996923374807	WITHOUT_CLASSIFICATION	3.0766251931318556E-6	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999994915597852	WITHOUT_CLASSIFICATION	5.084402148783224E-7	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999992863712068	WITHOUT_CLASSIFICATION	7.136287932341814E-7	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999999973387531	WITHOUT_CLASSIFICATION	2.6612469454702903E-9	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999941263047608	WITHOUT_CLASSIFICATION	5.8736952392422815E-6	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999996701701964	WITHOUT_CLASSIFICATION	3.2982980364400885E-7	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999964503547357	WITHOUT_CLASSIFICATION	3.549645264322266E-6	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9999995886552904	WITHOUT_CLASSIFICATION	4.1134470959671206E-7	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999425188066	WITHOUT_CLASSIFICATION	5.748119342590543E-8	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999999937731383	WITHOUT_CLASSIFICATION	6.226861707856974E-9	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999740791518709	WITHOUT_CLASSIFICATION	2.5920848129128844E-5	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999986742352982	WITHOUT_CLASSIFICATION	1.3257647018441518E-6	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999996457839339	WITHOUT_CLASSIFICATION	3.542160661389623E-7	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999999212590043	WITHOUT_CLASSIFICATION	7.874099577485919E-8	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999982095855454	WITHOUT_CLASSIFICATION	1.7904144545088722E-6	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999998481558399	WITHOUT_CLASSIFICATION	1.5184416018270796E-7	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.9999787904047935	WITHOUT_CLASSIFICATION	2.1209595206366077E-5	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999998881426527	WITHOUT_CLASSIFICATION	1.1185734721003216E-7	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999999600392135	WITHOUT_CLASSIFICATION	3.996078645186353E-8	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999997171804201	WITHOUT_CLASSIFICATION	2.8281957993060275E-7	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999998534206733	WITHOUT_CLASSIFICATION	1.4657932662051828E-7	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999878947571855	WITHOUT_CLASSIFICATION	1.2105242814445264E-5	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999990356763148	WITHOUT_CLASSIFICATION	9.643236852374744E-7	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.9999994939275557	WITHOUT_CLASSIFICATION	5.060724443741134E-7	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999999987517069	WITHOUT_CLASSIFICATION	1.2482932058293482E-9	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999999994041766	WITHOUT_CLASSIFICATION	5.958233857799801E-10	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999999815224392	WITHOUT_CLASSIFICATION	1.847756092474809E-8	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9999738606271524	WITHOUT_CLASSIFICATION	2.613937284752588E-5	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999299384325123	WITHOUT_CLASSIFICATION	7.006156748772744E-5	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999983904814489	WITHOUT_CLASSIFICATION	1.6095185510749654E-6	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.999999999004869	WITHOUT_CLASSIFICATION	9.951310751838436E-10	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999992254780894	WITHOUT_CLASSIFICATION	7.745219105458101E-7	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999996318642512	WITHOUT_CLASSIFICATION	3.6813574869146925E-7	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999997982349952	WITHOUT_CLASSIFICATION	2.0176500470366965E-7	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999998437609389	WITHOUT_CLASSIFICATION	1.5623906108364523E-7	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999997982349952	WITHOUT_CLASSIFICATION	2.0176500470366965E-7	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999999163274074	WITHOUT_CLASSIFICATION	8.367259260866325E-8	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9798350879850416	WITHOUT_CLASSIFICATION	0.02016491201495849	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999014836538275	WITHOUT_CLASSIFICATION	9.851634617248605E-5	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.6930411815763124	IMPLEMENTATION	0.30695881842368755	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999991362107361	WITHOUT_CLASSIFICATION	8.637892639202088E-7	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999999871830741	WITHOUT_CLASSIFICATION	1.2816925959450555E-8	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9999999505231717	WITHOUT_CLASSIFICATION	4.9476828282704405E-8	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.999999992855582	WITHOUT_CLASSIFICATION	7.144417908206085E-9	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.99999764895642	WITHOUT_CLASSIFICATION	2.351043580080278E-6	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9912088885336666	WITHOUT_CLASSIFICATION	0.008791111466333427	IMPLEMENTATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9985764639334489	WITHOUT_CLASSIFICATION	0.0014235360665511552	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999866196517941	WITHOUT_CLASSIFICATION	1.3380348205974051E-5	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9995070906790784	WITHOUT_CLASSIFICATION	4.929093209216815E-4	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.999997921434241	WITHOUT_CLASSIFICATION	2.0785657589883256E-6	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9962530108079986	WITHOUT_CLASSIFICATION	0.00374698919200157	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9775897591742407	WITHOUT_CLASSIFICATION	0.02241024082575925	IMPLEMENTATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9978967235176888	WITHOUT_CLASSIFICATION	0.0021032764823111817	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999999990253223	WITHOUT_CLASSIFICATION	9.746776233087216E-10	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999901459821372	WITHOUT_CLASSIFICATION	9.854017862868114E-6	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.99999236999042	WITHOUT_CLASSIFICATION	7.630009580000201E-6	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9998698743630904	WITHOUT_CLASSIFICATION	1.301256369095009E-4	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999866306823	WITHOUT_CLASSIFICATION	1.3369317751903791E-8	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999989781016793	WITHOUT_CLASSIFICATION	1.0218983208175343E-6	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999998691358839	WITHOUT_CLASSIFICATION	1.3086411610327338E-7	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999994104104625	WITHOUT_CLASSIFICATION	5.895895375194569E-7	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999986743203264	WITHOUT_CLASSIFICATION	1.3256796735903493E-6	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999999789113823	WITHOUT_CLASSIFICATION	2.108861781494154E-8	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999999727235815	WITHOUT_CLASSIFICATION	2.7276418352195565E-8	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999991217838566	WITHOUT_CLASSIFICATION	8.782161432500444E-7	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999981275726713	WITHOUT_CLASSIFICATION	1.8724273286674724E-6	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999989006939903	WITHOUT_CLASSIFICATION	1.0993060096728913E-6	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999983045814668	WITHOUT_CLASSIFICATION	1.695418533260579E-6	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.99999694797958	WITHOUT_CLASSIFICATION	3.0520204198804385E-6	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9999948230004625	WITHOUT_CLASSIFICATION	5.176999537550359E-6	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999983726434323	WITHOUT_CLASSIFICATION	1.627356567780428E-6	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9999994479490212	WITHOUT_CLASSIFICATION	5.520509788365105E-7	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999999999441543	WITHOUT_CLASSIFICATION	5.584563962498931E-11	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.999999979885874	WITHOUT_CLASSIFICATION	2.0114126074269114E-8	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999787511032009	WITHOUT_CLASSIFICATION	2.124889679913731E-5	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999999065902144	WITHOUT_CLASSIFICATION	9.340978561077387E-8	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999101319950238	WITHOUT_CLASSIFICATION	8.986800497620104E-5	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.999991178558262	WITHOUT_CLASSIFICATION	8.82144173801805E-6	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999999815492762	WITHOUT_CLASSIFICATION	1.8450723774568933E-8	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999932462600105	WITHOUT_CLASSIFICATION	6.7537399894963905E-6	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999932462600105	WITHOUT_CLASSIFICATION	6.7537399894963905E-6	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999833237261545	WITHOUT_CLASSIFICATION	1.667627384558854E-5	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999999945397632	WITHOUT_CLASSIFICATION	5.460236829187878E-9	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999998690775687	WITHOUT_CLASSIFICATION	1.3092243121827876E-7	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999999999964857	WITHOUT_CLASSIFICATION	3.5144315893317726E-12	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999999999913	WITHOUT_CLASSIFICATION	8.549781896747822E-15	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999979683954	WITHOUT_CLASSIFICATION	2.031604655859794E-9	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999273042609453	WITHOUT_CLASSIFICATION	7.269573905468129E-5	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999995256895675	WITHOUT_CLASSIFICATION	4.7431043254221215E-7	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999992369748991	WITHOUT_CLASSIFICATION	7.630251009313473E-7	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999999954644201	WITHOUT_CLASSIFICATION	4.535579878998366E-9	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999999993858457	WITHOUT_CLASSIFICATION	6.141543521372219E-10	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999999737944562	WITHOUT_CLASSIFICATION	2.620554385602925E-8	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999971040035299	WITHOUT_CLASSIFICATION	2.8959964699924047E-6	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999013322480608	WITHOUT_CLASSIFICATION	9.866775193927476E-5	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999999422190547	WITHOUT_CLASSIFICATION	5.778094528287363E-8	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999213997817873	WITHOUT_CLASSIFICATION	7.860021821274328E-5	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.999999915733875	WITHOUT_CLASSIFICATION	8.426612497084367E-8	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.999999997662627	WITHOUT_CLASSIFICATION	2.3373730695805334E-9	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.99999989973022	WITHOUT_CLASSIFICATION	1.0026977993296951E-7	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999999784928899	WITHOUT_CLASSIFICATION	2.1507110072590446E-8	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.9998834421252248	WITHOUT_CLASSIFICATION	1.1655787477509142E-4	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9997553010358129	WITHOUT_CLASSIFICATION	2.4469896418714604E-4	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.999996286545926	WITHOUT_CLASSIFICATION	3.7134540739449595E-6	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999999070990169	WITHOUT_CLASSIFICATION	9.2900983115028E-8	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999999914048623	WITHOUT_CLASSIFICATION	8.595137695691439E-9	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999990863265	WITHOUT_CLASSIFICATION	9.136734073411977E-10	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999999088959	WITHOUT_CLASSIFICATION	9.110418628615705E-11	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999997049211405	WITHOUT_CLASSIFICATION	2.950788595386303E-7	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999999975391074	WITHOUT_CLASSIFICATION	2.4608925621863653E-9	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999999929500343	WITHOUT_CLASSIFICATION	7.04996574477952E-9	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999951656742418	WITHOUT_CLASSIFICATION	4.834325758152457E-6	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999997800132194	WITHOUT_CLASSIFICATION	2.1998678057683496E-7	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999921239805	WITHOUT_CLASSIFICATION	7.876019450694125E-9	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999954588533232	WITHOUT_CLASSIFICATION	4.541146676836096E-6	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.999999999651523	WITHOUT_CLASSIFICATION	3.4847696718620563E-10	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999999237781184	WITHOUT_CLASSIFICATION	7.622188154008916E-8	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.99999918129655	WITHOUT_CLASSIFICATION	8.187034500346282E-7	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999994305501403	WITHOUT_CLASSIFICATION	5.694498598286606E-7	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999792825442528	WITHOUT_CLASSIFICATION	2.0717455747145753E-5	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999999376686666	WITHOUT_CLASSIFICATION	6.233133339277067E-7	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999980967583965	WITHOUT_CLASSIFICATION	1.9032416034450539E-6	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9987307769530783	WITHOUT_CLASSIFICATION	0.0012692230469217272	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9996567327666952	WITHOUT_CLASSIFICATION	3.432672333047575E-4	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999998714419776	WITHOUT_CLASSIFICATION	1.2855802252406747E-7	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999988886429516	WITHOUT_CLASSIFICATION	1.1113570484470762E-6	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999981801440201	WITHOUT_CLASSIFICATION	1.819855979955055E-6	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999977566276143	WITHOUT_CLASSIFICATION	2.2433723857540983E-6	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.999999687042184	WITHOUT_CLASSIFICATION	3.1295781603033043E-7	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.9999971562080652	WITHOUT_CLASSIFICATION	2.8437919347742537E-6	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999183072049705	WITHOUT_CLASSIFICATION	8.16927950293931E-5	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.999995360040728	WITHOUT_CLASSIFICATION	4.639959272064372E-6	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999989413609469	WITHOUT_CLASSIFICATION	1.0586390531260794E-6	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999991301495393	WITHOUT_CLASSIFICATION	8.698504605342081E-7	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999999995895617	WITHOUT_CLASSIFICATION	4.104382360046801E-10	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999998046093542	WITHOUT_CLASSIFICATION	1.9539064575172564E-7	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999869658277011	WITHOUT_CLASSIFICATION	1.303417229891445E-5	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999999965371579	WITHOUT_CLASSIFICATION	3.4628419900700307E-9	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999999859870523	WITHOUT_CLASSIFICATION	1.401294760702461E-8	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999969497608434	WITHOUT_CLASSIFICATION	3.05023915650794E-6	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999999977663799	WITHOUT_CLASSIFICATION	2.2336201026273013E-8	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999998440023053	WITHOUT_CLASSIFICATION	1.5599769462040096E-7	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.999999906810858	WITHOUT_CLASSIFICATION	9.318914196542864E-8	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999999153873	WITHOUT_CLASSIFICATION	8.461256546656247E-11	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999971753938	WITHOUT_CLASSIFICATION	2.82460619586939E-9	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.999959657157074	WITHOUT_CLASSIFICATION	4.034284292602895E-5	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999996513808744	WITHOUT_CLASSIFICATION	3.486191254854082E-7	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999991099196601	WITHOUT_CLASSIFICATION	8.900803399647336E-7	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999999943409892	WITHOUT_CLASSIFICATION	5.659010844429399E-9	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.9999986560667328	WITHOUT_CLASSIFICATION	1.3439332673291246E-6	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999994534198547	WITHOUT_CLASSIFICATION	5.465801452418733E-7	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999994947292674	WITHOUT_CLASSIFICATION	5.052707325026805E-7	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999866785412378	WITHOUT_CLASSIFICATION	1.3321458762252897E-5	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999999454813352	WITHOUT_CLASSIFICATION	5.4518664676377486E-8	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999996214825201	WITHOUT_CLASSIFICATION	3.785174798646626E-7	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9999995285667556	WITHOUT_CLASSIFICATION	4.714332445214166E-7	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9999987597447408	WITHOUT_CLASSIFICATION	1.2402552591910062E-6	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9999994141735599	WITHOUT_CLASSIFICATION	5.858264401092474E-7	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9999994807791062	WITHOUT_CLASSIFICATION	5.192208938890289E-7	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9999993903613595	WITHOUT_CLASSIFICATION	6.096386405220048E-7	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9999994121502783	WITHOUT_CLASSIFICATION	5.878497216925213E-7	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.999999298028822	WITHOUT_CLASSIFICATION	7.019711780061783E-7	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9999994267681965	WITHOUT_CLASSIFICATION	5.732318034026471E-7	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9999990859204344	WITHOUT_CLASSIFICATION	9.140795656124652E-7	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9999992923859264	WITHOUT_CLASSIFICATION	7.076140735226585E-7	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9999987595036002	WITHOUT_CLASSIFICATION	1.2404963997301869E-6	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9999989778652397	WITHOUT_CLASSIFICATION	1.0221347602599057E-6	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9999987920745176	WITHOUT_CLASSIFICATION	1.2079254824618939E-6	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9999986688211908	WITHOUT_CLASSIFICATION	1.3311788091989206E-6	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9999984326817531	WITHOUT_CLASSIFICATION	1.5673182468310451E-6	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9999988391728468	WITHOUT_CLASSIFICATION	1.1608271531280393E-6	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9999984510934592	WITHOUT_CLASSIFICATION	1.5489065408391112E-6	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9999996566130724	WITHOUT_CLASSIFICATION	3.433869276286205E-7	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9999988557315563	WITHOUT_CLASSIFICATION	1.1442684436813757E-6	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9999997476538117	WITHOUT_CLASSIFICATION	2.5234618823430614E-7	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9954007948638833	WITHOUT_CLASSIFICATION	0.004599205136116612	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9998350202960237	WITHOUT_CLASSIFICATION	1.6497970397627698E-4	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999993417425874	WITHOUT_CLASSIFICATION	6.582574125446386E-7	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999893728289685	WITHOUT_CLASSIFICATION	1.0627171031482257E-5	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.999999544237121	WITHOUT_CLASSIFICATION	4.5576287907975224E-7	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999981726160406	WITHOUT_CLASSIFICATION	1.827383959349582E-6	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.8864862424296964	WITHOUT_CLASSIFICATION	0.11351375757030349	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999996529404828	WITHOUT_CLASSIFICATION	3.470595173176943E-7	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999967202617873	WITHOUT_CLASSIFICATION	3.2797382127351147E-6	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9539175238643203	IMPLEMENTATION	0.046082476135679645	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9999986956712299	WITHOUT_CLASSIFICATION	1.304328770093567E-6	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999999992677638	WITHOUT_CLASSIFICATION	7.322362169663453E-10	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999997817765325	WITHOUT_CLASSIFICATION	2.1822346743154474E-7	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999997817765325	WITHOUT_CLASSIFICATION	2.1822346743154474E-7	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999997783643796	WITHOUT_CLASSIFICATION	2.2163562048749283E-7	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9998464024874175	WITHOUT_CLASSIFICATION	1.5359751258246763E-4	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999999675228	WITHOUT_CLASSIFICATION	3.2477249668162154E-11	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999985916603584	WITHOUT_CLASSIFICATION	1.4083396415925894E-6	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999905906404567	WITHOUT_CLASSIFICATION	9.409359543247108E-6	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.999999010880141	WITHOUT_CLASSIFICATION	9.89119859094395E-7	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9999998961423886	WITHOUT_CLASSIFICATION	1.0385761137590596E-7	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999979518331558	WITHOUT_CLASSIFICATION	2.0481668441896673E-6	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9999996705670021	WITHOUT_CLASSIFICATION	3.294329978724413E-7	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9999998103822934	WITHOUT_CLASSIFICATION	1.8961770663597686E-7	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999451481380252	WITHOUT_CLASSIFICATION	5.485186197494248E-5	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999999862350734	WITHOUT_CLASSIFICATION	1.3764926556877013E-8	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9999997149210272	WITHOUT_CLASSIFICATION	2.8507897274366405E-7	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999997627443407	WITHOUT_CLASSIFICATION	2.3725565936094657E-7	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999973455965391	WITHOUT_CLASSIFICATION	2.6544034609580766E-6	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.9999919618940106	WITHOUT_CLASSIFICATION	8.038105989320998E-6	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.999999968033475	WITHOUT_CLASSIFICATION	3.196652503816918E-8	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999999854772534	WITHOUT_CLASSIFICATION	1.452274644183995E-8	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999969207028653	WITHOUT_CLASSIFICATION	3.0792971347781665E-6	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999967643301558	WITHOUT_CLASSIFICATION	3.235669844159407E-6	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999999816109723	WITHOUT_CLASSIFICATION	1.838902773894659E-8	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.999999800459998	WITHOUT_CLASSIFICATION	1.995400020086465E-7	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999890946434755	WITHOUT_CLASSIFICATION	1.0905356524426233E-5	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999999894460965	WITHOUT_CLASSIFICATION	1.0553903552348524E-8	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999979401549487	WITHOUT_CLASSIFICATION	2.059845051255469E-6	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999947565765185	WITHOUT_CLASSIFICATION	5.243423481476211E-6	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999999900695934	WITHOUT_CLASSIFICATION	9.930406622183453E-9	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999993161856595	WITHOUT_CLASSIFICATION	6.838143405973032E-7	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999887590891079	WITHOUT_CLASSIFICATION	1.1240910892046441E-5	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999961769842485	WITHOUT_CLASSIFICATION	3.823015751480482E-6	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999951396488694	WITHOUT_CLASSIFICATION	4.860351130541281E-6	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999936422335756	WITHOUT_CLASSIFICATION	6.357766424445583E-6	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999951161986498	WITHOUT_CLASSIFICATION	4.883801350188807E-6	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999952179697799	WITHOUT_CLASSIFICATION	4.782030220141814E-6	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999985742101822	WITHOUT_CLASSIFICATION	1.4257898177007734E-6	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999980688204546	WITHOUT_CLASSIFICATION	1.931179545409461E-6	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999997755540807	WITHOUT_CLASSIFICATION	2.2444591933881556E-7	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999999852045779	WITHOUT_CLASSIFICATION	1.4795422166772673E-8	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999653309719917	WITHOUT_CLASSIFICATION	3.4669028008340055E-5	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999999965885387	WITHOUT_CLASSIFICATION	3.411461364351732E-9	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9900474200244564	WITHOUT_CLASSIFICATION	0.009952579975543507	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999641882768553	WITHOUT_CLASSIFICATION	3.581172314472694E-5	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999539606997032	WITHOUT_CLASSIFICATION	4.603930029674915E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9997071016009524	WITHOUT_CLASSIFICATION	2.9289839904760435E-4	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9997071016009524	WITHOUT_CLASSIFICATION	2.9289839904760435E-4	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999999886351822	WITHOUT_CLASSIFICATION	1.1364817815130858E-8	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.999990194039535	WITHOUT_CLASSIFICATION	9.805960464983334E-6	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999999175642912	WITHOUT_CLASSIFICATION	8.243570884541179E-8	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9999980931038238	WITHOUT_CLASSIFICATION	1.9068961761991339E-6	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999998396489986	WITHOUT_CLASSIFICATION	1.603510012979527E-7	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9999981015862502	WITHOUT_CLASSIFICATION	1.8984137496355029E-6	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.999991048664469	WITHOUT_CLASSIFICATION	8.951335531055837E-6	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9997519376394198	WITHOUT_CLASSIFICATION	2.480623605801664E-4	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999973020367264	WITHOUT_CLASSIFICATION	2.697963273669822E-6	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.99999969767687	WITHOUT_CLASSIFICATION	3.023231299932228E-7	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999997695476526	WITHOUT_CLASSIFICATION	2.3045234732857643E-7	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999994406533477	WITHOUT_CLASSIFICATION	5.593466522948136E-7	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999934375970572	WITHOUT_CLASSIFICATION	6.562402942868158E-6	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999999962659734	WITHOUT_CLASSIFICATION	3.73402655861725E-9	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.8087940154271266	WITHOUT_CLASSIFICATION	0.19120598457287347	IMPLEMENTATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9998381045420508	WITHOUT_CLASSIFICATION	1.6189545794913817E-4	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999878014267002	WITHOUT_CLASSIFICATION	1.2198573299939401E-5	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999999775530871	WITHOUT_CLASSIFICATION	2.2446912844617127E-8	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9977179710913627	WITHOUT_CLASSIFICATION	0.002282028908637199	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999930164921256	WITHOUT_CLASSIFICATION	6.983507874443745E-6	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999954790130796	WITHOUT_CLASSIFICATION	4.520986920372728E-6	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999954790130796	WITHOUT_CLASSIFICATION	4.520986920372728E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.999999664015941	WITHOUT_CLASSIFICATION	3.359840591300741E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.999999664015941	WITHOUT_CLASSIFICATION	3.359840591300741E-7	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999998024839114	WITHOUT_CLASSIFICATION	1.9751608864518752E-7	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999986064704253	WITHOUT_CLASSIFICATION	1.3935295747158208E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999989847788651	WITHOUT_CLASSIFICATION	1.015221135028499E-6	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999183265607	WITHOUT_CLASSIFICATION	8.16734393161075E-8	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999997695603412	WITHOUT_CLASSIFICATION	2.3043965883615754E-7	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999761836155	WITHOUT_CLASSIFICATION	2.3816384520670477E-8	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9833155686465102	WITHOUT_CLASSIFICATION	0.016684431353489838	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9999997692433594	WITHOUT_CLASSIFICATION	2.3075664053470686E-7	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999993961446061	WITHOUT_CLASSIFICATION	6.038553938960262E-7	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999994321715547	WITHOUT_CLASSIFICATION	5.678284453152486E-7	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999999898888465	WITHOUT_CLASSIFICATION	1.0111153434426221E-8	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999999446443234	WITHOUT_CLASSIFICATION	5.5355676625180935E-8	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999999996962488	WITHOUT_CLASSIFICATION	3.0375124166700246E-10	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999456727912485	WITHOUT_CLASSIFICATION	5.4327208751514715E-5	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999975719662696	WITHOUT_CLASSIFICATION	2.4280337304366176E-6	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.9999950683648825	WITHOUT_CLASSIFICATION	4.931635117545905E-6	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.999883673351883	WITHOUT_CLASSIFICATION	1.1632664811697832E-4	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999999569954041	WITHOUT_CLASSIFICATION	4.3004595882111077E-8	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9999976935249062	WITHOUT_CLASSIFICATION	2.3064750937505085E-6	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999823975284492	WITHOUT_CLASSIFICATION	1.76024715508038E-5	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999969107035898	WITHOUT_CLASSIFICATION	3.0892964101332075E-6	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999995690457225	WITHOUT_CLASSIFICATION	4.3095427748191895E-7	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999999912966515	WITHOUT_CLASSIFICATION	8.70334848953097E-9	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999999789113823	WITHOUT_CLASSIFICATION	2.108861781494154E-8	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999979683954	WITHOUT_CLASSIFICATION	2.031604655859794E-9	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999988267490577	WITHOUT_CLASSIFICATION	1.1732509423476706E-6	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999999881278464	WITHOUT_CLASSIFICATION	1.1872153505273997E-8	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999999962930042	WITHOUT_CLASSIFICATION	3.7069957304751796E-9	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999998623963391	WITHOUT_CLASSIFICATION	1.3760366091791963E-7	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999983055866501	WITHOUT_CLASSIFICATION	1.694413349870157E-6	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999983055866501	WITHOUT_CLASSIFICATION	1.694413349870157E-6	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999911364118	WITHOUT_CLASSIFICATION	8.863588197187394E-9	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999999663840476	WITHOUT_CLASSIFICATION	3.3615952239478395E-8	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999997470646442	WITHOUT_CLASSIFICATION	2.5293535576938843E-7	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999999943615889	WITHOUT_CLASSIFICATION	5.638410981331951E-9	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999998656936254	WITHOUT_CLASSIFICATION	1.343063745402923E-7	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9999997237618049	WITHOUT_CLASSIFICATION	2.7623819506521943E-7	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.999999850210245	WITHOUT_CLASSIFICATION	1.497897550292745E-7	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999998667269923	WITHOUT_CLASSIFICATION	1.3327300773887873E-7	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999977838007074	WITHOUT_CLASSIFICATION	2.2161992926318913E-6	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999999926598594	WITHOUT_CLASSIFICATION	7.340140583366484E-9	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9999999659596133	WITHOUT_CLASSIFICATION	3.404038669147237E-8	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999995447488891	WITHOUT_CLASSIFICATION	4.5525111096749E-7	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999960685695479	WITHOUT_CLASSIFICATION	3.931430452018554E-6	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999999957960299	WITHOUT_CLASSIFICATION	4.203970052368509E-9	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999999983275004	WITHOUT_CLASSIFICATION	1.6724996284631962E-9	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999989608615939	WITHOUT_CLASSIFICATION	1.039138406072315E-6	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999999687900676	WITHOUT_CLASSIFICATION	3.120993240039917E-8	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999999134502372	WITHOUT_CLASSIFICATION	8.654976287027269E-8	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999980040783014	WITHOUT_CLASSIFICATION	1.9959216985622363E-6	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999999528081139	WITHOUT_CLASSIFICATION	4.7191885983318666E-8	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999999985210389	WITHOUT_CLASSIFICATION	1.4789610969232405E-9	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999999891611197	WITHOUT_CLASSIFICATION	1.0838880474145782E-8	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.999999953722097	WITHOUT_CLASSIFICATION	4.627790292039839E-8	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.999998835333502	WITHOUT_CLASSIFICATION	1.1646664980420436E-6	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999999729761185	WITHOUT_CLASSIFICATION	2.7023881483559284E-8	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999999884366035	WITHOUT_CLASSIFICATION	1.1563396437115207E-8	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999998193106087	WITHOUT_CLASSIFICATION	1.8068939131812927E-7	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999999986147731	WITHOUT_CLASSIFICATION	1.3852269249294645E-9	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.999999999825134	WITHOUT_CLASSIFICATION	1.7486605106398153E-10	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999982325264878	WITHOUT_CLASSIFICATION	1.7674735122060783E-6	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9997579504344355	WITHOUT_CLASSIFICATION	2.420495655645586E-4	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999946057371047	WITHOUT_CLASSIFICATION	5.39426289521988E-6	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999995779725717	WITHOUT_CLASSIFICATION	4.2202742834849145E-7	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9999948548711587	WITHOUT_CLASSIFICATION	5.145128841328405E-6	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999964355562228	WITHOUT_CLASSIFICATION	3.564443777178234E-6	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9998339650687238	WITHOUT_CLASSIFICATION	1.6603493127625017E-4	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999988148729851	WITHOUT_CLASSIFICATION	1.1851270147786452E-6	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999849285268202	WITHOUT_CLASSIFICATION	1.5071473179744385E-5	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999996746329199	WITHOUT_CLASSIFICATION	3.253670801090865E-7	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999623739377415	WITHOUT_CLASSIFICATION	3.762606225860164E-5	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999922641634	WITHOUT_CLASSIFICATION	7.735836563985656E-9	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999992763989641	WITHOUT_CLASSIFICATION	7.236010360133861E-7	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9999987830969131	WITHOUT_CLASSIFICATION	1.2169030867884415E-6	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.99999987466464	WITHOUT_CLASSIFICATION	1.253353599442E-7	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999970213318955	WITHOUT_CLASSIFICATION	2.978668104546286E-6	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999995365595126	WITHOUT_CLASSIFICATION	4.6344048747828186E-7	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999999754302283	WITHOUT_CLASSIFICATION	2.4569771711064695E-8	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999965889785936	WITHOUT_CLASSIFICATION	3.4110214064181823E-6	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999840598405997	WITHOUT_CLASSIFICATION	1.5940159400269734E-5	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9999967602059989	WITHOUT_CLASSIFICATION	3.2397940010869124E-6	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999996526344695	WITHOUT_CLASSIFICATION	3.4736553048489016E-7	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999996238445337	WITHOUT_CLASSIFICATION	3.761554662843184E-7	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999966418653559	WITHOUT_CLASSIFICATION	3.3581346441086345E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999980875278495	WITHOUT_CLASSIFICATION	1.9124721505780135E-6	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999995327681876	WITHOUT_CLASSIFICATION	4.6723181229506916E-7	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999973924067522	WITHOUT_CLASSIFICATION	2.6075932477113383E-6	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999958465948061	WITHOUT_CLASSIFICATION	4.153405193911149E-6	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999999986816499	WITHOUT_CLASSIFICATION	1.3183501253118206E-9	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999977766596385	WITHOUT_CLASSIFICATION	2.2233403614499525E-6	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999999525854214	WITHOUT_CLASSIFICATION	4.741457860289894E-8	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.999994036965099	WITHOUT_CLASSIFICATION	5.963034900881327E-6	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999996526344695	WITHOUT_CLASSIFICATION	3.4736553048489016E-7	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999966418653559	WITHOUT_CLASSIFICATION	3.3581346441086345E-6	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999996238445337	WITHOUT_CLASSIFICATION	3.761554662843184E-7	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999990141105014	WITHOUT_CLASSIFICATION	9.858894985722872E-7	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999986094873352	WITHOUT_CLASSIFICATION	1.390512664780623E-6	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999991894089513	WITHOUT_CLASSIFICATION	8.105910487955519E-7	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9999982176997844	WITHOUT_CLASSIFICATION	1.7823002155337393E-6	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.999961034568569	WITHOUT_CLASSIFICATION	3.896543143104738E-5	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999990047184696	WITHOUT_CLASSIFICATION	9.952815304430803E-7	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999979983748415	WITHOUT_CLASSIFICATION	2.001625158567439E-6	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999995641005216	WITHOUT_CLASSIFICATION	4.3589947833775904E-7	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999950662108948	WITHOUT_CLASSIFICATION	4.933789105207794E-6	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.999999958248014	WITHOUT_CLASSIFICATION	4.1751986078533055E-8	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999998698873545	WITHOUT_CLASSIFICATION	1.3011264547161027E-7	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999986360354588	WITHOUT_CLASSIFICATION	1.3639645412023564E-6	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999976328546284	WITHOUT_CLASSIFICATION	2.36714537164941E-6	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9999970777405052	WITHOUT_CLASSIFICATION	2.9222594948199645E-6	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999995986906701	WITHOUT_CLASSIFICATION	4.013093298338156E-7	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9999997462747781	WITHOUT_CLASSIFICATION	2.53725221987333E-7	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.9999971485831922	WITHOUT_CLASSIFICATION	2.851416807862208E-6	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999989338328479	WITHOUT_CLASSIFICATION	1.066167152105118E-6	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999989338328479	WITHOUT_CLASSIFICATION	1.066167152105118E-6	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999995347302019	WITHOUT_CLASSIFICATION	4.652697981184359E-7	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.999999978363676	WITHOUT_CLASSIFICATION	2.1636324017850104E-8	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999999591649021	WITHOUT_CLASSIFICATION	4.0835097801571216E-8	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999638795927608	WITHOUT_CLASSIFICATION	3.612040723929478E-5	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999927667392262	WITHOUT_CLASSIFICATION	7.233260773767344E-6	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999999885615958	WITHOUT_CLASSIFICATION	1.143840433450014E-8	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999997881371068	WITHOUT_CLASSIFICATION	2.1186289331979568E-7	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.999999749248995	WITHOUT_CLASSIFICATION	2.50751004910234E-7	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999841528576041	WITHOUT_CLASSIFICATION	1.5847142395876854E-5	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999999153663088	WITHOUT_CLASSIFICATION	8.46336911426126E-8	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999999861628073	WITHOUT_CLASSIFICATION	1.3837192642251494E-8	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.99999380469708	WITHOUT_CLASSIFICATION	6.195302920004743E-6	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999994694161443	WITHOUT_CLASSIFICATION	5.305838556176213E-7	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.999998441121573	WITHOUT_CLASSIFICATION	1.5588784269177514E-6	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.995876400347858	WITHOUT_CLASSIFICATION	0.004123599652142042	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999997842798288	WITHOUT_CLASSIFICATION	2.1572017123505385E-7	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999994239597084	WITHOUT_CLASSIFICATION	5.760402915551405E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999856702306366	WITHOUT_CLASSIFICATION	1.4329769363513176E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999856702306366	WITHOUT_CLASSIFICATION	1.4329769363513176E-5	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9999998472805154	WITHOUT_CLASSIFICATION	1.527194845327702E-7	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9999999352102522	WITHOUT_CLASSIFICATION	6.478974774139806E-8	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999998487617947	WITHOUT_CLASSIFICATION	1.5123820524181822E-7	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.999995735893964	WITHOUT_CLASSIFICATION	4.264106036052437E-6	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999998817105666	WITHOUT_CLASSIFICATION	1.1828943330455602E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999856702306366	WITHOUT_CLASSIFICATION	1.4329769363513176E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999856702306366	WITHOUT_CLASSIFICATION	1.4329769363513176E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999996895840108	WITHOUT_CLASSIFICATION	3.1041598917388904E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999996895840108	WITHOUT_CLASSIFICATION	3.1041598917388904E-7	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999993575863902	WITHOUT_CLASSIFICATION	6.424136096745452E-7	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999935719439013	WITHOUT_CLASSIFICATION	6.4280560987248765E-6	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999998450918949	WITHOUT_CLASSIFICATION	1.5490810516068674E-7	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999999836998844	WITHOUT_CLASSIFICATION	1.63001155610343E-8	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999995716751637	WITHOUT_CLASSIFICATION	4.283248361792641E-7	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999995716751637	WITHOUT_CLASSIFICATION	4.283248361792641E-7	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999999242073613	WITHOUT_CLASSIFICATION	7.57926387064029E-8	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999958494460982	WITHOUT_CLASSIFICATION	4.15055390180175E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999998365855186	WITHOUT_CLASSIFICATION	1.6341448148896288E-7	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999317907952326	WITHOUT_CLASSIFICATION	6.820920476730386E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999996794706709	WITHOUT_CLASSIFICATION	3.205293290348176E-7	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999973872952	WITHOUT_CLASSIFICATION	2.6127048232396275E-9	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9992489168232043	WITHOUT_CLASSIFICATION	7.510831767956663E-4	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.999999695169891	WITHOUT_CLASSIFICATION	3.048301089878717E-7	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999999967193872	WITHOUT_CLASSIFICATION	3.280612865825293E-9	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999999944618687	WITHOUT_CLASSIFICATION	5.538131321086648E-9	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999469078947184	WITHOUT_CLASSIFICATION	5.309210528155061E-5	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.999999952915834	WITHOUT_CLASSIFICATION	4.708416602157935E-8	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999997851991398	WITHOUT_CLASSIFICATION	2.1480086023759342E-7	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999999925113476	WITHOUT_CLASSIFICATION	7.488652473938768E-9	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999997842798288	WITHOUT_CLASSIFICATION	2.1572017123505385E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999856702306366	WITHOUT_CLASSIFICATION	1.4329769363513176E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999996895840108	WITHOUT_CLASSIFICATION	3.1041598917388904E-7	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999973872952	WITHOUT_CLASSIFICATION	2.6127048232396275E-9	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999997794659	WITHOUT_CLASSIFICATION	2.2053424862424272E-10	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999997794659	WITHOUT_CLASSIFICATION	2.2053424862424272E-10	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999953339143859	WITHOUT_CLASSIFICATION	4.666085614079042E-6	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.999999998247813	WITHOUT_CLASSIFICATION	1.7521869178186365E-9	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999999806231646	WITHOUT_CLASSIFICATION	1.937683534185099E-8	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999958279547	WITHOUT_CLASSIFICATION	4.172045181758515E-9	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999996072964767	WITHOUT_CLASSIFICATION	3.9270352318233314E-7	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.999999986028201	WITHOUT_CLASSIFICATION	1.3971799017743535E-8	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999992845969623	WITHOUT_CLASSIFICATION	7.154030376347782E-7	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999989590061734	WITHOUT_CLASSIFICATION	1.040993826653742E-6	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999983974196	WITHOUT_CLASSIFICATION	1.6025803382235317E-9	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999872295235369	WITHOUT_CLASSIFICATION	1.2770476463130631E-5	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999751503931188	WITHOUT_CLASSIFICATION	2.4849606881235866E-5	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999998791159055	WITHOUT_CLASSIFICATION	1.208840944539796E-7	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999999808989424	WITHOUT_CLASSIFICATION	1.9101057604710124E-8	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999994239597084	WITHOUT_CLASSIFICATION	5.760402915551405E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999996895840108	WITHOUT_CLASSIFICATION	3.1041598917388904E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999958494460982	WITHOUT_CLASSIFICATION	4.15055390180175E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999998365855186	WITHOUT_CLASSIFICATION	1.6341448148896288E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999998365855186	WITHOUT_CLASSIFICATION	1.6341448148896288E-7	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999996794706709	WITHOUT_CLASSIFICATION	3.205293290348176E-7	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999973872952	WITHOUT_CLASSIFICATION	2.6127048232396275E-9	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999973872952	WITHOUT_CLASSIFICATION	2.6127048232396275E-9	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999997794659	WITHOUT_CLASSIFICATION	2.2053424862424272E-10	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9998785442271857	WITHOUT_CLASSIFICATION	1.2145577281432483E-4	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999997117568391	WITHOUT_CLASSIFICATION	2.882431609700655E-7	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999999989091	WITHOUT_CLASSIFICATION	1.0909858373334768E-12	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999791990233462	WITHOUT_CLASSIFICATION	2.0800976653826704E-5	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.99999788670178	WITHOUT_CLASSIFICATION	2.1132982200768996E-6	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999819264758719	WITHOUT_CLASSIFICATION	1.8073524128165993E-5	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999992908904111	WITHOUT_CLASSIFICATION	7.091095889670914E-7	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999999902900426	WITHOUT_CLASSIFICATION	9.709957456797103E-9	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999997107081938	WITHOUT_CLASSIFICATION	2.8929180621611596E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999958494460982	WITHOUT_CLASSIFICATION	4.15055390180175E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999998365855186	WITHOUT_CLASSIFICATION	1.6341448148896288E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999998365855186	WITHOUT_CLASSIFICATION	1.6341448148896288E-7	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999996794706709	WITHOUT_CLASSIFICATION	3.205293290348176E-7	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999989590061734	WITHOUT_CLASSIFICATION	1.040993826653742E-6	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999872295235369	WITHOUT_CLASSIFICATION	1.2770476463130631E-5	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9979083855028379	WITHOUT_CLASSIFICATION	0.002091614497162041	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999949275611594	WITHOUT_CLASSIFICATION	5.072438840728965E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999887251073553	WITHOUT_CLASSIFICATION	1.1274892644815069E-5	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999887251073553	WITHOUT_CLASSIFICATION	1.1274892644815069E-5	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999989842217496	WITHOUT_CLASSIFICATION	1.0157782505085221E-6	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999999629775158	WITHOUT_CLASSIFICATION	3.702248423202989E-8	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999999941016235	WITHOUT_CLASSIFICATION	5.8983764342705785E-9	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999967205499917	WITHOUT_CLASSIFICATION	3.279450008378179E-6	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999988961863022	WITHOUT_CLASSIFICATION	1.103813697751667E-6	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999988961863022	WITHOUT_CLASSIFICATION	1.103813697751667E-6	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.999998206781719	WITHOUT_CLASSIFICATION	1.793218280976126E-6	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.999998206781719	WITHOUT_CLASSIFICATION	1.793218280976126E-6	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999990572579938	WITHOUT_CLASSIFICATION	9.427420062529948E-7	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999990572579938	WITHOUT_CLASSIFICATION	9.427420062529948E-7	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999999506187873	WITHOUT_CLASSIFICATION	4.9381212678044374E-8	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999992482752103	WITHOUT_CLASSIFICATION	7.517247897559249E-7	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999996410156877	WITHOUT_CLASSIFICATION	3.589843122787429E-7	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.999999965381214	WITHOUT_CLASSIFICATION	3.461878590652376E-8	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999976633793249	WITHOUT_CLASSIFICATION	2.336620675009174E-6	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.9999998211156698	WITHOUT_CLASSIFICATION	1.7888433023959972E-7	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999979965203841	WITHOUT_CLASSIFICATION	2.0034796158700322E-6	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999781723961729	WITHOUT_CLASSIFICATION	2.182760382707471E-5	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999998426916947	WITHOUT_CLASSIFICATION	1.5730830523662097E-7	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999999986356684	WITHOUT_CLASSIFICATION	1.3643315771391681E-9	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9975463872023335	WITHOUT_CLASSIFICATION	0.0024536127976665257	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999995001654807	WITHOUT_CLASSIFICATION	4.998345193347158E-7	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999995790018231	WITHOUT_CLASSIFICATION	4.2099817684842264E-7	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999995617845051	WITHOUT_CLASSIFICATION	4.382154949186465E-7	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999995617845051	WITHOUT_CLASSIFICATION	4.382154949186465E-7	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999995613501931	WITHOUT_CLASSIFICATION	4.3864980680997537E-7	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999761836155	WITHOUT_CLASSIFICATION	2.3816384520670477E-8	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999937026229501	WITHOUT_CLASSIFICATION	6.297377049986333E-6	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999943805831	WITHOUT_CLASSIFICATION	5.619416897738492E-9	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999999969287775	WITHOUT_CLASSIFICATION	3.071222503506699E-9	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.999844851632995	WITHOUT_CLASSIFICATION	1.5514836700499448E-4	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999997209524218	WITHOUT_CLASSIFICATION	2.7904757816555974E-7	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999966892078466	WITHOUT_CLASSIFICATION	3.3107921534851876E-6	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999997075155801	WITHOUT_CLASSIFICATION	2.9248441983120944E-7	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999999766830763	WITHOUT_CLASSIFICATION	2.331692375811824E-8	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999996932347686	WITHOUT_CLASSIFICATION	3.0676523145859205E-7	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999255985625292	WITHOUT_CLASSIFICATION	7.440143747080907E-5	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999973823457973	WITHOUT_CLASSIFICATION	2.6176542028200825E-6	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9919572928632395	WITHOUT_CLASSIFICATION	0.008042707136760556	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999997784597593	WITHOUT_CLASSIFICATION	2.2154024081062245E-7	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999997284831642	WITHOUT_CLASSIFICATION	2.7151683572654526E-7	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9999912041257744	WITHOUT_CLASSIFICATION	8.795874225583004E-6	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.999997877170302	WITHOUT_CLASSIFICATION	2.1228296979899866E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999984889133	WITHOUT_CLASSIFICATION	1.51108671505697E-9	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999984889133	WITHOUT_CLASSIFICATION	1.51108671505697E-9	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999869633410864	WITHOUT_CLASSIFICATION	1.3036658913608112E-5	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999999979042877	WITHOUT_CLASSIFICATION	2.095712276814577E-9	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999952851512282	WITHOUT_CLASSIFICATION	4.714848771760185E-6	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999952851512282	WITHOUT_CLASSIFICATION	4.714848771760185E-6	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999774533865443	WITHOUT_CLASSIFICATION	2.2546613455646365E-5	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999999955123806	WITHOUT_CLASSIFICATION	4.487619286340238E-9	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999996499518689	WITHOUT_CLASSIFICATION	3.5004813111961173E-7	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999999844280975	WITHOUT_CLASSIFICATION	1.5571902593233852E-8	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.999999995056049	WITHOUT_CLASSIFICATION	4.943951028147954E-9	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999999826770748	WITHOUT_CLASSIFICATION	1.7322925228806262E-8	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999999826770748	WITHOUT_CLASSIFICATION	1.7322925228806262E-8	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999998760771647	WITHOUT_CLASSIFICATION	1.2392283523792412E-7	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999999957701782	WITHOUT_CLASSIFICATION	4.2298217544757005E-9	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999986495714885	WITHOUT_CLASSIFICATION	1.3504285114221627E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.99999999694147	WITHOUT_CLASSIFICATION	3.0585299906226457E-9	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999999979042877	WITHOUT_CLASSIFICATION	2.095712276814577E-9	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999999560596231	WITHOUT_CLASSIFICATION	4.394037686092901E-8	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999999957048663	WITHOUT_CLASSIFICATION	4.2951336789918584E-9	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999999957048663	WITHOUT_CLASSIFICATION	4.2951336789918584E-9	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999475270280709	WITHOUT_CLASSIFICATION	5.2472971929045975E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999973425052	WITHOUT_CLASSIFICATION	2.6574947968829084E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999973425052	WITHOUT_CLASSIFICATION	2.6574947968829084E-9	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999335095165881	WITHOUT_CLASSIFICATION	6.649048341183554E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999335095165881	WITHOUT_CLASSIFICATION	6.649048341183554E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999335095165881	WITHOUT_CLASSIFICATION	6.649048341183554E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999973425052	WITHOUT_CLASSIFICATION	2.6574947968829084E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999973425052	WITHOUT_CLASSIFICATION	2.6574947968829084E-9	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999475270280709	WITHOUT_CLASSIFICATION	5.2472971929045975E-5	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999999512440972	WITHOUT_CLASSIFICATION	4.8755902706498685E-8	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9999998461808522	WITHOUT_CLASSIFICATION	1.5381914767147239E-7	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999796246564706	WITHOUT_CLASSIFICATION	2.0375343529422096E-5	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9999936291736051	WITHOUT_CLASSIFICATION	6.370826394779614E-6	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999974434867	WITHOUT_CLASSIFICATION	2.556513369988589E-9	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9998650696778332	WITHOUT_CLASSIFICATION	1.3493032216678867E-4	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999999640712212	WITHOUT_CLASSIFICATION	3.592877873251741E-8	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999999986755074	WITHOUT_CLASSIFICATION	1.324492655998188E-9	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999996932347686	WITHOUT_CLASSIFICATION	3.0676523145859205E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999973425052	WITHOUT_CLASSIFICATION	2.6574947968829084E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999973425052	WITHOUT_CLASSIFICATION	2.6574947968829084E-9	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999989932769	WITHOUT_CLASSIFICATION	1.0067231024379326E-9	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999528948736928	WITHOUT_CLASSIFICATION	4.71051263072367E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999999472080389	WITHOUT_CLASSIFICATION	5.279196121700147E-8	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999990482356	WITHOUT_CLASSIFICATION	9.517644296136174E-10	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999952224013128	WITHOUT_CLASSIFICATION	4.777598687326272E-6	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999990710368113	WITHOUT_CLASSIFICATION	9.289631887671997E-7	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999971928893	WITHOUT_CLASSIFICATION	2.8071105919500623E-9	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999996114952389	WITHOUT_CLASSIFICATION	3.885047611943795E-7	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999990527406762	WITHOUT_CLASSIFICATION	9.472593237168858E-7	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999998923187154	WITHOUT_CLASSIFICATION	1.0768128447504004E-7	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999869102137641	WITHOUT_CLASSIFICATION	1.308978623596912E-5	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999992955652155	WITHOUT_CLASSIFICATION	7.044347844166815E-7	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.999985121443708	WITHOUT_CLASSIFICATION	1.487855629188303E-5	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999998560163559	WITHOUT_CLASSIFICATION	1.4398364410920603E-7	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999997298513705	WITHOUT_CLASSIFICATION	2.70148629424647E-7	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999998961416325	WITHOUT_CLASSIFICATION	1.038583674007888E-7	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999998961416325	WITHOUT_CLASSIFICATION	1.038583674007888E-7	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999998961416325	WITHOUT_CLASSIFICATION	1.038583674007888E-7	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999998101226486	WITHOUT_CLASSIFICATION	1.8987735139471024E-7	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999318149627	WITHOUT_CLASSIFICATION	6.818503732159592E-8	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999999804383054	WITHOUT_CLASSIFICATION	1.9561694664920022E-8	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999995142933416	WITHOUT_CLASSIFICATION	4.857066584793789E-7	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999983492729989	WITHOUT_CLASSIFICATION	1.6507270010434915E-6	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.999999055449155	WITHOUT_CLASSIFICATION	9.445508450308945E-7	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999999994790902	WITHOUT_CLASSIFICATION	5.209096945902872E-10	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999995666948981	WITHOUT_CLASSIFICATION	4.333051019994723E-7	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.999999993238907	WITHOUT_CLASSIFICATION	6.76109296952741E-9	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999999430833142	WITHOUT_CLASSIFICATION	5.6916685762677666E-8	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999629340072237	WITHOUT_CLASSIFICATION	3.7065992776384774E-5	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.999983807419528	WITHOUT_CLASSIFICATION	1.6192580471976913E-5	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999998760771647	WITHOUT_CLASSIFICATION	1.2392283523792412E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999973425052	WITHOUT_CLASSIFICATION	2.6574947968829084E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999973425052	WITHOUT_CLASSIFICATION	2.6574947968829084E-9	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999475270280709	WITHOUT_CLASSIFICATION	5.2472971929045975E-5	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9998650696778332	WITHOUT_CLASSIFICATION	1.3493032216678867E-4	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999528948736928	WITHOUT_CLASSIFICATION	4.71051263072367E-5	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999990482356	WITHOUT_CLASSIFICATION	9.517644296136174E-10	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999990710368113	WITHOUT_CLASSIFICATION	9.289631887671997E-7	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999999472080389	WITHOUT_CLASSIFICATION	5.279196121700147E-8	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999971928893	WITHOUT_CLASSIFICATION	2.8071105919500623E-9	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999998923187154	WITHOUT_CLASSIFICATION	1.0768128447504004E-7	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999990527406762	WITHOUT_CLASSIFICATION	9.472593237168858E-7	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999992955652155	WITHOUT_CLASSIFICATION	7.044347844166815E-7	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999840606720612	WITHOUT_CLASSIFICATION	1.5939327938663076E-5	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999998158543693	WITHOUT_CLASSIFICATION	1.8414563065659497E-7	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999960732369387	WITHOUT_CLASSIFICATION	3.92676306124923E-6	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999999814873498	WITHOUT_CLASSIFICATION	1.8512650140450116E-8	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999992175059651	WITHOUT_CLASSIFICATION	7.824940348795485E-7	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.999999533092358	WITHOUT_CLASSIFICATION	4.669076419591122E-7	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999996028382899	WITHOUT_CLASSIFICATION	3.9716171007633027E-7	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999999712652707	WITHOUT_CLASSIFICATION	2.8734729187054182E-8	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999966268721899	WITHOUT_CLASSIFICATION	3.373127810052304E-6	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.999999509992808	WITHOUT_CLASSIFICATION	4.900071919880469E-7	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999980336113186	WITHOUT_CLASSIFICATION	1.9663886814506396E-6	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999404933924	WITHOUT_CLASSIFICATION	5.950660764249447E-8	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999980251082	WITHOUT_CLASSIFICATION	1.974891752640677E-9	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999900155138	WITHOUT_CLASSIFICATION	9.984486315113672E-9	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999993097191	WITHOUT_CLASSIFICATION	6.902808288931286E-10	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999980089992	WITHOUT_CLASSIFICATION	1.9910007490245904E-9	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999925414151	WITHOUT_CLASSIFICATION	7.458584888648664E-9	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999938452743408	WITHOUT_CLASSIFICATION	6.154725659169123E-6	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999997288086958	WITHOUT_CLASSIFICATION	2.7119130422265124E-7	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999999115967876	WITHOUT_CLASSIFICATION	8.84032124083615E-8	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999965226026459	WITHOUT_CLASSIFICATION	3.4773973540254994E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.99999999875346	WITHOUT_CLASSIFICATION	1.246539991718935E-9	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.99999999875346	WITHOUT_CLASSIFICATION	1.246539991718935E-9	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.999999982861211	WITHOUT_CLASSIFICATION	1.7138789037864204E-8	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999080815040686	WITHOUT_CLASSIFICATION	9.191849593133118E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995708252722306	WITHOUT_CLASSIFICATION	4.2917472776939514E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995708252722306	WITHOUT_CLASSIFICATION	4.2917472776939514E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995708252722306	WITHOUT_CLASSIFICATION	4.2917472776939514E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999911601525658	WITHOUT_CLASSIFICATION	8.839847434128012E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999911601525658	WITHOUT_CLASSIFICATION	8.839847434128012E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999911601525658	WITHOUT_CLASSIFICATION	8.839847434128012E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999911601525658	WITHOUT_CLASSIFICATION	8.839847434128012E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999871585559957	WITHOUT_CLASSIFICATION	1.2841444004142019E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999871585559957	WITHOUT_CLASSIFICATION	1.2841444004142019E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999871585559957	WITHOUT_CLASSIFICATION	1.2841444004142019E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999707422437589	WITHOUT_CLASSIFICATION	2.9257756241116845E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999707422437589	WITHOUT_CLASSIFICATION	2.9257756241116845E-5	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999854616597011	WITHOUT_CLASSIFICATION	1.4538340298841671E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999875867010959	WITHOUT_CLASSIFICATION	1.2413298904056459E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999080815040686	WITHOUT_CLASSIFICATION	9.191849593133118E-5	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999990907132151	WITHOUT_CLASSIFICATION	9.09286784768858E-7	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995708252722306	WITHOUT_CLASSIFICATION	4.2917472776939514E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995708252722306	WITHOUT_CLASSIFICATION	4.2917472776939514E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999911601525658	WITHOUT_CLASSIFICATION	8.839847434128012E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999911601525658	WITHOUT_CLASSIFICATION	8.839847434128012E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999911601525658	WITHOUT_CLASSIFICATION	8.839847434128012E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999871585559957	WITHOUT_CLASSIFICATION	1.2841444004142019E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999871585559957	WITHOUT_CLASSIFICATION	1.2841444004142019E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999707422437589	WITHOUT_CLASSIFICATION	2.9257756241116845E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999875867010959	WITHOUT_CLASSIFICATION	1.2413298904056459E-5	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999855416205374	WITHOUT_CLASSIFICATION	1.4458379462584577E-5	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999855416205374	WITHOUT_CLASSIFICATION	1.4458379462584577E-5	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999950111166	WITHOUT_CLASSIFICATION	4.988883395948627E-9	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999950111166	WITHOUT_CLASSIFICATION	4.988883395948627E-9	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999998500280788	WITHOUT_CLASSIFICATION	1.499719211887665E-7	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999998500280788	WITHOUT_CLASSIFICATION	1.499719211887665E-7	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999899619519291	WITHOUT_CLASSIFICATION	1.0038048070986188E-5	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999998184692949	WITHOUT_CLASSIFICATION	1.815307051686424E-7	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999998184692949	WITHOUT_CLASSIFICATION	1.815307051686424E-7	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999754217866285	WITHOUT_CLASSIFICATION	2.4578213371470453E-5	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999754217866285	WITHOUT_CLASSIFICATION	2.4578213371470453E-5	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999999998352499	WITHOUT_CLASSIFICATION	1.647501340593014E-10	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999990379052675	WITHOUT_CLASSIFICATION	9.620947325447447E-7	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999990379052675	WITHOUT_CLASSIFICATION	9.620947325447447E-7	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999954889256469	WITHOUT_CLASSIFICATION	4.511074353061786E-6	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999971088167051	WITHOUT_CLASSIFICATION	2.891183294942108E-6	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999999951558455	WITHOUT_CLASSIFICATION	4.844154497493446E-9	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999911601525658	WITHOUT_CLASSIFICATION	8.839847434128012E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999911601525658	WITHOUT_CLASSIFICATION	8.839847434128012E-6	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999954889256469	WITHOUT_CLASSIFICATION	4.511074353061786E-6	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999999997593338	WITHOUT_CLASSIFICATION	2.406660617326304E-10	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999974446280389	WITHOUT_CLASSIFICATION	2.5553719610563514E-6	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999974446280389	WITHOUT_CLASSIFICATION	2.5553719610563514E-6	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999974446280389	WITHOUT_CLASSIFICATION	2.5553719610563514E-6	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999992573609013	WITHOUT_CLASSIFICATION	7.426390986387793E-7	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999999405324169	WITHOUT_CLASSIFICATION	5.9467583061255646E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998501666438	WITHOUT_CLASSIFICATION	1.4983335614220655E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998501666438	WITHOUT_CLASSIFICATION	1.4983335614220655E-7	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999996457434135	WITHOUT_CLASSIFICATION	3.542565865013402E-7	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999994394962805	WITHOUT_CLASSIFICATION	5.605037195662696E-7	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999999943660756	WITHOUT_CLASSIFICATION	5.633924413700561E-9	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999999800567682	WITHOUT_CLASSIFICATION	1.994323182197178E-8	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999998858863803	WITHOUT_CLASSIFICATION	1.1411361968495837E-7	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.999999987502867	WITHOUT_CLASSIFICATION	1.2497132944035693E-8	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.999999987502867	WITHOUT_CLASSIFICATION	1.2497132944035693E-8	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999540257828639	WITHOUT_CLASSIFICATION	4.597421713616763E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999812770832072	WITHOUT_CLASSIFICATION	1.8722916792812786E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999812770832072	WITHOUT_CLASSIFICATION	1.8722916792812786E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999911601525658	WITHOUT_CLASSIFICATION	8.839847434128012E-6	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999974446280389	WITHOUT_CLASSIFICATION	2.5553719610563514E-6	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999999405324169	WITHOUT_CLASSIFICATION	5.9467583061255646E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998501666438	WITHOUT_CLASSIFICATION	1.4983335614220655E-7	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999996457434135	WITHOUT_CLASSIFICATION	3.542565865013402E-7	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999994394962805	WITHOUT_CLASSIFICATION	5.605037195662696E-7	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999999943660756	WITHOUT_CLASSIFICATION	5.633924413700561E-9	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999999800567682	WITHOUT_CLASSIFICATION	1.994323182197178E-8	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999812770832072	WITHOUT_CLASSIFICATION	1.8722916792812786E-5	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999999907926204	WITHOUT_CLASSIFICATION	9.20737960990176E-9	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999972293802979	WITHOUT_CLASSIFICATION	2.77061970208445E-6	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999998798164544	WITHOUT_CLASSIFICATION	1.2018354556151535E-7	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999986952907769	WITHOUT_CLASSIFICATION	1.3047092231678528E-6	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999999915966286	WITHOUT_CLASSIFICATION	8.403371476338309E-9	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999999800534314	WITHOUT_CLASSIFICATION	1.9946568690092255E-8	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999997814526896	WITHOUT_CLASSIFICATION	2.185473103927526E-7	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999997814526896	WITHOUT_CLASSIFICATION	2.185473103927526E-7	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999992256545513	WITHOUT_CLASSIFICATION	7.743454486541489E-7	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.999999846333386	WITHOUT_CLASSIFICATION	1.5366661407768936E-7	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999997906960908	WITHOUT_CLASSIFICATION	2.0930390925330607E-7	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999999356899638	WITHOUT_CLASSIFICATION	6.431003612966903E-8	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.999999714174885	WITHOUT_CLASSIFICATION	2.8582511506123966E-7	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.999999714174885	WITHOUT_CLASSIFICATION	2.8582511506123966E-7	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999999108256264	WITHOUT_CLASSIFICATION	8.917437350096026E-8	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.999999970163123	WITHOUT_CLASSIFICATION	2.9836877004432545E-8	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999998480138308	WITHOUT_CLASSIFICATION	1.519861691879168E-7	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999998480138308	WITHOUT_CLASSIFICATION	1.519861691879168E-7	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999999336469593	WITHOUT_CLASSIFICATION	6.635304070153824E-8	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9998533188261236	WITHOUT_CLASSIFICATION	1.466811738763591E-4	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999998858863803	WITHOUT_CLASSIFICATION	1.1411361968495837E-7	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999996733301315	WITHOUT_CLASSIFICATION	3.266698684436968E-7	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999999994494413	WITHOUT_CLASSIFICATION	5.505587061718603E-9	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999294871291	WITHOUT_CLASSIFICATION	7.051287084915476E-8	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999999217636756	WITHOUT_CLASSIFICATION	7.823632437050252E-8	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.9999999969776766	WITHOUT_CLASSIFICATION	3.022323403509518E-9	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999902811944718	WITHOUT_CLASSIFICATION	9.718805528248021E-6	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999999952884451	WITHOUT_CLASSIFICATION	4.711554996539257E-9	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999996579346813	WITHOUT_CLASSIFICATION	3.420653187895043E-7	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999995908665743	WITHOUT_CLASSIFICATION	4.091334256387792E-7	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999995908665743	WITHOUT_CLASSIFICATION	4.091334256387792E-7	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999989619269689	WITHOUT_CLASSIFICATION	1.0380730310487581E-6	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999989619269689	WITHOUT_CLASSIFICATION	1.0380730310487581E-6	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999999617960479	WITHOUT_CLASSIFICATION	3.820395206744092E-8	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999994158847584	WITHOUT_CLASSIFICATION	5.841152416886757E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999994158847584	WITHOUT_CLASSIFICATION	5.841152416886757E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999994158847584	WITHOUT_CLASSIFICATION	5.841152416886757E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998820599443	WITHOUT_CLASSIFICATION	1.1794005573007843E-7	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.999981115544295	WITHOUT_CLASSIFICATION	1.8884455704945114E-5	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.999981115544295	WITHOUT_CLASSIFICATION	1.8884455704945114E-5	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999030929058	WITHOUT_CLASSIFICATION	9.690709423131945E-8	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999972332612885	WITHOUT_CLASSIFICATION	2.7667387115006736E-6	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999888668225626	WITHOUT_CLASSIFICATION	1.1133177437349503E-5	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9999997346605334	WITHOUT_CLASSIFICATION	2.653394666242303E-7	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999977605670385	WITHOUT_CLASSIFICATION	2.239432961392622E-6	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9998602758217333	WITHOUT_CLASSIFICATION	1.3972417826661794E-4	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999999955124035	WITHOUT_CLASSIFICATION	4.487596586575068E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999980251082	WITHOUT_CLASSIFICATION	1.974891752640677E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999980251082	WITHOUT_CLASSIFICATION	1.974891752640677E-9	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998820599443	WITHOUT_CLASSIFICATION	1.1794005573007843E-7	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999030929058	WITHOUT_CLASSIFICATION	9.690709423131945E-8	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999997017715012	WITHOUT_CLASSIFICATION	2.982284988002671E-7	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999972332612885	WITHOUT_CLASSIFICATION	2.7667387115006736E-6	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999888668225626	WITHOUT_CLASSIFICATION	1.1133177437349503E-5	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999795450544788	WITHOUT_CLASSIFICATION	2.0454945521137806E-5	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9999994490815953	WITHOUT_CLASSIFICATION	5.509184047729789E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995381550615	WITHOUT_CLASSIFICATION	4.618449384760256E-7	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.9999953941949032	WITHOUT_CLASSIFICATION	4.605805096719581E-6	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9998764230207026	WITHOUT_CLASSIFICATION	1.2357697929742207E-4	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999999798137346	WITHOUT_CLASSIFICATION	2.0186265481627243E-8	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.999996981874283	WITHOUT_CLASSIFICATION	3.0181257170929555E-6	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999795450544788	WITHOUT_CLASSIFICATION	2.0454945521137806E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999999927253523	WITHOUT_CLASSIFICATION	7.274647560186475E-9	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999999927253523	WITHOUT_CLASSIFICATION	7.274647560186475E-9	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.999999986918663	WITHOUT_CLASSIFICATION	1.3081336953644542E-8	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999980075900552	WITHOUT_CLASSIFICATION	1.99240994480687E-6	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999999218158506	WITHOUT_CLASSIFICATION	7.818414928885457E-8	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999996932386453	WITHOUT_CLASSIFICATION	3.0676135465100466E-7	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999998300181888	WITHOUT_CLASSIFICATION	1.6998181113541963E-7	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999955209722438	WITHOUT_CLASSIFICATION	4.479027756242334E-6	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999775909695949	WITHOUT_CLASSIFICATION	2.2409030404983525E-5	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.99999935981083	WITHOUT_CLASSIFICATION	6.401891699421709E-7	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999999964605264	WITHOUT_CLASSIFICATION	3.5394736837290727E-9	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9999996605354441	WITHOUT_CLASSIFICATION	3.394645558901706E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999994549551244	WITHOUT_CLASSIFICATION	5.450448754395185E-7	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999996932386453	WITHOUT_CLASSIFICATION	3.0676135465100466E-7	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999998300181888	WITHOUT_CLASSIFICATION	1.6998181113541963E-7	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.999998709688525	WITHOUT_CLASSIFICATION	1.2903114750339274E-6	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9999998387998635	WITHOUT_CLASSIFICATION	1.6120013648882208E-7	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.99999999976177	WITHOUT_CLASSIFICATION	2.382299492549568E-10	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999990212274612	WITHOUT_CLASSIFICATION	9.787725388995163E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999999951543477	WITHOUT_CLASSIFICATION	4.845652238103722E-9	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999999314468522	WITHOUT_CLASSIFICATION	6.855314783049096E-8	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9999970449012706	WITHOUT_CLASSIFICATION	2.9550987293493315E-6	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9999978026513908	WITHOUT_CLASSIFICATION	2.19734860919473E-6	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999994972131412	WITHOUT_CLASSIFICATION	5.027868589107991E-7	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999999108141214	WITHOUT_CLASSIFICATION	8.918587856210043E-8	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999998759470888	WITHOUT_CLASSIFICATION	1.240529112495214E-7	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9999891774780572	WITHOUT_CLASSIFICATION	1.082252194289898E-5	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999995380131843	WITHOUT_CLASSIFICATION	4.619868156944779E-7	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999999941013316	WITHOUT_CLASSIFICATION	5.898668454816641E-9	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999999999036217	WITHOUT_CLASSIFICATION	9.637843289184988E-11	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999969408385	WITHOUT_CLASSIFICATION	3.0591615940759596E-9	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999851442440114	WITHOUT_CLASSIFICATION	1.4855755988530807E-5	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999998487018869	WITHOUT_CLASSIFICATION	1.5129811302986045E-7	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999996037213	WITHOUT_CLASSIFICATION	3.962786222418177E-10	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999989452456546	WITHOUT_CLASSIFICATION	1.0547543453833126E-6	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999851442440114	WITHOUT_CLASSIFICATION	1.4855755988530807E-5	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999998487018869	WITHOUT_CLASSIFICATION	1.5129811302986045E-7	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999996037213	WITHOUT_CLASSIFICATION	3.962786222418177E-10	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9999999702790725	WITHOUT_CLASSIFICATION	2.9720927477369182E-8	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999937407701018	WITHOUT_CLASSIFICATION	6.259229898134429E-6	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999983621183187	WITHOUT_CLASSIFICATION	1.6378816812962345E-6	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.999999843952756	WITHOUT_CLASSIFICATION	1.5604724405366134E-7	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999999968049674	WITHOUT_CLASSIFICATION	3.19503269034599E-9	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999998278307999	WITHOUT_CLASSIFICATION	1.7216920007599566E-7	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999992254698599	WITHOUT_CLASSIFICATION	7.745301400816655E-7	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999782413253396	WITHOUT_CLASSIFICATION	2.1758674660356292E-5	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9999995098041053	WITHOUT_CLASSIFICATION	4.901958945630638E-7	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9999994807886545	WITHOUT_CLASSIFICATION	5.192113454379604E-7	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9815804645581631	WITHOUT_CLASSIFICATION	0.018419535441836957	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999999282697823	WITHOUT_CLASSIFICATION	7.173021758026412E-8	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999848355198643	WITHOUT_CLASSIFICATION	1.5164480135682185E-5	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.999999291982651	WITHOUT_CLASSIFICATION	7.080173489819605E-7	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999997757667287	WITHOUT_CLASSIFICATION	2.2423327125357763E-7	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999982093814048	WITHOUT_CLASSIFICATION	1.7906185952063208E-6	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999986059466696	WITHOUT_CLASSIFICATION	1.3940533304284767E-6	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.999999760559245	WITHOUT_CLASSIFICATION	2.3944075498522845E-7	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999676711207883	WITHOUT_CLASSIFICATION	3.2328879211697194E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999993105758115	WITHOUT_CLASSIFICATION	6.894241884801565E-7	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999999171012472	WITHOUT_CLASSIFICATION	8.289875275427734E-8	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999949761232038	WITHOUT_CLASSIFICATION	5.023876796274032E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999949761232038	WITHOUT_CLASSIFICATION	5.023876796274032E-6	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999994882592336	WITHOUT_CLASSIFICATION	5.117407665027087E-7	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999994882592336	WITHOUT_CLASSIFICATION	5.117407665027087E-7	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999990554300089	WITHOUT_CLASSIFICATION	9.445699911344134E-7	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999990554300089	WITHOUT_CLASSIFICATION	9.445699911344134E-7	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999998367886743	WITHOUT_CLASSIFICATION	1.6321132572116807E-7	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.999999960327618	WITHOUT_CLASSIFICATION	3.9672382041052433E-8	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999964205675	WITHOUT_CLASSIFICATION	3.5794324925196972E-9	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999994769320557	WITHOUT_CLASSIFICATION	5.2306794426822E-7	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999995984775	WITHOUT_CLASSIFICATION	4.0152253359108404E-10	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999438333388	WITHOUT_CLASSIFICATION	5.616666112978217E-8	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999999461615033	WITHOUT_CLASSIFICATION	5.3838496612514275E-8	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9999925571708861	WITHOUT_CLASSIFICATION	7.442829113954442E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999980251082	WITHOUT_CLASSIFICATION	1.974891752640677E-9	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999998367886743	WITHOUT_CLASSIFICATION	1.6321132572116807E-7	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.999999960327618	WITHOUT_CLASSIFICATION	3.9672382041052433E-8	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999964205675	WITHOUT_CLASSIFICATION	3.5794324925196972E-9	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999995984775	WITHOUT_CLASSIFICATION	4.0152253359108404E-10	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999438333388	WITHOUT_CLASSIFICATION	5.616666112978217E-8	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999999897236382	WITHOUT_CLASSIFICATION	1.0276361702268124E-8	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9999999251451094	WITHOUT_CLASSIFICATION	7.485489064577448E-8	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999819436481322	WITHOUT_CLASSIFICATION	1.805635186771654E-5	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999819436481322	WITHOUT_CLASSIFICATION	1.805635186771654E-5	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999990960341093	WITHOUT_CLASSIFICATION	9.039658907896503E-7	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999998650633048	WITHOUT_CLASSIFICATION	1.3493669519454226E-7	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999998490882213	WITHOUT_CLASSIFICATION	1.5091177881257727E-7	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999257523899	WITHOUT_CLASSIFICATION	7.424761002983513E-8	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999257523899	WITHOUT_CLASSIFICATION	7.424761002983513E-8	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999999968298917	WITHOUT_CLASSIFICATION	3.170108347692052E-9	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999981315524	WITHOUT_CLASSIFICATION	1.8684476030259993E-9	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999999857046877	WITHOUT_CLASSIFICATION	1.429531215454808E-8	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999949678675801	WITHOUT_CLASSIFICATION	5.032132419942624E-6	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999999889499851	WITHOUT_CLASSIFICATION	1.1050014866524448E-8	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999900155138	WITHOUT_CLASSIFICATION	9.984486315113672E-9	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999993097191	WITHOUT_CLASSIFICATION	6.902808288931286E-10	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999980089992	WITHOUT_CLASSIFICATION	1.9910007490245904E-9	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999925414151	WITHOUT_CLASSIFICATION	7.458584888648664E-9	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999999115967876	WITHOUT_CLASSIFICATION	8.84032124083615E-8	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999965226026459	WITHOUT_CLASSIFICATION	3.4773973540254994E-6	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999999968298917	WITHOUT_CLASSIFICATION	3.170108347692052E-9	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999981315524	WITHOUT_CLASSIFICATION	1.8684476030259993E-9	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999949678675801	WITHOUT_CLASSIFICATION	5.032132419942624E-6	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999788502410132	WITHOUT_CLASSIFICATION	2.1149758986841844E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999998490882213	WITHOUT_CLASSIFICATION	1.5091177881257727E-7	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999998490882213	WITHOUT_CLASSIFICATION	1.5091177881257727E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999994549551244	WITHOUT_CLASSIFICATION	5.450448754395185E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999994549551244	WITHOUT_CLASSIFICATION	5.450448754395185E-7	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9903438834825808	WITHOUT_CLASSIFICATION	0.009656116517419195	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9903438834825808	WITHOUT_CLASSIFICATION	0.009656116517419195	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999999981415358	WITHOUT_CLASSIFICATION	1.858464141791234E-9	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999999671926879	WITHOUT_CLASSIFICATION	3.2807312007850206E-8	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999930881725356	WITHOUT_CLASSIFICATION	6.911827464384096E-6	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999999446495333	WITHOUT_CLASSIFICATION	5.5350466658484464E-8	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999999998063955	WITHOUT_CLASSIFICATION	1.9360451933966873E-10	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999999880997885	WITHOUT_CLASSIFICATION	1.1900211495482575E-8	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999999911182502	WITHOUT_CLASSIFICATION	8.881749758301259E-9	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999999867337701	WITHOUT_CLASSIFICATION	1.3266229853258219E-8	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999996104271236	WITHOUT_CLASSIFICATION	3.8957287645410703E-7	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.999999966714894	WITHOUT_CLASSIFICATION	3.328510589787339E-8	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.999999874660716	WITHOUT_CLASSIFICATION	1.2533928394506545E-7	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9999996093469408	WITHOUT_CLASSIFICATION	3.9065305921944437E-7	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999999275257884	WITHOUT_CLASSIFICATION	7.247421161114661E-8	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999996846820085	WITHOUT_CLASSIFICATION	3.1531799151246003E-7	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999992545161428	WITHOUT_CLASSIFICATION	7.454838571470287E-7	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9997661768615077	WITHOUT_CLASSIFICATION	2.3382313849240106E-4	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9999990091695387	WITHOUT_CLASSIFICATION	9.90830461329009E-7	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999999406991841	WITHOUT_CLASSIFICATION	5.9300815831865744E-8	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999848796327905	WITHOUT_CLASSIFICATION	1.5120367209501878E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999993097191	WITHOUT_CLASSIFICATION	6.902808288931286E-10	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999925414151	WITHOUT_CLASSIFICATION	7.458584888648664E-9	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.99999999875346	WITHOUT_CLASSIFICATION	1.246539991718935E-9	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998501666438	WITHOUT_CLASSIFICATION	1.4983335614220655E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998501666438	WITHOUT_CLASSIFICATION	1.4983335614220655E-7	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999788502410132	WITHOUT_CLASSIFICATION	2.1149758986841844E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999998490882213	WITHOUT_CLASSIFICATION	1.5091177881257727E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999994549551244	WITHOUT_CLASSIFICATION	5.450448754395185E-7	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9903438834825808	WITHOUT_CLASSIFICATION	0.009656116517419195	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999886216686968	WITHOUT_CLASSIFICATION	1.1378331303116284E-5	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999988748142653	WITHOUT_CLASSIFICATION	1.1251857347218366E-6	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999998357700921	WITHOUT_CLASSIFICATION	1.64229907775785E-7	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999997475120829	WITHOUT_CLASSIFICATION	2.524879171353508E-7	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999776237611	WITHOUT_CLASSIFICATION	2.2376238821720004E-8	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999776237611	WITHOUT_CLASSIFICATION	2.2376238821720004E-8	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999999746357353	WITHOUT_CLASSIFICATION	2.5364264660624593E-8	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999997590230649	WITHOUT_CLASSIFICATION	2.409769350152083E-7	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999926014134	WITHOUT_CLASSIFICATION	7.398586700383463E-9	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999998954051326	WITHOUT_CLASSIFICATION	1.0459486747170702E-7	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999990516666458	WITHOUT_CLASSIFICATION	9.483333542443819E-7	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999990516666458	WITHOUT_CLASSIFICATION	9.483333542443819E-7	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999999304729525	WITHOUT_CLASSIFICATION	6.952704746222588E-8	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9999959996603517	WITHOUT_CLASSIFICATION	4.000339648335939E-6	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999999942896161	WITHOUT_CLASSIFICATION	5.710383894097997E-9	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.999995020106496	WITHOUT_CLASSIFICATION	4.979893504076526E-6	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999981006848361	WITHOUT_CLASSIFICATION	1.8993151638414504E-6	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999999973653557	WITHOUT_CLASSIFICATION	2.6346442841807887E-9	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999998972171095	WITHOUT_CLASSIFICATION	1.0278289050283435E-7	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999998441713287	WITHOUT_CLASSIFICATION	1.55828671306808E-7	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9998024576396626	WITHOUT_CLASSIFICATION	1.975423603373528E-4	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9998977761226826	WITHOUT_CLASSIFICATION	1.0222387731742232E-4	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.999999991712561	WITHOUT_CLASSIFICATION	8.287439018456313E-9	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.99999994230213	WITHOUT_CLASSIFICATION	5.76978700126969E-8	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999999341609757	WITHOUT_CLASSIFICATION	6.58390243647011E-8	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.99999849327188	WITHOUT_CLASSIFICATION	1.5067281200268705E-6	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999995822502226	WITHOUT_CLASSIFICATION	4.1774977743516686E-7	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9989910212099129	WITHOUT_CLASSIFICATION	0.0010089787900870828	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999999999074767	WITHOUT_CLASSIFICATION	9.252330543477769E-11	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999876218794531	WITHOUT_CLASSIFICATION	1.2378120546892281E-5	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999997695024705	WITHOUT_CLASSIFICATION	2.304975295496426E-7	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999998758349481	WITHOUT_CLASSIFICATION	1.2416505179631394E-7	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999943038345055	WITHOUT_CLASSIFICATION	5.696165494479958E-6	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999999443102816	WITHOUT_CLASSIFICATION	5.568971851700168E-8	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999999443102816	WITHOUT_CLASSIFICATION	5.568971851700168E-8	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999995893307874	WITHOUT_CLASSIFICATION	4.106692127237208E-7	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999999906775847	WITHOUT_CLASSIFICATION	9.322415332259057E-9	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999966892078466	WITHOUT_CLASSIFICATION	3.3107921534851876E-6	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999966892078466	WITHOUT_CLASSIFICATION	3.3107921534851876E-6	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9985129388195382	WITHOUT_CLASSIFICATION	0.0014870611804618842	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999999490509759	WITHOUT_CLASSIFICATION	5.094902409819243E-8	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999961673471234	WITHOUT_CLASSIFICATION	3.832652876645575E-6	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999994305986	WITHOUT_CLASSIFICATION	5.694014053967945E-10	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999994305986	WITHOUT_CLASSIFICATION	5.694014053967945E-10	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999985589254589	WITHOUT_CLASSIFICATION	1.441074541069099E-6	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999950008729	WITHOUT_CLASSIFICATION	4.999127105442201E-9	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999999250944538	WITHOUT_CLASSIFICATION	7.49055462260887E-8	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999999375371664	WITHOUT_CLASSIFICATION	6.246283355649613E-8	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999995331883963	WITHOUT_CLASSIFICATION	4.668116037316769E-7	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.999999995520756	WITHOUT_CLASSIFICATION	4.479243962295447E-9	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999988185545282	WITHOUT_CLASSIFICATION	1.181445471810514E-6	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999999443707492	WITHOUT_CLASSIFICATION	5.5629250676721014E-8	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9999992388735243	WITHOUT_CLASSIFICATION	7.611264757776437E-7	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999793890060401	WITHOUT_CLASSIFICATION	2.0610993959905228E-5	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999984870904334	WITHOUT_CLASSIFICATION	1.5129095665988355E-6	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999780759887832	WITHOUT_CLASSIFICATION	2.1924011216800274E-5	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9999999055378106	WITHOUT_CLASSIFICATION	9.446218937053587E-8	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.999999927146861	WITHOUT_CLASSIFICATION	7.285313895293849E-8	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9994507226230913	WITHOUT_CLASSIFICATION	5.492773769086652E-4	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999996300568071	WITHOUT_CLASSIFICATION	3.699431928006088E-7	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999998504432	WITHOUT_CLASSIFICATION	1.4955673844589377E-10	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999949063096903	WITHOUT_CLASSIFICATION	5.093690309731036E-6	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999964226076093	WITHOUT_CLASSIFICATION	3.577392390620347E-6	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.999999997779491	WITHOUT_CLASSIFICATION	2.220508878720378E-9	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9999958156039793	WITHOUT_CLASSIFICATION	4.184396020692707E-6	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9999995614115857	WITHOUT_CLASSIFICATION	4.3858841427372566E-7	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.999978808519465	WITHOUT_CLASSIFICATION	2.1191480534936584E-5	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999998596116272	WITHOUT_CLASSIFICATION	1.4038837287016086E-7	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999488905676102	WITHOUT_CLASSIFICATION	5.1109432389787564E-5	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999999918022735	WITHOUT_CLASSIFICATION	8.197726477701302E-9	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9997882724937538	WITHOUT_CLASSIFICATION	2.1172750624620388E-4	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999790541699	WITHOUT_CLASSIFICATION	2.09458300975424E-8	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999982023684468	WITHOUT_CLASSIFICATION	1.7976315531323378E-6	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.99999999901536	WITHOUT_CLASSIFICATION	9.846400730611323E-10	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999775389281	WITHOUT_CLASSIFICATION	2.2461071981094276E-8	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.999999927146861	WITHOUT_CLASSIFICATION	7.285313895293849E-8	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999790541699	WITHOUT_CLASSIFICATION	2.09458300975424E-8	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999982023684468	WITHOUT_CLASSIFICATION	1.7976315531323378E-6	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999775389281	WITHOUT_CLASSIFICATION	2.2461071981094276E-8	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999984733852572	WITHOUT_CLASSIFICATION	1.526614742864878E-6	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9999982326629882	WITHOUT_CLASSIFICATION	1.7673370118744733E-6	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999994014442951	WITHOUT_CLASSIFICATION	5.985557048363087E-7	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999999659645066	WITHOUT_CLASSIFICATION	3.403549346296602E-8	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.99999995892121	WITHOUT_CLASSIFICATION	4.1078789972410436E-8	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999999963154926	WITHOUT_CLASSIFICATION	3.6845074069765287E-9	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9999984972200919	WITHOUT_CLASSIFICATION	1.5027799081473577E-6	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9999993724804986	WITHOUT_CLASSIFICATION	6.275195014082028E-7	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9999988536713164	WITHOUT_CLASSIFICATION	1.1463286836674674E-6	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999999736708842	WITHOUT_CLASSIFICATION	2.6329115854007503E-8	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999999253580578	WITHOUT_CLASSIFICATION	7.464194221447596E-8	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999999253580578	WITHOUT_CLASSIFICATION	7.464194221447596E-8	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.999999996379128	WITHOUT_CLASSIFICATION	3.6208719126684575E-9	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999998822570396	WITHOUT_CLASSIFICATION	1.1774296030102125E-7	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999821346576	WITHOUT_CLASSIFICATION	1.7865342471400326E-8	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999985053483991	WITHOUT_CLASSIFICATION	1.4946516010074227E-6	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999982483380977	WITHOUT_CLASSIFICATION	1.7516619024204004E-6	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999999235273132	WITHOUT_CLASSIFICATION	7.647268682707808E-8	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999999521490611	WITHOUT_CLASSIFICATION	4.7850938972353506E-8	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999953180556	WITHOUT_CLASSIFICATION	4.681944323796941E-9	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999999966318949	WITHOUT_CLASSIFICATION	3.368105166681158E-9	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999203763157	WITHOUT_CLASSIFICATION	7.962368433554075E-8	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999997867590623	WITHOUT_CLASSIFICATION	2.1324093762016063E-7	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.999998974200741	WITHOUT_CLASSIFICATION	1.0257992589734084E-6	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999999603361001	WITHOUT_CLASSIFICATION	3.9663900052775994E-8	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999998768791025	WITHOUT_CLASSIFICATION	1.2312089747859758E-7	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9999991746462277	WITHOUT_CLASSIFICATION	8.253537724459861E-7	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999995807404234	WITHOUT_CLASSIFICATION	4.1925957663259E-7	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9999998759717307	WITHOUT_CLASSIFICATION	1.2402826934947743E-7	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9999988901989104	WITHOUT_CLASSIFICATION	1.1098010895728143E-6	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9999851097751415	WITHOUT_CLASSIFICATION	1.489022485853692E-5	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9999997426599457	WITHOUT_CLASSIFICATION	2.5734005419980664E-7	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9999996193761425	WITHOUT_CLASSIFICATION	3.80623857492859E-7	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9999989694333294	WITHOUT_CLASSIFICATION	1.0305666706020023E-6	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999999548816925	WITHOUT_CLASSIFICATION	4.511830761662724E-8	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9999898503343181	WITHOUT_CLASSIFICATION	1.0149665681868835E-5	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999999761614622	WITHOUT_CLASSIFICATION	2.3838537762105424E-8	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9999877197689283	WITHOUT_CLASSIFICATION	1.228023107162943E-5	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999999667326437	WITHOUT_CLASSIFICATION	3.3267356331861444E-8	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.999999913156695	WITHOUT_CLASSIFICATION	8.684330503193977E-8	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.9999999639110946	WITHOUT_CLASSIFICATION	3.6088905332262245E-8	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999999985443189	WITHOUT_CLASSIFICATION	1.4556811898585881E-9	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999999995711826	WITHOUT_CLASSIFICATION	4.2881743223507143E-10	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9999999872822836	WITHOUT_CLASSIFICATION	1.2717716506596331E-8	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999999678834137	WITHOUT_CLASSIFICATION	3.211658621135999E-8	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999999495588182	WITHOUT_CLASSIFICATION	5.044118187561151E-8	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999999901789555	WITHOUT_CLASSIFICATION	9.821044545508797E-9	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999999575658038	WITHOUT_CLASSIFICATION	4.2434196064637763E-8	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999999834742767	WITHOUT_CLASSIFICATION	1.652572338370818E-8	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999998573206498	WITHOUT_CLASSIFICATION	1.4267935017824853E-7	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999993862421157	WITHOUT_CLASSIFICATION	6.137578842391792E-7	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999743073726034	WITHOUT_CLASSIFICATION	2.569262739670957E-5	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999999604136846	WITHOUT_CLASSIFICATION	3.9586315389860135E-8	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998872527567968	WITHOUT_CLASSIFICATION	1.127472432030965E-4	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.999997613944133	WITHOUT_CLASSIFICATION	2.3860558669624307E-6	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999999136254195	WITHOUT_CLASSIFICATION	8.637458045271434E-8	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999989401855522	WITHOUT_CLASSIFICATION	1.0598144478109203E-6	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999999965241677	WITHOUT_CLASSIFICATION	3.475832347948889E-9	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9980995527871696	WITHOUT_CLASSIFICATION	0.00190044721283044	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999990849694094	WITHOUT_CLASSIFICATION	9.150305906351204E-7	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999274522266524	WITHOUT_CLASSIFICATION	7.254777334761425E-5	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999999807808512	WITHOUT_CLASSIFICATION	1.9219148877112575E-8	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999706959166371	WITHOUT_CLASSIFICATION	2.9304083362916243E-5	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999999563155533	WITHOUT_CLASSIFICATION	4.3684446771081276E-8	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9997891480113101	WITHOUT_CLASSIFICATION	2.1085198868990058E-4	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999999371615912	WITHOUT_CLASSIFICATION	6.283840886864824E-8	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999993430487802	WITHOUT_CLASSIFICATION	6.569512197880947E-7	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999834997934	WITHOUT_CLASSIFICATION	1.650020664431794E-8	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999606478858624	WITHOUT_CLASSIFICATION	3.9352114137673575E-5	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.999621163022597	WITHOUT_CLASSIFICATION	3.7883697740311885E-4	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9663304502247647	WITHOUT_CLASSIFICATION	0.03366954977523536	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9997926338073275	WITHOUT_CLASSIFICATION	2.073661926725095E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9997926338073275	WITHOUT_CLASSIFICATION	2.073661926725095E-4	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999998809083989	WITHOUT_CLASSIFICATION	1.1909160106252951E-7	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999994480665936	WITHOUT_CLASSIFICATION	5.519334064186365E-7	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999650646648	WITHOUT_CLASSIFICATION	3.493533508590923E-8	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999259369631	WITHOUT_CLASSIFICATION	7.40630368996112E-8	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999994710753877	WITHOUT_CLASSIFICATION	5.289246122679018E-7	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999992143081339	WITHOUT_CLASSIFICATION	7.856918661489774E-7	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999927948833394	WITHOUT_CLASSIFICATION	7.205116660717721E-6	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999986965852462	WITHOUT_CLASSIFICATION	1.3034147537503722E-6	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999999537463733	WITHOUT_CLASSIFICATION	4.6253626669492286E-8	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999989024741273	WITHOUT_CLASSIFICATION	1.0975258727717988E-6	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999999899004237	WITHOUT_CLASSIFICATION	1.0099576334280783E-8	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9999999952336533	WITHOUT_CLASSIFICATION	4.7663466334029E-9	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999994708237625	WITHOUT_CLASSIFICATION	5.291762375254787E-7	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999453850115914	WITHOUT_CLASSIFICATION	5.4614988408607086E-5	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999989686266988	WITHOUT_CLASSIFICATION	1.0313733012501496E-6	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999963825895648	WITHOUT_CLASSIFICATION	3.6174104350676603E-6	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9999996683016823	WITHOUT_CLASSIFICATION	3.3169831774302955E-7	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999949732373	WITHOUT_CLASSIFICATION	5.026762594572046E-9	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999831269832732	WITHOUT_CLASSIFICATION	1.6873016726852694E-5	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.999992808994844	WITHOUT_CLASSIFICATION	7.1910051558858885E-6	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999681642371	WITHOUT_CLASSIFICATION	3.183576285517946E-8	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999999984607497	WITHOUT_CLASSIFICATION	1.539250385278002E-9	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9997885257828022	WITHOUT_CLASSIFICATION	2.1147421719781623E-4	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999999937221855	WITHOUT_CLASSIFICATION	6.2778143948145044E-9	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999998287931166	WITHOUT_CLASSIFICATION	1.7120688347651176E-7	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.999964487119233	WITHOUT_CLASSIFICATION	3.5512880766871276E-5	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999999692937166	WITHOUT_CLASSIFICATION	3.0706283419985754E-8	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999999984362329	WITHOUT_CLASSIFICATION	1.5637672093495484E-9	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999986430727217	WITHOUT_CLASSIFICATION	1.3569272782601636E-6	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999999986937996	WITHOUT_CLASSIFICATION	1.3062003807875497E-9	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999979441770342	WITHOUT_CLASSIFICATION	2.0558229658281446E-6	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999985721065295	WITHOUT_CLASSIFICATION	1.4278934704863072E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999993180696168	WITHOUT_CLASSIFICATION	6.819303832602233E-7	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999989078811944	WITHOUT_CLASSIFICATION	1.0921188056529856E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999993180696168	WITHOUT_CLASSIFICATION	6.819303832602233E-7	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999999320051425	WITHOUT_CLASSIFICATION	6.799485761751986E-8	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999875231438817	WITHOUT_CLASSIFICATION	1.2476856118303784E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999875231438817	WITHOUT_CLASSIFICATION	1.2476856118303784E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999875231438817	WITHOUT_CLASSIFICATION	1.2476856118303784E-5	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.99999767374601	WITHOUT_CLASSIFICATION	2.3262539899976417E-6	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.99999767374601	WITHOUT_CLASSIFICATION	2.3262539899976417E-6	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999999969229807	WITHOUT_CLASSIFICATION	3.077019355801461E-9	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999999999778563	WITHOUT_CLASSIFICATION	2.2143697708052037E-11	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999999980878795	WITHOUT_CLASSIFICATION	1.9121204903997534E-9	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9994525506619611	WITHOUT_CLASSIFICATION	5.474493380388075E-4	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999997712361355	WITHOUT_CLASSIFICATION	2.2876386451033947E-7	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999996892134412	WITHOUT_CLASSIFICATION	3.107865588605878E-7	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999994528462528	WITHOUT_CLASSIFICATION	5.471537471778506E-7	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999994057825564	WITHOUT_CLASSIFICATION	5.942174435115757E-7	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999981666965552	WITHOUT_CLASSIFICATION	1.8333034447621963E-6	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999997539278008	WITHOUT_CLASSIFICATION	2.4607219925196865E-7	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999993412990641	WITHOUT_CLASSIFICATION	6.587009358230873E-7	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999998412148502	WITHOUT_CLASSIFICATION	1.5878514985788152E-7	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999993144066063	WITHOUT_CLASSIFICATION	6.855933937533806E-7	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9999993382466279	WITHOUT_CLASSIFICATION	6.617533721612445E-7	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999984656324553	WITHOUT_CLASSIFICATION	1.53436754469029E-6	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9999999921340278	WITHOUT_CLASSIFICATION	7.865972188742183E-9	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999999966587875	WITHOUT_CLASSIFICATION	3.3412123952945614E-9	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999985166631995	WITHOUT_CLASSIFICATION	1.4833368004968356E-6	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999985166631995	WITHOUT_CLASSIFICATION	1.4833368004968356E-6	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9999982536658293	WITHOUT_CLASSIFICATION	1.7463341707639936E-6	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999997223396748	WITHOUT_CLASSIFICATION	2.776603251175796E-7	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999997223396748	WITHOUT_CLASSIFICATION	2.776603251175796E-7	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999986760256713	WITHOUT_CLASSIFICATION	1.3239743286884946E-6	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9999998922993149	WITHOUT_CLASSIFICATION	1.0770068517222448E-7	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9999957892800183	WITHOUT_CLASSIFICATION	4.210719981773946E-6	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9999997263585884	WITHOUT_CLASSIFICATION	2.7364141171503863E-7	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.999999051852162	WITHOUT_CLASSIFICATION	9.48147837946257E-7	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.999999947697077	WITHOUT_CLASSIFICATION	5.2302922999284655E-8	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9999997860142364	WITHOUT_CLASSIFICATION	2.139857635826009E-7	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.999872727402979	WITHOUT_CLASSIFICATION	1.2727259702099975E-4	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999999276749355	WITHOUT_CLASSIFICATION	7.232506449292729E-8	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999926908263519	WITHOUT_CLASSIFICATION	7.309173648066882E-6	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9998093906876241	WITHOUT_CLASSIFICATION	1.9060931237588016E-4	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999881846428174	WITHOUT_CLASSIFICATION	1.1815357182542635E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999988267490577	WITHOUT_CLASSIFICATION	1.1732509423476706E-6	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999998045508915	WITHOUT_CLASSIFICATION	1.9544910847092699E-7	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999994057825564	WITHOUT_CLASSIFICATION	5.942174435115757E-7	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999966802730477	WITHOUT_CLASSIFICATION	3.3197269524348355E-6	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.999999987907557	WITHOUT_CLASSIFICATION	1.2092443005046391E-8	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999855210064007	WITHOUT_CLASSIFICATION	1.4478993599194221E-5	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999855210064007	WITHOUT_CLASSIFICATION	1.4478993599194221E-5	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999997992763481	WITHOUT_CLASSIFICATION	2.0072365200566024E-7	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999513639968183	WITHOUT_CLASSIFICATION	4.86360031817319E-5	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999998301781594	WITHOUT_CLASSIFICATION	1.6982184052264932E-7	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9999990149323325	WITHOUT_CLASSIFICATION	9.850676674692599E-7	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999999997331706	WITHOUT_CLASSIFICATION	2.668294289279448E-10	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.999993406445912	WITHOUT_CLASSIFICATION	6.593554088043065E-6	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999999751028804	WITHOUT_CLASSIFICATION	2.4897119685711035E-8	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999856331171624	WITHOUT_CLASSIFICATION	1.4366882837575083E-5	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999993576814381	WITHOUT_CLASSIFICATION	6.423185618478999E-7	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999757404083321	WITHOUT_CLASSIFICATION	2.4259591667861077E-5	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9998527163520616	WITHOUT_CLASSIFICATION	1.47283647938342E-4	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999999412802919	WITHOUT_CLASSIFICATION	5.8719707943444125E-8	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9989783094053463	WITHOUT_CLASSIFICATION	0.0010216905946537427	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999999620099169	WITHOUT_CLASSIFICATION	3.7990083092735855E-8	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999999977453362	WITHOUT_CLASSIFICATION	2.2546637890360607E-9	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999999874478179	WITHOUT_CLASSIFICATION	1.2552182069886032E-8	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999994638251648	WITHOUT_CLASSIFICATION	5.361748351864037E-7	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999528584581399	WITHOUT_CLASSIFICATION	4.7141541860147174E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999991306689052	WITHOUT_CLASSIFICATION	8.693310947858266E-7	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999996458998159	WITHOUT_CLASSIFICATION	3.5410018395337884E-7	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999995892313851	WITHOUT_CLASSIFICATION	4.1076861482834456E-7	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999989040616538	WITHOUT_CLASSIFICATION	1.0959383462621907E-6	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999753315745651	WITHOUT_CLASSIFICATION	2.4668425434854448E-5	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999732313556	WITHOUT_CLASSIFICATION	2.6768644468833145E-8	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999682698828843	WITHOUT_CLASSIFICATION	3.1730117115673E-5	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999923235715321	WITHOUT_CLASSIFICATION	7.676428467845289E-6	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999988619030072	WITHOUT_CLASSIFICATION	1.1380969927365992E-6	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9996159241499555	WITHOUT_CLASSIFICATION	3.8407585004455644E-4	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999998859021502	WITHOUT_CLASSIFICATION	1.1409784972903717E-7	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999998765652693	WITHOUT_CLASSIFICATION	1.2343473061542467E-7	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999996700874709	WITHOUT_CLASSIFICATION	3.299125290842878E-7	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999999139046248	WITHOUT_CLASSIFICATION	8.609537519678514E-8	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999988763283393	WITHOUT_CLASSIFICATION	1.1236716608104723E-6	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999981872210522	WITHOUT_CLASSIFICATION	1.8127789478317832E-6	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999994872846635	WITHOUT_CLASSIFICATION	5.12715336473942E-7	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.9999999243734412	WITHOUT_CLASSIFICATION	7.56265588062068E-8	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9996159241499555	WITHOUT_CLASSIFICATION	3.8407585004455644E-4	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999579113064	WITHOUT_CLASSIFICATION	4.2088693681519644E-8	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999994872846635	WITHOUT_CLASSIFICATION	5.12715336473942E-7	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999996986262386	WITHOUT_CLASSIFICATION	3.013737613156405E-7	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999997707086464	WITHOUT_CLASSIFICATION	2.292913535450533E-7	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.999999908889296	WITHOUT_CLASSIFICATION	9.111070391100688E-8	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999997045712762	WITHOUT_CLASSIFICATION	2.9542872382148163E-7	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999990012564512	WITHOUT_CLASSIFICATION	9.987435487107024E-7	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999899360623229	WITHOUT_CLASSIFICATION	1.0063937677017556E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999899360623229	WITHOUT_CLASSIFICATION	1.0063937677017556E-5	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.7630123146115022	IMPLEMENTATION	0.23698768538849785	WITHOUT_CLASSIFICATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999812271262253	WITHOUT_CLASSIFICATION	1.8772873774763467E-5	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999996954091642	WITHOUT_CLASSIFICATION	3.0459083568152955E-7	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999996954091642	WITHOUT_CLASSIFICATION	3.0459083568152955E-7	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999998380191112	WITHOUT_CLASSIFICATION	1.6198088884387864E-7	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9997450135925424	WITHOUT_CLASSIFICATION	2.5498640745750324E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999873837498913	WITHOUT_CLASSIFICATION	1.2616250108730597E-5	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999873837498913	WITHOUT_CLASSIFICATION	1.2616250108730597E-5	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999892975552017	WITHOUT_CLASSIFICATION	1.0702444798305164E-5	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999986421479471	WITHOUT_CLASSIFICATION	1.3578520529585432E-6	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999999992896542	WITHOUT_CLASSIFICATION	7.103457320405347E-10	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999997321232321	WITHOUT_CLASSIFICATION	2.678767679101602E-7	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.999999997581695	WITHOUT_CLASSIFICATION	2.418304951068666E-9	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999856424530321	WITHOUT_CLASSIFICATION	1.4357546967839602E-5	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999999085685024	WITHOUT_CLASSIFICATION	9.143149758141285E-8	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999999513186832	WITHOUT_CLASSIFICATION	4.8681316844513176E-8	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999986785756074	WITHOUT_CLASSIFICATION	1.3214243925584672E-6	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999993341344816	WITHOUT_CLASSIFICATION	6.658655183493239E-7	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.999977209602968	WITHOUT_CLASSIFICATION	2.2790397032005417E-5	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.999998679165483	WITHOUT_CLASSIFICATION	1.3208345169260056E-6	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999953106565302	WITHOUT_CLASSIFICATION	4.689343469734269E-6	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999986201911667	WITHOUT_CLASSIFICATION	1.3798088333890116E-6	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.999998423787312	WITHOUT_CLASSIFICATION	1.5762126880075294E-6	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999995457508574	WITHOUT_CLASSIFICATION	4.5424914263551706E-7	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999837937989556	WITHOUT_CLASSIFICATION	1.6206201044371262E-5	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999998167437166	WITHOUT_CLASSIFICATION	1.8325628326442744E-7	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999980605659168	WITHOUT_CLASSIFICATION	1.939434083267752E-6	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9922627089486449	WITHOUT_CLASSIFICATION	0.007737291051355121	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999999817292974	WITHOUT_CLASSIFICATION	1.8270702582685465E-8	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999922935031181	WITHOUT_CLASSIFICATION	7.706496881783193E-6	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9983310917459969	WITHOUT_CLASSIFICATION	0.0016689082540031395	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999985035318165	WITHOUT_CLASSIFICATION	1.4964681835817737E-6	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999973217257295	WITHOUT_CLASSIFICATION	2.678274270471927E-6	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999997615421993	WITHOUT_CLASSIFICATION	2.384578007809646E-7	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999998618286108	WITHOUT_CLASSIFICATION	1.3817138927505135E-7	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.999999525433301	WITHOUT_CLASSIFICATION	4.745666990310449E-7	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999999977663799	WITHOUT_CLASSIFICATION	2.2336201026273013E-8	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.999999977663799	WITHOUT_CLASSIFICATION	2.2336201026273013E-8	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999999997399304	WITHOUT_CLASSIFICATION	2.6006964229523244E-10	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999997855839527	WITHOUT_CLASSIFICATION	2.144160473183044E-7	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999999741543543	WITHOUT_CLASSIFICATION	2.5845645667952204E-8	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999998541434048	WITHOUT_CLASSIFICATION	1.458565952455508E-7	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999999936339589	WITHOUT_CLASSIFICATION	6.3660411229666495E-9	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9999991368608967	WITHOUT_CLASSIFICATION	8.631391034109051E-7	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999965249091226	WITHOUT_CLASSIFICATION	3.475090877283601E-6	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997550710407	WITHOUT_CLASSIFICATION	2.4492895927042786E-7	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999999905533326	WITHOUT_CLASSIFICATION	9.446667452464126E-9	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999994992541997	WITHOUT_CLASSIFICATION	5.007458002970972E-7	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9941093886260723	WITHOUT_CLASSIFICATION	0.00589061137392767	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999999907932667	WITHOUT_CLASSIFICATION	9.206733282774196E-9	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9994210194266337	WITHOUT_CLASSIFICATION	5.789805733661819E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999966301835468	WITHOUT_CLASSIFICATION	3.369816453166425E-6	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999961121080455	WITHOUT_CLASSIFICATION	3.88789195447096E-6	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999923361782151	WITHOUT_CLASSIFICATION	7.663821784847758E-6	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.998804953387806	WITHOUT_CLASSIFICATION	0.0011950466121940643	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999997411810861	WITHOUT_CLASSIFICATION	2.588189139158138E-7	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9999995539026731	WITHOUT_CLASSIFICATION	4.460973268681173E-7	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999959614957664	WITHOUT_CLASSIFICATION	4.03850423364558E-6	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999784151292298	WITHOUT_CLASSIFICATION	2.158487077019619E-5	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.999973829418858	WITHOUT_CLASSIFICATION	2.617058114187237E-5	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999998395254242	WITHOUT_CLASSIFICATION	1.6047457587165633E-7	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999998191885604	WITHOUT_CLASSIFICATION	1.8081143958354153E-7	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.99999558262055	WITHOUT_CLASSIFICATION	4.417379449937179E-6	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999758033139968	WITHOUT_CLASSIFICATION	2.41966860031088E-5	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999914685803706	WITHOUT_CLASSIFICATION	8.531419629362476E-6	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999982160802976	WITHOUT_CLASSIFICATION	1.7839197025037035E-6	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9999998039397597	WITHOUT_CLASSIFICATION	1.9606024033776328E-7	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9999996569064157	WITHOUT_CLASSIFICATION	3.430935842607548E-7	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999999383154436	WITHOUT_CLASSIFICATION	6.16845563043265E-8	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999981188428718	WITHOUT_CLASSIFICATION	1.8811571281588947E-6	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999986405335294	WITHOUT_CLASSIFICATION	1.359466470657422E-6	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9999978228605362	WITHOUT_CLASSIFICATION	2.1771394637958616E-6	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999988722485877	WITHOUT_CLASSIFICATION	1.1277514121694703E-6	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9993131207029523	WITHOUT_CLASSIFICATION	6.868792970476388E-4	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999962391529772	WITHOUT_CLASSIFICATION	3.760847022841298E-6	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.999975788147998	WITHOUT_CLASSIFICATION	2.421185200198265E-5	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999944493167623	WITHOUT_CLASSIFICATION	5.550683237790878E-6	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999987683249882	WITHOUT_CLASSIFICATION	1.2316750118413981E-6	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999267470222021	WITHOUT_CLASSIFICATION	7.325297779785552E-5	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999995223752078	WITHOUT_CLASSIFICATION	4.776247922666627E-7	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999972989562251	WITHOUT_CLASSIFICATION	2.7010437749274674E-6	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999972989562251	WITHOUT_CLASSIFICATION	2.7010437749274674E-6	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9998928309755474	WITHOUT_CLASSIFICATION	1.0716902445261351E-4	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.999999855332386	WITHOUT_CLASSIFICATION	1.446676139560973E-7	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9827101845697559	WITHOUT_CLASSIFICATION	0.01728981543024417	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999997132109282	WITHOUT_CLASSIFICATION	2.867890718465122E-7	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999676711207883	WITHOUT_CLASSIFICATION	3.2328879211697194E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999993105758115	WITHOUT_CLASSIFICATION	6.894241884801565E-7	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999342477469381	WITHOUT_CLASSIFICATION	6.575225306185714E-5	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999761940758699	WITHOUT_CLASSIFICATION	2.3805924130049445E-5	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999992305819868	WITHOUT_CLASSIFICATION	7.694180133224214E-7	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9999991382406419	WITHOUT_CLASSIFICATION	8.617593580301005E-7	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9999999230138629	WITHOUT_CLASSIFICATION	7.698613711992571E-8	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.9999984900683163	WITHOUT_CLASSIFICATION	1.5099316836011427E-6	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9999999777245532	WITHOUT_CLASSIFICATION	2.227544687659145E-8	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999999918871176	WITHOUT_CLASSIFICATION	8.11288233565256E-9	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999021242626	WITHOUT_CLASSIFICATION	9.787573748756551E-8	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9999999117652688	WITHOUT_CLASSIFICATION	8.823473118939624E-8	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999728616643	WITHOUT_CLASSIFICATION	2.7138335800125562E-8	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9999994395187879	WITHOUT_CLASSIFICATION	5.60481212084845E-7	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999999821367027	WITHOUT_CLASSIFICATION	1.786329729001336E-7	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9999996784423618	WITHOUT_CLASSIFICATION	3.215576381593067E-7	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999997107106022	WITHOUT_CLASSIFICATION	2.892893977885775E-7	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999955267580792	WITHOUT_CLASSIFICATION	4.473241920805836E-6	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999973222852296	WITHOUT_CLASSIFICATION	2.6777147704301015E-6	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999990644314755	WITHOUT_CLASSIFICATION	9.355685245120369E-7	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999995480668	WITHOUT_CLASSIFICATION	4.519332481528531E-10	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999974267145	WITHOUT_CLASSIFICATION	2.573285350449378E-9	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999971771936	WITHOUT_CLASSIFICATION	2.8228063805690425E-9	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999999808810717	WITHOUT_CLASSIFICATION	1.9118928274655073E-8	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999999165184404	WITHOUT_CLASSIFICATION	8.348155953408728E-8	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9999999596962311	WITHOUT_CLASSIFICATION	4.0303768902464266E-8	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999999076838348	WITHOUT_CLASSIFICATION	9.231616518495292E-8	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999993664446445	WITHOUT_CLASSIFICATION	6.335553555289719E-7	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999792992587221	WITHOUT_CLASSIFICATION	2.0700741277847134E-5	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9856047343565495	WITHOUT_CLASSIFICATION	0.014395265643450594	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.999975788147998	WITHOUT_CLASSIFICATION	2.421185200198265E-5	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9993545123428635	WITHOUT_CLASSIFICATION	6.454876571364194E-4	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999999293716655	WITHOUT_CLASSIFICATION	7.062833451243689E-8	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999999293716655	WITHOUT_CLASSIFICATION	7.062833451243689E-8	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.999999988934309	WITHOUT_CLASSIFICATION	1.1065690979626393E-8	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999999983246193	WITHOUT_CLASSIFICATION	1.675380681111747E-9	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999738797763809	WITHOUT_CLASSIFICATION	2.612022361906227E-5	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.9985172024502662	WITHOUT_CLASSIFICATION	0.0014827975497337619	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9938991948022793	WITHOUT_CLASSIFICATION	0.006100805197720741	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9913346920368206	WITHOUT_CLASSIFICATION	0.00866530796317946	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9927959668273114	WITHOUT_CLASSIFICATION	0.007204033172688485	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.992642943449246	WITHOUT_CLASSIFICATION	0.007357056550753946	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9714289756805712	WITHOUT_CLASSIFICATION	0.028571024319428796	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9836275492743257	WITHOUT_CLASSIFICATION	0.01637245072567431	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9756687462403965	WITHOUT_CLASSIFICATION	0.024331253759603523	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9672390471630314	WITHOUT_CLASSIFICATION	0.0327609528369685	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9957775335203785	WITHOUT_CLASSIFICATION	0.0042224664796215484	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999859132644612	WITHOUT_CLASSIFICATION	1.4086735538908308E-5	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999705776331465	WITHOUT_CLASSIFICATION	2.9422366853615117E-5	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999995087398088	WITHOUT_CLASSIFICATION	4.912601911894511E-7	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9862938518104286	WITHOUT_CLASSIFICATION	0.013706148189571391	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9478582076183545	WITHOUT_CLASSIFICATION	0.05214179238164541	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9599521291077053	WITHOUT_CLASSIFICATION	0.04004787089229462	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9769344647129382	WITHOUT_CLASSIFICATION	0.023065535287061834	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9680997447143835	WITHOUT_CLASSIFICATION	0.03190025528561643	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9837784271098897	WITHOUT_CLASSIFICATION	0.016221572890110315	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999979111079317	WITHOUT_CLASSIFICATION	2.0888920683354602E-6	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999995974023905	WITHOUT_CLASSIFICATION	4.025976094379308E-7	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999999679371804	WITHOUT_CLASSIFICATION	3.206281960016734E-8	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9992154681056475	WITHOUT_CLASSIFICATION	7.845318943525803E-4	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999872669028731	WITHOUT_CLASSIFICATION	1.2733097126829674E-5	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.999999883693203	WITHOUT_CLASSIFICATION	1.1630679696122122E-7	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999990606983038	WITHOUT_CLASSIFICATION	9.393016960922163E-7	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999929154618352	WITHOUT_CLASSIFICATION	7.0845381647953805E-6	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9999997968890175	WITHOUT_CLASSIFICATION	2.0311098244103768E-7	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999999590401399	WITHOUT_CLASSIFICATION	4.095986012678385E-8	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9999991651281331	WITHOUT_CLASSIFICATION	8.348718668046171E-7	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999983704968387	WITHOUT_CLASSIFICATION	1.6295031613070862E-6	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999978851107849	WITHOUT_CLASSIFICATION	2.1148892150519585E-6	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999974256472941	WITHOUT_CLASSIFICATION	2.57435270580034E-6	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.999999999384285	WITHOUT_CLASSIFICATION	6.157149721439455E-10	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9992154681056475	WITHOUT_CLASSIFICATION	7.845318943525803E-4	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999872669028731	WITHOUT_CLASSIFICATION	1.2733097126829674E-5	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.999999883693203	WITHOUT_CLASSIFICATION	1.1630679696122122E-7	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999929154618352	WITHOUT_CLASSIFICATION	7.0845381647953805E-6	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9930424279785605	WITHOUT_CLASSIFICATION	0.006957572021439631	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999897432909	WITHOUT_CLASSIFICATION	1.0256709120012744E-8	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999571925647462	WITHOUT_CLASSIFICATION	4.2807435253664726E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999997967432597	WITHOUT_CLASSIFICATION	2.0325674024281628E-7	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999971449787697	WITHOUT_CLASSIFICATION	2.855021230187363E-6	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999945346476	WITHOUT_CLASSIFICATION	5.4653523180415605E-9	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999928231729422	WITHOUT_CLASSIFICATION	7.1768270577887595E-6	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999998964393455	WITHOUT_CLASSIFICATION	1.0356065460033133E-7	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999999874308003	WITHOUT_CLASSIFICATION	1.2569199742622626E-8	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999934015937917	WITHOUT_CLASSIFICATION	6.5984062083554835E-6	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999998496090744	WITHOUT_CLASSIFICATION	1.5039092555310394E-7	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999993444734593	WITHOUT_CLASSIFICATION	6.555265406997548E-7	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.999999996945673	WITHOUT_CLASSIFICATION	3.0543269916148056E-9	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999971296846665	WITHOUT_CLASSIFICATION	2.8703153335612935E-6	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9999974771616778	WITHOUT_CLASSIFICATION	2.5228383223139E-6	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9999995297362698	WITHOUT_CLASSIFICATION	4.702637301871206E-7	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999999233581949	WITHOUT_CLASSIFICATION	7.664180511869993E-8	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999999921967581	WITHOUT_CLASSIFICATION	7.803242047075345E-9	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999989949237496	WITHOUT_CLASSIFICATION	1.005076250426186E-6	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.999999999384285	WITHOUT_CLASSIFICATION	6.157149721439455E-10	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999897432909	WITHOUT_CLASSIFICATION	1.0256709120012744E-8	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999571925647462	WITHOUT_CLASSIFICATION	4.2807435253664726E-5	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999971449787697	WITHOUT_CLASSIFICATION	2.855021230187363E-6	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999945346476	WITHOUT_CLASSIFICATION	5.4653523180415605E-9	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999928231729422	WITHOUT_CLASSIFICATION	7.1768270577887595E-6	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999998964393455	WITHOUT_CLASSIFICATION	1.0356065460033133E-7	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999999486375184	WITHOUT_CLASSIFICATION	5.136248161473185E-8	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.999988419039078	WITHOUT_CLASSIFICATION	1.1580960921958426E-5	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999999063518801	WITHOUT_CLASSIFICATION	9.364811993852034E-8	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999989321258	WITHOUT_CLASSIFICATION	1.067874206132089E-9	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999990904073037	WITHOUT_CLASSIFICATION	9.09592696239754E-7	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999990904073037	WITHOUT_CLASSIFICATION	9.09592696239754E-7	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9999999895238318	WITHOUT_CLASSIFICATION	1.047616817709819E-8	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999981138263688	WITHOUT_CLASSIFICATION	1.8861736310638671E-6	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999999255260905	WITHOUT_CLASSIFICATION	7.447390945038695E-8	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999989763142026	WITHOUT_CLASSIFICATION	1.0236857973688075E-6	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999999989838613	WITHOUT_CLASSIFICATION	1.0161386572060668E-9	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999996135783842	WITHOUT_CLASSIFICATION	3.8642161589812997E-7	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9999992110998236	WITHOUT_CLASSIFICATION	7.889001763488951E-7	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999995183717921	WITHOUT_CLASSIFICATION	4.816282078666725E-7	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999988214974692	WITHOUT_CLASSIFICATION	1.1785025308153307E-6	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999685635243698	WITHOUT_CLASSIFICATION	3.1436475630097673E-5	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999884009060335	WITHOUT_CLASSIFICATION	1.1599093966497547E-5	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999562320094603	WITHOUT_CLASSIFICATION	4.376799053975027E-5	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.999996558005175	WITHOUT_CLASSIFICATION	3.4419948250973753E-6	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999973551661672	WITHOUT_CLASSIFICATION	2.6448338327853355E-6	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.99999913157645	WITHOUT_CLASSIFICATION	8.684235498956014E-7	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999182754184557	WITHOUT_CLASSIFICATION	8.172458154430444E-5	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9999998399413681	WITHOUT_CLASSIFICATION	1.600586319850007E-7	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999999978750085	WITHOUT_CLASSIFICATION	2.1249915381670256E-9	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.999999919476466	WITHOUT_CLASSIFICATION	8.052353395947897E-8	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999974576015098	WITHOUT_CLASSIFICATION	2.542398490206948E-6	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9811515418404967	IMPLEMENTATION	0.018848458159503343	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999999896599867	WITHOUT_CLASSIFICATION	1.0340013221949085E-8	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999999962844304	WITHOUT_CLASSIFICATION	3.7155696049701822E-9	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5715984430708179	WITHOUT_CLASSIFICATION	0.42840155692918214	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999777580401855	WITHOUT_CLASSIFICATION	2.2241959814565317E-5	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999854571272806	WITHOUT_CLASSIFICATION	1.4542872719477344E-5	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.999999950318313	WITHOUT_CLASSIFICATION	4.968168697415197E-8	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999989739221534	WITHOUT_CLASSIFICATION	1.026077846613363E-6	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9999995049943912	WITHOUT_CLASSIFICATION	4.950056089168174E-7	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999777580401855	WITHOUT_CLASSIFICATION	2.2241959814565317E-5	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999854571272806	WITHOUT_CLASSIFICATION	1.4542872719477344E-5	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999973551661672	WITHOUT_CLASSIFICATION	2.6448338327853355E-6	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999878453805575	WITHOUT_CLASSIFICATION	1.2154619442463461E-5	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999943528706948	WITHOUT_CLASSIFICATION	5.647129305153159E-6	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9996875836798264	WITHOUT_CLASSIFICATION	3.124163201737542E-4	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999999999962876	WITHOUT_CLASSIFICATION	3.712363406058927E-12	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999968764997623	WITHOUT_CLASSIFICATION	3.1235002376700413E-6	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.999996228587861	WITHOUT_CLASSIFICATION	3.771412139038866E-6	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999997692807875	WITHOUT_CLASSIFICATION	2.3071921248563794E-7	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.999998959812244	WITHOUT_CLASSIFICATION	1.0401877560977968E-6	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999980059624333	WITHOUT_CLASSIFICATION	1.9940375666727127E-6	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.999999999823934	WITHOUT_CLASSIFICATION	1.7606611270525333E-10	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999980488657486	WITHOUT_CLASSIFICATION	1.9511342514869623E-6	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999579043547122	WITHOUT_CLASSIFICATION	4.209564528770894E-5	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9992800694031381	WITHOUT_CLASSIFICATION	7.199305968620388E-4	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999997915922575	WITHOUT_CLASSIFICATION	2.0840774256582498E-7	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999996958106249	WITHOUT_CLASSIFICATION	3.0418937521981673E-7	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999787660440238	WITHOUT_CLASSIFICATION	2.123395597623958E-5	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9998056437902636	WITHOUT_CLASSIFICATION	1.9435620973643118E-4	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9998764905673703	WITHOUT_CLASSIFICATION	1.2350943262974282E-4	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999933379559204	WITHOUT_CLASSIFICATION	6.662044079608166E-6	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999999779235067	WITHOUT_CLASSIFICATION	2.2076493364065908E-8	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999992137197701	WITHOUT_CLASSIFICATION	7.862802299827217E-7	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.999999930078419	WITHOUT_CLASSIFICATION	6.992158087114482E-8	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999993441614846	WITHOUT_CLASSIFICATION	6.558385154163451E-7	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999993287315	WITHOUT_CLASSIFICATION	6.712684885941673E-10	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999996363836822	WITHOUT_CLASSIFICATION	3.6361631785171863E-7	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999996613075345	WITHOUT_CLASSIFICATION	3.3869246551384816E-7	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9999961075097347	WITHOUT_CLASSIFICATION	3.892490265403512E-6	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999963850013366	WITHOUT_CLASSIFICATION	3.6149986633539056E-6	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999999128774035	WITHOUT_CLASSIFICATION	8.712259650424122E-8	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999999938808481	WITHOUT_CLASSIFICATION	6.119151899640743E-9	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999997015815952	WITHOUT_CLASSIFICATION	2.984184046683779E-7	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999997759342499	WITHOUT_CLASSIFICATION	2.2406575009894048E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999997759342499	WITHOUT_CLASSIFICATION	2.2406575009894048E-6	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.999996558005175	WITHOUT_CLASSIFICATION	3.4419948250973753E-6	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999999996760519	WITHOUT_CLASSIFICATION	3.2394806196554357E-10	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999981710808715	WITHOUT_CLASSIFICATION	1.8289191284266286E-6	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999989245632291	WITHOUT_CLASSIFICATION	1.0754367707875895E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.999930716533634	WITHOUT_CLASSIFICATION	6.928346636605602E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.999930716533634	WITHOUT_CLASSIFICATION	6.928346636605602E-5	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999991092606376	WITHOUT_CLASSIFICATION	8.907393623117452E-7	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999472956332036	WITHOUT_CLASSIFICATION	5.2704366796408834E-5	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999994938527714	WITHOUT_CLASSIFICATION	5.06147228561771E-7	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999999360868032	WITHOUT_CLASSIFICATION	6.391319686415795E-8	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999998197438913	WITHOUT_CLASSIFICATION	1.8025610870445927E-7	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999999995355152	WITHOUT_CLASSIFICATION	4.6448477031131194E-10	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9998472788619479	WITHOUT_CLASSIFICATION	1.5272113805213082E-4	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999513669630457	WITHOUT_CLASSIFICATION	4.8633036954400985E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999997859215033	WITHOUT_CLASSIFICATION	2.1407849664855785E-7	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999963688086878	WITHOUT_CLASSIFICATION	3.631191312272206E-6	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999996255402104	WITHOUT_CLASSIFICATION	3.7445978967447816E-7	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999999255342834	WITHOUT_CLASSIFICATION	7.446571653442279E-8	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999998263162632	WITHOUT_CLASSIFICATION	1.7368373686463872E-7	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999911076564051	WITHOUT_CLASSIFICATION	8.892343594941082E-6	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999995044882622	WITHOUT_CLASSIFICATION	4.955117376976491E-7	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.9999988931302379	WITHOUT_CLASSIFICATION	1.1068697621198348E-6	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999998621445	WITHOUT_CLASSIFICATION	1.378555096896001E-10	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999998621445	WITHOUT_CLASSIFICATION	1.378555096896001E-10	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999997940679417	WITHOUT_CLASSIFICATION	2.0593205828826966E-7	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999997940679417	WITHOUT_CLASSIFICATION	2.0593205828826966E-7	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999809655173	WITHOUT_CLASSIFICATION	1.9034482636600352E-8	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999999662545049	WITHOUT_CLASSIFICATION	3.3745495066757483E-8	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999686687613095	WITHOUT_CLASSIFICATION	3.133123869048804E-5	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9991953585870005	WITHOUT_CLASSIFICATION	8.046414129995514E-4	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999999864170126	WITHOUT_CLASSIFICATION	1.3582987495080298E-8	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999988821452188	WITHOUT_CLASSIFICATION	1.1178547811640954E-6	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999987606176527	WITHOUT_CLASSIFICATION	1.2393823472733246E-6	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999999255342834	WITHOUT_CLASSIFICATION	7.446571653442279E-8	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999998263162632	WITHOUT_CLASSIFICATION	1.7368373686463872E-7	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999995044882622	WITHOUT_CLASSIFICATION	4.955117376976491E-7	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999999953719495	WITHOUT_CLASSIFICATION	4.628050502243672E-9	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999991737305192	WITHOUT_CLASSIFICATION	8.262694809058193E-7	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999999453331815	WITHOUT_CLASSIFICATION	5.466681844700834E-8	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999996518585044	WITHOUT_CLASSIFICATION	3.481414956822509E-7	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999999994171067	WITHOUT_CLASSIFICATION	5.828931991927685E-10	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999804476525278	WITHOUT_CLASSIFICATION	1.955234747220813E-5	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999941031370536	WITHOUT_CLASSIFICATION	5.896862946400622E-6	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999703304872662	WITHOUT_CLASSIFICATION	2.966951273378429E-5	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999969445873054	WITHOUT_CLASSIFICATION	3.05541269466717E-6	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999996918552	WITHOUT_CLASSIFICATION	3.081448153586464E-10	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9958281503869049	WITHOUT_CLASSIFICATION	0.0041718496130951875	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999991533160635	WITHOUT_CLASSIFICATION	8.466839365432446E-7	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.999999876421583	WITHOUT_CLASSIFICATION	1.2357841698455705E-7	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999982798492228	WITHOUT_CLASSIFICATION	1.720150777086654E-6	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999920670362694	WITHOUT_CLASSIFICATION	7.932963730556517E-6	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999997773855585	WITHOUT_CLASSIFICATION	2.226144414805913E-7	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999997958737209	WITHOUT_CLASSIFICATION	2.041262790599539E-7	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999983060829282	WITHOUT_CLASSIFICATION	1.6939170717545626E-6	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999969427181572	WITHOUT_CLASSIFICATION	3.0572818427844956E-6	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999999875972556	WITHOUT_CLASSIFICATION	1.240274445999089E-8	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999999794425135	WITHOUT_CLASSIFICATION	2.0557486567453937E-8	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999626893705642	WITHOUT_CLASSIFICATION	3.731062943579841E-5	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999907386552384	WITHOUT_CLASSIFICATION	9.26134476163249E-6	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.999999977923987	WITHOUT_CLASSIFICATION	2.2076012997494506E-8	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.999999904106489	WITHOUT_CLASSIFICATION	9.589351106167392E-8	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999992314040644	WITHOUT_CLASSIFICATION	7.685959355333139E-7	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999907226992968	WITHOUT_CLASSIFICATION	9.277300703129729E-6	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999893365611455	WITHOUT_CLASSIFICATION	1.0663438854506789E-5	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999999402944358	WITHOUT_CLASSIFICATION	5.970556419156923E-8	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.99999975569223	WITHOUT_CLASSIFICATION	2.4430777005697525E-7	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999981727714762	WITHOUT_CLASSIFICATION	1.8272285238352313E-6	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999999586909754	WITHOUT_CLASSIFICATION	4.1309024629940266E-8	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999999256940253	WITHOUT_CLASSIFICATION	7.430597468877351E-8	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999999259949222	WITHOUT_CLASSIFICATION	7.400507780431757E-8	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999879247284178	WITHOUT_CLASSIFICATION	1.2075271582166682E-5	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999993622639575	WITHOUT_CLASSIFICATION	6.377360426184141E-7	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.999991961561587	WITHOUT_CLASSIFICATION	8.038438413093215E-6	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999997581662553	WITHOUT_CLASSIFICATION	2.4183374468222894E-7	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999988635196618	WITHOUT_CLASSIFICATION	1.136480338153854E-6	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.999999996932531	WITHOUT_CLASSIFICATION	3.0674689374958465E-9	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999999373538498	WITHOUT_CLASSIFICATION	6.264615005509382E-8	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999981710808715	WITHOUT_CLASSIFICATION	1.8289191284266286E-6	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.999991961561587	WITHOUT_CLASSIFICATION	8.038438413093215E-6	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999999974151242	WITHOUT_CLASSIFICATION	2.5848757665648805E-9	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.999999856964246	WITHOUT_CLASSIFICATION	1.4303575396462022E-7	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999996661985621	WITHOUT_CLASSIFICATION	3.3380143795591306E-7	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999994148502527	WITHOUT_CLASSIFICATION	5.851497474115581E-7	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999994148502527	WITHOUT_CLASSIFICATION	5.851497474115581E-7	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9998431787056824	WITHOUT_CLASSIFICATION	1.5682129431771928E-4	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999992221626293	WITHOUT_CLASSIFICATION	7.778373708020907E-7	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999995930884528	WITHOUT_CLASSIFICATION	4.0691154721666715E-7	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999999991477679	WITHOUT_CLASSIFICATION	8.522321403341354E-10	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9983340121250616	WITHOUT_CLASSIFICATION	0.0016659878749384373	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999999275766248	WITHOUT_CLASSIFICATION	7.242337520208324E-8	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999999999396859	WITHOUT_CLASSIFICATION	6.031415017279673E-11	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999811241013628	WITHOUT_CLASSIFICATION	1.8875898637216352E-5	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999291863354	WITHOUT_CLASSIFICATION	7.081366456628613E-8	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999291863354	WITHOUT_CLASSIFICATION	7.081366456628613E-8	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999997937150903	WITHOUT_CLASSIFICATION	2.0628490962873272E-7	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999974519195854	WITHOUT_CLASSIFICATION	2.5480804145870393E-6	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999999982340936	WITHOUT_CLASSIFICATION	1.7659063046381165E-9	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9999999972595367	WITHOUT_CLASSIFICATION	2.7404633944058773E-9	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999999999195015	WITHOUT_CLASSIFICATION	8.049846288601578E-11	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999999735050342	WITHOUT_CLASSIFICATION	2.649496576984754E-8	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999998843111513	WITHOUT_CLASSIFICATION	1.1568884869556987E-7	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999999500280615	WITHOUT_CLASSIFICATION	4.9971938574169515E-8	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9999997523114114	WITHOUT_CLASSIFICATION	2.4768858866035073E-7	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.999999997581798	WITHOUT_CLASSIFICATION	2.4182019810904837E-9	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999903069416485	WITHOUT_CLASSIFICATION	9.693058351533681E-6	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999999282623646	WITHOUT_CLASSIFICATION	7.173763537929348E-8	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999993211029949	WITHOUT_CLASSIFICATION	6.788970050809389E-7	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999991514584312	WITHOUT_CLASSIFICATION	8.48541568822546E-7	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999991514584312	WITHOUT_CLASSIFICATION	8.48541568822546E-7	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999999629775158	WITHOUT_CLASSIFICATION	3.702248423202989E-8	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999998964393455	WITHOUT_CLASSIFICATION	1.0356065460033133E-7	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999999998446074	WITHOUT_CLASSIFICATION	1.5539262161278832E-10	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999989114074177	WITHOUT_CLASSIFICATION	1.0885925823712184E-6	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999999081686	WITHOUT_CLASSIFICATION	9.183145827317955E-11	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999999975359486	WITHOUT_CLASSIFICATION	2.46405136140245E-9	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999999994812468	WITHOUT_CLASSIFICATION	5.187531277465265E-10	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999993714417353	WITHOUT_CLASSIFICATION	6.285582646108067E-7	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999993782352802	WITHOUT_CLASSIFICATION	6.217647197616111E-7	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9999999099883129	WITHOUT_CLASSIFICATION	9.001168717575723E-8	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999989564469974	WITHOUT_CLASSIFICATION	1.0435530024689348E-6	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.99999992590548	WITHOUT_CLASSIFICATION	7.409451999214857E-8	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9998221310735995	WITHOUT_CLASSIFICATION	1.7786892640044371E-4	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999999988397007	WITHOUT_CLASSIFICATION	1.1602992678512746E-9	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999999990733851	WITHOUT_CLASSIFICATION	9.266148535528651E-10	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999999843549969	WITHOUT_CLASSIFICATION	1.564500312979172E-8	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999999695109929	WITHOUT_CLASSIFICATION	3.048900707927241E-8	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999998317139087	WITHOUT_CLASSIFICATION	1.6828609132475681E-7	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999999581590644	WITHOUT_CLASSIFICATION	4.184093556236095E-8	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999997796474496	WITHOUT_CLASSIFICATION	2.2035255053308855E-7	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9999985073324198	WITHOUT_CLASSIFICATION	1.4926675801660714E-6	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9999999932047442	WITHOUT_CLASSIFICATION	6.795255784504406E-9	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999962274070365	WITHOUT_CLASSIFICATION	3.7725929633823885E-6	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999998023449992	WITHOUT_CLASSIFICATION	1.9765500091336034E-7	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.5087519483615112	IMPLEMENTATION	0.49124805163848895	WITHOUT_CLASSIFICATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999966258444559	WITHOUT_CLASSIFICATION	3.3741555441398556E-6	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9999995364770338	WITHOUT_CLASSIFICATION	4.635229662767856E-7	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9999996239421796	WITHOUT_CLASSIFICATION	3.76057820404303E-7	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9999999487222615	WITHOUT_CLASSIFICATION	5.127773854336907E-8	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9993204252219362	WITHOUT_CLASSIFICATION	6.795747780638336E-4	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999998157993116	WITHOUT_CLASSIFICATION	1.842006884912361E-7	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9999941861660692	WITHOUT_CLASSIFICATION	5.8138339308102406E-6	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999998870615441	WITHOUT_CLASSIFICATION	1.1293845594804198E-7	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999496986358328	WITHOUT_CLASSIFICATION	5.0301364167141766E-5	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999857712446198	WITHOUT_CLASSIFICATION	1.4228755380201164E-5	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999999868354752	WITHOUT_CLASSIFICATION	1.3164524893707194E-8	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999976351548093	WITHOUT_CLASSIFICATION	2.3648451905629784E-6	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999995688257937	WITHOUT_CLASSIFICATION	4.311742062658132E-7	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999996650919327	WITHOUT_CLASSIFICATION	3.349080673666966E-7	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999989699661667	WITHOUT_CLASSIFICATION	1.0300338333910579E-6	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.99999994170882	WITHOUT_CLASSIFICATION	5.829117997162071E-8	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.99780642414682	WITHOUT_CLASSIFICATION	0.002193575853180027	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.999983935208199	WITHOUT_CLASSIFICATION	1.6064791801013387E-5	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.999999495431275	WITHOUT_CLASSIFICATION	5.045687249960175E-7	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9999997607462952	WITHOUT_CLASSIFICATION	2.392537048774269E-7	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999989847788651	WITHOUT_CLASSIFICATION	1.015221135028499E-6	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999183265607	WITHOUT_CLASSIFICATION	8.16734393161075E-8	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999983974196	WITHOUT_CLASSIFICATION	1.6025803382235317E-9	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999791990233462	WITHOUT_CLASSIFICATION	2.0800976653826704E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999777580401855	WITHOUT_CLASSIFICATION	2.2241959814565317E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999777580401855	WITHOUT_CLASSIFICATION	2.2241959814565317E-5	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999986805992167	WITHOUT_CLASSIFICATION	1.319400783261157E-6	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999999461434852	WITHOUT_CLASSIFICATION	5.3856514932351215E-8	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999999448849795	WITHOUT_CLASSIFICATION	5.5115020572292445E-8	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.999999846753663	WITHOUT_CLASSIFICATION	1.5324633700914488E-7	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999964494475829	WITHOUT_CLASSIFICATION	3.5505524171114285E-6	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999482278104006	WITHOUT_CLASSIFICATION	5.177218959949004E-5	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999999575336808	WITHOUT_CLASSIFICATION	4.246631927939777E-8	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999423596302	WITHOUT_CLASSIFICATION	5.76403697741736E-8	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999998860430587	WITHOUT_CLASSIFICATION	1.1395694141258729E-7	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999998516319752	WITHOUT_CLASSIFICATION	1.48368024748173E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999993752997967	WITHOUT_CLASSIFICATION	6.247002032891952E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999993752997967	WITHOUT_CLASSIFICATION	6.247002032891952E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999993752997967	WITHOUT_CLASSIFICATION	6.247002032891952E-7	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.997607680577728	WITHOUT_CLASSIFICATION	0.0023923194222719136	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999997904557231	WITHOUT_CLASSIFICATION	2.0954427695515438E-7	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9999995911864723	WITHOUT_CLASSIFICATION	4.0881352768241797E-7	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999996372862147	WITHOUT_CLASSIFICATION	3.6271378524145046E-7	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999996372862147	WITHOUT_CLASSIFICATION	3.6271378524145046E-7	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999949163752908	WITHOUT_CLASSIFICATION	5.083624709217759E-6	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999576787508289	WITHOUT_CLASSIFICATION	4.232124917120855E-5	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999999993685055	WITHOUT_CLASSIFICATION	6.314944913888314E-10	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.999999942081638	WITHOUT_CLASSIFICATION	5.791836202519894E-8	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999999699985724	WITHOUT_CLASSIFICATION	3.0001427531571744E-8	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9996855435587435	WITHOUT_CLASSIFICATION	3.1445644125643565E-4	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999999777728975	WITHOUT_CLASSIFICATION	2.2227102533521904E-8	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.999974450837675	WITHOUT_CLASSIFICATION	2.55491623249892E-5	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999999652683753	WITHOUT_CLASSIFICATION	3.473162470336434E-8	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999948230663904	WITHOUT_CLASSIFICATION	5.176933609590023E-6	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999948230663904	WITHOUT_CLASSIFICATION	5.176933609590023E-6	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999998586578671	WITHOUT_CLASSIFICATION	1.4134213288882825E-7	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999996685465314	WITHOUT_CLASSIFICATION	3.314534685316665E-7	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999999392907531	WITHOUT_CLASSIFICATION	6.07092467772516E-8	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999995889906704	WITHOUT_CLASSIFICATION	4.110093295058557E-7	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999996463156283	WITHOUT_CLASSIFICATION	3.5368437165358756E-7	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999975374975948	WITHOUT_CLASSIFICATION	2.4625024051866516E-6	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999985227498105	WITHOUT_CLASSIFICATION	1.4772501894564954E-6	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999958063980601	WITHOUT_CLASSIFICATION	4.193601939937026E-6	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.99999815822258	WITHOUT_CLASSIFICATION	1.8417774201139822E-6	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9999989036497428	WITHOUT_CLASSIFICATION	1.0963502572433012E-6	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999999414946443	WITHOUT_CLASSIFICATION	5.850535560918494E-8	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999997366943223	WITHOUT_CLASSIFICATION	2.633056776592044E-7	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9999998798794841	WITHOUT_CLASSIFICATION	1.2012051592150147E-7	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999999008985985	WITHOUT_CLASSIFICATION	9.910140157457237E-8	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999286731148149	WITHOUT_CLASSIFICATION	7.1326885185086E-5	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999999916770278	WITHOUT_CLASSIFICATION	8.322972161569836E-9	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999974401422361	WITHOUT_CLASSIFICATION	2.5598577639214952E-6	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999999914617	WITHOUT_CLASSIFICATION	8.538299899681208E-9	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999978881868663	WITHOUT_CLASSIFICATION	2.1118131336856926E-6	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999988638333012	WITHOUT_CLASSIFICATION	1.1361666988674783E-6	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999831075712747	WITHOUT_CLASSIFICATION	1.689242872530932E-5	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999686860253257	WITHOUT_CLASSIFICATION	3.131397467435343E-5	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999972103778084	WITHOUT_CLASSIFICATION	2.7896221914949595E-6	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999803000273466	WITHOUT_CLASSIFICATION	1.9699972653327298E-5	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999959519163264	WITHOUT_CLASSIFICATION	4.048083673542534E-6	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999983384138487	WITHOUT_CLASSIFICATION	1.6615861513908902E-6	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999997608485068	WITHOUT_CLASSIFICATION	2.391514931139912E-7	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999985635759973	WITHOUT_CLASSIFICATION	1.4364240027740038E-6	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999999764694112	WITHOUT_CLASSIFICATION	2.3530588811144203E-8	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999983279979359	WITHOUT_CLASSIFICATION	1.6720020641494826E-6	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999993239247658	WITHOUT_CLASSIFICATION	6.760752341959518E-7	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999813690044627	WITHOUT_CLASSIFICATION	1.863099553725827E-5	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999998549232665	WITHOUT_CLASSIFICATION	1.450767335356643E-7	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999993239247658	WITHOUT_CLASSIFICATION	6.760752341959518E-7	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999994090800107	WITHOUT_CLASSIFICATION	5.909199892300291E-7	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999996977532539	WITHOUT_CLASSIFICATION	3.022467460955228E-7	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999997265458693	WITHOUT_CLASSIFICATION	2.7345413066861245E-7	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999982464451529	WITHOUT_CLASSIFICATION	1.7535548470231103E-6	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999991008335518	WITHOUT_CLASSIFICATION	8.991664480767029E-7	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999993996933114	WITHOUT_CLASSIFICATION	6.003066884507678E-7	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999999573838689	WITHOUT_CLASSIFICATION	4.2616131046247583E-8	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999998118864759	WITHOUT_CLASSIFICATION	1.8811352409483037E-7	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.999998618323555	WITHOUT_CLASSIFICATION	1.3816764450585338E-6	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999904754455442	WITHOUT_CLASSIFICATION	9.524554455829862E-6	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999745641492983	WITHOUT_CLASSIFICATION	2.5435850701646838E-5	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999994844213314	WITHOUT_CLASSIFICATION	5.155786686355635E-7	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999929192923557	WITHOUT_CLASSIFICATION	7.08070764425647E-6	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999452802785286	WITHOUT_CLASSIFICATION	5.4719721471503344E-5	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999996882787731	WITHOUT_CLASSIFICATION	3.1172122689663757E-7	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999988469474783	WITHOUT_CLASSIFICATION	1.1530525216216162E-6	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999992472230348	WITHOUT_CLASSIFICATION	7.527769653335755E-7	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999982875064031	WITHOUT_CLASSIFICATION	1.7124935968864496E-6	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999982573979159	WITHOUT_CLASSIFICATION	1.7426020840557263E-6	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.999977836966606	WITHOUT_CLASSIFICATION	2.2163033394031665E-5	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999999290659085	WITHOUT_CLASSIFICATION	7.093409153066151E-8	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999992342942556	WITHOUT_CLASSIFICATION	7.657057444548879E-7	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999994403869523	WITHOUT_CLASSIFICATION	5.596130476801434E-7	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999999676480398	WITHOUT_CLASSIFICATION	3.235196025094017E-8	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.999999938559116	WITHOUT_CLASSIFICATION	6.144088410241792E-8	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999999973172852	WITHOUT_CLASSIFICATION	2.682714928434895E-9	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999991453369186	WITHOUT_CLASSIFICATION	8.546630814103137E-7	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999997734797488	WITHOUT_CLASSIFICATION	2.265202513178976E-7	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9999982041729459	WITHOUT_CLASSIFICATION	1.7958270540287078E-6	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9999901407193224	WITHOUT_CLASSIFICATION	9.859280677669806E-6	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9999998493429417	WITHOUT_CLASSIFICATION	1.506570582865033E-7	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9966856590573783	WITHOUT_CLASSIFICATION	0.003314340942621712	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9984733753759237	WITHOUT_CLASSIFICATION	0.0015266246240762012	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999999967753994	WITHOUT_CLASSIFICATION	3.224600528688497E-9	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999813333967813	WITHOUT_CLASSIFICATION	1.8666603218751737E-5	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9999999657413218	WITHOUT_CLASSIFICATION	3.425867823124373E-8	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9999996097594888	WITHOUT_CLASSIFICATION	3.902405111666976E-7	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9999977077826377	WITHOUT_CLASSIFICATION	2.292217362301754E-6	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999800598592303	WITHOUT_CLASSIFICATION	1.9940140769589143E-5	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9999998556387457	WITHOUT_CLASSIFICATION	1.4436125425398688E-7	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9999984265793992	WITHOUT_CLASSIFICATION	1.5734206008076188E-6	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999680672578586	WITHOUT_CLASSIFICATION	3.19327421413223E-5	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9999517086034619	WITHOUT_CLASSIFICATION	4.8291396538180054E-5	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9999659362539939	WITHOUT_CLASSIFICATION	3.4063746006170137E-5	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999968845311877	WITHOUT_CLASSIFICATION	3.1154688122760053E-6	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9999999739641698	WITHOUT_CLASSIFICATION	2.6035830107155644E-8	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9999960564425252	WITHOUT_CLASSIFICATION	3.943557474795207E-6	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999999797923715	WITHOUT_CLASSIFICATION	2.0207628508613545E-8	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999995091794572	WITHOUT_CLASSIFICATION	4.908205428029211E-7	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.9999998473798862	WITHOUT_CLASSIFICATION	1.5262011371352199E-7	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999998337713737	WITHOUT_CLASSIFICATION	1.662286263426562E-7	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999976158562041	WITHOUT_CLASSIFICATION	2.3841437960187815E-6	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999993086561675	WITHOUT_CLASSIFICATION	6.913438324016175E-7	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999995091794572	WITHOUT_CLASSIFICATION	4.908205428029211E-7	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9699616704199023	WITHOUT_CLASSIFICATION	0.030038329580097563	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9699616704199023	WITHOUT_CLASSIFICATION	0.030038329580097563	IMPLEMENTATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999988726982428	WITHOUT_CLASSIFICATION	1.1273017571475156E-6	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.999999480727189	WITHOUT_CLASSIFICATION	5.192728109612848E-7	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999998994867885	WITHOUT_CLASSIFICATION	1.0051321149303942E-7	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999997794673358	WITHOUT_CLASSIFICATION	2.2053266430292662E-7	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.999999297594652	WITHOUT_CLASSIFICATION	7.024053479369853E-7	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999918737107957	WITHOUT_CLASSIFICATION	8.126289204249504E-6	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999990483858132	WITHOUT_CLASSIFICATION	9.516141866928403E-7	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.8970578568128021	IMPLEMENTATION	0.10294214318719785	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.999999611838714	WITHOUT_CLASSIFICATION	3.8816128593949676E-7	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999734152622636	WITHOUT_CLASSIFICATION	2.6584737736360606E-5	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.999999999471198	WITHOUT_CLASSIFICATION	5.288019962933873E-10	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999590152302	WITHOUT_CLASSIFICATION	4.0984769786984825E-8	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999939022873593	WITHOUT_CLASSIFICATION	6.097712640687939E-6	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.999998746801524	WITHOUT_CLASSIFICATION	1.253198475984309E-6	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9982349083747591	WITHOUT_CLASSIFICATION	0.0017650916252408995	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9997332707088428	WITHOUT_CLASSIFICATION	2.667292911572073E-4	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999999964866886	WITHOUT_CLASSIFICATION	3.5133114616735787E-9	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999994569212733	WITHOUT_CLASSIFICATION	5.430787266914644E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999994569212733	WITHOUT_CLASSIFICATION	5.430787266914644E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999994569212733	WITHOUT_CLASSIFICATION	5.430787266914644E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999994569212733	WITHOUT_CLASSIFICATION	5.430787266914644E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999994569212733	WITHOUT_CLASSIFICATION	5.430787266914644E-6	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9999995202528471	WITHOUT_CLASSIFICATION	4.797471529169989E-7	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998202967785	WITHOUT_CLASSIFICATION	1.7970322159541221E-7	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999865224732986	WITHOUT_CLASSIFICATION	1.3477526701395843E-4	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999438229071	WITHOUT_CLASSIFICATION	5.617709291432633E-8	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999999719894311	WITHOUT_CLASSIFICATION	2.8010568856087643E-8	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999942140624	WITHOUT_CLASSIFICATION	5.785937572627179E-9	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999674284351827	WITHOUT_CLASSIFICATION	3.2571564817262226E-5	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999992261669965	WITHOUT_CLASSIFICATION	7.738330035424372E-7	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999993285069684	WITHOUT_CLASSIFICATION	6.714930316209842E-7	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9999978817038659	WITHOUT_CLASSIFICATION	2.1182961340431435E-6	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9999992953839744	WITHOUT_CLASSIFICATION	7.046160255352466E-7	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9999995939978124	WITHOUT_CLASSIFICATION	4.0600218758384446E-7	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.999998605750778	WITHOUT_CLASSIFICATION	1.3942492219619593E-6	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.999999123721063	WITHOUT_CLASSIFICATION	8.762789370728921E-7	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9999992398055063	WITHOUT_CLASSIFICATION	7.601944936614832E-7	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9999997228123502	WITHOUT_CLASSIFICATION	2.771876498419049E-7	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.999999218538026	WITHOUT_CLASSIFICATION	7.814619740559746E-7	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9999984490921333	WITHOUT_CLASSIFICATION	1.550907866727227E-6	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9999994629874972	WITHOUT_CLASSIFICATION	5.370125027929717E-7	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.999998652270955	WITHOUT_CLASSIFICATION	1.3477290450297392E-6	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9999993491255612	WITHOUT_CLASSIFICATION	6.508744387999511E-7	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9999994759802606	WITHOUT_CLASSIFICATION	5.240197393375469E-7	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999997733794016	WITHOUT_CLASSIFICATION	2.2662059838147283E-7	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.999999377529124	WITHOUT_CLASSIFICATION	6.224708759740583E-7	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.999999655158299	WITHOUT_CLASSIFICATION	3.4484170095543017E-7	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9999996414375185	WITHOUT_CLASSIFICATION	3.585624814765653E-7	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.999998353453519	WITHOUT_CLASSIFICATION	1.646546481156919E-6	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9999988800047784	WITHOUT_CLASSIFICATION	1.1199952214786278E-6	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999991022203755	WITHOUT_CLASSIFICATION	8.977796246282995E-7	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999997482644144	WITHOUT_CLASSIFICATION	2.5173558561786456E-7	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999994096796737	WITHOUT_CLASSIFICATION	5.90320326197428E-7	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9999994611497378	WITHOUT_CLASSIFICATION	5.388502622116087E-7	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9999994232625743	WITHOUT_CLASSIFICATION	5.767374257080592E-7	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9999992567792382	WITHOUT_CLASSIFICATION	7.432207618686692E-7	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9999997205867918	WITHOUT_CLASSIFICATION	2.794132082914945E-7	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9999994725773692	WITHOUT_CLASSIFICATION	5.274226307484102E-7	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9999992791094868	WITHOUT_CLASSIFICATION	7.208905132052065E-7	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9999993834381493	WITHOUT_CLASSIFICATION	6.165618508080122E-7	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.99999972467044	WITHOUT_CLASSIFICATION	2.7532956010422784E-7	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9999994172014364	WITHOUT_CLASSIFICATION	5.827985636547211E-7	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9999990885154759	WITHOUT_CLASSIFICATION	9.114845240358138E-7	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999990462214355	WITHOUT_CLASSIFICATION	9.537785644768538E-7	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.999999676548714	WITHOUT_CLASSIFICATION	3.234512859888954E-7	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9999991196291785	WITHOUT_CLASSIFICATION	8.80370821534963E-7	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9999988656795494	WITHOUT_CLASSIFICATION	1.134320450633122E-6	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9999995632982267	WITHOUT_CLASSIFICATION	4.367017732419213E-7	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9999996538948283	WITHOUT_CLASSIFICATION	3.4610517170981845E-7	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.999999628932053	WITHOUT_CLASSIFICATION	3.710679469778861E-7	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9999989295116649	WITHOUT_CLASSIFICATION	1.0704883351077124E-6	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9999994293503379	WITHOUT_CLASSIFICATION	5.706496621143137E-7	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999865224732986	WITHOUT_CLASSIFICATION	1.3477526701395843E-4	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999995656384417	WITHOUT_CLASSIFICATION	4.343615582939326E-7	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999996451772178	WITHOUT_CLASSIFICATION	3.5482278221233854E-7	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999994840941215	WITHOUT_CLASSIFICATION	5.159058785588068E-7	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999993351706518	WITHOUT_CLASSIFICATION	6.648293482554652E-7	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9999992762442664	WITHOUT_CLASSIFICATION	7.237557336212743E-7	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9999992948106531	WITHOUT_CLASSIFICATION	7.051893469602847E-7	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9999994369680455	WITHOUT_CLASSIFICATION	5.630319545824955E-7	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999992760301906	WITHOUT_CLASSIFICATION	7.23969809333819E-7	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9999992860396861	WITHOUT_CLASSIFICATION	7.139603137963681E-7	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9999994115931825	WITHOUT_CLASSIFICATION	5.88406817425127E-7	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9999992908183772	WITHOUT_CLASSIFICATION	7.091816228012631E-7	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.9999992489868865	WITHOUT_CLASSIFICATION	7.510131134578644E-7	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.9999992920773917	WITHOUT_CLASSIFICATION	7.079226082563878E-7	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9999994460012552	WITHOUT_CLASSIFICATION	5.539987448295096E-7	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9999995343876983	WITHOUT_CLASSIFICATION	4.656123017087195E-7	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999995395872553	WITHOUT_CLASSIFICATION	4.604127447107639E-7	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9999989571159533	WITHOUT_CLASSIFICATION	1.042884046708127E-6	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9999986578812097	WITHOUT_CLASSIFICATION	1.3421187903900055E-6	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9999994264687726	WITHOUT_CLASSIFICATION	5.735312273159095E-7	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.999999170887571	WITHOUT_CLASSIFICATION	8.291124290368055E-7	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9999993822867306	WITHOUT_CLASSIFICATION	6.177132695235664E-7	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.999999210766082	WITHOUT_CLASSIFICATION	7.892339178968127E-7	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9999992421272776	WITHOUT_CLASSIFICATION	7.578727222979563E-7	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.999999511327213	WITHOUT_CLASSIFICATION	4.88672787084849E-7	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9999992914457497	WITHOUT_CLASSIFICATION	7.085542502303412E-7	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9999996808110831	WITHOUT_CLASSIFICATION	3.1918891684506865E-7	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999996909597649	WITHOUT_CLASSIFICATION	3.090402349808929E-7	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999991519255791	WITHOUT_CLASSIFICATION	8.480744208941479E-7	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9999991980740233	WITHOUT_CLASSIFICATION	8.019259767512743E-7	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9999989801315906	WITHOUT_CLASSIFICATION	1.0198684094719058E-6	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9999997587649284	WITHOUT_CLASSIFICATION	2.412350715936541E-7	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9999994343328981	WITHOUT_CLASSIFICATION	5.65667101880598E-7	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9999994517694802	WITHOUT_CLASSIFICATION	5.482305196722015E-7	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999997613171342	WITHOUT_CLASSIFICATION	2.386828658274741E-7	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9999995378285335	WITHOUT_CLASSIFICATION	4.621714665302999E-7	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9999993270926874	WITHOUT_CLASSIFICATION	6.729073126998477E-7	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.999998389750883	WITHOUT_CLASSIFICATION	1.6102491170717755E-6	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9999994640974582	WITHOUT_CLASSIFICATION	5.359025417937936E-7	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9999993774957422	WITHOUT_CLASSIFICATION	6.225042577814148E-7	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9999995975609633	WITHOUT_CLASSIFICATION	4.0243903670097556E-7	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9999994494011136	WITHOUT_CLASSIFICATION	5.505988863978604E-7	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9999993018056048	WITHOUT_CLASSIFICATION	6.981943952190268E-7	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999996832738676	WITHOUT_CLASSIFICATION	3.167261323349782E-7	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9999993808943581	WITHOUT_CLASSIFICATION	6.191056419047481E-7	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999996133068189	WITHOUT_CLASSIFICATION	3.866931811745201E-7	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999991424719574	WITHOUT_CLASSIFICATION	8.575280426573456E-7	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999980393688062	WITHOUT_CLASSIFICATION	1.9606311938540353E-6	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999993791027264	WITHOUT_CLASSIFICATION	6.208972735246364E-7	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9999992853056443	WITHOUT_CLASSIFICATION	7.146943557092455E-7	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9999994046674026	WITHOUT_CLASSIFICATION	5.953325974100661E-7	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9999991879592406	WITHOUT_CLASSIFICATION	8.120407593121582E-7	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9999992324314527	WITHOUT_CLASSIFICATION	7.675685473258553E-7	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.999998463490177	WITHOUT_CLASSIFICATION	1.5365098230865513E-6	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9999977390011864	WITHOUT_CLASSIFICATION	2.260998813614646E-6	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9999976043437375	WITHOUT_CLASSIFICATION	2.395656262459347E-6	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9999992109283579	WITHOUT_CLASSIFICATION	7.890716420828254E-7	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9999995871576915	WITHOUT_CLASSIFICATION	4.128423083759288E-7	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9999991297543094	WITHOUT_CLASSIFICATION	8.702456905822838E-7	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9999991222272135	WITHOUT_CLASSIFICATION	8.777727865032274E-7	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999991413135477	WITHOUT_CLASSIFICATION	8.586864523445305E-7	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999995419180386	WITHOUT_CLASSIFICATION	4.5808196136665494E-7	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999989851395326	WITHOUT_CLASSIFICATION	1.0148604674372692E-6	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9999995808278616	WITHOUT_CLASSIFICATION	4.1917213840668454E-7	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9999990567930586	WITHOUT_CLASSIFICATION	9.432069414210295E-7	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9999968692425306	WITHOUT_CLASSIFICATION	3.1307574694285965E-6	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9999988902359386	WITHOUT_CLASSIFICATION	1.1097640614440032E-6	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9999976268775037	WITHOUT_CLASSIFICATION	2.373122496343924E-6	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9999991002528157	WITHOUT_CLASSIFICATION	8.997471842111517E-7	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9999991202303748	WITHOUT_CLASSIFICATION	8.797696252828866E-7	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9999991373504701	WITHOUT_CLASSIFICATION	8.626495299592729E-7	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999991571157757	WITHOUT_CLASSIFICATION	8.428842243474887E-7	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999989060426335	WITHOUT_CLASSIFICATION	1.0939573664834413E-6	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999989157399423	WITHOUT_CLASSIFICATION	1.0842600577642634E-6	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9999995370050038	WITHOUT_CLASSIFICATION	4.629949963130646E-7	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9999995696635792	WITHOUT_CLASSIFICATION	4.3033642082413856E-7	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9999987832082786	WITHOUT_CLASSIFICATION	1.2167917214567952E-6	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.999999709862376	WITHOUT_CLASSIFICATION	2.901376239929538E-7	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9999994924449636	WITHOUT_CLASSIFICATION	5.075550364370374E-7	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9999993196945934	WITHOUT_CLASSIFICATION	6.803054065610054E-7	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999997037293039	WITHOUT_CLASSIFICATION	2.9627069606133993E-7	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9999993203624791	WITHOUT_CLASSIFICATION	6.796375209537961E-7	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9999995687233886	WITHOUT_CLASSIFICATION	4.312766114782968E-7	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999992279111168	WITHOUT_CLASSIFICATION	7.720888831281143E-7	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9999989961096323	WITHOUT_CLASSIFICATION	1.0038903677152631E-6	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9999992563843921	WITHOUT_CLASSIFICATION	7.436156079081625E-7	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999995031902497	WITHOUT_CLASSIFICATION	4.968097503440747E-7	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9999992217886984	WITHOUT_CLASSIFICATION	7.782113015200752E-7	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9999992796475101	WITHOUT_CLASSIFICATION	7.203524897984875E-7	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999996896225541	WITHOUT_CLASSIFICATION	3.103774457816605E-7	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9999991457406795	WITHOUT_CLASSIFICATION	8.542593205391967E-7	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999994293409367	WITHOUT_CLASSIFICATION	5.706590633904378E-7	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9999990466561169	WITHOUT_CLASSIFICATION	9.53343883012551E-7	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9999989203375049	WITHOUT_CLASSIFICATION	1.0796624950341371E-6	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9999991260137577	WITHOUT_CLASSIFICATION	8.739862422310364E-7	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.9999987091201636	WITHOUT_CLASSIFICATION	1.2908798363957977E-6	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999992254293504	WITHOUT_CLASSIFICATION	7.745706496353108E-7	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9999989109958795	WITHOUT_CLASSIFICATION	1.0890041205977467E-6	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9999992193668403	WITHOUT_CLASSIFICATION	7.806331596384622E-7	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9999991946955895	WITHOUT_CLASSIFICATION	8.053044105820732E-7	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9999996377409095	WITHOUT_CLASSIFICATION	3.6225909039418827E-7	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9999992935543716	WITHOUT_CLASSIFICATION	7.064456284725408E-7	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9999991434423917	WITHOUT_CLASSIFICATION	8.565576082280913E-7	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.999998790176286	WITHOUT_CLASSIFICATION	1.209823713959033E-6	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9999985178339366	WITHOUT_CLASSIFICATION	1.482166063418357E-6	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9999989203067109	WITHOUT_CLASSIFICATION	1.0796932891332888E-6	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9999995906806077	WITHOUT_CLASSIFICATION	4.093193923592652E-7	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.999999463520497	WITHOUT_CLASSIFICATION	5.364795029914028E-7	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9999993000375996	WITHOUT_CLASSIFICATION	6.999624004333614E-7	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9999993155603164	WITHOUT_CLASSIFICATION	6.844396835502754E-7	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9999994163377111	WITHOUT_CLASSIFICATION	5.836622890226082E-7	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9999987050578616	WITHOUT_CLASSIFICATION	1.2949421383565177E-6	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999991263555239	WITHOUT_CLASSIFICATION	8.736444760376159E-7	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9999995001341458	WITHOUT_CLASSIFICATION	4.998658541711632E-7	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9999994040563358	WITHOUT_CLASSIFICATION	5.959436641389537E-7	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9999994630391439	WITHOUT_CLASSIFICATION	5.36960856060419E-7	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999969084809278	WITHOUT_CLASSIFICATION	3.091519072097677E-6	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.9999986472709053	WITHOUT_CLASSIFICATION	1.3527290947663809E-6	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9999984665925002	WITHOUT_CLASSIFICATION	1.5334074997861165E-6	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9999982769328503	WITHOUT_CLASSIFICATION	1.7230671497111572E-6	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999993579501163	WITHOUT_CLASSIFICATION	6.420498837771289E-7	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999986466182144	WITHOUT_CLASSIFICATION	1.353381785611987E-6	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9999988474507386	WITHOUT_CLASSIFICATION	1.1525492613462652E-6	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9999988840219948	WITHOUT_CLASSIFICATION	1.1159780052409844E-6	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999991394167637	WITHOUT_CLASSIFICATION	8.605832363423848E-7	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9999974452306538	WITHOUT_CLASSIFICATION	2.5547693462257763E-6	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9999986717495506	WITHOUT_CLASSIFICATION	1.3282504493521643E-6	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999981395934443	WITHOUT_CLASSIFICATION	1.860406555712792E-6	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9999984364816545	WITHOUT_CLASSIFICATION	1.5635183454063707E-6	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9999988532407	WITHOUT_CLASSIFICATION	1.146759299893675E-6	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9999983877734939	WITHOUT_CLASSIFICATION	1.6122265060727195E-6	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9999975972579475	WITHOUT_CLASSIFICATION	2.402742052513777E-6	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9999971763665283	WITHOUT_CLASSIFICATION	2.8236334716042893E-6	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9999986605257357	WITHOUT_CLASSIFICATION	1.3394742642910014E-6	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999993998028	WITHOUT_CLASSIFICATION	6.001972000684268E-7	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999995242328372	WITHOUT_CLASSIFICATION	4.7576716271460475E-7	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999995089279341	WITHOUT_CLASSIFICATION	4.910720659061881E-7	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9999987256924721	WITHOUT_CLASSIFICATION	1.2743075279538905E-6	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9999991590468224	WITHOUT_CLASSIFICATION	8.409531775040195E-7	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9999989681389866	WITHOUT_CLASSIFICATION	1.031861013428499E-6	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.9999989471087962	WITHOUT_CLASSIFICATION	1.0528912038039375E-6	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999988912121976	WITHOUT_CLASSIFICATION	1.1087878023525411E-6	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999978938679353	WITHOUT_CLASSIFICATION	2.10613206471875E-6	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9999988741371946	WITHOUT_CLASSIFICATION	1.125862805444363E-6	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9999985723346001	WITHOUT_CLASSIFICATION	1.4276653998912354E-6	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9999990294704749	WITHOUT_CLASSIFICATION	9.705295250700993E-7	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9999985849705852	WITHOUT_CLASSIFICATION	1.4150294148265995E-6	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9999992484968069	WITHOUT_CLASSIFICATION	7.515031931915003E-7	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9999985845166068	WITHOUT_CLASSIFICATION	1.4154833930757864E-6	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9999985970640567	WITHOUT_CLASSIFICATION	1.4029359433343258E-6	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9999995197262898	WITHOUT_CLASSIFICATION	4.802737102442141E-7	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9999989033359424	WITHOUT_CLASSIFICATION	1.0966640575903868E-6	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9999983051248046	WITHOUT_CLASSIFICATION	1.694875195499161E-6	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9999985069787938	WITHOUT_CLASSIFICATION	1.493021206284905E-6	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999994319712885	WITHOUT_CLASSIFICATION	5.680287114065567E-7	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9999983536940393	WITHOUT_CLASSIFICATION	1.6463059607226142E-6	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9999985558628005	WITHOUT_CLASSIFICATION	1.4441371995019727E-6	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999981212334489	WITHOUT_CLASSIFICATION	1.8787665511730575E-6	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.999999386800318	WITHOUT_CLASSIFICATION	6.131996820971225E-7	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9999982487431741	WITHOUT_CLASSIFICATION	1.751256825882668E-6	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9999988038760175	WITHOUT_CLASSIFICATION	1.1961239824830966E-6	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9999962096026146	WITHOUT_CLASSIFICATION	3.7903973855410773E-6	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999982366127571	WITHOUT_CLASSIFICATION	1.7633872429551377E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999992646082981	WITHOUT_CLASSIFICATION	7.353917017874282E-7	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9999982287452261	WITHOUT_CLASSIFICATION	1.771254773780684E-6	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9999972134508248	WITHOUT_CLASSIFICATION	2.786549175120544E-6	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.999998543248757	WITHOUT_CLASSIFICATION	1.45675124300422E-6	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9999989277175044	WITHOUT_CLASSIFICATION	1.072282495674735E-6	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9999984408230514	WITHOUT_CLASSIFICATION	1.5591769485570585E-6	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9999987310053942	WITHOUT_CLASSIFICATION	1.2689946058936006E-6	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999982558150532	WITHOUT_CLASSIFICATION	1.744184946705837E-6	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999991134875245	WITHOUT_CLASSIFICATION	8.865124754593004E-7	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9999982170680929	WITHOUT_CLASSIFICATION	1.782931907063278E-6	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999992558908558	WITHOUT_CLASSIFICATION	7.441091441471965E-7	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9999983477194447	WITHOUT_CLASSIFICATION	1.652280555325678E-6	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9999986370823863	WITHOUT_CLASSIFICATION	1.3629176136307873E-6	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9999977458844276	WITHOUT_CLASSIFICATION	2.254115572466561E-6	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9999975094410161	WITHOUT_CLASSIFICATION	2.4905589839651876E-6	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999979934232418	WITHOUT_CLASSIFICATION	2.006576758173663E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999994350248776	WITHOUT_CLASSIFICATION	5.649751224152898E-7	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9999993813556618	WITHOUT_CLASSIFICATION	6.186443381775128E-7	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999985988714843	WITHOUT_CLASSIFICATION	1.4011285156228996E-6	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9999981813836678	WITHOUT_CLASSIFICATION	1.8186163321703184E-6	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9999986281605857	WITHOUT_CLASSIFICATION	1.3718394142230917E-6	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9999989971996771	WITHOUT_CLASSIFICATION	1.0028003228903122E-6	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9999986285278833	WITHOUT_CLASSIFICATION	1.371472116680179E-6	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9999981149636745	WITHOUT_CLASSIFICATION	1.8850363254786538E-6	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.9999980610214441	WITHOUT_CLASSIFICATION	1.938978555984387E-6	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9999976477770877	WITHOUT_CLASSIFICATION	2.352222912447188E-6	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9999974624999975	WITHOUT_CLASSIFICATION	2.5375000024467697E-6	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9999986814176105	WITHOUT_CLASSIFICATION	1.3185823894914821E-6	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9999984584383902	WITHOUT_CLASSIFICATION	1.5415616097779845E-6	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9999980437611683	WITHOUT_CLASSIFICATION	1.9562388316973202E-6	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999981218887929	WITHOUT_CLASSIFICATION	1.8781112071569355E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.99999780891121	WITHOUT_CLASSIFICATION	2.191088789943563E-6	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9999989428653521	WITHOUT_CLASSIFICATION	1.0571346478914448E-6	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9999983900955854	WITHOUT_CLASSIFICATION	1.6099044146051065E-6	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9999987136807739	WITHOUT_CLASSIFICATION	1.28631922608009E-6	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9999982903551977	WITHOUT_CLASSIFICATION	1.709644802239407E-6	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999983327468754	WITHOUT_CLASSIFICATION	1.6672531245472903E-6	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999992468234254	WITHOUT_CLASSIFICATION	7.53176574563604E-7	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9999978766363224	WITHOUT_CLASSIFICATION	2.1233636775705687E-6	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9999963992669696	WITHOUT_CLASSIFICATION	3.6007330303646696E-6	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9999980522865647	WITHOUT_CLASSIFICATION	1.947713435429059E-6	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9999979944427826	WITHOUT_CLASSIFICATION	2.005557217454992E-6	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.999998059543701	WITHOUT_CLASSIFICATION	1.9404562989737605E-6	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9999976461564201	WITHOUT_CLASSIFICATION	2.3538435799658806E-6	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9999960930486691	WITHOUT_CLASSIFICATION	3.9069513308815016E-6	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9999992085448008	WITHOUT_CLASSIFICATION	7.914551990986279E-7	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9999981849682601	WITHOUT_CLASSIFICATION	1.815031739949796E-6	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.9999976961763166	WITHOUT_CLASSIFICATION	2.3038236833011997E-6	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9999980524258701	WITHOUT_CLASSIFICATION	1.9475741298752238E-6	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999992320753168	WITHOUT_CLASSIFICATION	7.679246832264983E-7	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999987911826174	WITHOUT_CLASSIFICATION	1.2088173826691888E-6	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.999998852516309	WITHOUT_CLASSIFICATION	1.1474836909502606E-6	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9999987393620245	WITHOUT_CLASSIFICATION	1.2606379755314755E-6	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999993371235205	WITHOUT_CLASSIFICATION	6.628764794104855E-7	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9999986799715351	WITHOUT_CLASSIFICATION	1.3200284649125708E-6	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999985238572353	WITHOUT_CLASSIFICATION	1.4761427646523903E-6	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9999985539704465	WITHOUT_CLASSIFICATION	1.446029553596007E-6	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9999983781800357	WITHOUT_CLASSIFICATION	1.6218199642865426E-6	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999992642836617	WITHOUT_CLASSIFICATION	7.357163382684156E-7	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.999998561893361	WITHOUT_CLASSIFICATION	1.4381066390256912E-6	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9999981677733417	WITHOUT_CLASSIFICATION	1.832226658328545E-6	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9999974419177627	WITHOUT_CLASSIFICATION	2.558082237140441E-6	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.999996597474169	WITHOUT_CLASSIFICATION	3.4025258309280715E-6	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999962424101531	WITHOUT_CLASSIFICATION	3.7575898469203136E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999983291682759	WITHOUT_CLASSIFICATION	1.6708317240772871E-6	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999996074833191	WITHOUT_CLASSIFICATION	3.925166809446754E-7	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9999881779636753	WITHOUT_CLASSIFICATION	1.1822036324688012E-5	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999965779038773	WITHOUT_CLASSIFICATION	3.4220961227030513E-6	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999977399075308	WITHOUT_CLASSIFICATION	2.260092469135173E-6	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999912055095731	WITHOUT_CLASSIFICATION	8.794490426923324E-6	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999415563582779	WITHOUT_CLASSIFICATION	5.844364172211991E-5	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9967927296098499	WITHOUT_CLASSIFICATION	0.003207270390150228	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9978708265091929	WITHOUT_CLASSIFICATION	0.0021291734908069817	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999581234977074	WITHOUT_CLASSIFICATION	4.187650229265482E-5	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9998813315459485	WITHOUT_CLASSIFICATION	1.1866845405152985E-4	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9997228205843001	WITHOUT_CLASSIFICATION	2.771794157000099E-4	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9999994607588132	WITHOUT_CLASSIFICATION	5.39241186736627E-7	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.99999854441731	WITHOUT_CLASSIFICATION	1.4555826900767276E-6	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9999939709235536	WITHOUT_CLASSIFICATION	6.02907644648169E-6	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.999995423797229	WITHOUT_CLASSIFICATION	4.576202771006478E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9964629383948128	WITHOUT_CLASSIFICATION	0.003537061605187224	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999068605321566	WITHOUT_CLASSIFICATION	9.313946784343457E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9991040648830907	WITHOUT_CLASSIFICATION	8.959351169092305E-4	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999731834517	WITHOUT_CLASSIFICATION	2.681654822414746E-8	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999938630850833	WITHOUT_CLASSIFICATION	6.13691491670717E-6	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.999990758018803	WITHOUT_CLASSIFICATION	9.241981197017719E-6	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999996838441628	WITHOUT_CLASSIFICATION	3.1615583714271016E-7	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999999954594576	WITHOUT_CLASSIFICATION	4.540542384551768E-9	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999871139226	WITHOUT_CLASSIFICATION	1.2886077375136225E-8	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999871139226	WITHOUT_CLASSIFICATION	1.2886077375136225E-8	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999995956455078	WITHOUT_CLASSIFICATION	4.0435449229636516E-7	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999902862022595	WITHOUT_CLASSIFICATION	9.713797740483682E-6	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999999541075153	WITHOUT_CLASSIFICATION	4.589248457630432E-8	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999997247055971	WITHOUT_CLASSIFICATION	2.7529440294295975E-7	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999997793566915	WITHOUT_CLASSIFICATION	2.2064330841098523E-7	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999999879554377	WITHOUT_CLASSIFICATION	1.2044562363025067E-8	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999987269787535	WITHOUT_CLASSIFICATION	1.2730212465592257E-6	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999996955644722	WITHOUT_CLASSIFICATION	3.044355278306274E-7	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999189332747838	WITHOUT_CLASSIFICATION	8.10667252161606E-5	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999270557703248	WITHOUT_CLASSIFICATION	7.29442296751724E-5	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.999998241915048	WITHOUT_CLASSIFICATION	1.7580849518975147E-6	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999732714478891	WITHOUT_CLASSIFICATION	2.6728552111022125E-5	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999845730993885	WITHOUT_CLASSIFICATION	1.5426900611517808E-5	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999976308514613	WITHOUT_CLASSIFICATION	2.3691485386885853E-6	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999978677617334	WITHOUT_CLASSIFICATION	2.1322382665302644E-6	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999941201783565	WITHOUT_CLASSIFICATION	5.879821643503102E-6	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999982619463716	WITHOUT_CLASSIFICATION	1.73805362830978E-6	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999979431279703	WITHOUT_CLASSIFICATION	2.0568720297104563E-6	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999995936927395	WITHOUT_CLASSIFICATION	4.0630726047211896E-7	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9977522525480359	WITHOUT_CLASSIFICATION	0.0022477474519640435	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999467929791	WITHOUT_CLASSIFICATION	5.3207020877110274E-8	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9999922606205078	WITHOUT_CLASSIFICATION	7.739379492179512E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999117073994302	WITHOUT_CLASSIFICATION	8.829260056973805E-5	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999992957939339	WITHOUT_CLASSIFICATION	7.042060660620014E-7	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999117073994302	WITHOUT_CLASSIFICATION	8.829260056973805E-5	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.999998462400489	WITHOUT_CLASSIFICATION	1.5375995111527727E-6	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.99999979481317	WITHOUT_CLASSIFICATION	2.0518682995668047E-7	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9983563692577924	WITHOUT_CLASSIFICATION	0.0016436307422077133	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999839317995659	WITHOUT_CLASSIFICATION	1.6068200434102827E-5	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999999799199061	WITHOUT_CLASSIFICATION	2.0080093818313076E-8	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.999999278658353	WITHOUT_CLASSIFICATION	7.21341646954021E-7	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.999999278658353	WITHOUT_CLASSIFICATION	7.21341646954021E-7	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.999999278658353	WITHOUT_CLASSIFICATION	7.21341646954021E-7	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999995183728143	WITHOUT_CLASSIFICATION	4.816271856034186E-7	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999769901895402	WITHOUT_CLASSIFICATION	2.300981045974837E-5	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999998125986342	WITHOUT_CLASSIFICATION	1.874013657975817E-7	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999978401333589	WITHOUT_CLASSIFICATION	2.1598666411080288E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999978401333589	WITHOUT_CLASSIFICATION	2.1598666411080288E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999978401333589	WITHOUT_CLASSIFICATION	2.1598666411080288E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999978401333589	WITHOUT_CLASSIFICATION	2.1598666411080288E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999978401333589	WITHOUT_CLASSIFICATION	2.1598666411080288E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999978401333589	WITHOUT_CLASSIFICATION	2.1598666411080288E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999952930014494	WITHOUT_CLASSIFICATION	4.70699855055844E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999952930014494	WITHOUT_CLASSIFICATION	4.70699855055844E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999952930014494	WITHOUT_CLASSIFICATION	4.70699855055844E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999952930014494	WITHOUT_CLASSIFICATION	4.70699855055844E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999952930014494	WITHOUT_CLASSIFICATION	4.70699855055844E-6	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999622062451989	WITHOUT_CLASSIFICATION	3.779375480106882E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999622062451989	WITHOUT_CLASSIFICATION	3.779375480106882E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999622062451989	WITHOUT_CLASSIFICATION	3.779375480106882E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999622062451989	WITHOUT_CLASSIFICATION	3.779375480106882E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999622062451989	WITHOUT_CLASSIFICATION	3.779375480106882E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998909834524525	WITHOUT_CLASSIFICATION	1.0901654754743129E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998909834524525	WITHOUT_CLASSIFICATION	1.0901654754743129E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998909834524525	WITHOUT_CLASSIFICATION	1.0901654754743129E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998909834524525	WITHOUT_CLASSIFICATION	1.0901654754743129E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998909834524525	WITHOUT_CLASSIFICATION	1.0901654754743129E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998909834524525	WITHOUT_CLASSIFICATION	1.0901654754743129E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999123259821444	WITHOUT_CLASSIFICATION	8.767401785560456E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999123259821444	WITHOUT_CLASSIFICATION	8.767401785560456E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999123259821444	WITHOUT_CLASSIFICATION	8.767401785560456E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999123259821444	WITHOUT_CLASSIFICATION	8.767401785560456E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999123259821444	WITHOUT_CLASSIFICATION	8.767401785560456E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998437573030936	WITHOUT_CLASSIFICATION	1.5624269690639315E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998437573030936	WITHOUT_CLASSIFICATION	1.5624269690639315E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998437573030936	WITHOUT_CLASSIFICATION	1.5624269690639315E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998437573030936	WITHOUT_CLASSIFICATION	1.5624269690639315E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998437573030936	WITHOUT_CLASSIFICATION	1.5624269690639315E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999865224732986	WITHOUT_CLASSIFICATION	1.3477526701395843E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999865224732986	WITHOUT_CLASSIFICATION	1.3477526701395843E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999865224732986	WITHOUT_CLASSIFICATION	1.3477526701395843E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999865224732986	WITHOUT_CLASSIFICATION	1.3477526701395843E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999865224732986	WITHOUT_CLASSIFICATION	1.3477526701395843E-4	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999438229071	WITHOUT_CLASSIFICATION	5.617709291432633E-8	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999942140624	WITHOUT_CLASSIFICATION	5.785937572627179E-9	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999674284351827	WITHOUT_CLASSIFICATION	3.2571564817262226E-5	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999992261669965	WITHOUT_CLASSIFICATION	7.738330035424372E-7	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999993285069684	WITHOUT_CLASSIFICATION	6.714930316209842E-7	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999986421479471	WITHOUT_CLASSIFICATION	1.3578520529585432E-6	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.999998652270955	WITHOUT_CLASSIFICATION	1.3477290450297392E-6	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.999999655158299	WITHOUT_CLASSIFICATION	3.4484170095543017E-7	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999991022203755	WITHOUT_CLASSIFICATION	8.977796246282995E-7	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999997482644144	WITHOUT_CLASSIFICATION	2.5173558561786456E-7	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999995596009505	WITHOUT_CLASSIFICATION	4.4039904946447183E-7	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999994096796737	WITHOUT_CLASSIFICATION	5.90320326197428E-7	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9999993199491662	WITHOUT_CLASSIFICATION	6.800508336661982E-7	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9999990084573994	WITHOUT_CLASSIFICATION	9.915426005336158E-7	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9999990080723068	WITHOUT_CLASSIFICATION	9.919276932314329E-7	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9999995527564534	WITHOUT_CLASSIFICATION	4.4724354667375497E-7	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9999995981721771	WITHOUT_CLASSIFICATION	4.0182782284240675E-7	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9999982517541449	WITHOUT_CLASSIFICATION	1.7482458551869847E-6	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9999993697006072	WITHOUT_CLASSIFICATION	6.302993928053814E-7	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9999993641296803	WITHOUT_CLASSIFICATION	6.358703197199741E-7	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.999999751673292	WITHOUT_CLASSIFICATION	2.48326707995856E-7	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9999995055193474	WITHOUT_CLASSIFICATION	4.944806525906306E-7	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9999993017350713	WITHOUT_CLASSIFICATION	6.982649286679529E-7	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9999995353844255	WITHOUT_CLASSIFICATION	4.6461557445242743E-7	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9999992068582466	WITHOUT_CLASSIFICATION	7.931417535045511E-7	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9999994802941721	WITHOUT_CLASSIFICATION	5.197058278550071E-7	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9999992302352996	WITHOUT_CLASSIFICATION	7.697647004783385E-7	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9999997267266704	WITHOUT_CLASSIFICATION	2.7327332966913037E-7	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9999994885422563	WITHOUT_CLASSIFICATION	5.114577437637644E-7	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9999994278761867	WITHOUT_CLASSIFICATION	5.72123813413017E-7	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9999997446967724	WITHOUT_CLASSIFICATION	2.553032275622935E-7	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9999994143326746	WITHOUT_CLASSIFICATION	5.856673254576882E-7	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9999993461238748	WITHOUT_CLASSIFICATION	6.538761253267198E-7	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9999990766499485	WITHOUT_CLASSIFICATION	9.233500514617517E-7	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.999999383305556	WITHOUT_CLASSIFICATION	6.166944439473209E-7	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9999993713787778	WITHOUT_CLASSIFICATION	6.286212221497457E-7	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9999992519264166	WITHOUT_CLASSIFICATION	7.480735833285228E-7	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9999992622691671	WITHOUT_CLASSIFICATION	7.37730832954841E-7	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.9999992719699646	WITHOUT_CLASSIFICATION	7.280300354057196E-7	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9999973868100438	WITHOUT_CLASSIFICATION	2.6131899562514513E-6	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9999990787791221	WITHOUT_CLASSIFICATION	9.212208779823678E-7	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9999992858353511	WITHOUT_CLASSIFICATION	7.141646487284903E-7	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9999993948803857	WITHOUT_CLASSIFICATION	6.051196142454355E-7	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9999996158683647	WITHOUT_CLASSIFICATION	3.8413163530846144E-7	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9999994760459113	WITHOUT_CLASSIFICATION	5.239540887333064E-7	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9999995047350327	WITHOUT_CLASSIFICATION	4.952649671701004E-7	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9999995658796419	WITHOUT_CLASSIFICATION	4.341203581026959E-7	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.9999984636450777	WITHOUT_CLASSIFICATION	1.5363549223032145E-6	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.999999439921022	WITHOUT_CLASSIFICATION	5.600789779960436E-7	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999996451772178	WITHOUT_CLASSIFICATION	3.5482278221233854E-7	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999994840941215	WITHOUT_CLASSIFICATION	5.159058785588068E-7	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999993351706518	WITHOUT_CLASSIFICATION	6.648293482554652E-7	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999992760301906	WITHOUT_CLASSIFICATION	7.23969809333819E-7	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999995395872553	WITHOUT_CLASSIFICATION	4.604127447107639E-7	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999996909597649	WITHOUT_CLASSIFICATION	3.090402349808929E-7	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999975986303548	WITHOUT_CLASSIFICATION	2.4013696452013845E-6	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999991519255791	WITHOUT_CLASSIFICATION	8.480744208941479E-7	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999996832738676	WITHOUT_CLASSIFICATION	3.167261323349782E-7	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999996133068189	WITHOUT_CLASSIFICATION	3.866931811745201E-7	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999992191153244	WITHOUT_CLASSIFICATION	7.808846755033394E-7	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999991424719574	WITHOUT_CLASSIFICATION	8.575280426573456E-7	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999980393688062	WITHOUT_CLASSIFICATION	1.9606311938540353E-6	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9999995482013	WITHOUT_CLASSIFICATION	4.517987000202957E-7	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9999993459244891	WITHOUT_CLASSIFICATION	6.54075510837258E-7	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9999996865080434	WITHOUT_CLASSIFICATION	3.13491956712646E-7	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9999991047655419	WITHOUT_CLASSIFICATION	8.952344580618139E-7	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9999979929092322	WITHOUT_CLASSIFICATION	2.007090767875528E-6	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.999998477985522	WITHOUT_CLASSIFICATION	1.522014477966316E-6	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.999999493727365	WITHOUT_CLASSIFICATION	5.062726350071774E-7	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.999999435755469	WITHOUT_CLASSIFICATION	5.642445309331386E-7	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.999999080955407	WITHOUT_CLASSIFICATION	9.19044593025802E-7	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9999991173256099	WITHOUT_CLASSIFICATION	8.826743900836029E-7	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9999996915081774	WITHOUT_CLASSIFICATION	3.084918226395505E-7	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9999992816688467	WITHOUT_CLASSIFICATION	7.183311533659966E-7	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9999991648185673	WITHOUT_CLASSIFICATION	8.35181432750937E-7	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9999994977296046	WITHOUT_CLASSIFICATION	5.022703954032711E-7	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9999994536633119	WITHOUT_CLASSIFICATION	5.463366880878061E-7	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9999996827683507	WITHOUT_CLASSIFICATION	3.172316492470089E-7	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.9999993313047767	WITHOUT_CLASSIFICATION	6.686952233202254E-7	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9999993401868764	WITHOUT_CLASSIFICATION	6.598131236836869E-7	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9999990110481135	WITHOUT_CLASSIFICATION	9.88951886479565E-7	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9999993924653843	WITHOUT_CLASSIFICATION	6.075346157498584E-7	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9999976162686993	WITHOUT_CLASSIFICATION	2.383731300606727E-6	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9999991401040865	WITHOUT_CLASSIFICATION	8.598959134858654E-7	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9999991508449078	WITHOUT_CLASSIFICATION	8.491550921617473E-7	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9999995234565152	WITHOUT_CLASSIFICATION	4.7654348486739063E-7	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9999989367608942	WITHOUT_CLASSIFICATION	1.0632391057413433E-6	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9999991522354418	WITHOUT_CLASSIFICATION	8.477645582009479E-7	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9999995280615309	WITHOUT_CLASSIFICATION	4.719384690285313E-7	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9999994796035679	WITHOUT_CLASSIFICATION	5.203964320932687E-7	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9999994237161681	WITHOUT_CLASSIFICATION	5.762838318338642E-7	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9999994383847844	WITHOUT_CLASSIFICATION	5.616152155376189E-7	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9999995585328498	WITHOUT_CLASSIFICATION	4.414671501840601E-7	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9999993075773201	WITHOUT_CLASSIFICATION	6.924226797791524E-7	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9999982420149772	WITHOUT_CLASSIFICATION	1.7579850227440778E-6	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9999992522442244	WITHOUT_CLASSIFICATION	7.477557755371681E-7	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.999997528218497	WITHOUT_CLASSIFICATION	2.4717815029208542E-6	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9999986522603959	WITHOUT_CLASSIFICATION	1.347739604093983E-6	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999995419180386	WITHOUT_CLASSIFICATION	4.5808196136665494E-7	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999990878443082	WITHOUT_CLASSIFICATION	9.121556917021173E-7	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999989851395326	WITHOUT_CLASSIFICATION	1.0148604674372692E-6	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999991571157757	WITHOUT_CLASSIFICATION	8.428842243474887E-7	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999989157399423	WITHOUT_CLASSIFICATION	1.0842600577642634E-6	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999997037293039	WITHOUT_CLASSIFICATION	2.9627069606133993E-7	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999992279111168	WITHOUT_CLASSIFICATION	7.720888831281143E-7	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999995031902497	WITHOUT_CLASSIFICATION	4.968097503440747E-7	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999994293409367	WITHOUT_CLASSIFICATION	5.706590633904378E-7	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999992254293504	WITHOUT_CLASSIFICATION	7.745706496353108E-7	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999989787003127	WITHOUT_CLASSIFICATION	1.0212996872246243E-6	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9999996275550764	WITHOUT_CLASSIFICATION	3.724449236883906E-7	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9999991266617991	WITHOUT_CLASSIFICATION	8.733382008855147E-7	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9999991537378764	WITHOUT_CLASSIFICATION	8.462621235005682E-7	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.9999996172694103	WITHOUT_CLASSIFICATION	3.827305897542653E-7	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9999974318553139	WITHOUT_CLASSIFICATION	2.5681446861990965E-6	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9999992088816918	WITHOUT_CLASSIFICATION	7.911183082675624E-7	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.999999358190509	WITHOUT_CLASSIFICATION	6.418094910906713E-7	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9999991219053628	WITHOUT_CLASSIFICATION	8.780946372132248E-7	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9999988709096443	WITHOUT_CLASSIFICATION	1.129090355627454E-6	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.9999988867256439	WITHOUT_CLASSIFICATION	1.1132743562231916E-6	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9999992133845911	WITHOUT_CLASSIFICATION	7.866154089111028E-7	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9999990115433437	WITHOUT_CLASSIFICATION	9.884566563516284E-7	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9999990852403259	WITHOUT_CLASSIFICATION	9.147596741477582E-7	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9999994192003	WITHOUT_CLASSIFICATION	5.807997000571948E-7	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9999997385898279	WITHOUT_CLASSIFICATION	2.614101719707853E-7	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9999993946502028	WITHOUT_CLASSIFICATION	6.053497971653561E-7	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9999994216705148	WITHOUT_CLASSIFICATION	5.783294852321289E-7	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9999986067385027	WITHOUT_CLASSIFICATION	1.3932614973337747E-6	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9999996194585203	WITHOUT_CLASSIFICATION	3.8054147966010623E-7	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9999991591738006	WITHOUT_CLASSIFICATION	8.408261993941972E-7	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9999977701856382	WITHOUT_CLASSIFICATION	2.229814361802792E-6	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.999999339650573	WITHOUT_CLASSIFICATION	6.603494270467483E-7	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9999980266497964	WITHOUT_CLASSIFICATION	1.973350203557501E-6	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9999992416718124	WITHOUT_CLASSIFICATION	7.583281876674463E-7	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9999992294057378	WITHOUT_CLASSIFICATION	7.705942621247878E-7	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.999999125944689	WITHOUT_CLASSIFICATION	8.740553110112599E-7	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9999992870314193	WITHOUT_CLASSIFICATION	7.129685807386871E-7	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9999991679942225	WITHOUT_CLASSIFICATION	8.32005777502126E-7	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9999993188645432	WITHOUT_CLASSIFICATION	6.811354567569865E-7	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9999993801074039	WITHOUT_CLASSIFICATION	6.198925961053926E-7	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9999992985428797	WITHOUT_CLASSIFICATION	7.014571201758259E-7	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9999982799998411	WITHOUT_CLASSIFICATION	1.7200001588070485E-6	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9999992443270153	WITHOUT_CLASSIFICATION	7.556729847792829E-7	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9999992291454942	WITHOUT_CLASSIFICATION	7.70854505854775E-7	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9999992864879117	WITHOUT_CLASSIFICATION	7.135120882760888E-7	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9999990126230228	WITHOUT_CLASSIFICATION	9.873769772079829E-7	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9999988920008559	WITHOUT_CLASSIFICATION	1.1079991441457707E-6	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9999993880320769	WITHOUT_CLASSIFICATION	6.119679231281807E-7	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999993558411882	WITHOUT_CLASSIFICATION	6.441588119227945E-7	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999969084809278	WITHOUT_CLASSIFICATION	3.091519072097677E-6	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999993436877425	WITHOUT_CLASSIFICATION	6.563122574145224E-7	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999993579501163	WITHOUT_CLASSIFICATION	6.420498837771289E-7	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999991394167637	WITHOUT_CLASSIFICATION	8.605832363423848E-7	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999981395934443	WITHOUT_CLASSIFICATION	1.860406555712792E-6	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999993998028	WITHOUT_CLASSIFICATION	6.001972000684268E-7	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999995242328372	WITHOUT_CLASSIFICATION	4.7576716271460475E-7	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999988912121976	WITHOUT_CLASSIFICATION	1.1087878023525411E-6	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999978938679353	WITHOUT_CLASSIFICATION	2.10613206471875E-6	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999974304417806	WITHOUT_CLASSIFICATION	2.5695582195014635E-6	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9999991450002358	WITHOUT_CLASSIFICATION	8.549997640734106E-7	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9999988094490199	WITHOUT_CLASSIFICATION	1.19055098009078E-6	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9999988982136586	WITHOUT_CLASSIFICATION	1.1017863413795E-6	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9999991705034248	WITHOUT_CLASSIFICATION	8.294965751401206E-7	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9999991745316318	WITHOUT_CLASSIFICATION	8.254683682542419E-7	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9999984496332143	WITHOUT_CLASSIFICATION	1.550366785795978E-6	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9999982442044161	WITHOUT_CLASSIFICATION	1.7557955839107128E-6	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9999971361127246	WITHOUT_CLASSIFICATION	2.863887275487666E-6	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9999989423584779	WITHOUT_CLASSIFICATION	1.0576415222259783E-6	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9999988262861627	WITHOUT_CLASSIFICATION	1.17371383734058E-6	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9999983219245707	WITHOUT_CLASSIFICATION	1.6780754292130351E-6	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9999984593281582	WITHOUT_CLASSIFICATION	1.5406718417456998E-6	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9999984137765613	WITHOUT_CLASSIFICATION	1.5862234387652503E-6	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.999998466322343	WITHOUT_CLASSIFICATION	1.5336776570752805E-6	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9999992301321157	WITHOUT_CLASSIFICATION	7.698678844194157E-7	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.999998994564928	WITHOUT_CLASSIFICATION	1.005435071972286E-6	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9999987174204409	WITHOUT_CLASSIFICATION	1.2825795590419047E-6	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9999987271663011	WITHOUT_CLASSIFICATION	1.2728336988711443E-6	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9999990790438439	WITHOUT_CLASSIFICATION	9.209561561857329E-7	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9999982615316796	WITHOUT_CLASSIFICATION	1.7384683205067142E-6	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9999988877071724	WITHOUT_CLASSIFICATION	1.1122928276442226E-6	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9999988940473401	WITHOUT_CLASSIFICATION	1.1059526599327031E-6	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9999981430224317	WITHOUT_CLASSIFICATION	1.8569775682260474E-6	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9999989450132188	WITHOUT_CLASSIFICATION	1.054986781170217E-6	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9999987036093715	WITHOUT_CLASSIFICATION	1.2963906285466442E-6	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9999989048831803	WITHOUT_CLASSIFICATION	1.0951168197129422E-6	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9999984661128121	WITHOUT_CLASSIFICATION	1.5338871878872436E-6	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9999987109859422	WITHOUT_CLASSIFICATION	1.2890140578753513E-6	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9999994706217622	WITHOUT_CLASSIFICATION	5.293782378428523E-7	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9999991270702396	WITHOUT_CLASSIFICATION	8.729297602128112E-7	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.999998854321664	WITHOUT_CLASSIFICATION	1.1456783360131774E-6	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9999988794774646	WITHOUT_CLASSIFICATION	1.12052253546176E-6	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9999989794771421	WITHOUT_CLASSIFICATION	1.0205228578577E-6	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9999982364122343	WITHOUT_CLASSIFICATION	1.7635877656124515E-6	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.999999208087634	WITHOUT_CLASSIFICATION	7.919123660979667E-7	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9999987676056179	WITHOUT_CLASSIFICATION	1.2323943820978933E-6	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9999983211211243	WITHOUT_CLASSIFICATION	1.6788788755955328E-6	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9999990809595447	WITHOUT_CLASSIFICATION	9.190404552950156E-7	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999981212334489	WITHOUT_CLASSIFICATION	1.8787665511730575E-6	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999982366127571	WITHOUT_CLASSIFICATION	1.7633872429551377E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999992646082981	WITHOUT_CLASSIFICATION	7.353917017874282E-7	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.999997503776933	WITHOUT_CLASSIFICATION	2.496223067007415E-6	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999991134875245	WITHOUT_CLASSIFICATION	8.865124754593004E-7	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999992558908558	WITHOUT_CLASSIFICATION	7.441091441471965E-7	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999979934232418	WITHOUT_CLASSIFICATION	2.006576758173663E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999994350248776	WITHOUT_CLASSIFICATION	5.649751224152898E-7	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999981218887929	WITHOUT_CLASSIFICATION	1.8781112071569355E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.99999780891121	WITHOUT_CLASSIFICATION	2.191088789943563E-6	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9999986437732308	WITHOUT_CLASSIFICATION	1.3562267692167335E-6	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.999997598178519	WITHOUT_CLASSIFICATION	2.4018214809986104E-6	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9999986904233349	WITHOUT_CLASSIFICATION	1.3095766650851383E-6	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9999987229260887	WITHOUT_CLASSIFICATION	1.2770739112273667E-6	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9999986679243855	WITHOUT_CLASSIFICATION	1.3320756144508085E-6	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9999987089853357	WITHOUT_CLASSIFICATION	1.2910146642392644E-6	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9999986016863485	WITHOUT_CLASSIFICATION	1.3983136514471219E-6	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9999993318463402	WITHOUT_CLASSIFICATION	6.68153659854406E-7	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9999986695393221	WITHOUT_CLASSIFICATION	1.3304606779088646E-6	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9999987498949047	WITHOUT_CLASSIFICATION	1.25010509536689E-6	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9999986206289756	WITHOUT_CLASSIFICATION	1.3793710243090756E-6	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9999982893232204	WITHOUT_CLASSIFICATION	1.7106767795646863E-6	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9999983129747522	WITHOUT_CLASSIFICATION	1.687025247817783E-6	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9999986572179949	WITHOUT_CLASSIFICATION	1.3427820051617623E-6	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9999986016051293	WITHOUT_CLASSIFICATION	1.398394870741432E-6	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9999978630052796	WITHOUT_CLASSIFICATION	2.13699472039535E-6	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.999998327261848	WITHOUT_CLASSIFICATION	1.6727381520771476E-6	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9999979646141537	WITHOUT_CLASSIFICATION	2.035385846361264E-6	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9999985346137578	WITHOUT_CLASSIFICATION	1.4653862422868524E-6	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9999984463553435	WITHOUT_CLASSIFICATION	1.5536446565736152E-6	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9999984394264403	WITHOUT_CLASSIFICATION	1.5605735597955474E-6	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.9999987044741878	WITHOUT_CLASSIFICATION	1.2955258121682372E-6	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.999999255499787	WITHOUT_CLASSIFICATION	7.445002130848263E-7	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9999984306625718	WITHOUT_CLASSIFICATION	1.5693374282357257E-6	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9999984166815975	WITHOUT_CLASSIFICATION	1.5833184024168541E-6	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9999991122573263	WITHOUT_CLASSIFICATION	8.877426738208861E-7	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9999982322831805	WITHOUT_CLASSIFICATION	1.7677168194948703E-6	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.999997842379917	WITHOUT_CLASSIFICATION	2.1576200829663004E-6	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9999980512924851	WITHOUT_CLASSIFICATION	1.948707514884779E-6	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9999975234644668	WITHOUT_CLASSIFICATION	2.4765355332106698E-6	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9999984544851596	WITHOUT_CLASSIFICATION	1.5455148403472216E-6	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9999990984058644	WITHOUT_CLASSIFICATION	9.015941356102918E-7	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9999982152830932	WITHOUT_CLASSIFICATION	1.7847169068399085E-6	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9999993966619581	WITHOUT_CLASSIFICATION	6.033380418802778E-7	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.999998299038728	WITHOUT_CLASSIFICATION	1.7009612720617523E-6	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.999999234958598	WITHOUT_CLASSIFICATION	7.650414019830922E-7	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9999984589977644	WITHOUT_CLASSIFICATION	1.5410022356159756E-6	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9999988481175509	WITHOUT_CLASSIFICATION	1.1518824490487905E-6	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9999966712083609	WITHOUT_CLASSIFICATION	3.3287916391809818E-6	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999980619787951	WITHOUT_CLASSIFICATION	1.9380212048410463E-6	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999983327468754	WITHOUT_CLASSIFICATION	1.6672531245472903E-6	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999992468234254	WITHOUT_CLASSIFICATION	7.53176574563604E-7	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999992320753168	WITHOUT_CLASSIFICATION	7.679246832264983E-7	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999984224861185	WITHOUT_CLASSIFICATION	1.5775138815493985E-6	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.999998852516309	WITHOUT_CLASSIFICATION	1.1474836909502606E-6	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999993371235205	WITHOUT_CLASSIFICATION	6.628764794104855E-7	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999985238572353	WITHOUT_CLASSIFICATION	1.4761427646523903E-6	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999962424101531	WITHOUT_CLASSIFICATION	3.7575898469203136E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999983291682759	WITHOUT_CLASSIFICATION	1.6708317240772871E-6	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9999988069486433	WITHOUT_CLASSIFICATION	1.193051356811092E-6	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9999992452149876	WITHOUT_CLASSIFICATION	7.547850123714939E-7	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9999990355231146	WITHOUT_CLASSIFICATION	9.644768853277638E-7	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9999984936787375	WITHOUT_CLASSIFICATION	1.5063212625399699E-6	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9999982868989272	WITHOUT_CLASSIFICATION	1.7131010727233666E-6	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9999983102127744	WITHOUT_CLASSIFICATION	1.6897872254808225E-6	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9999983345716267	WITHOUT_CLASSIFICATION	1.6654283733285695E-6	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9999967676278617	WITHOUT_CLASSIFICATION	3.2323721382027853E-6	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.999998444468822	WITHOUT_CLASSIFICATION	1.5555311780530753E-6	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9999987487772016	WITHOUT_CLASSIFICATION	1.251222798276612E-6	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9999982881578194	WITHOUT_CLASSIFICATION	1.711842180597152E-6	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9999978253069672	WITHOUT_CLASSIFICATION	2.1746930328892633E-6	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.9999995720916437	WITHOUT_CLASSIFICATION	4.279083562479784E-7	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9999978720484373	WITHOUT_CLASSIFICATION	2.127951562848305E-6	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9999984518913457	WITHOUT_CLASSIFICATION	1.5481086542112446E-6	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9999992650379587	WITHOUT_CLASSIFICATION	7.349620413415182E-7	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9999977615836539	WITHOUT_CLASSIFICATION	2.2384163461162894E-6	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9999989253674705	WITHOUT_CLASSIFICATION	1.0746325295816152E-6	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9999984369187752	WITHOUT_CLASSIFICATION	1.5630812247006E-6	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9999984996049954	WITHOUT_CLASSIFICATION	1.500395004621349E-6	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9999985904576076	WITHOUT_CLASSIFICATION	1.409542392276541E-6	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9999982563447642	WITHOUT_CLASSIFICATION	1.7436552358466643E-6	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9999970809965887	WITHOUT_CLASSIFICATION	2.9190034114063023E-6	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9999982989349316	WITHOUT_CLASSIFICATION	1.7010650683335351E-6	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9999983550636522	WITHOUT_CLASSIFICATION	1.644936347751972E-6	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.999999101758788	WITHOUT_CLASSIFICATION	8.98241211918016E-7	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9999981861008529	WITHOUT_CLASSIFICATION	1.8138991471036602E-6	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9999980080679308	WITHOUT_CLASSIFICATION	1.9919320692037463E-6	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9999970853708724	WITHOUT_CLASSIFICATION	2.9146291275694407E-6	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9999983402479624	WITHOUT_CLASSIFICATION	1.6597520376847215E-6	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9999982760114885	WITHOUT_CLASSIFICATION	1.7239885115352343E-6	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9999979633586868	WITHOUT_CLASSIFICATION	2.0366413131531397E-6	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9999972219984293	WITHOUT_CLASSIFICATION	2.7780015706906638E-6	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9999973741381387	WITHOUT_CLASSIFICATION	2.625861861258161E-6	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9999966346939441	WITHOUT_CLASSIFICATION	3.3653060558770673E-6	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9999973896030216	WITHOUT_CLASSIFICATION	2.610396978329357E-6	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9999970902797513	WITHOUT_CLASSIFICATION	2.909720248704693E-6	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.999994713983887	WITHOUT_CLASSIFICATION	5.286016113131328E-6	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9999971010738106	WITHOUT_CLASSIFICATION	2.898926189462259E-6	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9967927296098499	WITHOUT_CLASSIFICATION	0.003207270390150228	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9978708265091929	WITHOUT_CLASSIFICATION	0.0021291734908069817	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.99999854441731	WITHOUT_CLASSIFICATION	1.4555826900767276E-6	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.999995423797229	WITHOUT_CLASSIFICATION	4.576202771006478E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9964629383948128	WITHOUT_CLASSIFICATION	0.003537061605187224	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999068605321566	WITHOUT_CLASSIFICATION	9.313946784343457E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9991040648830907	WITHOUT_CLASSIFICATION	8.959351169092305E-4	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999996813343627	WITHOUT_CLASSIFICATION	3.1866563729324135E-6	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.9999970756249179	WITHOUT_CLASSIFICATION	2.924375082115384E-6	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9999961908989352	WITHOUT_CLASSIFICATION	3.809101064761935E-6	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9999986230991799	WITHOUT_CLASSIFICATION	1.3769008201767577E-6	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9999968423774308	WITHOUT_CLASSIFICATION	3.157622569196753E-6	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9999961699566396	WITHOUT_CLASSIFICATION	3.830043360409692E-6	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9999966252202354	WITHOUT_CLASSIFICATION	3.3747797646011915E-6	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9999993402906278	WITHOUT_CLASSIFICATION	6.597093722724324E-7	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9999987372343508	WITHOUT_CLASSIFICATION	1.2627656491010034E-6	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9999968307142162	WITHOUT_CLASSIFICATION	3.1692857838253464E-6	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.999996320532658	WITHOUT_CLASSIFICATION	3.6794673420241853E-6	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9999985489862854	WITHOUT_CLASSIFICATION	1.4510137145688169E-6	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9999978873700134	WITHOUT_CLASSIFICATION	2.1126299865540257E-6	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.9999990712480942	WITHOUT_CLASSIFICATION	9.287519059789525E-7	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9999974250526031	WITHOUT_CLASSIFICATION	2.5749473967250006E-6	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9999987435022489	WITHOUT_CLASSIFICATION	1.2564977510012517E-6	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.999998280917153	WITHOUT_CLASSIFICATION	1.7190828469473649E-6	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9999972424754036	WITHOUT_CLASSIFICATION	2.7575245964643068E-6	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9999992177179178	WITHOUT_CLASSIFICATION	7.822820821646361E-7	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9999988141174699	WITHOUT_CLASSIFICATION	1.1858825300532283E-6	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9999980760153548	WITHOUT_CLASSIFICATION	1.923984645171851E-6	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9999997723750215	WITHOUT_CLASSIFICATION	2.2762497859132326E-7	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9999996906974956	WITHOUT_CLASSIFICATION	3.093025043812879E-7	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9999996943991728	WITHOUT_CLASSIFICATION	3.056008271962099E-7	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999927010320494	WITHOUT_CLASSIFICATION	7.29896795050363E-6	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999965507412032	WITHOUT_CLASSIFICATION	3.449258796814339E-6	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999878899872721	WITHOUT_CLASSIFICATION	1.2110012727896122E-5	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999632156939331	WITHOUT_CLASSIFICATION	3.6784306066965275E-5	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999998865879844	WITHOUT_CLASSIFICATION	1.1341201558269923E-7	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999913653017822	WITHOUT_CLASSIFICATION	8.634698217761837E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999938630850833	WITHOUT_CLASSIFICATION	6.13691491670717E-6	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.999990758018803	WITHOUT_CLASSIFICATION	9.241981197017719E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999871139226	WITHOUT_CLASSIFICATION	1.2886077375136225E-8	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999871139226	WITHOUT_CLASSIFICATION	1.2886077375136225E-8	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9988073319175509	WITHOUT_CLASSIFICATION	0.0011926680824490637	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999998382452288	WITHOUT_CLASSIFICATION	1.6175477124998422E-7	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.999999993949198	WITHOUT_CLASSIFICATION	6.050801995682699E-9	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999995151762973	WITHOUT_CLASSIFICATION	4.848237027420431E-7	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999999741220519	WITHOUT_CLASSIFICATION	2.58779481018737E-8	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999906921212753	WITHOUT_CLASSIFICATION	9.307878724763486E-6	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999999958747715	WITHOUT_CLASSIFICATION	4.125228511706453E-9	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999996765361236	WITHOUT_CLASSIFICATION	3.2346387637649327E-7	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999515771820644	WITHOUT_CLASSIFICATION	4.842281793550019E-5	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999999973125245	WITHOUT_CLASSIFICATION	2.687475492338491E-9	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999999334815648	WITHOUT_CLASSIFICATION	6.65184352138463E-8	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999999163112221	WITHOUT_CLASSIFICATION	8.368877791470271E-8	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999999655537661	WITHOUT_CLASSIFICATION	3.444623390850329E-8	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999878712665451	WITHOUT_CLASSIFICATION	1.212873345490713E-5	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999999552442872	WITHOUT_CLASSIFICATION	4.4755712796141515E-8	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999999552442872	WITHOUT_CLASSIFICATION	4.4755712796141515E-8	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999938606558885	WITHOUT_CLASSIFICATION	6.139344111493147E-6	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999996534865984	WITHOUT_CLASSIFICATION	3.465134016362602E-7	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.999999993608961	WITHOUT_CLASSIFICATION	6.391039036597855E-9	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999978297802881	WITHOUT_CLASSIFICATION	2.170219711970723E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996390768359	WITHOUT_CLASSIFICATION	3.6092316417703414E-7	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999999460125184	WITHOUT_CLASSIFICATION	5.398748149277624E-8	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999866426311887	WITHOUT_CLASSIFICATION	1.3357368811219589E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999999460125184	WITHOUT_CLASSIFICATION	5.398748149277624E-8	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999400828949309	WITHOUT_CLASSIFICATION	5.9917105069143574E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999955915264382	WITHOUT_CLASSIFICATION	4.408473561780867E-6	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9996188699508702	WITHOUT_CLASSIFICATION	3.811300491297333E-4	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9998931713386734	WITHOUT_CLASSIFICATION	1.0682866132663195E-4	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999278167009217	WITHOUT_CLASSIFICATION	7.218329907839239E-5	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999965127581217	WITHOUT_CLASSIFICATION	3.4872418783202114E-6	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9995811482527069	WITHOUT_CLASSIFICATION	4.1885174729299477E-4	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999712690509451	WITHOUT_CLASSIFICATION	2.8730949054962715E-5	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999986849267111	WITHOUT_CLASSIFICATION	1.315073288822363E-6	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999993478366963	WITHOUT_CLASSIFICATION	6.521633036654028E-7	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.999904572347425	WITHOUT_CLASSIFICATION	9.542765257497308E-5	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999999530697036	WITHOUT_CLASSIFICATION	4.693029643833134E-8	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999992535413957	WITHOUT_CLASSIFICATION	7.464586042332924E-7	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999935540398086	WITHOUT_CLASSIFICATION	6.445960191383409E-6	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999514241866	WITHOUT_CLASSIFICATION	4.857581348578213E-8	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999514241866	WITHOUT_CLASSIFICATION	4.857581348578213E-8	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999986148535139	WITHOUT_CLASSIFICATION	1.3851464860341144E-6	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999942347110381	WITHOUT_CLASSIFICATION	5.765288961981432E-6	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999993147773438	WITHOUT_CLASSIFICATION	6.852226561505968E-7	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999165858053765	WITHOUT_CLASSIFICATION	8.341419462356725E-5	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.999992776234034	WITHOUT_CLASSIFICATION	7.223765965931894E-6	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999999460125184	WITHOUT_CLASSIFICATION	5.398748149277624E-8	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999999961869952	WITHOUT_CLASSIFICATION	3.813004787981172E-9	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999946296001602	WITHOUT_CLASSIFICATION	5.370399839806552E-6	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999999905768819	WITHOUT_CLASSIFICATION	9.423118019911199E-9	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999999937812274	WITHOUT_CLASSIFICATION	6.218772537626206E-9	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999999980714	WITHOUT_CLASSIFICATION	1.9286931267614958E-12	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999999328727961	WITHOUT_CLASSIFICATION	6.712720396573825E-8	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999996157881416	WITHOUT_CLASSIFICATION	3.842118584754617E-7	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999999932642069	WITHOUT_CLASSIFICATION	6.7357931949839984E-9	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999994748089853	WITHOUT_CLASSIFICATION	5.251910145956147E-7	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999992839936378	WITHOUT_CLASSIFICATION	7.160063621476159E-7	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999996725421255	WITHOUT_CLASSIFICATION	3.274578745050945E-7	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999999966373134	WITHOUT_CLASSIFICATION	3.362686619922339E-9	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999982864718548	WITHOUT_CLASSIFICATION	1.7135281451916777E-6	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999995787727879	WITHOUT_CLASSIFICATION	4.2122721207832526E-7	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9998918525400852	WITHOUT_CLASSIFICATION	1.0814745991484828E-4	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999891087344857	WITHOUT_CLASSIFICATION	1.0891265514343952E-5	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999984253624111	WITHOUT_CLASSIFICATION	1.5746375889360166E-6	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9999969468118733	WITHOUT_CLASSIFICATION	3.0531881265954614E-6	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9999996298649884	WITHOUT_CLASSIFICATION	3.701350115617482E-7	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9999933412133907	WITHOUT_CLASSIFICATION	6.658786609352497E-6	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999968084127282	WITHOUT_CLASSIFICATION	3.1915872718571E-6	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999998447963067	WITHOUT_CLASSIFICATION	1.5520369341054876E-7	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999592242591161	WITHOUT_CLASSIFICATION	4.077574088392527E-5	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.999999937200322	WITHOUT_CLASSIFICATION	6.27996780355541E-8	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999998581589195	WITHOUT_CLASSIFICATION	1.418410806205319E-7	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999976856165689	WITHOUT_CLASSIFICATION	2.3143834311930866E-6	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999991830106387	WITHOUT_CLASSIFICATION	8.169893611677467E-7	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999983177228486	WITHOUT_CLASSIFICATION	1.6822771513108058E-6	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999993202141413	WITHOUT_CLASSIFICATION	6.797858586368017E-7	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999999653699477	WITHOUT_CLASSIFICATION	3.4630052335840976E-8	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999997472071406	WITHOUT_CLASSIFICATION	2.527928594981185E-7	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9999998317904127	WITHOUT_CLASSIFICATION	1.6820958719472994E-7	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999995337359809	WITHOUT_CLASSIFICATION	4.6626401907921083E-7	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.999972870749375	WITHOUT_CLASSIFICATION	2.71292506249108E-5	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999967456589393	WITHOUT_CLASSIFICATION	3.2543410607238043E-6	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999734735699911	WITHOUT_CLASSIFICATION	2.6526430008950813E-5	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999999647586738	WITHOUT_CLASSIFICATION	3.5241326256066936E-8	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9999971406036485	WITHOUT_CLASSIFICATION	2.8593963515040677E-6	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9999975078320315	WITHOUT_CLASSIFICATION	2.4921679685776107E-6	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999999867855115	WITHOUT_CLASSIFICATION	1.3214488566911876E-8	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999996813343627	WITHOUT_CLASSIFICATION	3.1866563729324135E-6	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.8120245652083196	WITHOUT_CLASSIFICATION	0.18797543479168044	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999986064704253	WITHOUT_CLASSIFICATION	1.3935295747158208E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999989847788651	WITHOUT_CLASSIFICATION	1.015221135028499E-6	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999183265607	WITHOUT_CLASSIFICATION	8.16734393161075E-8	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999955915264382	WITHOUT_CLASSIFICATION	4.408473561780867E-6	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9997310514437276	WITHOUT_CLASSIFICATION	2.689485562724537E-4	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.999998033856072	WITHOUT_CLASSIFICATION	1.966143927987807E-6	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999999654160683	WITHOUT_CLASSIFICATION	3.458393175348592E-8	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999275040745	WITHOUT_CLASSIFICATION	7.249592554107462E-8	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999275040745	WITHOUT_CLASSIFICATION	7.249592554107462E-8	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999998328393706	WITHOUT_CLASSIFICATION	1.6716062944509255E-7	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999998328393706	WITHOUT_CLASSIFICATION	1.6716062944509255E-7	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999998328393706	WITHOUT_CLASSIFICATION	1.6716062944509255E-7	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.999996343817726	WITHOUT_CLASSIFICATION	3.656182274027948E-6	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.999996343817726	WITHOUT_CLASSIFICATION	3.656182274027948E-6	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999999090950568	WITHOUT_CLASSIFICATION	9.090494326144179E-8	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999999090950568	WITHOUT_CLASSIFICATION	9.090494326144179E-8	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999999991808393	WITHOUT_CLASSIFICATION	8.191608771341431E-10	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999998482750165	WITHOUT_CLASSIFICATION	1.51724983401748E-7	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999942199652017	WITHOUT_CLASSIFICATION	5.780034798320759E-6	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999942199652017	WITHOUT_CLASSIFICATION	5.780034798320759E-6	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999999901559099	WITHOUT_CLASSIFICATION	9.844090160709198E-9	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999984421734927	WITHOUT_CLASSIFICATION	1.5578265073383514E-6	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999999540845073	WITHOUT_CLASSIFICATION	4.591549276327193E-8	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999999224042153	WITHOUT_CLASSIFICATION	7.759578475113271E-8	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999999670194852	WITHOUT_CLASSIFICATION	3.298051477441998E-8	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999996333070447	WITHOUT_CLASSIFICATION	3.666929553991918E-7	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999998967790762	WITHOUT_CLASSIFICATION	1.0322092381160712E-7	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999996946426015	WITHOUT_CLASSIFICATION	3.0535739844413576E-7	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9999989514712238	WITHOUT_CLASSIFICATION	1.048528776188521E-6	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9999976710519642	WITHOUT_CLASSIFICATION	2.3289480358061633E-6	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999994511649121	WITHOUT_CLASSIFICATION	5.48835087873792E-7	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9999997541358171	WITHOUT_CLASSIFICATION	2.458641828586005E-7	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9999887140318156	WITHOUT_CLASSIFICATION	1.1285968184522962E-5	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9999959548308865	WITHOUT_CLASSIFICATION	4.045169113457194E-6	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999999096013863	WITHOUT_CLASSIFICATION	9.039861377334657E-8	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999965071600442	WITHOUT_CLASSIFICATION	3.49283995594802E-6	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9997763241934164	WITHOUT_CLASSIFICATION	2.2367580658362392E-4	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999992846443573	WITHOUT_CLASSIFICATION	7.153556426376558E-7	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999995209708917	WITHOUT_CLASSIFICATION	4.790291083831984E-7	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999854970378355	WITHOUT_CLASSIFICATION	1.4502962164614562E-5	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999999517131525	WITHOUT_CLASSIFICATION	4.828684749473686E-8	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999999809339337	WITHOUT_CLASSIFICATION	1.9066066311262454E-8	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9999997954279779	WITHOUT_CLASSIFICATION	2.0457202196150406E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999992601788519	WITHOUT_CLASSIFICATION	7.398211481057486E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999997479291959	WITHOUT_CLASSIFICATION	2.5207080404240566E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999976474831512	WITHOUT_CLASSIFICATION	2.352516848795878E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999562849006	WITHOUT_CLASSIFICATION	4.3715099521972824E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999545122569	WITHOUT_CLASSIFICATION	4.548774317888898E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999997717937199	WITHOUT_CLASSIFICATION	2.282062800373934E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999222459086	WITHOUT_CLASSIFICATION	7.775409129766343E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999992743385088	WITHOUT_CLASSIFICATION	7.256614911484443E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999032517103	WITHOUT_CLASSIFICATION	9.67482896731228E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999670360751	WITHOUT_CLASSIFICATION	3.2963924984618136E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999729843689	WITHOUT_CLASSIFICATION	2.7015631096390183E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999670360751	WITHOUT_CLASSIFICATION	3.2963924984618136E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999670360751	WITHOUT_CLASSIFICATION	3.2963924984618136E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999670360751	WITHOUT_CLASSIFICATION	3.2963924984618136E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999670360751	WITHOUT_CLASSIFICATION	3.2963924984618136E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999670360751	WITHOUT_CLASSIFICATION	3.2963924984618136E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999670360751	WITHOUT_CLASSIFICATION	3.2963924984618136E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999729843689	WITHOUT_CLASSIFICATION	2.7015631096390183E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999729843689	WITHOUT_CLASSIFICATION	2.7015631096390183E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999729843689	WITHOUT_CLASSIFICATION	2.7015631096390183E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999729843689	WITHOUT_CLASSIFICATION	2.7015631096390183E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999729843689	WITHOUT_CLASSIFICATION	2.7015631096390183E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999729843689	WITHOUT_CLASSIFICATION	2.7015631096390183E-7	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999988857287747	WITHOUT_CLASSIFICATION	1.114271225299542E-6	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999992765330503	WITHOUT_CLASSIFICATION	7.234669496829454E-7	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999837963289507	WITHOUT_CLASSIFICATION	1.6203671049311632E-5	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999977280786267	WITHOUT_CLASSIFICATION	2.2719213733422777E-6	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999999997342753	WITHOUT_CLASSIFICATION	2.6572468393438517E-10	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999986443006185	WITHOUT_CLASSIFICATION	1.355699381481612E-6	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999985239057936	WITHOUT_CLASSIFICATION	1.476094206452339E-6	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999999957929435	WITHOUT_CLASSIFICATION	4.207056508851737E-9	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999997372613435	WITHOUT_CLASSIFICATION	2.6273865645198173E-7	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999968715331664	WITHOUT_CLASSIFICATION	3.1284668335743553E-6	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.673167161586886	IMPLEMENTATION	0.32683283841311395	WITHOUT_CLASSIFICATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999977712278	WITHOUT_CLASSIFICATION	2.228772180670238E-9	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999900015411542	WITHOUT_CLASSIFICATION	9.998458845804225E-6	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999990815397	WITHOUT_CLASSIFICATION	9.184602345643011E-10	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999999990546448	WITHOUT_CLASSIFICATION	9.45355274592843E-10	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.999997561575361	WITHOUT_CLASSIFICATION	2.43842463892904E-6	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999994628969714	WITHOUT_CLASSIFICATION	5.371030286381019E-7	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999998791376257	WITHOUT_CLASSIFICATION	1.208623742922954E-7	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999997984823845	WITHOUT_CLASSIFICATION	2.0151761546134372E-7	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999999594901622	WITHOUT_CLASSIFICATION	4.050983784338776E-8	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999978314012257	WITHOUT_CLASSIFICATION	2.168598774332368E-6	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999999138928508	WITHOUT_CLASSIFICATION	8.610714920327741E-8	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999866426311887	WITHOUT_CLASSIFICATION	1.3357368811219589E-5	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.998861200941219	WITHOUT_CLASSIFICATION	0.0011387990587810243	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999976332251805	WITHOUT_CLASSIFICATION	2.366774819491335E-6	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999963975135997	WITHOUT_CLASSIFICATION	3.6024864002938345E-6	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999520625907	WITHOUT_CLASSIFICATION	4.7937409324921305E-8	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9994199148793004	WITHOUT_CLASSIFICATION	5.800851206997271E-4	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.999988456855025	WITHOUT_CLASSIFICATION	1.154314497505222E-5	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.999999236245811	WITHOUT_CLASSIFICATION	7.637541889518577E-7	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.999933335906664	WITHOUT_CLASSIFICATION	6.666409333603294E-5	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999561643551195	WITHOUT_CLASSIFICATION	4.383564488059306E-5	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999988881556601	WITHOUT_CLASSIFICATION	1.1118443399174768E-6	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9999996086243157	WITHOUT_CLASSIFICATION	3.9137568428002E-7	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999972755663291	WITHOUT_CLASSIFICATION	2.7244336707979767E-6	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999415285959901	WITHOUT_CLASSIFICATION	5.847140401001394E-5	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999949981604965	WITHOUT_CLASSIFICATION	5.001839503437898E-6	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999999832096164	WITHOUT_CLASSIFICATION	1.6790383750671203E-8	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999921067963431	WITHOUT_CLASSIFICATION	7.893203656906047E-6	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999997670169453	WITHOUT_CLASSIFICATION	2.3298305471019186E-7	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999993169003963	WITHOUT_CLASSIFICATION	6.830996036042708E-7	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999999790288847	WITHOUT_CLASSIFICATION	2.0971115387900217E-8	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999999623602155	WITHOUT_CLASSIFICATION	3.763978456337481E-8	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999999407439212	WITHOUT_CLASSIFICATION	5.925607889944865E-8	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999999407439212	WITHOUT_CLASSIFICATION	5.925607889944865E-8	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999999674202612	WITHOUT_CLASSIFICATION	3.257973872133019E-8	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999999674202612	WITHOUT_CLASSIFICATION	3.257973872133019E-8	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999989973590453	WITHOUT_CLASSIFICATION	1.002640954781524E-6	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999989973590453	WITHOUT_CLASSIFICATION	1.002640954781524E-6	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999900303810525	WITHOUT_CLASSIFICATION	9.969618947369261E-6	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999860661126079	WITHOUT_CLASSIFICATION	1.3933887392164108E-5	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999999971270189	WITHOUT_CLASSIFICATION	2.872981058567514E-9	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999999474672326	WITHOUT_CLASSIFICATION	5.253276738292616E-8	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999946442088585	WITHOUT_CLASSIFICATION	5.355791141580469E-6	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.999999785983137	WITHOUT_CLASSIFICATION	2.1401686300134367E-7	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9999991436436226	WITHOUT_CLASSIFICATION	8.563563773489572E-7	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999581179283	WITHOUT_CLASSIFICATION	4.188207155879568E-8	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999999999862309	WITHOUT_CLASSIFICATION	1.376914080070097E-11	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999999987406902	WITHOUT_CLASSIFICATION	1.2593097256844708E-9	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999999714086899	WITHOUT_CLASSIFICATION	2.8591310205690917E-8	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999999749097492	WITHOUT_CLASSIFICATION	2.5090250706762417E-8	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999999906972323	WITHOUT_CLASSIFICATION	9.302767675568573E-9	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999999971097131	WITHOUT_CLASSIFICATION	2.89028682331039E-9	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999949160616025	WITHOUT_CLASSIFICATION	5.083938397495839E-6	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9999997790165897	WITHOUT_CLASSIFICATION	2.209834104713897E-7	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999974440221338	WITHOUT_CLASSIFICATION	2.5559778662677634E-6	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999999468067983	WITHOUT_CLASSIFICATION	5.319320161131566E-8	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9995042827562508	WITHOUT_CLASSIFICATION	4.957172437491734E-4	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9999989850078874	WITHOUT_CLASSIFICATION	1.0149921126248515E-6	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9999982217885584	WITHOUT_CLASSIFICATION	1.7782114416420945E-6	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999955335332137	WITHOUT_CLASSIFICATION	4.4664667862998335E-6	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999960967918334	WITHOUT_CLASSIFICATION	3.9032081665752204E-6	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999999512059004	WITHOUT_CLASSIFICATION	4.879409969224989E-8	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999999965860159	WITHOUT_CLASSIFICATION	3.41398413364766E-9	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999999958090634	WITHOUT_CLASSIFICATION	4.190936584237928E-9	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9999999275298255	WITHOUT_CLASSIFICATION	7.247017454395698E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999449465085	WITHOUT_CLASSIFICATION	5.505349149386025E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999449465085	WITHOUT_CLASSIFICATION	5.505349149386025E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999449465085	WITHOUT_CLASSIFICATION	5.505349149386025E-8	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999989004242049	WITHOUT_CLASSIFICATION	1.099575795099658E-6	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999989004242049	WITHOUT_CLASSIFICATION	1.099575795099658E-6	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999995787727879	WITHOUT_CLASSIFICATION	4.2122721207832526E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999995787727879	WITHOUT_CLASSIFICATION	4.2122721207832526E-7	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999999997790373	WITHOUT_CLASSIFICATION	2.2096280510974925E-10	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9999641705337408	WITHOUT_CLASSIFICATION	3.582946625923229E-5	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.999999318917371	WITHOUT_CLASSIFICATION	6.810826289744048E-7	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999999849586034	WITHOUT_CLASSIFICATION	1.504139667406865E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999449465085	WITHOUT_CLASSIFICATION	5.505349149386025E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999449465085	WITHOUT_CLASSIFICATION	5.505349149386025E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999449465085	WITHOUT_CLASSIFICATION	5.505349149386025E-8	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999989004242049	WITHOUT_CLASSIFICATION	1.099575795099658E-6	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999989004242049	WITHOUT_CLASSIFICATION	1.099575795099658E-6	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999989004242049	WITHOUT_CLASSIFICATION	1.099575795099658E-6	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999995787727879	WITHOUT_CLASSIFICATION	4.2122721207832526E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999995787727879	WITHOUT_CLASSIFICATION	4.2122721207832526E-7	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999999992618254	WITHOUT_CLASSIFICATION	7.381745901134429E-10	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999999999720854	WITHOUT_CLASSIFICATION	2.7914575457049408E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999685184	WITHOUT_CLASSIFICATION	3.148164245071308E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999685184	WITHOUT_CLASSIFICATION	3.148164245071308E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999685184	WITHOUT_CLASSIFICATION	3.148164245071308E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999685184	WITHOUT_CLASSIFICATION	3.148164245071308E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999685184	WITHOUT_CLASSIFICATION	3.148164245071308E-11	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999996213452355	WITHOUT_CLASSIFICATION	3.786547645032512E-7	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999998041341341	WITHOUT_CLASSIFICATION	1.9586586584162263E-7	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999440708231736	WITHOUT_CLASSIFICATION	5.5929176826405554E-5	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999971545110694	WITHOUT_CLASSIFICATION	2.845488930619985E-6	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999954634035338	WITHOUT_CLASSIFICATION	4.536596466164495E-6	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999998496281977	WITHOUT_CLASSIFICATION	1.5037180235177566E-7	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9997672171044253	WITHOUT_CLASSIFICATION	2.3278289557473423E-4	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999998833801508	WITHOUT_CLASSIFICATION	1.1661984924972588E-7	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999995491101378	WITHOUT_CLASSIFICATION	4.508898623123804E-7	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999999056998514	WITHOUT_CLASSIFICATION	9.430014849778684E-8	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.999987101061571	WITHOUT_CLASSIFICATION	1.289893842902313E-5	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999999978857551	WITHOUT_CLASSIFICATION	2.1142448270482107E-9	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999987554781813	WITHOUT_CLASSIFICATION	1.2445218187132806E-6	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.999999909123394	WITHOUT_CLASSIFICATION	9.087660599807667E-8	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999999990268317	WITHOUT_CLASSIFICATION	9.73168262162849E-10	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999934069259445	WITHOUT_CLASSIFICATION	6.593074055506761E-6	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999934069259445	WITHOUT_CLASSIFICATION	6.593074055506761E-6	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999934069259445	WITHOUT_CLASSIFICATION	6.593074055506761E-6	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999999961703782	WITHOUT_CLASSIFICATION	3.829621913755999E-9	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999999961710061	WITHOUT_CLASSIFICATION	3.828993871478203E-9	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999828172966413	WITHOUT_CLASSIFICATION	1.718270335866795E-5	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999999995495	WITHOUT_CLASSIFICATION	4.505336615939661E-13	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999999917732006	WITHOUT_CLASSIFICATION	8.226799301076023E-9	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999981996545854	WITHOUT_CLASSIFICATION	1.8003454146622152E-6	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999997310826495	WITHOUT_CLASSIFICATION	2.6891735046049023E-7	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9999995201393814	WITHOUT_CLASSIFICATION	4.798606186519724E-7	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999989709092227	WITHOUT_CLASSIFICATION	1.0290907772745631E-6	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999999760595457	WITHOUT_CLASSIFICATION	2.3940454294045437E-8	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999999943851029	WITHOUT_CLASSIFICATION	5.614897104698179E-9	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999999873409982	WITHOUT_CLASSIFICATION	1.2659001771378566E-8	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999995679986057	WITHOUT_CLASSIFICATION	4.320013943049978E-7	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9999998738725959	WITHOUT_CLASSIFICATION	1.2612740414107412E-7	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9999998644139556	WITHOUT_CLASSIFICATION	1.3558604435729177E-7	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999997265982058	WITHOUT_CLASSIFICATION	2.7340179419733924E-7	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999999137317193	WITHOUT_CLASSIFICATION	8.62682808204668E-8	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999999610227607	WITHOUT_CLASSIFICATION	3.897723934858261E-8	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9999994971070684	WITHOUT_CLASSIFICATION	5.028929316775195E-7	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999975677733433	WITHOUT_CLASSIFICATION	2.432226656720694E-6	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.999998499139318	WITHOUT_CLASSIFICATION	1.5008606820008167E-6	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999986533946558	WITHOUT_CLASSIFICATION	1.346605344291596E-6	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999068468481499	WITHOUT_CLASSIFICATION	9.315315185003433E-5	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999998593930585	WITHOUT_CLASSIFICATION	1.4060694152220567E-7	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9999996175594715	WITHOUT_CLASSIFICATION	3.8244052843834435E-7	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.999999681304241	WITHOUT_CLASSIFICATION	3.186957590547957E-7	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9999998770121038	WITHOUT_CLASSIFICATION	1.2298789614309413E-7	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9999985500934349	WITHOUT_CLASSIFICATION	1.4499065651597528E-6	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999923256583316	WITHOUT_CLASSIFICATION	7.674341668326831E-6	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9999992078136476	WITHOUT_CLASSIFICATION	7.921863525023058E-7	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9999990859835161	WITHOUT_CLASSIFICATION	9.140164839717453E-7	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9999996306220779	WITHOUT_CLASSIFICATION	3.6937792207905117E-7	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.9999995593796421	WITHOUT_CLASSIFICATION	4.4062035781497445E-7	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9999995723290587	WITHOUT_CLASSIFICATION	4.2767094133666996E-7	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9999995019923675	WITHOUT_CLASSIFICATION	4.980076324013927E-7	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.99999955441068	WITHOUT_CLASSIFICATION	4.45589320054953E-7	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999997237609336	WITHOUT_CLASSIFICATION	2.762390664316565E-7	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999999964117571	WITHOUT_CLASSIFICATION	3.5882428833789125E-9	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9990748917282392	WITHOUT_CLASSIFICATION	9.251082717607475E-4	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.999932264909603	WITHOUT_CLASSIFICATION	6.773509039703751E-5	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999999993343506	WITHOUT_CLASSIFICATION	6.656494329317218E-10	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999950264932302	WITHOUT_CLASSIFICATION	4.973506769687091E-6	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.999953049395747	WITHOUT_CLASSIFICATION	4.695060425293665E-5	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999915130656433	WITHOUT_CLASSIFICATION	8.48693435663705E-6	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.999999933740764	WITHOUT_CLASSIFICATION	6.625923606798389E-8	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999972092949543	WITHOUT_CLASSIFICATION	2.7907050457255737E-6	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999968169760947	WITHOUT_CLASSIFICATION	3.1830239053984677E-6	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999968169760947	WITHOUT_CLASSIFICATION	3.1830239053984677E-6	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999993759829554	WITHOUT_CLASSIFICATION	6.240170445945571E-7	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999965038807884	WITHOUT_CLASSIFICATION	3.496119211608705E-6	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999980038101272	WITHOUT_CLASSIFICATION	1.9961898728985916E-6	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999999830364465	WITHOUT_CLASSIFICATION	1.69635534083745E-8	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999783981638558	WITHOUT_CLASSIFICATION	2.1601836144252834E-5	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999995796685497	WITHOUT_CLASSIFICATION	4.203314502671941E-7	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999999628054232	WITHOUT_CLASSIFICATION	3.7194576731006686E-8	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999999865752	WITHOUT_CLASSIFICATION	1.342472289444596E-11	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999991498099478	WITHOUT_CLASSIFICATION	8.501900523815262E-7	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999952815291256	WITHOUT_CLASSIFICATION	4.718470874275013E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.999999962399051	WITHOUT_CLASSIFICATION	3.7600949055146696E-8	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.999999962399051	WITHOUT_CLASSIFICATION	3.7600949055146696E-8	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.999999962399051	WITHOUT_CLASSIFICATION	3.7600949055146696E-8	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.999999962399051	WITHOUT_CLASSIFICATION	3.7600949055146696E-8	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9999934766080681	WITHOUT_CLASSIFICATION	6.523391931883232E-6	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9999999020668376	WITHOUT_CLASSIFICATION	9.793316234785756E-8	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9999974070621472	WITHOUT_CLASSIFICATION	2.5929378527485534E-6	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9999698260673477	WITHOUT_CLASSIFICATION	3.0173932652196985E-5	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999927250695607	WITHOUT_CLASSIFICATION	7.274930439262234E-6	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999996176237345	WITHOUT_CLASSIFICATION	3.823762655658001E-7	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999995653971298	WITHOUT_CLASSIFICATION	4.3460287019437127E-7	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999994833633504	WITHOUT_CLASSIFICATION	5.166366495272062E-7	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999994833633504	WITHOUT_CLASSIFICATION	5.166366495272062E-7	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999999943270442	WITHOUT_CLASSIFICATION	5.67295567473173E-9	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999964278932102	WITHOUT_CLASSIFICATION	3.572106789729948E-6	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999427753532	WITHOUT_CLASSIFICATION	5.722464685981372E-8	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999806784513	WITHOUT_CLASSIFICATION	1.932154874639905E-8	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999806784513	WITHOUT_CLASSIFICATION	1.932154874639905E-8	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.999999998030707	WITHOUT_CLASSIFICATION	1.969292947002224E-9	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9998062049777117	WITHOUT_CLASSIFICATION	1.9379502228837156E-4	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9998062049777117	WITHOUT_CLASSIFICATION	1.9379502228837156E-4	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.999999952271872	WITHOUT_CLASSIFICATION	4.772812813577145E-8	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999999995712754	WITHOUT_CLASSIFICATION	4.2872468153082786E-10	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999724500268	WITHOUT_CLASSIFICATION	2.7549973168397472E-8	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999932134979503	WITHOUT_CLASSIFICATION	6.786502049666507E-6	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.955169616237562	WITHOUT_CLASSIFICATION	0.04483038376243792	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999665102972	WITHOUT_CLASSIFICATION	3.348970281483331E-8	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9993782118348968	WITHOUT_CLASSIFICATION	6.217881651031866E-4	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9999713222241668	WITHOUT_CLASSIFICATION	2.8677775833248973E-5	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999997754988041	WITHOUT_CLASSIFICATION	2.2450119587768445E-7	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999999897460348	WITHOUT_CLASSIFICATION	1.02539652365057E-8	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999998950371274	WITHOUT_CLASSIFICATION	1.0496287266390633E-7	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999995708866526	WITHOUT_CLASSIFICATION	4.2911334741591253E-7	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999900942732876	WITHOUT_CLASSIFICATION	9.90572671238849E-6	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999951025574833	WITHOUT_CLASSIFICATION	4.897442516705132E-6	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999995848237282	WITHOUT_CLASSIFICATION	4.151762718687553E-7	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999924364526874	WITHOUT_CLASSIFICATION	7.56354731263576E-6	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9999994033358909	WITHOUT_CLASSIFICATION	5.966641091078257E-7	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9999998091341278	WITHOUT_CLASSIFICATION	1.9086587232458977E-7	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999998449786041	WITHOUT_CLASSIFICATION	1.5502139590854358E-7	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999914044200134	WITHOUT_CLASSIFICATION	8.595579986594946E-6	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999697416180665	WITHOUT_CLASSIFICATION	3.025838193346901E-5	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999999188812924	WITHOUT_CLASSIFICATION	8.111870763443256E-8	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999999332126874	WITHOUT_CLASSIFICATION	6.678731263788463E-8	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999918415831995	WITHOUT_CLASSIFICATION	8.15841680037252E-6	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999964160326286	WITHOUT_CLASSIFICATION	3.5839673713878376E-6	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999999822805344	WITHOUT_CLASSIFICATION	1.771946560150053E-8	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999994261902274	WITHOUT_CLASSIFICATION	5.738097725675177E-7	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.99999990940651	WITHOUT_CLASSIFICATION	9.059349008303704E-8	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.999999999665902	WITHOUT_CLASSIFICATION	3.3409805315270116E-10	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999996333182283	WITHOUT_CLASSIFICATION	3.6668177162381824E-7	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9999995614000654	WITHOUT_CLASSIFICATION	4.3859993457477517E-7	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999999133134111	WITHOUT_CLASSIFICATION	8.668658893329931E-8	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9977872936568026	WITHOUT_CLASSIFICATION	0.002212706343197431	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999969626144676	WITHOUT_CLASSIFICATION	3.037385532363169E-6	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999989918235234	WITHOUT_CLASSIFICATION	1.0081764766508715E-6	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999999871452514	WITHOUT_CLASSIFICATION	1.2854748528090446E-8	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999996203635877	WITHOUT_CLASSIFICATION	3.7963641233276477E-7	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999999432287368	WITHOUT_CLASSIFICATION	5.677126318762148E-8	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999995771115833	WITHOUT_CLASSIFICATION	4.228884167862605E-7	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999999871452514	WITHOUT_CLASSIFICATION	1.2854748528090446E-8	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999996203635877	WITHOUT_CLASSIFICATION	3.7963641233276477E-7	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.999999110142382	WITHOUT_CLASSIFICATION	8.898576180790642E-7	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999948943138389	WITHOUT_CLASSIFICATION	5.1056861610690385E-6	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999948943138389	WITHOUT_CLASSIFICATION	5.1056861610690385E-6	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9998710784210907	WITHOUT_CLASSIFICATION	1.289215789092504E-4	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999711563884	WITHOUT_CLASSIFICATION	2.8843611569220363E-8	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999598794567	WITHOUT_CLASSIFICATION	4.012054331824651E-8	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999998481899297	WITHOUT_CLASSIFICATION	1.5181007032826388E-7	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.999702650410475	WITHOUT_CLASSIFICATION	2.9734958952497373E-4	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999991831845702	WITHOUT_CLASSIFICATION	8.168154297535639E-7	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999236969839593	WITHOUT_CLASSIFICATION	7.630301604065115E-5	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999126997063399	WITHOUT_CLASSIFICATION	8.730029366015813E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999840327955051	WITHOUT_CLASSIFICATION	1.5967204494897457E-5	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999994357547632	WITHOUT_CLASSIFICATION	5.642452367381523E-7	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999995011060712	WITHOUT_CLASSIFICATION	4.98893928778441E-7	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999998612909726	WITHOUT_CLASSIFICATION	1.387090273811739E-7	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999999818097665	WITHOUT_CLASSIFICATION	1.8190233541280448E-8	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999871123866	WITHOUT_CLASSIFICATION	1.2887613473112685E-8	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999871123866	WITHOUT_CLASSIFICATION	1.2887613473112685E-8	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999204085153733	WITHOUT_CLASSIFICATION	7.959148462660284E-5	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999204085153733	WITHOUT_CLASSIFICATION	7.959148462660284E-5	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999999270495359	WITHOUT_CLASSIFICATION	7.295046411402632E-8	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999992888272962	WITHOUT_CLASSIFICATION	7.111727038842379E-7	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999936834751336	WITHOUT_CLASSIFICATION	6.316524866317157E-6	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999999788937215	WITHOUT_CLASSIFICATION	2.110627848600288E-8	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999898436386112	WITHOUT_CLASSIFICATION	1.0156361388862102E-5	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999993706364626	WITHOUT_CLASSIFICATION	6.293635373357112E-7	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999598794567	WITHOUT_CLASSIFICATION	4.012054331824651E-8	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999998481899297	WITHOUT_CLASSIFICATION	1.5181007032826388E-7	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999840327955051	WITHOUT_CLASSIFICATION	1.5967204494897457E-5	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999994357547632	WITHOUT_CLASSIFICATION	5.642452367381523E-7	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999558807727313	WITHOUT_CLASSIFICATION	4.411922726876662E-5	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999851652206329	WITHOUT_CLASSIFICATION	1.48347793672426E-5	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.999999342974146	WITHOUT_CLASSIFICATION	6.570258538098408E-7	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999999290793665	WITHOUT_CLASSIFICATION	7.092063355383909E-8	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999973410802836	WITHOUT_CLASSIFICATION	2.6589197163649357E-6	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999999964580726	WITHOUT_CLASSIFICATION	3.5419273366790147E-9	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999994241048992	WITHOUT_CLASSIFICATION	5.758951007999019E-7	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999996361667501	WITHOUT_CLASSIFICATION	3.6383324989486E-7	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999642167132845	WITHOUT_CLASSIFICATION	3.578328671559911E-5	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.999999310984469	WITHOUT_CLASSIFICATION	6.890155310301073E-7	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999919365871	WITHOUT_CLASSIFICATION	8.063412861742427E-9	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999999937522944	WITHOUT_CLASSIFICATION	6.247705623388314E-9	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.999997762898026	WITHOUT_CLASSIFICATION	2.23710197407885E-6	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999994604296694	WITHOUT_CLASSIFICATION	5.395703307054041E-7	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999869997569449	WITHOUT_CLASSIFICATION	1.3000243055143097E-5	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999999190472242	WITHOUT_CLASSIFICATION	8.095277572657986E-8	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.999999320188805	WITHOUT_CLASSIFICATION	6.798111949728277E-7	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999999641342537	WITHOUT_CLASSIFICATION	3.586574617268625E-8	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.999999996923309	WITHOUT_CLASSIFICATION	3.076690997653092E-9	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999999926872245	WITHOUT_CLASSIFICATION	7.3127754766470074E-9	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999999783428489	WITHOUT_CLASSIFICATION	2.165715105332256E-8	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999999783428489	WITHOUT_CLASSIFICATION	2.165715105332256E-8	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999992063293057	WITHOUT_CLASSIFICATION	7.936706941991635E-7	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999989805421008	WITHOUT_CLASSIFICATION	1.019457899188929E-6	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999999999109171	WITHOUT_CLASSIFICATION	8.908291894609682E-11	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.999999861536627	WITHOUT_CLASSIFICATION	1.3846337296976348E-7	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.999999861536627	WITHOUT_CLASSIFICATION	1.3846337296976348E-7	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.999999342974146	WITHOUT_CLASSIFICATION	6.570258538098408E-7	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999989947949701	WITHOUT_CLASSIFICATION	1.0052050298784075E-6	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999998368584125	WITHOUT_CLASSIFICATION	1.6314158755651865E-7	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999997321132854	WITHOUT_CLASSIFICATION	2.6788671455567504E-7	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.999999564734194	WITHOUT_CLASSIFICATION	4.352658058783954E-7	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999363119664	WITHOUT_CLASSIFICATION	6.368803367371846E-8	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999969086283007	WITHOUT_CLASSIFICATION	3.0913716994253496E-6	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999999715531595	WITHOUT_CLASSIFICATION	2.844684063752515E-8	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9999227278773467	WITHOUT_CLASSIFICATION	7.727212265329781E-5	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999973691583325	WITHOUT_CLASSIFICATION	2.630841667526203E-6	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999989621368591	WITHOUT_CLASSIFICATION	1.0378631408365907E-6	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.999999538850392	WITHOUT_CLASSIFICATION	4.61149607982484E-7	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999994787881837	WITHOUT_CLASSIFICATION	5.212118163175609E-7	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999991706981602	WITHOUT_CLASSIFICATION	8.293018397752773E-7	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999984581712893	WITHOUT_CLASSIFICATION	1.5418287107662903E-6	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9999980221728317	WITHOUT_CLASSIFICATION	1.977827168364273E-6	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999999903521403	WITHOUT_CLASSIFICATION	9.647859782513253E-9	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9999998754321838	WITHOUT_CLASSIFICATION	1.2456781624197156E-7	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999999307629178	WITHOUT_CLASSIFICATION	6.923708219547099E-8	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999972596929	WITHOUT_CLASSIFICATION	2.7403069579058414E-9	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999998886907161	WITHOUT_CLASSIFICATION	1.1130928389643359E-7	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999992917142244	WITHOUT_CLASSIFICATION	7.082857756439294E-7	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999936076379408	WITHOUT_CLASSIFICATION	6.39236205928638E-6	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999997070513512	WITHOUT_CLASSIFICATION	2.9294864871422814E-7	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999851903493	WITHOUT_CLASSIFICATION	1.4809650774915084E-8	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999997984371237	WITHOUT_CLASSIFICATION	2.015628763582465E-7	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999974797757063	WITHOUT_CLASSIFICATION	2.5202242938382348E-6	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999991232893995	WITHOUT_CLASSIFICATION	8.76710600475935E-7	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999997873601859	WITHOUT_CLASSIFICATION	2.1263981400844292E-7	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999986615947387	WITHOUT_CLASSIFICATION	1.3384052613644352E-6	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999556808153	WITHOUT_CLASSIFICATION	4.431918459841157E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999556808153	WITHOUT_CLASSIFICATION	4.431918459841157E-8	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999999963489132	WITHOUT_CLASSIFICATION	3.6510868021909813E-9	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999992392695816	WITHOUT_CLASSIFICATION	7.607304184968643E-7	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999992392695816	WITHOUT_CLASSIFICATION	7.607304184968643E-7	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999998114544993	WITHOUT_CLASSIFICATION	1.8854550054371411E-7	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999998114544993	WITHOUT_CLASSIFICATION	1.8854550054371411E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999995479834073	WITHOUT_CLASSIFICATION	4.520165927504099E-7	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999999511438238	WITHOUT_CLASSIFICATION	4.885617612263107E-8	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999975085477322	WITHOUT_CLASSIFICATION	2.4914522677893347E-6	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999997469287439	WITHOUT_CLASSIFICATION	2.5307125605376794E-7	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999862584809	WITHOUT_CLASSIFICATION	1.3741519207260497E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998501666438	WITHOUT_CLASSIFICATION	1.4983335614220655E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998501666438	WITHOUT_CLASSIFICATION	1.4983335614220655E-7	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999851903493	WITHOUT_CLASSIFICATION	1.4809650774915084E-8	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999851903493	WITHOUT_CLASSIFICATION	1.4809650774915084E-8	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999851903493	WITHOUT_CLASSIFICATION	1.4809650774915084E-8	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999997984371237	WITHOUT_CLASSIFICATION	2.015628763582465E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999556808153	WITHOUT_CLASSIFICATION	4.431918459841157E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999556808153	WITHOUT_CLASSIFICATION	4.431918459841157E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999556808153	WITHOUT_CLASSIFICATION	4.431918459841157E-8	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999995479834073	WITHOUT_CLASSIFICATION	4.520165927504099E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999995479834073	WITHOUT_CLASSIFICATION	4.520165927504099E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999995479834073	WITHOUT_CLASSIFICATION	4.520165927504099E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999997469287439	WITHOUT_CLASSIFICATION	2.5307125605376794E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999997469287439	WITHOUT_CLASSIFICATION	2.5307125605376794E-7	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999990062423592	WITHOUT_CLASSIFICATION	9.937576407844971E-7	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999767575838313	WITHOUT_CLASSIFICATION	2.3242416168685754E-5	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999943252524048	WITHOUT_CLASSIFICATION	5.674747595143271E-6	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9932862620477154	WITHOUT_CLASSIFICATION	0.006713737952284615	IMPLEMENTATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9998235097963741	WITHOUT_CLASSIFICATION	1.7649020362594525E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9999986281343157	WITHOUT_CLASSIFICATION	1.3718656842822934E-6	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9999986281343157	WITHOUT_CLASSIFICATION	1.3718656842822934E-6	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999999869467667	WITHOUT_CLASSIFICATION	1.3053233319571988E-8	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999969086283007	WITHOUT_CLASSIFICATION	3.0913716994253496E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999969086283007	WITHOUT_CLASSIFICATION	3.0913716994253496E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999969086283007	WITHOUT_CLASSIFICATION	3.0913716994253496E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999969086283007	WITHOUT_CLASSIFICATION	3.0913716994253496E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999969086283007	WITHOUT_CLASSIFICATION	3.0913716994253496E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999910034378	WITHOUT_CLASSIFICATION	8.9965621332326E-9	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999910034378	WITHOUT_CLASSIFICATION	8.9965621332326E-9	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999910034378	WITHOUT_CLASSIFICATION	8.9965621332326E-9	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999999978009574	WITHOUT_CLASSIFICATION	2.199042650183187E-9	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999987057253074	WITHOUT_CLASSIFICATION	1.2942746926528487E-6	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999997984371237	WITHOUT_CLASSIFICATION	2.015628763582465E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999995479834073	WITHOUT_CLASSIFICATION	4.520165927504099E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999995479834073	WITHOUT_CLASSIFICATION	4.520165927504099E-7	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999969086283007	WITHOUT_CLASSIFICATION	3.0913716994253496E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999969086283007	WITHOUT_CLASSIFICATION	3.0913716994253496E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999910034378	WITHOUT_CLASSIFICATION	8.9965621332326E-9	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999999869467667	WITHOUT_CLASSIFICATION	1.3053233319571988E-8	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999921835122	WITHOUT_CLASSIFICATION	7.81648775153914E-9	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.999999799380082	WITHOUT_CLASSIFICATION	2.0061991792864864E-7	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.999999988099277	WITHOUT_CLASSIFICATION	1.1900722972293461E-8	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.999997451020151	WITHOUT_CLASSIFICATION	2.548979848932775E-6	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999994981083121	WITHOUT_CLASSIFICATION	5.018916878965389E-7	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999998423243583	WITHOUT_CLASSIFICATION	1.5767564165157317E-7	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999854475932597	WITHOUT_CLASSIFICATION	1.455240674033355E-5	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999984273953626	WITHOUT_CLASSIFICATION	1.572604637347234E-6	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999977292723978	WITHOUT_CLASSIFICATION	2.2707276021844674E-6	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999999061361715	WITHOUT_CLASSIFICATION	9.386382845791305E-8	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999968094981421	WITHOUT_CLASSIFICATION	3.190501857981734E-6	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999999836157193	WITHOUT_CLASSIFICATION	1.638428071295059E-8	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999982627216176	WITHOUT_CLASSIFICATION	1.7372783824096008E-6	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9986248641296283	WITHOUT_CLASSIFICATION	0.0013751358703717514	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999989060994285	WITHOUT_CLASSIFICATION	1.0939005714066794E-6	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9996984399751769	WITHOUT_CLASSIFICATION	3.0156002482308226E-4	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999963550605517	WITHOUT_CLASSIFICATION	3.6449394483296254E-6	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999999907225414	WITHOUT_CLASSIFICATION	9.277458611257471E-9	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999397369881857	WITHOUT_CLASSIFICATION	6.026301181432566E-5	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999999818622837	WITHOUT_CLASSIFICATION	1.8137716341509108E-8	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999792473640327	WITHOUT_CLASSIFICATION	2.0752635967347165E-5	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999995069897	WITHOUT_CLASSIFICATION	4.930103057865632E-10	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999992508776	WITHOUT_CLASSIFICATION	7.491223636712418E-10	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999984731111339	WITHOUT_CLASSIFICATION	1.5268888660929426E-6	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999997475585672	WITHOUT_CLASSIFICATION	2.524414327282804E-7	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999995426884352	WITHOUT_CLASSIFICATION	4.5731156482036736E-7	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9999995568278276	WITHOUT_CLASSIFICATION	4.431721723972777E-7	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999999889015229	WITHOUT_CLASSIFICATION	1.1098477152109273E-8	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999961079797468	WITHOUT_CLASSIFICATION	3.892020253233276E-6	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999456450903129	WITHOUT_CLASSIFICATION	5.4354909687117025E-5	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999999987568235	WITHOUT_CLASSIFICATION	1.2431764026012966E-9	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999998783572445	WITHOUT_CLASSIFICATION	1.216427555854989E-7	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999999998325567	WITHOUT_CLASSIFICATION	1.6744333993783002E-10	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999796636605	WITHOUT_CLASSIFICATION	2.0336339446577323E-8	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999921835122	WITHOUT_CLASSIFICATION	7.81648775153914E-9	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999999563455857	WITHOUT_CLASSIFICATION	4.365441434337869E-8	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999999882031283	WITHOUT_CLASSIFICATION	1.1796871750563916E-8	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999999208307304	WITHOUT_CLASSIFICATION	7.91692696195499E-8	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999999053030757	WITHOUT_CLASSIFICATION	9.469692426905198E-8	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999999053030757	WITHOUT_CLASSIFICATION	9.469692426905198E-8	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9999512847820484	WITHOUT_CLASSIFICATION	4.871521795161914E-5	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9999512847820484	WITHOUT_CLASSIFICATION	4.871521795161914E-5	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999999990929488	WITHOUT_CLASSIFICATION	9.070511702820545E-10	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999999057984335	WITHOUT_CLASSIFICATION	9.42015666168134E-8	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999998035166301	WITHOUT_CLASSIFICATION	1.964833698945879E-7	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999983993081334	WITHOUT_CLASSIFICATION	1.6006918666646938E-6	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999999415391081	WITHOUT_CLASSIFICATION	5.846089181626291E-8	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999861476443422	WITHOUT_CLASSIFICATION	1.3852355657747284E-5	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999999680601752	WITHOUT_CLASSIFICATION	3.193982486948689E-8	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999956931456597	WITHOUT_CLASSIFICATION	4.306854340224497E-6	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.99991780112346	WITHOUT_CLASSIFICATION	8.219887654002921E-5	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999945798697	WITHOUT_CLASSIFICATION	5.420130369196134E-9	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999995223613	WITHOUT_CLASSIFICATION	4.77638655470296E-10	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999977598566756	WITHOUT_CLASSIFICATION	2.2401433244709855E-6	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999977598566756	WITHOUT_CLASSIFICATION	2.2401433244709855E-6	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999999996403726	WITHOUT_CLASSIFICATION	3.596273658789515E-10	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999987914769806	WITHOUT_CLASSIFICATION	1.2085230194267715E-6	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999994627932989	WITHOUT_CLASSIFICATION	5.372067011713274E-7	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999994627932989	WITHOUT_CLASSIFICATION	5.372067011713274E-7	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999999934909745	WITHOUT_CLASSIFICATION	6.50902558830801E-9	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999676782502	WITHOUT_CLASSIFICATION	3.2321749930175424E-8	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999967618703356	WITHOUT_CLASSIFICATION	3.238129664413767E-6	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.999999936354547	WITHOUT_CLASSIFICATION	6.364545301020043E-8	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999999838489559	WITHOUT_CLASSIFICATION	1.6151044074404086E-8	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999998875197111	WITHOUT_CLASSIFICATION	1.12480288832811E-7	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9999923216122979	WITHOUT_CLASSIFICATION	7.678387702137293E-6	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999924601603368	WITHOUT_CLASSIFICATION	7.5398396630901554E-6	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9998258885790705	WITHOUT_CLASSIFICATION	1.741114209295004E-4	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9999998335191788	WITHOUT_CLASSIFICATION	1.664808213257585E-7	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999999038342547	WITHOUT_CLASSIFICATION	9.616574524657689E-8	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.999999687779972	WITHOUT_CLASSIFICATION	3.1222002807760936E-7	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999990719732561	WITHOUT_CLASSIFICATION	9.280267439772355E-7	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999991074117898	WITHOUT_CLASSIFICATION	8.925882101871184E-7	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999997648055569	WITHOUT_CLASSIFICATION	2.351944432226899E-7	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999960369198508	WITHOUT_CLASSIFICATION	3.963080149180901E-6	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999985837811689	WITHOUT_CLASSIFICATION	1.416218830976622E-6	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999997185643237	WITHOUT_CLASSIFICATION	2.814356762631011E-7	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999999998906279	WITHOUT_CLASSIFICATION	1.0937198349031257E-10	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999993866699421	WITHOUT_CLASSIFICATION	6.133300578745834E-7	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.5408429342914871	WITHOUT_CLASSIFICATION	0.4591570657085129	IMPLEMENTATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999994566843988	WITHOUT_CLASSIFICATION	5.433156012353466E-7	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.999999042881009	WITHOUT_CLASSIFICATION	9.571189909804362E-7	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999934497107035	WITHOUT_CLASSIFICATION	6.550289296572207E-6	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999986331331386	WITHOUT_CLASSIFICATION	1.366866861314853E-6	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999991844073405	WITHOUT_CLASSIFICATION	8.155926595306628E-7	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9999997668126012	WITHOUT_CLASSIFICATION	2.3318739872365788E-7	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999902092203037	WITHOUT_CLASSIFICATION	9.790779696326713E-6	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999999750043984	WITHOUT_CLASSIFICATION	2.4995601623794098E-8	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.999999999252292	WITHOUT_CLASSIFICATION	7.477081228418953E-10	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.999999998750405	WITHOUT_CLASSIFICATION	1.2495949654461067E-9	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999999984008868	WITHOUT_CLASSIFICATION	1.5991131779123067E-9	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999999646627108	WITHOUT_CLASSIFICATION	3.533728914274375E-8	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999970160695	WITHOUT_CLASSIFICATION	2.983930556061956E-9	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999970160695	WITHOUT_CLASSIFICATION	2.983930556061956E-9	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999999906816553	WITHOUT_CLASSIFICATION	9.318344701284004E-9	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999998836631927	WITHOUT_CLASSIFICATION	1.1633680737249098E-7	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999999975513605	WITHOUT_CLASSIFICATION	2.4486395874711827E-9	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9999990465254164	WITHOUT_CLASSIFICATION	9.534745836734111E-7	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9999996727864272	WITHOUT_CLASSIFICATION	3.2721357276120825E-7	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999993105720033	WITHOUT_CLASSIFICATION	6.894279966652936E-7	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.999997305098633	WITHOUT_CLASSIFICATION	2.6949013669702253E-6	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999987163623713	WITHOUT_CLASSIFICATION	1.283637628782921E-6	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999997142723082	WITHOUT_CLASSIFICATION	2.8572769180604893E-7	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9999995929426017	WITHOUT_CLASSIFICATION	4.0705739831977366E-7	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999999943760098	WITHOUT_CLASSIFICATION	5.623990217634809E-9	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9998779925238516	WITHOUT_CLASSIFICATION	1.2200747614843622E-4	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999095080199091	WITHOUT_CLASSIFICATION	9.049198009091883E-5	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.999998013042394	WITHOUT_CLASSIFICATION	1.986957606031597E-6	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999982432916218	WITHOUT_CLASSIFICATION	1.7567083781246195E-6	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999994769356932	WITHOUT_CLASSIFICATION	5.230643066660808E-7	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999994617193338	WITHOUT_CLASSIFICATION	5.382806661234473E-7	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999962864275882	WITHOUT_CLASSIFICATION	3.7135724117009175E-6	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.997625379265684	WITHOUT_CLASSIFICATION	0.00237462073431598	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999549372044885	WITHOUT_CLASSIFICATION	4.5062795511572946E-5	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999999539733463	WITHOUT_CLASSIFICATION	4.6026653610836246E-8	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999999898656774	WITHOUT_CLASSIFICATION	1.013432265020018E-8	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999978192206049	WITHOUT_CLASSIFICATION	2.1807793951182893E-6	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999996430917774	WITHOUT_CLASSIFICATION	3.569082226242081E-7	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999747023232354	WITHOUT_CLASSIFICATION	2.5297676764597672E-5	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.999774361999628	WITHOUT_CLASSIFICATION	2.2563800037214734E-4	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999994562709	WITHOUT_CLASSIFICATION	5.437291012062749E-10	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999999921982016	WITHOUT_CLASSIFICATION	7.801798356255329E-9	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.999986786035337	WITHOUT_CLASSIFICATION	1.3213964662988953E-5	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999974195172613	WITHOUT_CLASSIFICATION	2.5804827387814023E-6	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999996206025294	WITHOUT_CLASSIFICATION	3.7939747060256204E-7	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9998501851946414	WITHOUT_CLASSIFICATION	1.4981480535856888E-4	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999999480313342	WITHOUT_CLASSIFICATION	5.196866581756387E-8	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.999999991765294	WITHOUT_CLASSIFICATION	8.234706048890687E-9	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999995457450549	WITHOUT_CLASSIFICATION	4.5425494509004873E-7	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999999917697155	WITHOUT_CLASSIFICATION	8.230284447747957E-9	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999999835850563	WITHOUT_CLASSIFICATION	1.6414943765901796E-8	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9999998354051471	WITHOUT_CLASSIFICATION	1.6459485290626423E-7	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9999611605271759	WITHOUT_CLASSIFICATION	3.883947282425842E-5	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999999393168152	WITHOUT_CLASSIFICATION	6.068318484908607E-8	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.999995110979262	WITHOUT_CLASSIFICATION	4.8890207380862506E-6	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999999310952256	WITHOUT_CLASSIFICATION	6.890477447757923E-8	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999999310952256	WITHOUT_CLASSIFICATION	6.890477447757923E-8	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999996816508437	WITHOUT_CLASSIFICATION	3.183491562464146E-7	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999999881796133	WITHOUT_CLASSIFICATION	1.1820386574889477E-8	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999997450628364	WITHOUT_CLASSIFICATION	2.549371635250677E-7	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999936774208673	WITHOUT_CLASSIFICATION	6.322579132758014E-6	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.999998017090947	WITHOUT_CLASSIFICATION	1.982909053055048E-6	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999999999982887	WITHOUT_CLASSIFICATION	1.7114126225480212E-12	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.99999999875346	WITHOUT_CLASSIFICATION	1.246539991718935E-9	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999997368464263	WITHOUT_CLASSIFICATION	2.631535737815008E-7	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999988010713358	WITHOUT_CLASSIFICATION	1.1989286641629586E-6	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999974727807865	WITHOUT_CLASSIFICATION	2.5272192135612058E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.99999999694147	WITHOUT_CLASSIFICATION	3.0585299906226457E-9	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999990907132151	WITHOUT_CLASSIFICATION	9.09286784768858E-7	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.999999938207026	WITHOUT_CLASSIFICATION	6.179297387238894E-8	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.999998003771394	WITHOUT_CLASSIFICATION	1.9962286059739523E-6	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.999999472206148	WITHOUT_CLASSIFICATION	5.277938519714497E-7	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9381265906536748	WITHOUT_CLASSIFICATION	0.06187340934632517	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.999999856964246	WITHOUT_CLASSIFICATION	1.4303575396462022E-7	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999999717446902	WITHOUT_CLASSIFICATION	2.8255309766526512E-8	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999999276896034	WITHOUT_CLASSIFICATION	7.231039663651345E-8	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999706507665181	WITHOUT_CLASSIFICATION	2.934923348191092E-5	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.999999657834492	WITHOUT_CLASSIFICATION	3.421655081336357E-7	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999990072440735	WITHOUT_CLASSIFICATION	9.92755926446418E-7	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.999999608626479	WITHOUT_CLASSIFICATION	3.9137352099876794E-7	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999987560360606	WITHOUT_CLASSIFICATION	1.2439639393356974E-6	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999997859215033	WITHOUT_CLASSIFICATION	2.1407849664855785E-7	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999982444337292	WITHOUT_CLASSIFICATION	1.7555662708356814E-6	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999999999986755	WITHOUT_CLASSIFICATION	1.3244711934827027E-12	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999943917750397	WITHOUT_CLASSIFICATION	5.608224960311228E-6	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999954229029	WITHOUT_CLASSIFICATION	4.577097153209246E-9	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999993084411967	WITHOUT_CLASSIFICATION	6.915588034396163E-7	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.99999999466682	WITHOUT_CLASSIFICATION	5.3331799903856235E-9	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999859717623	WITHOUT_CLASSIFICATION	1.402823763686595E-8	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999993084411967	WITHOUT_CLASSIFICATION	6.915588034396163E-7	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999999517062271	WITHOUT_CLASSIFICATION	4.8293772837554406E-8	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999964160326286	WITHOUT_CLASSIFICATION	3.5839673713878376E-6	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.969611949747134	WITHOUT_CLASSIFICATION	0.030388050252865857	IMPLEMENTATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.8710818518950653	IMPLEMENTATION	0.12891814810493465	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999994477536623	WITHOUT_CLASSIFICATION	5.522463375976339E-7	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999685184	WITHOUT_CLASSIFICATION	3.148164245071308E-11	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999999948980471	WITHOUT_CLASSIFICATION	5.101952897869333E-9	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999850828627088	WITHOUT_CLASSIFICATION	1.4917137291236708E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999711563884	WITHOUT_CLASSIFICATION	2.8843611569220363E-8	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999993866699421	WITHOUT_CLASSIFICATION	6.133300578745834E-7	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999943252524048	WITHOUT_CLASSIFICATION	5.674747595143271E-6	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999997794659	WITHOUT_CLASSIFICATION	2.2053424862424272E-10	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999980664163415	WITHOUT_CLASSIFICATION	1.9335836585200213E-6	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999998290775043	WITHOUT_CLASSIFICATION	1.7092249570852643E-7	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999959912653733	WITHOUT_CLASSIFICATION	4.008734626707747E-6	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9999998611156541	WITHOUT_CLASSIFICATION	1.3888434598268463E-7	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9999941948516108	WITHOUT_CLASSIFICATION	5.805148389202228E-6	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999842580786766	WITHOUT_CLASSIFICATION	1.5741921323336013E-5	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999999736165489	WITHOUT_CLASSIFICATION	2.6383451143684667E-8	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999977527011877	WITHOUT_CLASSIFICATION	2.2472988122657494E-6	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9999960981102051	WITHOUT_CLASSIFICATION	3.9018897948956136E-6	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9999986349895845	WITHOUT_CLASSIFICATION	1.3650104154729716E-6	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9999985020984715	WITHOUT_CLASSIFICATION	1.4979015284450622E-6	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999983585753155	WITHOUT_CLASSIFICATION	1.641424684461448E-6	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999959496795658	WITHOUT_CLASSIFICATION	4.0503204342506305E-6	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999995596009505	WITHOUT_CLASSIFICATION	4.4039904946447183E-7	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999990462214355	WITHOUT_CLASSIFICATION	9.537785644768538E-7	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999999993520702	WITHOUT_CLASSIFICATION	6.479298632023285E-10	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999998017636	WITHOUT_CLASSIFICATION	1.9823641536635347E-10	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999999859870523	WITHOUT_CLASSIFICATION	1.401294760702461E-8	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999999859870523	WITHOUT_CLASSIFICATION	1.401294760702461E-8	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999984889133	WITHOUT_CLASSIFICATION	1.51108671505697E-9	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999998906977	WITHOUT_CLASSIFICATION	1.093023121436679E-10	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999812271262253	WITHOUT_CLASSIFICATION	1.8772873774763467E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5715984430708179	WITHOUT_CLASSIFICATION	0.42840155692918214	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5715984430708179	WITHOUT_CLASSIFICATION	0.42840155692918214	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5715984430708179	WITHOUT_CLASSIFICATION	0.42840155692918214	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5715984430708179	WITHOUT_CLASSIFICATION	0.42840155692918214	IMPLEMENTATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999999987046146	WITHOUT_CLASSIFICATION	1.2953854154966136E-9	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999998560163559	WITHOUT_CLASSIFICATION	1.4398364410920603E-7	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9999999224360917	WITHOUT_CLASSIFICATION	7.756390837122592E-8	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9763710613730466	WITHOUT_CLASSIFICATION	0.023628938626953346	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999777580401855	WITHOUT_CLASSIFICATION	2.2241959814565317E-5	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.999998989947663	WITHOUT_CLASSIFICATION	1.0100523370162824E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999946195947247	WITHOUT_CLASSIFICATION	5.38040527529155E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999946195947247	WITHOUT_CLASSIFICATION	5.38040527529155E-6	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999999982697253	WITHOUT_CLASSIFICATION	1.7302746885737376E-9	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9999992431153336	WITHOUT_CLASSIFICATION	7.568846663439449E-7	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999971401255165	WITHOUT_CLASSIFICATION	2.859874483409505E-6	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9992944698812325	WITHOUT_CLASSIFICATION	7.055301187674898E-4	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.999985121443708	WITHOUT_CLASSIFICATION	1.487855629188303E-5	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999998122042457	WITHOUT_CLASSIFICATION	1.8779575426561757E-7	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999999989498202	WITHOUT_CLASSIFICATION	1.0501799171841323E-9	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999975061619316	WITHOUT_CLASSIFICATION	2.4938380683301253E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999994569212733	WITHOUT_CLASSIFICATION	5.430787266914644E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999994569212733	WITHOUT_CLASSIFICATION	5.430787266914644E-6	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999859717623	WITHOUT_CLASSIFICATION	1.402823763686595E-8	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.999999268910682	WITHOUT_CLASSIFICATION	7.310893179836023E-7	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9999993537569386	WITHOUT_CLASSIFICATION	6.462430613630946E-7	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999972488214699	WITHOUT_CLASSIFICATION	2.7511785300295706E-6	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999999714875	WITHOUT_CLASSIFICATION	2.8512552315204714E-11	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9999985637560534	WITHOUT_CLASSIFICATION	1.436243946531472E-6	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999947363050399	WITHOUT_CLASSIFICATION	5.263694960146651E-6	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999844605229369	WITHOUT_CLASSIFICATION	1.553947706311078E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999999171012472	WITHOUT_CLASSIFICATION	8.289875275427734E-8	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999999171012472	WITHOUT_CLASSIFICATION	8.289875275427734E-8	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999991532310262	WITHOUT_CLASSIFICATION	8.467689738878235E-7	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999999863930127	WITHOUT_CLASSIFICATION	1.3606987306734908E-8	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999999359316925	WITHOUT_CLASSIFICATION	6.40683075475468E-8	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999949761232038	WITHOUT_CLASSIFICATION	5.023876796274032E-6	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999951513374977	WITHOUT_CLASSIFICATION	4.848662502232401E-6	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9999972740744438	WITHOUT_CLASSIFICATION	2.7259255562404896E-6	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.995876400347858	WITHOUT_CLASSIFICATION	0.004123599652142042	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999404933924	WITHOUT_CLASSIFICATION	5.950660764249447E-8	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999404933924	WITHOUT_CLASSIFICATION	5.950660764249447E-8	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999404933924	WITHOUT_CLASSIFICATION	5.950660764249447E-8	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999404933924	WITHOUT_CLASSIFICATION	5.950660764249447E-8	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999994305986	WITHOUT_CLASSIFICATION	5.694014053967945E-10	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999979873045	WITHOUT_CLASSIFICATION	2.0126955387673424E-9	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999837937989556	WITHOUT_CLASSIFICATION	1.6206201044371262E-5	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999991118222603	WITHOUT_CLASSIFICATION	8.88177739689866E-7	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999998947742106	WITHOUT_CLASSIFICATION	1.0522578940606026E-7	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9999992664056142	WITHOUT_CLASSIFICATION	7.335943857775397E-7	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999997842798288	WITHOUT_CLASSIFICATION	2.1572017123505385E-7	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999980251082	WITHOUT_CLASSIFICATION	1.974891752640677E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999980251082	WITHOUT_CLASSIFICATION	1.974891752640677E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999980251082	WITHOUT_CLASSIFICATION	1.974891752640677E-9	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999998650633048	WITHOUT_CLASSIFICATION	1.3493669519454226E-7	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999998974926487	WITHOUT_CLASSIFICATION	1.0250735130017181E-7	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999993180696168	WITHOUT_CLASSIFICATION	6.819303832602233E-7	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999993180696168	WITHOUT_CLASSIFICATION	6.819303832602233E-7	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999985035318165	WITHOUT_CLASSIFICATION	1.4964681835817737E-6	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9681963107650752	WITHOUT_CLASSIFICATION	0.031803689234924805	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999900304742049	WITHOUT_CLASSIFICATION	9.969525795203238E-6	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9999993315197824	WITHOUT_CLASSIFICATION	6.68480217630669E-7	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999919617085	WITHOUT_CLASSIFICATION	8.038291397340435E-9	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999994239597084	WITHOUT_CLASSIFICATION	5.760402915551405E-7	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999900155138	WITHOUT_CLASSIFICATION	9.984486315113672E-9	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999900155138	WITHOUT_CLASSIFICATION	9.984486315113672E-9	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999257523899	WITHOUT_CLASSIFICATION	7.424761002983513E-8	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999991080792	WITHOUT_CLASSIFICATION	8.9192080386872E-10	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999989605740688	WITHOUT_CLASSIFICATION	1.039425931218378E-6	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999871903022859	WITHOUT_CLASSIFICATION	1.2809697714240303E-5	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9818240447260204	WITHOUT_CLASSIFICATION	0.01817595527397969	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999950956522223	WITHOUT_CLASSIFICATION	4.904347777635566E-6	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9999997725655322	WITHOUT_CLASSIFICATION	2.274344677540407E-7	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9997716490962636	WITHOUT_CLASSIFICATION	2.283509037364012E-4	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999999719894311	WITHOUT_CLASSIFICATION	2.8010568856087643E-8	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999997729623401	WITHOUT_CLASSIFICATION	2.270376599247045E-7	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999990916193467	WITHOUT_CLASSIFICATION	9.083806532468922E-7	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999993097191	WITHOUT_CLASSIFICATION	6.902808288931286E-10	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9903438834825808	WITHOUT_CLASSIFICATION	0.009656116517419195	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999998646061177	WITHOUT_CLASSIFICATION	1.3539388223811853E-7	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999994992541997	WITHOUT_CLASSIFICATION	5.007458002970972E-7	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999738887467441	WITHOUT_CLASSIFICATION	2.611125325581784E-5	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999773396334528	WITHOUT_CLASSIFICATION	2.2660366547137308E-5	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999999798551997	WITHOUT_CLASSIFICATION	2.0144800246656777E-8	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999997288086958	WITHOUT_CLASSIFICATION	2.7119130422265124E-7	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999996415325958	WITHOUT_CLASSIFICATION	3.584674041861477E-7	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.99999999901536	WITHOUT_CLASSIFICATION	9.846400730611323E-10	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9930424279785605	WITHOUT_CLASSIFICATION	0.006957572021439631	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999997759342499	WITHOUT_CLASSIFICATION	2.2406575009894048E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999997759342499	WITHOUT_CLASSIFICATION	2.2406575009894048E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999997759342499	WITHOUT_CLASSIFICATION	2.2406575009894048E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999997759342499	WITHOUT_CLASSIFICATION	2.2406575009894048E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999997759342499	WITHOUT_CLASSIFICATION	2.2406575009894048E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999997759342499	WITHOUT_CLASSIFICATION	2.2406575009894048E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999997759342499	WITHOUT_CLASSIFICATION	2.2406575009894048E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999997759342499	WITHOUT_CLASSIFICATION	2.2406575009894048E-6	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999686687613095	WITHOUT_CLASSIFICATION	3.133123869048804E-5	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9999971878711756	WITHOUT_CLASSIFICATION	2.812128824245267E-6	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999975226715903	WITHOUT_CLASSIFICATION	2.4773284096405293E-6	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999999163274074	WITHOUT_CLASSIFICATION	8.367259260866325E-8	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.99999999875346	WITHOUT_CLASSIFICATION	1.246539991718935E-9	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.99999999875346	WITHOUT_CLASSIFICATION	1.246539991718935E-9	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999999766673674	WITHOUT_CLASSIFICATION	2.3332632606095663E-8	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999998237782024	WITHOUT_CLASSIFICATION	1.762217976651796E-7	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999999987773094	WITHOUT_CLASSIFICATION	1.2226907028229073E-9	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999999810144334	WITHOUT_CLASSIFICATION	1.8985566546638214E-8	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999974256472941	WITHOUT_CLASSIFICATION	2.57435270580034E-6	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9999992944644742	WITHOUT_CLASSIFICATION	7.05535525823548E-7	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9999990194849397	WITHOUT_CLASSIFICATION	9.805150603190955E-7	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999089079480465	WITHOUT_CLASSIFICATION	9.109205195350518E-5	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999967202617873	WITHOUT_CLASSIFICATION	3.2797382127351147E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999856702306366	WITHOUT_CLASSIFICATION	1.4329769363513176E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999856702306366	WITHOUT_CLASSIFICATION	1.4329769363513176E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999856702306366	WITHOUT_CLASSIFICATION	1.4329769363513176E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995708252722306	WITHOUT_CLASSIFICATION	4.2917472776939514E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995708252722306	WITHOUT_CLASSIFICATION	4.2917472776939514E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995708252722306	WITHOUT_CLASSIFICATION	4.2917472776939514E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995708252722306	WITHOUT_CLASSIFICATION	4.2917472776939514E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995708252722306	WITHOUT_CLASSIFICATION	4.2917472776939514E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995708252722306	WITHOUT_CLASSIFICATION	4.2917472776939514E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995708252722306	WITHOUT_CLASSIFICATION	4.2917472776939514E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995708252722306	WITHOUT_CLASSIFICATION	4.2917472776939514E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995708252722306	WITHOUT_CLASSIFICATION	4.2917472776939514E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999776237611	WITHOUT_CLASSIFICATION	2.2376238821720004E-8	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999881846428174	WITHOUT_CLASSIFICATION	1.1815357182542635E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999993540190645	WITHOUT_CLASSIFICATION	6.45980935630636E-7	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999999871830741	WITHOUT_CLASSIFICATION	1.2816925959450555E-8	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995708252722306	WITHOUT_CLASSIFICATION	4.2917472776939514E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995708252722306	WITHOUT_CLASSIFICATION	4.2917472776939514E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9995708252722306	WITHOUT_CLASSIFICATION	4.2917472776939514E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999926014134	WITHOUT_CLASSIFICATION	7.398586700383463E-9	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.99999995892121	WITHOUT_CLASSIFICATION	4.1078789972410436E-8	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999238750740755	WITHOUT_CLASSIFICATION	7.612492592444476E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999758033139968	WITHOUT_CLASSIFICATION	2.41966860031088E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999758033139968	WITHOUT_CLASSIFICATION	2.41966860031088E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999997967432597	WITHOUT_CLASSIFICATION	2.0325674024281628E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999981710808715	WITHOUT_CLASSIFICATION	1.8289191284266286E-6	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.999999988484847	WITHOUT_CLASSIFICATION	1.1515153010038034E-8	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999999121053674	WITHOUT_CLASSIFICATION	8.789463257319664E-8	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999961026336469	WITHOUT_CLASSIFICATION	3.897366353125168E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999961026336469	WITHOUT_CLASSIFICATION	3.897366353125168E-6	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999606760247854	WITHOUT_CLASSIFICATION	3.9323975214651644E-5	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.999999964187884	WITHOUT_CLASSIFICATION	3.5812116071514853E-8	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999958494460982	WITHOUT_CLASSIFICATION	4.15055390180175E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999911601525658	WITHOUT_CLASSIFICATION	8.839847434128012E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999911601525658	WITHOUT_CLASSIFICATION	8.839847434128012E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999911601525658	WITHOUT_CLASSIFICATION	8.839847434128012E-6	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999990516666458	WITHOUT_CLASSIFICATION	9.483333542443819E-7	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.999999987907557	WITHOUT_CLASSIFICATION	1.2092443005046391E-8	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.999999987907557	WITHOUT_CLASSIFICATION	1.2092443005046391E-8	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999996256739022	WITHOUT_CLASSIFICATION	3.74326097788666E-7	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999996256739022	WITHOUT_CLASSIFICATION	3.74326097788666E-7	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999999486375184	WITHOUT_CLASSIFICATION	5.136248161473185E-8	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.999930716533634	WITHOUT_CLASSIFICATION	6.928346636605602E-5	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999995680513579	WITHOUT_CLASSIFICATION	4.31948642073412E-7	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999990973519552	WITHOUT_CLASSIFICATION	9.026480446529089E-7	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999989781016793	WITHOUT_CLASSIFICATION	1.0218983208175343E-6	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999999583023593	WITHOUT_CLASSIFICATION	4.169764058104389E-8	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999996794706709	WITHOUT_CLASSIFICATION	3.205293290348176E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998501666438	WITHOUT_CLASSIFICATION	1.4983335614220655E-7	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.999999985253528	WITHOUT_CLASSIFICATION	1.474647201422128E-8	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999999976849	WITHOUT_CLASSIFICATION	2.3151530845072723E-12	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9989783094053463	WITHOUT_CLASSIFICATION	0.0010216905946537427	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999982160802976	WITHOUT_CLASSIFICATION	1.7839197025037035E-6	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999948607846814	WITHOUT_CLASSIFICATION	5.139215318576359E-6	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9998472788619479	WITHOUT_CLASSIFICATION	1.5272113805213082E-4	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999999652592239	WITHOUT_CLASSIFICATION	3.474077606440578E-8	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999999965711994	WITHOUT_CLASSIFICATION	3.428800679185979E-9	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999995816167229	WITHOUT_CLASSIFICATION	4.183832771906764E-7	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999996769268208	WITHOUT_CLASSIFICATION	3.23073179301095E-7	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999999840421436	WITHOUT_CLASSIFICATION	1.5957856349643756E-8	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999986618299429	WITHOUT_CLASSIFICATION	1.3381700570895975E-6	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999997794659	WITHOUT_CLASSIFICATION	2.2053424862424272E-10	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999812770832072	WITHOUT_CLASSIFICATION	1.8722916792812786E-5	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999998648010696	WITHOUT_CLASSIFICATION	1.3519893037499051E-7	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999940194887824	WITHOUT_CLASSIFICATION	5.980511217551203E-6	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999998354087487	WITHOUT_CLASSIFICATION	1.645912513769312E-7	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999995283485308	WITHOUT_CLASSIFICATION	4.7165146926657694E-7	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999988635196618	WITHOUT_CLASSIFICATION	1.136480338153854E-6	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999999997504413	WITHOUT_CLASSIFICATION	2.495587141816102E-10	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999999544257598	WITHOUT_CLASSIFICATION	4.5574240214530316E-8	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999975961196632	WITHOUT_CLASSIFICATION	2.40388033676438E-6	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999929187995309	WITHOUT_CLASSIFICATION	7.081200469088022E-6	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999999974424371	WITHOUT_CLASSIFICATION	2.557562937519644E-9	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999972293802979	WITHOUT_CLASSIFICATION	2.77061970208445E-6	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999999840859728	WITHOUT_CLASSIFICATION	1.5914027166105297E-8	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999988880202004	WITHOUT_CLASSIFICATION	1.1119797995703649E-6	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999999915505967	WITHOUT_CLASSIFICATION	8.449403264598646E-9	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999999916323407	WITHOUT_CLASSIFICATION	8.367659358481934E-9	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999999536352703	WITHOUT_CLASSIFICATION	4.6364729740898404E-8	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999999800534314	WITHOUT_CLASSIFICATION	1.9946568690092255E-8	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999953180556	WITHOUT_CLASSIFICATION	4.681944323796941E-9	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999999879459038	WITHOUT_CLASSIFICATION	1.205409623086766E-8	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999999383154436	WITHOUT_CLASSIFICATION	6.16845563043265E-8	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999998154183783	WITHOUT_CLASSIFICATION	1.8458162173070439E-7	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999999889362367	WITHOUT_CLASSIFICATION	1.1063763283873781E-8	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999993053562131	WITHOUT_CLASSIFICATION	6.946437869528539E-7	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999791990233462	WITHOUT_CLASSIFICATION	2.0800976653826704E-5	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9999998427200603	WITHOUT_CLASSIFICATION	1.572799397341006E-7	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999387398097	WITHOUT_CLASSIFICATION	6.126019032025013E-8	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999998344312745	WITHOUT_CLASSIFICATION	1.6556872545997386E-7	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999989006939903	WITHOUT_CLASSIFICATION	1.0993060096728913E-6	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999994455856311	WITHOUT_CLASSIFICATION	5.544143689133958E-7	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999967205499917	WITHOUT_CLASSIFICATION	3.279450008378179E-6	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999967205499917	WITHOUT_CLASSIFICATION	3.279450008378179E-6	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999999994494413	WITHOUT_CLASSIFICATION	5.505587061718603E-9	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.999999994494413	WITHOUT_CLASSIFICATION	5.505587061718603E-9	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998872527567968	WITHOUT_CLASSIFICATION	1.127472432030965E-4	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998872527567968	WITHOUT_CLASSIFICATION	1.127472432030965E-4	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999964720430864	WITHOUT_CLASSIFICATION	3.527956913658426E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999964720430864	WITHOUT_CLASSIFICATION	3.527956913658426E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.999999664015941	WITHOUT_CLASSIFICATION	3.359840591300741E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.999999664015941	WITHOUT_CLASSIFICATION	3.359840591300741E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.999999664015941	WITHOUT_CLASSIFICATION	3.359840591300741E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.999999664015941	WITHOUT_CLASSIFICATION	3.359840591300741E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.999999664015941	WITHOUT_CLASSIFICATION	3.359840591300741E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.999999664015941	WITHOUT_CLASSIFICATION	3.359840591300741E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.999999664015941	WITHOUT_CLASSIFICATION	3.359840591300741E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.999999664015941	WITHOUT_CLASSIFICATION	3.359840591300741E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.999999664015941	WITHOUT_CLASSIFICATION	3.359840591300741E-7	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999294871291	WITHOUT_CLASSIFICATION	7.051287084915476E-8	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999294871291	WITHOUT_CLASSIFICATION	7.051287084915476E-8	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999294871291	WITHOUT_CLASSIFICATION	7.051287084915476E-8	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999963688086878	WITHOUT_CLASSIFICATION	3.631191312272206E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.99999916130861	WITHOUT_CLASSIFICATION	8.386913900329749E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.99999916130861	WITHOUT_CLASSIFICATION	8.386913900329749E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.99999916130861	WITHOUT_CLASSIFICATION	8.386913900329749E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999993957877263	WITHOUT_CLASSIFICATION	6.042122736685926E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999993957877263	WITHOUT_CLASSIFICATION	6.042122736685926E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999993957877263	WITHOUT_CLASSIFICATION	6.042122736685926E-7	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999983045814668	WITHOUT_CLASSIFICATION	1.695418533260579E-6	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9999990953275864	WITHOUT_CLASSIFICATION	9.04672413628018E-7	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998674374088822	WITHOUT_CLASSIFICATION	1.3256259111790207E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997177016988256	WITHOUT_CLASSIFICATION	2.822983011743856E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997177016988256	WITHOUT_CLASSIFICATION	2.822983011743856E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997177016988256	WITHOUT_CLASSIFICATION	2.822983011743856E-4	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999999787344883	WITHOUT_CLASSIFICATION	2.1265511697561407E-8	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999979225350645	WITHOUT_CLASSIFICATION	2.0774649354915726E-6	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999979225350645	WITHOUT_CLASSIFICATION	2.0774649354915726E-6	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999994412979826	WITHOUT_CLASSIFICATION	5.587020174640036E-7	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999522313876696	WITHOUT_CLASSIFICATION	4.776861233029298E-5	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999522313876696	WITHOUT_CLASSIFICATION	4.776861233029298E-5	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9877381180810938	IMPLEMENTATION	0.012261881918906288	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.8120245652083196	WITHOUT_CLASSIFICATION	0.18797543479168044	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999999333555205	WITHOUT_CLASSIFICATION	6.664447946703622E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998820599443	WITHOUT_CLASSIFICATION	1.1794005573007843E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998820599443	WITHOUT_CLASSIFICATION	1.1794005573007843E-7	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999772717611983	WITHOUT_CLASSIFICATION	2.2728238801627805E-5	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999999999149738	WITHOUT_CLASSIFICATION	8.502615212436709E-11	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999989656031796	WITHOUT_CLASSIFICATION	1.0343968204760957E-6	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999988247029655	WITHOUT_CLASSIFICATION	1.1752970344684783E-6	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999990633849241	WITHOUT_CLASSIFICATION	9.366150758640601E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998820599443	WITHOUT_CLASSIFICATION	1.1794005573007843E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998820599443	WITHOUT_CLASSIFICATION	1.1794005573007843E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998820599443	WITHOUT_CLASSIFICATION	1.1794005573007843E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998820599443	WITHOUT_CLASSIFICATION	1.1794005573007843E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998820599443	WITHOUT_CLASSIFICATION	1.1794005573007843E-7	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999991306689052	WITHOUT_CLASSIFICATION	8.693310947858266E-7	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999962391529772	WITHOUT_CLASSIFICATION	3.760847022841298E-6	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999982429258	WITHOUT_CLASSIFICATION	1.7570741560664445E-9	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999996255402104	WITHOUT_CLASSIFICATION	3.7445978967447816E-7	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999998462353613	WITHOUT_CLASSIFICATION	1.5376463866391656E-7	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9987410113350232	WITHOUT_CLASSIFICATION	0.0012589886649767745	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999998564924669	WITHOUT_CLASSIFICATION	1.4350753317672508E-7	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999998623963391	WITHOUT_CLASSIFICATION	1.3760366091791963E-7	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999997017715012	WITHOUT_CLASSIFICATION	2.982284988002671E-7	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999998758349481	WITHOUT_CLASSIFICATION	1.2416505179631394E-7	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999996458998159	WITHOUT_CLASSIFICATION	3.5410018395337884E-7	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999990072440735	WITHOUT_CLASSIFICATION	9.92755926446418E-7	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999999687595096	WITHOUT_CLASSIFICATION	3.124049041687704E-8	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999740872915831	WITHOUT_CLASSIFICATION	2.5912708416848443E-5	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.999999613389761	WITHOUT_CLASSIFICATION	3.866102390025611E-7	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.995064326289759	WITHOUT_CLASSIFICATION	0.004935673710240882	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999983373519047	WITHOUT_CLASSIFICATION	1.6626480952544892E-6	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999363174736	WITHOUT_CLASSIFICATION	6.368252631688938E-8	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999998235915494	WITHOUT_CLASSIFICATION	1.7640845071856417E-7	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999922901655	WITHOUT_CLASSIFICATION	7.70983463308381E-9	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999970590525681	WITHOUT_CLASSIFICATION	2.940947431956754E-6	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999999926598594	WITHOUT_CLASSIFICATION	7.340140583366484E-9	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999974727807865	WITHOUT_CLASSIFICATION	2.5272192135612058E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995381550615	WITHOUT_CLASSIFICATION	4.618449384760256E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995381550615	WITHOUT_CLASSIFICATION	4.618449384760256E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995381550615	WITHOUT_CLASSIFICATION	4.618449384760256E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995381550615	WITHOUT_CLASSIFICATION	4.618449384760256E-7	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999998647053152	WITHOUT_CLASSIFICATION	1.3529468475781892E-7	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9997520818749669	WITHOUT_CLASSIFICATION	2.4791812503307636E-4	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999996752043238	WITHOUT_CLASSIFICATION	3.2479567621502803E-7	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999996752043238	WITHOUT_CLASSIFICATION	3.2479567621502803E-7	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999969408385	WITHOUT_CLASSIFICATION	3.0591615940759596E-9	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999902711975	WITHOUT_CLASSIFICATION	9.728802578580025E-9	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999579113064	WITHOUT_CLASSIFICATION	4.2088693681519644E-8	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999983700805	WITHOUT_CLASSIFICATION	1.6299195116728495E-9	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999999662545049	WITHOUT_CLASSIFICATION	3.3745495066757483E-8	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999965471011228	WITHOUT_CLASSIFICATION	3.452898877244714E-6	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.999999468465178	WITHOUT_CLASSIFICATION	5.315348220016949E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999996494310733	WITHOUT_CLASSIFICATION	3.5056892655965554E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999996494310733	WITHOUT_CLASSIFICATION	3.5056892655965554E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999996494310733	WITHOUT_CLASSIFICATION	3.5056892655965554E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999996494310733	WITHOUT_CLASSIFICATION	3.5056892655965554E-7	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999859606512	WITHOUT_CLASSIFICATION	1.403934889173294E-8	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999999088959	WITHOUT_CLASSIFICATION	9.110418628615705E-11	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999999088959	WITHOUT_CLASSIFICATION	9.110418628615705E-11	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999999088959	WITHOUT_CLASSIFICATION	9.110418628615705E-11	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999997209524218	WITHOUT_CLASSIFICATION	2.7904757816555974E-7	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999999680073431	WITHOUT_CLASSIFICATION	3.1992656798524095E-8	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999578434619413	WITHOUT_CLASSIFICATION	4.215653805877727E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5715984430708179	WITHOUT_CLASSIFICATION	0.42840155692918214	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5715984430708179	WITHOUT_CLASSIFICATION	0.42840155692918214	IMPLEMENTATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999977408852	WITHOUT_CLASSIFICATION	2.259114723648081E-9	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999771920672512	WITHOUT_CLASSIFICATION	2.2807932748788238E-5	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999999239831014	WITHOUT_CLASSIFICATION	7.601689844813768E-8	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999999239831014	WITHOUT_CLASSIFICATION	7.601689844813768E-8	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999999687900676	WITHOUT_CLASSIFICATION	3.120993240039917E-8	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999999687900676	WITHOUT_CLASSIFICATION	3.120993240039917E-8	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999999728288782	WITHOUT_CLASSIFICATION	2.7171121828236718E-8	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999910242979508	WITHOUT_CLASSIFICATION	8.975702049248232E-6	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999999916910858	WITHOUT_CLASSIFICATION	8.308914159764335E-9	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999988813670311	WITHOUT_CLASSIFICATION	1.1186329688483544E-6	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999994501962952	WITHOUT_CLASSIFICATION	5.498037048039517E-7	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999994118453269	WITHOUT_CLASSIFICATION	5.881546730025972E-7	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999969015693	WITHOUT_CLASSIFICATION	3.0984307995604406E-9	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999999996859616	WITHOUT_CLASSIFICATION	3.1403830137253827E-10	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999999997596157	WITHOUT_CLASSIFICATION	2.4038429887829137E-10	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999965889785936	WITHOUT_CLASSIFICATION	3.4110214064181823E-6	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999965889785936	WITHOUT_CLASSIFICATION	3.4110214064181823E-6	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999995763034534	WITHOUT_CLASSIFICATION	4.236965465949191E-7	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999995763034534	WITHOUT_CLASSIFICATION	4.236965465949191E-7	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999777119072564	WITHOUT_CLASSIFICATION	2.2288092743606222E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999981801440201	WITHOUT_CLASSIFICATION	1.819855979955055E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999980875278495	WITHOUT_CLASSIFICATION	1.9124721505780135E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998202967785	WITHOUT_CLASSIFICATION	1.7970322159541221E-7	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998202967785	WITHOUT_CLASSIFICATION	1.7970322159541221E-7	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998202967785	WITHOUT_CLASSIFICATION	1.7970322159541221E-7	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9999987132947155	WITHOUT_CLASSIFICATION	1.286705284589384E-6	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9999994039674079	WITHOUT_CLASSIFICATION	5.960325920301569E-7	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9999991595913639	WITHOUT_CLASSIFICATION	8.404086362188832E-7	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9999997775053058	WITHOUT_CLASSIFICATION	2.2249469419476113E-7	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9999994732359384	WITHOUT_CLASSIFICATION	5.267640615177511E-7	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999995656384417	WITHOUT_CLASSIFICATION	4.343615582939326E-7	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9999980793257347	WITHOUT_CLASSIFICATION	1.9206742653521864E-6	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.999998170757808	WITHOUT_CLASSIFICATION	1.8292421920766037E-6	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9998419261494399	WITHOUT_CLASSIFICATION	1.580738505600471E-4	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999937407701018	WITHOUT_CLASSIFICATION	6.259229898134429E-6	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999867808951362	WITHOUT_CLASSIFICATION	1.321910486372444E-5	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999983111108613	WITHOUT_CLASSIFICATION	1.6888891387136702E-6	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999999982280066	WITHOUT_CLASSIFICATION	1.7719933664249487E-9	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5715984430708179	WITHOUT_CLASSIFICATION	0.42840155692918214	IMPLEMENTATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999989782775343	WITHOUT_CLASSIFICATION	1.021722465730336E-6	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999735640817251	WITHOUT_CLASSIFICATION	2.6435918274924833E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999999859870523	WITHOUT_CLASSIFICATION	1.401294760702461E-8	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999968617410897	WITHOUT_CLASSIFICATION	3.1382589102988573E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999968617410897	WITHOUT_CLASSIFICATION	3.1382589102988573E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999968617410897	WITHOUT_CLASSIFICATION	3.1382589102988573E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999968617410897	WITHOUT_CLASSIFICATION	3.1382589102988573E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999968617410897	WITHOUT_CLASSIFICATION	3.1382589102988573E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999978401333589	WITHOUT_CLASSIFICATION	2.1598666411080288E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999968617410897	WITHOUT_CLASSIFICATION	3.1382589102988573E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999968617410897	WITHOUT_CLASSIFICATION	3.1382589102988573E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999968617410897	WITHOUT_CLASSIFICATION	3.1382589102988573E-6	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999989878865879	WITHOUT_CLASSIFICATION	1.01211341207221E-6	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9991713029426392	WITHOUT_CLASSIFICATION	8.286970573609017E-4	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999854291532961	WITHOUT_CLASSIFICATION	1.4570846703799974E-5	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999999806768934	WITHOUT_CLASSIFICATION	1.9323106618592593E-8	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999999021039048	WITHOUT_CLASSIFICATION	9.78960951686815E-8	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999976158562041	WITHOUT_CLASSIFICATION	2.3841437960187815E-6	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.999999702245158	WITHOUT_CLASSIFICATION	2.9775484199997964E-7	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.999999741904792	WITHOUT_CLASSIFICATION	2.5809520797578777E-7	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999985608692441	WITHOUT_CLASSIFICATION	1.439130755859019E-6	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999985608692441	WITHOUT_CLASSIFICATION	1.439130755859019E-6	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9999994118251037	WITHOUT_CLASSIFICATION	5.881748964459567E-7	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9999992168420302	WITHOUT_CLASSIFICATION	7.831579698414976E-7	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999975986303548	WITHOUT_CLASSIFICATION	2.4013696452013845E-6	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9999995779930974	WITHOUT_CLASSIFICATION	4.2200690263622343E-7	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999997613171342	WITHOUT_CLASSIFICATION	2.386828658274741E-7	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9999994316698059	WITHOUT_CLASSIFICATION	5.683301940998329E-7	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9999992920269523	WITHOUT_CLASSIFICATION	7.079730476958922E-7	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999992191153244	WITHOUT_CLASSIFICATION	7.808846755033394E-7	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999993791027264	WITHOUT_CLASSIFICATION	6.208972735246364E-7	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9999994961407377	WITHOUT_CLASSIFICATION	5.038592622038485E-7	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.999999299922732	WITHOUT_CLASSIFICATION	7.000772679747895E-7	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9999992953732906	WITHOUT_CLASSIFICATION	7.046267094851988E-7	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999991413135477	WITHOUT_CLASSIFICATION	8.586864523445305E-7	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999990878443082	WITHOUT_CLASSIFICATION	9.121556917021173E-7	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9999989946587038	WITHOUT_CLASSIFICATION	1.005341296185475E-6	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9999988806048863	WITHOUT_CLASSIFICATION	1.1193951137211962E-6	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999989060426335	WITHOUT_CLASSIFICATION	1.0939573664834413E-6	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9999980425482414	WITHOUT_CLASSIFICATION	1.957451758614148E-6	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9999993313492069	WITHOUT_CLASSIFICATION	6.686507929776595E-7	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.999999677905813	WITHOUT_CLASSIFICATION	3.2209418697543E-7	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9999996789166095	WITHOUT_CLASSIFICATION	3.210833904745237E-7	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999996896225541	WITHOUT_CLASSIFICATION	3.103774457816605E-7	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9999975463288144	WITHOUT_CLASSIFICATION	2.4536711856319813E-6	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9999989664662374	WITHOUT_CLASSIFICATION	1.0335337625580128E-6	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9999991690827271	WITHOUT_CLASSIFICATION	8.309172729263908E-7	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999989787003127	WITHOUT_CLASSIFICATION	1.0212996872246243E-6	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9999990739846919	WITHOUT_CLASSIFICATION	9.260153080734337E-7	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9999988213579453	WITHOUT_CLASSIFICATION	1.1786420548421158E-6	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999991263555239	WITHOUT_CLASSIFICATION	8.736444760376159E-7	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999993558411882	WITHOUT_CLASSIFICATION	6.441588119227945E-7	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999993436877425	WITHOUT_CLASSIFICATION	6.563122574145224E-7	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999986466182144	WITHOUT_CLASSIFICATION	1.353381785611987E-6	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.999998581350575	WITHOUT_CLASSIFICATION	1.4186494249776094E-6	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9999982682531694	WITHOUT_CLASSIFICATION	1.7317468307251228E-6	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9999990019308461	WITHOUT_CLASSIFICATION	9.980691538626963E-7	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999995089279341	WITHOUT_CLASSIFICATION	4.910720659061881E-7	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9999985984785946	WITHOUT_CLASSIFICATION	1.4015214053656875E-6	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999974304417806	WITHOUT_CLASSIFICATION	2.5695582195014635E-6	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.9999984994719144	WITHOUT_CLASSIFICATION	1.5005280855809439E-6	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9999989093828092	WITHOUT_CLASSIFICATION	1.090617190801974E-6	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9999992382119903	WITHOUT_CLASSIFICATION	7.617880096046397E-7	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999994319712885	WITHOUT_CLASSIFICATION	5.680287114065567E-7	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.999998836323282	WITHOUT_CLASSIFICATION	1.1636767179750661E-6	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9999982903428006	WITHOUT_CLASSIFICATION	1.7096571992659412E-6	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.999997998251729	WITHOUT_CLASSIFICATION	2.0017482710009962E-6	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.999997503776933	WITHOUT_CLASSIFICATION	2.496223067007415E-6	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999982558150532	WITHOUT_CLASSIFICATION	1.744184946705837E-6	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9999987654034442	WITHOUT_CLASSIFICATION	1.2345965557823407E-6	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9999991255923065	WITHOUT_CLASSIFICATION	8.744076933706112E-7	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999985988714843	WITHOUT_CLASSIFICATION	1.4011285156228996E-6	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9999989117025851	WITHOUT_CLASSIFICATION	1.0882974148584238E-6	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9999991733368531	WITHOUT_CLASSIFICATION	8.26663147013662E-7	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.999998963698087	WITHOUT_CLASSIFICATION	1.0363019128899266E-6	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.999998751238981	WITHOUT_CLASSIFICATION	1.2487610190070557E-6	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.999998751238981	WITHOUT_CLASSIFICATION	1.2487610190070557E-6	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999980619787951	WITHOUT_CLASSIFICATION	1.9380212048410463E-6	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9999992646502794	WITHOUT_CLASSIFICATION	7.353497205460971E-7	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9999985415938714	WITHOUT_CLASSIFICATION	1.4584061286631718E-6	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9999991758052394	WITHOUT_CLASSIFICATION	8.241947604856273E-7	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9999950478700147	WITHOUT_CLASSIFICATION	4.952129985377482E-6	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999987911826174	WITHOUT_CLASSIFICATION	1.2088173826691888E-6	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999984224861185	WITHOUT_CLASSIFICATION	1.5775138815493985E-6	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9999985625695557	WITHOUT_CLASSIFICATION	1.4374304443382263E-6	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999992642836617	WITHOUT_CLASSIFICATION	7.357163382684156E-7	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9999980071182056	WITHOUT_CLASSIFICATION	1.992881794289054E-6	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.999976409714855	WITHOUT_CLASSIFICATION	2.359028514494929E-5	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.999976409714855	WITHOUT_CLASSIFICATION	2.359028514494929E-5	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999996074833191	WITHOUT_CLASSIFICATION	3.925166809446754E-7	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999912055095731	WITHOUT_CLASSIFICATION	8.794490426923324E-6	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999415563582779	WITHOUT_CLASSIFICATION	5.844364172211991E-5	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999995685779	WITHOUT_CLASSIFICATION	4.3142208051249004E-10	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999938630850833	WITHOUT_CLASSIFICATION	6.13691491670717E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999938630850833	WITHOUT_CLASSIFICATION	6.13691491670717E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999938630850833	WITHOUT_CLASSIFICATION	6.13691491670717E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999938630850833	WITHOUT_CLASSIFICATION	6.13691491670717E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999117073994302	WITHOUT_CLASSIFICATION	8.829260056973805E-5	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.999998663422868	WITHOUT_CLASSIFICATION	1.3365771319697998E-6	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9999990174669301	WITHOUT_CLASSIFICATION	9.825330698846053E-7	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.999999378116045	WITHOUT_CLASSIFICATION	6.218839550094885E-7	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.9999982370644647	WITHOUT_CLASSIFICATION	1.7629355353399013E-6	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9999990970736139	WITHOUT_CLASSIFICATION	9.029263861363412E-7	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9999982878686857	WITHOUT_CLASSIFICATION	1.7121313142142207E-6	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9999997334178539	WITHOUT_CLASSIFICATION	2.665821461485257E-7	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9999996749362376	WITHOUT_CLASSIFICATION	3.2506376235068044E-7	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9999988892164626	WITHOUT_CLASSIFICATION	1.1107835374280952E-6	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9999992616481317	WITHOUT_CLASSIFICATION	7.383518683528179E-7	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9999996021570207	WITHOUT_CLASSIFICATION	3.978429792770129E-7	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9999986716043876	WITHOUT_CLASSIFICATION	1.3283956124127835E-6	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9999993310834826	WITHOUT_CLASSIFICATION	6.689165174155827E-7	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9999991521981013	WITHOUT_CLASSIFICATION	8.478018986756198E-7	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9999996736627972	WITHOUT_CLASSIFICATION	3.2633720290012816E-7	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9999992918539795	WITHOUT_CLASSIFICATION	7.081460204599727E-7	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9999984464965797	WITHOUT_CLASSIFICATION	1.553503420332286E-6	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9999993484599393	WITHOUT_CLASSIFICATION	6.515400607220203E-7	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9999991453023449	WITHOUT_CLASSIFICATION	8.546976551752106E-7	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9999995975780874	WITHOUT_CLASSIFICATION	4.024219125451567E-7	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9999994996282915	WITHOUT_CLASSIFICATION	5.003717084403565E-7	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9999994056696239	WITHOUT_CLASSIFICATION	5.943303762466112E-7	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9999990801202858	WITHOUT_CLASSIFICATION	9.19879714125422E-7	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9999996191469211	WITHOUT_CLASSIFICATION	3.808530788535465E-7	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9999992042093255	WITHOUT_CLASSIFICATION	7.957906745581512E-7	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9999996782995871	WITHOUT_CLASSIFICATION	3.217004129122512E-7	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9999976327157396	WITHOUT_CLASSIFICATION	2.367284260399785E-6	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9999990494972077	WITHOUT_CLASSIFICATION	9.505027923369016E-7	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9999986345611516	WITHOUT_CLASSIFICATION	1.3654388484106244E-6	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9999978093845436	WITHOUT_CLASSIFICATION	2.1906154564112324E-6	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9999992424332812	WITHOUT_CLASSIFICATION	7.57566718875243E-7	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9999976161742523	WITHOUT_CLASSIFICATION	2.3838257476478657E-6	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9999988069147774	WITHOUT_CLASSIFICATION	1.193085222545569E-6	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.999998163744457	WITHOUT_CLASSIFICATION	1.8362555430289786E-6	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9999983920638627	WITHOUT_CLASSIFICATION	1.6079361373235522E-6	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9999984904661742	WITHOUT_CLASSIFICATION	1.5095338258551248E-6	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9999983041027783	WITHOUT_CLASSIFICATION	1.6958972216379144E-6	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.999999250024018	WITHOUT_CLASSIFICATION	7.499759818954495E-7	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9999985306006459	WITHOUT_CLASSIFICATION	1.469399354080308E-6	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.9999993194308108	WITHOUT_CLASSIFICATION	6.805691891498032E-7	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9999984515076422	WITHOUT_CLASSIFICATION	1.5484923578247085E-6	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9999983891148829	WITHOUT_CLASSIFICATION	1.6108851170306344E-6	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9999986374286115	WITHOUT_CLASSIFICATION	1.3625713884948183E-6	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9999976877911559	WITHOUT_CLASSIFICATION	2.3122088440608305E-6	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9999963804322592	WITHOUT_CLASSIFICATION	3.619567740745733E-6	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9999984181229412	WITHOUT_CLASSIFICATION	1.5818770588259245E-6	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9999978292458724	WITHOUT_CLASSIFICATION	2.170754127528601E-6	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9999983760638248	WITHOUT_CLASSIFICATION	1.623936175242318E-6	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9999989744771431	WITHOUT_CLASSIFICATION	1.0255228568952624E-6	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9999983915870108	WITHOUT_CLASSIFICATION	1.6084129893546812E-6	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9999985580750226	WITHOUT_CLASSIFICATION	1.4419249774546077E-6	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9999984666699948	WITHOUT_CLASSIFICATION	1.5333300051731038E-6	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9999975447379063	WITHOUT_CLASSIFICATION	2.4552620937737854E-6	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.999996741527487	WITHOUT_CLASSIFICATION	3.258472512995651E-6	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9999984967934274	WITHOUT_CLASSIFICATION	1.503206572581007E-6	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9999989961782944	WITHOUT_CLASSIFICATION	1.0038217056530072E-6	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9999990370253206	WITHOUT_CLASSIFICATION	9.62974679472674E-7	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9999994561114367	WITHOUT_CLASSIFICATION	5.438885631849542E-7	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999999488265059	WITHOUT_CLASSIFICATION	5.117349416875029E-8	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999996534865984	WITHOUT_CLASSIFICATION	3.465134016362602E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996390768359	WITHOUT_CLASSIFICATION	3.6092316417703414E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996390768359	WITHOUT_CLASSIFICATION	3.6092316417703414E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996390768359	WITHOUT_CLASSIFICATION	3.6092316417703414E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996390768359	WITHOUT_CLASSIFICATION	3.6092316417703414E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996390768359	WITHOUT_CLASSIFICATION	3.6092316417703414E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996390768359	WITHOUT_CLASSIFICATION	3.6092316417703414E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999996390768359	WITHOUT_CLASSIFICATION	3.6092316417703414E-7	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999955915264382	WITHOUT_CLASSIFICATION	4.408473561780867E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999955915264382	WITHOUT_CLASSIFICATION	4.408473561780867E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999955915264382	WITHOUT_CLASSIFICATION	4.408473561780867E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999955915264382	WITHOUT_CLASSIFICATION	4.408473561780867E-6	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999935540398086	WITHOUT_CLASSIFICATION	6.445960191383409E-6	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999935540398086	WITHOUT_CLASSIFICATION	6.445960191383409E-6	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999999990588616	WITHOUT_CLASSIFICATION	9.411383928871223E-10	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999275040745	WITHOUT_CLASSIFICATION	7.249592554107462E-8	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999275040745	WITHOUT_CLASSIFICATION	7.249592554107462E-8	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999999509384851	WITHOUT_CLASSIFICATION	4.906151476685659E-8	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999923110082227	WITHOUT_CLASSIFICATION	7.688991777273942E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999032517103	WITHOUT_CLASSIFICATION	9.67482896731228E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999032517103	WITHOUT_CLASSIFICATION	9.67482896731228E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999032517103	WITHOUT_CLASSIFICATION	9.67482896731228E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999032517103	WITHOUT_CLASSIFICATION	9.67482896731228E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999032517103	WITHOUT_CLASSIFICATION	9.67482896731228E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999032517103	WITHOUT_CLASSIFICATION	9.67482896731228E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999032517103	WITHOUT_CLASSIFICATION	9.67482896731228E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999670360751	WITHOUT_CLASSIFICATION	3.2963924984618136E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999729843689	WITHOUT_CLASSIFICATION	2.7015631096390183E-7	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9994199148793004	WITHOUT_CLASSIFICATION	5.800851206997271E-4	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9994199148793004	WITHOUT_CLASSIFICATION	5.800851206997271E-4	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999822639105	WITHOUT_CLASSIFICATION	1.7736089432483422E-8	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999993169003963	WITHOUT_CLASSIFICATION	6.830996036042708E-7	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999993169003963	WITHOUT_CLASSIFICATION	6.830996036042708E-7	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999982375515533	WITHOUT_CLASSIFICATION	1.7624484467758447E-6	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.976925052865835	WITHOUT_CLASSIFICATION	0.02307494713416502	IMPLEMENTATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.999997294718416	WITHOUT_CLASSIFICATION	2.705281583909262E-6	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999777499777747	WITHOUT_CLASSIFICATION	2.2250022225375324E-5	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999999728519732	WITHOUT_CLASSIFICATION	2.714802680670998E-8	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.999998397906718	WITHOUT_CLASSIFICATION	1.60209328195349E-6	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9998531118331143	WITHOUT_CLASSIFICATION	1.4688816688558534E-4	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999998210187436	WITHOUT_CLASSIFICATION	1.789812563414543E-7	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999427753532	WITHOUT_CLASSIFICATION	5.722464685981372E-8	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999981718848822	WITHOUT_CLASSIFICATION	1.8281151178411793E-6	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999999830364465	WITHOUT_CLASSIFICATION	1.69635534083745E-8	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999936479726073	WITHOUT_CLASSIFICATION	6.352027392704701E-6	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999999865752	WITHOUT_CLASSIFICATION	1.342472289444596E-11	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9998703474610584	WITHOUT_CLASSIFICATION	1.2965253894161894E-4	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9998710784210907	WITHOUT_CLASSIFICATION	1.289215789092504E-4	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9996627443979689	WITHOUT_CLASSIFICATION	3.372556020311426E-4	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999939782427	WITHOUT_CLASSIFICATION	6.021757302702659E-9	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.999702650410475	WITHOUT_CLASSIFICATION	2.9734958952497373E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999840327955051	WITHOUT_CLASSIFICATION	1.5967204494897457E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999840327955051	WITHOUT_CLASSIFICATION	1.5967204494897457E-5	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999932527458734	WITHOUT_CLASSIFICATION	6.747254126742096E-6	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999556808153	WITHOUT_CLASSIFICATION	4.431918459841157E-8	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999941961516503	WITHOUT_CLASSIFICATION	5.803848349726681E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999969086283007	WITHOUT_CLASSIFICATION	3.0913716994253496E-6	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999854475932597	WITHOUT_CLASSIFICATION	1.455240674033355E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999854475932597	WITHOUT_CLASSIFICATION	1.455240674033355E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999854475932597	WITHOUT_CLASSIFICATION	1.455240674033355E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999968094981421	WITHOUT_CLASSIFICATION	3.190501857981734E-6	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999792473640327	WITHOUT_CLASSIFICATION	2.0752635967347165E-5	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9998750619216289	WITHOUT_CLASSIFICATION	1.249380783711351E-4	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9998164700961709	WITHOUT_CLASSIFICATION	1.8352990382914815E-4	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999999810311178	WITHOUT_CLASSIFICATION	1.896888218396745E-8	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999840994523893	WITHOUT_CLASSIFICATION	1.5900547610674187E-5	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999989240905353	WITHOUT_CLASSIFICATION	1.0759094646773167E-6	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999945798697	WITHOUT_CLASSIFICATION	5.420130369196134E-9	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.99991780112346	WITHOUT_CLASSIFICATION	8.219887654002921E-5	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999980886170768	WITHOUT_CLASSIFICATION	1.91138292316332E-6	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9999963910089253	WITHOUT_CLASSIFICATION	3.6089910747326853E-6	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999928670162737	WITHOUT_CLASSIFICATION	7.1329837262870414E-6	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.5408429342914871	WITHOUT_CLASSIFICATION	0.4591570657085129	IMPLEMENTATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999952931730518	WITHOUT_CLASSIFICATION	4.706826948252291E-6	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.999999999927316	WITHOUT_CLASSIFICATION	7.26839469471852E-11	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999999999638243	WITHOUT_CLASSIFICATION	3.6175796574498075E-11	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999986744935228	WITHOUT_CLASSIFICATION	1.3255064772022615E-6	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999996206025294	WITHOUT_CLASSIFICATION	3.7939747060256204E-7	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999747749620348	WITHOUT_CLASSIFICATION	2.5225037965179916E-5	IMPLEMENTATION
