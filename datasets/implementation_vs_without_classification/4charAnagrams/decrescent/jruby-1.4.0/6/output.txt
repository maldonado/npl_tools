// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.9902304028539429	WITHOUT_CLASSIFICATION	0.009769597146057083	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.5950904378914442	IMPLEMENTATION	0.40490956210855583	WITHOUT_CLASSIFICATION
// TODO: Someday, enable.	IMPLEMENTATION	0.6809482228070339	IMPLEMENTATION	0.3190517771929661	WITHOUT_CLASSIFICATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.632395680510566	IMPLEMENTATION	0.3676043194894339	WITHOUT_CLASSIFICATION
// TODO: non-strict option	IMPLEMENTATION	0.7189479404829039	WITHOUT_CLASSIFICATION	0.28105205951709605	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.7518765097158115	IMPLEMENTATION	0.24812349028418837	WITHOUT_CLASSIFICATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.7686536305121501	IMPLEMENTATION	0.23134636948785	WITHOUT_CLASSIFICATION
// TODO: rescan code range ?	IMPLEMENTATION	0.9202224457376971	WITHOUT_CLASSIFICATION	0.07977755426230287	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.9202224457376971	WITHOUT_CLASSIFICATION	0.07977755426230287	IMPLEMENTATION
// TODO: pass this in?	IMPLEMENTATION	0.7437266173188	IMPLEMENTATION	0.25627338268120003	WITHOUT_CLASSIFICATION
// FIXME: Pass block down?	IMPLEMENTATION	0.993522868315117	WITHOUT_CLASSIFICATION	0.006477131684882975	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.9883619101592656	IMPLEMENTATION	0.011638089840734483	WITHOUT_CLASSIFICATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.9040960161409305	IMPLEMENTATION	0.0959039838590695	WITHOUT_CLASSIFICATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.9987980692138946	WITHOUT_CLASSIFICATION	0.0012019307861054443	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.9514988899160236	IMPLEMENTATION	0.04850111008397649	WITHOUT_CLASSIFICATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.8082619787357841	IMPLEMENTATION	0.1917380212642159	WITHOUT_CLASSIFICATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.6176722898459349	WITHOUT_CLASSIFICATION	0.38232771015406497	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.62464778794156	WITHOUT_CLASSIFICATION	0.37535221205843994	IMPLEMENTATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.5632500096828253	WITHOUT_CLASSIFICATION	0.43674999031717465	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.9844998522712229	WITHOUT_CLASSIFICATION	0.015500147728776973	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.8706386726270756	IMPLEMENTATION	0.1293613273729244	WITHOUT_CLASSIFICATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.6118472467967937	WITHOUT_CLASSIFICATION	0.3881527532032064	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.6233324309788194	WITHOUT_CLASSIFICATION	0.37666756902118065	IMPLEMENTATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.8891108185910493	WITHOUT_CLASSIFICATION	0.11088918140895063	IMPLEMENTATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.9970296230945923	IMPLEMENTATION	0.00297037690540773	WITHOUT_CLASSIFICATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.6486819809962786	WITHOUT_CLASSIFICATION	0.3513180190037214	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.5661409578193656	IMPLEMENTATION	0.43385904218063454	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9978949582123451	IMPLEMENTATION	0.0021050417876549597	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.5661409578193656	IMPLEMENTATION	0.43385904218063454	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9978949582123451	IMPLEMENTATION	0.0021050417876549597	WITHOUT_CLASSIFICATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.761836832732305	WITHOUT_CLASSIFICATION	0.23816316726769501	IMPLEMENTATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.9530695762516682	WITHOUT_CLASSIFICATION	0.046930423748331764	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.9986395241240451	IMPLEMENTATION	0.0013604758759549322	WITHOUT_CLASSIFICATION
// TODO: make threadsafe	IMPLEMENTATION	0.995925717394636	IMPLEMENTATION	0.004074282605364017	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9636482911591471	WITHOUT_CLASSIFICATION	0.03635170884085284	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9636482911591471	WITHOUT_CLASSIFICATION	0.03635170884085284	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.8215123107627784	IMPLEMENTATION	0.17848768923722158	WITHOUT_CLASSIFICATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.9558497081605043	IMPLEMENTATION	0.04415029183949565	WITHOUT_CLASSIFICATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.9650538980069121	WITHOUT_CLASSIFICATION	0.03494610199308796	IMPLEMENTATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.9969498923100516	WITHOUT_CLASSIFICATION	0.003050107689948445	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9213202086460734	IMPLEMENTATION	0.07867979135392654	WITHOUT_CLASSIFICATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.9170768991887647	IMPLEMENTATION	0.08292310081123531	WITHOUT_CLASSIFICATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.9969710116271665	IMPLEMENTATION	0.0030289883728335013	WITHOUT_CLASSIFICATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.8763602278998831	WITHOUT_CLASSIFICATION	0.12363977210011681	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.787389908236931	WITHOUT_CLASSIFICATION	0.21261009176306903	IMPLEMENTATION
// TODO: add trace call?	IMPLEMENTATION	0.9006108327678621	IMPLEMENTATION	0.09938916723213796	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9964882716727924	WITHOUT_CLASSIFICATION	0.003511728327207517	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.5718553635042819	WITHOUT_CLASSIFICATION	0.42814463649571816	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.6719268483931198	WITHOUT_CLASSIFICATION	0.3280731516068803	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.9895933586822737	IMPLEMENTATION	0.010406641317726312	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9964882716727924	WITHOUT_CLASSIFICATION	0.003511728327207517	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.9998679420235778	WITHOUT_CLASSIFICATION	1.3205797642221184E-4	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.5964029868104139	WITHOUT_CLASSIFICATION	0.4035970131895861	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.9462573886430884	IMPLEMENTATION	0.05374261135691154	WITHOUT_CLASSIFICATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.9373821826059046	IMPLEMENTATION	0.0626178173940955	WITHOUT_CLASSIFICATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.9951470483706283	WITHOUT_CLASSIFICATION	0.004852951629371736	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.9796542986152377	WITHOUT_CLASSIFICATION	0.02034570138476226	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.7345775551912934	IMPLEMENTATION	0.26542244480870664	WITHOUT_CLASSIFICATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.8110953962821549	WITHOUT_CLASSIFICATION	0.1889046037178451	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9974427652191725	WITHOUT_CLASSIFICATION	0.0025572347808274667	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.9783383757098842	WITHOUT_CLASSIFICATION	0.02166162429011576	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9953061854250935	IMPLEMENTATION	0.004693814574906486	WITHOUT_CLASSIFICATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9953061854250935	IMPLEMENTATION	0.004693814574906486	WITHOUT_CLASSIFICATION
// TODO: validate port as numeric	IMPLEMENTATION	0.8853775919043301	WITHOUT_CLASSIFICATION	0.11462240809566991	IMPLEMENTATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9999783703405737	IMPLEMENTATION	2.162965942636359E-5	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.8071032353790817	WITHOUT_CLASSIFICATION	0.19289676462091834	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.5144788356760165	IMPLEMENTATION	0.4855211643239837	WITHOUT_CLASSIFICATION
// TODO: deal with varargs	IMPLEMENTATION	0.5144788356760165	IMPLEMENTATION	0.4855211643239837	WITHOUT_CLASSIFICATION
// TODO: other reserved names?	IMPLEMENTATION	0.9971644502775447	IMPLEMENTATION	0.0028355497224552867	WITHOUT_CLASSIFICATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.97583194011017	IMPLEMENTATION	0.02416805988982995	WITHOUT_CLASSIFICATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.8734868650731031	IMPLEMENTATION	0.1265131349268969	WITHOUT_CLASSIFICATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.9961240384977648	WITHOUT_CLASSIFICATION	0.0038759615022351864	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.569879693012625	IMPLEMENTATION	0.4301203069873751	WITHOUT_CLASSIFICATION
// TODO: call ruby method	IMPLEMENTATION	0.569879693012625	IMPLEMENTATION	0.4301203069873751	WITHOUT_CLASSIFICATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.9899686746483548	IMPLEMENTATION	0.010031325351645134	WITHOUT_CLASSIFICATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9267013993099089	WITHOUT_CLASSIFICATION	0.07329860069009113	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9999997981782992	WITHOUT_CLASSIFICATION	2.0182170073291894E-7	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.9922523321562635	IMPLEMENTATION	0.007747667843736462	WITHOUT_CLASSIFICATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.93552392075709	IMPLEMENTATION	0.06447607924290993	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.9957623707495911	IMPLEMENTATION	0.004237629250408872	WITHOUT_CLASSIFICATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.8111700592686277	IMPLEMENTATION	0.1888299407313722	WITHOUT_CLASSIFICATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.927638027057162	IMPLEMENTATION	0.07236197294283792	WITHOUT_CLASSIFICATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.6277507913396704	WITHOUT_CLASSIFICATION	0.3722492086603296	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.6277507913396704	WITHOUT_CLASSIFICATION	0.3722492086603296	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.9409812636949927	WITHOUT_CLASSIFICATION	0.059018736305007355	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.9170209769355575	WITHOUT_CLASSIFICATION	0.0829790230644425	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9826509144070721	WITHOUT_CLASSIFICATION	0.017349085592927957	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9826509144070721	WITHOUT_CLASSIFICATION	0.017349085592927957	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.9814766682414203	WITHOUT_CLASSIFICATION	0.018523331758579595	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.7238821519909746	IMPLEMENTATION	0.2761178480090255	WITHOUT_CLASSIFICATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.7238821519909746	IMPLEMENTATION	0.2761178480090255	WITHOUT_CLASSIFICATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.7238821519909746	IMPLEMENTATION	0.2761178480090255	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.9565587417445903	WITHOUT_CLASSIFICATION	0.04344125825540971	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.9565587417445903	WITHOUT_CLASSIFICATION	0.04344125825540971	IMPLEMENTATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.5115268033578896	WITHOUT_CLASSIFICATION	0.48847319664211025	IMPLEMENTATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.999919195511694	WITHOUT_CLASSIFICATION	8.080448830603187E-5	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.5518274559211759	WITHOUT_CLASSIFICATION	0.44817254407882406	IMPLEMENTATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9999716913415915	IMPLEMENTATION	2.830865840849327E-5	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9997448304752947	IMPLEMENTATION	2.5516952470522883E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9997448304752947	IMPLEMENTATION	2.5516952470522883E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9997448304752947	IMPLEMENTATION	2.5516952470522883E-4	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9213202086460734	IMPLEMENTATION	0.07867979135392654	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9213202086460734	IMPLEMENTATION	0.07867979135392654	WITHOUT_CLASSIFICATION
// TODO: check for ascii string	IMPLEMENTATION	0.9070569226439125	WITHOUT_CLASSIFICATION	0.0929430773560876	IMPLEMENTATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.583285894428126	IMPLEMENTATION	0.4167141055718741	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9636482911591471	WITHOUT_CLASSIFICATION	0.03635170884085284	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9636482911591471	WITHOUT_CLASSIFICATION	0.03635170884085284	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.8865481627777773	IMPLEMENTATION	0.11345183722222274	WITHOUT_CLASSIFICATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.9657944155642061	WITHOUT_CLASSIFICATION	0.03420558443579383	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.8082619787357841	IMPLEMENTATION	0.1917380212642159	WITHOUT_CLASSIFICATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9920058162553889	WITHOUT_CLASSIFICATION	0.007994183744611093	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.9902234251091415	IMPLEMENTATION	0.009776574890858494	WITHOUT_CLASSIFICATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.9975946299897526	IMPLEMENTATION	0.0024053700102474175	WITHOUT_CLASSIFICATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.9794476861234284	WITHOUT_CLASSIFICATION	0.020552313876571655	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999992600837988	WITHOUT_CLASSIFICATION	7.399162012647113E-7	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.999999661309535	WITHOUT_CLASSIFICATION	3.386904650261002E-7	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999980807698428	WITHOUT_CLASSIFICATION	1.91923015723182E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999980807698428	WITHOUT_CLASSIFICATION	1.91923015723182E-6	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999688185979299	WITHOUT_CLASSIFICATION	3.118140207019144E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999688185979299	WITHOUT_CLASSIFICATION	3.118140207019144E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999333347168181	WITHOUT_CLASSIFICATION	6.666528318185996E-5	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999963992169039	WITHOUT_CLASSIFICATION	3.6007830960098683E-6	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9999998375123079	WITHOUT_CLASSIFICATION	1.62487692169662E-7	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999998685020064	WITHOUT_CLASSIFICATION	1.3149799366610592E-7	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999406737015861	WITHOUT_CLASSIFICATION	5.9326298413856404E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999406737015861	WITHOUT_CLASSIFICATION	5.9326298413856404E-5	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9999988829262892	WITHOUT_CLASSIFICATION	1.1170737107150654E-6	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998765099983088	WITHOUT_CLASSIFICATION	1.234900016913027E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998765099983088	WITHOUT_CLASSIFICATION	1.234900016913027E-4	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9999993931048352	WITHOUT_CLASSIFICATION	6.068951648550108E-7	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999997743587915	WITHOUT_CLASSIFICATION	2.2564120852520544E-7	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999941856116106	WITHOUT_CLASSIFICATION	5.8143883894212726E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999941856116106	WITHOUT_CLASSIFICATION	5.8143883894212726E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999941856116106	WITHOUT_CLASSIFICATION	5.8143883894212726E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999941856116106	WITHOUT_CLASSIFICATION	5.8143883894212726E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999941856116106	WITHOUT_CLASSIFICATION	5.8143883894212726E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999941856116106	WITHOUT_CLASSIFICATION	5.8143883894212726E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999941856116106	WITHOUT_CLASSIFICATION	5.8143883894212726E-6	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999555613902932	WITHOUT_CLASSIFICATION	4.4438609706860924E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999555613902932	WITHOUT_CLASSIFICATION	4.4438609706860924E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999555613902932	WITHOUT_CLASSIFICATION	4.4438609706860924E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999555613902932	WITHOUT_CLASSIFICATION	4.4438609706860924E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999555613902932	WITHOUT_CLASSIFICATION	4.4438609706860924E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999555613902932	WITHOUT_CLASSIFICATION	4.4438609706860924E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999555613902932	WITHOUT_CLASSIFICATION	4.4438609706860924E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998447888178257	WITHOUT_CLASSIFICATION	1.5521118217428663E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998447888178257	WITHOUT_CLASSIFICATION	1.5521118217428663E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998447888178257	WITHOUT_CLASSIFICATION	1.5521118217428663E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998447888178257	WITHOUT_CLASSIFICATION	1.5521118217428663E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998447888178257	WITHOUT_CLASSIFICATION	1.5521118217428663E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998447888178257	WITHOUT_CLASSIFICATION	1.5521118217428663E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999154296529709	WITHOUT_CLASSIFICATION	8.457034702917548E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999154296529709	WITHOUT_CLASSIFICATION	8.457034702917548E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999154296529709	WITHOUT_CLASSIFICATION	8.457034702917548E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999154296529709	WITHOUT_CLASSIFICATION	8.457034702917548E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999154296529709	WITHOUT_CLASSIFICATION	8.457034702917548E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999154296529709	WITHOUT_CLASSIFICATION	8.457034702917548E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998239683339029	WITHOUT_CLASSIFICATION	1.7603166609718096E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998239683339029	WITHOUT_CLASSIFICATION	1.7603166609718096E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998239683339029	WITHOUT_CLASSIFICATION	1.7603166609718096E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998239683339029	WITHOUT_CLASSIFICATION	1.7603166609718096E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998239683339029	WITHOUT_CLASSIFICATION	1.7603166609718096E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998239683339029	WITHOUT_CLASSIFICATION	1.7603166609718096E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998239683339029	WITHOUT_CLASSIFICATION	1.7603166609718096E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998202891553017	WITHOUT_CLASSIFICATION	1.7971084469826267E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998202891553017	WITHOUT_CLASSIFICATION	1.7971084469826267E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998202891553017	WITHOUT_CLASSIFICATION	1.7971084469826267E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998202891553017	WITHOUT_CLASSIFICATION	1.7971084469826267E-4	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999970413842193	WITHOUT_CLASSIFICATION	2.9586157807753282E-6	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999970413842193	WITHOUT_CLASSIFICATION	2.9586157807753282E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999942301221	WITHOUT_CLASSIFICATION	5.769877901698481E-8	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9999998852067905	WITHOUT_CLASSIFICATION	1.1479320946693676E-7	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.999998620152928	WITHOUT_CLASSIFICATION	1.379847072093907E-6	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999997376005558	WITHOUT_CLASSIFICATION	2.6239944413490415E-7	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.999993080155931	WITHOUT_CLASSIFICATION	6.919844069018256E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999979250103783	WITHOUT_CLASSIFICATION	2.0749896216986963E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999979250103783	WITHOUT_CLASSIFICATION	2.0749896216986963E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999979250103783	WITHOUT_CLASSIFICATION	2.0749896216986963E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999979250103783	WITHOUT_CLASSIFICATION	2.0749896216986963E-6	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999929892904732	WITHOUT_CLASSIFICATION	7.010709526805128E-6	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999923347263359	WITHOUT_CLASSIFICATION	7.665273664225433E-6	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999989725474581	WITHOUT_CLASSIFICATION	1.0274525419516835E-6	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.999999423150254	WITHOUT_CLASSIFICATION	5.768497460382662E-7	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.999999038865482	WITHOUT_CLASSIFICATION	9.6113451800227E-7	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999999309461166	WITHOUT_CLASSIFICATION	6.90538833364828E-8	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999988459654867	WITHOUT_CLASSIFICATION	1.1540345133346005E-6	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999999981291241	WITHOUT_CLASSIFICATION	1.8708759513575093E-9	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999974797412	WITHOUT_CLASSIFICATION	2.520258695485675E-9	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.999999254473153	WITHOUT_CLASSIFICATION	7.455268469450667E-7	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999995260391823	WITHOUT_CLASSIFICATION	4.73960817755664E-7	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999962776390182	WITHOUT_CLASSIFICATION	3.722360981690674E-6	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999494629110295	WITHOUT_CLASSIFICATION	5.053708897041424E-5	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.999999916364059	WITHOUT_CLASSIFICATION	8.363594097009575E-8	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999999398505198	WITHOUT_CLASSIFICATION	6.014948012668602E-8	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999999242700253	WITHOUT_CLASSIFICATION	7.572997474482131E-8	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9991379538591327	WITHOUT_CLASSIFICATION	8.620461408673045E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999979250103783	WITHOUT_CLASSIFICATION	2.0749896216986963E-6	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999994165660446	WITHOUT_CLASSIFICATION	5.834339554193971E-7	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999999877043939	WITHOUT_CLASSIFICATION	1.2295606106962813E-8	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999997842412395	WITHOUT_CLASSIFICATION	2.1575876055565922E-7	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9998760101702621	WITHOUT_CLASSIFICATION	1.2398982973795282E-4	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.999868623061942	WITHOUT_CLASSIFICATION	1.3137693805796103E-4	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999999698966997	WITHOUT_CLASSIFICATION	3.010330024228337E-8	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999999948007879	WITHOUT_CLASSIFICATION	5.199211979890005E-9	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999998483783719	WITHOUT_CLASSIFICATION	1.5162162817631891E-7	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999953582785976	WITHOUT_CLASSIFICATION	4.641721402412694E-6	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999996610983288	WITHOUT_CLASSIFICATION	3.3890167123226466E-7	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999999648720784	WITHOUT_CLASSIFICATION	3.512792153396037E-8	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999998087993478	WITHOUT_CLASSIFICATION	1.9120065225374076E-7	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999996629731298	WITHOUT_CLASSIFICATION	3.3702687018390893E-7	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999666158897935	WITHOUT_CLASSIFICATION	3.338411020651465E-5	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999974056468522	WITHOUT_CLASSIFICATION	2.594353147687022E-6	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999998131471615	WITHOUT_CLASSIFICATION	1.868528385145469E-7	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9999999298467082	WITHOUT_CLASSIFICATION	7.015329181058397E-8	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.999999951565466	WITHOUT_CLASSIFICATION	4.843453392434221E-8	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999984688460107	WITHOUT_CLASSIFICATION	1.5311539892870357E-6	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999999940168267	WITHOUT_CLASSIFICATION	5.983173393928051E-9	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9998391186378157	WITHOUT_CLASSIFICATION	1.6088136218428357E-4	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999993216219321	WITHOUT_CLASSIFICATION	6.78378067912216E-7	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.999999986809469	WITHOUT_CLASSIFICATION	1.3190531077196316E-8	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9998386585037704	WITHOUT_CLASSIFICATION	1.613414962294926E-4	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999994025894605	WITHOUT_CLASSIFICATION	5.974105394334044E-7	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9999997489535192	WITHOUT_CLASSIFICATION	2.5104648073650415E-7	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999971057661775	WITHOUT_CLASSIFICATION	2.894233822436919E-6	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999938313260125	WITHOUT_CLASSIFICATION	6.168673987555273E-6	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999999903290597	WITHOUT_CLASSIFICATION	9.670940191511097E-9	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.999999848966925	WITHOUT_CLASSIFICATION	1.5103307500925628E-7	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999999878280922	WITHOUT_CLASSIFICATION	1.2171907839435836E-8	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.999999810702682	WITHOUT_CLASSIFICATION	1.8929731797741802E-7	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999999968380294	WITHOUT_CLASSIFICATION	3.16197060639846E-9	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999999411324539	WITHOUT_CLASSIFICATION	5.8867546182465014E-8	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999948783649334	WITHOUT_CLASSIFICATION	5.121635066541054E-6	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.999999939293993	WITHOUT_CLASSIFICATION	6.070600696284804E-8	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999998135893401	WITHOUT_CLASSIFICATION	1.864106598452664E-7	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999999999972792	WITHOUT_CLASSIFICATION	2.720828713489814E-12	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999994352579171	WITHOUT_CLASSIFICATION	5.64742082928946E-7	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999984136585245	WITHOUT_CLASSIFICATION	1.5863414754056076E-6	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999999768026293	WITHOUT_CLASSIFICATION	2.3197370754333544E-8	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999995602738473	WITHOUT_CLASSIFICATION	4.397261527041501E-7	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999996140903221	WITHOUT_CLASSIFICATION	3.8590967791587977E-7	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9133585939040161	WITHOUT_CLASSIFICATION	0.0866414060959839	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9133585939040161	WITHOUT_CLASSIFICATION	0.0866414060959839	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9479918317813976	WITHOUT_CLASSIFICATION	0.05200816821860255	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999989775961199	WITHOUT_CLASSIFICATION	1.0224038801800587E-6	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999968883558329	WITHOUT_CLASSIFICATION	3.111644167053428E-6	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999999447957932	WITHOUT_CLASSIFICATION	5.520420669804893E-8	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999910321296811	WITHOUT_CLASSIFICATION	8.967870318788812E-6	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999991736251963	WITHOUT_CLASSIFICATION	8.263748037582504E-7	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9999999271146663	WITHOUT_CLASSIFICATION	7.288533367876899E-8	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9999978377574282	WITHOUT_CLASSIFICATION	2.162242571734867E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999995602738473	WITHOUT_CLASSIFICATION	4.397261527041501E-7	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999999994763985	WITHOUT_CLASSIFICATION	5.236013871087451E-10	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999877728268116	WITHOUT_CLASSIFICATION	1.222717318830959E-5	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9998542317556546	WITHOUT_CLASSIFICATION	1.457682443453436E-4	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999996591258341	WITHOUT_CLASSIFICATION	3.4087416593300084E-7	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.999999872969382	WITHOUT_CLASSIFICATION	1.2703061806610665E-7	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999842250993	WITHOUT_CLASSIFICATION	1.5774900635922395E-8	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999842250993	WITHOUT_CLASSIFICATION	1.5774900635922395E-8	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999842250993	WITHOUT_CLASSIFICATION	1.5774900635922395E-8	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999999464569954	WITHOUT_CLASSIFICATION	5.35430045968353E-8	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999998339830073	WITHOUT_CLASSIFICATION	1.660169926897201E-7	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.999999999539204	WITHOUT_CLASSIFICATION	4.6079598353127693E-10	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.999994018249713	WITHOUT_CLASSIFICATION	5.981750287051847E-6	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999995340688775	WITHOUT_CLASSIFICATION	4.6593112240729774E-7	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999999928351172	WITHOUT_CLASSIFICATION	7.164882788201715E-9	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999451224109056	WITHOUT_CLASSIFICATION	5.4877589094372326E-5	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999967887213	WITHOUT_CLASSIFICATION	3.211278708962124E-9	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999996576543688	WITHOUT_CLASSIFICATION	3.4234563110485005E-7	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999996576543688	WITHOUT_CLASSIFICATION	3.4234563110485005E-7	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999999374224551	WITHOUT_CLASSIFICATION	6.257754493446088E-8	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999966733352132	WITHOUT_CLASSIFICATION	3.326664786867466E-6	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999999590308681	WITHOUT_CLASSIFICATION	4.096913196787475E-8	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999999590308681	WITHOUT_CLASSIFICATION	4.096913196787475E-8	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.999999896230662	WITHOUT_CLASSIFICATION	1.0376933808485149E-7	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.999999964796002	WITHOUT_CLASSIFICATION	3.5203998069886645E-8	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999939477260347	WITHOUT_CLASSIFICATION	6.05227396538307E-6	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999999998133711	WITHOUT_CLASSIFICATION	1.8662881489370734E-10	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999975886202251	WITHOUT_CLASSIFICATION	2.4113797749537617E-6	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.9999997559873847	WITHOUT_CLASSIFICATION	2.4401261537883663E-7	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999992565994847	WITHOUT_CLASSIFICATION	7.434005151288452E-7	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.999999101020042	WITHOUT_CLASSIFICATION	8.98979958113582E-7	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9999917355010994	WITHOUT_CLASSIFICATION	8.264498900541526E-6	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.999999885190118	WITHOUT_CLASSIFICATION	1.148098820365848E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999995602738473	WITHOUT_CLASSIFICATION	4.397261527041501E-7	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999999938394555	WITHOUT_CLASSIFICATION	6.160544425791275E-9	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999984368754	WITHOUT_CLASSIFICATION	1.5631246557686502E-9	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999978847893629	WITHOUT_CLASSIFICATION	2.115210637182734E-6	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.998057915151585	WITHOUT_CLASSIFICATION	0.0019420848484149739	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999997784295543	WITHOUT_CLASSIFICATION	2.2157044557518738E-7	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999941871018606	WITHOUT_CLASSIFICATION	5.8128981393918374E-6	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999995954742876	WITHOUT_CLASSIFICATION	4.0452571237519117E-7	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.999999547305992	WITHOUT_CLASSIFICATION	4.5269400794086756E-7	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999999597047161	WITHOUT_CLASSIFICATION	4.029528392682927E-8	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9998971053936729	WITHOUT_CLASSIFICATION	1.0289460632701028E-4	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999994886915912	WITHOUT_CLASSIFICATION	5.113084087927816E-7	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999999998126953	WITHOUT_CLASSIFICATION	1.8730465956742155E-10	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999953099718325	WITHOUT_CLASSIFICATION	4.690028167470734E-6	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999996356000866	WITHOUT_CLASSIFICATION	3.643999133042451E-7	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999999979226839	WITHOUT_CLASSIFICATION	2.0773160812753693E-9	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.999998555604222	WITHOUT_CLASSIFICATION	1.4443957779013967E-6	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999986427804816	WITHOUT_CLASSIFICATION	1.3572195185377077E-6	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9999999836794631	WITHOUT_CLASSIFICATION	1.6320537003028092E-8	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999999516167656	WITHOUT_CLASSIFICATION	4.838323449527333E-8	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999995712993321	WITHOUT_CLASSIFICATION	4.2870066786030103E-7	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999998817267858	WITHOUT_CLASSIFICATION	1.1827321414367265E-7	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999999889110662	WITHOUT_CLASSIFICATION	1.1088933724770993E-8	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999998824438775	WITHOUT_CLASSIFICATION	1.1755612250547871E-7	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999999369673017	WITHOUT_CLASSIFICATION	6.303269825685964E-8	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999999968401939	WITHOUT_CLASSIFICATION	3.1598060977930454E-9	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.999925561052241	WITHOUT_CLASSIFICATION	7.443894775912734E-5	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999957918362132	WITHOUT_CLASSIFICATION	4.208163786679858E-6	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999999002026205	WITHOUT_CLASSIFICATION	9.979737943613338E-8	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999998971658536	WITHOUT_CLASSIFICATION	1.0283414653066017E-7	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999998481309957	WITHOUT_CLASSIFICATION	1.5186900428852535E-7	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999999983075306	WITHOUT_CLASSIFICATION	1.6924693832284526E-9	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9999999475097651	WITHOUT_CLASSIFICATION	5.249023500122967E-8	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999985313625152	WITHOUT_CLASSIFICATION	1.4686374849144244E-6	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999996481083615	WITHOUT_CLASSIFICATION	3.518916384438541E-7	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999979275028102	WITHOUT_CLASSIFICATION	2.0724971898489836E-6	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999921896606333	WITHOUT_CLASSIFICATION	7.810339366655354E-6	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999994538312301	WITHOUT_CLASSIFICATION	5.461687699792057E-7	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999961813172689	WITHOUT_CLASSIFICATION	3.818682731058828E-6	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.999994222166219	WITHOUT_CLASSIFICATION	5.777833781031846E-6	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999999395971995	WITHOUT_CLASSIFICATION	6.040280047932707E-8	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999999742259345	WITHOUT_CLASSIFICATION	2.577406551198854E-8	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9999999500580098	WITHOUT_CLASSIFICATION	4.994199016153823E-8	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999999965174118	WITHOUT_CLASSIFICATION	3.4825881037467856E-9	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999999457571711	WITHOUT_CLASSIFICATION	5.4242828904433455E-8	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9999978540305502	WITHOUT_CLASSIFICATION	2.1459694497305887E-6	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9999999420018927	WITHOUT_CLASSIFICATION	5.799810721180216E-8	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9999999624459887	WITHOUT_CLASSIFICATION	3.755401126937141E-8	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999718140663496	WITHOUT_CLASSIFICATION	2.8185933650478512E-5	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999999778927954	WITHOUT_CLASSIFICATION	2.2107204574154563E-8	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999986418913056	WITHOUT_CLASSIFICATION	1.3581086943702105E-6	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999194358108524	WITHOUT_CLASSIFICATION	8.056418914758981E-5	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999905451719355	WITHOUT_CLASSIFICATION	9.45482806447283E-6	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999991110895606	WITHOUT_CLASSIFICATION	8.889104393804463E-7	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999999615308452	WITHOUT_CLASSIFICATION	3.846915473225475E-8	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999889389860636	WITHOUT_CLASSIFICATION	1.106101393639766E-5	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999995312109637	WITHOUT_CLASSIFICATION	4.6878903631275464E-7	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.999999921171563	WITHOUT_CLASSIFICATION	7.882843697328878E-8	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999995203240554	WITHOUT_CLASSIFICATION	4.79675944624765E-7	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999955789900761	WITHOUT_CLASSIFICATION	4.42100992398557E-6	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9999990814795071	WITHOUT_CLASSIFICATION	9.185204929221949E-7	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999992274656283	WITHOUT_CLASSIFICATION	7.725343716286977E-7	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999992274656283	WITHOUT_CLASSIFICATION	7.725343716286977E-7	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999981710906427	WITHOUT_CLASSIFICATION	1.8289093572485499E-6	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999981710906427	WITHOUT_CLASSIFICATION	1.8289093572485499E-6	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999998525995049	WITHOUT_CLASSIFICATION	1.4740049508299952E-7	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999998525995049	WITHOUT_CLASSIFICATION	1.4740049508299952E-7	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999994455390869	WITHOUT_CLASSIFICATION	5.544609130224398E-7	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999994455390869	WITHOUT_CLASSIFICATION	5.544609130224398E-7	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9999999704172109	WITHOUT_CLASSIFICATION	2.9582789196746874E-8	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9999819955176383	WITHOUT_CLASSIFICATION	1.800448236161647E-5	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999994113146544	WITHOUT_CLASSIFICATION	5.886853455816583E-7	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.999999998552741	WITHOUT_CLASSIFICATION	1.4472590299078581E-9	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999999224049881	WITHOUT_CLASSIFICATION	7.759501185791412E-8	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999999621072798	WITHOUT_CLASSIFICATION	3.789272010684011E-8	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999959422492822	WITHOUT_CLASSIFICATION	4.057750717713606E-6	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999999780034485	WITHOUT_CLASSIFICATION	2.1996551453352608E-8	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999999456108664	WITHOUT_CLASSIFICATION	5.438913358859508E-8	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999999835316826	WITHOUT_CLASSIFICATION	1.6468317438591967E-8	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.999997002389514	WITHOUT_CLASSIFICATION	2.997610486123682E-6	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.999999966552196	WITHOUT_CLASSIFICATION	3.344780407063118E-8	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999997842539391	WITHOUT_CLASSIFICATION	2.157460608012254E-7	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999997635597944	WITHOUT_CLASSIFICATION	2.3644020576570055E-7	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.999999968679075	WITHOUT_CLASSIFICATION	3.132092494874577E-8	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999999427138128	WITHOUT_CLASSIFICATION	5.7286187246952884E-8	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999884154546536	WITHOUT_CLASSIFICATION	1.1584545346427067E-5	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999999786911197	WITHOUT_CLASSIFICATION	2.1308880395114887E-8	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999999908584728	WITHOUT_CLASSIFICATION	9.141527081629561E-9	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999436945339113	WITHOUT_CLASSIFICATION	5.630546608872065E-5	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999997955987971	WITHOUT_CLASSIFICATION	2.0440120275200188E-7	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999999086391373	WITHOUT_CLASSIFICATION	9.13608625663109E-8	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999513466700088	WITHOUT_CLASSIFICATION	4.865332999109457E-5	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999999915274029	WITHOUT_CLASSIFICATION	8.47259710742113E-9	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999998938813057	WITHOUT_CLASSIFICATION	1.0611869430138373E-7	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999999952755908	WITHOUT_CLASSIFICATION	4.724409144528683E-9	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999986117104677	WITHOUT_CLASSIFICATION	1.3882895323968915E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999964033796216	WITHOUT_CLASSIFICATION	3.5966203783352866E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999964033796216	WITHOUT_CLASSIFICATION	3.5966203783352866E-6	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999999623257745	WITHOUT_CLASSIFICATION	3.767422547675845E-8	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9999992622015259	WITHOUT_CLASSIFICATION	7.377984741098813E-7	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9999975723118817	WITHOUT_CLASSIFICATION	2.4276881182094157E-6	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999999996912942	WITHOUT_CLASSIFICATION	3.087058839848085E-10	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999999837723077	WITHOUT_CLASSIFICATION	1.622769236056256E-8	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999998803597941	WITHOUT_CLASSIFICATION	1.196402057987138E-7	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999973018046991	WITHOUT_CLASSIFICATION	2.69819530089251E-6	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999973018046991	WITHOUT_CLASSIFICATION	2.69819530089251E-6	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999999254229969	WITHOUT_CLASSIFICATION	7.457700313029469E-8	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9724871796750806	WITHOUT_CLASSIFICATION	0.027512820324919484	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999999345996459	WITHOUT_CLASSIFICATION	6.54003540793885E-8	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999999345996459	WITHOUT_CLASSIFICATION	6.54003540793885E-8	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999999948520499	WITHOUT_CLASSIFICATION	5.147950081629369E-9	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999995208383019	WITHOUT_CLASSIFICATION	4.791616981499666E-7	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999995208383019	WITHOUT_CLASSIFICATION	4.791616981499666E-7	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999511589859402	WITHOUT_CLASSIFICATION	4.8841014059751426E-5	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999511589859402	WITHOUT_CLASSIFICATION	4.8841014059751426E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999996253848009	WITHOUT_CLASSIFICATION	3.746151990736628E-7	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999996253848009	WITHOUT_CLASSIFICATION	3.746151990736628E-7	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.999999875798325	WITHOUT_CLASSIFICATION	1.242016749741852E-7	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999990176962689	WITHOUT_CLASSIFICATION	9.823037311317951E-7	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999998981700462	WITHOUT_CLASSIFICATION	1.0182995371750065E-7	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999999998988743	WITHOUT_CLASSIFICATION	1.01125677776347E-10	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999999994152372	WITHOUT_CLASSIFICATION	5.847627877434241E-10	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999999474858172	WITHOUT_CLASSIFICATION	5.251418288695332E-8	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999999639694409	WITHOUT_CLASSIFICATION	3.603055913500639E-8	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999999904673237	WITHOUT_CLASSIFICATION	9.532676294719818E-9	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999999639694409	WITHOUT_CLASSIFICATION	3.603055913500639E-8	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9997009662919897	WITHOUT_CLASSIFICATION	2.990337080103945E-4	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999984307428903	WITHOUT_CLASSIFICATION	1.5692571096510517E-6	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.999999794022302	WITHOUT_CLASSIFICATION	2.0597769803432266E-7	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999929837624295	WITHOUT_CLASSIFICATION	7.0162375704709964E-6	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999999418588461	WITHOUT_CLASSIFICATION	5.8141153828280674E-8	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999151305458471	WITHOUT_CLASSIFICATION	8.486945415286327E-5	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999889192700634	WITHOUT_CLASSIFICATION	1.1080729936606295E-5	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999944378276651	WITHOUT_CLASSIFICATION	5.562172334888946E-6	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999998367781011	WITHOUT_CLASSIFICATION	1.6322189886379883E-7	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999997038965095	WITHOUT_CLASSIFICATION	2.961034905923063E-7	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999999853861803	WITHOUT_CLASSIFICATION	1.4613819739668551E-8	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999998435996957	WITHOUT_CLASSIFICATION	1.5640030429937418E-7	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.999916591249156	WITHOUT_CLASSIFICATION	8.340875084399859E-5	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9999997621912831	WITHOUT_CLASSIFICATION	2.378087170196135E-7	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999997013776121	WITHOUT_CLASSIFICATION	2.986223878495115E-7	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999999964819583	WITHOUT_CLASSIFICATION	3.5180417781547586E-9	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999985567937385	WITHOUT_CLASSIFICATION	1.4432062615429737E-6	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999733536139165	WITHOUT_CLASSIFICATION	2.6646386083608374E-5	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9804498899058247	WITHOUT_CLASSIFICATION	0.01955011009417531	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999305815000439	WITHOUT_CLASSIFICATION	6.941849995611357E-5	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999999993482724	WITHOUT_CLASSIFICATION	6.517276099515759E-10	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999995195228901	WITHOUT_CLASSIFICATION	4.804771098375026E-7	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999999958949738	WITHOUT_CLASSIFICATION	4.105026138717032E-9	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.999996586421517	WITHOUT_CLASSIFICATION	3.413578483028159E-6	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999993819530328	WITHOUT_CLASSIFICATION	6.180469671321908E-7	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.999999985612596	WITHOUT_CLASSIFICATION	1.4387404027721181E-8	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999999985023429	WITHOUT_CLASSIFICATION	1.4976571051889328E-9	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999999836741855	WITHOUT_CLASSIFICATION	1.632581441643168E-8	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999999990684917	WITHOUT_CLASSIFICATION	9.315083259453896E-10	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999999665029153	WITHOUT_CLASSIFICATION	3.3497084653424276E-8	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999999926740761	WITHOUT_CLASSIFICATION	7.325923850050677E-9	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999992627448806	WITHOUT_CLASSIFICATION	7.372551193630049E-7	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999999978226465	WITHOUT_CLASSIFICATION	2.177353630371056E-9	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999998436546216	WITHOUT_CLASSIFICATION	1.563453783759118E-7	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999948513222852	WITHOUT_CLASSIFICATION	5.148677714839831E-6	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.999999976752005	WITHOUT_CLASSIFICATION	2.3247994889804758E-8	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999999956165763	WITHOUT_CLASSIFICATION	4.383423756839045E-9	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999997895528081	WITHOUT_CLASSIFICATION	2.1044719199409773E-7	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999984523251163	WITHOUT_CLASSIFICATION	1.5476748837394442E-6	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999999984334554	WITHOUT_CLASSIFICATION	1.5665444477631862E-9	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999999978056341	WITHOUT_CLASSIFICATION	2.194365870162377E-9	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999998287371512	WITHOUT_CLASSIFICATION	1.712628488008236E-7	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999999929306735	WITHOUT_CLASSIFICATION	7.069326460195514E-9	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999999826317224	WITHOUT_CLASSIFICATION	1.736827764143384E-8	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999987642533	WITHOUT_CLASSIFICATION	1.2357468003701007E-9	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999999968384913	WITHOUT_CLASSIFICATION	3.1615088092053396E-9	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999999994083845	WITHOUT_CLASSIFICATION	5.916154482310633E-10	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999999778411578	WITHOUT_CLASSIFICATION	2.2158842146498857E-8	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999292644101	WITHOUT_CLASSIFICATION	7.073558992237402E-8	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999984179557568	WITHOUT_CLASSIFICATION	1.5820442432528835E-6	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999956611753693	WITHOUT_CLASSIFICATION	4.33882463072321E-6	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999999775652789	WITHOUT_CLASSIFICATION	2.2434721106408837E-8	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999984205247022	WITHOUT_CLASSIFICATION	1.5794752978619305E-6	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999998919360839	WITHOUT_CLASSIFICATION	1.080639162424887E-7	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999997870674749	WITHOUT_CLASSIFICATION	2.1293252496146306E-7	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999997870674749	WITHOUT_CLASSIFICATION	2.1293252496146306E-7	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999996638907	WITHOUT_CLASSIFICATION	3.361093159123679E-10	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999978473958	WITHOUT_CLASSIFICATION	2.152604277160279E-9	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999999986353565	WITHOUT_CLASSIFICATION	1.36464357841877E-9	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999989306922018	WITHOUT_CLASSIFICATION	1.0693077981667513E-6	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999993574243631	WITHOUT_CLASSIFICATION	6.425756369374747E-7	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999994503972576	WITHOUT_CLASSIFICATION	5.496027423267761E-7	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999999673856661	WITHOUT_CLASSIFICATION	3.261433390542639E-8	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999358185153501	WITHOUT_CLASSIFICATION	6.418148464990489E-5	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999979178529912	WITHOUT_CLASSIFICATION	2.0821470087740935E-6	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999999932964093	WITHOUT_CLASSIFICATION	6.703590705134342E-9	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999997789791888	WITHOUT_CLASSIFICATION	2.2102081112841224E-7	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999997789791888	WITHOUT_CLASSIFICATION	2.2102081112841224E-7	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.999089259054158	WITHOUT_CLASSIFICATION	9.107409458419138E-4	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999999291864292	WITHOUT_CLASSIFICATION	7.081357080764295E-8	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999993641468037	WITHOUT_CLASSIFICATION	6.35853196370831E-7	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999999998261524	WITHOUT_CLASSIFICATION	1.7384771965154407E-10	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999999997632123	WITHOUT_CLASSIFICATION	2.367876124731614E-10	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999998774152934	WITHOUT_CLASSIFICATION	1.225847065596119E-7	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999978607181	WITHOUT_CLASSIFICATION	2.1392819163249407E-9	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.999999988229437	WITHOUT_CLASSIFICATION	1.1770562994622886E-8	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999996466590212	WITHOUT_CLASSIFICATION	3.533409788335717E-7	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999939230703486	WITHOUT_CLASSIFICATION	6.076929651346202E-6	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999999996981759	WITHOUT_CLASSIFICATION	3.0182407705997224E-10	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999999538685196	WITHOUT_CLASSIFICATION	4.61314805322036E-8	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999997207495394	WITHOUT_CLASSIFICATION	2.792504606418523E-7	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999997207495394	WITHOUT_CLASSIFICATION	2.792504606418523E-7	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999965812603872	WITHOUT_CLASSIFICATION	3.4187396127244106E-6	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999907083848258	WITHOUT_CLASSIFICATION	9.291615174067836E-6	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999998625790096	WITHOUT_CLASSIFICATION	1.37420990402398E-7	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999919247798731	WITHOUT_CLASSIFICATION	8.075220126928173E-6	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999991563707926	WITHOUT_CLASSIFICATION	8.436292075241247E-7	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999999908966015	WITHOUT_CLASSIFICATION	9.103398436666501E-9	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999997887797043	WITHOUT_CLASSIFICATION	2.112202957148777E-7	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999999967266955	WITHOUT_CLASSIFICATION	3.273304493820988E-9	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9998432363032537	WITHOUT_CLASSIFICATION	1.567636967462755E-4	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999999132647628	WITHOUT_CLASSIFICATION	8.673523726559052E-8	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999993641468037	WITHOUT_CLASSIFICATION	6.35853196370831E-7	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999981153040159	WITHOUT_CLASSIFICATION	1.884695984051294E-6	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.99999967056117	WITHOUT_CLASSIFICATION	3.294388300103608E-7	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999999568660952	WITHOUT_CLASSIFICATION	4.313390469118576E-8	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.999999582649	WITHOUT_CLASSIFICATION	4.173509999745034E-7	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999997308413666	WITHOUT_CLASSIFICATION	2.691586333027936E-7	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999999909456868	WITHOUT_CLASSIFICATION	9.054313117388094E-9	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999932187692661	WITHOUT_CLASSIFICATION	6.7812307339919696E-6	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999918884349882	WITHOUT_CLASSIFICATION	8.111565011782936E-6	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.999999998861652	WITHOUT_CLASSIFICATION	1.138347954751823E-9	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999568051731922	WITHOUT_CLASSIFICATION	4.319482680778262E-5	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999532661433751	WITHOUT_CLASSIFICATION	4.6733856624864624E-5	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999999480375291	WITHOUT_CLASSIFICATION	5.196247085711176E-8	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999996897947604	WITHOUT_CLASSIFICATION	3.102052396118546E-7	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999043199109138	WITHOUT_CLASSIFICATION	9.568008908619245E-5	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999979965226181	WITHOUT_CLASSIFICATION	2.0034773818055723E-6	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999998828120025	WITHOUT_CLASSIFICATION	1.1718799744268681E-7	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999997704462653	WITHOUT_CLASSIFICATION	2.2955373464008737E-7	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999999144311579	WITHOUT_CLASSIFICATION	8.556884222776192E-8	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999932046241968	WITHOUT_CLASSIFICATION	6.795375803193973E-6	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.999999996361741	WITHOUT_CLASSIFICATION	3.638258945032348E-9	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.999999999857129	WITHOUT_CLASSIFICATION	1.4287101547101783E-10	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999980783401851	WITHOUT_CLASSIFICATION	1.9216598150173953E-6	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999999024384351	WITHOUT_CLASSIFICATION	9.756156499207834E-8	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999727679537228	WITHOUT_CLASSIFICATION	2.7232046277094552E-5	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999998043607193	WITHOUT_CLASSIFICATION	1.9563928069714753E-7	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999999984899314	WITHOUT_CLASSIFICATION	1.5100686085919216E-9	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9999996659401158	WITHOUT_CLASSIFICATION	3.340598841250536E-7	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999997494235586	WITHOUT_CLASSIFICATION	2.505764413299871E-7	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9999987600222573	WITHOUT_CLASSIFICATION	1.2399777426560405E-6	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999981645063755	WITHOUT_CLASSIFICATION	1.8354936245582796E-6	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.99999949441714	WITHOUT_CLASSIFICATION	5.055828600206521E-7	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.99999949441714	WITHOUT_CLASSIFICATION	5.055828600206521E-7	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9989197907312672	WITHOUT_CLASSIFICATION	0.0010802092687327454	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9997442784626103	WITHOUT_CLASSIFICATION	2.5572153738978755E-4	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.9999999995137099	WITHOUT_CLASSIFICATION	4.862901040755305E-10	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9998388454978228	WITHOUT_CLASSIFICATION	1.6115450217731118E-4	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999938566842834	WITHOUT_CLASSIFICATION	6.143315716587848E-6	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.999999771940574	WITHOUT_CLASSIFICATION	2.280594259664941E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999995602738473	WITHOUT_CLASSIFICATION	4.397261527041501E-7	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999999945337387	WITHOUT_CLASSIFICATION	5.4662613818935885E-9	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999992466030583	WITHOUT_CLASSIFICATION	7.533969416728708E-7	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999998440510584	WITHOUT_CLASSIFICATION	1.5594894170313866E-7	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999999382263137	WITHOUT_CLASSIFICATION	6.177368629994605E-8	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9999999143277395	WITHOUT_CLASSIFICATION	8.567226042583782E-8	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999995698144107	WITHOUT_CLASSIFICATION	4.301855893808975E-7	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999999395971995	WITHOUT_CLASSIFICATION	6.040280047932707E-8	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.999749885986609	WITHOUT_CLASSIFICATION	2.5011401339110383E-4	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999979335269983	WITHOUT_CLASSIFICATION	2.0664730017037686E-6	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999955955839754	WITHOUT_CLASSIFICATION	4.404416024626169E-6	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999999755355246	WITHOUT_CLASSIFICATION	2.446447538894728E-8	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.9999997162928592	WITHOUT_CLASSIFICATION	2.837071408640059E-7	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999985626829598	WITHOUT_CLASSIFICATION	1.4373170402157702E-6	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999868655166779	WITHOUT_CLASSIFICATION	1.313448332208756E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999868655166779	WITHOUT_CLASSIFICATION	1.313448332208756E-5	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9999958390912016	WITHOUT_CLASSIFICATION	4.160908798414197E-6	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999965063216721	WITHOUT_CLASSIFICATION	3.4936783279019994E-6	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999992594635341	WITHOUT_CLASSIFICATION	7.40536465806407E-7	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999999994487302	WITHOUT_CLASSIFICATION	5.512697235941092E-10	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999999859819947	WITHOUT_CLASSIFICATION	1.4018005153389456E-8	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999181628940443	WITHOUT_CLASSIFICATION	8.183710595564886E-5	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999998656577128	WITHOUT_CLASSIFICATION	1.3434228719851737E-7	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999993865286	WITHOUT_CLASSIFICATION	6.134713261586133E-10	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999993474636995	WITHOUT_CLASSIFICATION	6.525363004638999E-7	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999496488784174	WITHOUT_CLASSIFICATION	5.035112158246286E-5	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9999990230650859	WITHOUT_CLASSIFICATION	9.769349140532614E-7	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999998983135527	WITHOUT_CLASSIFICATION	1.0168644728018649E-7	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999998524719189	WITHOUT_CLASSIFICATION	1.4752808108842473E-7	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999999997749079	WITHOUT_CLASSIFICATION	2.2509205590820533E-10	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999956976133073	WITHOUT_CLASSIFICATION	4.302386692715055E-6	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999998876450769	WITHOUT_CLASSIFICATION	1.1235492306324119E-7	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.999998688930608	WITHOUT_CLASSIFICATION	1.3110693920309264E-6	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9999997506359861	WITHOUT_CLASSIFICATION	2.493640139642153E-7	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999867422944	WITHOUT_CLASSIFICATION	1.3257705571086003E-8	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999999970065732	WITHOUT_CLASSIFICATION	2.9934268518029017E-9	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999673360949176	WITHOUT_CLASSIFICATION	3.266390508249934E-5	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999999051049115	WITHOUT_CLASSIFICATION	9.489508849941272E-8	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999998916693599	WITHOUT_CLASSIFICATION	1.0833064009351977E-7	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999999274249058	WITHOUT_CLASSIFICATION	7.257509416949424E-8	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.999999608804689	WITHOUT_CLASSIFICATION	3.9119531106672305E-7	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999997360591445	WITHOUT_CLASSIFICATION	2.639408554826953E-7	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.9999864932926271	WITHOUT_CLASSIFICATION	1.350670737286907E-5	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999999702390662	WITHOUT_CLASSIFICATION	2.9760933897594626E-8	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999999496726226	WITHOUT_CLASSIFICATION	5.0327377478035725E-8	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999998587353398	WITHOUT_CLASSIFICATION	1.4126466028748248E-7	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999998226637288	WITHOUT_CLASSIFICATION	1.773362713527274E-7	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999948722437321	WITHOUT_CLASSIFICATION	5.127756267930675E-6	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.999999159344657	WITHOUT_CLASSIFICATION	8.406553430102197E-7	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.9999996429301256	WITHOUT_CLASSIFICATION	3.5706987444002946E-7	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999999990558963	WITHOUT_CLASSIFICATION	9.44103707846012E-10	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999999992802124	WITHOUT_CLASSIFICATION	7.197876210544676E-10	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999999627703849	WITHOUT_CLASSIFICATION	3.722961508700034E-8	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9999732988488027	WITHOUT_CLASSIFICATION	2.6701151197279947E-5	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999853707261444	WITHOUT_CLASSIFICATION	1.4629273855696666E-5	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999939925224453	WITHOUT_CLASSIFICATION	6.00747755476062E-6	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999999994806849	WITHOUT_CLASSIFICATION	5.193151389387862E-10	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999998144062502	WITHOUT_CLASSIFICATION	1.8559374966739788E-7	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999999666206841	WITHOUT_CLASSIFICATION	3.337931590001094E-8	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999998405328062	WITHOUT_CLASSIFICATION	1.5946719377472817E-7	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999998586659982	WITHOUT_CLASSIFICATION	1.4133400186694284E-7	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999998405328062	WITHOUT_CLASSIFICATION	1.5946719377472817E-7	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999999759052665	WITHOUT_CLASSIFICATION	2.409473355295699E-8	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9936462949541638	WITHOUT_CLASSIFICATION	0.006353705045836144	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999960935801624	WITHOUT_CLASSIFICATION	3.906419837534864E-6	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.6461351757618008	IMPLEMENTATION	0.35386482423819915	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999996594592946	WITHOUT_CLASSIFICATION	3.40540705389371E-7	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.999999992749246	WITHOUT_CLASSIFICATION	7.2507538856510534E-9	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9999999907836691	WITHOUT_CLASSIFICATION	9.216330961820591E-9	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999999949940738	WITHOUT_CLASSIFICATION	5.00592625389293E-9	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999436338971807	WITHOUT_CLASSIFICATION	5.636610281932013E-5	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.634184828004305	WITHOUT_CLASSIFICATION	0.365815171995695	IMPLEMENTATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9997676559717957	WITHOUT_CLASSIFICATION	2.3234402820436774E-4	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999984526023867	WITHOUT_CLASSIFICATION	1.5473976132847944E-6	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999026835518328	WITHOUT_CLASSIFICATION	9.731644816725618E-5	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999977937217663	WITHOUT_CLASSIFICATION	2.2062782337548542E-6	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.991394064583553	WITHOUT_CLASSIFICATION	0.008605935416446983	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9857935546134124	WITHOUT_CLASSIFICATION	0.014206445386587652	IMPLEMENTATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9985090768159197	WITHOUT_CLASSIFICATION	0.0014909231840802945	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999999983001334	WITHOUT_CLASSIFICATION	1.6998665750293422E-9	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999976431305043	WITHOUT_CLASSIFICATION	2.3568694956537153E-6	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999982291001975	WITHOUT_CLASSIFICATION	1.7708998024790073E-6	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9998760930480631	WITHOUT_CLASSIFICATION	1.2390695193694034E-4	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999946573372	WITHOUT_CLASSIFICATION	5.3426628411416595E-9	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999992746119805	WITHOUT_CLASSIFICATION	7.253880195987866E-7	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999999558454304	WITHOUT_CLASSIFICATION	4.4154569634523365E-8	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999992498078096	WITHOUT_CLASSIFICATION	7.501921904687426E-7	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999991541927048	WITHOUT_CLASSIFICATION	8.458072952755316E-7	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999999920422952	WITHOUT_CLASSIFICATION	7.957704722108052E-9	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999999570725167	WITHOUT_CLASSIFICATION	4.292748331564118E-8	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999995260391823	WITHOUT_CLASSIFICATION	4.73960817755664E-7	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999994779416475	WITHOUT_CLASSIFICATION	5.22058352508885E-7	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999997362792854	WITHOUT_CLASSIFICATION	2.6372071456260953E-7	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999995950188814	WITHOUT_CLASSIFICATION	4.049811186433484E-7	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999993578577151	WITHOUT_CLASSIFICATION	6.421422848574123E-7	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9999973243051591	WITHOUT_CLASSIFICATION	2.6756948408873534E-6	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999991536768773	WITHOUT_CLASSIFICATION	8.463231226267843E-7	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9999997574486035	WITHOUT_CLASSIFICATION	2.425513964725182E-7	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999999999759303	WITHOUT_CLASSIFICATION	2.406973740887237E-11	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999964895353	WITHOUT_CLASSIFICATION	3.510464738812001E-9	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999875911695443	WITHOUT_CLASSIFICATION	1.2408830455778279E-5	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999999648931124	WITHOUT_CLASSIFICATION	3.5106887518779025E-8	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999697729769261	WITHOUT_CLASSIFICATION	3.0227023073806036E-5	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999971830263099	WITHOUT_CLASSIFICATION	2.8169736901217474E-6	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999999783737209	WITHOUT_CLASSIFICATION	2.1626279065594954E-8	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999978670831259	WITHOUT_CLASSIFICATION	2.132916874097985E-6	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999978670831259	WITHOUT_CLASSIFICATION	2.132916874097985E-6	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999966642659771	WITHOUT_CLASSIFICATION	3.335734022966294E-6	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999999984596545	WITHOUT_CLASSIFICATION	1.5403454143190985E-9	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999998988533819	WITHOUT_CLASSIFICATION	1.0114661812719161E-7	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999999999991174	WITHOUT_CLASSIFICATION	8.826073692540327E-13	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999999999991	WITHOUT_CLASSIFICATION	8.454299941605116E-16	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999990564562	WITHOUT_CLASSIFICATION	9.435438522458068E-10	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999788904858413	WITHOUT_CLASSIFICATION	2.110951415872253E-5	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999998008680404	WITHOUT_CLASSIFICATION	1.9913195952037688E-7	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999996779304502	WITHOUT_CLASSIFICATION	3.2206954981301227E-7	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999999984610768	WITHOUT_CLASSIFICATION	1.5389231465106261E-9	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999999997850888	WITHOUT_CLASSIFICATION	2.149112622645397E-10	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999999904147927	WITHOUT_CLASSIFICATION	9.585207268081047E-9	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999997275843207	WITHOUT_CLASSIFICATION	2.724156792785597E-7	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999392465454452	WITHOUT_CLASSIFICATION	6.075345455483107E-5	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999999917169334	WITHOUT_CLASSIFICATION	8.283066598807841E-9	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.999946402314305	WITHOUT_CLASSIFICATION	5.3597685695038864E-5	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999999789835422	WITHOUT_CLASSIFICATION	2.1016457786008622E-8	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999999991767952	WITHOUT_CLASSIFICATION	8.232048620787578E-10	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999999671124828	WITHOUT_CLASSIFICATION	3.2887517130314865E-8	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999999870891051	WITHOUT_CLASSIFICATION	1.291089483579187E-8	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.9998550839941175	WITHOUT_CLASSIFICATION	1.4491600588250768E-4	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9990139088015951	WITHOUT_CLASSIFICATION	9.8609119840496E-4	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999995289107193	WITHOUT_CLASSIFICATION	4.7108928074196846E-7	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999999217421631	WITHOUT_CLASSIFICATION	7.825783691535154E-8	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999999971504924	WITHOUT_CLASSIFICATION	2.8495075000114764E-9	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999956821797	WITHOUT_CLASSIFICATION	4.317820305412769E-9	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999999760179	WITHOUT_CLASSIFICATION	2.398215532869412E-11	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999999603587915	WITHOUT_CLASSIFICATION	3.964120862890266E-8	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999999912658055	WITHOUT_CLASSIFICATION	8.734194529143262E-9	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.999999997651792	WITHOUT_CLASSIFICATION	2.348207948076236E-9	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999993702028048	WITHOUT_CLASSIFICATION	6.297971951666897E-7	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.999999867967176	WITHOUT_CLASSIFICATION	1.3203282408531025E-7	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999959703492	WITHOUT_CLASSIFICATION	4.029650767470686E-9	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999981056769477	WITHOUT_CLASSIFICATION	1.8943230523431193E-6	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999999999076032	WITHOUT_CLASSIFICATION	9.239674755101925E-11	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999999797922328	WITHOUT_CLASSIFICATION	2.020776728183753E-8	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999998159806519	WITHOUT_CLASSIFICATION	1.8401934814260741E-7	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999998384503493	WITHOUT_CLASSIFICATION	1.6154965061577642E-7	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999487772302187	WITHOUT_CLASSIFICATION	5.122276978124126E-5	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999293108541	WITHOUT_CLASSIFICATION	7.068914590699303E-8	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999996616742151	WITHOUT_CLASSIFICATION	3.383257850184943E-7	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9943442740496969	WITHOUT_CLASSIFICATION	0.0056557259503030805	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999598532379361	WITHOUT_CLASSIFICATION	4.014676206386021E-5	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999999903671204	WITHOUT_CLASSIFICATION	9.632879594448371E-9	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999900950190084	WITHOUT_CLASSIFICATION	9.904980991693918E-6	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999998942837371	WITHOUT_CLASSIFICATION	1.0571626287978131E-7	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999998201497475	WITHOUT_CLASSIFICATION	1.7985025249346337E-7	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999998615727543	WITHOUT_CLASSIFICATION	1.3842724569760465E-7	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.9999981475820211	WITHOUT_CLASSIFICATION	1.8524179789047462E-6	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999500792826019	WITHOUT_CLASSIFICATION	4.992071739803359E-5	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999986397243931	WITHOUT_CLASSIFICATION	1.3602756069823909E-6	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999993455651367	WITHOUT_CLASSIFICATION	6.54434863319394E-7	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999998181766647	WITHOUT_CLASSIFICATION	1.8182333528466514E-7	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999999990990571	WITHOUT_CLASSIFICATION	9.009428899226153E-10	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999999707774825	WITHOUT_CLASSIFICATION	2.9222517453489037E-8	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999853416102137	WITHOUT_CLASSIFICATION	1.4658389786361793E-5	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999999940966204	WITHOUT_CLASSIFICATION	5.90337957928227E-9	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999999988868213	WITHOUT_CLASSIFICATION	1.1131787113323162E-8	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999987820307044	WITHOUT_CLASSIFICATION	1.217969295733593E-6	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999867068805	WITHOUT_CLASSIFICATION	1.3293119568301756E-8	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.999999982141679	WITHOUT_CLASSIFICATION	1.7858321043672506E-8	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999999741261532	WITHOUT_CLASSIFICATION	2.5873846830067775E-8	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999999776903	WITHOUT_CLASSIFICATION	2.2309640013705143E-11	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999974422908	WITHOUT_CLASSIFICATION	2.557709236781377E-9	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9999689582344227	WITHOUT_CLASSIFICATION	3.104176557737098E-5	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999048903221	WITHOUT_CLASSIFICATION	9.510967791762208E-8	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999998686029296	WITHOUT_CLASSIFICATION	1.3139707048045277E-7	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999999914731726	WITHOUT_CLASSIFICATION	8.526827294908136E-9	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.999998806739638	WITHOUT_CLASSIFICATION	1.1932603619817734E-6	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999998176878436	WITHOUT_CLASSIFICATION	1.8231215638439576E-7	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999995855385245	WITHOUT_CLASSIFICATION	4.1446147556604864E-7	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999908543604692	WITHOUT_CLASSIFICATION	9.145639530817524E-6	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999999859362053	WITHOUT_CLASSIFICATION	1.4063794760793904E-8	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999998048184857	WITHOUT_CLASSIFICATION	1.9518151431964132E-7	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9999997169150869	WITHOUT_CLASSIFICATION	2.830849131644255E-7	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9999991824369153	WITHOUT_CLASSIFICATION	8.175630846191221E-7	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9999996438863956	WITHOUT_CLASSIFICATION	3.561136044388762E-7	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9999996091115758	WITHOUT_CLASSIFICATION	3.90888424251786E-7	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.999999551798685	WITHOUT_CLASSIFICATION	4.482013149302149E-7	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9999995992782553	WITHOUT_CLASSIFICATION	4.0072174470439686E-7	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9999995093742258	WITHOUT_CLASSIFICATION	4.906257742064735E-7	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9999996043307712	WITHOUT_CLASSIFICATION	3.9566922880754724E-7	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9999993716437087	WITHOUT_CLASSIFICATION	6.283562912989643E-7	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9999994916605197	WITHOUT_CLASSIFICATION	5.083394802724505E-7	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9999993707386132	WITHOUT_CLASSIFICATION	6.292613867205948E-7	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9999995132684126	WITHOUT_CLASSIFICATION	4.867315873576191E-7	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9999993677247758	WITHOUT_CLASSIFICATION	6.322752241273912E-7	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9999993272556756	WITHOUT_CLASSIFICATION	6.727443244445291E-7	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9999992007828228	WITHOUT_CLASSIFICATION	7.992171772465427E-7	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9999994127226113	WITHOUT_CLASSIFICATION	5.87277388803762E-7	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9999991762621434	WITHOUT_CLASSIFICATION	8.237378566704429E-7	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9999998456690727	WITHOUT_CLASSIFICATION	1.5433092727412194E-7	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9999994627236419	WITHOUT_CLASSIFICATION	5.372763581050937E-7	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9999998262878775	WITHOUT_CLASSIFICATION	1.7371212252243108E-7	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9975706489297899	WITHOUT_CLASSIFICATION	0.0024293510702101395	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.999900490523338	WITHOUT_CLASSIFICATION	9.950947666201322E-5	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999993507164232	WITHOUT_CLASSIFICATION	6.492835767373617E-7	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999951477859226	WITHOUT_CLASSIFICATION	4.852214077515086E-6	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999998236033374	WITHOUT_CLASSIFICATION	1.7639666259967982E-7	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999991384746834	WITHOUT_CLASSIFICATION	8.615253165546828E-7	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9621401262912295	WITHOUT_CLASSIFICATION	0.037859873708770614	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999995889671162	WITHOUT_CLASSIFICATION	4.110328837628349E-7	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999940956834076	WITHOUT_CLASSIFICATION	5.904316592449564E-6	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9209232488643218	IMPLEMENTATION	0.07907675113567825	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9999997008635962	WITHOUT_CLASSIFICATION	2.9913640380316754E-7	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999999997005967	WITHOUT_CLASSIFICATION	2.994033165396533E-10	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999999307808988	WITHOUT_CLASSIFICATION	6.921910126583164E-8	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999999307808988	WITHOUT_CLASSIFICATION	6.921910126583164E-8	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999998713470467	WITHOUT_CLASSIFICATION	1.286529531714331E-7	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.999916874705414	WITHOUT_CLASSIFICATION	8.312529458601636E-5	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999999774374	WITHOUT_CLASSIFICATION	2.2562608296238655E-11	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999993617452917	WITHOUT_CLASSIFICATION	6.382547083037575E-7	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.999997274207297	WITHOUT_CLASSIFICATION	2.7257927029658236E-6	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999997431529766	WITHOUT_CLASSIFICATION	2.56847023430086E-7	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9999999444260884	WITHOUT_CLASSIFICATION	5.557391166122601E-8	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999989081833508	WITHOUT_CLASSIFICATION	1.0918166492160915E-6	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9999997968619507	WITHOUT_CLASSIFICATION	2.0313804918676719E-7	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9999999269203447	WITHOUT_CLASSIFICATION	7.307965533515881E-8	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999812952333769	WITHOUT_CLASSIFICATION	1.8704766623138634E-5	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999999859651891	WITHOUT_CLASSIFICATION	1.4034810868712228E-8	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9999998068673925	WITHOUT_CLASSIFICATION	1.9313260742494845E-7	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999998530479887	WITHOUT_CLASSIFICATION	1.4695201135660298E-7	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999995220885579	WITHOUT_CLASSIFICATION	4.779114421423751E-7	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.9999986889490098	WITHOUT_CLASSIFICATION	1.3110509901814954E-6	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999999698966997	WITHOUT_CLASSIFICATION	3.010330024228337E-8	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999999889111393	WITHOUT_CLASSIFICATION	1.1088860696690883E-8	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999996789776867	WITHOUT_CLASSIFICATION	3.2102231337152466E-7	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999979752159773	WITHOUT_CLASSIFICATION	2.0247840225827607E-6	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999999875758637	WITHOUT_CLASSIFICATION	1.2424136225550361E-8	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999998926692475	WITHOUT_CLASSIFICATION	1.0733075249791947E-7	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.999995566210826	WITHOUT_CLASSIFICATION	4.433789174056017E-6	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999999998796896	WITHOUT_CLASSIFICATION	1.203105026857511E-10	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999992892812677	WITHOUT_CLASSIFICATION	7.107187322035645E-7	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999973332180203	WITHOUT_CLASSIFICATION	2.6667819798064567E-6	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999999955136146	WITHOUT_CLASSIFICATION	4.486385347222262E-9	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999997621128145	WITHOUT_CLASSIFICATION	2.3788718547425708E-7	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999882489309347	WITHOUT_CLASSIFICATION	1.1751069065258454E-5	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999991599526438	WITHOUT_CLASSIFICATION	8.400473562122953E-7	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999973653358669	WITHOUT_CLASSIFICATION	2.634664133005858E-6	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999926515636913	WITHOUT_CLASSIFICATION	7.34843630863375E-6	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999992067333058	WITHOUT_CLASSIFICATION	7.932666942588406E-7	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.999998268624368	WITHOUT_CLASSIFICATION	1.7313756320128092E-6	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999987679850288	WITHOUT_CLASSIFICATION	1.2320149711760361E-6	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999971720856622	WITHOUT_CLASSIFICATION	2.8279143378744013E-6	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999095296543	WITHOUT_CLASSIFICATION	9.047034562705704E-8	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999999984313602	WITHOUT_CLASSIFICATION	1.568639743310097E-9	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999823294327509	WITHOUT_CLASSIFICATION	1.7670567249135903E-5	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999999972306725	WITHOUT_CLASSIFICATION	2.7693276396642096E-9	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9966378852109691	WITHOUT_CLASSIFICATION	0.0033621147890308123	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999955654011888	WITHOUT_CLASSIFICATION	4.434598811203912E-6	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999838973413459	WITHOUT_CLASSIFICATION	1.610265865415685E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999550068992596	WITHOUT_CLASSIFICATION	4.499310074033973E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999550068992596	WITHOUT_CLASSIFICATION	4.499310074033973E-5	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999999943485193	WITHOUT_CLASSIFICATION	5.651480752259095E-9	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999975290373773	WITHOUT_CLASSIFICATION	2.4709626226576413E-6	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999999293230124	WITHOUT_CLASSIFICATION	7.067698761445852E-8	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9999988688841086	WITHOUT_CLASSIFICATION	1.1311158914852993E-6	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.999999906946108	WITHOUT_CLASSIFICATION	9.305389202789573E-8	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9999995601008171	WITHOUT_CLASSIFICATION	4.3989918287467143E-7	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999977403171085	WITHOUT_CLASSIFICATION	2.259682891541483E-6	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999798646812623	WITHOUT_CLASSIFICATION	2.013531873763857E-5	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.999998625175733	WITHOUT_CLASSIFICATION	1.3748242668900926E-6	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999997453469349	WITHOUT_CLASSIFICATION	2.5465306510819546E-7	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999998486104775	WITHOUT_CLASSIFICATION	1.5138952240475813E-7	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999996336345292	WITHOUT_CLASSIFICATION	3.6636547076839726E-7	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999979612182943	WITHOUT_CLASSIFICATION	2.0387817057322306E-6	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999999982348563	WITHOUT_CLASSIFICATION	1.765143820175882E-9	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.878781838397623	WITHOUT_CLASSIFICATION	0.12121816160237704	IMPLEMENTATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9998537798054808	WITHOUT_CLASSIFICATION	1.4622019451904014E-4	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999803855118834	WITHOUT_CLASSIFICATION	1.9614488116591226E-5	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999999851779546	WITHOUT_CLASSIFICATION	1.4822045400296271E-8	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9994412349542344	WITHOUT_CLASSIFICATION	5.587650457656801E-4	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999961813172689	WITHOUT_CLASSIFICATION	3.818682731058828E-6	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999992431460087	WITHOUT_CLASSIFICATION	7.568539913354271E-7	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999992431460087	WITHOUT_CLASSIFICATION	7.568539913354271E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999573786477	WITHOUT_CLASSIFICATION	4.262135232559443E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999573786477	WITHOUT_CLASSIFICATION	4.262135232559443E-8	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999999292305005	WITHOUT_CLASSIFICATION	7.076949948201371E-8	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.999998893855229	WITHOUT_CLASSIFICATION	1.1061447709742925E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999994162608924	WITHOUT_CLASSIFICATION	5.837391076951027E-7	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999882003416	WITHOUT_CLASSIFICATION	1.1799658280580327E-8	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999998981700462	WITHOUT_CLASSIFICATION	1.0182995371750065E-7	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999981876242	WITHOUT_CLASSIFICATION	1.81237587001164E-9	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9920276966394487	WITHOUT_CLASSIFICATION	0.007972303360551249	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9999996131285703	WITHOUT_CLASSIFICATION	3.8687142960920893E-7	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999999660989152	WITHOUT_CLASSIFICATION	3.390108491762349E-8	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999997129937636	WITHOUT_CLASSIFICATION	2.8700623635726503E-7	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999999978901625	WITHOUT_CLASSIFICATION	2.109837444632123E-9	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999999831873313	WITHOUT_CLASSIFICATION	1.681266866883104E-8	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999999999586402	WITHOUT_CLASSIFICATION	4.135976451538953E-11	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999816676158385	WITHOUT_CLASSIFICATION	1.8332384161515648E-5	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999985636274734	WITHOUT_CLASSIFICATION	1.4363725265412293E-6	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.9999990945950887	WITHOUT_CLASSIFICATION	9.0540491130005E-7	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.999986301433322	WITHOUT_CLASSIFICATION	1.3698566677933482E-5	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999999841813865	WITHOUT_CLASSIFICATION	1.5818613458028937E-8	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9999983916406193	WITHOUT_CLASSIFICATION	1.6083593806390048E-6	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999949905728295	WITHOUT_CLASSIFICATION	5.00942717053763E-6	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999983867573636	WITHOUT_CLASSIFICATION	1.6132426363343344E-6	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999996951598702	WITHOUT_CLASSIFICATION	3.0484012974777875E-7	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999999946033824	WITHOUT_CLASSIFICATION	5.396617590442459E-9	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999999920422952	WITHOUT_CLASSIFICATION	7.957704722108052E-9	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999990564562	WITHOUT_CLASSIFICATION	9.435438522458068E-10	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999992199927399	WITHOUT_CLASSIFICATION	7.800072601564368E-7	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999999911443369	WITHOUT_CLASSIFICATION	8.855663107144948E-9	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999999988576636	WITHOUT_CLASSIFICATION	1.1423365206986227E-9	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999999809829346	WITHOUT_CLASSIFICATION	1.9017065379226982E-8	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999988285443213	WITHOUT_CLASSIFICATION	1.1714556787143421E-6	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999988285443213	WITHOUT_CLASSIFICATION	1.1714556787143421E-6	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999438429821	WITHOUT_CLASSIFICATION	5.615701783858553E-8	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999999498070077	WITHOUT_CLASSIFICATION	5.0192992327037345E-8	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999997999193275	WITHOUT_CLASSIFICATION	2.000806723857409E-7	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999999980047549	WITHOUT_CLASSIFICATION	1.9952451952968523E-9	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999998930280853	WITHOUT_CLASSIFICATION	1.069719146743832E-7	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9999997054790768	WITHOUT_CLASSIFICATION	2.94520923303072E-7	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999996828521622	WITHOUT_CLASSIFICATION	3.171478378472003E-7	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999998233333255	WITHOUT_CLASSIFICATION	1.7666667445816447E-7	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999974085184267	WITHOUT_CLASSIFICATION	2.591481573370446E-6	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999999973420698	WITHOUT_CLASSIFICATION	2.657930272573893E-9	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9999999663707132	WITHOUT_CLASSIFICATION	3.362928683912585E-8	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999997519753864	WITHOUT_CLASSIFICATION	2.4802461358803216E-7	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999915989635915	WITHOUT_CLASSIFICATION	8.401036408538009E-6	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999999988638991	WITHOUT_CLASSIFICATION	1.1361008242052228E-9	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999999964222612	WITHOUT_CLASSIFICATION	3.577738702086575E-9	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999994113146544	WITHOUT_CLASSIFICATION	5.886853455816583E-7	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999999004261664	WITHOUT_CLASSIFICATION	9.957383367781646E-8	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999999705982595	WITHOUT_CLASSIFICATION	2.9401740460811074E-8	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999996017871755	WITHOUT_CLASSIFICATION	3.982128245952497E-7	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999999749102849	WITHOUT_CLASSIFICATION	2.5089715071726892E-8	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.999999998913641	WITHOUT_CLASSIFICATION	1.0863589276891805E-9	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999999935131565	WITHOUT_CLASSIFICATION	6.486843490131454E-9	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999999778178638	WITHOUT_CLASSIFICATION	2.218213632402723E-8	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9999992538342332	WITHOUT_CLASSIFICATION	7.46165766813174E-7	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999999915037013	WITHOUT_CLASSIFICATION	8.496298607036445E-9	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999999564695483	WITHOUT_CLASSIFICATION	4.3530451671128584E-8	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999995490791611	WITHOUT_CLASSIFICATION	4.5092083886831024E-7	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999999991118614	WITHOUT_CLASSIFICATION	8.881385186742694E-10	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999999995504724	WITHOUT_CLASSIFICATION	4.495275925842717E-10	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999990189229672	WITHOUT_CLASSIFICATION	9.810770328256582E-7	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999135716552044	WITHOUT_CLASSIFICATION	8.642834479562313E-5	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999972144243134	WITHOUT_CLASSIFICATION	2.7855756866567882E-6	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999999746144889	WITHOUT_CLASSIFICATION	2.5385511219385315E-8	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9999855518252824	WITHOUT_CLASSIFICATION	1.4448174717527197E-5	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999977822573194	WITHOUT_CLASSIFICATION	2.2177426805739984E-6	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999363104744273	WITHOUT_CLASSIFICATION	6.368952557273164E-5	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.999999185844456	WITHOUT_CLASSIFICATION	8.141555438897836E-7	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999915054260055	WITHOUT_CLASSIFICATION	8.494573994649173E-6	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999998319908499	WITHOUT_CLASSIFICATION	1.6800915020834927E-7	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999926256099296	WITHOUT_CLASSIFICATION	7.374390070402699E-6	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999890543712	WITHOUT_CLASSIFICATION	1.0945628781966788E-8	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.999998800257418	WITHOUT_CLASSIFICATION	1.1997425819784867E-6	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9999996647737986	WITHOUT_CLASSIFICATION	3.3522620133781246E-7	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9999999044980491	WITHOUT_CLASSIFICATION	9.550195091565244E-8	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999987008326703	WITHOUT_CLASSIFICATION	1.2991673296435798E-6	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999994868223225	WITHOUT_CLASSIFICATION	5.131776775542742E-7	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999999703545259	WITHOUT_CLASSIFICATION	2.964547410532852E-8	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999998966580481	WITHOUT_CLASSIFICATION	1.0334195186950045E-7	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.999996687107342	WITHOUT_CLASSIFICATION	3.312892657848736E-6	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9999990880901696	WITHOUT_CLASSIFICATION	9.119098305650922E-7	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999997912029849	WITHOUT_CLASSIFICATION	2.0879701514201192E-7	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999997711554032	WITHOUT_CLASSIFICATION	2.2884459677400187E-7	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999976750281566	WITHOUT_CLASSIFICATION	2.3249718433835075E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999986442510843	WITHOUT_CLASSIFICATION	1.3557489156196443E-6	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999997434276895	WITHOUT_CLASSIFICATION	2.565723104505144E-7	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999989984380133	WITHOUT_CLASSIFICATION	1.0015619866745479E-6	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999979424257192	WITHOUT_CLASSIFICATION	2.0575742808244323E-6	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999999997435628	WITHOUT_CLASSIFICATION	2.564372007199635E-10	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999986451939163	WITHOUT_CLASSIFICATION	1.3548060836482837E-6	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999999814574692	WITHOUT_CLASSIFICATION	1.8542530892174577E-8	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999978584281298	WITHOUT_CLASSIFICATION	2.141571870186602E-6	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999997912029849	WITHOUT_CLASSIFICATION	2.0879701514201192E-7	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999976750281566	WITHOUT_CLASSIFICATION	2.3249718433835075E-6	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999997711554032	WITHOUT_CLASSIFICATION	2.2884459677400187E-7	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999996473335906	WITHOUT_CLASSIFICATION	3.5266640944589005E-7	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999993372212171	WITHOUT_CLASSIFICATION	6.62778782770651E-7	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999996372866994	WITHOUT_CLASSIFICATION	3.627133005238163E-7	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9999996661870423	WITHOUT_CLASSIFICATION	3.3381295780449673E-7	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9999851542093221	WITHOUT_CLASSIFICATION	1.4845790677942896E-5	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999997080167178	WITHOUT_CLASSIFICATION	2.9198328221087626E-7	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999995926620657	WITHOUT_CLASSIFICATION	4.073379342846893E-7	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999998640987845	WITHOUT_CLASSIFICATION	1.3590121545087824E-7	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999984305026655	WITHOUT_CLASSIFICATION	1.5694973344642484E-6	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999999865164855	WITHOUT_CLASSIFICATION	1.3483514542749014E-8	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999999507250082	WITHOUT_CLASSIFICATION	4.927499183030361E-8	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999984537709686	WITHOUT_CLASSIFICATION	1.546229031272395E-6	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999993408321824	WITHOUT_CLASSIFICATION	6.591678175479443E-7	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9999985009996962	WITHOUT_CLASSIFICATION	1.4990003038028328E-6	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999997996808654	WITHOUT_CLASSIFICATION	2.0031913454949726E-7	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9999996090835458	WITHOUT_CLASSIFICATION	3.909164541435888E-7	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.9999846358437814	WITHOUT_CLASSIFICATION	1.536415621868149E-5	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999994620176414	WITHOUT_CLASSIFICATION	5.379823584664789E-7	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999994620176414	WITHOUT_CLASSIFICATION	5.379823584664789E-7	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999997707432017	WITHOUT_CLASSIFICATION	2.2925679842454946E-7	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.9999999913800806	WITHOUT_CLASSIFICATION	8.619919372014562E-9	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999999216087326	WITHOUT_CLASSIFICATION	7.839126729846695E-8	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.999972129309685	WITHOUT_CLASSIFICATION	2.7870690315052858E-5	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999960096691389	WITHOUT_CLASSIFICATION	3.9903308610784376E-6	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999999914782682	WITHOUT_CLASSIFICATION	8.521731676889086E-9	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999999315042216	WITHOUT_CLASSIFICATION	6.849577843169537E-8	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999999113585336	WITHOUT_CLASSIFICATION	8.864146643375193E-8	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999981830897537	WITHOUT_CLASSIFICATION	1.816910246341577E-6	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999999773894299	WITHOUT_CLASSIFICATION	2.2610570049684036E-8	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.999999994910886	WITHOUT_CLASSIFICATION	5.089114059038076E-9	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9999974601136841	WITHOUT_CLASSIFICATION	2.5398863160746036E-6	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999994982572943	WITHOUT_CLASSIFICATION	5.017427057017832E-7	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999996925140799	WITHOUT_CLASSIFICATION	3.074859200727554E-7	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9861454600657464	WITHOUT_CLASSIFICATION	0.013854539934253535	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999302449607	WITHOUT_CLASSIFICATION	6.975503924247088E-8	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999997288357851	WITHOUT_CLASSIFICATION	2.711642148000889E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999995490243212	WITHOUT_CLASSIFICATION	4.509756787557392E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999995490243212	WITHOUT_CLASSIFICATION	4.509756787557392E-7	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9999996365719596	WITHOUT_CLASSIFICATION	3.6342804044649574E-7	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9999999701849827	WITHOUT_CLASSIFICATION	2.981501738750991E-8	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999999630052476	WITHOUT_CLASSIFICATION	3.699475246121213E-8	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9999968732543798	WITHOUT_CLASSIFICATION	3.1267456202893142E-6	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999998364377557	WITHOUT_CLASSIFICATION	1.6356224425915807E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999995490243212	WITHOUT_CLASSIFICATION	4.509756787557392E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999995490243212	WITHOUT_CLASSIFICATION	4.509756787557392E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999993366509444	WITHOUT_CLASSIFICATION	6.633490554950145E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999993366509444	WITHOUT_CLASSIFICATION	6.633490554950145E-7	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.999999593403399	WITHOUT_CLASSIFICATION	4.0659660109713886E-7	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999947677712471	WITHOUT_CLASSIFICATION	5.2322287528753075E-6	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.999999910183699	WITHOUT_CLASSIFICATION	8.981630104204682E-8	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999999936923858	WITHOUT_CLASSIFICATION	6.307614280545017E-9	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999993164055921	WITHOUT_CLASSIFICATION	6.835944078469342E-7	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999993164055921	WITHOUT_CLASSIFICATION	6.835944078469342E-7	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999999821030388	WITHOUT_CLASSIFICATION	1.7896961260021266E-8	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999968219334306	WITHOUT_CLASSIFICATION	3.178066569370488E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999457929594	WITHOUT_CLASSIFICATION	5.420704065989788E-8	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999713807451215	WITHOUT_CLASSIFICATION	2.861925487851391E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999993131024871	WITHOUT_CLASSIFICATION	6.868975127536838E-7	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999334958929	WITHOUT_CLASSIFICATION	6.650410709348846E-8	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9983428653238622	WITHOUT_CLASSIFICATION	0.001657134676137808	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999999691220876	WITHOUT_CLASSIFICATION	3.087791243241555E-8	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999999983310167	WITHOUT_CLASSIFICATION	1.668983288000925E-9	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999999974536571	WITHOUT_CLASSIFICATION	2.546342801528334E-9	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999949951337556	WITHOUT_CLASSIFICATION	5.004866244389198E-6	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999999801395023	WITHOUT_CLASSIFICATION	1.9860497647789953E-8	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999999449700286	WITHOUT_CLASSIFICATION	5.502997133380685E-8	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999999913328922	WITHOUT_CLASSIFICATION	8.667107787330068E-9	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999302449607	WITHOUT_CLASSIFICATION	6.975503924247088E-8	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999995490243212	WITHOUT_CLASSIFICATION	4.509756787557392E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999993366509444	WITHOUT_CLASSIFICATION	6.633490554950145E-7	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999334958929	WITHOUT_CLASSIFICATION	6.650410709348846E-8	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999998025585	WITHOUT_CLASSIFICATION	1.9744141642705519E-10	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999998025585	WITHOUT_CLASSIFICATION	1.9744141642705519E-10	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999891580364142	WITHOUT_CLASSIFICATION	1.0841963585902091E-5	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999999991052914	WITHOUT_CLASSIFICATION	8.947085669091E-10	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999999900371366	WITHOUT_CLASSIFICATION	9.962863417528504E-9	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999976859705	WITHOUT_CLASSIFICATION	2.3140294273649846E-9	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999998161849804	WITHOUT_CLASSIFICATION	1.838150197287072E-7	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999999980927599	WITHOUT_CLASSIFICATION	1.9072402151217212E-9	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999998595813642	WITHOUT_CLASSIFICATION	1.4041863586005024E-7	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999994333133586	WITHOUT_CLASSIFICATION	5.666866413449425E-7	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.999999999661351	WITHOUT_CLASSIFICATION	3.386490355800824E-10	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999991762844288	WITHOUT_CLASSIFICATION	8.237155711844373E-7	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999886173180408	WITHOUT_CLASSIFICATION	1.1382681959348418E-5	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.999999965559333	WITHOUT_CLASSIFICATION	3.444066701448534E-8	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.999999993860942	WITHOUT_CLASSIFICATION	6.139058081126918E-9	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999997288357851	WITHOUT_CLASSIFICATION	2.711642148000889E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999993366509444	WITHOUT_CLASSIFICATION	6.633490554950145E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999968219334306	WITHOUT_CLASSIFICATION	3.178066569370488E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999457929594	WITHOUT_CLASSIFICATION	5.420704065989788E-8	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999457929594	WITHOUT_CLASSIFICATION	5.420704065989788E-8	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999993131024871	WITHOUT_CLASSIFICATION	6.868975127536838E-7	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999334958929	WITHOUT_CLASSIFICATION	6.650410709348846E-8	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999334958929	WITHOUT_CLASSIFICATION	6.650410709348846E-8	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999998025585	WITHOUT_CLASSIFICATION	1.9744141642705519E-10	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999801639877642	WITHOUT_CLASSIFICATION	1.9836012235793526E-5	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999996501424888	WITHOUT_CLASSIFICATION	3.498575111491145E-7	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999999993611	WITHOUT_CLASSIFICATION	6.389935154308379E-13	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999696313057893	WITHOUT_CLASSIFICATION	3.03686942107085E-5	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999960880944229	WITHOUT_CLASSIFICATION	3.9119055770661295E-6	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999789704950726	WITHOUT_CLASSIFICATION	2.1029504927458007E-5	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999997562475789	WITHOUT_CLASSIFICATION	2.43752421084848E-7	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999999971746489	WITHOUT_CLASSIFICATION	2.8253509490255E-9	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999999120038038	WITHOUT_CLASSIFICATION	8.799619618052903E-8	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999968219334306	WITHOUT_CLASSIFICATION	3.178066569370488E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999457929594	WITHOUT_CLASSIFICATION	5.420704065989788E-8	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999457929594	WITHOUT_CLASSIFICATION	5.420704065989788E-8	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999993131024871	WITHOUT_CLASSIFICATION	6.868975127536838E-7	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999994333133586	WITHOUT_CLASSIFICATION	5.666866413449425E-7	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999991762844288	WITHOUT_CLASSIFICATION	8.237155711844373E-7	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9995110844752718	WITHOUT_CLASSIFICATION	4.8891552472813E-4	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999984316711074	WITHOUT_CLASSIFICATION	1.5683288925623626E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999900113728317	WITHOUT_CLASSIFICATION	9.988627168208104E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999900113728317	WITHOUT_CLASSIFICATION	9.988627168208104E-6	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.999999777415187	WITHOUT_CLASSIFICATION	2.2258481303153743E-7	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999999934648661	WITHOUT_CLASSIFICATION	6.535133908688396E-9	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999999996914174	WITHOUT_CLASSIFICATION	3.0858250261421365E-10	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999946506165546	WITHOUT_CLASSIFICATION	5.349383445444753E-6	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.999999668109828	WITHOUT_CLASSIFICATION	3.3189017202611956E-7	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.999999668109828	WITHOUT_CLASSIFICATION	3.3189017202611956E-7	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999827074222759	WITHOUT_CLASSIFICATION	1.7292577724156996E-5	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999827074222759	WITHOUT_CLASSIFICATION	1.7292577724156996E-5	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.999999859066872	WITHOUT_CLASSIFICATION	1.4093312791889003E-7	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.999999859066872	WITHOUT_CLASSIFICATION	1.4093312791889003E-7	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999999776332568	WITHOUT_CLASSIFICATION	2.2366743293835718E-8	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999999508479853	WITHOUT_CLASSIFICATION	4.915201472387228E-8	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999957387395154	WITHOUT_CLASSIFICATION	4.26126048462661E-6	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999998741608441	WITHOUT_CLASSIFICATION	1.2583915586820498E-7	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.999999091429256	WITHOUT_CLASSIFICATION	9.085707440056903E-7	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.9999999008370614	WITHOUT_CLASSIFICATION	9.916293873785408E-8	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999991857303898	WITHOUT_CLASSIFICATION	8.142696101029354E-7	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999991520045415	WITHOUT_CLASSIFICATION	8.479954585762981E-7	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999999783977863	WITHOUT_CLASSIFICATION	2.1602213612507188E-8	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999999984636355	WITHOUT_CLASSIFICATION	1.5363643971738673E-9	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.999853122497634	WITHOUT_CLASSIFICATION	1.4687750236587843E-4	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999991331083237	WITHOUT_CLASSIFICATION	8.668916763452931E-7	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999998699687411	WITHOUT_CLASSIFICATION	1.3003125888137684E-7	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999984996534083	WITHOUT_CLASSIFICATION	1.5003465917108953E-6	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999984996534083	WITHOUT_CLASSIFICATION	1.5003465917108953E-6	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999998301065888	WITHOUT_CLASSIFICATION	1.698934111727717E-7	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999981876242	WITHOUT_CLASSIFICATION	1.81237587001164E-9	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999646774831553	WITHOUT_CLASSIFICATION	3.5322516844572537E-5	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999986628041	WITHOUT_CLASSIFICATION	1.3371959217934358E-9	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999999979120936	WITHOUT_CLASSIFICATION	2.0879064692192576E-9	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999269547649028	WITHOUT_CLASSIFICATION	7.304523509726138E-5	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999998541876807	WITHOUT_CLASSIFICATION	1.4581231925023074E-7	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999979982062681	WITHOUT_CLASSIFICATION	2.00179373184588E-6	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999993251349504	WITHOUT_CLASSIFICATION	6.748650496062558E-7	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999999961897993	WITHOUT_CLASSIFICATION	3.8102007141898245E-9	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999996601190531	WITHOUT_CLASSIFICATION	3.398809469853085E-7	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999724552350473	WITHOUT_CLASSIFICATION	2.7544764952662654E-5	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999997821064287	WITHOUT_CLASSIFICATION	2.1789357123327217E-7	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9901753640776545	WITHOUT_CLASSIFICATION	0.009824635922345433	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999998527073647	WITHOUT_CLASSIFICATION	1.472926353627953E-7	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999997500775232	WITHOUT_CLASSIFICATION	2.4992247684751675E-7	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9999914278847291	WITHOUT_CLASSIFICATION	8.572115270935535E-6	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999946454032893	WITHOUT_CLASSIFICATION	5.35459671068592E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999963297553	WITHOUT_CLASSIFICATION	3.670244670651292E-9	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999963297553	WITHOUT_CLASSIFICATION	3.670244670651292E-9	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999984678687374	WITHOUT_CLASSIFICATION	1.5321312626080604E-6	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999999983695257	WITHOUT_CLASSIFICATION	1.6304743149931968E-9	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999966639156262	WITHOUT_CLASSIFICATION	3.336084373710414E-6	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999966639156262	WITHOUT_CLASSIFICATION	3.336084373710414E-6	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999978603036	WITHOUT_CLASSIFICATION	2.1396963999408204E-6	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999999971507187	WITHOUT_CLASSIFICATION	2.849281254812861E-9	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999997626850301	WITHOUT_CLASSIFICATION	2.3731496987082835E-7	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999999924141206	WITHOUT_CLASSIFICATION	7.585879432320688E-9	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999999986804649	WITHOUT_CLASSIFICATION	1.3195351324476994E-9	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.999999987975118	WITHOUT_CLASSIFICATION	1.2024881929021546E-8	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.999999987975118	WITHOUT_CLASSIFICATION	1.2024881929021546E-8	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999997996918643	WITHOUT_CLASSIFICATION	2.0030813563346903E-7	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999999987992836	WITHOUT_CLASSIFICATION	1.200716390389237E-9	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999990882484704	WITHOUT_CLASSIFICATION	9.117515295589135E-7	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999999974824328	WITHOUT_CLASSIFICATION	2.5175670744104542E-9	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999999983695257	WITHOUT_CLASSIFICATION	1.6304743149931968E-9	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999999772639259	WITHOUT_CLASSIFICATION	2.2736074125886013E-8	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999999989203414	WITHOUT_CLASSIFICATION	1.0796585343725545E-9	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999999989203414	WITHOUT_CLASSIFICATION	1.0796585343725545E-9	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999561662404509	WITHOUT_CLASSIFICATION	4.3833759549100805E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999989693351	WITHOUT_CLASSIFICATION	1.030664830607607E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999989693351	WITHOUT_CLASSIFICATION	1.030664830607607E-9	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999684388823022	WITHOUT_CLASSIFICATION	3.156111769783391E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999684388823022	WITHOUT_CLASSIFICATION	3.156111769783391E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999684388823022	WITHOUT_CLASSIFICATION	3.156111769783391E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999989693351	WITHOUT_CLASSIFICATION	1.030664830607607E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999989693351	WITHOUT_CLASSIFICATION	1.030664830607607E-9	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999561662404509	WITHOUT_CLASSIFICATION	4.3833759549100805E-5	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.999999932001331	WITHOUT_CLASSIFICATION	6.799866906138285E-8	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9999999462381773	WITHOUT_CLASSIFICATION	5.3761822557115776E-8	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999976882749181	WITHOUT_CLASSIFICATION	2.311725081966391E-6	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9999971854935271	WITHOUT_CLASSIFICATION	2.814506472847999E-6	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999979748856	WITHOUT_CLASSIFICATION	2.025114403952792E-9	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9998046837129608	WITHOUT_CLASSIFICATION	1.9531628703922394E-4	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999999443733626	WITHOUT_CLASSIFICATION	5.562663751036651E-8	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999999997563418	WITHOUT_CLASSIFICATION	2.4365814605318933E-10	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999996601190531	WITHOUT_CLASSIFICATION	3.398809469853085E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999989693351	WITHOUT_CLASSIFICATION	1.030664830607607E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999989693351	WITHOUT_CLASSIFICATION	1.030664830607607E-9	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999997193894	WITHOUT_CLASSIFICATION	2.8061064023784765E-10	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999701149973902	WITHOUT_CLASSIFICATION	2.988500260971167E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999999610319233	WITHOUT_CLASSIFICATION	3.89680767311062E-8	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999993161572	WITHOUT_CLASSIFICATION	6.838427948600873E-10	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999965407427537	WITHOUT_CLASSIFICATION	3.459257246332829E-6	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999989996466673	WITHOUT_CLASSIFICATION	1.0003533326198334E-6	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999976270987	WITHOUT_CLASSIFICATION	2.372901279191316E-9	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.999999834516866	WITHOUT_CLASSIFICATION	1.6548313395036957E-7	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999994403834169	WITHOUT_CLASSIFICATION	5.596165831138975E-7	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.999999977748545	WITHOUT_CLASSIFICATION	2.22514550736234E-8	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999962394042088	WITHOUT_CLASSIFICATION	3.760595791241272E-6	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999997195201599	WITHOUT_CLASSIFICATION	2.804798401045503E-7	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999955832904837	WITHOUT_CLASSIFICATION	4.416709516357612E-6	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999992787145056	WITHOUT_CLASSIFICATION	7.212854944156954E-7	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999999062650972	WITHOUT_CLASSIFICATION	9.373490277869888E-8	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999999598294373	WITHOUT_CLASSIFICATION	4.017056275653485E-8	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999999598294373	WITHOUT_CLASSIFICATION	4.017056275653485E-8	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999999598294373	WITHOUT_CLASSIFICATION	4.017056275653485E-8	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999997027230341	WITHOUT_CLASSIFICATION	2.9727696595974135E-7	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999997137507959	WITHOUT_CLASSIFICATION	2.862492041436048E-7	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999996256492468	WITHOUT_CLASSIFICATION	3.743507531335525E-7	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999997661842794	WITHOUT_CLASSIFICATION	2.3381572044993892E-7	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999967769853336	WITHOUT_CLASSIFICATION	3.22301466649741E-6	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999989338581746	WITHOUT_CLASSIFICATION	1.0661418253602923E-6	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999999999527105	WITHOUT_CLASSIFICATION	4.728956012289831E-11	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999999629815803	WITHOUT_CLASSIFICATION	3.701841969947549E-8	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999999981139572	WITHOUT_CLASSIFICATION	1.886042649593195E-9	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999999819852389	WITHOUT_CLASSIFICATION	1.801476112649013E-8	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9998378027923261	WITHOUT_CLASSIFICATION	1.6219720767393986E-4	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999671186642906	WITHOUT_CLASSIFICATION	3.288133570938358E-5	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999997996918643	WITHOUT_CLASSIFICATION	2.0030813563346903E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999989693351	WITHOUT_CLASSIFICATION	1.030664830607607E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999989693351	WITHOUT_CLASSIFICATION	1.030664830607607E-9	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999561662404509	WITHOUT_CLASSIFICATION	4.3833759549100805E-5	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9998046837129608	WITHOUT_CLASSIFICATION	1.9531628703922394E-4	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999701149973902	WITHOUT_CLASSIFICATION	2.988500260971167E-5	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999993161572	WITHOUT_CLASSIFICATION	6.838427948600873E-10	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999989996466673	WITHOUT_CLASSIFICATION	1.0003533326198334E-6	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999999610319233	WITHOUT_CLASSIFICATION	3.89680767311062E-8	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999976270987	WITHOUT_CLASSIFICATION	2.372901279191316E-9	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.999999977748545	WITHOUT_CLASSIFICATION	2.22514550736234E-8	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999994403834169	WITHOUT_CLASSIFICATION	5.596165831138975E-7	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999997195201599	WITHOUT_CLASSIFICATION	2.804798401045503E-7	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999916853198725	WITHOUT_CLASSIFICATION	8.314680127531583E-6	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999979999976052	WITHOUT_CLASSIFICATION	2.0000023947299433E-6	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999933085361324	WITHOUT_CLASSIFICATION	6.6914638675062865E-6	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999999938017771	WITHOUT_CLASSIFICATION	6.198222967870572E-9	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999977308286424	WITHOUT_CLASSIFICATION	2.2691713576414716E-6	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999999191822704	WITHOUT_CLASSIFICATION	8.081772956701717E-8	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999999055574246	WITHOUT_CLASSIFICATION	9.444257535733263E-8	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999996392232168	WITHOUT_CLASSIFICATION	3.607767832431092E-7	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999983933335229	WITHOUT_CLASSIFICATION	1.6066664770513934E-6	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999997377177801	WITHOUT_CLASSIFICATION	2.622822199462529E-7	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999978984900013	WITHOUT_CLASSIFICATION	2.101509998661581E-6	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999049772346	WITHOUT_CLASSIFICATION	9.502276550369477E-8	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999997310296	WITHOUT_CLASSIFICATION	2.6897040507510973E-9	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999965469695	WITHOUT_CLASSIFICATION	3.4530304594615335E-9	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999996484261	WITHOUT_CLASSIFICATION	3.5157391341764906E-10	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999938508992	WITHOUT_CLASSIFICATION	6.149100838202124E-9	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999933688295	WITHOUT_CLASSIFICATION	6.631170526767042E-9	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999974863545381	WITHOUT_CLASSIFICATION	2.5136454618228718E-6	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999998650020221	WITHOUT_CLASSIFICATION	1.3499797788902006E-6	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.999999892924739	WITHOUT_CLASSIFICATION	1.0707526108748869E-7	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999994892773972	WITHOUT_CLASSIFICATION	5.107226027187125E-7	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999407128	WITHOUT_CLASSIFICATION	5.928723669896421E-11	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999407128	WITHOUT_CLASSIFICATION	5.928723669896421E-11	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999999875700225	WITHOUT_CLASSIFICATION	1.2429977531318035E-8	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999729105446978	WITHOUT_CLASSIFICATION	2.7089455302132426E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997767495669249	WITHOUT_CLASSIFICATION	2.2325043307519932E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997767495669249	WITHOUT_CLASSIFICATION	2.2325043307519932E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997767495669249	WITHOUT_CLASSIFICATION	2.2325043307519932E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999911280602116	WITHOUT_CLASSIFICATION	8.871939788318355E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999911280602116	WITHOUT_CLASSIFICATION	8.871939788318355E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999911280602116	WITHOUT_CLASSIFICATION	8.871939788318355E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999911280602116	WITHOUT_CLASSIFICATION	8.871939788318355E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999923086298085	WITHOUT_CLASSIFICATION	7.691370191486294E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999923086298085	WITHOUT_CLASSIFICATION	7.691370191486294E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999923086298085	WITHOUT_CLASSIFICATION	7.691370191486294E-6	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999810757222896	WITHOUT_CLASSIFICATION	1.8924277710343583E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999810757222896	WITHOUT_CLASSIFICATION	1.8924277710343583E-5	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999913747443646	WITHOUT_CLASSIFICATION	8.625255635371825E-6	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999918372932601	WITHOUT_CLASSIFICATION	8.162706739802447E-6	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999729105446978	WITHOUT_CLASSIFICATION	2.7089455302132426E-5	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999998409317441	WITHOUT_CLASSIFICATION	1.5906825602851077E-7	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997767495669249	WITHOUT_CLASSIFICATION	2.2325043307519932E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997767495669249	WITHOUT_CLASSIFICATION	2.2325043307519932E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999911280602116	WITHOUT_CLASSIFICATION	8.871939788318355E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999911280602116	WITHOUT_CLASSIFICATION	8.871939788318355E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999911280602116	WITHOUT_CLASSIFICATION	8.871939788318355E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999923086298085	WITHOUT_CLASSIFICATION	7.691370191486294E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999923086298085	WITHOUT_CLASSIFICATION	7.691370191486294E-6	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999810757222896	WITHOUT_CLASSIFICATION	1.8924277710343583E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999918372932601	WITHOUT_CLASSIFICATION	8.162706739802447E-6	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999972512105235	WITHOUT_CLASSIFICATION	2.7487894764623756E-6	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999972512105235	WITHOUT_CLASSIFICATION	2.7487894764623756E-6	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999983106814	WITHOUT_CLASSIFICATION	1.6893185563436467E-9	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999983106814	WITHOUT_CLASSIFICATION	1.6893185563436467E-9	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999998076536488	WITHOUT_CLASSIFICATION	1.9234635108226516E-7	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999998076536488	WITHOUT_CLASSIFICATION	1.9234635108226516E-7	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999937274561279	WITHOUT_CLASSIFICATION	6.272543872061892E-6	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999999578966966	WITHOUT_CLASSIFICATION	4.210330343158174E-8	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999999578966966	WITHOUT_CLASSIFICATION	4.210330343158174E-8	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999879291052816	WITHOUT_CLASSIFICATION	1.207089471841138E-5	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999879291052816	WITHOUT_CLASSIFICATION	1.207089471841138E-5	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999999999518997	WITHOUT_CLASSIFICATION	4.810030883390843E-11	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999992073110618	WITHOUT_CLASSIFICATION	7.926889381698976E-7	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999992073110618	WITHOUT_CLASSIFICATION	7.926889381698976E-7	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999972978500524	WITHOUT_CLASSIFICATION	2.7021499476416918E-6	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999975126152943	WITHOUT_CLASSIFICATION	2.487384705704458E-6	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999999987868557	WITHOUT_CLASSIFICATION	1.2131442754907893E-9	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999911280602116	WITHOUT_CLASSIFICATION	8.871939788318355E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999911280602116	WITHOUT_CLASSIFICATION	8.871939788318355E-6	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999972978500524	WITHOUT_CLASSIFICATION	2.7021499476416918E-6	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999999997229291	WITHOUT_CLASSIFICATION	2.7707095435611126E-10	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.99999872148285	WITHOUT_CLASSIFICATION	1.2785171500846426E-6	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.99999872148285	WITHOUT_CLASSIFICATION	1.2785171500846426E-6	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.99999872148285	WITHOUT_CLASSIFICATION	1.2785171500846426E-6	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999995476931735	WITHOUT_CLASSIFICATION	4.5230682663290194E-7	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999999586633742	WITHOUT_CLASSIFICATION	4.1336625829164904E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998763079823	WITHOUT_CLASSIFICATION	1.2369201771478615E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998763079823	WITHOUT_CLASSIFICATION	1.2369201771478615E-7	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999998745668323	WITHOUT_CLASSIFICATION	1.2543316776377983E-7	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999997915903995	WITHOUT_CLASSIFICATION	2.084096003974733E-7	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999999988136056	WITHOUT_CLASSIFICATION	1.1863943700375977E-9	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999999904030916	WITHOUT_CLASSIFICATION	9.59690831706721E-9	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999998981512674	WITHOUT_CLASSIFICATION	1.018487325534685E-7	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999999897699102	WITHOUT_CLASSIFICATION	1.0230089723896803E-8	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999999897699102	WITHOUT_CLASSIFICATION	1.0230089723896803E-8	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.999897591554276	WITHOUT_CLASSIFICATION	1.0240844572393863E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999879200434755	WITHOUT_CLASSIFICATION	1.2079956524554036E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999879200434755	WITHOUT_CLASSIFICATION	1.2079956524554036E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999911280602116	WITHOUT_CLASSIFICATION	8.871939788318355E-6	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.99999872148285	WITHOUT_CLASSIFICATION	1.2785171500846426E-6	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999999586633742	WITHOUT_CLASSIFICATION	4.1336625829164904E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998763079823	WITHOUT_CLASSIFICATION	1.2369201771478615E-7	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999998745668323	WITHOUT_CLASSIFICATION	1.2543316776377983E-7	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999997915903995	WITHOUT_CLASSIFICATION	2.084096003974733E-7	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999999988136056	WITHOUT_CLASSIFICATION	1.1863943700375977E-9	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999999904030916	WITHOUT_CLASSIFICATION	9.59690831706721E-9	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999879200434755	WITHOUT_CLASSIFICATION	1.2079956524554036E-5	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999999960708412	WITHOUT_CLASSIFICATION	3.929158740249815E-9	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999973894656394	WITHOUT_CLASSIFICATION	2.610534360573987E-6	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999999695568386	WITHOUT_CLASSIFICATION	3.0443161509133365E-8	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999996025762913	WITHOUT_CLASSIFICATION	3.974237087051332E-7	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999999896895333	WITHOUT_CLASSIFICATION	1.0310466793925848E-8	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999999846626377	WITHOUT_CLASSIFICATION	1.533736221325051E-8	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999998775965859	WITHOUT_CLASSIFICATION	1.2240341407175463E-7	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999998775965859	WITHOUT_CLASSIFICATION	1.2240341407175463E-7	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999999252813817	WITHOUT_CLASSIFICATION	7.471861835589708E-8	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999999754812072	WITHOUT_CLASSIFICATION	2.4518792839756315E-8	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999999192520419	WITHOUT_CLASSIFICATION	8.074795810449759E-8	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999999962809653	WITHOUT_CLASSIFICATION	3.719034733187305E-9	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999999565115203	WITHOUT_CLASSIFICATION	4.3488479721772334E-8	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999999565115203	WITHOUT_CLASSIFICATION	4.3488479721772334E-8	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999999527915328	WITHOUT_CLASSIFICATION	4.720846729484272E-8	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999999917997122	WITHOUT_CLASSIFICATION	8.20028777625638E-9	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999999809356583	WITHOUT_CLASSIFICATION	1.906434171668458E-8	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999999809356583	WITHOUT_CLASSIFICATION	1.906434171668458E-8	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999999887164579	WITHOUT_CLASSIFICATION	1.1283542148123479E-8	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999804570429341	WITHOUT_CLASSIFICATION	1.9542957065851812E-5	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999998981512674	WITHOUT_CLASSIFICATION	1.018487325534685E-7	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.999999626932831	WITHOUT_CLASSIFICATION	3.73067169080898E-7	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999990041829	WITHOUT_CLASSIFICATION	9.95817022854754E-10	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999681381725	WITHOUT_CLASSIFICATION	3.18618274398454E-8	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999999961612714	WITHOUT_CLASSIFICATION	3.838728539781474E-9	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.9999999990686268	WITHOUT_CLASSIFICATION	9.313732552844699E-10	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999961346718815	WITHOUT_CLASSIFICATION	3.865328118460242E-6	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999999944229381	WITHOUT_CLASSIFICATION	5.577061870326803E-9	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999991067260122	WITHOUT_CLASSIFICATION	8.932739877508533E-7	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999998474261625	WITHOUT_CLASSIFICATION	1.5257383746164608E-7	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999998474261625	WITHOUT_CLASSIFICATION	1.5257383746164608E-7	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999996936281077	WITHOUT_CLASSIFICATION	3.0637189237503886E-7	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999996936281077	WITHOUT_CLASSIFICATION	3.0637189237503886E-7	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999998243362884	WITHOUT_CLASSIFICATION	1.756637117036169E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999997231395003	WITHOUT_CLASSIFICATION	2.7686049984550576E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999997231395003	WITHOUT_CLASSIFICATION	2.7686049984550576E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999997231395003	WITHOUT_CLASSIFICATION	2.7686049984550576E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999778245351	WITHOUT_CLASSIFICATION	2.2175464908242434E-8	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999972808088419	WITHOUT_CLASSIFICATION	2.719191158084345E-6	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999972808088419	WITHOUT_CLASSIFICATION	2.719191158084345E-6	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999691810696	WITHOUT_CLASSIFICATION	3.0818930307336836E-8	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999966685046175	WITHOUT_CLASSIFICATION	3.3314953825292547E-6	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999990636810301	WITHOUT_CLASSIFICATION	9.363189698385988E-7	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9999997798450855	WITHOUT_CLASSIFICATION	2.2015491459251954E-7	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999960570704096	WITHOUT_CLASSIFICATION	3.94292959044643E-6	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9999353335367421	WITHOUT_CLASSIFICATION	6.466646325787402E-5	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999999987494603	WITHOUT_CLASSIFICATION	1.2505397002836367E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999997310296	WITHOUT_CLASSIFICATION	2.6897040507510973E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999997310296	WITHOUT_CLASSIFICATION	2.6897040507510973E-9	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999778245351	WITHOUT_CLASSIFICATION	2.2175464908242434E-8	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999691810696	WITHOUT_CLASSIFICATION	3.0818930307336836E-8	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999998707624124	WITHOUT_CLASSIFICATION	1.2923758766373506E-7	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999966685046175	WITHOUT_CLASSIFICATION	3.3314953825292547E-6	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999990636810301	WITHOUT_CLASSIFICATION	9.363189698385988E-7	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999866910868657	WITHOUT_CLASSIFICATION	1.3308913134300053E-5	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9999998314876936	WITHOUT_CLASSIFICATION	1.6851230641857755E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999999239250327	WITHOUT_CLASSIFICATION	7.607496728991302E-8	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.9999978495127778	WITHOUT_CLASSIFICATION	2.1504872222021897E-6	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999649606970547	WITHOUT_CLASSIFICATION	3.5039302945322285E-5	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999999990339898	WITHOUT_CLASSIFICATION	9.660102151736325E-10	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999998428675434	WITHOUT_CLASSIFICATION	1.571324565748339E-7	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999866910868657	WITHOUT_CLASSIFICATION	1.3308913134300053E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999999973334404	WITHOUT_CLASSIFICATION	2.6665596926875425E-9	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999999973334404	WITHOUT_CLASSIFICATION	2.6665596926875425E-9	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999999957323125	WITHOUT_CLASSIFICATION	4.267687481591858E-9	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999988971680858	WITHOUT_CLASSIFICATION	1.1028319141533807E-6	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999999912906438	WITHOUT_CLASSIFICATION	8.709356285451756E-9	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.999999941205605	WITHOUT_CLASSIFICATION	5.879439502112949E-8	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999999790727119	WITHOUT_CLASSIFICATION	2.0927288062912702E-8	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999981309157853	WITHOUT_CLASSIFICATION	1.8690842146711122E-6	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999909995598438	WITHOUT_CLASSIFICATION	9.000440156066843E-6	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999995737523818	WITHOUT_CLASSIFICATION	4.262476182256457E-7	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999999992763665	WITHOUT_CLASSIFICATION	7.236333806408984E-10	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9999998603248009	WITHOUT_CLASSIFICATION	1.396751990172284E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999998742241634	WITHOUT_CLASSIFICATION	1.2577583667083314E-7	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.999999941205605	WITHOUT_CLASSIFICATION	5.879439502112949E-8	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999999790727119	WITHOUT_CLASSIFICATION	2.0927288062912702E-8	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999990894358105	WITHOUT_CLASSIFICATION	9.105641894729224E-7	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9999999096157707	WITHOUT_CLASSIFICATION	9.038422931756918E-8	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.99999999914772	WITHOUT_CLASSIFICATION	8.522801612215127E-10	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999986214588138	WITHOUT_CLASSIFICATION	1.3785411861523168E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999999991166985	WITHOUT_CLASSIFICATION	8.83301627887455E-10	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999999816081908	WITHOUT_CLASSIFICATION	1.839180925056917E-8	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9999979429384134	WITHOUT_CLASSIFICATION	2.057061586636901E-6	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9999991429940733	WITHOUT_CLASSIFICATION	8.570059266049904E-7	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.999999932065607	WITHOUT_CLASSIFICATION	6.793439298994837E-8	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999999885190283	WITHOUT_CLASSIFICATION	1.1480971804512146E-8	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999999052202131	WITHOUT_CLASSIFICATION	9.47797868107643E-8	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.999994776020806	WITHOUT_CLASSIFICATION	5.2239791940801615E-6	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999997762940426	WITHOUT_CLASSIFICATION	2.2370595748448877E-7	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999999972017841	WITHOUT_CLASSIFICATION	2.798215942043151E-9	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999999999878201	WITHOUT_CLASSIFICATION	1.2179949953739078E-11	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999972876431	WITHOUT_CLASSIFICATION	2.7123568180012593E-9	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999969054311029	WITHOUT_CLASSIFICATION	3.0945688970450174E-6	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999998802711271	WITHOUT_CLASSIFICATION	1.19728872900747E-7	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999997596409	WITHOUT_CLASSIFICATION	2.4035904700472895E-10	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999996838381251	WITHOUT_CLASSIFICATION	3.1616187482916983E-7	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999969054311029	WITHOUT_CLASSIFICATION	3.0945688970450174E-6	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999998802711271	WITHOUT_CLASSIFICATION	1.19728872900747E-7	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999997596409	WITHOUT_CLASSIFICATION	2.4035904700472895E-10	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9999999911868288	WITHOUT_CLASSIFICATION	8.81317119302978E-9	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999966098672808	WITHOUT_CLASSIFICATION	3.3901327193458005E-6	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999958583555475	WITHOUT_CLASSIFICATION	4.141644452539622E-6	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.999999969328781	WITHOUT_CLASSIFICATION	3.067121900144007E-8	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999999967281484	WITHOUT_CLASSIFICATION	3.2718516837994755E-9	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999998707085695	WITHOUT_CLASSIFICATION	1.292914304327859E-7	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.999998711845122	WITHOUT_CLASSIFICATION	1.288154877997292E-6	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999766427227754	WITHOUT_CLASSIFICATION	2.3357277224611892E-5	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9999998326097324	WITHOUT_CLASSIFICATION	1.6739026766130142E-7	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9999996309793222	WITHOUT_CLASSIFICATION	3.690206778306112E-7	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9929900934019392	WITHOUT_CLASSIFICATION	0.007009906598060775	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999999838203824	WITHOUT_CLASSIFICATION	1.6179617562832952E-8	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999977565453437	WITHOUT_CLASSIFICATION	2.2434546562349547E-6	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999960609022676	WITHOUT_CLASSIFICATION	3.9390977324678366E-6	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999999091145353	WITHOUT_CLASSIFICATION	9.088546473813197E-8	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999996843292921	WITHOUT_CLASSIFICATION	3.156707078196707E-7	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999988857839344	WITHOUT_CLASSIFICATION	1.114216065637366E-6	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999998935066873	WITHOUT_CLASSIFICATION	1.0649331276588041E-7	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999257613758082	WITHOUT_CLASSIFICATION	7.42386241917414E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999938279265866	WITHOUT_CLASSIFICATION	6.172073413343793E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999999261609882	WITHOUT_CLASSIFICATION	7.383901183851435E-8	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999978390942558	WITHOUT_CLASSIFICATION	2.160905744125165E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999978390942558	WITHOUT_CLASSIFICATION	2.160905744125165E-6	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999991382861332	WITHOUT_CLASSIFICATION	8.617138668617134E-7	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999991382861332	WITHOUT_CLASSIFICATION	8.617138668617134E-7	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999998843966287	WITHOUT_CLASSIFICATION	1.1560337136922432E-7	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999998843966287	WITHOUT_CLASSIFICATION	1.1560337136922432E-7	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999999231476835	WITHOUT_CLASSIFICATION	7.68523164669011E-8	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999916172185	WITHOUT_CLASSIFICATION	8.382781547979378E-9	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999980696006	WITHOUT_CLASSIFICATION	1.930399333822818E-9	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999997365644501	WITHOUT_CLASSIFICATION	2.6343554990527846E-7	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999995383053	WITHOUT_CLASSIFICATION	4.6169478742837723E-10	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999777447881	WITHOUT_CLASSIFICATION	2.2255211974235572E-8	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999998942759097	WITHOUT_CLASSIFICATION	1.0572409026152653E-7	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9999972396718694	WITHOUT_CLASSIFICATION	2.760328130706839E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999997310296	WITHOUT_CLASSIFICATION	2.6897040507510973E-9	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999999231476835	WITHOUT_CLASSIFICATION	7.68523164669011E-8	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999916172185	WITHOUT_CLASSIFICATION	8.382781547979378E-9	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999980696006	WITHOUT_CLASSIFICATION	1.930399333822818E-9	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999995383053	WITHOUT_CLASSIFICATION	4.6169478742837723E-10	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999777447881	WITHOUT_CLASSIFICATION	2.2255211974235572E-8	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999999879384408	WITHOUT_CLASSIFICATION	1.2061559131350745E-8	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9999998815882277	WITHOUT_CLASSIFICATION	1.1841177231211263E-7	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.999995975583244	WITHOUT_CLASSIFICATION	4.024416755912172E-6	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.999995975583244	WITHOUT_CLASSIFICATION	4.024416755912172E-6	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.999999577416981	WITHOUT_CLASSIFICATION	4.225830190083233E-7	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999999596261623	WITHOUT_CLASSIFICATION	4.037383766553673E-8	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999998834004067	WITHOUT_CLASSIFICATION	1.1659959332558995E-7	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999907663348	WITHOUT_CLASSIFICATION	9.23366510446752E-9	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999907663348	WITHOUT_CLASSIFICATION	9.23366510446752E-9	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999999989925874	WITHOUT_CLASSIFICATION	1.0074126489269635E-9	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999994189402	WITHOUT_CLASSIFICATION	5.810597658459788E-10	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999999345474271	WITHOUT_CLASSIFICATION	6.545257294328974E-8	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999973298078433	WITHOUT_CLASSIFICATION	2.6701921568125725E-6	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999999935785083	WITHOUT_CLASSIFICATION	6.421491601167139E-9	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999965469695	WITHOUT_CLASSIFICATION	3.4530304594615335E-9	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999996484261	WITHOUT_CLASSIFICATION	3.5157391341764906E-10	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999938508992	WITHOUT_CLASSIFICATION	6.149100838202124E-9	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999933688295	WITHOUT_CLASSIFICATION	6.631170526767042E-9	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.999999892924739	WITHOUT_CLASSIFICATION	1.0707526108748869E-7	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999994892773972	WITHOUT_CLASSIFICATION	5.107226027187125E-7	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999999989925874	WITHOUT_CLASSIFICATION	1.0074126489269635E-9	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999994189402	WITHOUT_CLASSIFICATION	5.810597658459788E-10	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999973298078433	WITHOUT_CLASSIFICATION	2.6701921568125725E-6	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999692025079059	WITHOUT_CLASSIFICATION	3.079749209412617E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999998834004067	WITHOUT_CLASSIFICATION	1.1659959332558995E-7	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999998834004067	WITHOUT_CLASSIFICATION	1.1659959332558995E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999998742241634	WITHOUT_CLASSIFICATION	1.2577583667083314E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999998742241634	WITHOUT_CLASSIFICATION	1.2577583667083314E-7	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9984227778450095	WITHOUT_CLASSIFICATION	0.001577222154990478	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9984227778450095	WITHOUT_CLASSIFICATION	0.001577222154990478	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999999994333041	WITHOUT_CLASSIFICATION	5.66695956224468E-10	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999999904008028	WITHOUT_CLASSIFICATION	9.599197135043208E-9	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.999998444226203	WITHOUT_CLASSIFICATION	1.5557737969980744E-6	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999999672492478	WITHOUT_CLASSIFICATION	3.275075218549961E-8	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999999998579757	WITHOUT_CLASSIFICATION	1.4202429564507925E-10	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999999498103678	WITHOUT_CLASSIFICATION	5.018963220894075E-8	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999999959703363	WITHOUT_CLASSIFICATION	4.029663631706473E-9	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999999924176177	WITHOUT_CLASSIFICATION	7.582382260938519E-9	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999998166215786	WITHOUT_CLASSIFICATION	1.8337842151830855E-7	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999999464935418	WITHOUT_CLASSIFICATION	5.350645814503028E-8	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999999491890899	WITHOUT_CLASSIFICATION	5.0810910013061396E-8	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9999996395416113	WITHOUT_CLASSIFICATION	3.6045838870730545E-7	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999999603812473	WITHOUT_CLASSIFICATION	3.9618752631742026E-8	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999990609464547	WITHOUT_CLASSIFICATION	9.390535453473008E-7	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999999093439284	WITHOUT_CLASSIFICATION	9.065607157851787E-8	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9999090257750771	WITHOUT_CLASSIFICATION	9.097422492286703E-5	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9999996542270966	WITHOUT_CLASSIFICATION	3.457729033480269E-7	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999997185496112	WITHOUT_CLASSIFICATION	2.814503887548434E-7	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999993751271403	WITHOUT_CLASSIFICATION	6.248728597578239E-7	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999996484261	WITHOUT_CLASSIFICATION	3.5157391341764906E-10	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999933688295	WITHOUT_CLASSIFICATION	6.631170526767042E-9	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999407128	WITHOUT_CLASSIFICATION	5.928723669896421E-11	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998763079823	WITHOUT_CLASSIFICATION	1.2369201771478615E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998763079823	WITHOUT_CLASSIFICATION	1.2369201771478615E-7	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999692025079059	WITHOUT_CLASSIFICATION	3.079749209412617E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999998834004067	WITHOUT_CLASSIFICATION	1.1659959332558995E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999998742241634	WITHOUT_CLASSIFICATION	1.2577583667083314E-7	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9984227778450095	WITHOUT_CLASSIFICATION	0.001577222154990478	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999950138510046	WITHOUT_CLASSIFICATION	4.986148995359072E-6	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.999998636460226	WITHOUT_CLASSIFICATION	1.363539773913953E-6	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999968376266317	WITHOUT_CLASSIFICATION	3.1623733682906746E-6	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999999597271207	WITHOUT_CLASSIFICATION	4.0272879321373026E-8	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999836547799	WITHOUT_CLASSIFICATION	1.6345220138353127E-8	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999836547799	WITHOUT_CLASSIFICATION	1.6345220138353127E-8	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999999946399369	WITHOUT_CLASSIFICATION	5.360063081807448E-9	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999983875247894	WITHOUT_CLASSIFICATION	1.6124752105007065E-6	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999846490621	WITHOUT_CLASSIFICATION	1.5350937874532457E-8	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999990947644841	WITHOUT_CLASSIFICATION	9.052355159239623E-7	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999995264214677	WITHOUT_CLASSIFICATION	4.7357853227637606E-7	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999995264214677	WITHOUT_CLASSIFICATION	4.7357853227637606E-7	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999999534817299	WITHOUT_CLASSIFICATION	4.6518270244607855E-8	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9999982698017397	WITHOUT_CLASSIFICATION	1.7301982602774306E-6	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999999897860558	WITHOUT_CLASSIFICATION	1.021394421767773E-8	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999997469791516	WITHOUT_CLASSIFICATION	2.53020848355116E-7	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999975600467874	WITHOUT_CLASSIFICATION	2.4399532125852282E-6	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999999946969012	WITHOUT_CLASSIFICATION	5.303098879079198E-9	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999999100204006	WITHOUT_CLASSIFICATION	8.997959941705368E-8	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999999854821706	WITHOUT_CLASSIFICATION	1.4517829376947394E-8	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9995015437490984	WITHOUT_CLASSIFICATION	4.984562509015857E-4	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9999742946414886	WITHOUT_CLASSIFICATION	2.570535851141445E-5	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999999993826538	WITHOUT_CLASSIFICATION	6.17346193136305E-10	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999999914792232	WITHOUT_CLASSIFICATION	8.52077675299407E-9	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999998243471198	WITHOUT_CLASSIFICATION	1.756528802811094E-7	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999986026906338	WITHOUT_CLASSIFICATION	1.3973093662966212E-6	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999996886311857	WITHOUT_CLASSIFICATION	3.11368814300949E-7	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9998472361970467	WITHOUT_CLASSIFICATION	1.5276380295319283E-4	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.999999999912093	WITHOUT_CLASSIFICATION	8.79070842030259E-11	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999939478442671	WITHOUT_CLASSIFICATION	6.05215573293126E-6	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999981997127514	WITHOUT_CLASSIFICATION	1.8002872486624575E-6	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.999999932157906	WITHOUT_CLASSIFICATION	6.784209404362056E-8	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999977654337807	WITHOUT_CLASSIFICATION	2.234566219310277E-6	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999999878473695	WITHOUT_CLASSIFICATION	1.2152630481726746E-8	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999999878473695	WITHOUT_CLASSIFICATION	1.2152630481726746E-8	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999998444126221	WITHOUT_CLASSIFICATION	1.5558737783406436E-7	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.999999993398903	WITHOUT_CLASSIFICATION	6.601097130697572E-9	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999979982062681	WITHOUT_CLASSIFICATION	2.00179373184588E-6	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999979982062681	WITHOUT_CLASSIFICATION	2.00179373184588E-6	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9279708866570048	WITHOUT_CLASSIFICATION	0.0720291133429952	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999999557067533	WITHOUT_CLASSIFICATION	4.429324677027863E-8	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999975873273006	WITHOUT_CLASSIFICATION	2.4126726993708373E-6	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999863786563	WITHOUT_CLASSIFICATION	1.3621343738044477E-8	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999863786563	WITHOUT_CLASSIFICATION	1.3621343738044477E-8	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999981904055425	WITHOUT_CLASSIFICATION	1.8095944574320418E-6	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999982360466	WITHOUT_CLASSIFICATION	1.763953424608549E-9	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.999999945860784	WITHOUT_CLASSIFICATION	5.413921595627054E-8	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999998791175778	WITHOUT_CLASSIFICATION	1.2088242225881913E-7	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999997550127528	WITHOUT_CLASSIFICATION	2.4498724715590715E-7	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999999987954787	WITHOUT_CLASSIFICATION	1.204521261639344E-9	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999997872331198	WITHOUT_CLASSIFICATION	2.1276688022905362E-7	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999999279130256	WITHOUT_CLASSIFICATION	7.20869743913684E-8	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9999994591733117	WITHOUT_CLASSIFICATION	5.408266882062298E-7	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.999996286825877	WITHOUT_CLASSIFICATION	3.7131741229772476E-6	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999989807535404	WITHOUT_CLASSIFICATION	1.0192464595808922E-6	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999883986869339	WITHOUT_CLASSIFICATION	1.1601313066148576E-5	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9999997373709437	WITHOUT_CLASSIFICATION	2.626290563264439E-7	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999999609873117	WITHOUT_CLASSIFICATION	3.901268819071561E-8	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9997759071636654	WITHOUT_CLASSIFICATION	2.2409283633451202E-4	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999998926790067	WITHOUT_CLASSIFICATION	1.0732099334508566E-7	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999999856045	WITHOUT_CLASSIFICATION	1.4395428282679206E-11	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999871024131407	WITHOUT_CLASSIFICATION	1.2897586859244345E-5	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.999997771119066	WITHOUT_CLASSIFICATION	2.22888093410553E-6	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999999988753837	WITHOUT_CLASSIFICATION	1.1246162343527122E-9	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9999969165825413	WITHOUT_CLASSIFICATION	3.083417458725108E-6	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9999997473231206	WITHOUT_CLASSIFICATION	2.526768793715767E-7	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999813694386095	WITHOUT_CLASSIFICATION	1.8630561390487716E-5	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999996353836456	WITHOUT_CLASSIFICATION	3.646163543312854E-7	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999883407349175	WITHOUT_CLASSIFICATION	1.165926508258919E-5	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999999894240399	WITHOUT_CLASSIFICATION	1.057596019930027E-8	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9997319247975109	WITHOUT_CLASSIFICATION	2.680752024890842E-4	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999927650637	WITHOUT_CLASSIFICATION	7.2349362945967085E-9	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999984807493109	WITHOUT_CLASSIFICATION	1.5192506892621492E-6	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999993439627	WITHOUT_CLASSIFICATION	6.560372456861324E-10	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999958341659	WITHOUT_CLASSIFICATION	4.165834151971558E-9	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999999609873117	WITHOUT_CLASSIFICATION	3.901268819071561E-8	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999927650637	WITHOUT_CLASSIFICATION	7.2349362945967085E-9	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999984807493109	WITHOUT_CLASSIFICATION	1.5192506892621492E-6	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999958341659	WITHOUT_CLASSIFICATION	4.165834151971558E-9	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999968556657172	WITHOUT_CLASSIFICATION	3.1443342828171028E-6	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9999967103640098	WITHOUT_CLASSIFICATION	3.289635990180982E-6	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999997944782856	WITHOUT_CLASSIFICATION	2.055217144176916E-7	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999998662043906	WITHOUT_CLASSIFICATION	1.337956093507808E-7	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.99999995983859	WITHOUT_CLASSIFICATION	4.016141005084816E-8	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999999996574064	WITHOUT_CLASSIFICATION	3.425936232179714E-10	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9999990904723622	WITHOUT_CLASSIFICATION	9.09527637711694E-7	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9999990356065825	WITHOUT_CLASSIFICATION	9.643934174475048E-7	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9999995157101151	WITHOUT_CLASSIFICATION	4.842898848584825E-7	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999999865605662	WITHOUT_CLASSIFICATION	1.3439433757810822E-8	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999999353376499	WITHOUT_CLASSIFICATION	6.466235008487228E-8	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999999353376499	WITHOUT_CLASSIFICATION	6.466235008487228E-8	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999999994485996	WITHOUT_CLASSIFICATION	5.514004495140732E-10	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999999155569321	WITHOUT_CLASSIFICATION	8.444306785027306E-8	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999796057001	WITHOUT_CLASSIFICATION	2.039429991461622E-8	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999990553085931	WITHOUT_CLASSIFICATION	9.446914069003965E-7	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999999256496053	WITHOUT_CLASSIFICATION	7.435039470029324E-8	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999999565623194	WITHOUT_CLASSIFICATION	4.3437680575414103E-8	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999997936090522	WITHOUT_CLASSIFICATION	2.0639094770707407E-7	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999998615685	WITHOUT_CLASSIFICATION	1.3843143730512876E-10	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999999955415617	WITHOUT_CLASSIFICATION	4.458438258004172E-9	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999156485648	WITHOUT_CLASSIFICATION	8.435143513391537E-8	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999997674022079	WITHOUT_CLASSIFICATION	2.325977921743891E-7	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999994903744142	WITHOUT_CLASSIFICATION	5.096255858728528E-7	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999999647208546	WITHOUT_CLASSIFICATION	3.527914541208348E-8	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999999366255262	WITHOUT_CLASSIFICATION	6.337447370279842E-8	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9999997640968784	WITHOUT_CLASSIFICATION	2.3590312146945412E-7	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999983798201073	WITHOUT_CLASSIFICATION	1.6201798926837513E-6	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9999998880137951	WITHOUT_CLASSIFICATION	1.1198620491030539E-7	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9999996972869886	WITHOUT_CLASSIFICATION	3.027130114914188E-7	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.999995112084603	WITHOUT_CLASSIFICATION	4.8879153970720834E-6	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.999999939151562	WITHOUT_CLASSIFICATION	6.08484379159114E-8	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9999997616532897	WITHOUT_CLASSIFICATION	2.3834671014703692E-7	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9999989667550265	WITHOUT_CLASSIFICATION	1.0332449734429069E-6	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999999917909269	WITHOUT_CLASSIFICATION	8.209073154030264E-9	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.999989629554064	WITHOUT_CLASSIFICATION	1.0370445935970697E-5	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999999980633516	WITHOUT_CLASSIFICATION	1.9366483535859903E-9	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.999996200163917	WITHOUT_CLASSIFICATION	3.799836082974662E-6	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999999982821134	WITHOUT_CLASSIFICATION	1.7178866115369578E-9	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999999459700586	WITHOUT_CLASSIFICATION	5.4029941407350386E-8	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.999999986735203	WITHOUT_CLASSIFICATION	1.3264797052504229E-8	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999999987399956	WITHOUT_CLASSIFICATION	1.2600043960161463E-9	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999999997623779	WITHOUT_CLASSIFICATION	2.376221054552072E-10	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9999999903467252	WITHOUT_CLASSIFICATION	9.653274922284643E-9	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999999585032674	WITHOUT_CLASSIFICATION	4.149673262357735E-8	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999996322634519	WITHOUT_CLASSIFICATION	3.6773654810210215E-7	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999999970339573	WITHOUT_CLASSIFICATION	2.966042800130093E-9	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999999600448052	WITHOUT_CLASSIFICATION	3.9955194785679993E-8	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999999937486995	WITHOUT_CLASSIFICATION	6.251300486582434E-9	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999999762058636	WITHOUT_CLASSIFICATION	2.379413641588331E-8	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999997610345744	WITHOUT_CLASSIFICATION	2.3896542552903566E-7	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999973081618688	WITHOUT_CLASSIFICATION	2.6918381311949994E-6	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999999788220566	WITHOUT_CLASSIFICATION	2.1177943473142957E-8	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999115539735043	WITHOUT_CLASSIFICATION	8.844602649570469E-5	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.9999982753752721	WITHOUT_CLASSIFICATION	1.7246247279683429E-6	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999999494448901	WITHOUT_CLASSIFICATION	5.055510995650948E-8	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999998728562565	WITHOUT_CLASSIFICATION	1.2714374351270056E-7	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999999972253716	WITHOUT_CLASSIFICATION	2.7746283373779074E-9	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9994605829892872	WITHOUT_CLASSIFICATION	5.394170107128888E-4	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999993506122201	WITHOUT_CLASSIFICATION	6.49387779822366E-7	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999993358182117	WITHOUT_CLASSIFICATION	6.641817882763087E-7	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999999710471071	WITHOUT_CLASSIFICATION	2.8952892764701226E-8	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999849873054837	WITHOUT_CLASSIFICATION	1.5012694516310103E-5	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999999936219452	WITHOUT_CLASSIFICATION	6.378054807730217E-9	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999842603991497	WITHOUT_CLASSIFICATION	1.573960085024228E-5	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999999601210677	WITHOUT_CLASSIFICATION	3.9878932305899445E-8	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999988574168382	WITHOUT_CLASSIFICATION	1.1425831617779787E-6	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999705034712	WITHOUT_CLASSIFICATION	2.9496528851260768E-8	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999778983862029	WITHOUT_CLASSIFICATION	2.2101613797061264E-5	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9996777035635342	WITHOUT_CLASSIFICATION	3.222964364657766E-4	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9647025366473725	WITHOUT_CLASSIFICATION	0.03529746335262752	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9998348512034528	WITHOUT_CLASSIFICATION	1.6514879654719764E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9998348512034528	WITHOUT_CLASSIFICATION	1.6514879654719764E-4	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999998891070504	WITHOUT_CLASSIFICATION	1.10892949611413E-7	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999993959130022	WITHOUT_CLASSIFICATION	6.040869977714005E-7	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999582823296	WITHOUT_CLASSIFICATION	4.171767048572257E-8	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999275677641	WITHOUT_CLASSIFICATION	7.243223594610348E-8	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999997041310834	WITHOUT_CLASSIFICATION	2.958689165923026E-7	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999997760565018	WITHOUT_CLASSIFICATION	2.239434981103018E-7	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999961515207766	WITHOUT_CLASSIFICATION	3.848479223408146E-6	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999641769352149	WITHOUT_CLASSIFICATION	3.582306478501925E-5	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999999457224742	WITHOUT_CLASSIFICATION	5.4277525864303475E-8	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999995818084404	WITHOUT_CLASSIFICATION	4.1819155967449155E-7	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999999914304778	WITHOUT_CLASSIFICATION	8.569522296509399E-9	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9999999898453192	WITHOUT_CLASSIFICATION	1.0154680851249176E-8	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999996474284503	WITHOUT_CLASSIFICATION	3.5257154970733174E-7	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999611078090456	WITHOUT_CLASSIFICATION	3.889219095433702E-5	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999999728765171	WITHOUT_CLASSIFICATION	2.712348289999847E-8	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999982919999386	WITHOUT_CLASSIFICATION	1.7080000614450367E-6	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9999997876379595	WITHOUT_CLASSIFICATION	2.1236204040997874E-7	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999966537592	WITHOUT_CLASSIFICATION	3.3462409575678557E-9	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999774923585962	WITHOUT_CLASSIFICATION	2.250764140375093E-5	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999928049595627	WITHOUT_CLASSIFICATION	7.1950404373215004E-6	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999865025047	WITHOUT_CLASSIFICATION	1.3497495270448676E-8	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.999999944073308	WITHOUT_CLASSIFICATION	5.5926692159058914E-8	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999213946167734	WITHOUT_CLASSIFICATION	7.860538322650421E-5	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999999954006132	WITHOUT_CLASSIFICATION	4.5993868339835884E-9	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999998330422325	WITHOUT_CLASSIFICATION	1.6695776759398538E-7	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999434510527474	WITHOUT_CLASSIFICATION	5.654894725260964E-5	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999999613478959	WITHOUT_CLASSIFICATION	3.8652104192518473E-8	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999999998245259	WITHOUT_CLASSIFICATION	1.754739918451497E-10	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.999999888991717	WITHOUT_CLASSIFICATION	1.1100828302499523E-7	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999999998304131	WITHOUT_CLASSIFICATION	1.695868396439098E-10	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999988978752254	WITHOUT_CLASSIFICATION	1.1021247745686328E-6	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999991265736786	WITHOUT_CLASSIFICATION	8.734263214351859E-7	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999998646424046	WITHOUT_CLASSIFICATION	1.3535759531035893E-7	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999987457793317	WITHOUT_CLASSIFICATION	1.2542206683053016E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999998646424046	WITHOUT_CLASSIFICATION	1.3535759531035893E-7	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999999500692045	WITHOUT_CLASSIFICATION	4.993079553892568E-8	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999972276345002	WITHOUT_CLASSIFICATION	2.7723654998658504E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999972276345002	WITHOUT_CLASSIFICATION	2.7723654998658504E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999972276345002	WITHOUT_CLASSIFICATION	2.7723654998658504E-6	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999995392321426	WITHOUT_CLASSIFICATION	4.6076785746005146E-7	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999995392321426	WITHOUT_CLASSIFICATION	4.6076785746005146E-7	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999999931411058	WITHOUT_CLASSIFICATION	6.8588942011284685E-9	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999999999784634	WITHOUT_CLASSIFICATION	2.1536469705874225E-11	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999999952103722	WITHOUT_CLASSIFICATION	4.789627806012018E-9	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999623871535133	WITHOUT_CLASSIFICATION	3.761284648667872E-5	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999999040423133	WITHOUT_CLASSIFICATION	9.59576867156204E-8	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999997526951346	WITHOUT_CLASSIFICATION	2.4730486537112216E-7	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999994103671253	WITHOUT_CLASSIFICATION	5.896328746904589E-7	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999996563881747	WITHOUT_CLASSIFICATION	3.436118253647065E-7	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999979766840831	WITHOUT_CLASSIFICATION	2.0233159168689413E-6	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999999529120484	WITHOUT_CLASSIFICATION	4.7087951713800315E-8	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999997245227409	WITHOUT_CLASSIFICATION	2.7547725916224586E-7	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999997976554986	WITHOUT_CLASSIFICATION	2.0234450130186424E-7	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999997693161046	WITHOUT_CLASSIFICATION	2.3068389551480385E-7	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9999995582940114	WITHOUT_CLASSIFICATION	4.417059886121928E-7	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999992019880297	WITHOUT_CLASSIFICATION	7.980119703249506E-7	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9999999948987633	WITHOUT_CLASSIFICATION	5.101236686993706E-9	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999999989752163	WITHOUT_CLASSIFICATION	1.0247837311889056E-9	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999993583650288	WITHOUT_CLASSIFICATION	6.416349711492978E-7	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999993583650288	WITHOUT_CLASSIFICATION	6.416349711492978E-7	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.999999487887549	WITHOUT_CLASSIFICATION	5.121124510220664E-7	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999998838827818	WITHOUT_CLASSIFICATION	1.1611721817145932E-7	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999998838827818	WITHOUT_CLASSIFICATION	1.1611721817145932E-7	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.99999942860395	WITHOUT_CLASSIFICATION	5.713960499841345E-7	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9999999178475345	WITHOUT_CLASSIFICATION	8.215246543206329E-8	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9999671190005207	WITHOUT_CLASSIFICATION	3.2880999479258814E-5	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9999998345157669	WITHOUT_CLASSIFICATION	1.6548423313778126E-7	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9999996331446642	WITHOUT_CLASSIFICATION	3.6685533582493667E-7	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999999136045139	WITHOUT_CLASSIFICATION	8.639548604028267E-8	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9999998855559014	WITHOUT_CLASSIFICATION	1.1444409861385732E-7	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999887890171109	WITHOUT_CLASSIFICATION	1.1210982889172746E-5	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999999841565009	WITHOUT_CLASSIFICATION	1.5843499036005794E-8	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.999997712345701	WITHOUT_CLASSIFICATION	2.287654298954954E-6	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9998996884924384	WITHOUT_CLASSIFICATION	1.0031150756162085E-4	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999579174604107	WITHOUT_CLASSIFICATION	4.208253958930615E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999992199927399	WITHOUT_CLASSIFICATION	7.800072601564368E-7	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999998855928366	WITHOUT_CLASSIFICATION	1.1440716332506171E-7	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999996563881747	WITHOUT_CLASSIFICATION	3.436118253647065E-7	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999980648175215	WITHOUT_CLASSIFICATION	1.9351824783759622E-6	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999972548167	WITHOUT_CLASSIFICATION	2.7451832586126066E-9	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999950850693925	WITHOUT_CLASSIFICATION	4.9149306075070355E-6	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999950850693925	WITHOUT_CLASSIFICATION	4.9149306075070355E-6	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999999631398835	WITHOUT_CLASSIFICATION	3.6860116498363896E-8	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999845860973363	WITHOUT_CLASSIFICATION	1.5413902663748045E-5	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999999716518324	WITHOUT_CLASSIFICATION	2.8348167672792354E-8	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9999996681269924	WITHOUT_CLASSIFICATION	3.3187300757655624E-7	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999999999235705	WITHOUT_CLASSIFICATION	7.642954474878966E-11	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999982340558687	WITHOUT_CLASSIFICATION	1.7659441312376548E-6	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999999713677739	WITHOUT_CLASSIFICATION	2.8632226101598906E-8	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999970513455767	WITHOUT_CLASSIFICATION	2.9486544233054606E-6	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999993305130505	WITHOUT_CLASSIFICATION	6.694869494631597E-7	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999956936327736	WITHOUT_CLASSIFICATION	4.306367226448471E-6	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9996894876416358	WITHOUT_CLASSIFICATION	3.105123583641781E-4	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999998583537993	WITHOUT_CLASSIFICATION	1.416462006273488E-7	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.8935358885794227	WITHOUT_CLASSIFICATION	0.10646411142057728	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999999906983351	WITHOUT_CLASSIFICATION	9.30166501078859E-9	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999999958713153	WITHOUT_CLASSIFICATION	4.128684741337809E-9	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.99999999083792	WITHOUT_CLASSIFICATION	9.162079896802805E-9	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999996553817009	WITHOUT_CLASSIFICATION	3.446182991919637E-7	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999571951143343	WITHOUT_CLASSIFICATION	4.28048856656567E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.99999920980876	WITHOUT_CLASSIFICATION	7.90191240138111E-7	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999770082647	WITHOUT_CLASSIFICATION	2.2991735219334487E-8	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.99999993636349	WITHOUT_CLASSIFICATION	6.36365099562685E-8	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999993591459667	WITHOUT_CLASSIFICATION	6.408540331554756E-7	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999924390103567	WITHOUT_CLASSIFICATION	7.560989643206352E-6	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999964534817	WITHOUT_CLASSIFICATION	3.546518426760365E-9	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.999998241964935	WITHOUT_CLASSIFICATION	1.7580350650014522E-6	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999981438455513	WITHOUT_CLASSIFICATION	1.8561544487402522E-6	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999996298944687	WITHOUT_CLASSIFICATION	3.7010553131568416E-7	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9998555169545228	WITHOUT_CLASSIFICATION	1.4448304547717413E-4	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999999861677281	WITHOUT_CLASSIFICATION	1.383227188356168E-8	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999999921458919	WITHOUT_CLASSIFICATION	7.854108143391437E-9	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999995582449015	WITHOUT_CLASSIFICATION	4.417550984725239E-7	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999996638226578	WITHOUT_CLASSIFICATION	3.361773421180544E-7	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.999999350673658	WITHOUT_CLASSIFICATION	6.493263419380608E-7	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999999289992672	WITHOUT_CLASSIFICATION	7.100073284174196E-8	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999999906691436	WITHOUT_CLASSIFICATION	9.330856388732928E-9	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.9999999423184607	WITHOUT_CLASSIFICATION	5.768153931738774E-8	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9998555169545228	WITHOUT_CLASSIFICATION	1.4448304547717413E-4	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999893452017	WITHOUT_CLASSIFICATION	1.0654798251629269E-8	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999999906691436	WITHOUT_CLASSIFICATION	9.330856388732928E-9	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999999652642115	WITHOUT_CLASSIFICATION	3.473578846290061E-8	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.999999970212941	WITHOUT_CLASSIFICATION	2.9787058970775252E-8	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.99999984282886	WITHOUT_CLASSIFICATION	1.5717114001971546E-7	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999998441494643	WITHOUT_CLASSIFICATION	1.55850535739743E-7	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999996865280648	WITHOUT_CLASSIFICATION	3.134719351789676E-7	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999979778192882	WITHOUT_CLASSIFICATION	2.022180711813309E-6	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999979778192882	WITHOUT_CLASSIFICATION	2.022180711813309E-6	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.7631250192750185	WITHOUT_CLASSIFICATION	0.2368749807249816	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999639693632001	WITHOUT_CLASSIFICATION	3.603063679996849E-5	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999998831580933	WITHOUT_CLASSIFICATION	1.1684190663598708E-7	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999998831580933	WITHOUT_CLASSIFICATION	1.1684190663598708E-7	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999999198735572	WITHOUT_CLASSIFICATION	8.012644281547408E-8	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.999857060715458	WITHOUT_CLASSIFICATION	1.4293928454197808E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999867667721265	WITHOUT_CLASSIFICATION	1.3233227873533873E-5	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999867667721265	WITHOUT_CLASSIFICATION	1.3233227873533873E-5	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999768559527863	WITHOUT_CLASSIFICATION	2.3144047213674E-5	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999992279643974	WITHOUT_CLASSIFICATION	7.720356025221876E-7	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999999996375949	WITHOUT_CLASSIFICATION	3.6240512711358165E-10	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999999764867773	WITHOUT_CLASSIFICATION	2.3513222653377894E-8	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999999962554511	WITHOUT_CLASSIFICATION	3.744548842614846E-9	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999756719366507	WITHOUT_CLASSIFICATION	2.4328063349303286E-5	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999998902638058	WITHOUT_CLASSIFICATION	1.0973619423146546E-7	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999999570618284	WITHOUT_CLASSIFICATION	4.293817163022252E-8	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999985240431958	WITHOUT_CLASSIFICATION	1.4759568042409927E-6	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999996107327936	WITHOUT_CLASSIFICATION	3.8926720632239257E-7	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.999936399520669	WITHOUT_CLASSIFICATION	6.360047933096084E-5	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.999998484537782	WITHOUT_CLASSIFICATION	1.5154622181196528E-6	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999990006100266	WITHOUT_CLASSIFICATION	9.99389973409676E-7	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.999997781893984	WITHOUT_CLASSIFICATION	2.2181060159391583E-6	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999980161902093	WITHOUT_CLASSIFICATION	1.9838097906605473E-6	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.999999809905539	WITHOUT_CLASSIFICATION	1.9009446104820315E-7	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999966766377613	WITHOUT_CLASSIFICATION	3.3233622386832886E-6	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999998547762791	WITHOUT_CLASSIFICATION	1.4522372102764853E-7	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.999999050460331	WITHOUT_CLASSIFICATION	9.495396688956952E-7	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9904798177857105	WITHOUT_CLASSIFICATION	0.009520182214289566	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999999893027061	WITHOUT_CLASSIFICATION	1.069729397719131E-8	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999996851968765	WITHOUT_CLASSIFICATION	3.148031233927899E-7	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9997990333920537	WITHOUT_CLASSIFICATION	2.0096660794629177E-4	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999989185545942	WITHOUT_CLASSIFICATION	1.0814454057265713E-6	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999990643770936	WITHOUT_CLASSIFICATION	9.35622906320921E-7	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999999114978715	WITHOUT_CLASSIFICATION	8.850212854410345E-8	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999999388134696	WITHOUT_CLASSIFICATION	6.1186530416036E-8	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9999997330109789	WITHOUT_CLASSIFICATION	2.6698902121098646E-7	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999867068805	WITHOUT_CLASSIFICATION	1.3293119568301756E-8	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999867068805	WITHOUT_CLASSIFICATION	1.3293119568301756E-8	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999999999412799	WITHOUT_CLASSIFICATION	5.872022512016265E-11	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999999686787123	WITHOUT_CLASSIFICATION	3.132128761467058E-8	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999999831923491	WITHOUT_CLASSIFICATION	1.6807650921206086E-8	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999995571194812	WITHOUT_CLASSIFICATION	4.428805187907876E-7	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999999836250997	WITHOUT_CLASSIFICATION	1.63749002831992E-8	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.999999045875257	WITHOUT_CLASSIFICATION	9.541247429932722E-7	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999947268969908	WITHOUT_CLASSIFICATION	5.273103009279623E-6	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999999285255557	WITHOUT_CLASSIFICATION	7.147444432706984E-8	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999999994851936	WITHOUT_CLASSIFICATION	5.148064971543609E-10	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999974232585019	WITHOUT_CLASSIFICATION	2.5767414981369883E-6	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9975743632315297	WITHOUT_CLASSIFICATION	0.00242563676847027	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999999913451715	WITHOUT_CLASSIFICATION	8.654828492052112E-9	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9998856892777345	WITHOUT_CLASSIFICATION	1.1431072226542689E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999985584015157	WITHOUT_CLASSIFICATION	1.4415984841830837E-6	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999985124278639	WITHOUT_CLASSIFICATION	1.4875721361821738E-6	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999975276440274	WITHOUT_CLASSIFICATION	2.472355972606329E-6	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9988777972257632	WITHOUT_CLASSIFICATION	0.0011222027742367954	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999999685266775	WITHOUT_CLASSIFICATION	3.1473322538167297E-8	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9999997590809201	WITHOUT_CLASSIFICATION	2.4091907987151655E-7	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999979184997911	WITHOUT_CLASSIFICATION	2.081500208867558E-6	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999969808360974	WITHOUT_CLASSIFICATION	3.019163902611936E-6	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999915651712162	WITHOUT_CLASSIFICATION	8.434828783676147E-6	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999998896745231	WITHOUT_CLASSIFICATION	1.1032547678725189E-7	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999999388192721	WITHOUT_CLASSIFICATION	6.118072792238374E-8	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999985792625816	WITHOUT_CLASSIFICATION	1.420737418385383E-6	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.999443414765681	WITHOUT_CLASSIFICATION	5.565852343190618E-4	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999948156084784	WITHOUT_CLASSIFICATION	5.184391521624439E-6	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999986289981769	WITHOUT_CLASSIFICATION	1.3710018230859506E-6	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9999999058051038	WITHOUT_CLASSIFICATION	9.419489619127105E-8	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9999997944958178	WITHOUT_CLASSIFICATION	2.055041822651668E-7	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999999911617061	WITHOUT_CLASSIFICATION	8.838293803839167E-9	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999995139477519	WITHOUT_CLASSIFICATION	4.860522480313083E-7	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999991568343606	WITHOUT_CLASSIFICATION	8.431656393281664E-7	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9999970244692316	WITHOUT_CLASSIFICATION	2.9755307685424623E-6	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999996008095624	WITHOUT_CLASSIFICATION	3.9919043756316374E-7	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9998293602164332	WITHOUT_CLASSIFICATION	1.7063978356683906E-4	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999941724450427	WITHOUT_CLASSIFICATION	5.827554957305588E-6	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999878662842558	WITHOUT_CLASSIFICATION	1.2133715744157424E-5	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999962881496126	WITHOUT_CLASSIFICATION	3.711850387336019E-6	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999985745789973	WITHOUT_CLASSIFICATION	1.4254210026866624E-6	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.999929878725648	WITHOUT_CLASSIFICATION	7.012127435209282E-5	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999998256707785	WITHOUT_CLASSIFICATION	1.7432922151643115E-7	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999986146146427	WITHOUT_CLASSIFICATION	1.3853853573545907E-6	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999986146146427	WITHOUT_CLASSIFICATION	1.3853853573545907E-6	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999577636619293	WITHOUT_CLASSIFICATION	4.223633807060382E-5	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999999754484395	WITHOUT_CLASSIFICATION	2.4551560530744286E-8	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9939105794226042	WITHOUT_CLASSIFICATION	0.0060894205773958055	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.99999987298099	WITHOUT_CLASSIFICATION	1.2701900993983963E-7	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999257613758082	WITHOUT_CLASSIFICATION	7.42386241917414E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999938279265866	WITHOUT_CLASSIFICATION	6.172073413343793E-6	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9996102243473342	WITHOUT_CLASSIFICATION	3.8977565266575936E-4	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.999874260293134	WITHOUT_CLASSIFICATION	1.257397068659529E-4	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999994331212688	WITHOUT_CLASSIFICATION	5.668787311566172E-7	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9999995877736999	WITHOUT_CLASSIFICATION	4.122262999815672E-7	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9999999372756455	WITHOUT_CLASSIFICATION	6.272435452691455E-8	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.9999992259694274	WITHOUT_CLASSIFICATION	7.740305727815778E-7	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9999999713319934	WITHOUT_CLASSIFICATION	2.866800665252076E-8	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999999971315765	WITHOUT_CLASSIFICATION	2.8684234155940914E-9	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999939544048	WITHOUT_CLASSIFICATION	6.0455952894892815E-9	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9999998771564136	WITHOUT_CLASSIFICATION	1.228435863168669E-7	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999999998237764	WITHOUT_CLASSIFICATION	1.762236065871106E-9	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.999999743416889	WITHOUT_CLASSIFICATION	2.565831110098348E-7	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999999990905756	WITHOUT_CLASSIFICATION	9.094244075091824E-9	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9999998482106494	WITHOUT_CLASSIFICATION	1.517893506096014E-7	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999841781726	WITHOUT_CLASSIFICATION	1.5821827427876115E-8	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999976670376824	WITHOUT_CLASSIFICATION	2.332962317623697E-6	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999981340628256	WITHOUT_CLASSIFICATION	1.8659371745211889E-6	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999996050838469	WITHOUT_CLASSIFICATION	3.9491615313038644E-7	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.999999999823592	WITHOUT_CLASSIFICATION	1.7640795066954706E-10	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999993545655	WITHOUT_CLASSIFICATION	6.454345172279899E-10	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999993050368	WITHOUT_CLASSIFICATION	6.949631278209783E-10	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999999954246303	WITHOUT_CLASSIFICATION	4.575369763526212E-9	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999999837810588	WITHOUT_CLASSIFICATION	1.6218941185059258E-8	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9999999580290342	WITHOUT_CLASSIFICATION	4.1970965873213695E-8	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999999650700858	WITHOUT_CLASSIFICATION	3.492991418871569E-8	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999998756998488	WITHOUT_CLASSIFICATION	1.2430015120329051E-7	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.999983609527197	WITHOUT_CLASSIFICATION	1.6390472803072793E-5	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9903732670623394	WITHOUT_CLASSIFICATION	0.009626732937660556	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999878662842558	WITHOUT_CLASSIFICATION	1.2133715744157424E-5	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9992400228939009	WITHOUT_CLASSIFICATION	7.599771060991936E-4	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999999615797757	WITHOUT_CLASSIFICATION	3.8420224400267703E-8	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999999615797757	WITHOUT_CLASSIFICATION	3.8420224400267703E-8	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999999979609051	WITHOUT_CLASSIFICATION	2.0390948497182107E-9	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999999978572768	WITHOUT_CLASSIFICATION	2.1427231564332678E-9	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.999965746241552	WITHOUT_CLASSIFICATION	3.425375844792161E-5	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.9990996921890052	WITHOUT_CLASSIFICATION	9.00307810994892E-4	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9970723815454546	WITHOUT_CLASSIFICATION	0.0029276184545452607	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9974376197581845	WITHOUT_CLASSIFICATION	0.002562380241815481	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9959407789181798	WITHOUT_CLASSIFICATION	0.004059221081820248	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9975765658764988	WITHOUT_CLASSIFICATION	0.0024234341235011185	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9941007788259174	WITHOUT_CLASSIFICATION	0.005899221174082518	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9940371213198531	WITHOUT_CLASSIFICATION	0.00596287868014696	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9944196542003156	WITHOUT_CLASSIFICATION	0.005580345799684294	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9892248141446508	WITHOUT_CLASSIFICATION	0.01077518585534914	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9976008888307748	WITHOUT_CLASSIFICATION	0.002399111169225171	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.999989665145167	WITHOUT_CLASSIFICATION	1.0334854832961678E-5	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999957515020391	WITHOUT_CLASSIFICATION	4.24849796095075E-6	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999995760116944	WITHOUT_CLASSIFICATION	4.2398830561929905E-7	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9957820875602055	WITHOUT_CLASSIFICATION	0.0042179124397944655	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9753607762390839	WITHOUT_CLASSIFICATION	0.024639223760916092	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9881489477085345	WITHOUT_CLASSIFICATION	0.011851052291465509	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9880218388564631	WITHOUT_CLASSIFICATION	0.011978161143536897	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9917765711421224	WITHOUT_CLASSIFICATION	0.008223428857877704	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9924964994308735	WITHOUT_CLASSIFICATION	0.00750350056912641	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999900840379037	WITHOUT_CLASSIFICATION	9.915962096225188E-6	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999999405637398	WITHOUT_CLASSIFICATION	5.9436260170524965E-8	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.999999998018488	WITHOUT_CLASSIFICATION	1.9815118849095177E-9	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9984327177490124	WITHOUT_CLASSIFICATION	0.0015672822509876427	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999947152227103	WITHOUT_CLASSIFICATION	5.284777289763156E-6	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999998718940515	WITHOUT_CLASSIFICATION	1.2810594860663093E-7	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999997368443698	WITHOUT_CLASSIFICATION	2.6315563021832027E-7	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999922419404252	WITHOUT_CLASSIFICATION	7.758059574674615E-6	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9999999633737623	WITHOUT_CLASSIFICATION	3.662623769573933E-8	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999999765551137	WITHOUT_CLASSIFICATION	2.3444886241132038E-8	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9999997736289259	WITHOUT_CLASSIFICATION	2.2637107412738347E-7	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999999751633133	WITHOUT_CLASSIFICATION	2.4836686594185915E-8	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.999999074944306	WITHOUT_CLASSIFICATION	9.250556940617058E-7	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999986764527239	WITHOUT_CLASSIFICATION	1.323547276127728E-6	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999996357812	WITHOUT_CLASSIFICATION	3.6421875105009914E-10	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9984327177490124	WITHOUT_CLASSIFICATION	0.0015672822509876427	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999947152227103	WITHOUT_CLASSIFICATION	5.284777289763156E-6	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999998718940515	WITHOUT_CLASSIFICATION	1.2810594860663093E-7	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999922419404252	WITHOUT_CLASSIFICATION	7.758059574674615E-6	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9985330637668172	WITHOUT_CLASSIFICATION	0.001466936233182851	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999913914231	WITHOUT_CLASSIFICATION	8.608576964008454E-9	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9998056138293335	WITHOUT_CLASSIFICATION	1.9438617066650397E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999998805053503	WITHOUT_CLASSIFICATION	1.194946496979208E-7	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999961472083101	WITHOUT_CLASSIFICATION	3.8527916898802015E-6	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999990512584	WITHOUT_CLASSIFICATION	9.487415848844492E-10	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.999997493491894	WITHOUT_CLASSIFICATION	2.506508105900904E-6	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999998683299473	WITHOUT_CLASSIFICATION	1.3167005281324935E-7	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999999699346632	WITHOUT_CLASSIFICATION	3.006533668024831E-8	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999975928115822	WITHOUT_CLASSIFICATION	2.407188417791241E-6	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999999506194925	WITHOUT_CLASSIFICATION	4.938050747901768E-8	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999998555161187	WITHOUT_CLASSIFICATION	1.444838813412526E-7	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999999983393191	WITHOUT_CLASSIFICATION	1.660681031080364E-9	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999992254003055	WITHOUT_CLASSIFICATION	7.745996944956872E-7	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9999988754979304	WITHOUT_CLASSIFICATION	1.1245020696310488E-6	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9999990930607674	WITHOUT_CLASSIFICATION	9.069392326692109E-7	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999999588354285	WITHOUT_CLASSIFICATION	4.1164571573409526E-8	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999999870872572	WITHOUT_CLASSIFICATION	1.2912742636233428E-8	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999995713993918	WITHOUT_CLASSIFICATION	4.286006081354622E-7	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999996357812	WITHOUT_CLASSIFICATION	3.6421875105009914E-10	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999913914231	WITHOUT_CLASSIFICATION	8.608576964008454E-9	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9998056138293335	WITHOUT_CLASSIFICATION	1.9438617066650397E-4	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999961472083101	WITHOUT_CLASSIFICATION	3.8527916898802015E-6	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999990512584	WITHOUT_CLASSIFICATION	9.487415848844492E-10	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.999997493491894	WITHOUT_CLASSIFICATION	2.506508105900904E-6	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999998683299473	WITHOUT_CLASSIFICATION	1.3167005281324935E-7	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999999382180411	WITHOUT_CLASSIFICATION	6.178195890824056E-8	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999939716311089	WITHOUT_CLASSIFICATION	6.028368891076748E-6	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999999180008321	WITHOUT_CLASSIFICATION	8.199916782335796E-8	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999999203893	WITHOUT_CLASSIFICATION	7.961067964419003E-11	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999998654022878	WITHOUT_CLASSIFICATION	1.3459771225744117E-7	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999998654022878	WITHOUT_CLASSIFICATION	1.3459771225744117E-7	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9999999962573137	WITHOUT_CLASSIFICATION	3.742686300571887E-9	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999999162737192	WITHOUT_CLASSIFICATION	8.372628072043386E-8	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999999103059531	WITHOUT_CLASSIFICATION	8.969404691180283E-8	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999990194986599	WITHOUT_CLASSIFICATION	9.805013402049864E-7	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999999905180493	WITHOUT_CLASSIFICATION	9.481950604766355E-9	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999993353592053	WITHOUT_CLASSIFICATION	6.646407947540818E-7	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9999997310967467	WITHOUT_CLASSIFICATION	2.6890325326897963E-7	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.999999760349113	WITHOUT_CLASSIFICATION	2.3965088706028603E-7	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999995958096707	WITHOUT_CLASSIFICATION	4.041903293179207E-7	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.999991640093739	WITHOUT_CLASSIFICATION	8.35990626097602E-6	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999966290165271	WITHOUT_CLASSIFICATION	3.370983472904417E-6	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999718698523679	WITHOUT_CLASSIFICATION	2.813014763220804E-5	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999971541734851	WITHOUT_CLASSIFICATION	2.8458265148933967E-6	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999989999749527	WITHOUT_CLASSIFICATION	1.000025047313749E-6	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999995973453911	WITHOUT_CLASSIFICATION	4.026546089575645E-7	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999634086611958	WITHOUT_CLASSIFICATION	3.6591338804209374E-5	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9999999013687064	WITHOUT_CLASSIFICATION	9.86312935918381E-8	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999999994837527	WITHOUT_CLASSIFICATION	5.162472899423544E-10	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999999885629436	WITHOUT_CLASSIFICATION	1.1437056361452644E-8	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999990178207896	WITHOUT_CLASSIFICATION	9.821792105069578E-7	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9790017757664015	IMPLEMENTATION	0.020998224233598553	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999999307797419	WITHOUT_CLASSIFICATION	6.922025818235468E-8	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999999882318378	WITHOUT_CLASSIFICATION	1.1768162237122751E-8	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5478961305802676	WITHOUT_CLASSIFICATION	0.4521038694197323	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999935500169421	WITHOUT_CLASSIFICATION	6.4499830578116E-6	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999886461066843	WITHOUT_CLASSIFICATION	1.1353893315708201E-5	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999779312685	WITHOUT_CLASSIFICATION	2.2068731499736804E-8	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999989535960717	WITHOUT_CLASSIFICATION	1.0464039282085538E-6	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9999997156108429	WITHOUT_CLASSIFICATION	2.8438915717681006E-7	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999935500169421	WITHOUT_CLASSIFICATION	6.4499830578116E-6	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999886461066843	WITHOUT_CLASSIFICATION	1.1353893315708201E-5	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999989999749527	WITHOUT_CLASSIFICATION	1.000025047313749E-6	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999781305680961	WITHOUT_CLASSIFICATION	2.1869431903932107E-5	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999979151782552	WITHOUT_CLASSIFICATION	2.084821744790512E-6	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9996363596190031	WITHOUT_CLASSIFICATION	3.6364038099691103E-4	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999999999730527	WITHOUT_CLASSIFICATION	2.6947377914069877E-11	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999896433831416	WITHOUT_CLASSIFICATION	1.0356616858535889E-5	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999979573551427	WITHOUT_CLASSIFICATION	2.0426448573520977E-6	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999997216575084	WITHOUT_CLASSIFICATION	2.783424916318531E-7	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999998042704696	WITHOUT_CLASSIFICATION	1.9572953030237317E-7	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999990457116954	WITHOUT_CLASSIFICATION	9.542883046231954E-7	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999999999639918	WITHOUT_CLASSIFICATION	3.60081908897749E-11	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999924002868715	WITHOUT_CLASSIFICATION	7.5997131284972825E-6	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999328727563958	WITHOUT_CLASSIFICATION	6.712724360421809E-5	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9996789388775564	WITHOUT_CLASSIFICATION	3.210611224436044E-4	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999999729283401	WITHOUT_CLASSIFICATION	2.7071660001317494E-8	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999999918173439	WITHOUT_CLASSIFICATION	8.182656063329746E-9	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999985307061796	WITHOUT_CLASSIFICATION	1.4692938204447879E-6	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999618677636566	WITHOUT_CLASSIFICATION	3.8132236343461695E-5	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9998707238889314	WITHOUT_CLASSIFICATION	1.2927611106860725E-4	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999970521589547	WITHOUT_CLASSIFICATION	2.9478410451638324E-6	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999999977984403	WITHOUT_CLASSIFICATION	2.2015596571177877E-9	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.999999739865523	WITHOUT_CLASSIFICATION	2.6013447692808444E-7	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999999399022284	WITHOUT_CLASSIFICATION	6.009777161636326E-8	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999996126558446	WITHOUT_CLASSIFICATION	3.8734415539260555E-7	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999988931475	WITHOUT_CLASSIFICATION	1.106852613621127E-9	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999999575074585	WITHOUT_CLASSIFICATION	4.249254148090502E-8	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999998982780715	WITHOUT_CLASSIFICATION	1.0172192856419462E-7	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9999956613505094	WITHOUT_CLASSIFICATION	4.338649490492942E-6	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999963813037582	WITHOUT_CLASSIFICATION	3.6186962418453126E-6	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999999969751083	WITHOUT_CLASSIFICATION	3.024891788324186E-9	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999999990154467	WITHOUT_CLASSIFICATION	9.845533546329655E-10	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999996684602871	WITHOUT_CLASSIFICATION	3.3153971295088335E-7	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999990554363593	WITHOUT_CLASSIFICATION	9.445636406881687E-7	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999990554363593	WITHOUT_CLASSIFICATION	9.445636406881687E-7	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999971541734851	WITHOUT_CLASSIFICATION	2.8458265148933967E-6	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999999999024489	WITHOUT_CLASSIFICATION	9.755109538793342E-11	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999974270810144	WITHOUT_CLASSIFICATION	2.572918985727527E-6	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999995156369446	WITHOUT_CLASSIFICATION	4.843630554329675E-7	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999952521038483	WITHOUT_CLASSIFICATION	4.747896151717492E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999952521038483	WITHOUT_CLASSIFICATION	4.747896151717492E-6	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999056867122	WITHOUT_CLASSIFICATION	9.431328781341545E-8	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999946324758984	WITHOUT_CLASSIFICATION	5.367524101583906E-6	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999996438002373	WITHOUT_CLASSIFICATION	3.5619976274082053E-7	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999999157548739	WITHOUT_CLASSIFICATION	8.42451260239774E-8	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999999702237972	WITHOUT_CLASSIFICATION	2.9776202771081974E-8	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999999999982704	WITHOUT_CLASSIFICATION	1.729697743705187E-12	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.99999874668905	WITHOUT_CLASSIFICATION	1.253310949995384E-6	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999953915459173	WITHOUT_CLASSIFICATION	4.60845408268127E-6	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999951850963	WITHOUT_CLASSIFICATION	4.814903749057144E-9	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999988817591056	WITHOUT_CLASSIFICATION	1.1182408944189165E-6	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999998095839656	WITHOUT_CLASSIFICATION	1.9041603437403847E-7	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999999402703227	WITHOUT_CLASSIFICATION	5.9729677327642E-8	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999998643712292	WITHOUT_CLASSIFICATION	1.3562877083624904E-7	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999986273731446	WITHOUT_CLASSIFICATION	1.3726268554154962E-6	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999996994518087	WITHOUT_CLASSIFICATION	3.0054819130003323E-7	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.9999990081686284	WITHOUT_CLASSIFICATION	9.918313715966517E-7	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999999718314	WITHOUT_CLASSIFICATION	2.8168648999745497E-11	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999999718314	WITHOUT_CLASSIFICATION	2.8168648999745497E-11	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999999845624723	WITHOUT_CLASSIFICATION	1.543752774499353E-8	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999999845624723	WITHOUT_CLASSIFICATION	1.543752774499353E-8	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.999999998134391	WITHOUT_CLASSIFICATION	1.8656089517601454E-9	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999999895942555	WITHOUT_CLASSIFICATION	1.0405744491481916E-8	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999960156431968	WITHOUT_CLASSIFICATION	3.984356803202815E-6	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9916930470736262	WITHOUT_CLASSIFICATION	0.008306952926373911	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999999875317513	WITHOUT_CLASSIFICATION	1.2468248618710185E-8	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999986178513934	WITHOUT_CLASSIFICATION	1.382148606591047E-6	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999970953035057	WITHOUT_CLASSIFICATION	2.9046964944123857E-6	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999999402703227	WITHOUT_CLASSIFICATION	5.9729677327642E-8	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999998643712292	WITHOUT_CLASSIFICATION	1.3562877083624904E-7	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999996994518087	WITHOUT_CLASSIFICATION	3.0054819130003323E-7	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999999996693519	WITHOUT_CLASSIFICATION	3.3064811980930834E-10	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999998710379552	WITHOUT_CLASSIFICATION	1.289620447653553E-7	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999999886612589	WITHOUT_CLASSIFICATION	1.1338741013506116E-8	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999997074731445	WITHOUT_CLASSIFICATION	2.9252685553458696E-7	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999999999186824	WITHOUT_CLASSIFICATION	8.131760187971299E-11	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999983063017666	WITHOUT_CLASSIFICATION	1.693698233510599E-6	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999987660541464	WITHOUT_CLASSIFICATION	1.2339458535834566E-6	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999911603886149	WITHOUT_CLASSIFICATION	8.839611385038134E-6	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999986178456134	WITHOUT_CLASSIFICATION	1.3821543866228885E-6	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999999971533	WITHOUT_CLASSIFICATION	2.8467435714631115E-12	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9989315952302815	WITHOUT_CLASSIFICATION	0.001068404769718481	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999977316774169	WITHOUT_CLASSIFICATION	2.2683225831116595E-6	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999999338473708	WITHOUT_CLASSIFICATION	6.615262916752798E-8	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999998976406008	WITHOUT_CLASSIFICATION	1.0235939920514603E-7	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999256556386682	WITHOUT_CLASSIFICATION	7.434436133188659E-5	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999999485935872	WITHOUT_CLASSIFICATION	5.140641288131048E-8	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999998577831407	WITHOUT_CLASSIFICATION	1.4221685932956398E-7	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999986524737873	WITHOUT_CLASSIFICATION	1.3475262128045204E-6	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999793804757797	WITHOUT_CLASSIFICATION	2.061952422035942E-5	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999999985023368	WITHOUT_CLASSIFICATION	1.497663201231393E-9	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999999948386614	WITHOUT_CLASSIFICATION	5.161338546210738E-9	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999754420095999	WITHOUT_CLASSIFICATION	2.45579904000723E-5	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999917115671455	WITHOUT_CLASSIFICATION	8.28843285448244E-6	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999999936576331	WITHOUT_CLASSIFICATION	6.342366891542946E-9	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.999999932925069	WITHOUT_CLASSIFICATION	6.707493108782072E-8	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999998527820164	WITHOUT_CLASSIFICATION	1.472179836256033E-7	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999894853106724	WITHOUT_CLASSIFICATION	1.05146893275844E-5	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999987777167731	WITHOUT_CLASSIFICATION	1.2222832268754844E-6	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999999790961768	WITHOUT_CLASSIFICATION	2.0903823235548593E-8	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999995356537974	WITHOUT_CLASSIFICATION	4.643462025366135E-7	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999990555973843	WITHOUT_CLASSIFICATION	9.444026157020499E-7	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999999291845769	WITHOUT_CLASSIFICATION	7.081542303683382E-8	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999999832921012	WITHOUT_CLASSIFICATION	1.6707898841246475E-8	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999999674848183	WITHOUT_CLASSIFICATION	3.251518172112673E-8	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999951944154966	WITHOUT_CLASSIFICATION	4.8055845035045746E-6	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999995336142098	WITHOUT_CLASSIFICATION	4.6638579013449857E-7	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999959971000382	WITHOUT_CLASSIFICATION	4.002899961883308E-6	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999999611123059	WITHOUT_CLASSIFICATION	3.8887693949576326E-8	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999993536424934	WITHOUT_CLASSIFICATION	6.463575066291399E-7	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999999990451605	WITHOUT_CLASSIFICATION	9.548395641422613E-10	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999999228511489	WITHOUT_CLASSIFICATION	7.714885099987055E-8	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999974270810144	WITHOUT_CLASSIFICATION	2.572918985727527E-6	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999959971000382	WITHOUT_CLASSIFICATION	4.002899961883308E-6	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999999994154067	WITHOUT_CLASSIFICATION	5.845932006448713E-10	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999852532866	WITHOUT_CLASSIFICATION	1.4746713409313634E-8	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.999998598739582	WITHOUT_CLASSIFICATION	1.401260418088424E-6	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999996612242713	WITHOUT_CLASSIFICATION	3.387757286755697E-7	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999996612242713	WITHOUT_CLASSIFICATION	3.387757286755697E-7	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999096234698918	WITHOUT_CLASSIFICATION	9.037653010820537E-5	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999619945969771	WITHOUT_CLASSIFICATION	3.800540302283569E-5	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999998063901064	WITHOUT_CLASSIFICATION	1.9360989348332106E-7	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999999993784748	WITHOUT_CLASSIFICATION	6.215251000336829E-10	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9990494257905559	WITHOUT_CLASSIFICATION	9.505742094440751E-4	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999999692039914	WITHOUT_CLASSIFICATION	3.079600858149819E-8	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999999999991226	WITHOUT_CLASSIFICATION	8.775260435353209E-13	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999958973310012	WITHOUT_CLASSIFICATION	4.102668998711799E-6	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999772767145	WITHOUT_CLASSIFICATION	2.272328548030743E-8	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999772767145	WITHOUT_CLASSIFICATION	2.272328548030743E-8	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999998019789883	WITHOUT_CLASSIFICATION	1.98021011674296E-7	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999971205977125	WITHOUT_CLASSIFICATION	2.8794022874013236E-6	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999999982553565	WITHOUT_CLASSIFICATION	1.7446435575670499E-9	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9999999974536385	WITHOUT_CLASSIFICATION	2.5463614980683723E-9	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999999999175111	WITHOUT_CLASSIFICATION	8.248891785678845E-11	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999999548106675	WITHOUT_CLASSIFICATION	4.5189332490699006E-8	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999999950176333	WITHOUT_CLASSIFICATION	4.982366714105727E-9	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999999891375422	WITHOUT_CLASSIFICATION	1.0862457687332666E-8	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9999997921989267	WITHOUT_CLASSIFICATION	2.0780107329983666E-7	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999999991253563	WITHOUT_CLASSIFICATION	8.746437734086202E-10	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999922571152283	WITHOUT_CLASSIFICATION	7.74288477168391E-6	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999999807527237	WITHOUT_CLASSIFICATION	1.9247276250577666E-8	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999994478898836	WITHOUT_CLASSIFICATION	5.521101163080308E-7	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999996676229567	WITHOUT_CLASSIFICATION	3.3237704331077277E-7	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999996676229567	WITHOUT_CLASSIFICATION	3.3237704331077277E-7	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999999934648661	WITHOUT_CLASSIFICATION	6.535133908688396E-9	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999998683299473	WITHOUT_CLASSIFICATION	1.3167005281324935E-7	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999999999632297	WITHOUT_CLASSIFICATION	3.67702352604585E-11	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999991306551367	WITHOUT_CLASSIFICATION	8.693448632634504E-7	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999999939924	WITHOUT_CLASSIFICATION	6.0075987369057E-12	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999999989126898	WITHOUT_CLASSIFICATION	1.0873102365043483E-9	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999999995638211	WITHOUT_CLASSIFICATION	4.3617891153986737E-10	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999996573378628	WITHOUT_CLASSIFICATION	3.4266213719045985E-7	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999997104676476	WITHOUT_CLASSIFICATION	2.895323524221496E-7	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9999999277320263	WITHOUT_CLASSIFICATION	7.226797375263523E-8	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999989468032249	WITHOUT_CLASSIFICATION	1.0531967751571538E-6	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999999501226682	WITHOUT_CLASSIFICATION	4.987733182806824E-8	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999603677668628	WITHOUT_CLASSIFICATION	3.963223313725921E-5	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999999997399105	WITHOUT_CLASSIFICATION	2.600894629939486E-10	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999999996999096	WITHOUT_CLASSIFICATION	3.000904054508354E-10	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999999891571931	WITHOUT_CLASSIFICATION	1.0842806871397977E-8	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999999615838622	WITHOUT_CLASSIFICATION	3.8416137714238614E-8	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999998869508012	WITHOUT_CLASSIFICATION	1.1304919884670545E-7	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999999787973101	WITHOUT_CLASSIFICATION	2.1202689949382726E-8	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999998967650785	WITHOUT_CLASSIFICATION	1.032349214193499E-7	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9999955320438564	WITHOUT_CLASSIFICATION	4.467956143665961E-6	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9999999958219108	WITHOUT_CLASSIFICATION	4.178089211286435E-9	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999495032789039	WITHOUT_CLASSIFICATION	5.049672109600857E-5	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999995601702025	WITHOUT_CLASSIFICATION	4.3982979741743546E-7	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.7999725254753604	WITHOUT_CLASSIFICATION	0.20002747452463962	IMPLEMENTATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999990821338522	WITHOUT_CLASSIFICATION	9.178661478343381E-7	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9999996005599155	WITHOUT_CLASSIFICATION	3.994400845388715E-7	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9999998746062903	WITHOUT_CLASSIFICATION	1.253937097611737E-7	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9999999665235302	WITHOUT_CLASSIFICATION	3.3476469724666976E-8	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9985035098761567	WITHOUT_CLASSIFICATION	0.00149649012384331	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999998447804075	WITHOUT_CLASSIFICATION	1.5521959249908072E-7	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9999986700795933	WITHOUT_CLASSIFICATION	1.329920406678503E-6	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999999506498832	WITHOUT_CLASSIFICATION	4.935011677464404E-8	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999676736944808	WITHOUT_CLASSIFICATION	3.2326305519120726E-5	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999964738958921	WITHOUT_CLASSIFICATION	3.5261041080096092E-6	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999999943676946	WITHOUT_CLASSIFICATION	5.632305347268731E-9	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999991849517175	WITHOUT_CLASSIFICATION	8.150482825685921E-7	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999996096178975	WITHOUT_CLASSIFICATION	3.903821024880889E-7	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.999999952285841	WITHOUT_CLASSIFICATION	4.771415898292855E-8	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999987468635874	WITHOUT_CLASSIFICATION	1.2531364126079194E-6	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.999999990739485	WITHOUT_CLASSIFICATION	9.260515061767997E-9	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9913083677892274	WITHOUT_CLASSIFICATION	0.00869163221077265	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999857280270505	WITHOUT_CLASSIFICATION	1.4271972949425099E-5	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999999774665151	WITHOUT_CLASSIFICATION	2.2533484904437084E-8	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.999999855874514	WITHOUT_CLASSIFICATION	1.4412548603320292E-7	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999994162608924	WITHOUT_CLASSIFICATION	5.837391076951027E-7	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999882003416	WITHOUT_CLASSIFICATION	1.1799658280580327E-8	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.999999999661351	WITHOUT_CLASSIFICATION	3.386490355800824E-10	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999696313057893	WITHOUT_CLASSIFICATION	3.03686942107085E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999935500169421	WITHOUT_CLASSIFICATION	6.4499830578116E-6	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999935500169421	WITHOUT_CLASSIFICATION	6.4499830578116E-6	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999987349569173	WITHOUT_CLASSIFICATION	1.2650430826922232E-6	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999999688185407	WITHOUT_CLASSIFICATION	3.118145928292087E-8	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999999262297281	WITHOUT_CLASSIFICATION	7.37702718721169E-8	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999999998341512	WITHOUT_CLASSIFICATION	1.658488614607227E-10	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999981650129363	WITHOUT_CLASSIFICATION	1.8349870637145947E-6	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999875083055971	WITHOUT_CLASSIFICATION	1.24916944028898E-5	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999999960384555	WITHOUT_CLASSIFICATION	3.961544536503124E-9	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999991014836	WITHOUT_CLASSIFICATION	8.985163348961118E-10	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999717611311	WITHOUT_CLASSIFICATION	2.8238868970428502E-8	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999997978704027	WITHOUT_CLASSIFICATION	2.0212959725349678E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999997663066253	WITHOUT_CLASSIFICATION	2.3369337462564602E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999997663066253	WITHOUT_CLASSIFICATION	2.3369337462564602E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999997663066253	WITHOUT_CLASSIFICATION	2.3369337462564602E-7	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9939925713842741	WITHOUT_CLASSIFICATION	0.0060074286157258665	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999999397158287	WITHOUT_CLASSIFICATION	6.028417131657347E-8	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9999996264404276	WITHOUT_CLASSIFICATION	3.7355957234933084E-7	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999169560659	WITHOUT_CLASSIFICATION	8.304393400495968E-8	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999169560659	WITHOUT_CLASSIFICATION	8.304393400495968E-8	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999862211442221	WITHOUT_CLASSIFICATION	1.3778855777952875E-5	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999753685666695	WITHOUT_CLASSIFICATION	2.4631433330490822E-5	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.999999999492237	WITHOUT_CLASSIFICATION	5.07763110619587E-10	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999999881679698	WITHOUT_CLASSIFICATION	1.1832030218105344E-8	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999999730549114	WITHOUT_CLASSIFICATION	2.694508856572086E-8	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.999324428939598	WITHOUT_CLASSIFICATION	6.755710604019838E-4	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999999891460701	WITHOUT_CLASSIFICATION	1.0853929769030553E-8	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999626787061986	WITHOUT_CLASSIFICATION	3.732129380144995E-5	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999999837419041	WITHOUT_CLASSIFICATION	1.6258095891150803E-8	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999884412506588	WITHOUT_CLASSIFICATION	1.1558749341305823E-5	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999884412506588	WITHOUT_CLASSIFICATION	1.1558749341305823E-5	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999998620494397	WITHOUT_CLASSIFICATION	1.3795056026357464E-7	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999998847471167	WITHOUT_CLASSIFICATION	1.1525288342035592E-7	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999997713172329	WITHOUT_CLASSIFICATION	2.2868276709724824E-7	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999998051773134	WITHOUT_CLASSIFICATION	1.948226865946776E-7	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999998996029681	WITHOUT_CLASSIFICATION	1.0039703193615629E-7	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999979325684228	WITHOUT_CLASSIFICATION	2.0674315772768125E-6	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999991329820593	WITHOUT_CLASSIFICATION	8.670179406283564E-7	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999954044398037	WITHOUT_CLASSIFICATION	4.595560196263114E-6	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999990962892684	WITHOUT_CLASSIFICATION	9.037107315101636E-7	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.999999561757253	WITHOUT_CLASSIFICATION	4.382427469942979E-7	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.999999937511986	WITHOUT_CLASSIFICATION	6.24880140253717E-8	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999999074103219	WITHOUT_CLASSIFICATION	9.25896781984425E-8	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9999999373422935	WITHOUT_CLASSIFICATION	6.265770642455864E-8	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999998693554049	WITHOUT_CLASSIFICATION	1.3064459515417405E-7	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9972904700300357	WITHOUT_CLASSIFICATION	0.0027095299699643706	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999999206061272	WITHOUT_CLASSIFICATION	7.939387286835401E-8	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999977226169044	WITHOUT_CLASSIFICATION	2.277383095562641E-6	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999999810052463	WITHOUT_CLASSIFICATION	1.8994753645118765E-8	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999980480657442	WITHOUT_CLASSIFICATION	1.9519342556867173E-6	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999997277054749	WITHOUT_CLASSIFICATION	2.7229452507477577E-7	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999861667969824	WITHOUT_CLASSIFICATION	1.3833203017689424E-5	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999829011032747	WITHOUT_CLASSIFICATION	1.7098896725212048E-5	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999988746056307	WITHOUT_CLASSIFICATION	1.125394369216015E-6	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.999990977551398	WITHOUT_CLASSIFICATION	9.022448602004706E-6	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999988032695672	WITHOUT_CLASSIFICATION	1.1967304326836722E-6	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999946738508521	WITHOUT_CLASSIFICATION	5.326149148034549E-6	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.999999806554351	WITHOUT_CLASSIFICATION	1.9344564907917023E-7	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.999999873379394	WITHOUT_CLASSIFICATION	1.2662060608137997E-7	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999999815338424	WITHOUT_CLASSIFICATION	1.8466157523335156E-8	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.99999919149296	WITHOUT_CLASSIFICATION	8.085070399627598E-7	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999996469970366	WITHOUT_CLASSIFICATION	3.530029635053899E-7	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999620055914923	WITHOUT_CLASSIFICATION	3.7994408507689084E-5	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999998861026979	WITHOUT_CLASSIFICATION	1.1389730219819545E-7	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999996469970366	WITHOUT_CLASSIFICATION	3.530029635053899E-7	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999988885250358	WITHOUT_CLASSIFICATION	1.111474964252412E-6	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999992605388998	WITHOUT_CLASSIFICATION	7.394611002580324E-7	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999997082343611	WITHOUT_CLASSIFICATION	2.917656389114476E-7	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999995471746871	WITHOUT_CLASSIFICATION	4.528253128523637E-7	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999998167522511	WITHOUT_CLASSIFICATION	1.8324774889671536E-7	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999998523521226	WITHOUT_CLASSIFICATION	1.4764787729753433E-7	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999999816038085	WITHOUT_CLASSIFICATION	1.8396191461318118E-8	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999998644930873	WITHOUT_CLASSIFICATION	1.3550691270513563E-7	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999983834642736	WITHOUT_CLASSIFICATION	1.6165357263176506E-6	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999913314125605	WITHOUT_CLASSIFICATION	8.668587439515593E-6	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999777874672571	WITHOUT_CLASSIFICATION	2.2212532742923178E-5	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999990324376637	WITHOUT_CLASSIFICATION	9.675623362839056E-7	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999921236244396	WITHOUT_CLASSIFICATION	7.876375560450333E-6	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999376017334539	WITHOUT_CLASSIFICATION	6.239826654601228E-5	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999997695207297	WITHOUT_CLASSIFICATION	2.3047927024893217E-7	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.999998679852581	WITHOUT_CLASSIFICATION	1.3201474189835932E-6	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999987256934784	WITHOUT_CLASSIFICATION	1.2743065215967456E-6	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999991451293816	WITHOUT_CLASSIFICATION	8.548706184500404E-7	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999980107903833	WITHOUT_CLASSIFICATION	1.989209616725873E-6	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9998877326109595	WITHOUT_CLASSIFICATION	1.122673890405676E-4	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999998719486776	WITHOUT_CLASSIFICATION	1.2805132239583408E-7	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999997040379524	WITHOUT_CLASSIFICATION	2.959620477007046E-7	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.99999888224513	WITHOUT_CLASSIFICATION	1.1177548700241172E-6	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999999004727286	WITHOUT_CLASSIFICATION	9.952727141154467E-8	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999999175243357	WITHOUT_CLASSIFICATION	8.247566438501409E-8	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.999999999795073	WITHOUT_CLASSIFICATION	2.0492695089169483E-10	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999998294968621	WITHOUT_CLASSIFICATION	1.7050313793219184E-7	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999997474923453	WITHOUT_CLASSIFICATION	2.5250765469510604E-7	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9999983527632124	WITHOUT_CLASSIFICATION	1.6472367876098362E-6	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9999954375087773	WITHOUT_CLASSIFICATION	4.562491222701337E-6	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9999998982579651	WITHOUT_CLASSIFICATION	1.017420348882961E-7	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9978497492678862	WITHOUT_CLASSIFICATION	0.0021502507321138724	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.8123941947365624	WITHOUT_CLASSIFICATION	0.1876058052634376	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.999999998788544	WITHOUT_CLASSIFICATION	1.2114560569433698E-9	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999836387815082	WITHOUT_CLASSIFICATION	1.6361218491726337E-5	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9999999896363886	WITHOUT_CLASSIFICATION	1.0363611300154871E-8	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9999997911900483	WITHOUT_CLASSIFICATION	2.08809951803651E-7	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9999992282489251	WITHOUT_CLASSIFICATION	7.717510750063756E-7	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999878840979043	WITHOUT_CLASSIFICATION	1.211590209560876E-5	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9999999066398985	WITHOUT_CLASSIFICATION	9.336010153744719E-8	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.99999931941993	WITHOUT_CLASSIFICATION	6.805800698414346E-7	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999844768554954	WITHOUT_CLASSIFICATION	1.5523144504625653E-5	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9999406138609435	WITHOUT_CLASSIFICATION	5.9386139056544556E-5	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9999829136099275	WITHOUT_CLASSIFICATION	1.7086390072402986E-5	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999984677175648	WITHOUT_CLASSIFICATION	1.5322824351693071E-6	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9999999896953667	WITHOUT_CLASSIFICATION	1.0304633245690459E-8	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9999978524553177	WITHOUT_CLASSIFICATION	2.147544682380086E-6	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999999946706689	WITHOUT_CLASSIFICATION	5.3293311314188084E-9	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999996832114919	WITHOUT_CLASSIFICATION	3.1678850813204387E-7	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.999999875782501	WITHOUT_CLASSIFICATION	1.2421749897260673E-7	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999999149688663	WITHOUT_CLASSIFICATION	8.503113360122017E-8	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999976924860905	WITHOUT_CLASSIFICATION	2.307513909443222E-6	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999913710157987	WITHOUT_CLASSIFICATION	8.628984201371457E-6	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999996832114919	WITHOUT_CLASSIFICATION	3.1678850813204387E-7	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.8989051421959616	IMPLEMENTATION	0.10109485780403835	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.8989051421959616	IMPLEMENTATION	0.10109485780403835	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999997352381591	WITHOUT_CLASSIFICATION	2.647618409212668E-7	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999998284161399	WITHOUT_CLASSIFICATION	1.7158386016178952E-7	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999999024809224	WITHOUT_CLASSIFICATION	9.751907760645552E-8	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999999366410088	WITHOUT_CLASSIFICATION	6.335899112548555E-8	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999997636861548	WITHOUT_CLASSIFICATION	2.363138451283758E-7	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999978570784037	WITHOUT_CLASSIFICATION	2.1429215962310937E-6	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999995498054306	WITHOUT_CLASSIFICATION	4.501945693411759E-7	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.958693160990774	IMPLEMENTATION	0.04130683900922598	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999998349772012	WITHOUT_CLASSIFICATION	1.6502279876590746E-7	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999897136641975	WITHOUT_CLASSIFICATION	1.0286335802506586E-5	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.999999999595267	WITHOUT_CLASSIFICATION	4.0473298741693466E-10	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999832510749	WITHOUT_CLASSIFICATION	1.6748925111711492E-8	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.99999849004762	WITHOUT_CLASSIFICATION	1.509952380023241E-6	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999994622403711	WITHOUT_CLASSIFICATION	5.377596289690119E-7	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9995329887431392	WITHOUT_CLASSIFICATION	4.6701125686082165E-4	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999302974464124	WITHOUT_CLASSIFICATION	6.970255358757987E-5	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999999988113553	WITHOUT_CLASSIFICATION	1.1886447302771743E-9	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999963460038177	WITHOUT_CLASSIFICATION	3.6539961821581813E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999963460038177	WITHOUT_CLASSIFICATION	3.6539961821581813E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999963460038177	WITHOUT_CLASSIFICATION	3.6539961821581813E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999963460038177	WITHOUT_CLASSIFICATION	3.6539961821581813E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999963460038177	WITHOUT_CLASSIFICATION	3.6539961821581813E-6	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9999997180044214	WITHOUT_CLASSIFICATION	2.8199557849150395E-7	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999999244683258	WITHOUT_CLASSIFICATION	7.553167421551766E-8	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999228107043513	WITHOUT_CLASSIFICATION	7.718929564873166E-5	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999911547872	WITHOUT_CLASSIFICATION	8.845212868473158E-9	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999999915952592	WITHOUT_CLASSIFICATION	8.404740791360378E-9	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.999999995180024	WITHOUT_CLASSIFICATION	4.819975931207049E-9	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999750704861355	WITHOUT_CLASSIFICATION	2.4929513864438676E-5	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999996041242822	WITHOUT_CLASSIFICATION	3.958757177948401E-7	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999992788407396	WITHOUT_CLASSIFICATION	7.211592604090723E-7	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.999998942031657	WITHOUT_CLASSIFICATION	1.0579683430214559E-6	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9999996308089424	WITHOUT_CLASSIFICATION	3.691910577009841E-7	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.999999765692822	WITHOUT_CLASSIFICATION	2.3430717802507264E-7	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9999991421198058	WITHOUT_CLASSIFICATION	8.578801941859807E-7	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9999994294551876	WITHOUT_CLASSIFICATION	5.705448124625194E-7	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9999995221910936	WITHOUT_CLASSIFICATION	4.778089063528068E-7	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9999998384700316	WITHOUT_CLASSIFICATION	1.6152996830891104E-7	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9999995158518091	WITHOUT_CLASSIFICATION	4.84148190897617E-7	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9999990218022162	WITHOUT_CLASSIFICATION	9.78197783798957E-7	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9999996521494365	WITHOUT_CLASSIFICATION	3.478505634571403E-7	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999991679301073	WITHOUT_CLASSIFICATION	8.320698926854963E-7	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.999999599685903	WITHOUT_CLASSIFICATION	4.003140969828932E-7	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9999996731842963	WITHOUT_CLASSIFICATION	3.2681570374013055E-7	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999998685020064	WITHOUT_CLASSIFICATION	1.3149799366610592E-7	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9999996187265437	WITHOUT_CLASSIFICATION	3.8127345632796455E-7	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999997998687489	WITHOUT_CLASSIFICATION	2.0013125114252753E-7	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9999997940342443	WITHOUT_CLASSIFICATION	2.0596575571639073E-7	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9999990218922714	WITHOUT_CLASSIFICATION	9.781077286287666E-7	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9999993132549959	WITHOUT_CLASSIFICATION	6.867450039969262E-7	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999994552188783	WITHOUT_CLASSIFICATION	5.447811216778636E-7	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999998722699843	WITHOUT_CLASSIFICATION	1.2773001569236676E-7	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999996716955967	WITHOUT_CLASSIFICATION	3.2830440335176657E-7	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9999996634242356	WITHOUT_CLASSIFICATION	3.3657576434363364E-7	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9999996424195613	WITHOUT_CLASSIFICATION	3.575804387181366E-7	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9999995495948868	WITHOUT_CLASSIFICATION	4.504051133016686E-7	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9999998453926136	WITHOUT_CLASSIFICATION	1.5460738632686117E-7	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9999996851535503	WITHOUT_CLASSIFICATION	3.148464496652832E-7	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9999995582764051	WITHOUT_CLASSIFICATION	4.417235949528947E-7	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9999996280423679	WITHOUT_CLASSIFICATION	3.719576320682185E-7	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.999999853996811	WITHOUT_CLASSIFICATION	1.4600318891212026E-7	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9999996413480694	WITHOUT_CLASSIFICATION	3.586519305391126E-7	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9999994475221987	WITHOUT_CLASSIFICATION	5.524778011980403E-7	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999994292208464	WITHOUT_CLASSIFICATION	5.707791535657979E-7	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9999998139425001	WITHOUT_CLASSIFICATION	1.860574999717567E-7	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9999994643966698	WITHOUT_CLASSIFICATION	5.356033301954995E-7	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9999994225607184	WITHOUT_CLASSIFICATION	5.774392816383671E-7	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9999997627258155	WITHOUT_CLASSIFICATION	2.3727418448127747E-7	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9999998148258252	WITHOUT_CLASSIFICATION	1.8517417471623506E-7	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9999998124977822	WITHOUT_CLASSIFICATION	1.8750221776039815E-7	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9999993691079248	WITHOUT_CLASSIFICATION	6.308920751701291E-7	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.999999700204692	WITHOUT_CLASSIFICATION	2.997953080471129E-7	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999228107043513	WITHOUT_CLASSIFICATION	7.718929564873166E-5	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999997505258469	WITHOUT_CLASSIFICATION	2.4947415309564235E-7	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999998173373701	WITHOUT_CLASSIFICATION	1.826626298042995E-7	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.999999694676388	WITHOUT_CLASSIFICATION	3.0532361194618907E-7	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999996154228602	WITHOUT_CLASSIFICATION	3.8457713980348435E-7	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9999995955792991	WITHOUT_CLASSIFICATION	4.04420701020639E-7	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.999999595173665	WITHOUT_CLASSIFICATION	4.048263349893792E-7	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9999996774550092	WITHOUT_CLASSIFICATION	3.2254499084089976E-7	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999995955151364	WITHOUT_CLASSIFICATION	4.044848636347034E-7	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9999995920459963	WITHOUT_CLASSIFICATION	4.079540037043366E-7	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9999996651947003	WITHOUT_CLASSIFICATION	3.3480529972349686E-7	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9999996089897942	WITHOUT_CLASSIFICATION	3.9101020574051306E-7	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.9999995785353015	WITHOUT_CLASSIFICATION	4.21464698496367E-7	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.9999995947783006	WITHOUT_CLASSIFICATION	4.0522169941978783E-7	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9999996904900178	WITHOUT_CLASSIFICATION	3.0950998228944626E-7	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9999997436016791	WITHOUT_CLASSIFICATION	2.563983209251223E-7	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999997618537549	WITHOUT_CLASSIFICATION	2.3814624506112993E-7	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9999993794011693	WITHOUT_CLASSIFICATION	6.205988306726365E-7	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9999992213666344	WITHOUT_CLASSIFICATION	7.786333655957977E-7	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.999999648141239	WITHOUT_CLASSIFICATION	3.5185876106701013E-7	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9999995124940225	WITHOUT_CLASSIFICATION	4.875059773907825E-7	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9999996245845436	WITHOUT_CLASSIFICATION	3.754154564400257E-7	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9999995312335129	WITHOUT_CLASSIFICATION	4.687664871013215E-7	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9999995586200832	WITHOUT_CLASSIFICATION	4.41379916896124E-7	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9999997479862576	WITHOUT_CLASSIFICATION	2.520137423988901E-7	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9999995913569436	WITHOUT_CLASSIFICATION	4.0864305640113485E-7	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9999998394489474	WITHOUT_CLASSIFICATION	1.6055105245953792E-7	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999998355139965	WITHOUT_CLASSIFICATION	1.6448600344889032E-7	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999994984442087	WITHOUT_CLASSIFICATION	5.015557913825869E-7	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9999995919729485	WITHOUT_CLASSIFICATION	4.080270514043877E-7	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9999994093256614	WITHOUT_CLASSIFICATION	5.906743385551673E-7	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9999998844513848	WITHOUT_CLASSIFICATION	1.1554861521065755E-7	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9999997029548032	WITHOUT_CLASSIFICATION	2.970451966800004E-7	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9999997055159793	WITHOUT_CLASSIFICATION	2.944840206501747E-7	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999998694055048	WITHOUT_CLASSIFICATION	1.3059449520521976E-7	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9999997261171659	WITHOUT_CLASSIFICATION	2.7388283404636084E-7	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.999999608492426	WITHOUT_CLASSIFICATION	3.9150757403782397E-7	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.999999095630823	WITHOUT_CLASSIFICATION	9.043691769665061E-7	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9999996848074905	WITHOUT_CLASSIFICATION	3.151925094554579E-7	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9999996438007995	WITHOUT_CLASSIFICATION	3.561992004030332E-7	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9999997950509999	WITHOUT_CLASSIFICATION	2.049490000674175E-7	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9999996776626843	WITHOUT_CLASSIFICATION	3.223373157611726E-7	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9999995923199922	WITHOUT_CLASSIFICATION	4.07680007754098E-7	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999998313216066	WITHOUT_CLASSIFICATION	1.6867839339457896E-7	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9999996439080591	WITHOUT_CLASSIFICATION	3.5609194093971816E-7	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999997966820763	WITHOUT_CLASSIFICATION	2.0331792377535538E-7	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999995175951398	WITHOUT_CLASSIFICATION	4.824048601339875E-7	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999988634401685	WITHOUT_CLASSIFICATION	1.1365598314665016E-6	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999996221578736	WITHOUT_CLASSIFICATION	3.7784212635403763E-7	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9999995775328697	WITHOUT_CLASSIFICATION	4.2246713029260416E-7	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9999996758326949	WITHOUT_CLASSIFICATION	3.2416730508474166E-7	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9999995709204763	WITHOUT_CLASSIFICATION	4.290795236601083E-7	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9999995830906324	WITHOUT_CLASSIFICATION	4.169093675683274E-7	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9999991166957264	WITHOUT_CLASSIFICATION	8.833042735915194E-7	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9999986971090241	WITHOUT_CLASSIFICATION	1.3028909758441994E-6	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9999987583041849	WITHOUT_CLASSIFICATION	1.2416958150974072E-6	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9999995709815934	WITHOUT_CLASSIFICATION	4.290184065356114E-7	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9999997895021923	WITHOUT_CLASSIFICATION	2.1049780774953008E-7	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9999994925050839	WITHOUT_CLASSIFICATION	5.074949160469728E-7	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9999994875363115	WITHOUT_CLASSIFICATION	5.124636884683397E-7	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999994874981325	WITHOUT_CLASSIFICATION	5.125018674180632E-7	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999997504158786	WITHOUT_CLASSIFICATION	2.495841213582063E-7	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999994094067396	WITHOUT_CLASSIFICATION	5.905932603713365E-7	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9999997801201047	WITHOUT_CLASSIFICATION	2.1987989515703218E-7	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9999994698705109	WITHOUT_CLASSIFICATION	5.301294891293299E-7	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9999982388263055	WITHOUT_CLASSIFICATION	1.7611736945427487E-6	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9999993694068383	WITHOUT_CLASSIFICATION	6.305931616838845E-7	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9999986677584881	WITHOUT_CLASSIFICATION	1.3322415119448695E-6	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.999999490977886	WITHOUT_CLASSIFICATION	5.090221140314256E-7	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9999994909559748	WITHOUT_CLASSIFICATION	5.090440252293422E-7	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.99999949742256	WITHOUT_CLASSIFICATION	5.025774400234195E-7	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999995017108287	WITHOUT_CLASSIFICATION	4.982891712768065E-7	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.999999369253605	WITHOUT_CLASSIFICATION	6.30746394948881E-7	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999993750689015	WITHOUT_CLASSIFICATION	6.249310985753156E-7	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9999997358058158	WITHOUT_CLASSIFICATION	2.641941841851835E-7	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9999997498526915	WITHOUT_CLASSIFICATION	2.50147308472708E-7	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9999992665677463	WITHOUT_CLASSIFICATION	7.334322537484709E-7	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9999998554268168	WITHOUT_CLASSIFICATION	1.4457318311646992E-7	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9999997213463274	WITHOUT_CLASSIFICATION	2.7865367259488114E-7	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9999996284301821	WITHOUT_CLASSIFICATION	3.715698179531616E-7	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999998315780058	WITHOUT_CLASSIFICATION	1.684219942616225E-7	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9999995853448207	WITHOUT_CLASSIFICATION	4.1465517929568297E-7	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9999997648770365	WITHOUT_CLASSIFICATION	2.351229635798795E-7	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999995208823532	WITHOUT_CLASSIFICATION	4.791176467603432E-7	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9999993926258632	WITHOUT_CLASSIFICATION	6.073741368055303E-7	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9999995660974488	WITHOUT_CLASSIFICATION	4.3390255117888195E-7	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999997365819893	WITHOUT_CLASSIFICATION	2.6341801077653534E-7	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9999995194187066	WITHOUT_CLASSIFICATION	4.805812933996936E-7	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9999995728648	WITHOUT_CLASSIFICATION	4.271352000379532E-7	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999998285127462	WITHOUT_CLASSIFICATION	1.7148725378603392E-7	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9999995022660708	WITHOUT_CLASSIFICATION	4.977339291627874E-7	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999997011667853	WITHOUT_CLASSIFICATION	2.9883321473050344E-7	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9999994194228167	WITHOUT_CLASSIFICATION	5.80577183429106E-7	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9999993667737405	WITHOUT_CLASSIFICATION	6.332262595576851E-7	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9999994806074827	WITHOUT_CLASSIFICATION	5.193925172567749E-7	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.999999333143161	WITHOUT_CLASSIFICATION	6.668568390088095E-7	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999995701992287	WITHOUT_CLASSIFICATION	4.298007712379337E-7	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9999994264531116	WITHOUT_CLASSIFICATION	5.735468884493224E-7	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9999995787042043	WITHOUT_CLASSIFICATION	4.212957957275912E-7	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9999995940700527	WITHOUT_CLASSIFICATION	4.059299472607587E-7	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9999998163431264	WITHOUT_CLASSIFICATION	1.836568736632196E-7	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.999999602628192	WITHOUT_CLASSIFICATION	3.9737180799825576E-7	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9999995360886371	WITHOUT_CLASSIFICATION	4.6391136295163733E-7	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9999993510988	WITHOUT_CLASSIFICATION	6.489011999282689E-7	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9999992402282826	WITHOUT_CLASSIFICATION	7.597717174203216E-7	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9999994457108954	WITHOUT_CLASSIFICATION	5.54289104629417E-7	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9999997964498719	WITHOUT_CLASSIFICATION	2.0355012811229858E-7	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9999997081756705	WITHOUT_CLASSIFICATION	2.918243295024333E-7	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9999996294226993	WITHOUT_CLASSIFICATION	3.7057730077451494E-7	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9999996292792378	WITHOUT_CLASSIFICATION	3.707207621666506E-7	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9999997152732936	WITHOUT_CLASSIFICATION	2.8472670648238426E-7	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9999993146170841	WITHOUT_CLASSIFICATION	6.853829159206041E-7	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999995233691451	WITHOUT_CLASSIFICATION	4.7663085487201044E-7	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.999999751779919	WITHOUT_CLASSIFICATION	2.4822008109563585E-7	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9999996843111953	WITHOUT_CLASSIFICATION	3.1568880466291487E-7	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.999999717023702	WITHOUT_CLASSIFICATION	2.829762980223583E-7	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999983179836344	WITHOUT_CLASSIFICATION	1.6820163655303783E-6	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.9999992316790112	WITHOUT_CLASSIFICATION	7.683209888625034E-7	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9999991447741324	WITHOUT_CLASSIFICATION	8.552258675510713E-7	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9999990078964449	WITHOUT_CLASSIFICATION	9.921035550750915E-7	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999996800369331	WITHOUT_CLASSIFICATION	3.1996306703965085E-7	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999992289613765	WITHOUT_CLASSIFICATION	7.710386236181638E-7	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.999999336664764	WITHOUT_CLASSIFICATION	6.633352359509209E-7	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.99999935992414	WITHOUT_CLASSIFICATION	6.400758599090626E-7	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999995629949328	WITHOUT_CLASSIFICATION	4.370050673434025E-7	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.999998609211561	WITHOUT_CLASSIFICATION	1.3907884389289093E-6	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.999999240133751	WITHOUT_CLASSIFICATION	7.598662490403035E-7	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999989855797384	WITHOUT_CLASSIFICATION	1.0144202615535003E-6	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9999990977527736	WITHOUT_CLASSIFICATION	9.022472262939627E-7	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9999993631366009	WITHOUT_CLASSIFICATION	6.368633990974372E-7	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9999991253667885	WITHOUT_CLASSIFICATION	8.746332115901928E-7	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9999986542878815	WITHOUT_CLASSIFICATION	1.345712118453494E-6	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9999984051692189	WITHOUT_CLASSIFICATION	1.5948307811452409E-6	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9999992066189071	WITHOUT_CLASSIFICATION	7.933810930155233E-7	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999996813216877	WITHOUT_CLASSIFICATION	3.186783121909391E-7	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999997512213828	WITHOUT_CLASSIFICATION	2.4877861721469166E-7	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.999999771491341	WITHOUT_CLASSIFICATION	2.2850865910617993E-7	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9999993092127516	WITHOUT_CLASSIFICATION	6.907872483950468E-7	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9999995557780526	WITHOUT_CLASSIFICATION	4.4422194752947634E-7	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9999994539957267	WITHOUT_CLASSIFICATION	5.46004273267137E-7	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.9999994233288609	WITHOUT_CLASSIFICATION	5.766711389452245E-7	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999994033987146	WITHOUT_CLASSIFICATION	5.966012854109216E-7	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999989230979243	WITHOUT_CLASSIFICATION	1.07690207576227E-6	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9999993978572035	WITHOUT_CLASSIFICATION	6.021427965115523E-7	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9999992384326922	WITHOUT_CLASSIFICATION	7.615673077920857E-7	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9999995532716679	WITHOUT_CLASSIFICATION	4.4672833205040875E-7	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9999992523010444	WITHOUT_CLASSIFICATION	7.47698955667468E-7	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9999996408345538	WITHOUT_CLASSIFICATION	3.5916544619193693E-7	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9999992445306248	WITHOUT_CLASSIFICATION	7.554693752533828E-7	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9999992514958296	WITHOUT_CLASSIFICATION	7.485041705204782E-7	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9999997602110157	WITHOUT_CLASSIFICATION	2.397889843340201E-7	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.999999406175035	WITHOUT_CLASSIFICATION	5.938249650940731E-7	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9999990304292137	WITHOUT_CLASSIFICATION	9.695707863055126E-7	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9999991387924807	WITHOUT_CLASSIFICATION	8.612075191829972E-7	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999997271314534	WITHOUT_CLASSIFICATION	2.728685466239704E-7	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9999991449855026	WITHOUT_CLASSIFICATION	8.550144974417968E-7	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9999991648193711	WITHOUT_CLASSIFICATION	8.35180628914927E-7	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.999998912614763	WITHOUT_CLASSIFICATION	1.0873852369924052E-6	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9999996746567084	WITHOUT_CLASSIFICATION	3.2534329162571425E-7	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9999990128757753	WITHOUT_CLASSIFICATION	9.87124224719622E-7	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9999992897853097	WITHOUT_CLASSIFICATION	7.102146903082047E-7	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9999978748755963	WITHOUT_CLASSIFICATION	2.1251244037650024E-6	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999989919069603	WITHOUT_CLASSIFICATION	1.0080930396428993E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999995984474878	WITHOUT_CLASSIFICATION	4.01552512179989E-7	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9999989794211752	WITHOUT_CLASSIFICATION	1.0205788248092359E-6	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.999998388261285	WITHOUT_CLASSIFICATION	1.611738715152041E-6	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9999991372401212	WITHOUT_CLASSIFICATION	8.627598788523654E-7	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9999994516570053	WITHOUT_CLASSIFICATION	5.483429947674237E-7	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9999990833979193	WITHOUT_CLASSIFICATION	9.166020805433616E-7	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9999992756976531	WITHOUT_CLASSIFICATION	7.243023469303202E-7	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999990330960081	WITHOUT_CLASSIFICATION	9.669039918311453E-7	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999995259788144	WITHOUT_CLASSIFICATION	4.7402118569345514E-7	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9999989701944061	WITHOUT_CLASSIFICATION	1.0298055938519586E-6	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999996258942471	WITHOUT_CLASSIFICATION	3.741057530196709E-7	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9999990474971185	WITHOUT_CLASSIFICATION	9.525028813841496E-7	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9999993095499581	WITHOUT_CLASSIFICATION	6.904500418074508E-7	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9999987143914536	WITHOUT_CLASSIFICATION	1.2856085463823853E-6	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9999985908566564	WITHOUT_CLASSIFICATION	1.4091433435197947E-6	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999988252234097	WITHOUT_CLASSIFICATION	1.17477659034895E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999997254127289	WITHOUT_CLASSIFICATION	2.7458727117465997E-7	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9999996939051985	WITHOUT_CLASSIFICATION	3.0609480147621014E-7	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999992023907343	WITHOUT_CLASSIFICATION	7.976092657391539E-7	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9999989905411288	WITHOUT_CLASSIFICATION	1.0094588711760639E-6	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9999992304157057	WITHOUT_CLASSIFICATION	7.695842942691562E-7	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9999995054393067	WITHOUT_CLASSIFICATION	4.945606932137885E-7	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9999992305306753	WITHOUT_CLASSIFICATION	7.694693247437104E-7	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.999998964736994	WITHOUT_CLASSIFICATION	1.035263006029303E-6	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.999998918588448	WITHOUT_CLASSIFICATION	1.0814115518833724E-6	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9999987208577368	WITHOUT_CLASSIFICATION	1.2791422632678084E-6	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9999986182252485	WITHOUT_CLASSIFICATION	1.3817747515750933E-6	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9999992442614254	WITHOUT_CLASSIFICATION	7.557385747097858E-7	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9999991423289399	WITHOUT_CLASSIFICATION	8.576710599164583E-7	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9999989210217665	WITHOUT_CLASSIFICATION	1.0789782335056049E-6	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999989242882728	WITHOUT_CLASSIFICATION	1.0757117272908019E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999987831697726	WITHOUT_CLASSIFICATION	1.216830227453081E-6	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9999994692081633	WITHOUT_CLASSIFICATION	5.307918367473864E-7	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9999991421863828	WITHOUT_CLASSIFICATION	8.578136172760053E-7	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9999993362230749	WITHOUT_CLASSIFICATION	6.6377692510682E-7	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9999991224533004	WITHOUT_CLASSIFICATION	8.775466997356268E-7	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999991236749048	WITHOUT_CLASSIFICATION	8.763250951572282E-7	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999995978100041	WITHOUT_CLASSIFICATION	4.0218999588948355E-7	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9999987942920049	WITHOUT_CLASSIFICATION	1.2057079950880326E-6	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9999979691658012	WITHOUT_CLASSIFICATION	2.030834198785096E-6	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9999988681301656	WITHOUT_CLASSIFICATION	1.1318698343727813E-6	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9999988258649258	WITHOUT_CLASSIFICATION	1.1741350742290319E-6	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9999989085611164	WITHOUT_CLASSIFICATION	1.0914388837028978E-6	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9999987097490132	WITHOUT_CLASSIFICATION	1.2902509867899222E-6	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9999978490275513	WITHOUT_CLASSIFICATION	2.150972448724595E-6	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.999999593190252	WITHOUT_CLASSIFICATION	4.068097480099891E-7	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9999989890358544	WITHOUT_CLASSIFICATION	1.0109641455504823E-6	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.9999987174681377	WITHOUT_CLASSIFICATION	1.2825318622264517E-6	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9999988413356425	WITHOUT_CLASSIFICATION	1.1586643575342597E-6	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999996148479682	WITHOUT_CLASSIFICATION	3.8515203194000973E-7	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999993931319938	WITHOUT_CLASSIFICATION	6.068680061493954E-7	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999994111949819	WITHOUT_CLASSIFICATION	5.888050181332225E-7	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9999992825527307	WITHOUT_CLASSIFICATION	7.17447269233913E-7	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999996473974232	WITHOUT_CLASSIFICATION	3.5260257683967053E-7	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9999992491406793	WITHOUT_CLASSIFICATION	7.508593207771813E-7	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999991407307793	WITHOUT_CLASSIFICATION	8.592692207894414E-7	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9999991970969067	WITHOUT_CLASSIFICATION	8.029030932889146E-7	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9999990812413395	WITHOUT_CLASSIFICATION	9.187586605003177E-7	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999996198617095	WITHOUT_CLASSIFICATION	3.801382904638623E-7	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9999991975015463	WITHOUT_CLASSIFICATION	8.024984537098006E-7	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9999989608822921	WITHOUT_CLASSIFICATION	1.0391177078299778E-6	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9999986706497759	WITHOUT_CLASSIFICATION	1.329350224136844E-6	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.9999980176496301	WITHOUT_CLASSIFICATION	1.9823503698337296E-6	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999978956923008	WITHOUT_CLASSIFICATION	2.104307699177219E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999991368244668	WITHOUT_CLASSIFICATION	8.631755330605438E-7	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999993145208501	WITHOUT_CLASSIFICATION	6.854791497683792E-7	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9999927805863977	WITHOUT_CLASSIFICATION	7.219413602337664E-6	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.999998081439955	WITHOUT_CLASSIFICATION	1.9185600449916753E-6	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999986305998219	WITHOUT_CLASSIFICATION	1.3694001781323184E-6	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999938486681081	WITHOUT_CLASSIFICATION	6.151331891881343E-6	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999599660230399	WITHOUT_CLASSIFICATION	4.003397696001961E-5	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9988558137097958	WITHOUT_CLASSIFICATION	0.0011441862902041595	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.999240522974889	WITHOUT_CLASSIFICATION	7.594770251109792E-4	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999695219850854	WITHOUT_CLASSIFICATION	3.0478014914537804E-5	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9998851529970717	WITHOUT_CLASSIFICATION	1.1484700292833044E-4	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9998783407572466	WITHOUT_CLASSIFICATION	1.2165924275337875E-4	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9999997146233773	WITHOUT_CLASSIFICATION	2.853766227661072E-7	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999996877613362	WITHOUT_CLASSIFICATION	3.122386638089199E-7	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9999957712603632	WITHOUT_CLASSIFICATION	4.2287396367945085E-6	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999980514962012	WITHOUT_CLASSIFICATION	1.9485037988061425E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.998120680152353	WITHOUT_CLASSIFICATION	0.0018793198476469745	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999538577347522	WITHOUT_CLASSIFICATION	4.614226524781131E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9995138502383436	WITHOUT_CLASSIFICATION	4.8614976165646214E-4	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.999999997400873	WITHOUT_CLASSIFICATION	2.599126902995957E-9	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999996866865342	WITHOUT_CLASSIFICATION	3.13313465890026E-7	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999976112563211	WITHOUT_CLASSIFICATION	2.3887436787902084E-6	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999998181798467	WITHOUT_CLASSIFICATION	1.8182015318063983E-7	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999999995499294	WITHOUT_CLASSIFICATION	4.5007066354052764E-10	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999903907073	WITHOUT_CLASSIFICATION	9.60929278883721E-9	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999903907073	WITHOUT_CLASSIFICATION	9.60929278883721E-9	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999998061650576	WITHOUT_CLASSIFICATION	1.938349425343046E-7	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999702003929215	WITHOUT_CLASSIFICATION	2.9799607078481615E-5	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.999999991179263	WITHOUT_CLASSIFICATION	8.82073699548343E-9	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999997865188487	WITHOUT_CLASSIFICATION	2.1348115146145717E-7	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999997306505005	WITHOUT_CLASSIFICATION	2.6934949944352635E-7	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999999973571886	WITHOUT_CLASSIFICATION	2.6428113417263554E-9	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999984862426883	WITHOUT_CLASSIFICATION	1.5137573117113578E-6	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.999999968935613	WITHOUT_CLASSIFICATION	3.1064386912823614E-8	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999228022556076	WITHOUT_CLASSIFICATION	7.719774439239751E-5	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999470067304699	WITHOUT_CLASSIFICATION	5.299326953021795E-5	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.999999873623994	WITHOUT_CLASSIFICATION	1.2637600596339554E-7	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999987671750415	WITHOUT_CLASSIFICATION	1.2328249584956792E-6	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999971149174767	WITHOUT_CLASSIFICATION	2.885082523254335E-6	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999992570192852	WITHOUT_CLASSIFICATION	7.429807147551922E-7	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999994258159646	WITHOUT_CLASSIFICATION	5.741840353721853E-7	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999979035237128	WITHOUT_CLASSIFICATION	2.0964762871586165E-6	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999998373973567	WITHOUT_CLASSIFICATION	1.6260264339701328E-7	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999976394461471	WITHOUT_CLASSIFICATION	2.3605538529043447E-6	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999994513372926	WITHOUT_CLASSIFICATION	5.486627073504781E-7	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9994341071387349	WITHOUT_CLASSIFICATION	5.65892861265139E-4	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999869416231	WITHOUT_CLASSIFICATION	1.3058376914634884E-8	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9999974595797634	WITHOUT_CLASSIFICATION	2.5404202365648935E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9886056909326965	WITHOUT_CLASSIFICATION	0.01139430906730346	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.999995401556385	WITHOUT_CLASSIFICATION	4.598443614957902E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9886056909326965	WITHOUT_CLASSIFICATION	0.01139430906730346	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999874510408565	WITHOUT_CLASSIFICATION	1.2548959143437133E-5	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999948398177986	WITHOUT_CLASSIFICATION	5.160182201472065E-6	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.8607211282359422	WITHOUT_CLASSIFICATION	0.1392788717640578	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999909145607763	WITHOUT_CLASSIFICATION	9.08543922377431E-6	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.999999989317397	WITHOUT_CLASSIFICATION	1.0682603040979823E-8	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999993011041969	WITHOUT_CLASSIFICATION	6.988958031474691E-7	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999993011041969	WITHOUT_CLASSIFICATION	6.988958031474691E-7	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999993011041969	WITHOUT_CLASSIFICATION	6.988958031474691E-7	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999995009007732	WITHOUT_CLASSIFICATION	4.99099226756898E-7	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999889144841251	WITHOUT_CLASSIFICATION	1.108551587490296E-5	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999999539398164	WITHOUT_CLASSIFICATION	4.60601835670521E-8	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999987411409443	WITHOUT_CLASSIFICATION	1.2588590557168122E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999987411409443	WITHOUT_CLASSIFICATION	1.2588590557168122E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999987411409443	WITHOUT_CLASSIFICATION	1.2588590557168122E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999987411409443	WITHOUT_CLASSIFICATION	1.2588590557168122E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999987411409443	WITHOUT_CLASSIFICATION	1.2588590557168122E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999987411409443	WITHOUT_CLASSIFICATION	1.2588590557168122E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999980807698428	WITHOUT_CLASSIFICATION	1.91923015723182E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999980807698428	WITHOUT_CLASSIFICATION	1.91923015723182E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999980807698428	WITHOUT_CLASSIFICATION	1.91923015723182E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999980807698428	WITHOUT_CLASSIFICATION	1.91923015723182E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999980807698428	WITHOUT_CLASSIFICATION	1.91923015723182E-6	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999688185979299	WITHOUT_CLASSIFICATION	3.118140207019144E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999688185979299	WITHOUT_CLASSIFICATION	3.118140207019144E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999688185979299	WITHOUT_CLASSIFICATION	3.118140207019144E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999688185979299	WITHOUT_CLASSIFICATION	3.118140207019144E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999688185979299	WITHOUT_CLASSIFICATION	3.118140207019144E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999333347168181	WITHOUT_CLASSIFICATION	6.666528318185996E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999333347168181	WITHOUT_CLASSIFICATION	6.666528318185996E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999333347168181	WITHOUT_CLASSIFICATION	6.666528318185996E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999333347168181	WITHOUT_CLASSIFICATION	6.666528318185996E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999333347168181	WITHOUT_CLASSIFICATION	6.666528318185996E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999333347168181	WITHOUT_CLASSIFICATION	6.666528318185996E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999406737015861	WITHOUT_CLASSIFICATION	5.9326298413856404E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999406737015861	WITHOUT_CLASSIFICATION	5.9326298413856404E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999406737015861	WITHOUT_CLASSIFICATION	5.9326298413856404E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999406737015861	WITHOUT_CLASSIFICATION	5.9326298413856404E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999406737015861	WITHOUT_CLASSIFICATION	5.9326298413856404E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998765099983088	WITHOUT_CLASSIFICATION	1.234900016913027E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998765099983088	WITHOUT_CLASSIFICATION	1.234900016913027E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998765099983088	WITHOUT_CLASSIFICATION	1.234900016913027E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998765099983088	WITHOUT_CLASSIFICATION	1.234900016913027E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998765099983088	WITHOUT_CLASSIFICATION	1.234900016913027E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999228107043513	WITHOUT_CLASSIFICATION	7.718929564873166E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999228107043513	WITHOUT_CLASSIFICATION	7.718929564873166E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999228107043513	WITHOUT_CLASSIFICATION	7.718929564873166E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999228107043513	WITHOUT_CLASSIFICATION	7.718929564873166E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999228107043513	WITHOUT_CLASSIFICATION	7.718929564873166E-5	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999911547872	WITHOUT_CLASSIFICATION	8.845212868473158E-9	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.999999995180024	WITHOUT_CLASSIFICATION	4.819975931207049E-9	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999750704861355	WITHOUT_CLASSIFICATION	2.4929513864438676E-5	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999996041242822	WITHOUT_CLASSIFICATION	3.958757177948401E-7	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999992788407396	WITHOUT_CLASSIFICATION	7.211592604090723E-7	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999992279643974	WITHOUT_CLASSIFICATION	7.720356025221876E-7	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999991679301073	WITHOUT_CLASSIFICATION	8.320698926854963E-7	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999997998687489	WITHOUT_CLASSIFICATION	2.0013125114252753E-7	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999994552188783	WITHOUT_CLASSIFICATION	5.447811216778636E-7	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999998722699843	WITHOUT_CLASSIFICATION	1.2773001569236676E-7	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999997538018298	WITHOUT_CLASSIFICATION	2.461981701563477E-7	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999996716955967	WITHOUT_CLASSIFICATION	3.2830440335176657E-7	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9999996968875593	WITHOUT_CLASSIFICATION	3.031124407596733E-7	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9999994927696736	WITHOUT_CLASSIFICATION	5.072303264085038E-7	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.999999487483688	WITHOUT_CLASSIFICATION	5.12516312036552E-7	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9999997333093205	WITHOUT_CLASSIFICATION	2.6669067955923274E-7	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9999997674537063	WITHOUT_CLASSIFICATION	2.3254629364298306E-7	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9999989198879313	WITHOUT_CLASSIFICATION	1.0801120687028595E-6	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9999996063362816	WITHOUT_CLASSIFICATION	3.9366371838868524E-7	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9999996023916276	WITHOUT_CLASSIFICATION	3.9760837246896513E-7	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9999998519274382	WITHOUT_CLASSIFICATION	1.4807256169134578E-7	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9999996871770345	WITHOUT_CLASSIFICATION	3.1282296543405544E-7	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9999995590264587	WITHOUT_CLASSIFICATION	4.4097354138697636E-7	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9999997001730436	WITHOUT_CLASSIFICATION	2.9982695635934163E-7	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9999995089219483	WITHOUT_CLASSIFICATION	4.91078051567703E-7	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9999996732138012	WITHOUT_CLASSIFICATION	3.2678619874081163E-7	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9999995230813129	WITHOUT_CLASSIFICATION	4.769186871594771E-7	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9999998371749069	WITHOUT_CLASSIFICATION	1.6282509310731584E-7	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9999996708901392	WITHOUT_CLASSIFICATION	3.2910986085536096E-7	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9999996744587906	WITHOUT_CLASSIFICATION	3.2554120943911287E-7	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9999998526542428	WITHOUT_CLASSIFICATION	1.4734575719867062E-7	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9999996372310386	WITHOUT_CLASSIFICATION	3.6276896148527307E-7	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9999996048449076	WITHOUT_CLASSIFICATION	3.951550924796705E-7	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9999994473673899	WITHOUT_CLASSIFICATION	5.526326100831409E-7	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.9999996290026762	WITHOUT_CLASSIFICATION	3.709973237901552E-7	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9999996194536227	WITHOUT_CLASSIFICATION	3.8054637728282387E-7	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9999995475113875	WITHOUT_CLASSIFICATION	4.524886125806213E-7	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9999995437034677	WITHOUT_CLASSIFICATION	4.5629653229394483E-7	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.9999995679168511	WITHOUT_CLASSIFICATION	4.3208314885823795E-7	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9999984536524914	WITHOUT_CLASSIFICATION	1.546347508505031E-6	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9999994502813279	WITHOUT_CLASSIFICATION	5.497186721193296E-7	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9999995519771211	WITHOUT_CLASSIFICATION	4.48022878915294E-7	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9999996240283642	WITHOUT_CLASSIFICATION	3.759716358306223E-7	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9999997934320362	WITHOUT_CLASSIFICATION	2.0656796392303504E-7	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9999997265814021	WITHOUT_CLASSIFICATION	2.734185978891522E-7	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9999997344018644	WITHOUT_CLASSIFICATION	2.6559813560639465E-7	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9999997672730406	WITHOUT_CLASSIFICATION	2.3272695932042973E-7	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.9999992137446685	WITHOUT_CLASSIFICATION	7.862553315030081E-7	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.9999997103127521	WITHOUT_CLASSIFICATION	2.896872479624366E-7	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999998173373701	WITHOUT_CLASSIFICATION	1.826626298042995E-7	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.999999694676388	WITHOUT_CLASSIFICATION	3.0532361194618907E-7	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999996154228602	WITHOUT_CLASSIFICATION	3.8457713980348435E-7	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999995955151364	WITHOUT_CLASSIFICATION	4.044848636347034E-7	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999997618537549	WITHOUT_CLASSIFICATION	2.3814624506112993E-7	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999998355139965	WITHOUT_CLASSIFICATION	1.6448600344889032E-7	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999985907849033	WITHOUT_CLASSIFICATION	1.4092150966168834E-6	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999994984442087	WITHOUT_CLASSIFICATION	5.015557913825869E-7	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999998313216066	WITHOUT_CLASSIFICATION	1.6867839339457896E-7	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999997966820763	WITHOUT_CLASSIFICATION	2.0331792377535538E-7	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999995581226225	WITHOUT_CLASSIFICATION	4.418773774031497E-7	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999995175951398	WITHOUT_CLASSIFICATION	4.824048601339875E-7	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999988634401685	WITHOUT_CLASSIFICATION	1.1365598314665016E-6	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9999997332055257	WITHOUT_CLASSIFICATION	2.667944742394498E-7	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9999996138865546	WITHOUT_CLASSIFICATION	3.861134454108943E-7	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9999998355109567	WITHOUT_CLASSIFICATION	1.644890433159522E-7	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9999995009596553	WITHOUT_CLASSIFICATION	4.990403446112537E-7	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9999988910114441	WITHOUT_CLASSIFICATION	1.1089885558887101E-6	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9999991539826478	WITHOUT_CLASSIFICATION	8.460173522668572E-7	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.9999997047718865	WITHOUT_CLASSIFICATION	2.952281134662766E-7	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9999996767403319	WITHOUT_CLASSIFICATION	3.232596681329111E-7	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9999994867739047	WITHOUT_CLASSIFICATION	5.132260952705251E-7	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9999995004701899	WITHOUT_CLASSIFICATION	4.99529810154424E-7	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9999998354614932	WITHOUT_CLASSIFICATION	1.645385068702379E-7	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9999995827663091	WITHOUT_CLASSIFICATION	4.172336909447163E-7	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9999995302190036	WITHOUT_CLASSIFICATION	4.6978099635878466E-7	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9999997316140263	WITHOUT_CLASSIFICATION	2.683859736368285E-7	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9999997074177388	WITHOUT_CLASSIFICATION	2.925822611754076E-7	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9999998355734617	WITHOUT_CLASSIFICATION	1.644265383028724E-7	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.9999996035833602	WITHOUT_CLASSIFICATION	3.9641663990960246E-7	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9999995996723079	WITHOUT_CLASSIFICATION	4.0032769201792044E-7	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9999994198124449	WITHOUT_CLASSIFICATION	5.801875551139775E-7	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9999996498289021	WITHOUT_CLASSIFICATION	3.5017109783347526E-7	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9999986371144424	WITHOUT_CLASSIFICATION	1.3628855575517832E-6	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9999995029070771	WITHOUT_CLASSIFICATION	4.970929228575151E-7	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9999995266782066	WITHOUT_CLASSIFICATION	4.7332179345085626E-7	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9999997446157488	WITHOUT_CLASSIFICATION	2.553842511424649E-7	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.999999391561733	WITHOUT_CLASSIFICATION	6.084382669859676E-7	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9999994987341669	WITHOUT_CLASSIFICATION	5.012658330211098E-7	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9999997528004931	WITHOUT_CLASSIFICATION	2.471995068268512E-7	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9999997307615769	WITHOUT_CLASSIFICATION	2.6923842316939393E-7	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9999996936735203	WITHOUT_CLASSIFICATION	3.063264797840386E-7	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9999996667082081	WITHOUT_CLASSIFICATION	3.332917919933846E-7	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9999997465667739	WITHOUT_CLASSIFICATION	2.534332260921182E-7	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9999995956489579	WITHOUT_CLASSIFICATION	4.043510421254664E-7	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9999990939164687	WITHOUT_CLASSIFICATION	9.060835314149605E-7	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9999996060934216	WITHOUT_CLASSIFICATION	3.9390657832262647E-7	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9999986155346009	WITHOUT_CLASSIFICATION	1.3844653990419817E-6	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9999992287279235	WITHOUT_CLASSIFICATION	7.712720764978041E-7	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999997504158786	WITHOUT_CLASSIFICATION	2.495841213582063E-7	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999994685360182	WITHOUT_CLASSIFICATION	5.314639818336653E-7	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999994094067396	WITHOUT_CLASSIFICATION	5.905932603713365E-7	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999995017108287	WITHOUT_CLASSIFICATION	4.982891712768065E-7	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999993750689015	WITHOUT_CLASSIFICATION	6.249310985753156E-7	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999998315780058	WITHOUT_CLASSIFICATION	1.684219942616225E-7	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999995208823532	WITHOUT_CLASSIFICATION	4.791176467603432E-7	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999997365819893	WITHOUT_CLASSIFICATION	2.6341801077653534E-7	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999997011667853	WITHOUT_CLASSIFICATION	2.9883321473050344E-7	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999995701992287	WITHOUT_CLASSIFICATION	4.298007712379337E-7	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999994494174557	WITHOUT_CLASSIFICATION	5.50582544292041E-7	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9999998220026916	WITHOUT_CLASSIFICATION	1.7799730850888605E-7	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9999995425105147	WITHOUT_CLASSIFICATION	4.574894853292223E-7	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9999995464201826	WITHOUT_CLASSIFICATION	4.5357981745668744E-7	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.999999791817354	WITHOUT_CLASSIFICATION	2.0818264590720181E-7	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9999985664448026	WITHOUT_CLASSIFICATION	1.433555197520229E-6	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9999995522779449	WITHOUT_CLASSIFICATION	4.4772205513298013E-7	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9999996742726052	WITHOUT_CLASSIFICATION	3.25727394774203E-7	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9999994878125037	WITHOUT_CLASSIFICATION	5.121874962634355E-7	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.999999357713409	WITHOUT_CLASSIFICATION	6.422865909965444E-7	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.999999352293089	WITHOUT_CLASSIFICATION	6.477069110200888E-7	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9999995517101273	WITHOUT_CLASSIFICATION	4.482898727793399E-7	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.999999416737466	WITHOUT_CLASSIFICATION	5.832625340267081E-7	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9999994775851466	WITHOUT_CLASSIFICATION	5.2241485332246E-7	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9999997024357656	WITHOUT_CLASSIFICATION	2.975642343493659E-7	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9999998628030473	WITHOUT_CLASSIFICATION	1.3719695261227027E-7	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.999999663095581	WITHOUT_CLASSIFICATION	3.3690441897866694E-7	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9999996704680608	WITHOUT_CLASSIFICATION	3.2953193912866696E-7	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9999991660878088	WITHOUT_CLASSIFICATION	8.339121912255665E-7	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9999997922642312	WITHOUT_CLASSIFICATION	2.077357688302597E-7	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.999999547033025	WITHOUT_CLASSIFICATION	4.5296697514994357E-7	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9999986526636493	WITHOUT_CLASSIFICATION	1.3473363506966454E-6	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9999995933249126	WITHOUT_CLASSIFICATION	4.06675087328936E-7	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9999988494099178	WITHOUT_CLASSIFICATION	1.1505900822043963E-6	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9999995470491646	WITHOUT_CLASSIFICATION	4.529508353757298E-7	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9999995386315973	WITHOUT_CLASSIFICATION	4.613684026626652E-7	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9999994803390043	WITHOUT_CLASSIFICATION	5.196609956750058E-7	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9999995735029179	WITHOUT_CLASSIFICATION	4.264970820424749E-7	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9999994997364352	WITHOUT_CLASSIFICATION	5.002635647810278E-7	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9999996368457146	WITHOUT_CLASSIFICATION	3.63154285368314E-7	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9999996929422849	WITHOUT_CLASSIFICATION	3.0705771509000564E-7	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9999996148347444	WITHOUT_CLASSIFICATION	3.8516525557556666E-7	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9999990816327552	WITHOUT_CLASSIFICATION	9.183672447457636E-7	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9999995801227656	WITHOUT_CLASSIFICATION	4.1987723438093803E-7	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9999995848017333	WITHOUT_CLASSIFICATION	4.151982665864394E-7	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.999999628011729	WITHOUT_CLASSIFICATION	3.7198827089269057E-7	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9999994992244935	WITHOUT_CLASSIFICATION	5.00775506422311E-7	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9999994023179125	WITHOUT_CLASSIFICATION	5.976820875575249E-7	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9999996736307488	WITHOUT_CLASSIFICATION	3.26369251193195E-7	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999996693314175	WITHOUT_CLASSIFICATION	3.306685824689309E-7	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999983179836344	WITHOUT_CLASSIFICATION	1.6820163655303783E-6	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999996603682114	WITHOUT_CLASSIFICATION	3.396317885878384E-7	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999996800369331	WITHOUT_CLASSIFICATION	3.1996306703965085E-7	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999995629949328	WITHOUT_CLASSIFICATION	4.370050673434025E-7	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999989855797384	WITHOUT_CLASSIFICATION	1.0144202615535003E-6	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999996813216877	WITHOUT_CLASSIFICATION	3.186783121909391E-7	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999997512213828	WITHOUT_CLASSIFICATION	2.4877861721469166E-7	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999994033987146	WITHOUT_CLASSIFICATION	5.966012854109216E-7	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999989230979243	WITHOUT_CLASSIFICATION	1.07690207576227E-6	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999986789715504	WITHOUT_CLASSIFICATION	1.321028449694488E-6	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9999995535222571	WITHOUT_CLASSIFICATION	4.464777429064611E-7	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9999993542846708	WITHOUT_CLASSIFICATION	6.457153293153357E-7	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9999994216476088	WITHOUT_CLASSIFICATION	5.783523911972912E-7	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9999995662238216	WITHOUT_CLASSIFICATION	4.3377617840825904E-7	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9999995411580479	WITHOUT_CLASSIFICATION	4.588419520426959E-7	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9999991085113885	WITHOUT_CLASSIFICATION	8.914886114421245E-7	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9999990276085328	WITHOUT_CLASSIFICATION	9.7239146718373E-7	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9999984121767163	WITHOUT_CLASSIFICATION	1.5878232837353543E-6	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9999994311990287	WITHOUT_CLASSIFICATION	5.688009713113051E-7	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9999993916673828	WITHOUT_CLASSIFICATION	6.083326171728837E-7	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9999990517816626	WITHOUT_CLASSIFICATION	9.482183374801111E-7	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9999991094922851	WITHOUT_CLASSIFICATION	8.905077149941424E-7	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9999990763053899	WITHOUT_CLASSIFICATION	9.236946102526476E-7	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9999991418896926	WITHOUT_CLASSIFICATION	8.58110307338439E-7	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9999996011916248	WITHOUT_CLASSIFICATION	3.9880837522067235E-7	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9999994306159455	WITHOUT_CLASSIFICATION	5.693840545063486E-7	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.999999276977613	WITHOUT_CLASSIFICATION	7.230223868438698E-7	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9999993373504215	WITHOUT_CLASSIFICATION	6.626495784809498E-7	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9999995174304759	WITHOUT_CLASSIFICATION	4.825695241187955E-7	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9999989957192452	WITHOUT_CLASSIFICATION	1.0042807546940536E-6	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9999994044927356	WITHOUT_CLASSIFICATION	5.955072643682097E-7	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9999994213280882	WITHOUT_CLASSIFICATION	5.786719118416709E-7	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9999990534940079	WITHOUT_CLASSIFICATION	9.465059920791783E-7	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9999994538360379	WITHOUT_CLASSIFICATION	5.461639621084256E-7	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9999992969849073	WITHOUT_CLASSIFICATION	7.030150926455596E-7	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.999999411650725	WITHOUT_CLASSIFICATION	5.883492750536187E-7	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9999992145482341	WITHOUT_CLASSIFICATION	7.854517659340809E-7	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9999993016614019	WITHOUT_CLASSIFICATION	6.983385979762836E-7	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9999997573779537	WITHOUT_CLASSIFICATION	2.4262204630781087E-7	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9999995325594647	WITHOUT_CLASSIFICATION	4.674405352897789E-7	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9999994041170968	WITHOUT_CLASSIFICATION	5.958829032548488E-7	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.999999403990856	WITHOUT_CLASSIFICATION	5.960091440797181E-7	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.99999946508212	WITHOUT_CLASSIFICATION	5.349178800201299E-7	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9999990787266083	WITHOUT_CLASSIFICATION	9.2127339168954E-7	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9999995711608158	WITHOUT_CLASSIFICATION	4.288391841547207E-7	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.999999338241274	WITHOUT_CLASSIFICATION	6.617587259892994E-7	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9999991169424506	WITHOUT_CLASSIFICATION	8.830575494120045E-7	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9999995163979427	WITHOUT_CLASSIFICATION	4.836020573230979E-7	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.999998912614763	WITHOUT_CLASSIFICATION	1.0873852369924052E-6	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999989919069603	WITHOUT_CLASSIFICATION	1.0080930396428993E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999995984474878	WITHOUT_CLASSIFICATION	4.01552512179989E-7	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999985834123155	WITHOUT_CLASSIFICATION	1.416587684526866E-6	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999995259788144	WITHOUT_CLASSIFICATION	4.7402118569345514E-7	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999996258942471	WITHOUT_CLASSIFICATION	3.741057530196709E-7	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999988252234097	WITHOUT_CLASSIFICATION	1.17477659034895E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999997254127289	WITHOUT_CLASSIFICATION	2.7458727117465997E-7	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999989242882728	WITHOUT_CLASSIFICATION	1.0757117272908019E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999987831697726	WITHOUT_CLASSIFICATION	1.216830227453081E-6	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9999992936183185	WITHOUT_CLASSIFICATION	7.063816815805894E-7	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9999986501683935	WITHOUT_CLASSIFICATION	1.349831606501566E-6	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9999992481847078	WITHOUT_CLASSIFICATION	7.518152923002714E-7	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.999999341475557	WITHOUT_CLASSIFICATION	6.585244429568393E-7	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9999992986034524	WITHOUT_CLASSIFICATION	7.013965475739664E-7	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9999993045067969	WITHOUT_CLASSIFICATION	6.954932031965423E-7	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9999991942714891	WITHOUT_CLASSIFICATION	8.057285109097214E-7	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9999996348715476	WITHOUT_CLASSIFICATION	3.651284524052829E-7	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.999999228617805	WITHOUT_CLASSIFICATION	7.713821950294326E-7	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9999992606643191	WITHOUT_CLASSIFICATION	7.3933568083973E-7	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.999999199293164	WITHOUT_CLASSIFICATION	8.007068358619062E-7	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9999990197154424	WITHOUT_CLASSIFICATION	9.802845575938238E-7	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9999990111027952	WITHOUT_CLASSIFICATION	9.88897204701062E-7	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9999992332967061	WITHOUT_CLASSIFICATION	7.667032938365715E-7	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9999991939929886	WITHOUT_CLASSIFICATION	8.060070113252569E-7	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9999987857277588	WITHOUT_CLASSIFICATION	1.2142722411653114E-6	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9999990201300004	WITHOUT_CLASSIFICATION	9.79869999685486E-7	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9999989492878577	WITHOUT_CLASSIFICATION	1.0507121422674246E-6	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.999999221387532	WITHOUT_CLASSIFICATION	7.786124681001447E-7	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9999991090490966	WITHOUT_CLASSIFICATION	8.9095090347509E-7	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9999991668402938	WITHOUT_CLASSIFICATION	8.331597062696824E-7	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.999999311841659	WITHOUT_CLASSIFICATION	6.881583409174433E-7	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9999996181015323	WITHOUT_CLASSIFICATION	3.8189846775750336E-7	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9999990792796438	WITHOUT_CLASSIFICATION	9.207203562518308E-7	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9999990700979523	WITHOUT_CLASSIFICATION	9.299020476309723E-7	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9999995243167389	WITHOUT_CLASSIFICATION	4.756832611421695E-7	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9999989870811727	WITHOUT_CLASSIFICATION	1.0129188272327772E-6	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9999987974229315	WITHOUT_CLASSIFICATION	1.202577068438241E-6	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9999988677825186	WITHOUT_CLASSIFICATION	1.1322174814839067E-6	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9999985759164665	WITHOUT_CLASSIFICATION	1.4240835335405683E-6	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.999999072377491	WITHOUT_CLASSIFICATION	9.276225089272849E-7	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.999999525903595	WITHOUT_CLASSIFICATION	4.740964051255924E-7	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9999989700776201	WITHOUT_CLASSIFICATION	1.0299223798660665E-6	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9999996843009495	WITHOUT_CLASSIFICATION	3.1569905046778903E-7	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.999999053570187	WITHOUT_CLASSIFICATION	9.46429812922007E-7	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9999995943936232	WITHOUT_CLASSIFICATION	4.0560637685283944E-7	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9999991426121364	WITHOUT_CLASSIFICATION	8.573878635065622E-7	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9999993483997197	WITHOUT_CLASSIFICATION	6.516002802836353E-7	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9999981423097859	WITHOUT_CLASSIFICATION	1.857690214082979E-6	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.999998909927054	WITHOUT_CLASSIFICATION	1.0900729460273918E-6	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999991236749048	WITHOUT_CLASSIFICATION	8.763250951572282E-7	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999995978100041	WITHOUT_CLASSIFICATION	4.0218999588948355E-7	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999996148479682	WITHOUT_CLASSIFICATION	3.8515203194000973E-7	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999991229957069	WITHOUT_CLASSIFICATION	8.770042931691775E-7	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999994111949819	WITHOUT_CLASSIFICATION	5.888050181332225E-7	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999996473974232	WITHOUT_CLASSIFICATION	3.5260257683967053E-7	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999991407307793	WITHOUT_CLASSIFICATION	8.592692207894414E-7	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999978956923008	WITHOUT_CLASSIFICATION	2.104307699177219E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999991368244668	WITHOUT_CLASSIFICATION	8.631755330605438E-7	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9999993650799622	WITHOUT_CLASSIFICATION	6.349200377939275E-7	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9999996242055845	WITHOUT_CLASSIFICATION	3.757944154738839E-7	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9999995051239267	WITHOUT_CLASSIFICATION	4.948760732812983E-7	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9999992210672117	WITHOUT_CLASSIFICATION	7.789327882833048E-7	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9999990183603404	WITHOUT_CLASSIFICATION	9.816396595814502E-7	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9999990099026816	WITHOUT_CLASSIFICATION	9.900973183880788E-7	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9999990400090282	WITHOUT_CLASSIFICATION	9.599909718015173E-7	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9999982310428527	WITHOUT_CLASSIFICATION	1.7689571473596347E-6	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.999999134101057	WITHOUT_CLASSIFICATION	8.658989429155788E-7	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9999993766158913	WITHOUT_CLASSIFICATION	6.233841087183745E-7	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9999990195708398	WITHOUT_CLASSIFICATION	9.804291602410955E-7	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.999998829372543	WITHOUT_CLASSIFICATION	1.1706274569038963E-6	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.9999997940443845	WITHOUT_CLASSIFICATION	2.05955615473583E-7	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9999988353218068	WITHOUT_CLASSIFICATION	1.1646781931348517E-6	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9999991052172833	WITHOUT_CLASSIFICATION	8.947827167505412E-7	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9999996258297571	WITHOUT_CLASSIFICATION	3.7417024289073026E-7	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9999987440945468	WITHOUT_CLASSIFICATION	1.2559054532292765E-6	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9999993657447287	WITHOUT_CLASSIFICATION	6.342552712897848E-7	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9999991176879545	WITHOUT_CLASSIFICATION	8.823120455990972E-7	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9999991439791387	WITHOUT_CLASSIFICATION	8.560208612531614E-7	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9999992313982595	WITHOUT_CLASSIFICATION	7.686017405330604E-7	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9999990515050579	WITHOUT_CLASSIFICATION	9.484949422359821E-7	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9999984062867532	WITHOUT_CLASSIFICATION	1.5937132467535079E-6	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9999990552884412	WITHOUT_CLASSIFICATION	9.447115587493176E-7	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9999990887828064	WITHOUT_CLASSIFICATION	9.11217193642423E-7	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9999995417971261	WITHOUT_CLASSIFICATION	4.5820287384140913E-7	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9999990041732677	WITHOUT_CLASSIFICATION	9.958267323438971E-7	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9999989128394987	WITHOUT_CLASSIFICATION	1.0871605012917435E-6	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9999983664594886	WITHOUT_CLASSIFICATION	1.6335405114032806E-6	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9999990485273342	WITHOUT_CLASSIFICATION	9.514726658019275E-7	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9999991297397043	WITHOUT_CLASSIFICATION	8.702602957662352E-7	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9999989060046856	WITHOUT_CLASSIFICATION	1.093995314514557E-6	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9999985519487495	WITHOUT_CLASSIFICATION	1.4480512504634265E-6	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9999985930203722	WITHOUT_CLASSIFICATION	1.4069796277751983E-6	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9999980982848594	WITHOUT_CLASSIFICATION	1.9017151406075227E-6	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9999986408360025	WITHOUT_CLASSIFICATION	1.359163997465666E-6	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9999985038232475	WITHOUT_CLASSIFICATION	1.4961767524919562E-6	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.9999970008537491	WITHOUT_CLASSIFICATION	2.9991462508520314E-6	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9999983210730341	WITHOUT_CLASSIFICATION	1.6789269658809776E-6	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9988558137097958	WITHOUT_CLASSIFICATION	0.0011441862902041595	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.999240522974889	WITHOUT_CLASSIFICATION	7.594770251109792E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999996877613362	WITHOUT_CLASSIFICATION	3.122386638089199E-7	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999980514962012	WITHOUT_CLASSIFICATION	1.9485037988061425E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.998120680152353	WITHOUT_CLASSIFICATION	0.0018793198476469745	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999538577347522	WITHOUT_CLASSIFICATION	4.614226524781131E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9995138502383436	WITHOUT_CLASSIFICATION	4.8614976165646214E-4	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999988952376868	WITHOUT_CLASSIFICATION	1.1047623132518917E-6	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.9999983137417059	WITHOUT_CLASSIFICATION	1.686258294095172E-6	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9999978138997264	WITHOUT_CLASSIFICATION	2.186100273542649E-6	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9999992835995991	WITHOUT_CLASSIFICATION	7.164004009505965E-7	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9999982196719972	WITHOUT_CLASSIFICATION	1.7803280028766377E-6	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9999978534299983	WITHOUT_CLASSIFICATION	2.1465700017896408E-6	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9999980954159733	WITHOUT_CLASSIFICATION	1.9045840268392545E-6	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9999996553727604	WITHOUT_CLASSIFICATION	3.4462723956686846E-7	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9999993049495887	WITHOUT_CLASSIFICATION	6.950504112905289E-7	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9999981761355945	WITHOUT_CLASSIFICATION	1.8238644055184915E-6	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9999978400087064	WITHOUT_CLASSIFICATION	2.1599912936715283E-6	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9999991222320104	WITHOUT_CLASSIFICATION	8.777679897214975E-7	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9999987452635202	WITHOUT_CLASSIFICATION	1.2547364797977952E-6	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.999999472457871	WITHOUT_CLASSIFICATION	5.275421289061286E-7	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9999984603079891	WITHOUT_CLASSIFICATION	1.53969201094002E-6	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9999993454112157	WITHOUT_CLASSIFICATION	6.54588784283042E-7	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9999989704836948	WITHOUT_CLASSIFICATION	1.0295163052434815E-6	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9999984050914049	WITHOUT_CLASSIFICATION	1.5949085951662714E-6	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9999995745555088	WITHOUT_CLASSIFICATION	4.2544449119060424E-7	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9999993608857501	WITHOUT_CLASSIFICATION	6.391142497193397E-7	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9999988700775482	WITHOUT_CLASSIFICATION	1.1299224518125797E-6	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9999998913411612	WITHOUT_CLASSIFICATION	1.0865883876875619E-7	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9999998470834693	WITHOUT_CLASSIFICATION	1.5291653070424938E-7	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9999998592686639	WITHOUT_CLASSIFICATION	1.4073133614083534E-7	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.999992670153599	WITHOUT_CLASSIFICATION	7.3298464009816556E-6	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.999995220511563	WITHOUT_CLASSIFICATION	4.779488437069081E-6	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999980088324195	WITHOUT_CLASSIFICATION	1.9911675804969176E-6	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999859553205257	WITHOUT_CLASSIFICATION	1.4044679474242279E-5	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999999391264537	WITHOUT_CLASSIFICATION	6.08735463312535E-8	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.999993350535382	WITHOUT_CLASSIFICATION	6.649464618077643E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999996866865342	WITHOUT_CLASSIFICATION	3.13313465890026E-7	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999976112563211	WITHOUT_CLASSIFICATION	2.3887436787902084E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999903907073	WITHOUT_CLASSIFICATION	9.60929278883721E-9	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999903907073	WITHOUT_CLASSIFICATION	9.60929278883721E-9	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9992196741206998	WITHOUT_CLASSIFICATION	7.803258793002068E-4	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999999124165361	WITHOUT_CLASSIFICATION	8.758346396115777E-8	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999999995869422	WITHOUT_CLASSIFICATION	4.1305791139007553E-10	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999997164149145	WITHOUT_CLASSIFICATION	2.835850855462489E-7	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999999960211333	WITHOUT_CLASSIFICATION	3.9788667429434845E-9	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999686652445055	WITHOUT_CLASSIFICATION	3.1334755494628834E-5	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999999930198902	WITHOUT_CLASSIFICATION	6.980109801426785E-9	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999997716209031	WITHOUT_CLASSIFICATION	2.283790969619615E-7	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999873071483203	WITHOUT_CLASSIFICATION	1.2692851679826054E-5	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999999985749496	WITHOUT_CLASSIFICATION	1.4250503526716514E-9	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999998683796726	WITHOUT_CLASSIFICATION	1.3162032736759722E-7	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999999194225165	WITHOUT_CLASSIFICATION	8.057748346532577E-8	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999999000818102	WITHOUT_CLASSIFICATION	9.99181899040183E-8	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999993322306928	WITHOUT_CLASSIFICATION	6.677693072258236E-7	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999982409171096	WITHOUT_CLASSIFICATION	1.7590828903859544E-6	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999982409171096	WITHOUT_CLASSIFICATION	1.7590828903859544E-6	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999989774183844	WITHOUT_CLASSIFICATION	1.0225816156437902E-6	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999995943293059	WITHOUT_CLASSIFICATION	4.0567069414969315E-7	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999999969629587	WITHOUT_CLASSIFICATION	3.037041205644516E-9	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999983192753837	WITHOUT_CLASSIFICATION	1.6807246162786321E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999593865646	WITHOUT_CLASSIFICATION	4.061343540006666E-8	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999999840641696	WITHOUT_CLASSIFICATION	1.593583049990341E-8	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.999994245746125	WITHOUT_CLASSIFICATION	5.754253874976521E-6	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999999840641696	WITHOUT_CLASSIFICATION	1.593583049990341E-8	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999943478857086	WITHOUT_CLASSIFICATION	5.6521142913815036E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999978861737394	WITHOUT_CLASSIFICATION	2.113826260633133E-6	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9995608049356947	WITHOUT_CLASSIFICATION	4.391950643052712E-4	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9999234577435309	WITHOUT_CLASSIFICATION	7.654225646916394E-5	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999724229306507	WITHOUT_CLASSIFICATION	2.7577069349224605E-5	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999978767276337	WITHOUT_CLASSIFICATION	2.1232723661759194E-6	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9996721355694946	WITHOUT_CLASSIFICATION	3.2786443050536105E-4	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999824719670107	WITHOUT_CLASSIFICATION	1.7528032989177473E-5	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999998251565337	WITHOUT_CLASSIFICATION	1.7484346636854234E-7	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999995731268644	WITHOUT_CLASSIFICATION	4.268731356192465E-7	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999964668593707	WITHOUT_CLASSIFICATION	3.533140629137315E-6	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999999869206988	WITHOUT_CLASSIFICATION	1.3079301161586759E-8	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.999999655454821	WITHOUT_CLASSIFICATION	3.445451790193533E-7	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999987725242501	WITHOUT_CLASSIFICATION	1.2274757500295892E-6	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999916403752	WITHOUT_CLASSIFICATION	8.359624735406716E-9	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999916403752	WITHOUT_CLASSIFICATION	8.359624735406716E-9	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999986371646734	WITHOUT_CLASSIFICATION	1.3628353265491504E-6	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999991342763943	WITHOUT_CLASSIFICATION	8.657236056961718E-7	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999995848729092	WITHOUT_CLASSIFICATION	4.1512709086186266E-7	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999862846364852	WITHOUT_CLASSIFICATION	1.3715363514815654E-5	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9999989677749657	WITHOUT_CLASSIFICATION	1.0322250343770133E-6	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999999840641696	WITHOUT_CLASSIFICATION	1.593583049990341E-8	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.999999995801363	WITHOUT_CLASSIFICATION	4.198636974566614E-9	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999985745344618	WITHOUT_CLASSIFICATION	1.4254655381498813E-6	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999999747247573	WITHOUT_CLASSIFICATION	2.5275242643832034E-8	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999999942594519	WITHOUT_CLASSIFICATION	5.740548170739602E-9	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999999953686	WITHOUT_CLASSIFICATION	4.631380989574823E-12	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999992031419068	WITHOUT_CLASSIFICATION	7.968580932675548E-7	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999957328353021	WITHOUT_CLASSIFICATION	4.267164697884505E-6	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999999938743651	WITHOUT_CLASSIFICATION	6.125634948685777E-9	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999999217723511	WITHOUT_CLASSIFICATION	7.822764899930825E-8	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999995889941882	WITHOUT_CLASSIFICATION	4.1100581186589565E-7	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999999121959356	WITHOUT_CLASSIFICATION	8.780406441747408E-8	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999999974333579	WITHOUT_CLASSIFICATION	2.5666422312700837E-9	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999998662571814	WITHOUT_CLASSIFICATION	1.3374281862459334E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999997690161836	WITHOUT_CLASSIFICATION	2.309838162768428E-7	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.999686977059041	WITHOUT_CLASSIFICATION	3.130229409590491E-4	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.999994580265302	WITHOUT_CLASSIFICATION	5.4197346980017096E-6	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999994278349205	WITHOUT_CLASSIFICATION	5.721650795524604E-7	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9999991482487965	WITHOUT_CLASSIFICATION	8.517512035148644E-7	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.999999670537093	WITHOUT_CLASSIFICATION	3.294629069141962E-7	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9999978703460654	WITHOUT_CLASSIFICATION	2.129653934645922E-6	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999991843878486	WITHOUT_CLASSIFICATION	8.156121515114973E-7	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999999093417847	WITHOUT_CLASSIFICATION	9.0658215252936E-8	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999931800009285	WITHOUT_CLASSIFICATION	6.819999071434416E-6	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999999721115984	WITHOUT_CLASSIFICATION	2.78884016439137E-8	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999999806460406	WITHOUT_CLASSIFICATION	1.935395944413144E-8	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999998602399633	WITHOUT_CLASSIFICATION	1.397600366922216E-7	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999988215895622	WITHOUT_CLASSIFICATION	1.178410437827701E-6	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999993919544254	WITHOUT_CLASSIFICATION	6.080455744761657E-7	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999994435322556	WITHOUT_CLASSIFICATION	5.56467744438765E-7	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999999859510725	WITHOUT_CLASSIFICATION	1.4048927430753295E-8	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999997912324516	WITHOUT_CLASSIFICATION	2.0876754837197064E-7	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9999998711119238	WITHOUT_CLASSIFICATION	1.2888807626051035E-7	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999999034334568	WITHOUT_CLASSIFICATION	9.656654324473818E-8	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999877193534654	WITHOUT_CLASSIFICATION	1.2280646534557483E-5	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999984343186685	WITHOUT_CLASSIFICATION	1.565681331452651E-6	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999801798435256	WITHOUT_CLASSIFICATION	1.982015647444067E-5	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999999756863164	WITHOUT_CLASSIFICATION	2.4313683577344824E-8	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9999951836316633	WITHOUT_CLASSIFICATION	4.816368336616669E-6	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.99999939835755	WITHOUT_CLASSIFICATION	6.0164244998901E-7	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999999974817323	WITHOUT_CLASSIFICATION	2.5182676357363137E-9	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999988952376868	WITHOUT_CLASSIFICATION	1.1047623132518917E-6	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.5958008405210011	IMPLEMENTATION	0.40419915947899887	WITHOUT_CLASSIFICATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.999998893855229	WITHOUT_CLASSIFICATION	1.1061447709742925E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999994162608924	WITHOUT_CLASSIFICATION	5.837391076951027E-7	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999882003416	WITHOUT_CLASSIFICATION	1.1799658280580327E-8	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999978861737394	WITHOUT_CLASSIFICATION	2.113826260633133E-6	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999305316198148	WITHOUT_CLASSIFICATION	6.946838018508038E-5	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999999386446816	WITHOUT_CLASSIFICATION	6.135531835357122E-8	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999999976846506	WITHOUT_CLASSIFICATION	2.3153493738528867E-9	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999949292078	WITHOUT_CLASSIFICATION	5.070792174940387E-9	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999949292078	WITHOUT_CLASSIFICATION	5.070792174940387E-9	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999999963002614	WITHOUT_CLASSIFICATION	3.699738595353254E-8	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999999963002614	WITHOUT_CLASSIFICATION	3.699738595353254E-8	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999999963002614	WITHOUT_CLASSIFICATION	3.699738595353254E-8	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999980256291077	WITHOUT_CLASSIFICATION	1.9743708924209927E-6	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999980256291077	WITHOUT_CLASSIFICATION	1.9743708924209927E-6	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999998965861068	WITHOUT_CLASSIFICATION	1.0341389327127969E-7	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999998965861068	WITHOUT_CLASSIFICATION	1.0341389327127969E-7	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999999989725584	WITHOUT_CLASSIFICATION	1.0274415418029927E-9	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999999029083314	WITHOUT_CLASSIFICATION	9.70916686020175E-8	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999988557611399	WITHOUT_CLASSIFICATION	1.1442388601746926E-6	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999988557611399	WITHOUT_CLASSIFICATION	1.1442388601746926E-6	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999999927673727	WITHOUT_CLASSIFICATION	7.232627329907886E-9	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999991487818973	WITHOUT_CLASSIFICATION	8.512181026889294E-7	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999999292150829	WITHOUT_CLASSIFICATION	7.078491716328511E-8	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999999910691053	WITHOUT_CLASSIFICATION	8.930894707691033E-9	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999999399859483	WITHOUT_CLASSIFICATION	6.001405163296918E-8	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999994455206197	WITHOUT_CLASSIFICATION	5.544793801819838E-7	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999999602522385	WITHOUT_CLASSIFICATION	3.974776152003272E-8	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999998109931298	WITHOUT_CLASSIFICATION	1.8900687024062461E-7	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9999994171716233	WITHOUT_CLASSIFICATION	5.828283767061592E-7	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.999995420497729	WITHOUT_CLASSIFICATION	4.579502270897159E-6	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999999465914836	WITHOUT_CLASSIFICATION	5.340851631511542E-8	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9999998274546412	WITHOUT_CLASSIFICATION	1.725453587507963E-7	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9999974530508127	WITHOUT_CLASSIFICATION	2.5469491873305363E-6	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9999953080937514	WITHOUT_CLASSIFICATION	4.691906248640613E-6	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999999211420082	WITHOUT_CLASSIFICATION	7.885799176805874E-8	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999920171639022	WITHOUT_CLASSIFICATION	7.982836097818806E-6	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999252439020019	WITHOUT_CLASSIFICATION	7.475609799806588E-5	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999973831598015	WITHOUT_CLASSIFICATION	2.61684019848821E-6	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999995300992887	WITHOUT_CLASSIFICATION	4.699007113417854E-7	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999780418966691	WITHOUT_CLASSIFICATION	2.1958103331020432E-5	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999999614681351	WITHOUT_CLASSIFICATION	3.853186487015172E-8	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999999831333358	WITHOUT_CLASSIFICATION	1.6866664142687782E-8	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.999999918494709	WITHOUT_CLASSIFICATION	8.150529103593612E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999998801976997	WITHOUT_CLASSIFICATION	1.1980230033246803E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999187771111	WITHOUT_CLASSIFICATION	8.122288887663806E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999992673934948	WITHOUT_CLASSIFICATION	7.326065051147564E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999931984678	WITHOUT_CLASSIFICATION	6.801532312588757E-9	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999952766001	WITHOUT_CLASSIFICATION	4.723399894528139E-9	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999761512336	WITHOUT_CLASSIFICATION	2.384876648448007E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999838311482	WITHOUT_CLASSIFICATION	1.616885189002073E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999999854161648	WITHOUT_CLASSIFICATION	1.4583835195491875E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999974952113	WITHOUT_CLASSIFICATION	2.5047886975913196E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999830181752	WITHOUT_CLASSIFICATION	1.6981824829031068E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998699309208	WITHOUT_CLASSIFICATION	1.3006907927773058E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999830181752	WITHOUT_CLASSIFICATION	1.6981824829031068E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999830181752	WITHOUT_CLASSIFICATION	1.6981824829031068E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999830181752	WITHOUT_CLASSIFICATION	1.6981824829031068E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999830181752	WITHOUT_CLASSIFICATION	1.6981824829031068E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999830181752	WITHOUT_CLASSIFICATION	1.6981824829031068E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999830181752	WITHOUT_CLASSIFICATION	1.6981824829031068E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998699309208	WITHOUT_CLASSIFICATION	1.3006907927773058E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998699309208	WITHOUT_CLASSIFICATION	1.3006907927773058E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998699309208	WITHOUT_CLASSIFICATION	1.3006907927773058E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998699309208	WITHOUT_CLASSIFICATION	1.3006907927773058E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998699309208	WITHOUT_CLASSIFICATION	1.3006907927773058E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998699309208	WITHOUT_CLASSIFICATION	1.3006907927773058E-7	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999983831592008	WITHOUT_CLASSIFICATION	1.6168407991933573E-6	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.99999975401916	WITHOUT_CLASSIFICATION	2.459808400166975E-7	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999879007382484	WITHOUT_CLASSIFICATION	1.2099261751565662E-5	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999999148295744	WITHOUT_CLASSIFICATION	8.517042560417071E-7	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999999998566348	WITHOUT_CLASSIFICATION	1.4336515180339014E-10	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999992333199884	WITHOUT_CLASSIFICATION	7.666800116346636E-7	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999985577668431	WITHOUT_CLASSIFICATION	1.4422331568854005E-6	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999999995419269	WITHOUT_CLASSIFICATION	4.580731294242944E-10	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999999514416594	WITHOUT_CLASSIFICATION	4.85583405463545E-8	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999947310006051	WITHOUT_CLASSIFICATION	5.268999394883427E-6	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.738944179032405	IMPLEMENTATION	0.2610558209675949	WITHOUT_CLASSIFICATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999996609393	WITHOUT_CLASSIFICATION	3.390606949375964E-10	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.999994566712095	WITHOUT_CLASSIFICATION	5.433287905003552E-6	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999995464941	WITHOUT_CLASSIFICATION	4.535058516775767E-10	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999999993102342	WITHOUT_CLASSIFICATION	6.897658574095848E-10	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999992709307113	WITHOUT_CLASSIFICATION	7.290692886353932E-7	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.99999880748104	WITHOUT_CLASSIFICATION	1.1925189600881755E-6	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999999423009562	WITHOUT_CLASSIFICATION	5.7699043680655556E-8	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999999136027724	WITHOUT_CLASSIFICATION	8.639722763390442E-8	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999999840329747	WITHOUT_CLASSIFICATION	1.596702523170698E-8	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999997346603203	WITHOUT_CLASSIFICATION	2.6533967967237975E-7	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.999999970484305	WITHOUT_CLASSIFICATION	2.9515695041635835E-8	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.999994245746125	WITHOUT_CLASSIFICATION	5.754253874976521E-6	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9998478504287502	WITHOUT_CLASSIFICATION	1.52149571249775E-4	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999993349479317	WITHOUT_CLASSIFICATION	6.650520683800357E-7	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999997423366643	WITHOUT_CLASSIFICATION	2.576633356903063E-7	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999924829808	WITHOUT_CLASSIFICATION	7.517019143975585E-9	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999565075044632	WITHOUT_CLASSIFICATION	4.3492495536772196E-5	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.9999965149973674	WITHOUT_CLASSIFICATION	3.485002632670573E-6	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999999162820493	WITHOUT_CLASSIFICATION	8.371795072641011E-8	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.9999852409204162	WITHOUT_CLASSIFICATION	1.4759079583743228E-5	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999903335030157	WITHOUT_CLASSIFICATION	9.666496984301137E-6	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999998168306095	WITHOUT_CLASSIFICATION	1.8316939062960737E-7	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9999999111411587	WITHOUT_CLASSIFICATION	8.885884133281053E-8	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999991555355433	WITHOUT_CLASSIFICATION	8.444644567660136E-7	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.999841331710349	WITHOUT_CLASSIFICATION	1.5866828965113906E-4	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999979959110467	WITHOUT_CLASSIFICATION	2.0040889532379697E-6	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999999850770432	WITHOUT_CLASSIFICATION	1.492295681940508E-8	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999898318704232	WITHOUT_CLASSIFICATION	1.0168129576883382E-5	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999999684084278	WITHOUT_CLASSIFICATION	3.159157222550136E-8	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999993595338502	WITHOUT_CLASSIFICATION	6.404661498181288E-7	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999999785092215	WITHOUT_CLASSIFICATION	2.149077854589873E-8	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999999977553204	WITHOUT_CLASSIFICATION	2.2446795530660864E-9	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.999999977325544	WITHOUT_CLASSIFICATION	2.2674455906284104E-8	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.999999977325544	WITHOUT_CLASSIFICATION	2.2674455906284104E-8	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999998625030747	WITHOUT_CLASSIFICATION	1.3749692527211709E-7	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999998625030747	WITHOUT_CLASSIFICATION	1.3749692527211709E-7	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999997578341986	WITHOUT_CLASSIFICATION	2.4216580137165076E-7	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999997578341986	WITHOUT_CLASSIFICATION	2.4216580137165076E-7	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999603445119265	WITHOUT_CLASSIFICATION	3.965548807341446E-5	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999894422959682	WITHOUT_CLASSIFICATION	1.0557704031844793E-5	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.999999999639621	WITHOUT_CLASSIFICATION	3.603790121371397E-10	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999999912791699	WITHOUT_CLASSIFICATION	8.720830120219554E-9	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999922066672358	WITHOUT_CLASSIFICATION	7.793332764346031E-6	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999998365113107	WITHOUT_CLASSIFICATION	1.634886893294555E-7	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9999997516465515	WITHOUT_CLASSIFICATION	2.4835344846281185E-7	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.999999995273419	WITHOUT_CLASSIFICATION	4.726581012042407E-9	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999999999978055	WITHOUT_CLASSIFICATION	2.19451756180586E-12	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999999998790328	WITHOUT_CLASSIFICATION	1.209671483190633E-10	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999997666891959	WITHOUT_CLASSIFICATION	2.3331080413556256E-7	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999999450447048	WITHOUT_CLASSIFICATION	5.49552951783272E-8	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999999939508336	WITHOUT_CLASSIFICATION	6.04916634949714E-9	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.999999993513409	WITHOUT_CLASSIFICATION	6.4865910478408245E-9	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999982130983668	WITHOUT_CLASSIFICATION	1.786901633291142E-6	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9999999626576598	WITHOUT_CLASSIFICATION	3.7342340113776186E-8	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999960342502698	WITHOUT_CLASSIFICATION	3.965749730229883E-6	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999999841684816	WITHOUT_CLASSIFICATION	1.583151850204735E-8	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999528409132713	WITHOUT_CLASSIFICATION	4.71590867287893E-5	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9999997795590972	WITHOUT_CLASSIFICATION	2.2044090273235564E-7	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9999995036329249	WITHOUT_CLASSIFICATION	4.963670749928439E-7	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999963788478444	WITHOUT_CLASSIFICATION	3.621152155511302E-6	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999989173362238	WITHOUT_CLASSIFICATION	1.0826637761635037E-6	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999999508378176	WITHOUT_CLASSIFICATION	4.916218253558597E-8	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999999978778706	WITHOUT_CLASSIFICATION	2.1221293084798344E-9	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999999991399374	WITHOUT_CLASSIFICATION	8.600625327468283E-10	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9999999692955428	WITHOUT_CLASSIFICATION	3.0704457144521845E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999284283406	WITHOUT_CLASSIFICATION	7.157165945399499E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999284283406	WITHOUT_CLASSIFICATION	7.157165945399499E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999284283406	WITHOUT_CLASSIFICATION	7.157165945399499E-8	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999963129737662	WITHOUT_CLASSIFICATION	3.687026233883041E-6	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999963129737662	WITHOUT_CLASSIFICATION	3.687026233883041E-6	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999997690161836	WITHOUT_CLASSIFICATION	2.309838162768428E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999997690161836	WITHOUT_CLASSIFICATION	2.309838162768428E-7	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999999999457944	WITHOUT_CLASSIFICATION	5.420556121054827E-11	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9999617401018432	WITHOUT_CLASSIFICATION	3.825989815681655E-5	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999998789513275	WITHOUT_CLASSIFICATION	1.210486726029027E-7	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.999999997385677	WITHOUT_CLASSIFICATION	2.6143230502808082E-9	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999284283406	WITHOUT_CLASSIFICATION	7.157165945399499E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999284283406	WITHOUT_CLASSIFICATION	7.157165945399499E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999284283406	WITHOUT_CLASSIFICATION	7.157165945399499E-8	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999963129737662	WITHOUT_CLASSIFICATION	3.687026233883041E-6	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999963129737662	WITHOUT_CLASSIFICATION	3.687026233883041E-6	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999963129737662	WITHOUT_CLASSIFICATION	3.687026233883041E-6	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999997690161836	WITHOUT_CLASSIFICATION	2.309838162768428E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999997690161836	WITHOUT_CLASSIFICATION	2.309838162768428E-7	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999999998129879	WITHOUT_CLASSIFICATION	1.8701206433495494E-10	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999999999530446	WITHOUT_CLASSIFICATION	4.695536528685567E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.999999999989929	WITHOUT_CLASSIFICATION	1.0071107527560997E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.999999999989929	WITHOUT_CLASSIFICATION	1.0071107527560997E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.999999999989929	WITHOUT_CLASSIFICATION	1.0071107527560997E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.999999999989929	WITHOUT_CLASSIFICATION	1.0071107527560997E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.999999999989929	WITHOUT_CLASSIFICATION	1.0071107527560997E-11	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999995407446097	WITHOUT_CLASSIFICATION	4.5925539019285855E-7	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999998052772062	WITHOUT_CLASSIFICATION	1.9472279380837064E-7	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999396837828868	WITHOUT_CLASSIFICATION	6.031621711332169E-5	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999989797163512	WITHOUT_CLASSIFICATION	1.0202836487954497E-6	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999976975927	WITHOUT_CLASSIFICATION	2.302407300080877E-6	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999999627375211	WITHOUT_CLASSIFICATION	3.726247887070461E-8	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9996311356099872	WITHOUT_CLASSIFICATION	3.6886439001282737E-4	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999998963282395	WITHOUT_CLASSIFICATION	1.0367176056829626E-7	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999997431431549	WITHOUT_CLASSIFICATION	2.5685684512555604E-7	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999998798355266	WITHOUT_CLASSIFICATION	1.2016447334905819E-7	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999967333778157	WITHOUT_CLASSIFICATION	3.2666221842723704E-6	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999999991267593	WITHOUT_CLASSIFICATION	8.732405750107141E-10	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999984185640273	WITHOUT_CLASSIFICATION	1.581435972719963E-6	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999992766561929	WITHOUT_CLASSIFICATION	7.233438070952086E-7	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.999999999487403	WITHOUT_CLASSIFICATION	5.125970183211885E-10	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999985246318618	WITHOUT_CLASSIFICATION	1.4753681382275242E-6	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999985246318618	WITHOUT_CLASSIFICATION	1.4753681382275242E-6	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999985246318618	WITHOUT_CLASSIFICATION	1.4753681382275242E-6	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.999999997508184	WITHOUT_CLASSIFICATION	2.4918159331623703E-9	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999999975084712	WITHOUT_CLASSIFICATION	2.4915287885947572E-9	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999952731523996	WITHOUT_CLASSIFICATION	4.726847600485184E-6	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999999999147	WITHOUT_CLASSIFICATION	8.527520248997997E-14	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999999933622942	WITHOUT_CLASSIFICATION	6.637705764985614E-9	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999990299357918	WITHOUT_CLASSIFICATION	9.70064208194222E-7	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999999061180604	WITHOUT_CLASSIFICATION	9.388193951090249E-8	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9999998614981621	WITHOUT_CLASSIFICATION	1.3850183790177814E-7	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.99999965675493	WITHOUT_CLASSIFICATION	3.432450701193977E-7	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999999864654796	WITHOUT_CLASSIFICATION	1.3534520457198096E-8	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999999979812152	WITHOUT_CLASSIFICATION	2.0187848180780896E-9	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999999958411433	WITHOUT_CLASSIFICATION	4.1588567227883974E-9	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999996706366076	WITHOUT_CLASSIFICATION	3.2936339240551E-7	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9999999706269218	WITHOUT_CLASSIFICATION	2.937307819019036E-8	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9999999794022446	WITHOUT_CLASSIFICATION	2.0597755381705794E-8	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999998512036449	WITHOUT_CLASSIFICATION	1.4879635516525758E-7	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999999751533958	WITHOUT_CLASSIFICATION	2.48466041527446E-8	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.999999992142806	WITHOUT_CLASSIFICATION	7.857193996725302E-9	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9999998343006143	WITHOUT_CLASSIFICATION	1.656993855529394E-7	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999977334719304	WITHOUT_CLASSIFICATION	2.2665280696230633E-6	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999990620425173	WITHOUT_CLASSIFICATION	9.379574826470012E-7	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999982744524707	WITHOUT_CLASSIFICATION	1.725547529274076E-6	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999325103368473	WITHOUT_CLASSIFICATION	6.748966315279306E-5	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999999358964435	WITHOUT_CLASSIFICATION	6.410355642158432E-8	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9999998210453148	WITHOUT_CLASSIFICATION	1.7895468512714925E-7	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9999998532909081	WITHOUT_CLASSIFICATION	1.4670909192000339E-7	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9999999437478354	WITHOUT_CLASSIFICATION	5.625216453132395E-8	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9999990251980833	WITHOUT_CLASSIFICATION	9.748019168197298E-7	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999956281899975	WITHOUT_CLASSIFICATION	4.3718100024503605E-6	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.99999962268859	WITHOUT_CLASSIFICATION	3.7731141004390406E-7	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9999995387208727	WITHOUT_CLASSIFICATION	4.6127912734879183E-7	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9999997787551614	WITHOUT_CLASSIFICATION	2.212448386388016E-7	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.999999743035621	WITHOUT_CLASSIFICATION	2.5696437895861227E-7	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9999997658738907	WITHOUT_CLASSIFICATION	2.3412610923903276E-7	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9999997146667933	WITHOUT_CLASSIFICATION	2.853332066635134E-7	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9999997509597598	WITHOUT_CLASSIFICATION	2.490402402673875E-7	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.999999593745715	WITHOUT_CLASSIFICATION	4.062542850424527E-7	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999999966358518	WITHOUT_CLASSIFICATION	3.3641481394034946E-9	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.999973023761991	WITHOUT_CLASSIFICATION	2.6976238009024114E-5	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999568899040926	WITHOUT_CLASSIFICATION	4.311009590741582E-5	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.999999999863355	WITHOUT_CLASSIFICATION	1.366449819016073E-10	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999995753123617	WITHOUT_CLASSIFICATION	4.246876383276036E-7	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.999972016660498	WITHOUT_CLASSIFICATION	2.7983339502055415E-5	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999924183072917	WITHOUT_CLASSIFICATION	7.581692708295107E-6	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999999832538345	WITHOUT_CLASSIFICATION	1.6746165447867833E-8	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999949426162157	WITHOUT_CLASSIFICATION	5.057383784342994E-6	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999937634820096	WITHOUT_CLASSIFICATION	6.236517990375884E-6	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999937634820096	WITHOUT_CLASSIFICATION	6.236517990375884E-6	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999999229145184	WITHOUT_CLASSIFICATION	7.708548160657205E-8	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999988926478639	WITHOUT_CLASSIFICATION	1.107352136102928E-6	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999962368932799	WITHOUT_CLASSIFICATION	3.7631067199732844E-6	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999999939891068	WITHOUT_CLASSIFICATION	6.010893147517E-9	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999983889134687	WITHOUT_CLASSIFICATION	1.6110865313149307E-6	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999999098564459	WITHOUT_CLASSIFICATION	9.014355408451298E-8	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999999923429113	WITHOUT_CLASSIFICATION	7.657088732147243E-9	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999999983085	WITHOUT_CLASSIFICATION	1.6915914633891694E-12	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999998548130709	WITHOUT_CLASSIFICATION	1.451869291130407E-7	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999971737643801	WITHOUT_CLASSIFICATION	2.826235619871298E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.999999964884205	WITHOUT_CLASSIFICATION	3.511579516706782E-8	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.999999964884205	WITHOUT_CLASSIFICATION	3.511579516706782E-8	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.999999964884205	WITHOUT_CLASSIFICATION	3.511579516706782E-8	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.999999964884205	WITHOUT_CLASSIFICATION	3.511579516706782E-8	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9999972819653445	WITHOUT_CLASSIFICATION	2.7180346554806117E-6	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9999998906215793	WITHOUT_CLASSIFICATION	1.0937842065690583E-7	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9999962038230079	WITHOUT_CLASSIFICATION	3.7961769920117853E-6	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9999909076787289	WITHOUT_CLASSIFICATION	9.092321271123363E-6	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999850557179882	WITHOUT_CLASSIFICATION	1.494428201181291E-5	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999996134900164	WITHOUT_CLASSIFICATION	3.865099835382958E-7	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999996434937898	WITHOUT_CLASSIFICATION	3.565062102405954E-7	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999997582304697	WITHOUT_CLASSIFICATION	2.417695302650893E-7	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999997582304697	WITHOUT_CLASSIFICATION	2.417695302650893E-7	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999999862260001	WITHOUT_CLASSIFICATION	1.3773999858982744E-8	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999982806989375	WITHOUT_CLASSIFICATION	1.7193010624302148E-6	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999959133296	WITHOUT_CLASSIFICATION	4.086670403449022E-9	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999990421212	WITHOUT_CLASSIFICATION	9.578788099898036E-10	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999990421212	WITHOUT_CLASSIFICATION	9.578788099898036E-10	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999999998866074	WITHOUT_CLASSIFICATION	1.1339268905449288E-10	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999895997838295	WITHOUT_CLASSIFICATION	1.040021617049741E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999895997838295	WITHOUT_CLASSIFICATION	1.040021617049741E-5	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.999999974513078	WITHOUT_CLASSIFICATION	2.5486922042901137E-8	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999999985995817	WITHOUT_CLASSIFICATION	1.400418302749874E-9	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999850080478	WITHOUT_CLASSIFICATION	1.499195233258165E-8	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999986218191991	WITHOUT_CLASSIFICATION	1.3781808008511504E-6	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9958801915365821	WITHOUT_CLASSIFICATION	0.004119808463417887	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999615839295	WITHOUT_CLASSIFICATION	3.8416070544848716E-8	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9998994966086262	WITHOUT_CLASSIFICATION	1.0050339137378333E-4	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9999918023891615	WITHOUT_CLASSIFICATION	8.197610838412098E-6	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999997635103695	WITHOUT_CLASSIFICATION	2.364896306293235E-7	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999999960384355	WITHOUT_CLASSIFICATION	3.961564539606385E-9	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999999341598915	WITHOUT_CLASSIFICATION	6.58401084743379E-8	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999994689884005	WITHOUT_CLASSIFICATION	5.310115993939291E-7	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999985640347242	WITHOUT_CLASSIFICATION	1.4359652758315191E-6	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999982639572299	WITHOUT_CLASSIFICATION	1.7360427700897517E-6	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999996413460707	WITHOUT_CLASSIFICATION	3.58653929306074E-7	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999992103706793	WITHOUT_CLASSIFICATION	7.896293208075419E-7	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9999997088168099	WITHOUT_CLASSIFICATION	2.9118319010585717E-7	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9999999524907822	WITHOUT_CLASSIFICATION	4.750921771568221E-8	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999953072374	WITHOUT_CLASSIFICATION	4.692762579599939E-9	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999941693792823	WITHOUT_CLASSIFICATION	5.830620717679869E-6	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999912729775984	WITHOUT_CLASSIFICATION	8.727022401739954E-6	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999996987859194	WITHOUT_CLASSIFICATION	3.0121408049170814E-7	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999997191098358	WITHOUT_CLASSIFICATION	2.808901642233849E-7	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999998177284123	WITHOUT_CLASSIFICATION	1.8227158768105077E-7	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999996093427141	WITHOUT_CLASSIFICATION	3.906572858072227E-7	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999999933533908	WITHOUT_CLASSIFICATION	6.646609167457298E-9	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999997366998854	WITHOUT_CLASSIFICATION	2.6330011458221993E-7	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999999707629724	WITHOUT_CLASSIFICATION	2.9237027593981816E-8	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999994692672	WITHOUT_CLASSIFICATION	5.307326738964758E-10	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999998900900373	WITHOUT_CLASSIFICATION	1.0990996280458065E-7	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9999998090672299	WITHOUT_CLASSIFICATION	1.909327702188514E-7	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999999795781266	WITHOUT_CLASSIFICATION	2.042187340910776E-8	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.7971244600395402	WITHOUT_CLASSIFICATION	0.20287553996045987	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999981823469548	WITHOUT_CLASSIFICATION	1.8176530452440363E-6	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999997485228185	WITHOUT_CLASSIFICATION	2.5147718158933224E-7	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999999981518777	WITHOUT_CLASSIFICATION	1.8481223515727596E-9	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.999999619559722	WITHOUT_CLASSIFICATION	3.804402779411384E-7	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.999999990217905	WITHOUT_CLASSIFICATION	9.782094953365286E-9	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.999999728717401	WITHOUT_CLASSIFICATION	2.712825990552974E-7	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999999981518777	WITHOUT_CLASSIFICATION	1.8481223515727596E-9	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.999999619559722	WITHOUT_CLASSIFICATION	3.804402779411384E-7	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999995366101203	WITHOUT_CLASSIFICATION	4.6338987978731417E-7	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999991377999952	WITHOUT_CLASSIFICATION	8.622000048216011E-7	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999991377999952	WITHOUT_CLASSIFICATION	8.622000048216011E-7	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999219948142148	WITHOUT_CLASSIFICATION	7.800518578516328E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999978316989	WITHOUT_CLASSIFICATION	2.1683010872749434E-9	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999857248988	WITHOUT_CLASSIFICATION	1.4275101131299038E-8	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999999349304536	WITHOUT_CLASSIFICATION	6.506954637603717E-8	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998288353184623	WITHOUT_CLASSIFICATION	1.71164681537618E-4	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999996656148694	WITHOUT_CLASSIFICATION	3.3438513061706343E-7	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999591933573295	WITHOUT_CLASSIFICATION	4.0806642670480664E-5	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.999946068478159	WITHOUT_CLASSIFICATION	5.39315218410106E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999913927776801	WITHOUT_CLASSIFICATION	8.607222319910473E-6	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999997444077274	WITHOUT_CLASSIFICATION	2.5559227259995223E-7	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999994412192362	WITHOUT_CLASSIFICATION	5.587807636888263E-7	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999999450615231	WITHOUT_CLASSIFICATION	5.493847682470434E-8	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999999992651769	WITHOUT_CLASSIFICATION	7.348230193292607E-10	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999958766439	WITHOUT_CLASSIFICATION	4.123356018917679E-9	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999958766439	WITHOUT_CLASSIFICATION	4.123356018917679E-9	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999389050629339	WITHOUT_CLASSIFICATION	6.109493706607755E-5	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999389050629339	WITHOUT_CLASSIFICATION	6.109493706607755E-5	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999999786051506	WITHOUT_CLASSIFICATION	2.1394849410752963E-8	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.99999957095974	WITHOUT_CLASSIFICATION	4.290402599987231E-7	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999924984168984	WITHOUT_CLASSIFICATION	7.501583101575955E-6	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999999983336796	WITHOUT_CLASSIFICATION	1.6663203959982446E-9	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999985930135171	WITHOUT_CLASSIFICATION	1.4069864828821604E-6	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999998755178211	WITHOUT_CLASSIFICATION	1.244821788383202E-7	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999857248988	WITHOUT_CLASSIFICATION	1.4275101131299038E-8	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999999349304536	WITHOUT_CLASSIFICATION	6.506954637603717E-8	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999913927776801	WITHOUT_CLASSIFICATION	8.607222319910473E-6	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999997444077274	WITHOUT_CLASSIFICATION	2.5559227259995223E-7	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.999971905566853	WITHOUT_CLASSIFICATION	2.8094433146958824E-5	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999874242195123	WITHOUT_CLASSIFICATION	1.2575780487824509E-5	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999997002474608	WITHOUT_CLASSIFICATION	2.99752539315988E-7	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999999918349477	WITHOUT_CLASSIFICATION	8.165052289874142E-9	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999992270812104	WITHOUT_CLASSIFICATION	7.729187896755105E-7	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999999996740833	WITHOUT_CLASSIFICATION	3.2591682224836133E-10	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999999153069029	WITHOUT_CLASSIFICATION	8.469309707556733E-8	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999998438885215	WITHOUT_CLASSIFICATION	1.561114784526331E-7	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999972838896019	WITHOUT_CLASSIFICATION	2.716110398095066E-6	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999998046123443	WITHOUT_CLASSIFICATION	1.9538765575506692E-7	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999997837056	WITHOUT_CLASSIFICATION	2.1629442693076288E-10	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999999990598925	WITHOUT_CLASSIFICATION	9.401076196669063E-10	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.9999992119788661	WITHOUT_CLASSIFICATION	7.880211338704998E-7	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999999319914341	WITHOUT_CLASSIFICATION	6.800856588890808E-8	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999969830086476	WITHOUT_CLASSIFICATION	3.016991352324181E-6	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.999999977875465	WITHOUT_CLASSIFICATION	2.2124534964794874E-8	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999993507603824	WITHOUT_CLASSIFICATION	6.492396176062911E-7	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999999784615987	WITHOUT_CLASSIFICATION	2.153840136436394E-8	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999999984696475	WITHOUT_CLASSIFICATION	1.5303525418002326E-9	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999999945042203	WITHOUT_CLASSIFICATION	5.495779675490849E-9	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999999862157758	WITHOUT_CLASSIFICATION	1.3784224323407105E-8	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999999862157758	WITHOUT_CLASSIFICATION	1.3784224323407105E-8	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999995375440355	WITHOUT_CLASSIFICATION	4.6245596447294624E-7	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999998435101053	WITHOUT_CLASSIFICATION	1.5648989469180747E-7	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.99999999976991	WITHOUT_CLASSIFICATION	2.300899779846565E-10	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.999999979565157	WITHOUT_CLASSIFICATION	2.0434843053877298E-8	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.999999979565157	WITHOUT_CLASSIFICATION	2.0434843053877298E-8	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999997002474608	WITHOUT_CLASSIFICATION	2.99752539315988E-7	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999998733043327	WITHOUT_CLASSIFICATION	1.2669566727517313E-7	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999999873734564	WITHOUT_CLASSIFICATION	1.262654356903188E-8	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999472384011	WITHOUT_CLASSIFICATION	5.276159884739631E-8	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999372836781	WITHOUT_CLASSIFICATION	6.271632197630255E-8	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999973325803	WITHOUT_CLASSIFICATION	2.6674197804617113E-9	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999980006777324	WITHOUT_CLASSIFICATION	1.9993222676106973E-6	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999999939073979	WITHOUT_CLASSIFICATION	6.092602154492043E-9	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.999987431712927	WITHOUT_CLASSIFICATION	1.2568287073054661E-5	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999992218904599	WITHOUT_CLASSIFICATION	7.781095400679885E-7	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999998593377234	WITHOUT_CLASSIFICATION	1.4066227663692922E-7	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999991313467981	WITHOUT_CLASSIFICATION	8.686532018584694E-7	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999993011835845	WITHOUT_CLASSIFICATION	6.98816415560928E-7	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999990371273934	WITHOUT_CLASSIFICATION	9.62872606621113E-7	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999994764188996	WITHOUT_CLASSIFICATION	5.23581100441731E-7	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9999993006441807	WITHOUT_CLASSIFICATION	6.993558191769886E-7	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.999999974736544	WITHOUT_CLASSIFICATION	2.526345601228799E-8	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9999998785193397	WITHOUT_CLASSIFICATION	1.2148066024470354E-7	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999999735948243	WITHOUT_CLASSIFICATION	2.6405175741193438E-8	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999998832476	WITHOUT_CLASSIFICATION	1.167523387505076E-10	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999998771016	WITHOUT_CLASSIFICATION	1.2289827641550727E-10	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999998260220947	WITHOUT_CLASSIFICATION	1.739779053018039E-7	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999908758110513	WITHOUT_CLASSIFICATION	9.12418894878376E-6	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999998289886473	WITHOUT_CLASSIFICATION	1.7101135264761744E-7	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999999995711982	WITHOUT_CLASSIFICATION	4.2880180861024865E-9	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999569787019	WITHOUT_CLASSIFICATION	4.302129797705955E-8	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.999999804179403	WITHOUT_CLASSIFICATION	1.9582059700928876E-7	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999997134124405	WITHOUT_CLASSIFICATION	2.865875594172763E-7	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.999999949625019	WITHOUT_CLASSIFICATION	5.037498097842937E-8	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999993965791852	WITHOUT_CLASSIFICATION	6.034208147353005E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.99999994039948	WITHOUT_CLASSIFICATION	5.9600520064093836E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.99999994039948	WITHOUT_CLASSIFICATION	5.9600520064093836E-8	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999999953293981	WITHOUT_CLASSIFICATION	4.670601930228517E-9	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999996160230371	WITHOUT_CLASSIFICATION	3.839769628658225E-7	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999996160230371	WITHOUT_CLASSIFICATION	3.839769628658225E-7	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999511010272	WITHOUT_CLASSIFICATION	4.8898972820817977E-8	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999511010272	WITHOUT_CLASSIFICATION	4.8898972820817977E-8	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996821835978	WITHOUT_CLASSIFICATION	3.1781640227057636E-7	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999999829596947	WITHOUT_CLASSIFICATION	1.704030530614478E-8	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999996160499623	WITHOUT_CLASSIFICATION	3.839500377598113E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999998981129169	WITHOUT_CLASSIFICATION	1.0188708320521042E-7	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999956279833	WITHOUT_CLASSIFICATION	4.372016788443748E-9	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998763079823	WITHOUT_CLASSIFICATION	1.2369201771478615E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998763079823	WITHOUT_CLASSIFICATION	1.2369201771478615E-7	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999999995711982	WITHOUT_CLASSIFICATION	4.2880180861024865E-9	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999999995711982	WITHOUT_CLASSIFICATION	4.2880180861024865E-9	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999999995711982	WITHOUT_CLASSIFICATION	4.2880180861024865E-9	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999569787019	WITHOUT_CLASSIFICATION	4.302129797705955E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.99999994039948	WITHOUT_CLASSIFICATION	5.9600520064093836E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.99999994039948	WITHOUT_CLASSIFICATION	5.9600520064093836E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.99999994039948	WITHOUT_CLASSIFICATION	5.9600520064093836E-8	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996821835978	WITHOUT_CLASSIFICATION	3.1781640227057636E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996821835978	WITHOUT_CLASSIFICATION	3.1781640227057636E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996821835978	WITHOUT_CLASSIFICATION	3.1781640227057636E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999998981129169	WITHOUT_CLASSIFICATION	1.0188708320521042E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999998981129169	WITHOUT_CLASSIFICATION	1.0188708320521042E-7	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999995769367972	WITHOUT_CLASSIFICATION	4.2306320281988787E-7	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999998720684788	WITHOUT_CLASSIFICATION	1.2793152117992112E-7	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999998766375651	WITHOUT_CLASSIFICATION	1.233624348852586E-7	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9998485919867017	WITHOUT_CLASSIFICATION	1.514080132982494E-4	IMPLEMENTATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9999227471107639	WITHOUT_CLASSIFICATION	7.725288923600929E-5	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9999989855214654	WITHOUT_CLASSIFICATION	1.0144785345942991E-6	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9999989855214654	WITHOUT_CLASSIFICATION	1.0144785345942991E-6	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999999754902009	WITHOUT_CLASSIFICATION	2.450979914982113E-8	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999980006777324	WITHOUT_CLASSIFICATION	1.9993222676106973E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999980006777324	WITHOUT_CLASSIFICATION	1.9993222676106973E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999980006777324	WITHOUT_CLASSIFICATION	1.9993222676106973E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999980006777324	WITHOUT_CLASSIFICATION	1.9993222676106973E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999980006777324	WITHOUT_CLASSIFICATION	1.9993222676106973E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999923572281	WITHOUT_CLASSIFICATION	7.642771786564553E-9	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999923572281	WITHOUT_CLASSIFICATION	7.642771786564553E-9	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999923572281	WITHOUT_CLASSIFICATION	7.642771786564553E-9	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999999995033123	WITHOUT_CLASSIFICATION	4.966876596440339E-10	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999993964652193	WITHOUT_CLASSIFICATION	6.035347807104224E-7	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999569787019	WITHOUT_CLASSIFICATION	4.302129797705955E-8	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996821835978	WITHOUT_CLASSIFICATION	3.1781640227057636E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996821835978	WITHOUT_CLASSIFICATION	3.1781640227057636E-7	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999980006777324	WITHOUT_CLASSIFICATION	1.9993222676106973E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999980006777324	WITHOUT_CLASSIFICATION	1.9993222676106973E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999923572281	WITHOUT_CLASSIFICATION	7.642771786564553E-9	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999999754902009	WITHOUT_CLASSIFICATION	2.450979914982113E-8	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999961924361	WITHOUT_CLASSIFICATION	3.8075638899341045E-9	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.9999997467661418	WITHOUT_CLASSIFICATION	2.532338581860287E-7	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999999790279726	WITHOUT_CLASSIFICATION	2.0972027422009896E-8	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999998847918277	WITHOUT_CLASSIFICATION	1.1520817235511358E-7	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999997561763769	WITHOUT_CLASSIFICATION	2.43823623020103E-7	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.99999994294141	WITHOUT_CLASSIFICATION	5.70585900604177E-8	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999865531871027	WITHOUT_CLASSIFICATION	1.3446812897420617E-5	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.999999461485349	WITHOUT_CLASSIFICATION	5.385146510282173E-7	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999987411856398	WITHOUT_CLASSIFICATION	1.2588143602606601E-6	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999999884729546	WITHOUT_CLASSIFICATION	1.1527045390946984E-8	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9998103801244298	WITHOUT_CLASSIFICATION	1.896198755701118E-4	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999999870969888	WITHOUT_CLASSIFICATION	1.2903011307963645E-8	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999977603419626	WITHOUT_CLASSIFICATION	2.239658037395045E-6	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9997080327588443	WITHOUT_CLASSIFICATION	2.919672411556151E-4	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999994573422613	WITHOUT_CLASSIFICATION	5.426577386245301E-7	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9998645522363343	WITHOUT_CLASSIFICATION	1.3544776366567293E-4	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999979068376912	WITHOUT_CLASSIFICATION	2.0931623087741803E-6	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999999816403708	WITHOUT_CLASSIFICATION	1.8359629207304542E-8	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999495277344004	WITHOUT_CLASSIFICATION	5.0472265599534344E-5	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999999723312899	WITHOUT_CLASSIFICATION	2.7668710150200857E-8	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999924554067526	WITHOUT_CLASSIFICATION	7.5445932473634105E-6	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999999412565	WITHOUT_CLASSIFICATION	5.874345134608128E-11	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999999894157	WITHOUT_CLASSIFICATION	1.0584319753780226E-11	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999995011557441	WITHOUT_CLASSIFICATION	4.988442558103851E-7	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999998838655405	WITHOUT_CLASSIFICATION	1.1613445948869751E-7	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999998656564645	WITHOUT_CLASSIFICATION	1.3434353556773223E-7	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9999997933891057	WITHOUT_CLASSIFICATION	2.066108943347133E-7	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999999897829703	WITHOUT_CLASSIFICATION	1.0217029693400953E-8	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999998761180076	WITHOUT_CLASSIFICATION	1.2388199244228018E-7	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999808844425762	WITHOUT_CLASSIFICATION	1.9115557423792203E-5	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999999994317552	WITHOUT_CLASSIFICATION	5.682447335287144E-10	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.999999909430832	WITHOUT_CLASSIFICATION	9.05691680446922E-8	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999999999671059	WITHOUT_CLASSIFICATION	3.28941708962068E-11	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999888245946	WITHOUT_CLASSIFICATION	1.1175405354555952E-8	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999961924361	WITHOUT_CLASSIFICATION	3.8075638899341045E-9	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999999743451519	WITHOUT_CLASSIFICATION	2.5654848108292833E-8	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.999999992623943	WITHOUT_CLASSIFICATION	7.37605709224753E-9	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999999799538019	WITHOUT_CLASSIFICATION	2.004619819593329E-8	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999998960306605	WITHOUT_CLASSIFICATION	1.039693395456053E-7	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999998960306605	WITHOUT_CLASSIFICATION	1.039693395456053E-7	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9999551543704581	WITHOUT_CLASSIFICATION	4.484562954186211E-5	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9999551543704581	WITHOUT_CLASSIFICATION	4.484562954186211E-5	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999999995968661	WITHOUT_CLASSIFICATION	4.031338063151886E-10	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999999853718711	WITHOUT_CLASSIFICATION	1.4628128882168999E-8	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999999170540615	WITHOUT_CLASSIFICATION	8.294593851652473E-8	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999995262089751	WITHOUT_CLASSIFICATION	4.737910248144901E-7	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999999638094637	WITHOUT_CLASSIFICATION	3.619053633030403E-8	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999980438998995	WITHOUT_CLASSIFICATION	1.9561001004726996E-6	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999999973445289	WITHOUT_CLASSIFICATION	2.655471039069593E-9	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999971181852727	WITHOUT_CLASSIFICATION	2.8818147272467062E-6	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9997632298045905	WITHOUT_CLASSIFICATION	2.3677019540940334E-4	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999994927821	WITHOUT_CLASSIFICATION	5.072179902889932E-10	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999998907929	WITHOUT_CLASSIFICATION	1.0920705423129365E-10	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999999259456898	WITHOUT_CLASSIFICATION	7.405431023370787E-8	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999999259456898	WITHOUT_CLASSIFICATION	7.405431023370787E-8	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.999999999958155	WITHOUT_CLASSIFICATION	4.184507318001888E-11	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.999999985942434	WITHOUT_CLASSIFICATION	1.4057565968234564E-8	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999997535101508	WITHOUT_CLASSIFICATION	2.464898492182898E-7	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999997535101508	WITHOUT_CLASSIFICATION	2.464898492182898E-7	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999999984684332	WITHOUT_CLASSIFICATION	1.5315668494955951E-9	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999975993983	WITHOUT_CLASSIFICATION	2.4006018009684117E-9	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999984839397882	WITHOUT_CLASSIFICATION	1.5160602117790708E-6	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999999936754957	WITHOUT_CLASSIFICATION	6.3245042966183016E-9	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999999915368799	WITHOUT_CLASSIFICATION	8.463120122738455E-9	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999995911174484	WITHOUT_CLASSIFICATION	4.0888255159248497E-7	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9999940145306055	WITHOUT_CLASSIFICATION	5.985469394360819E-6	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999543499783806	WITHOUT_CLASSIFICATION	4.565002161949953E-5	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999812464708547	WITHOUT_CLASSIFICATION	1.8753529145309507E-5	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9999999218054925	WITHOUT_CLASSIFICATION	7.819450765328511E-8	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999997997919142	WITHOUT_CLASSIFICATION	2.0020808576490932E-7	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999999483555192	WITHOUT_CLASSIFICATION	5.164448086469342E-8	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999988949499538	WITHOUT_CLASSIFICATION	1.1050500463319908E-6	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999995593533285	WITHOUT_CLASSIFICATION	4.406466714559671E-7	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999844997121	WITHOUT_CLASSIFICATION	1.550028798902115E-8	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999994503783581	WITHOUT_CLASSIFICATION	5.496216418894233E-7	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999995064122891	WITHOUT_CLASSIFICATION	4.935877109833272E-7	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999998711232806	WITHOUT_CLASSIFICATION	1.2887671940186042E-7	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999999999806972	WITHOUT_CLASSIFICATION	1.9302798727455624E-11	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999995404567834	WITHOUT_CLASSIFICATION	4.595432165525866E-7	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.6509614062770296	WITHOUT_CLASSIFICATION	0.34903859372297036	IMPLEMENTATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999995627668058	WITHOUT_CLASSIFICATION	4.372331942547346E-7	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999994539532834	WITHOUT_CLASSIFICATION	5.460467165815402E-7	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999936644347616	WITHOUT_CLASSIFICATION	6.335565238452327E-6	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999994838425865	WITHOUT_CLASSIFICATION	5.161574135226962E-7	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999984506610727	WITHOUT_CLASSIFICATION	1.5493389272502366E-6	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9999998025115882	WITHOUT_CLASSIFICATION	1.9748841187769915E-7	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999962176649521	WITHOUT_CLASSIFICATION	3.78233504787795E-6	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999999964532257	WITHOUT_CLASSIFICATION	3.5467742872343076E-9	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999999997844484	WITHOUT_CLASSIFICATION	2.1555159844780674E-10	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999999992853399	WITHOUT_CLASSIFICATION	7.14660152945101E-10	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999999993506248	WITHOUT_CLASSIFICATION	6.493752201585894E-10	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999999980483147	WITHOUT_CLASSIFICATION	1.95168520266534E-9	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999978772364	WITHOUT_CLASSIFICATION	2.122763531326106E-9	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999978772364	WITHOUT_CLASSIFICATION	2.122763531326106E-9	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999999948295543	WITHOUT_CLASSIFICATION	5.170445655079601E-9	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999995939136104	WITHOUT_CLASSIFICATION	4.060863896253337E-7	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999999993031043	WITHOUT_CLASSIFICATION	6.968956039942718E-10	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9999994938328135	WITHOUT_CLASSIFICATION	5.061671864868693E-7	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9999997472346331	WITHOUT_CLASSIFICATION	2.5276536687034576E-7	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999997150534549	WITHOUT_CLASSIFICATION	2.8494654512890553E-7	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999969458964927	WITHOUT_CLASSIFICATION	3.0541035073258165E-6	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999984666358742	WITHOUT_CLASSIFICATION	1.533364125871039E-6	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999999703162799	WITHOUT_CLASSIFICATION	2.9683720246632803E-8	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9999996747208555	WITHOUT_CLASSIFICATION	3.2527914449573485E-7	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999999942245156	WITHOUT_CLASSIFICATION	5.775484490605302E-9	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999724449933622	WITHOUT_CLASSIFICATION	2.7555006637775754E-5	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999739297322577	WITHOUT_CLASSIFICATION	2.6070267742183428E-5	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999997307481193	WITHOUT_CLASSIFICATION	2.692518807848903E-7	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999999267671839	WITHOUT_CLASSIFICATION	7.323281611344697E-8	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.999999938066998	WITHOUT_CLASSIFICATION	6.193300197462673E-8	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999999712322394	WITHOUT_CLASSIFICATION	2.8767760647307974E-8	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999994351219976	WITHOUT_CLASSIFICATION	5.648780022641505E-7	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9983966736679746	WITHOUT_CLASSIFICATION	0.0016033263320253744	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999885946368893	WITHOUT_CLASSIFICATION	1.140536311064601E-5	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.999999978124941	WITHOUT_CLASSIFICATION	2.1875058962748233E-8	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999999952755908	WITHOUT_CLASSIFICATION	4.724409144528683E-9	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999963445117563	WITHOUT_CLASSIFICATION	3.6554882436701515E-6	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999999541613389	WITHOUT_CLASSIFICATION	4.5838661143754824E-8	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.999998074610621	WITHOUT_CLASSIFICATION	1.925389379043978E-6	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999078358358926	WITHOUT_CLASSIFICATION	9.216416410746635E-5	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999999891784	WITHOUT_CLASSIFICATION	1.0821594390551719E-11	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999999990183143	WITHOUT_CLASSIFICATION	9.816856961751934E-10	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9999967555601784	WITHOUT_CLASSIFICATION	3.244439821486711E-6	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999984960353705	WITHOUT_CLASSIFICATION	1.5039646294660507E-6	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999989194973999	WITHOUT_CLASSIFICATION	1.0805026000058623E-6	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999135684227848	WITHOUT_CLASSIFICATION	8.643157721516267E-5	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999999708251486	WITHOUT_CLASSIFICATION	2.9174851398310216E-8	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.999999997765804	WITHOUT_CLASSIFICATION	2.234196068272168E-9	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999998373962874	WITHOUT_CLASSIFICATION	1.626037125280426E-7	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999999974098689	WITHOUT_CLASSIFICATION	2.5901312032076348E-9	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999999909346112	WITHOUT_CLASSIFICATION	9.065388679350884E-9	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9999999613063018	WITHOUT_CLASSIFICATION	3.8693698219727664E-8	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9999918133658405	WITHOUT_CLASSIFICATION	8.18663415948168E-6	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999999863873	WITHOUT_CLASSIFICATION	1.361270003197491E-8	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999988879156826	WITHOUT_CLASSIFICATION	1.1120843174125422E-6	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999999500093131	WITHOUT_CLASSIFICATION	4.999068694587033E-8	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999999500093131	WITHOUT_CLASSIFICATION	4.999068694587033E-8	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999996963481946	WITHOUT_CLASSIFICATION	3.03651805339412E-7	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.999999995946422	WITHOUT_CLASSIFICATION	4.053578090892352E-9	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999998345467758	WITHOUT_CLASSIFICATION	1.654532242372995E-7	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999948556929733	WITHOUT_CLASSIFICATION	5.144307026689635E-6	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999991577975821	WITHOUT_CLASSIFICATION	8.422024178406889E-7	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999999999994136	WITHOUT_CLASSIFICATION	5.864904956838553E-13	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999407128	WITHOUT_CLASSIFICATION	5.928723669896421E-11	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999998680726506	WITHOUT_CLASSIFICATION	1.3192734936280616E-7	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999998768953118	WITHOUT_CLASSIFICATION	1.2310468816257384E-7	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999944973283307	WITHOUT_CLASSIFICATION	5.502671669321399E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999999974824328	WITHOUT_CLASSIFICATION	2.5175670744104542E-9	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999998409317441	WITHOUT_CLASSIFICATION	1.5906825602851077E-7	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999999578543465	WITHOUT_CLASSIFICATION	4.214565354050975E-8	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999987265852497	WITHOUT_CLASSIFICATION	1.273414750400845E-6	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999993983850681	WITHOUT_CLASSIFICATION	6.016149318919189E-7	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9639376819378009	WITHOUT_CLASSIFICATION	0.036062318062198936	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999852532866	WITHOUT_CLASSIFICATION	1.4746713409313634E-8	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999999937232719	WITHOUT_CLASSIFICATION	6.276728098999778E-9	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999999317125899	WITHOUT_CLASSIFICATION	6.82874100272023E-8	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.993962334922688	WITHOUT_CLASSIFICATION	0.006037665077311975	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999998399703789	WITHOUT_CLASSIFICATION	1.6002962114309741E-7	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999998243793425	WITHOUT_CLASSIFICATION	1.7562065753966458E-7	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999968834665545	WITHOUT_CLASSIFICATION	3.1165334456268648E-6	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999946988994457	WITHOUT_CLASSIFICATION	5.3011005542255006E-6	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999951850963	WITHOUT_CLASSIFICATION	4.814903749057144E-9	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999505010756559	WITHOUT_CLASSIFICATION	4.949892434416733E-5	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999999999999253	WITHOUT_CLASSIFICATION	7.476554314930285E-14	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.999995977398001	WITHOUT_CLASSIFICATION	4.022601999090459E-6	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999977154264	WITHOUT_CLASSIFICATION	2.284573618367938E-9	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999998365659718	WITHOUT_CLASSIFICATION	1.634340281691049E-7	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999975493594	WITHOUT_CLASSIFICATION	2.4506405139650197E-9	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999903997755	WITHOUT_CLASSIFICATION	9.600224596194078E-9	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999998365659718	WITHOUT_CLASSIFICATION	1.634340281691049E-7	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999999988366531	WITHOUT_CLASSIFICATION	1.1633469187800458E-9	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999996093427141	WITHOUT_CLASSIFICATION	3.906572858072227E-7	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9929835411534788	WITHOUT_CLASSIFICATION	0.007016458846521226	IMPLEMENTATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9062209281219683	IMPLEMENTATION	0.09377907187803172	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999996249309892	WITHOUT_CLASSIFICATION	3.7506901084091366E-7	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.999999999989929	WITHOUT_CLASSIFICATION	1.0071107527560997E-11	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999999993873777	WITHOUT_CLASSIFICATION	6.126222393080103E-10	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999951043017232	WITHOUT_CLASSIFICATION	4.895698276777874E-6	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999978316989	WITHOUT_CLASSIFICATION	2.1683010872749434E-9	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999995404567834	WITHOUT_CLASSIFICATION	4.595432165525866E-7	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999998766375651	WITHOUT_CLASSIFICATION	1.233624348852586E-7	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999998025585	WITHOUT_CLASSIFICATION	1.9744141642705519E-10	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999991926529851	WITHOUT_CLASSIFICATION	8.073470149356829E-7	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999997528979083	WITHOUT_CLASSIFICATION	2.4710209167259487E-7	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999983283643493	WITHOUT_CLASSIFICATION	1.671635650680509E-6	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9999998754136449	WITHOUT_CLASSIFICATION	1.24586355216383E-7	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.99999521111252	WITHOUT_CLASSIFICATION	4.7888874800517295E-6	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999936774138546	WITHOUT_CLASSIFICATION	6.322586145374523E-6	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999999946263798	WITHOUT_CLASSIFICATION	5.373620241316272E-9	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999998418377528	WITHOUT_CLASSIFICATION	1.5816224711217705E-7	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9999972049219705	WITHOUT_CLASSIFICATION	2.7950780295424534E-6	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9999979884061032	WITHOUT_CLASSIFICATION	2.011593896793534E-6	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.999995964758856	WITHOUT_CLASSIFICATION	4.0352411439990065E-6	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999996208053277	WITHOUT_CLASSIFICATION	3.7919467230641216E-7	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9998273076634824	WITHOUT_CLASSIFICATION	1.7269233651753306E-4	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999997538018298	WITHOUT_CLASSIFICATION	2.461981701563477E-7	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999994292208464	WITHOUT_CLASSIFICATION	5.707791535657979E-7	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999999997221044	WITHOUT_CLASSIFICATION	2.7789563588025416E-10	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999993865286	WITHOUT_CLASSIFICATION	6.134713261586133E-10	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999999988868213	WITHOUT_CLASSIFICATION	1.1131787113323162E-8	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999999988868213	WITHOUT_CLASSIFICATION	1.1131787113323162E-8	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999963297553	WITHOUT_CLASSIFICATION	3.670244670651292E-9	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999999845639	WITHOUT_CLASSIFICATION	1.5436052672935125E-11	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999639693632001	WITHOUT_CLASSIFICATION	3.603063679996849E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5478961305802676	WITHOUT_CLASSIFICATION	0.4521038694197323	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5478961305802676	WITHOUT_CLASSIFICATION	0.4521038694197323	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5478961305802676	WITHOUT_CLASSIFICATION	0.4521038694197323	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5478961305802676	WITHOUT_CLASSIFICATION	0.4521038694197323	IMPLEMENTATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.999999999073452	WITHOUT_CLASSIFICATION	9.265478790528127E-10	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999992787145056	WITHOUT_CLASSIFICATION	7.212854944156954E-7	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9999999677236693	WITHOUT_CLASSIFICATION	3.227633079835802E-8	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9419542720478652	WITHOUT_CLASSIFICATION	0.058045727952134786	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999935500169421	WITHOUT_CLASSIFICATION	6.4499830578116E-6	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999988078084135	WITHOUT_CLASSIFICATION	1.1921915864927902E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999985313625152	WITHOUT_CLASSIFICATION	1.4686374849144244E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999985313625152	WITHOUT_CLASSIFICATION	1.4686374849144244E-6	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999999973921783	WITHOUT_CLASSIFICATION	2.607821720700546E-9	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9999996358869832	WITHOUT_CLASSIFICATION	3.641130168028939E-7	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999974382454371	WITHOUT_CLASSIFICATION	2.561754562834461E-6	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9998718365305256	WITHOUT_CLASSIFICATION	1.2816346947446295E-4	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999955832904837	WITHOUT_CLASSIFICATION	4.416709516357612E-6	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999996164604278	WITHOUT_CLASSIFICATION	3.8353957220092637E-7	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999999997691013	WITHOUT_CLASSIFICATION	2.3089871078966646E-10	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999995037882682	WITHOUT_CLASSIFICATION	4.962117318330478E-7	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999963460038177	WITHOUT_CLASSIFICATION	3.6539961821581813E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999963460038177	WITHOUT_CLASSIFICATION	3.6539961821581813E-6	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999903997755	WITHOUT_CLASSIFICATION	9.600224596194078E-9	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9999995478512239	WITHOUT_CLASSIFICATION	4.521487761440873E-7	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.999999598538443	WITHOUT_CLASSIFICATION	4.0146155701374764E-7	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999991620904602	WITHOUT_CLASSIFICATION	8.379095398843418E-7	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999999576953	WITHOUT_CLASSIFICATION	4.23047690095906E-11	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9999992493925068	WITHOUT_CLASSIFICATION	7.506074932099763E-7	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999985881990913	WITHOUT_CLASSIFICATION	1.4118009087114692E-6	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999981287321754	WITHOUT_CLASSIFICATION	1.8712678244637865E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999999261609882	WITHOUT_CLASSIFICATION	7.383901183851435E-8	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999999261609882	WITHOUT_CLASSIFICATION	7.383901183851435E-8	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999966964308546	WITHOUT_CLASSIFICATION	3.303569145314084E-6	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999999931183947	WITHOUT_CLASSIFICATION	6.881605351759453E-9	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999999454586234	WITHOUT_CLASSIFICATION	5.4541376589885715E-8	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999978390942558	WITHOUT_CLASSIFICATION	2.160905744125165E-6	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999941167545039	WITHOUT_CLASSIFICATION	5.883245496084247E-6	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9999986035521069	WITHOUT_CLASSIFICATION	1.3964478930440697E-6	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9861454600657464	WITHOUT_CLASSIFICATION	0.013854539934253535	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999049772346	WITHOUT_CLASSIFICATION	9.502276550369477E-8	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999049772346	WITHOUT_CLASSIFICATION	9.502276550369477E-8	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999049772346	WITHOUT_CLASSIFICATION	9.502276550369477E-8	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999999049772346	WITHOUT_CLASSIFICATION	9.502276550369477E-8	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999863786563	WITHOUT_CLASSIFICATION	1.3621343738044477E-8	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999999214124	WITHOUT_CLASSIFICATION	7.858756655270964E-11	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999966766377613	WITHOUT_CLASSIFICATION	3.3233622386832886E-6	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999999379290931	WITHOUT_CLASSIFICATION	6.207090693024637E-8	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999999837274024	WITHOUT_CLASSIFICATION	1.6272597530338863E-8	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9999996619780896	WITHOUT_CLASSIFICATION	3.380219103228193E-7	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999302449607	WITHOUT_CLASSIFICATION	6.975503924247088E-8	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999997310296	WITHOUT_CLASSIFICATION	2.6897040507510973E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999997310296	WITHOUT_CLASSIFICATION	2.6897040507510973E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999997310296	WITHOUT_CLASSIFICATION	2.6897040507510973E-9	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999999596261623	WITHOUT_CLASSIFICATION	4.037383766553673E-8	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999999593218284	WITHOUT_CLASSIFICATION	4.0678171626561984E-8	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999998646424046	WITHOUT_CLASSIFICATION	1.3535759531035893E-7	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999998646424046	WITHOUT_CLASSIFICATION	1.3535759531035893E-7	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999989185545942	WITHOUT_CLASSIFICATION	1.0814454057265713E-6	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9995351754070512	WITHOUT_CLASSIFICATION	4.6482459294884266E-4	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999895041493139	WITHOUT_CLASSIFICATION	1.0495850686072849E-5	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9999997727599675	WITHOUT_CLASSIFICATION	2.2724003258151525E-7	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999981715617	WITHOUT_CLASSIFICATION	1.8284382170092597E-9	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999997288357851	WITHOUT_CLASSIFICATION	2.711642148000889E-7	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999965469695	WITHOUT_CLASSIFICATION	3.4530304594615335E-9	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999965469695	WITHOUT_CLASSIFICATION	3.4530304594615335E-9	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999907663348	WITHOUT_CLASSIFICATION	9.23366510446752E-9	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999992588784	WITHOUT_CLASSIFICATION	7.411216033056929E-10	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999782171568	WITHOUT_CLASSIFICATION	2.1782843165790288E-8	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999928366173363	WITHOUT_CLASSIFICATION	7.163382663719367E-6	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9934871257997854	WITHOUT_CLASSIFICATION	0.0065128742002146895	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999986308721346	WITHOUT_CLASSIFICATION	1.3691278654347595E-6	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9999998186566551	WITHOUT_CLASSIFICATION	1.8134334501441636E-7	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998447888178257	WITHOUT_CLASSIFICATION	1.5521118217428663E-4	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999999915952592	WITHOUT_CLASSIFICATION	8.404740791360378E-9	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999998326957095	WITHOUT_CLASSIFICATION	1.6730429056196525E-7	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999998317132479	WITHOUT_CLASSIFICATION	1.6828675216730762E-7	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999996484261	WITHOUT_CLASSIFICATION	3.5157391341764906E-10	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9984227778450095	WITHOUT_CLASSIFICATION	0.001577222154990478	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999998631873251	WITHOUT_CLASSIFICATION	1.368126748950932E-7	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999974232585019	WITHOUT_CLASSIFICATION	2.5767414981369883E-6	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999831620893113	WITHOUT_CLASSIFICATION	1.683791068875452E-5	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999797919074578	WITHOUT_CLASSIFICATION	2.020809254225864E-5	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999999835886579	WITHOUT_CLASSIFICATION	1.641134208802444E-8	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999998650020221	WITHOUT_CLASSIFICATION	1.3499797788902006E-6	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999998551385196	WITHOUT_CLASSIFICATION	1.4486148031440736E-7	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999993439627	WITHOUT_CLASSIFICATION	6.560372456861324E-10	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9985330637668172	WITHOUT_CLASSIFICATION	0.001466936233182851	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999990554363593	WITHOUT_CLASSIFICATION	9.445636406881687E-7	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999990554363593	WITHOUT_CLASSIFICATION	9.445636406881687E-7	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999990554363593	WITHOUT_CLASSIFICATION	9.445636406881687E-7	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999990554363593	WITHOUT_CLASSIFICATION	9.445636406881687E-7	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999990554363593	WITHOUT_CLASSIFICATION	9.445636406881687E-7	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999990554363593	WITHOUT_CLASSIFICATION	9.445636406881687E-7	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999990554363593	WITHOUT_CLASSIFICATION	9.445636406881687E-7	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999990554363593	WITHOUT_CLASSIFICATION	9.445636406881687E-7	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999960156431968	WITHOUT_CLASSIFICATION	3.984356803202815E-6	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9999987487740147	WITHOUT_CLASSIFICATION	1.2512259852611486E-6	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999995012162683	WITHOUT_CLASSIFICATION	4.987837316986022E-7	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999999759052665	WITHOUT_CLASSIFICATION	2.409473355295699E-8	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999407128	WITHOUT_CLASSIFICATION	5.928723669896421E-11	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999407128	WITHOUT_CLASSIFICATION	5.928723669896421E-11	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999999851389669	WITHOUT_CLASSIFICATION	1.4861032952243586E-8	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999999517045286	WITHOUT_CLASSIFICATION	4.8295471414837805E-8	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999999969458592	WITHOUT_CLASSIFICATION	3.054140795408214E-9	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999999770288962	WITHOUT_CLASSIFICATION	2.2971103826334014E-8	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999986764527239	WITHOUT_CLASSIFICATION	1.323547276127728E-6	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9999997558070445	WITHOUT_CLASSIFICATION	2.441929556119243E-7	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9999995998419235	WITHOUT_CLASSIFICATION	4.0015807648271234E-7	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999436945339113	WITHOUT_CLASSIFICATION	5.630546608872065E-5	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999940956834076	WITHOUT_CLASSIFICATION	5.904316592449564E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999995490243212	WITHOUT_CLASSIFICATION	4.509756787557392E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999995490243212	WITHOUT_CLASSIFICATION	4.509756787557392E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999995490243212	WITHOUT_CLASSIFICATION	4.509756787557392E-7	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997767495669249	WITHOUT_CLASSIFICATION	2.2325043307519932E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997767495669249	WITHOUT_CLASSIFICATION	2.2325043307519932E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997767495669249	WITHOUT_CLASSIFICATION	2.2325043307519932E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997767495669249	WITHOUT_CLASSIFICATION	2.2325043307519932E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997767495669249	WITHOUT_CLASSIFICATION	2.2325043307519932E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997767495669249	WITHOUT_CLASSIFICATION	2.2325043307519932E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997767495669249	WITHOUT_CLASSIFICATION	2.2325043307519932E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997767495669249	WITHOUT_CLASSIFICATION	2.2325043307519932E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997767495669249	WITHOUT_CLASSIFICATION	2.2325043307519932E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999836547799	WITHOUT_CLASSIFICATION	1.6345220138353127E-8	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999579174604107	WITHOUT_CLASSIFICATION	4.208253958930615E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999998938813057	WITHOUT_CLASSIFICATION	1.0611869430138373E-7	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.999999992749246	WITHOUT_CLASSIFICATION	7.2507538856510534E-9	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997767495669249	WITHOUT_CLASSIFICATION	2.2325043307519932E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997767495669249	WITHOUT_CLASSIFICATION	2.2325043307519932E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997767495669249	WITHOUT_CLASSIFICATION	2.2325043307519932E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999846490621	WITHOUT_CLASSIFICATION	1.5350937874532457E-8	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.99999995983859	WITHOUT_CLASSIFICATION	4.016141005084816E-8	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999490012232092	WITHOUT_CLASSIFICATION	5.0998776790715744E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.999443414765681	WITHOUT_CLASSIFICATION	5.565852343190618E-4	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.999443414765681	WITHOUT_CLASSIFICATION	5.565852343190618E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999998805053503	WITHOUT_CLASSIFICATION	1.194946496979208E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999974270810144	WITHOUT_CLASSIFICATION	2.572918985727527E-6	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999999912083646	WITHOUT_CLASSIFICATION	8.791635420222787E-9	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999999971028197	WITHOUT_CLASSIFICATION	2.8971802537059745E-9	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999964033796216	WITHOUT_CLASSIFICATION	3.5966203783352866E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999964033796216	WITHOUT_CLASSIFICATION	3.5966203783352866E-6	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999981341033823	WITHOUT_CLASSIFICATION	1.8658966177063307E-6	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999894575913	WITHOUT_CLASSIFICATION	1.0542408624716233E-8	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999968219334306	WITHOUT_CLASSIFICATION	3.178066569370488E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999911280602116	WITHOUT_CLASSIFICATION	8.871939788318355E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999911280602116	WITHOUT_CLASSIFICATION	8.871939788318355E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999911280602116	WITHOUT_CLASSIFICATION	8.871939788318355E-6	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999995264214677	WITHOUT_CLASSIFICATION	4.7357853227637606E-7	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999972548167	WITHOUT_CLASSIFICATION	2.7451832586126066E-9	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999972548167	WITHOUT_CLASSIFICATION	2.7451832586126066E-9	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999996417172405	WITHOUT_CLASSIFICATION	3.5828275947545246E-7	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999996417172405	WITHOUT_CLASSIFICATION	3.5828275947545246E-7	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999999382180411	WITHOUT_CLASSIFICATION	6.178195890824056E-8	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999952521038483	WITHOUT_CLASSIFICATION	4.747896151717492E-6	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999998982674881	WITHOUT_CLASSIFICATION	1.0173251185159758E-7	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999996253848009	WITHOUT_CLASSIFICATION	3.746151990736628E-7	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999992746119805	WITHOUT_CLASSIFICATION	7.253880195987866E-7	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999999068005223	WITHOUT_CLASSIFICATION	9.319947764472327E-8	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999993131024871	WITHOUT_CLASSIFICATION	6.868975127536838E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998763079823	WITHOUT_CLASSIFICATION	1.2369201771478615E-7	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999999820448363	WITHOUT_CLASSIFICATION	1.7955163611389804E-8	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999999982482	WITHOUT_CLASSIFICATION	1.7518345922056205E-12	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.8935358885794227	WITHOUT_CLASSIFICATION	0.10646411142057728	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999986289981769	WITHOUT_CLASSIFICATION	1.3710018230859506E-6	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999981645086891	WITHOUT_CLASSIFICATION	1.8354913109118817E-6	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.99999874668905	WITHOUT_CLASSIFICATION	1.253310949995384E-6	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999970965376334	WITHOUT_CLASSIFICATION	2.9034623667103035E-6	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999999995728077	WITHOUT_CLASSIFICATION	4.2719216980954497E-10	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999998162887531	WITHOUT_CLASSIFICATION	1.8371124682512117E-7	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999998367781011	WITHOUT_CLASSIFICATION	1.6322189886379883E-7	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999999968529355	WITHOUT_CLASSIFICATION	3.147064422933498E-9	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.999998406455141	WITHOUT_CLASSIFICATION	1.5935448589520595E-6	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999998025585	WITHOUT_CLASSIFICATION	1.9744141642705519E-10	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999879200434755	WITHOUT_CLASSIFICATION	1.2079956524554036E-5	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999999547796682	WITHOUT_CLASSIFICATION	4.5220331781945705E-8	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999937632867076	WITHOUT_CLASSIFICATION	6.2367132923283E-6	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999997363756697	WITHOUT_CLASSIFICATION	2.636243302304337E-7	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999996146330229	WITHOUT_CLASSIFICATION	3.853669770874077E-7	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999993536424934	WITHOUT_CLASSIFICATION	6.463575066291399E-7	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999999999666432	WITHOUT_CLASSIFICATION	3.335675098199081E-11	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999999763436098	WITHOUT_CLASSIFICATION	2.365639022164609E-8	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999986312335586	WITHOUT_CLASSIFICATION	1.368766441318263E-6	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999970488738593	WITHOUT_CLASSIFICATION	2.9511261406516864E-6	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999999980919239	WITHOUT_CLASSIFICATION	1.908076115783143E-9	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999973894656394	WITHOUT_CLASSIFICATION	2.610534360573987E-6	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999999928689236	WITHOUT_CLASSIFICATION	7.13107649207739E-9	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999995195228901	WITHOUT_CLASSIFICATION	4.804771098375026E-7	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999999997376119	WITHOUT_CLASSIFICATION	2.623880457462829E-10	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.999999997277672	WITHOUT_CLASSIFICATION	2.722328080370041E-9	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999999705156947	WITHOUT_CLASSIFICATION	2.9484305305052364E-8	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999999846626377	WITHOUT_CLASSIFICATION	1.533736221325051E-8	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999998615685	WITHOUT_CLASSIFICATION	1.3843143730512876E-10	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999999969452112	WITHOUT_CLASSIFICATION	3.0547888118272377E-9	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999999911617061	WITHOUT_CLASSIFICATION	8.838293803839167E-9	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999999805846944	WITHOUT_CLASSIFICATION	1.941530549564104E-8	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999999991496433	WITHOUT_CLASSIFICATION	8.503567772308005E-10	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999997396360426	WITHOUT_CLASSIFICATION	2.6036395747134984E-7	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999696313057893	WITHOUT_CLASSIFICATION	3.03686942107085E-5	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9999999120086303	WITHOUT_CLASSIFICATION	8.79913698297841E-8	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999946789165	WITHOUT_CLASSIFICATION	5.321083364205096E-9	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999808978665	WITHOUT_CLASSIFICATION	1.910213364824819E-8	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999997362792854	WITHOUT_CLASSIFICATION	2.6372071456260953E-7	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999999098778336	WITHOUT_CLASSIFICATION	9.012216646662224E-8	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999946506165546	WITHOUT_CLASSIFICATION	5.349383445444753E-6	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999946506165546	WITHOUT_CLASSIFICATION	5.349383445444753E-6	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999990041829	WITHOUT_CLASSIFICATION	9.95817022854754E-10	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999990041829	WITHOUT_CLASSIFICATION	9.95817022854754E-10	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999115539735043	WITHOUT_CLASSIFICATION	8.844602649570469E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999115539735043	WITHOUT_CLASSIFICATION	8.844602649570469E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999984136585245	WITHOUT_CLASSIFICATION	1.5863414754056076E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999984136585245	WITHOUT_CLASSIFICATION	1.5863414754056076E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999573786477	WITHOUT_CLASSIFICATION	4.262135232559443E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999573786477	WITHOUT_CLASSIFICATION	4.262135232559443E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999573786477	WITHOUT_CLASSIFICATION	4.262135232559443E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999573786477	WITHOUT_CLASSIFICATION	4.262135232559443E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999573786477	WITHOUT_CLASSIFICATION	4.262135232559443E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999573786477	WITHOUT_CLASSIFICATION	4.262135232559443E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999573786477	WITHOUT_CLASSIFICATION	4.262135232559443E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999573786477	WITHOUT_CLASSIFICATION	4.262135232559443E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999573786477	WITHOUT_CLASSIFICATION	4.262135232559443E-8	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999681381725	WITHOUT_CLASSIFICATION	3.18618274398454E-8	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999681381725	WITHOUT_CLASSIFICATION	3.18618274398454E-8	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999681381725	WITHOUT_CLASSIFICATION	3.18618274398454E-8	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999988817591056	WITHOUT_CLASSIFICATION	1.1182408944189165E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999995602738473	WITHOUT_CLASSIFICATION	4.397261527041501E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999995602738473	WITHOUT_CLASSIFICATION	4.397261527041501E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999995602738473	WITHOUT_CLASSIFICATION	4.397261527041501E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999292644101	WITHOUT_CLASSIFICATION	7.073558992237402E-8	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999292644101	WITHOUT_CLASSIFICATION	7.073558992237402E-8	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999292644101	WITHOUT_CLASSIFICATION	7.073558992237402E-8	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999995950188814	WITHOUT_CLASSIFICATION	4.049811186433484E-7	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9999992010815634	WITHOUT_CLASSIFICATION	7.989184366856533E-7	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999154296529709	WITHOUT_CLASSIFICATION	8.457034702917548E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998202891553017	WITHOUT_CLASSIFICATION	1.7971084469826267E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998202891553017	WITHOUT_CLASSIFICATION	1.7971084469826267E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998202891553017	WITHOUT_CLASSIFICATION	1.7971084469826267E-4	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.999999991602303	WITHOUT_CLASSIFICATION	8.397696980286904E-9	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999992450981091	WITHOUT_CLASSIFICATION	7.549018909459551E-7	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999992450981091	WITHOUT_CLASSIFICATION	7.549018909459551E-7	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999996140903221	WITHOUT_CLASSIFICATION	3.8590967791587977E-7	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999992719297426	WITHOUT_CLASSIFICATION	7.280702574480698E-7	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999992719297426	WITHOUT_CLASSIFICATION	7.280702574480698E-7	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.987492076525788	IMPLEMENTATION	0.012507923474212047	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.5958008405210011	IMPLEMENTATION	0.40419915947899887	WITHOUT_CLASSIFICATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999992213344164	WITHOUT_CLASSIFICATION	7.786655835112802E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999778245351	WITHOUT_CLASSIFICATION	2.2175464908242434E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999778245351	WITHOUT_CLASSIFICATION	2.2175464908242434E-8	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999910321296811	WITHOUT_CLASSIFICATION	8.967870318788812E-6	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999999999072556	WITHOUT_CLASSIFICATION	9.274431416323038E-11	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999999281111832	WITHOUT_CLASSIFICATION	7.188881674033828E-8	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999991869153235	WITHOUT_CLASSIFICATION	8.13084676445181E-7	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999999113219304	WITHOUT_CLASSIFICATION	8.867806965290787E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999778245351	WITHOUT_CLASSIFICATION	2.2175464908242434E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999778245351	WITHOUT_CLASSIFICATION	2.2175464908242434E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999778245351	WITHOUT_CLASSIFICATION	2.2175464908242434E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999778245351	WITHOUT_CLASSIFICATION	2.2175464908242434E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999778245351	WITHOUT_CLASSIFICATION	2.2175464908242434E-8	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.99999920980876	WITHOUT_CLASSIFICATION	7.90191240138111E-7	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999941724450427	WITHOUT_CLASSIFICATION	5.827554957305588E-6	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999996215089	WITHOUT_CLASSIFICATION	3.7849117527812063E-10	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999998095839656	WITHOUT_CLASSIFICATION	1.9041603437403847E-7	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.999999988926986	WITHOUT_CLASSIFICATION	1.1073013969496764E-8	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9968207901189828	WITHOUT_CLASSIFICATION	0.0031792098810171556	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.999999999120638	WITHOUT_CLASSIFICATION	8.793621176726585E-10	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999999809829346	WITHOUT_CLASSIFICATION	1.9017065379226982E-8	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999998707624124	WITHOUT_CLASSIFICATION	1.2923758766373506E-7	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.999999932157906	WITHOUT_CLASSIFICATION	6.784209404362056E-8	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999770082647	WITHOUT_CLASSIFICATION	2.2991735219334487E-8	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999998243793425	WITHOUT_CLASSIFICATION	1.7562065753966458E-7	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999999790538743	WITHOUT_CLASSIFICATION	2.0946125691325757E-8	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999966733352132	WITHOUT_CLASSIFICATION	3.326664786867466E-6	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999986857554238	WITHOUT_CLASSIFICATION	1.3142445761155916E-6	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9822149420700383	WITHOUT_CLASSIFICATION	0.017785057929961687	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999997810171125	WITHOUT_CLASSIFICATION	2.1898288760934167E-7	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999958240978	WITHOUT_CLASSIFICATION	4.175902160967884E-9	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999999262992184	WITHOUT_CLASSIFICATION	7.370078160358829E-8	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999978607181	WITHOUT_CLASSIFICATION	2.1392819163249407E-9	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999999185973519	WITHOUT_CLASSIFICATION	8.140264808221898E-8	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999999973420698	WITHOUT_CLASSIFICATION	2.657930272573893E-9	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999944973283307	WITHOUT_CLASSIFICATION	5.502671669321399E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999999239250327	WITHOUT_CLASSIFICATION	7.607496728991302E-8	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999999239250327	WITHOUT_CLASSIFICATION	7.607496728991302E-8	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999999239250327	WITHOUT_CLASSIFICATION	7.607496728991302E-8	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999999239250327	WITHOUT_CLASSIFICATION	7.607496728991302E-8	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999997844032078	WITHOUT_CLASSIFICATION	2.1559679214556418E-7	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999835047940829	WITHOUT_CLASSIFICATION	1.6495205917035E-5	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999998637427259	WITHOUT_CLASSIFICATION	1.362572741410857E-7	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999998637427259	WITHOUT_CLASSIFICATION	1.362572741410857E-7	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999972876431	WITHOUT_CLASSIFICATION	2.7123568180012593E-9	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999933553837	WITHOUT_CLASSIFICATION	6.644616253749815E-9	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999893452017	WITHOUT_CLASSIFICATION	1.0654798251629269E-8	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999993948081	WITHOUT_CLASSIFICATION	6.051919492295506E-10	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999999895942555	WITHOUT_CLASSIFICATION	1.0405744491481916E-8	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999924582233148	WITHOUT_CLASSIFICATION	7.541776685157789E-6	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999987591386289	WITHOUT_CLASSIFICATION	1.2408613710574301E-6	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.999999754624892	WITHOUT_CLASSIFICATION	2.4537510801727585E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.999999754624892	WITHOUT_CLASSIFICATION	2.4537510801727585E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.999999754624892	WITHOUT_CLASSIFICATION	2.4537510801727585E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.999999754624892	WITHOUT_CLASSIFICATION	2.4537510801727585E-7	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999914730714	WITHOUT_CLASSIFICATION	8.526928581580395E-9	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999999760179	WITHOUT_CLASSIFICATION	2.398215532869412E-11	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999999760179	WITHOUT_CLASSIFICATION	2.398215532869412E-11	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999999760179	WITHOUT_CLASSIFICATION	2.398215532869412E-11	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999998541876807	WITHOUT_CLASSIFICATION	1.4581231925023074E-7	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999999953561898	WITHOUT_CLASSIFICATION	4.64381024030219E-9	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999566830980172	WITHOUT_CLASSIFICATION	4.331690198266541E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5478961305802676	WITHOUT_CLASSIFICATION	0.4521038694197323	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5478961305802676	WITHOUT_CLASSIFICATION	0.4521038694197323	IMPLEMENTATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999887508306	WITHOUT_CLASSIFICATION	1.1249169257839099E-8	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999923449067489	WITHOUT_CLASSIFICATION	7.655093251072837E-6	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999998928178746	WITHOUT_CLASSIFICATION	1.0718212531077793E-7	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999998928178746	WITHOUT_CLASSIFICATION	1.0718212531077793E-7	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999999004261664	WITHOUT_CLASSIFICATION	9.957383367781646E-8	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999999004261664	WITHOUT_CLASSIFICATION	9.957383367781646E-8	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999999960357271	WITHOUT_CLASSIFICATION	3.964272949087115E-9	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999908541806614	WITHOUT_CLASSIFICATION	9.145819338620972E-6	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999999956887035	WITHOUT_CLASSIFICATION	4.311296490502319E-9	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999995597120906	WITHOUT_CLASSIFICATION	4.402879092858085E-7	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999003249106	WITHOUT_CLASSIFICATION	9.967508944413469E-8	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999997618497429	WITHOUT_CLASSIFICATION	2.381502571787989E-7	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999984368754	WITHOUT_CLASSIFICATION	1.5631246557686502E-9	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999999968670004	WITHOUT_CLASSIFICATION	3.132999654632964E-9	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999999991862344	WITHOUT_CLASSIFICATION	8.137656854826303E-10	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999998966580481	WITHOUT_CLASSIFICATION	1.0334195186950045E-7	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999998966580481	WITHOUT_CLASSIFICATION	1.0334195186950045E-7	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999996356000866	WITHOUT_CLASSIFICATION	3.643999133042451E-7	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999996356000866	WITHOUT_CLASSIFICATION	3.643999133042451E-7	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999982329283579	WITHOUT_CLASSIFICATION	1.767071642149202E-6	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999998942837371	WITHOUT_CLASSIFICATION	1.0571626287978131E-7	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999986442510843	WITHOUT_CLASSIFICATION	1.3557489156196443E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999999244683258	WITHOUT_CLASSIFICATION	7.553167421551766E-8	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999999244683258	WITHOUT_CLASSIFICATION	7.553167421551766E-8	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999999244683258	WITHOUT_CLASSIFICATION	7.553167421551766E-8	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9999993579481966	WITHOUT_CLASSIFICATION	6.42051803474696E-7	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9999996413635072	WITHOUT_CLASSIFICATION	3.586364927886915E-7	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9999995114143266	WITHOUT_CLASSIFICATION	4.88585673427749E-7	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9999998914686229	WITHOUT_CLASSIFICATION	1.085313771190081E-7	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9999996994198188	WITHOUT_CLASSIFICATION	3.0058018121536684E-7	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999997505258469	WITHOUT_CLASSIFICATION	2.4947415309564235E-7	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9999989275772808	WITHOUT_CLASSIFICATION	1.0724227192648046E-6	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9999989183750846	WITHOUT_CLASSIFICATION	1.0816249153813901E-6	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9998161435996846	WITHOUT_CLASSIFICATION	1.8385640031526418E-4	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999966098672808	WITHOUT_CLASSIFICATION	3.3901327193458005E-6	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999896679946647	WITHOUT_CLASSIFICATION	1.0332005335314457E-5	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999997485821174	WITHOUT_CLASSIFICATION	2.514178826675844E-7	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999999993902616	WITHOUT_CLASSIFICATION	6.097383747960913E-10	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5478961305802676	WITHOUT_CLASSIFICATION	0.4521038694197323	IMPLEMENTATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999998001451416	WITHOUT_CLASSIFICATION	1.9985485851361452E-7	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999985626829598	WITHOUT_CLASSIFICATION	1.4373170402157702E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999999988868213	WITHOUT_CLASSIFICATION	1.1131787113323162E-8	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999977598636778	WITHOUT_CLASSIFICATION	2.240136322243453E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999977598636778	WITHOUT_CLASSIFICATION	2.240136322243453E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999977598636778	WITHOUT_CLASSIFICATION	2.240136322243453E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999977598636778	WITHOUT_CLASSIFICATION	2.240136322243453E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999977598636778	WITHOUT_CLASSIFICATION	2.240136322243453E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999987411409443	WITHOUT_CLASSIFICATION	1.2588590557168122E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999977598636778	WITHOUT_CLASSIFICATION	2.240136322243453E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999977598636778	WITHOUT_CLASSIFICATION	2.240136322243453E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999977598636778	WITHOUT_CLASSIFICATION	2.240136322243453E-6	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999986550582572	WITHOUT_CLASSIFICATION	1.3449417427586345E-6	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999283552535081	WITHOUT_CLASSIFICATION	7.164474649185803E-5	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999990787705324	WITHOUT_CLASSIFICATION	9.212294677188494E-7	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999999871470967	WITHOUT_CLASSIFICATION	1.285290335272933E-8	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999999848966995	WITHOUT_CLASSIFICATION	1.5103300559133724E-8	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999976924860905	WITHOUT_CLASSIFICATION	2.307513909443222E-6	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999999862094574	WITHOUT_CLASSIFICATION	1.3790542682325563E-8	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9999998651775154	WITHOUT_CLASSIFICATION	1.348224846161505E-7	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999992467643004	WITHOUT_CLASSIFICATION	7.532356995951671E-7	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999992467643004	WITHOUT_CLASSIFICATION	7.532356995951671E-7	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9999996850528525	WITHOUT_CLASSIFICATION	3.149471474734902E-7	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9999995252443001	WITHOUT_CLASSIFICATION	4.7475569991617817E-7	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999985907849033	WITHOUT_CLASSIFICATION	1.4092150966168834E-6	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9999997772895586	WITHOUT_CLASSIFICATION	2.2271044148443019E-7	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999998694055048	WITHOUT_CLASSIFICATION	1.3059449520521976E-7	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9999996668015289	WITHOUT_CLASSIFICATION	3.3319847111118E-7	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.999999595790697	WITHOUT_CLASSIFICATION	4.0420930298144077E-7	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999995581226225	WITHOUT_CLASSIFICATION	4.418773774031497E-7	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999996221578736	WITHOUT_CLASSIFICATION	3.7784212635403763E-7	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.999999742160946	WITHOUT_CLASSIFICATION	2.578390539482384E-7	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9999996220394513	WITHOUT_CLASSIFICATION	3.779605486618255E-7	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9999996274030527	WITHOUT_CLASSIFICATION	3.7259694722142037E-7	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999994874981325	WITHOUT_CLASSIFICATION	5.125018674180632E-7	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999994685360182	WITHOUT_CLASSIFICATION	5.314639818336653E-7	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9999994059875743	WITHOUT_CLASSIFICATION	5.940124257135615E-7	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9999993638553667	WITHOUT_CLASSIFICATION	6.361446333337728E-7	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.999999369253605	WITHOUT_CLASSIFICATION	6.30746394948881E-7	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9999988502011206	WITHOUT_CLASSIFICATION	1.14979887952998E-6	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9999996345907349	WITHOUT_CLASSIFICATION	3.654092650797894E-7	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.9999998234832701	WITHOUT_CLASSIFICATION	1.7651672988247883E-7	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.999999832490541	WITHOUT_CLASSIFICATION	1.675094589356127E-7	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999998285127462	WITHOUT_CLASSIFICATION	1.7148725378603392E-7	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9999985532992435	WITHOUT_CLASSIFICATION	1.4467007565550086E-6	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9999994764105564	WITHOUT_CLASSIFICATION	5.23589443588892E-7	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9999995906245195	WITHOUT_CLASSIFICATION	4.093754805320545E-7	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999994494174557	WITHOUT_CLASSIFICATION	5.50582544292041E-7	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9999995127895916	WITHOUT_CLASSIFICATION	4.872104083489295E-7	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9999993811776599	WITHOUT_CLASSIFICATION	6.188223402276447E-7	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999995233691451	WITHOUT_CLASSIFICATION	4.7663085487201044E-7	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999996693314175	WITHOUT_CLASSIFICATION	3.306685824689309E-7	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999996603682114	WITHOUT_CLASSIFICATION	3.396317885878384E-7	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999992289613765	WITHOUT_CLASSIFICATION	7.710386236181638E-7	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9999991927861765	WITHOUT_CLASSIFICATION	8.072138234497386E-7	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.999999016045631	WITHOUT_CLASSIFICATION	9.839543689586046E-7	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9999995049525165	WITHOUT_CLASSIFICATION	4.950474835431948E-7	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.999999771491341	WITHOUT_CLASSIFICATION	2.2850865910617993E-7	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9999992634911444	WITHOUT_CLASSIFICATION	7.365088556197485E-7	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999986789715504	WITHOUT_CLASSIFICATION	1.321028449694488E-6	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.99999922277974	WITHOUT_CLASSIFICATION	7.772202600181742E-7	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9999994031797537	WITHOUT_CLASSIFICATION	5.968202462897551E-7	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9999995876434616	WITHOUT_CLASSIFICATION	4.1235653833824245E-7	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999997271314534	WITHOUT_CLASSIFICATION	2.728685466239704E-7	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9999993828057528	WITHOUT_CLASSIFICATION	6.171942472016268E-7	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9999990212307931	WITHOUT_CLASSIFICATION	9.78769206957618E-7	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9999988439856465	WITHOUT_CLASSIFICATION	1.1560143533668708E-6	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999985834123155	WITHOUT_CLASSIFICATION	1.416587684526866E-6	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999990330960081	WITHOUT_CLASSIFICATION	9.669039918311453E-7	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9999992763598919	WITHOUT_CLASSIFICATION	7.23640108078966E-7	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9999995230844513	WITHOUT_CLASSIFICATION	4.769155487879302E-7	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999992023907343	WITHOUT_CLASSIFICATION	7.976092657391539E-7	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9999994437512705	WITHOUT_CLASSIFICATION	5.562487294969928E-7	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9999995767330785	WITHOUT_CLASSIFICATION	4.2326692155161724E-7	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.999999468804579	WITHOUT_CLASSIFICATION	5.311954209715398E-7	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999993325416822	WITHOUT_CLASSIFICATION	6.674583178234472E-7	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999993325416822	WITHOUT_CLASSIFICATION	6.674583178234472E-7	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.999998909927054	WITHOUT_CLASSIFICATION	1.0900729460273918E-6	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9999996555912614	WITHOUT_CLASSIFICATION	3.4440873859969104E-7	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9999991565272112	WITHOUT_CLASSIFICATION	8.434727888125956E-7	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.999999574749988	WITHOUT_CLASSIFICATION	4.2525001196432055E-7	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9999972963158315	WITHOUT_CLASSIFICATION	2.703684168487253E-6	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999993931319938	WITHOUT_CLASSIFICATION	6.068680061493954E-7	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999991229957069	WITHOUT_CLASSIFICATION	8.770042931691775E-7	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9999991976567218	WITHOUT_CLASSIFICATION	8.023432781958139E-7	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999996198617095	WITHOUT_CLASSIFICATION	3.801382904638623E-7	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9999989054882256	WITHOUT_CLASSIFICATION	1.0945117743414525E-6	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999895753707869	WITHOUT_CLASSIFICATION	1.0424629213139163E-5	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999895753707869	WITHOUT_CLASSIFICATION	1.0424629213139163E-5	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999993145208501	WITHOUT_CLASSIFICATION	6.854791497683792E-7	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999938486681081	WITHOUT_CLASSIFICATION	6.151331891881343E-6	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999599660230399	WITHOUT_CLASSIFICATION	4.003397696001961E-5	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999999516007	WITHOUT_CLASSIFICATION	4.8399302648388715E-11	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999996866865342	WITHOUT_CLASSIFICATION	3.13313465890026E-7	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999996866865342	WITHOUT_CLASSIFICATION	3.13313465890026E-7	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999996866865342	WITHOUT_CLASSIFICATION	3.13313465890026E-7	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999996866865342	WITHOUT_CLASSIFICATION	3.13313465890026E-7	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9886056909326965	WITHOUT_CLASSIFICATION	0.01139430906730346	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999999951886562	WITHOUT_CLASSIFICATION	4.8113438793354315E-9	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.999999384334722	WITHOUT_CLASSIFICATION	6.156652779845426E-7	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.999999602433469	WITHOUT_CLASSIFICATION	3.975665309645962E-7	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.9999989100132728	WITHOUT_CLASSIFICATION	1.0899867271957165E-6	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9999994393695131	WITHOUT_CLASSIFICATION	5.606304870357504E-7	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9999989918971129	WITHOUT_CLASSIFICATION	1.0081028870893081E-6	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9999998504163985	WITHOUT_CLASSIFICATION	1.4958360151934227E-7	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9999998356858057	WITHOUT_CLASSIFICATION	1.6431419424021483E-7	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9999993605075462	WITHOUT_CLASSIFICATION	6.394924537264414E-7	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9999995777642792	WITHOUT_CLASSIFICATION	4.2223572076246707E-7	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9999997925073592	WITHOUT_CLASSIFICATION	2.074926409603007E-7	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9999991986443927	WITHOUT_CLASSIFICATION	8.013556073591783E-7	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9999996030920092	WITHOUT_CLASSIFICATION	3.969079907957704E-7	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.999999498595902	WITHOUT_CLASSIFICATION	5.014040979921906E-7	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9999998239890986	WITHOUT_CLASSIFICATION	1.7601090148845477E-7	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9999995956663627	WITHOUT_CLASSIFICATION	4.043336373113442E-7	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9999990792424208	WITHOUT_CLASSIFICATION	9.207575791204176E-7	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9999996568537092	WITHOUT_CLASSIFICATION	3.431462909053629E-7	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9999995002707501	WITHOUT_CLASSIFICATION	4.997292498558759E-7	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9999997876920803	WITHOUT_CLASSIFICATION	2.1230791978921032E-7	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9999997232986615	WITHOUT_CLASSIFICATION	2.7670133844844144E-7	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9999996730247489	WITHOUT_CLASSIFICATION	3.269752510718337E-7	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9999994645414058	WITHOUT_CLASSIFICATION	5.354585941622668E-7	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9999997891040353	WITHOUT_CLASSIFICATION	2.108959645953321E-7	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9999995656115207	WITHOUT_CLASSIFICATION	4.3438847930219865E-7	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9999998411947252	WITHOUT_CLASSIFICATION	1.588052748141531E-7	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9999987812069523	WITHOUT_CLASSIFICATION	1.2187930477161337E-6	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9999995170411142	WITHOUT_CLASSIFICATION	4.829588856601042E-7	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.999999221310225	WITHOUT_CLASSIFICATION	7.786897750962981E-7	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.999998794773116	WITHOUT_CLASSIFICATION	1.205226883899793E-6	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9999995922163918	WITHOUT_CLASSIFICATION	4.0778360826051004E-7	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9999987460412803	WITHOUT_CLASSIFICATION	1.2539587197186397E-6	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9999993792297113	WITHOUT_CLASSIFICATION	6.207702886998418E-7	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9999990535632289	WITHOUT_CLASSIFICATION	9.464367709591703E-7	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9999991755530449	WITHOUT_CLASSIFICATION	8.244469550782995E-7	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.999999102276107	WITHOUT_CLASSIFICATION	8.977238930385752E-7	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9999990292602852	WITHOUT_CLASSIFICATION	9.707397147553191E-7	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9999995993141827	WITHOUT_CLASSIFICATION	4.006858173217212E-7	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9999991336888082	WITHOUT_CLASSIFICATION	8.6631119177723E-7	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.999999672577814	WITHOUT_CLASSIFICATION	3.274221861010267E-7	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9999990701958087	WITHOUT_CLASSIFICATION	9.298041913417841E-7	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9999990810492596	WITHOUT_CLASSIFICATION	9.189507403890259E-7	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9999992213355847	WITHOUT_CLASSIFICATION	7.786644152767461E-7	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9999987345862625	WITHOUT_CLASSIFICATION	1.2654137374327628E-6	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9999979765766985	WITHOUT_CLASSIFICATION	2.023423301541706E-6	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9999990715466514	WITHOUT_CLASSIFICATION	9.284533485274542E-7	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9999987594642403	WITHOUT_CLASSIFICATION	1.2405357596702375E-6	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9999991841235106	WITHOUT_CLASSIFICATION	8.158764894834976E-7	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9999994287293004	WITHOUT_CLASSIFICATION	5.712706996681257E-7	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9999990887435825	WITHOUT_CLASSIFICATION	9.112564175812132E-7	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.999999148854402	WITHOUT_CLASSIFICATION	8.511455978873624E-7	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9999991862671356	WITHOUT_CLASSIFICATION	8.137328644476843E-7	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9999985784033192	WITHOUT_CLASSIFICATION	1.4215966808471883E-6	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9999981358386372	WITHOUT_CLASSIFICATION	1.864161362784222E-6	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9999991874345456	WITHOUT_CLASSIFICATION	8.125654544795544E-7	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9999994824989357	WITHOUT_CLASSIFICATION	5.175010643357781E-7	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9999994762282275	WITHOUT_CLASSIFICATION	5.237717724717411E-7	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9999997286985536	WITHOUT_CLASSIFICATION	2.713014463492119E-7	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999999867882702	WITHOUT_CLASSIFICATION	1.3211729687292555E-8	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999995943293059	WITHOUT_CLASSIFICATION	4.0567069414969315E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999593865646	WITHOUT_CLASSIFICATION	4.061343540006666E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999593865646	WITHOUT_CLASSIFICATION	4.061343540006666E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999593865646	WITHOUT_CLASSIFICATION	4.061343540006666E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999593865646	WITHOUT_CLASSIFICATION	4.061343540006666E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999593865646	WITHOUT_CLASSIFICATION	4.061343540006666E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999593865646	WITHOUT_CLASSIFICATION	4.061343540006666E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999593865646	WITHOUT_CLASSIFICATION	4.061343540006666E-8	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999978861737394	WITHOUT_CLASSIFICATION	2.113826260633133E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999978861737394	WITHOUT_CLASSIFICATION	2.113826260633133E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999978861737394	WITHOUT_CLASSIFICATION	2.113826260633133E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999978861737394	WITHOUT_CLASSIFICATION	2.113826260633133E-6	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999987725242501	WITHOUT_CLASSIFICATION	1.2274757500295892E-6	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999987725242501	WITHOUT_CLASSIFICATION	1.2274757500295892E-6	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999999983554957	WITHOUT_CLASSIFICATION	1.6445043165307434E-9	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999949292078	WITHOUT_CLASSIFICATION	5.070792174940387E-9	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999949292078	WITHOUT_CLASSIFICATION	5.070792174940387E-9	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999999424493302	WITHOUT_CLASSIFICATION	5.755066987521428E-8	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.999997719117041	WITHOUT_CLASSIFICATION	2.2808829589599897E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999974952113	WITHOUT_CLASSIFICATION	2.5047886975913196E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999974952113	WITHOUT_CLASSIFICATION	2.5047886975913196E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999974952113	WITHOUT_CLASSIFICATION	2.5047886975913196E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999974952113	WITHOUT_CLASSIFICATION	2.5047886975913196E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999974952113	WITHOUT_CLASSIFICATION	2.5047886975913196E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999974952113	WITHOUT_CLASSIFICATION	2.5047886975913196E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999974952113	WITHOUT_CLASSIFICATION	2.5047886975913196E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999830181752	WITHOUT_CLASSIFICATION	1.6981824829031068E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998699309208	WITHOUT_CLASSIFICATION	1.3006907927773058E-7	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999565075044632	WITHOUT_CLASSIFICATION	4.3492495536772196E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999565075044632	WITHOUT_CLASSIFICATION	4.3492495536772196E-5	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999897168468	WITHOUT_CLASSIFICATION	1.0283153251192955E-8	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999993595338502	WITHOUT_CLASSIFICATION	6.404661498181288E-7	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999993595338502	WITHOUT_CLASSIFICATION	6.404661498181288E-7	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999957594431593	WITHOUT_CLASSIFICATION	4.240556840690938E-6	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.8986537036786262	IMPLEMENTATION	0.1013462963213738	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999972469478094	WITHOUT_CLASSIFICATION	2.753052190527243E-6	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.999888129542927	WITHOUT_CLASSIFICATION	1.1187045707293236E-4	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999999896932245	WITHOUT_CLASSIFICATION	1.0306775509641202E-8	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999989492577027	WITHOUT_CLASSIFICATION	1.0507422973121674E-6	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999879971099762	WITHOUT_CLASSIFICATION	1.200289002373045E-5	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999999577989194	WITHOUT_CLASSIFICATION	4.22010807514424E-8	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999959133296	WITHOUT_CLASSIFICATION	4.086670403449022E-9	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999984113212035	WITHOUT_CLASSIFICATION	1.5886787965038737E-6	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999999939891068	WITHOUT_CLASSIFICATION	6.010893147517E-9	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999912143278625	WITHOUT_CLASSIFICATION	8.785672137449783E-6	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999999983085	WITHOUT_CLASSIFICATION	1.6915914633891694E-12	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9998740591911033	WITHOUT_CLASSIFICATION	1.2594080889681097E-4	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999219948142148	WITHOUT_CLASSIFICATION	7.800518578516328E-5	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9996089965103251	WITHOUT_CLASSIFICATION	3.9100348967490046E-4	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999974872167	WITHOUT_CLASSIFICATION	2.5127833021111067E-9	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998288353184623	WITHOUT_CLASSIFICATION	1.71164681537618E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999913927776801	WITHOUT_CLASSIFICATION	8.607222319910473E-6	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999913927776801	WITHOUT_CLASSIFICATION	8.607222319910473E-6	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999961052774174	WITHOUT_CLASSIFICATION	3.894722582586675E-6	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.99999994039948	WITHOUT_CLASSIFICATION	5.9600520064093836E-8	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999997155056461	WITHOUT_CLASSIFICATION	2.8449435388978957E-7	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999980006777324	WITHOUT_CLASSIFICATION	1.9993222676106973E-6	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999865531871027	WITHOUT_CLASSIFICATION	1.3446812897420617E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999865531871027	WITHOUT_CLASSIFICATION	1.3446812897420617E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999865531871027	WITHOUT_CLASSIFICATION	1.3446812897420617E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9998103801244298	WITHOUT_CLASSIFICATION	1.896198755701118E-4	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999924554067526	WITHOUT_CLASSIFICATION	7.5445932473634105E-6	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9982826153362881	WITHOUT_CLASSIFICATION	0.001717384663711854	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999900559170736	WITHOUT_CLASSIFICATION	9.944082926488162E-6	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999999999641996	WITHOUT_CLASSIFICATION	3.580031580777201E-11	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999993333267323	WITHOUT_CLASSIFICATION	6.66673267612995E-7	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999994159897643	WITHOUT_CLASSIFICATION	5.840102356325844E-7	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999994927821	WITHOUT_CLASSIFICATION	5.072179902889932E-10	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9997632298045905	WITHOUT_CLASSIFICATION	2.3677019540940334E-4	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999996264369112	WITHOUT_CLASSIFICATION	3.735630888346478E-7	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9999993771455294	WITHOUT_CLASSIFICATION	6.228544704576613E-7	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999950165240419	WITHOUT_CLASSIFICATION	4.983475958067925E-6	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.6509614062770296	WITHOUT_CLASSIFICATION	0.34903859372297036	IMPLEMENTATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999990779111915	WITHOUT_CLASSIFICATION	9.220888084425246E-7	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999999999061792	WITHOUT_CLASSIFICATION	9.382076428222192E-11	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999999999971788	WITHOUT_CLASSIFICATION	2.8211333921142167E-12	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999997938313082	WITHOUT_CLASSIFICATION	2.0616869188243563E-7	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999989194973999	WITHOUT_CLASSIFICATION	1.0805026000058623E-6	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999837960258079	WITHOUT_CLASSIFICATION	1.62039741920621E-5	IMPLEMENTATION
