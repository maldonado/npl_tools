// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.8543317489579514	WITHOUT_CLASSIFICATION	0.14566825104204853	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.9361863427672096	IMPLEMENTATION	0.06381365723279049	WITHOUT_CLASSIFICATION
// TODO: Someday, enable.	IMPLEMENTATION	0.746488199690054	WITHOUT_CLASSIFICATION	0.25351180030994597	IMPLEMENTATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.8482276881546342	WITHOUT_CLASSIFICATION	0.15177231184536583	IMPLEMENTATION
// TODO: non-strict option	IMPLEMENTATION	0.9686803242725877	WITHOUT_CLASSIFICATION	0.03131967572741228	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.6171015497378245	IMPLEMENTATION	0.38289845026217556	WITHOUT_CLASSIFICATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.998807630700124	WITHOUT_CLASSIFICATION	0.0011923692998760814	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.758855783720643	WITHOUT_CLASSIFICATION	0.2411442162793571	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.758855783720643	WITHOUT_CLASSIFICATION	0.2411442162793571	IMPLEMENTATION
// TODO: pass this in?	IMPLEMENTATION	0.5124644725464388	WITHOUT_CLASSIFICATION	0.48753552745356127	IMPLEMENTATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9999903535475818	WITHOUT_CLASSIFICATION	9.646452418221883E-6	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.9883850885905264	IMPLEMENTATION	0.011614911409473632	WITHOUT_CLASSIFICATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.9156652971301273	IMPLEMENTATION	0.08433470286987266	WITHOUT_CLASSIFICATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.9928499673190503	WITHOUT_CLASSIFICATION	0.007150032680949715	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.9967772790329199	WITHOUT_CLASSIFICATION	0.003222720967079951	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.992164188323413	WITHOUT_CLASSIFICATION	0.007835811676587088	IMPLEMENTATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9898849775809085	WITHOUT_CLASSIFICATION	0.010115022419091377	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.6866315084664996	IMPLEMENTATION	0.31336849153350044	WITHOUT_CLASSIFICATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.9278385192885045	WITHOUT_CLASSIFICATION	0.07216148071149554	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.9590532614449887	WITHOUT_CLASSIFICATION	0.040946738555011394	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.9908219188462706	IMPLEMENTATION	0.009178081153729443	WITHOUT_CLASSIFICATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.9987440953207736	WITHOUT_CLASSIFICATION	0.0012559046792264689	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.6382890295135826	IMPLEMENTATION	0.36171097048641754	WITHOUT_CLASSIFICATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.7416404122897677	WITHOUT_CLASSIFICATION	0.25835958771023215	IMPLEMENTATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.7828483522777625	IMPLEMENTATION	0.2171516477222375	WITHOUT_CLASSIFICATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.893898594711737	IMPLEMENTATION	0.1061014052882629	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.6374572360590475	IMPLEMENTATION	0.36254276394095253	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9840903221084841	IMPLEMENTATION	0.015909677891515955	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.6374572360590475	IMPLEMENTATION	0.36254276394095253	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9840903221084841	IMPLEMENTATION	0.015909677891515955	WITHOUT_CLASSIFICATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.7161287053630145	WITHOUT_CLASSIFICATION	0.28387129463698557	IMPLEMENTATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.9643510687355445	WITHOUT_CLASSIFICATION	0.035648931264455425	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.987982224379025	IMPLEMENTATION	0.012017775620974998	WITHOUT_CLASSIFICATION
// TODO: make threadsafe	IMPLEMENTATION	0.8477451184284466	IMPLEMENTATION	0.15225488157155342	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9583972812568831	WITHOUT_CLASSIFICATION	0.04160271874311696	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9583972812568831	WITHOUT_CLASSIFICATION	0.04160271874311696	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.9999202893084425	WITHOUT_CLASSIFICATION	7.971069155748109E-5	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.9864906100056208	WITHOUT_CLASSIFICATION	0.013509389994379138	IMPLEMENTATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.9620899754612733	WITHOUT_CLASSIFICATION	0.03791002453872674	IMPLEMENTATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.9888207758181099	WITHOUT_CLASSIFICATION	0.011179224181890166	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9727035700397114	IMPLEMENTATION	0.027296429960288575	WITHOUT_CLASSIFICATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.9513583279268073	IMPLEMENTATION	0.04864167207319269	WITHOUT_CLASSIFICATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.9938949367102409	IMPLEMENTATION	0.006105063289759152	WITHOUT_CLASSIFICATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.9998029548569871	WITHOUT_CLASSIFICATION	1.9704514301293761E-4	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.8880548254589506	WITHOUT_CLASSIFICATION	0.11194517454104948	IMPLEMENTATION
// TODO: add trace call?	IMPLEMENTATION	0.6332109601977077	IMPLEMENTATION	0.3667890398022922	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9999752085170946	WITHOUT_CLASSIFICATION	2.4791482905357094E-5	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.999938755609802	WITHOUT_CLASSIFICATION	6.124439019791976E-5	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.9991500909272585	WITHOUT_CLASSIFICATION	8.499090727414882E-4	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.9100027176948008	WITHOUT_CLASSIFICATION	0.08999728230519925	IMPLEMENTATION
// FIXME: missing arity check	IMPLEMENTATION	0.9999752085170946	WITHOUT_CLASSIFICATION	2.4791482905357094E-5	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.999899103761028	WITHOUT_CLASSIFICATION	1.0089623897199117E-4	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.9982743751336791	WITHOUT_CLASSIFICATION	0.0017256248663208749	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.9844694011775735	IMPLEMENTATION	0.015530598822426519	WITHOUT_CLASSIFICATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.888741530240261	WITHOUT_CLASSIFICATION	0.11125846975973898	IMPLEMENTATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.9999760615850669	WITHOUT_CLASSIFICATION	2.3938414933026916E-5	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.9999198417106117	WITHOUT_CLASSIFICATION	8.015828938840425E-5	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.9855820251888694	WITHOUT_CLASSIFICATION	0.014417974811130538	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9970717445965968	WITHOUT_CLASSIFICATION	0.0029282554034031393	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9984971281456924	WITHOUT_CLASSIFICATION	0.0015028718543076008	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.9996123931696526	WITHOUT_CLASSIFICATION	3.876068303474393E-4	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.7226271190240953	IMPLEMENTATION	0.2773728809759046	WITHOUT_CLASSIFICATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.7226271190240953	IMPLEMENTATION	0.2773728809759046	WITHOUT_CLASSIFICATION
// TODO: validate port as numeric	IMPLEMENTATION	0.9942761116703817	WITHOUT_CLASSIFICATION	0.00572388832961828	IMPLEMENTATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9999945174267463	IMPLEMENTATION	5.4825732537480174E-6	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.9732445947351178	WITHOUT_CLASSIFICATION	0.02675540526488218	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.7796656122992437	WITHOUT_CLASSIFICATION	0.22033438770075622	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.7796656122992437	WITHOUT_CLASSIFICATION	0.22033438770075622	IMPLEMENTATION
// TODO: other reserved names?	IMPLEMENTATION	0.9905634021261076	IMPLEMENTATION	0.009436597873892437	WITHOUT_CLASSIFICATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.9141685399546055	IMPLEMENTATION	0.08583146004539449	WITHOUT_CLASSIFICATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.9692100183527642	IMPLEMENTATION	0.030789981647235724	WITHOUT_CLASSIFICATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.992595435806268	WITHOUT_CLASSIFICATION	0.0074045641937320736	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.7283961333759034	IMPLEMENTATION	0.27160386662409663	WITHOUT_CLASSIFICATION
// TODO: call ruby method	IMPLEMENTATION	0.7283961333759034	IMPLEMENTATION	0.27160386662409663	WITHOUT_CLASSIFICATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.9805966592494798	IMPLEMENTATION	0.01940334075052022	WITHOUT_CLASSIFICATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9971381063675383	WITHOUT_CLASSIFICATION	0.0028618936324616515	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.999998504377808	WITHOUT_CLASSIFICATION	1.4956221919514936E-6	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.92702902105762	IMPLEMENTATION	0.07297097894238003	WITHOUT_CLASSIFICATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.9911829079485606	IMPLEMENTATION	0.008817092051439442	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.6122889811363065	IMPLEMENTATION	0.3877110188636934	WITHOUT_CLASSIFICATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.7135893931176501	IMPLEMENTATION	0.2864106068823499	WITHOUT_CLASSIFICATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.93395554545248	WITHOUT_CLASSIFICATION	0.06604445454752003	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9975090563722853	WITHOUT_CLASSIFICATION	0.0024909436277147814	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9975090563722853	WITHOUT_CLASSIFICATION	0.0024909436277147814	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.9999941930908458	WITHOUT_CLASSIFICATION	5.806909154126173E-6	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.999985563619626	WITHOUT_CLASSIFICATION	1.443638037403572E-5	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9919744463645844	WITHOUT_CLASSIFICATION	0.008025553635415471	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9919744463645844	WITHOUT_CLASSIFICATION	0.008025553635415471	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.6889906318940744	WITHOUT_CLASSIFICATION	0.3110093681059256	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9988290297799228	WITHOUT_CLASSIFICATION	0.0011709702200771652	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9988290297799228	WITHOUT_CLASSIFICATION	0.0011709702200771652	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9988290297799228	WITHOUT_CLASSIFICATION	0.0011709702200771652	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.9489788395882338	IMPLEMENTATION	0.05102116041176614	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.9489788395882338	IMPLEMENTATION	0.05102116041176614	WITHOUT_CLASSIFICATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.881661943076966	IMPLEMENTATION	0.11833805692303392	WITHOUT_CLASSIFICATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9989311420220965	WITHOUT_CLASSIFICATION	0.00106885797790341	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.9998330458282173	WITHOUT_CLASSIFICATION	1.669541717827085E-4	IMPLEMENTATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9999438975910794	IMPLEMENTATION	5.610240892053041E-5	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9990332968299463	IMPLEMENTATION	9.667031700536948E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9990332968299463	IMPLEMENTATION	9.667031700536948E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9990332968299463	IMPLEMENTATION	9.667031700536948E-4	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9727035700397114	IMPLEMENTATION	0.027296429960288575	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9727035700397114	IMPLEMENTATION	0.027296429960288575	WITHOUT_CLASSIFICATION
// TODO: check for ascii string	IMPLEMENTATION	0.763647486264232	WITHOUT_CLASSIFICATION	0.23635251373576802	IMPLEMENTATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.9274301021900304	WITHOUT_CLASSIFICATION	0.07256989780996961	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9583972812568831	WITHOUT_CLASSIFICATION	0.04160271874311696	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9583972812568831	WITHOUT_CLASSIFICATION	0.04160271874311696	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.9042008443182618	IMPLEMENTATION	0.09579915568173816	WITHOUT_CLASSIFICATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.9635244092020748	WITHOUT_CLASSIFICATION	0.03647559079792526	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.992164188323413	WITHOUT_CLASSIFICATION	0.007835811676587088	IMPLEMENTATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9994648381273511	WITHOUT_CLASSIFICATION	5.351618726488472E-4	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.9992615352824568	IMPLEMENTATION	7.384647175432749E-4	WITHOUT_CLASSIFICATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.9923811430963279	IMPLEMENTATION	0.00761885690367217	WITHOUT_CLASSIFICATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.7795807048674341	WITHOUT_CLASSIFICATION	0.22041929513256595	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999685698466511	WITHOUT_CLASSIFICATION	3.143015334889402E-5	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.999996689244293	WITHOUT_CLASSIFICATION	3.310755707096181E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.999919547156375	WITHOUT_CLASSIFICATION	8.045284362498882E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.999919547156375	WITHOUT_CLASSIFICATION	8.045284362498882E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997678746945632	WITHOUT_CLASSIFICATION	2.321253054367074E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997678746945632	WITHOUT_CLASSIFICATION	2.321253054367074E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9993987535485396	WITHOUT_CLASSIFICATION	6.012464514603558E-4	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9995184312401474	WITHOUT_CLASSIFICATION	4.8156875985261695E-4	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9999980049500304	WITHOUT_CLASSIFICATION	1.99504996952748E-6	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999983708203406	WITHOUT_CLASSIFICATION	1.6291796593752873E-6	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997192553244932	WITHOUT_CLASSIFICATION	2.807446755067667E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997192553244932	WITHOUT_CLASSIFICATION	2.807446755067667E-4	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9999890918984822	WITHOUT_CLASSIFICATION	1.0908101517856668E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9995139972018261	WITHOUT_CLASSIFICATION	4.860027981739023E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9995139972018261	WITHOUT_CLASSIFICATION	4.860027981739023E-4	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9999975476926084	WITHOUT_CLASSIFICATION	2.452307391566643E-6	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999987282957306	WITHOUT_CLASSIFICATION	1.2717042694669915E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998104179340497	WITHOUT_CLASSIFICATION	1.895820659503507E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998104179340497	WITHOUT_CLASSIFICATION	1.895820659503507E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998104179340497	WITHOUT_CLASSIFICATION	1.895820659503507E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998104179340497	WITHOUT_CLASSIFICATION	1.895820659503507E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998104179340497	WITHOUT_CLASSIFICATION	1.895820659503507E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998104179340497	WITHOUT_CLASSIFICATION	1.895820659503507E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9998104179340497	WITHOUT_CLASSIFICATION	1.895820659503507E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996331407929323	WITHOUT_CLASSIFICATION	3.668592070676128E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996331407929323	WITHOUT_CLASSIFICATION	3.668592070676128E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996331407929323	WITHOUT_CLASSIFICATION	3.668592070676128E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996331407929323	WITHOUT_CLASSIFICATION	3.668592070676128E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996331407929323	WITHOUT_CLASSIFICATION	3.668592070676128E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996331407929323	WITHOUT_CLASSIFICATION	3.668592070676128E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996331407929323	WITHOUT_CLASSIFICATION	3.668592070676128E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9989501309073401	WITHOUT_CLASSIFICATION	0.0010498690926599105	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9989501309073401	WITHOUT_CLASSIFICATION	0.0010498690926599105	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9989501309073401	WITHOUT_CLASSIFICATION	0.0010498690926599105	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9989501309073401	WITHOUT_CLASSIFICATION	0.0010498690926599105	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9989501309073401	WITHOUT_CLASSIFICATION	0.0010498690926599105	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9989501309073401	WITHOUT_CLASSIFICATION	0.0010498690926599105	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9995563135103723	WITHOUT_CLASSIFICATION	4.436864896277364E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9995563135103723	WITHOUT_CLASSIFICATION	4.436864896277364E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9995563135103723	WITHOUT_CLASSIFICATION	4.436864896277364E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9995563135103723	WITHOUT_CLASSIFICATION	4.436864896277364E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9995563135103723	WITHOUT_CLASSIFICATION	4.436864896277364E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9995563135103723	WITHOUT_CLASSIFICATION	4.436864896277364E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9992320168403139	WITHOUT_CLASSIFICATION	7.679831596860392E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9992320168403139	WITHOUT_CLASSIFICATION	7.679831596860392E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9992320168403139	WITHOUT_CLASSIFICATION	7.679831596860392E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9992320168403139	WITHOUT_CLASSIFICATION	7.679831596860392E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9992320168403139	WITHOUT_CLASSIFICATION	7.679831596860392E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9992320168403139	WITHOUT_CLASSIFICATION	7.679831596860392E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9992320168403139	WITHOUT_CLASSIFICATION	7.679831596860392E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.99945557652088	WITHOUT_CLASSIFICATION	5.44423479120072E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.99945557652088	WITHOUT_CLASSIFICATION	5.44423479120072E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.99945557652088	WITHOUT_CLASSIFICATION	5.44423479120072E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.99945557652088	WITHOUT_CLASSIFICATION	5.44423479120072E-4	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999714586167088	WITHOUT_CLASSIFICATION	2.85413832912005E-5	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999714586167088	WITHOUT_CLASSIFICATION	2.85413832912005E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999225816969	WITHOUT_CLASSIFICATION	7.741830309496118E-7	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9999961017246707	WITHOUT_CLASSIFICATION	3.898275329287935E-6	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.999981813730709	WITHOUT_CLASSIFICATION	1.818626929087061E-5	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999993424465726	WITHOUT_CLASSIFICATION	6.575534272422209E-7	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9997597507745764	WITHOUT_CLASSIFICATION	2.4024922542371038E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999849424624179	WITHOUT_CLASSIFICATION	1.5057537582140527E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999849424624179	WITHOUT_CLASSIFICATION	1.5057537582140527E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999849424624179	WITHOUT_CLASSIFICATION	1.5057537582140527E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999849424624179	WITHOUT_CLASSIFICATION	1.5057537582140527E-5	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9995066243351766	WITHOUT_CLASSIFICATION	4.933756648233565E-4	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9997422448936084	WITHOUT_CLASSIFICATION	2.577551063915167E-4	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.99998137416933	WITHOUT_CLASSIFICATION	1.862583067008043E-5	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999943617960625	WITHOUT_CLASSIFICATION	5.638203937484323E-6	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9999880654545241	WITHOUT_CLASSIFICATION	1.193454547584722E-5	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999999671118416	WITHOUT_CLASSIFICATION	3.2888158510203063E-8	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999770582732241	WITHOUT_CLASSIFICATION	2.2941726775885434E-5	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999999187255824	WITHOUT_CLASSIFICATION	8.127441765930171E-8	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999838938026	WITHOUT_CLASSIFICATION	1.6106197398753494E-8	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999900865332699	WITHOUT_CLASSIFICATION	9.91346673010662E-6	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999890010858689	WITHOUT_CLASSIFICATION	1.0998914131205555E-5	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9996749085891925	WITHOUT_CLASSIFICATION	3.2509141080752435E-4	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9998696422371186	WITHOUT_CLASSIFICATION	1.303577628813304E-4	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999887545621453	WITHOUT_CLASSIFICATION	1.1245437854645273E-5	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999992665028886	WITHOUT_CLASSIFICATION	7.334971113746813E-7	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999975494655401	WITHOUT_CLASSIFICATION	2.450534459889212E-6	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9939975116171388	WITHOUT_CLASSIFICATION	0.006002488382861159	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999849424624179	WITHOUT_CLASSIFICATION	1.5057537582140527E-5	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999764184681068	WITHOUT_CLASSIFICATION	2.358153189322315E-5	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999994646579535	WITHOUT_CLASSIFICATION	5.353420464201823E-7	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.99999062668674	WITHOUT_CLASSIFICATION	9.373313259980574E-6	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9997911624397308	WITHOUT_CLASSIFICATION	2.088375602692512E-4	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9987317603428848	WITHOUT_CLASSIFICATION	0.001268239657115106	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999999370364155	WITHOUT_CLASSIFICATION	6.296358440963427E-8	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999999424784587	WITHOUT_CLASSIFICATION	5.7521541371333315E-8	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999987019271376	WITHOUT_CLASSIFICATION	1.2980728624908062E-6	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999969629683562	WITHOUT_CLASSIFICATION	3.0370316438578894E-6	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999998277926084	WITHOUT_CLASSIFICATION	1.722073914953305E-7	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999977443415871	WITHOUT_CLASSIFICATION	2.2556584129995728E-6	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.999991363196565	WITHOUT_CLASSIFICATION	8.636803435079586E-6	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999934454163033	WITHOUT_CLASSIFICATION	6.554583696749059E-6	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9997071440767343	WITHOUT_CLASSIFICATION	2.9285592326572387E-4	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999898227539508	WITHOUT_CLASSIFICATION	1.0177246049281897E-5	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999990092705893	WITHOUT_CLASSIFICATION	9.907294108192717E-7	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9999991023067385	WITHOUT_CLASSIFICATION	8.976932615516179E-7	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.999999871084532	WITHOUT_CLASSIFICATION	1.2891546793575548E-7	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999842152215287	WITHOUT_CLASSIFICATION	1.5784778471339193E-5	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999994014847892	WITHOUT_CLASSIFICATION	5.985152108323128E-7	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999182171301537	WITHOUT_CLASSIFICATION	8.178286984619449E-5	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999948780224032	WITHOUT_CLASSIFICATION	5.121977596794611E-6	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999991943049751	WITHOUT_CLASSIFICATION	8.056950247828577E-7	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9997348526164512	WITHOUT_CLASSIFICATION	2.65147383548843E-4	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999950650102165	WITHOUT_CLASSIFICATION	4.9349897834678045E-6	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9999921531799363	WITHOUT_CLASSIFICATION	7.846820063649886E-6	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999305179642609	WITHOUT_CLASSIFICATION	6.948203573914868E-5	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999472658394146	WITHOUT_CLASSIFICATION	5.2734160585456615E-5	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999999622425509	WITHOUT_CLASSIFICATION	3.775744899696321E-8	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999996724386537	WITHOUT_CLASSIFICATION	3.275613462313036E-7	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999998620766649	WITHOUT_CLASSIFICATION	1.3792333519387044E-7	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999965967553031	WITHOUT_CLASSIFICATION	3.403244697038065E-6	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999999879913631	WITHOUT_CLASSIFICATION	1.2008636865833935E-8	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999997461442196	WITHOUT_CLASSIFICATION	2.5385578037899654E-7	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999790253730709	WITHOUT_CLASSIFICATION	2.097462692907442E-5	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.999997583358569	WITHOUT_CLASSIFICATION	2.4166414309201416E-6	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999768795140387	WITHOUT_CLASSIFICATION	2.3120485961249874E-5	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999999999838686	WITHOUT_CLASSIFICATION	1.6131443827129563E-11	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9998086702673714	WITHOUT_CLASSIFICATION	1.9132973262870804E-4	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999903762678399	WITHOUT_CLASSIFICATION	9.623732159998403E-6	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999999032932844	WITHOUT_CLASSIFICATION	9.670671571100166E-8	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999973165276946	WITHOUT_CLASSIFICATION	2.6834723053590768E-6	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999987999047006	WITHOUT_CLASSIFICATION	1.2000952993897865E-6	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9900653807779488	WITHOUT_CLASSIFICATION	0.009934619222051194	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9900653807779488	WITHOUT_CLASSIFICATION	0.009934619222051194	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.5969014602190109	IMPLEMENTATION	0.40309853978098914	WITHOUT_CLASSIFICATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999869882061296	WITHOUT_CLASSIFICATION	1.3011793870506345E-5	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999714761181434	WITHOUT_CLASSIFICATION	2.8523881856699055E-5	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.999995659552917	WITHOUT_CLASSIFICATION	4.340447082980087E-6	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9972414679568835	WITHOUT_CLASSIFICATION	0.0027585320431164437	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999917863673103	WITHOUT_CLASSIFICATION	8.213632689632313E-6	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9999968935191499	WITHOUT_CLASSIFICATION	3.106480850051057E-6	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9999905001554197	WITHOUT_CLASSIFICATION	9.499844580372326E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999973165276946	WITHOUT_CLASSIFICATION	2.6834723053590768E-6	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999999834579204	WITHOUT_CLASSIFICATION	1.6542079551254573E-8	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999570516319319	WITHOUT_CLASSIFICATION	4.294836806811627E-5	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9982592081946906	WITHOUT_CLASSIFICATION	0.0017407918053093383	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.999999786216751	WITHOUT_CLASSIFICATION	2.1378324903911853E-7	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999992989267339	WITHOUT_CLASSIFICATION	7.01073266091503E-7	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999994239788047	WITHOUT_CLASSIFICATION	5.760211953609332E-7	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999994239788047	WITHOUT_CLASSIFICATION	5.760211953609332E-7	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999994239788047	WITHOUT_CLASSIFICATION	5.760211953609332E-7	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999998691474176	WITHOUT_CLASSIFICATION	1.3085258245256322E-7	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999722017811128	WITHOUT_CLASSIFICATION	2.77982188872198E-5	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999999947913317	WITHOUT_CLASSIFICATION	5.208668277566448E-9	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9993046458380591	WITHOUT_CLASSIFICATION	6.953541619408993E-4	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9998748245125041	WITHOUT_CLASSIFICATION	1.2517548749584075E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999988242236791	WITHOUT_CLASSIFICATION	1.1757763208324084E-6	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9994966373527102	WITHOUT_CLASSIFICATION	5.033626472898232E-4	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999648947823	WITHOUT_CLASSIFICATION	3.510521785544203E-8	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999880809299982	WITHOUT_CLASSIFICATION	1.1919070001760218E-5	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999880809299982	WITHOUT_CLASSIFICATION	1.1919070001760218E-5	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.999998786732758	WITHOUT_CLASSIFICATION	1.2132672420834807E-6	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9996344082322351	WITHOUT_CLASSIFICATION	3.6559176776476476E-4	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999972174330051	WITHOUT_CLASSIFICATION	2.7825669949703992E-6	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999972174330051	WITHOUT_CLASSIFICATION	2.7825669949703992E-6	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999986165208589	WITHOUT_CLASSIFICATION	1.3834791411335574E-6	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999996567973573	WITHOUT_CLASSIFICATION	3.4320264270638287E-7	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999902904111274	WITHOUT_CLASSIFICATION	9.709588872585781E-6	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999999973402252	WITHOUT_CLASSIFICATION	2.6597748081651235E-9	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999696348179141	WITHOUT_CLASSIFICATION	3.0365182085866335E-5	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.9999973601754322	WITHOUT_CLASSIFICATION	2.6398245677765873E-6	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.999993206822601	WITHOUT_CLASSIFICATION	6.79317739914093E-6	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9999868039929675	WITHOUT_CLASSIFICATION	1.3196007032444441E-5	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9999087549812373	WITHOUT_CLASSIFICATION	9.124501876261701E-5	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999988800925205	WITHOUT_CLASSIFICATION	1.119907479552486E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999973165276946	WITHOUT_CLASSIFICATION	2.6834723053590768E-6	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999989214075473	WITHOUT_CLASSIFICATION	1.0785924527382473E-6	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999311985028	WITHOUT_CLASSIFICATION	6.880149718205769E-8	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999909029932432	WITHOUT_CLASSIFICATION	9.097006756780097E-6	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.996426748129419	WITHOUT_CLASSIFICATION	0.00357325187058097	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999879563984041	WITHOUT_CLASSIFICATION	1.2043601595938923E-5	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.999953521548637	WITHOUT_CLASSIFICATION	4.647845136293078E-5	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999991082349844	WITHOUT_CLASSIFICATION	8.917650155898091E-7	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999982620797315	WITHOUT_CLASSIFICATION	1.737920268505181E-6	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999999315263859	WITHOUT_CLASSIFICATION	6.847361410304685E-8	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9462082770913519	WITHOUT_CLASSIFICATION	0.053791722908648205	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999991614258839	WITHOUT_CLASSIFICATION	8.385741160996878E-7	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999999736418611	WITHOUT_CLASSIFICATION	2.6358138956009438E-8	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9995100128776482	WITHOUT_CLASSIFICATION	4.899871223518072E-4	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999974416070784	WITHOUT_CLASSIFICATION	2.5583929215112513E-6	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999998059802951	WITHOUT_CLASSIFICATION	1.9401970481003706E-7	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9999665899718414	WITHOUT_CLASSIFICATION	3.3410028158523954E-5	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999998782068784	WITHOUT_CLASSIFICATION	1.2179312166971123E-7	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9999993790292694	WITHOUT_CLASSIFICATION	6.20970730678841E-7	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999998239244103	WITHOUT_CLASSIFICATION	1.760755896102012E-7	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.999998441714896	WITHOUT_CLASSIFICATION	1.5582851039798003E-6	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999981135646357	WITHOUT_CLASSIFICATION	1.8864353643104429E-6	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999999270704055	WITHOUT_CLASSIFICATION	7.292959445628486E-8	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999893202691346	WITHOUT_CLASSIFICATION	1.0679730865405804E-5	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999989160576013	WITHOUT_CLASSIFICATION	1.0839423987476084E-6	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999999923567658	WITHOUT_CLASSIFICATION	7.64323412236926E-9	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9996234755140161	WITHOUT_CLASSIFICATION	3.765244859838519E-4	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999570070896255	WITHOUT_CLASSIFICATION	4.299291037451199E-5	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999989948305759	WITHOUT_CLASSIFICATION	1.0051694241117533E-6	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999974148036882	WITHOUT_CLASSIFICATION	2.5851963119002864E-6	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999990448620701	WITHOUT_CLASSIFICATION	9.551379298515748E-7	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999999456931135	WITHOUT_CLASSIFICATION	5.430688648694398E-8	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9999992210058618	WITHOUT_CLASSIFICATION	7.789941382122113E-7	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.999998915566758	WITHOUT_CLASSIFICATION	1.0844332420357406E-6	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999439287407126	WITHOUT_CLASSIFICATION	5.607125928728017E-5	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999851616756614	WITHOUT_CLASSIFICATION	1.4838324338594115E-5	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9976172017101753	WITHOUT_CLASSIFICATION	0.002382798289824706	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999907233479557	WITHOUT_CLASSIFICATION	9.27665204431789E-6	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999961303898911	WITHOUT_CLASSIFICATION	3.869610108944796E-6	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999526606090711	WITHOUT_CLASSIFICATION	4.73393909289631E-5	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999989249398318	WITHOUT_CLASSIFICATION	1.0750601681279888E-6	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999873261559507	WITHOUT_CLASSIFICATION	1.267384404931404E-5	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9999998294057822	WITHOUT_CLASSIFICATION	1.705942176639544E-7	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999992276843114	WITHOUT_CLASSIFICATION	7.723156887356392E-7	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999977532311287	WITHOUT_CLASSIFICATION	2.24676887127477E-6	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9999052499611741	WITHOUT_CLASSIFICATION	9.475003882586376E-5	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9999962291753648	WITHOUT_CLASSIFICATION	3.770824635174802E-6	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.999999024019599	WITHOUT_CLASSIFICATION	9.759804010385853E-7	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999864809097849	WITHOUT_CLASSIFICATION	1.351909021505873E-5	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999999535319796	WITHOUT_CLASSIFICATION	4.646802036558022E-8	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9997371163047424	WITHOUT_CLASSIFICATION	2.6288369525765575E-4	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.987364919233761	WITHOUT_CLASSIFICATION	0.012635080766238958	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999117515980938	WITHOUT_CLASSIFICATION	8.824840190629008E-5	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999805164090713	WITHOUT_CLASSIFICATION	1.9483590928630227E-5	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999971930130971	WITHOUT_CLASSIFICATION	2.806986902990121E-6	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999944283794951	WITHOUT_CLASSIFICATION	5.571620504778639E-6	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999925399900526	WITHOUT_CLASSIFICATION	7.460009947414294E-6	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999994419757157	WITHOUT_CLASSIFICATION	5.580242844587429E-7	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999782906995707	WITHOUT_CLASSIFICATION	2.170930042933982E-5	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999955534565883	WITHOUT_CLASSIFICATION	4.446543411688385E-6	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.999997694598007	WITHOUT_CLASSIFICATION	2.305401993077821E-6	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999752409467146	WITHOUT_CLASSIFICATION	2.475905328533351E-5	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999752409467146	WITHOUT_CLASSIFICATION	2.475905328533351E-5	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999920713530261	WITHOUT_CLASSIFICATION	7.928646973824279E-6	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999920713530261	WITHOUT_CLASSIFICATION	7.928646973824279E-6	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999929625658707	WITHOUT_CLASSIFICATION	7.037434129430398E-6	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999929625658707	WITHOUT_CLASSIFICATION	7.037434129430398E-6	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999914188221122	WITHOUT_CLASSIFICATION	8.581177887732591E-6	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999914188221122	WITHOUT_CLASSIFICATION	8.581177887732591E-6	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9999998966963786	WITHOUT_CLASSIFICATION	1.0330362143133174E-7	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.999929626347019	WITHOUT_CLASSIFICATION	7.037365298097471E-5	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999976159797235	WITHOUT_CLASSIFICATION	2.3840202765568837E-6	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999999193915485	WITHOUT_CLASSIFICATION	8.060845146097672E-8	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999876967507648	WITHOUT_CLASSIFICATION	1.2303249235115153E-5	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999991279092849	WITHOUT_CLASSIFICATION	8.720907149631644E-7	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9998037252912642	WITHOUT_CLASSIFICATION	1.962747087359183E-4	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999981536315731	WITHOUT_CLASSIFICATION	1.8463684269621856E-6	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999947594939756	WITHOUT_CLASSIFICATION	5.240506024327621E-6	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999991957576041	WITHOUT_CLASSIFICATION	8.042423958618247E-7	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999875879056445	WITHOUT_CLASSIFICATION	1.2412094355462494E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.999999331001298	WITHOUT_CLASSIFICATION	6.689987019526905E-7	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999957894534834	WITHOUT_CLASSIFICATION	4.210546516581355E-6	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9998076782307936	WITHOUT_CLASSIFICATION	1.923217692063385E-4	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999949261763599	WITHOUT_CLASSIFICATION	5.073823640149313E-6	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999988965044478	WITHOUT_CLASSIFICATION	1.103495552119438E-6	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9993356727574974	WITHOUT_CLASSIFICATION	6.64327242502643E-4	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999982408685573	WITHOUT_CLASSIFICATION	1.7591314426394747E-6	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999997847818173	WITHOUT_CLASSIFICATION	2.1521818264755416E-7	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.983072352854995	WITHOUT_CLASSIFICATION	0.016927647145005085	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999947530537542	WITHOUT_CLASSIFICATION	5.246946245846788E-6	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999959017110718	WITHOUT_CLASSIFICATION	4.098288928233158E-6	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9998351301868595	WITHOUT_CLASSIFICATION	1.648698131403972E-4	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999991195588662	WITHOUT_CLASSIFICATION	8.804411338305713E-7	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999991356155908	WITHOUT_CLASSIFICATION	8.643844090769694E-7	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999998586819842	WITHOUT_CLASSIFICATION	1.413180157237952E-7	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999994122341591	WITHOUT_CLASSIFICATION	5.87765840825576E-7	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999707457218494	WITHOUT_CLASSIFICATION	2.925427815063323E-5	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999707457218494	WITHOUT_CLASSIFICATION	2.925427815063323E-5	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999996815185845	WITHOUT_CLASSIFICATION	3.1848141554774447E-7	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9999877569573726	WITHOUT_CLASSIFICATION	1.2243042627446318E-5	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9999691940866348	WITHOUT_CLASSIFICATION	3.080591336519673E-5	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999998374064445	WITHOUT_CLASSIFICATION	1.6259355550222021E-7	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999992799625924	WITHOUT_CLASSIFICATION	7.200374076466714E-7	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999984995160541	WITHOUT_CLASSIFICATION	1.5004839459522998E-6	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999592167656878	WITHOUT_CLASSIFICATION	4.078323431214585E-5	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999592167656878	WITHOUT_CLASSIFICATION	4.078323431214585E-5	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999987376145338	WITHOUT_CLASSIFICATION	1.2623854661081223E-6	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.8179847802714137	WITHOUT_CLASSIFICATION	0.18201521972858628	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999852094853016	WITHOUT_CLASSIFICATION	1.4790514698483555E-5	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999852094853016	WITHOUT_CLASSIFICATION	1.4790514698483555E-5	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999950974162453	WITHOUT_CLASSIFICATION	4.902583754779355E-6	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.99999245524794	WITHOUT_CLASSIFICATION	7.544752059964541E-6	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.99999245524794	WITHOUT_CLASSIFICATION	7.544752059964541E-6	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999153760839743	WITHOUT_CLASSIFICATION	8.462391602566501E-5	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999153760839743	WITHOUT_CLASSIFICATION	8.462391602566501E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999932289040578	WITHOUT_CLASSIFICATION	6.771095942111166E-6	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999932289040578	WITHOUT_CLASSIFICATION	6.771095942111166E-6	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9999974690041633	WITHOUT_CLASSIFICATION	2.5309958367092873E-6	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999944887674408	WITHOUT_CLASSIFICATION	5.511232559264083E-6	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999289330189636	WITHOUT_CLASSIFICATION	7.106698103643956E-5	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.999999957492507	WITHOUT_CLASSIFICATION	4.250749300598426E-8	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.999999890386963	WITHOUT_CLASSIFICATION	1.0961303692733637E-7	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.999999183855897	WITHOUT_CLASSIFICATION	8.161441030088385E-7	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999996825204129	WITHOUT_CLASSIFICATION	3.174795870334178E-7	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999975475166583	WITHOUT_CLASSIFICATION	2.452483341641131E-6	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999996825204129	WITHOUT_CLASSIFICATION	3.174795870334178E-7	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9919354966834217	WITHOUT_CLASSIFICATION	0.00806450331657836	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999924980335068	WITHOUT_CLASSIFICATION	7.501966493223308E-6	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999846639679338	WITHOUT_CLASSIFICATION	1.5336032066100355E-5	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9992236706194406	WITHOUT_CLASSIFICATION	7.763293805594433E-4	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999975399405269	WITHOUT_CLASSIFICATION	2.460059473167409E-6	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9972585736509676	WITHOUT_CLASSIFICATION	0.0027414263490323837	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999884293599396	WITHOUT_CLASSIFICATION	1.1570640060426043E-5	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999811332826298	WITHOUT_CLASSIFICATION	1.8866717370217444E-5	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999979055177867	WITHOUT_CLASSIFICATION	2.094482213232395E-6	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999671953739611	WITHOUT_CLASSIFICATION	3.280462603893863E-5	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999998208306204	WITHOUT_CLASSIFICATION	1.7916937964670982E-7	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999600236656802	WITHOUT_CLASSIFICATION	3.997633431977499E-5	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.9999382946472332	WITHOUT_CLASSIFICATION	6.170535276684948E-5	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9999941237880988	WITHOUT_CLASSIFICATION	5.876211901214383E-6	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999990949462467	WITHOUT_CLASSIFICATION	9.050537533034709E-7	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999998193136869	WITHOUT_CLASSIFICATION	1.806863131024748E-7	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999890560659902	WITHOUT_CLASSIFICATION	1.094393400984006E-5	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999429405970252	WITHOUT_CLASSIFICATION	5.705940297480089E-5	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9983762724922367	WITHOUT_CLASSIFICATION	0.0016237275077632912	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999966812766714	WITHOUT_CLASSIFICATION	3.3187233286670495E-6	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999998604584448	WITHOUT_CLASSIFICATION	1.395415552155059E-7	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999965437258157	WITHOUT_CLASSIFICATION	3.4562741841984448E-6	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999999310082327	WITHOUT_CLASSIFICATION	6.899176720918487E-8	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999925502276693	WITHOUT_CLASSIFICATION	7.449772330697382E-6	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999935352669486	WITHOUT_CLASSIFICATION	6.464733051544769E-6	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999972161265135	WITHOUT_CLASSIFICATION	2.7838734865590255E-6	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999997364654529	WITHOUT_CLASSIFICATION	2.635345470616917E-7	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999978901955789	WITHOUT_CLASSIFICATION	2.1098044210446115E-6	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999992441728589	WITHOUT_CLASSIFICATION	7.558271411859161E-7	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999983173985555	WITHOUT_CLASSIFICATION	1.6826014445484224E-6	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.999996528212215	WITHOUT_CLASSIFICATION	3.471787785063926E-6	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9998571306743622	WITHOUT_CLASSIFICATION	1.4286932563779494E-4	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999982539758736	WITHOUT_CLASSIFICATION	1.7460241263426205E-6	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999655906845057	WITHOUT_CLASSIFICATION	3.44093154942997E-5	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9998077663265341	WITHOUT_CLASSIFICATION	1.9223367346596403E-4	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.999987262264555	WITHOUT_CLASSIFICATION	1.2737735444967994E-5	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.999995478243317	WITHOUT_CLASSIFICATION	4.521756683033633E-6	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999940375308548	WITHOUT_CLASSIFICATION	5.962469145179503E-6	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.999991060792444	WITHOUT_CLASSIFICATION	8.939207556012642E-6	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999986024074898	WITHOUT_CLASSIFICATION	1.3975925101509221E-6	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.99999948204515	WITHOUT_CLASSIFICATION	5.179548499532716E-7	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999926475775333	WITHOUT_CLASSIFICATION	7.352422466680665E-6	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.999997195684153	WITHOUT_CLASSIFICATION	2.8043158470036795E-6	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999938265960872	WITHOUT_CLASSIFICATION	6.173403912799387E-6	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999984557064202	WITHOUT_CLASSIFICATION	1.5442935798247766E-6	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999976588116887	WITHOUT_CLASSIFICATION	2.3411883113819583E-6	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999998040290765	WITHOUT_CLASSIFICATION	1.959709234328279E-7	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999969575788159	WITHOUT_CLASSIFICATION	3.04242118416477E-6	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999952742396504	WITHOUT_CLASSIFICATION	4.725760349625269E-6	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999573265974939	WITHOUT_CLASSIFICATION	4.267340250605358E-5	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9998935959021126	WITHOUT_CLASSIFICATION	1.0640409788739012E-4	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.999999981902894	WITHOUT_CLASSIFICATION	1.809710607867284E-8	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999669014315992	WITHOUT_CLASSIFICATION	3.3098568400935274E-5	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999984839408393	WITHOUT_CLASSIFICATION	1.5160591606339058E-6	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999894341140342	WITHOUT_CLASSIFICATION	1.0565885965948178E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999894341140342	WITHOUT_CLASSIFICATION	1.0565885965948178E-5	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.999999998096898	WITHOUT_CLASSIFICATION	1.903102076636289E-9	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999918161884	WITHOUT_CLASSIFICATION	8.183811717202209E-9	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999999736873431	WITHOUT_CLASSIFICATION	2.631265694324717E-8	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999903101142809	WITHOUT_CLASSIFICATION	9.689885719108417E-6	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9998855963922194	WITHOUT_CLASSIFICATION	1.1440360778065836E-4	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999955402853997	WITHOUT_CLASSIFICATION	4.459714600223912E-6	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999954812819329	WITHOUT_CLASSIFICATION	4.518718067124815E-6	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9995129655966101	WITHOUT_CLASSIFICATION	4.8703440338994223E-4	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9998857211636374	WITHOUT_CLASSIFICATION	1.1427883636255487E-4	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999997308328582	WITHOUT_CLASSIFICATION	2.6916714178966534E-7	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999752428850736	WITHOUT_CLASSIFICATION	2.4757114926395976E-5	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999752428850736	WITHOUT_CLASSIFICATION	2.4757114926395976E-5	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9889379901072929	WITHOUT_CLASSIFICATION	0.01106200989270715	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999986733924106	WITHOUT_CLASSIFICATION	1.3266075894069253E-6	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999996063652654	WITHOUT_CLASSIFICATION	3.9363473459380385E-7	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999999986138722	WITHOUT_CLASSIFICATION	1.386127765501184E-9	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999999700000219	WITHOUT_CLASSIFICATION	2.999997811072998E-8	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999997093438059	WITHOUT_CLASSIFICATION	2.9065619415515557E-7	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999998985397733	WITHOUT_CLASSIFICATION	1.0146022667755043E-7	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999998382594601	WITHOUT_CLASSIFICATION	1.61740539970792E-7	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999960528800353	WITHOUT_CLASSIFICATION	3.947119964552081E-6	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9998887047016309	WITHOUT_CLASSIFICATION	1.1129529836912233E-4	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999991587396614	WITHOUT_CLASSIFICATION	8.412603385328878E-7	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999873905943114	WITHOUT_CLASSIFICATION	1.2609405688444781E-5	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999846863717455	WITHOUT_CLASSIFICATION	1.5313628254442177E-5	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999846863717455	WITHOUT_CLASSIFICATION	1.5313628254442177E-5	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999910656722558	WITHOUT_CLASSIFICATION	8.934327744102465E-6	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999572151034636	WITHOUT_CLASSIFICATION	4.27848965364385E-5	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.999999643263168	WITHOUT_CLASSIFICATION	3.5673683195281275E-7	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999934358274454	WITHOUT_CLASSIFICATION	6.564172554612988E-6	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999936752539125	WITHOUT_CLASSIFICATION	6.324746087519571E-6	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999992740451791	WITHOUT_CLASSIFICATION	7.25954820955852E-7	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.999998459409269	WITHOUT_CLASSIFICATION	1.5405907309944001E-6	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999999481987747	WITHOUT_CLASSIFICATION	5.180122530021599E-8	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999761385521463	WITHOUT_CLASSIFICATION	2.3861447853741784E-5	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999991135904541	WITHOUT_CLASSIFICATION	8.864095459205041E-7	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999996063652654	WITHOUT_CLASSIFICATION	3.9363473459380385E-7	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999917874553382	WITHOUT_CLASSIFICATION	8.212544661892514E-6	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.999999954863601	WITHOUT_CLASSIFICATION	4.5136398862648406E-8	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999997830473195	WITHOUT_CLASSIFICATION	2.169526806216352E-7	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.999970522188187	WITHOUT_CLASSIFICATION	2.9477811812922437E-5	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999959671338019	WITHOUT_CLASSIFICATION	4.032866198092863E-6	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999997561985927	WITHOUT_CLASSIFICATION	2.438014072896193E-7	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9997500354861552	WITHOUT_CLASSIFICATION	2.4996451384490205E-4	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999515922622046	WITHOUT_CLASSIFICATION	4.8407737795448514E-5	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999999860828365	WITHOUT_CLASSIFICATION	1.391716366994309E-8	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9996491698871841	WITHOUT_CLASSIFICATION	3.508301128158803E-4	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9995779028249261	WITHOUT_CLASSIFICATION	4.22097175073977E-4	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999979358058421	WITHOUT_CLASSIFICATION	2.0641941579765845E-6	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.999994852186172	WITHOUT_CLASSIFICATION	5.147813827950377E-6	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9567514323368389	WITHOUT_CLASSIFICATION	0.04324856766316104	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999783017565798	WITHOUT_CLASSIFICATION	2.1698243420236467E-5	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999642990113983	WITHOUT_CLASSIFICATION	3.570098860174262E-5	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999960808253151	WITHOUT_CLASSIFICATION	3.919174684909556E-6	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999993966009527	WITHOUT_CLASSIFICATION	6.033990473002777E-7	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999986392581736	WITHOUT_CLASSIFICATION	1.3607418264563117E-6	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.9999998478456923	WITHOUT_CLASSIFICATION	1.5215430772897376E-7	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999998764284875	WITHOUT_CLASSIFICATION	1.2357151238439146E-7	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.999938452995807	WITHOUT_CLASSIFICATION	6.154700419301064E-5	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999804525748844	WITHOUT_CLASSIFICATION	1.9547425115521166E-5	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999886452295416	WITHOUT_CLASSIFICATION	1.1354770458574843E-5	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999988959722976	WITHOUT_CLASSIFICATION	1.1040277023095264E-6	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999999240643137	WITHOUT_CLASSIFICATION	7.593568631378657E-8	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9999938314966661	WITHOUT_CLASSIFICATION	6.168503333810299E-6	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999970512003679	WITHOUT_CLASSIFICATION	2.9487996320659974E-6	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9999755386019101	WITHOUT_CLASSIFICATION	2.4461398089909753E-5	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.999817523201262	WITHOUT_CLASSIFICATION	1.8247679873796603E-4	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999891835747718	WITHOUT_CLASSIFICATION	1.0816425228077428E-5	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999891835747718	WITHOUT_CLASSIFICATION	1.0816425228077428E-5	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9977966741297168	WITHOUT_CLASSIFICATION	0.0022033258702831046	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9994118768464267	WITHOUT_CLASSIFICATION	5.881231535731817E-4	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.9999999540408521	WITHOUT_CLASSIFICATION	4.59591479894279E-8	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9997322836173327	WITHOUT_CLASSIFICATION	2.6771638266731774E-4	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9962536899801223	WITHOUT_CLASSIFICATION	0.003746310019877637	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999993320997709	WITHOUT_CLASSIFICATION	6.679002292072976E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999973165276946	WITHOUT_CLASSIFICATION	2.6834723053590768E-6	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999997633107606	WITHOUT_CLASSIFICATION	2.3668923942622333E-7	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9998573919338525	WITHOUT_CLASSIFICATION	1.4260806614754923E-4	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999391122592197	WITHOUT_CLASSIFICATION	6.0887740780275075E-5	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.999999159304509	WITHOUT_CLASSIFICATION	8.406954911306566E-7	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9999983798220599	WITHOUT_CLASSIFICATION	1.6201779400759308E-6	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999996736456023	WITHOUT_CLASSIFICATION	3.263543978081214E-7	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999989249398318	WITHOUT_CLASSIFICATION	1.0750601681279888E-6	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9984109070258903	WITHOUT_CLASSIFICATION	0.0015890929741096643	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999877991112035	WITHOUT_CLASSIFICATION	1.2200888796387869E-5	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999706142852022	WITHOUT_CLASSIFICATION	2.938571479788029E-5	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999992341312306	WITHOUT_CLASSIFICATION	7.658687694691322E-7	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.999990857148988	WITHOUT_CLASSIFICATION	9.14285101197898E-6	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9996442412199045	WITHOUT_CLASSIFICATION	3.5575878009551316E-4	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999693658164404	WITHOUT_CLASSIFICATION	3.0634183559681085E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999693658164404	WITHOUT_CLASSIFICATION	3.0634183559681085E-5	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9999827769734686	WITHOUT_CLASSIFICATION	1.7223026531328347E-5	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999510338969373	WITHOUT_CLASSIFICATION	4.89661030626962E-5	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999992035862785	WITHOUT_CLASSIFICATION	7.964137214570495E-7	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999995067187981	WITHOUT_CLASSIFICATION	4.932812018978956E-7	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.999999886099867	WITHOUT_CLASSIFICATION	1.1390013290786641E-7	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9977289155876014	WITHOUT_CLASSIFICATION	0.002271084412398689	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999997529225583	WITHOUT_CLASSIFICATION	2.4707744166227637E-7	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999952939328	WITHOUT_CLASSIFICATION	4.7060672073410096E-9	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.999987308139495	WITHOUT_CLASSIFICATION	1.2691860504972078E-5	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999790568350561	WITHOUT_CLASSIFICATION	2.0943164943896675E-5	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9999801209991829	WITHOUT_CLASSIFICATION	1.987900081715325E-5	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999956292581508	WITHOUT_CLASSIFICATION	4.370741849230622E-6	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999917617997649	WITHOUT_CLASSIFICATION	8.238200235069786E-6	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999998960634026	WITHOUT_CLASSIFICATION	1.0393659747420186E-7	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999196472393784	WITHOUT_CLASSIFICATION	8.035276062158853E-5	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999827573027246	WITHOUT_CLASSIFICATION	1.724269727542783E-5	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999930613328646	WITHOUT_CLASSIFICATION	6.938667135469575E-6	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9999979265529034	WITHOUT_CLASSIFICATION	2.0734470965163615E-6	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999684708775	WITHOUT_CLASSIFICATION	3.152912260488962E-8	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999999956325061	WITHOUT_CLASSIFICATION	4.3674939237925274E-9	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9998644380426486	WITHOUT_CLASSIFICATION	1.3556195735131232E-4	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999912076407134	WITHOUT_CLASSIFICATION	8.792359286614958E-6	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999908275677056	WITHOUT_CLASSIFICATION	9.172432294382435E-6	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9997997446063706	WITHOUT_CLASSIFICATION	2.0025539362953764E-4	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999406055295387	WITHOUT_CLASSIFICATION	5.9394470461396715E-5	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.999995836555402	WITHOUT_CLASSIFICATION	4.163444598076613E-6	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.999744238356442	WITHOUT_CLASSIFICATION	2.5576164355792626E-4	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999972162962392	WITHOUT_CLASSIFICATION	2.783703760908663E-6	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999982224607656	WITHOUT_CLASSIFICATION	1.777539234360699E-6	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999980155795434	WITHOUT_CLASSIFICATION	1.9844204566302947E-6	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.999997766518733	WITHOUT_CLASSIFICATION	2.2334812670823975E-6	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999864346257841	WITHOUT_CLASSIFICATION	1.3565374216067694E-5	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999985960096759	WITHOUT_CLASSIFICATION	1.403990324073352E-6	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.9999930147969764	WITHOUT_CLASSIFICATION	6.985203023573643E-6	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999999758010588	WITHOUT_CLASSIFICATION	2.4198941157830145E-8	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.999999734548676	WITHOUT_CLASSIFICATION	2.6545132400718096E-7	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999944365502478	WITHOUT_CLASSIFICATION	5.5634497522373065E-6	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9997954806814521	WITHOUT_CLASSIFICATION	2.0451931854796064E-4	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9994948695307223	WITHOUT_CLASSIFICATION	5.051304692777464E-4	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999949835852492	WITHOUT_CLASSIFICATION	5.016414750801229E-6	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.999999831782523	WITHOUT_CLASSIFICATION	1.682174770259613E-7	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999880607883382	WITHOUT_CLASSIFICATION	1.1939211661631724E-5	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999860207562419	WITHOUT_CLASSIFICATION	1.3979243758224108E-5	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999942983099223	WITHOUT_CLASSIFICATION	5.701690077737733E-6	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999998218550598	WITHOUT_CLASSIFICATION	1.7814494028743902E-7	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999942983099223	WITHOUT_CLASSIFICATION	5.701690077737733E-6	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9998971431331473	WITHOUT_CLASSIFICATION	1.0285686685271608E-4	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9642959141966377	WITHOUT_CLASSIFICATION	0.03570408580336214	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999803228623061	WITHOUT_CLASSIFICATION	1.967713769388564E-5	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.6984959456202974	IMPLEMENTATION	0.3015040543797027	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999993953790508	WITHOUT_CLASSIFICATION	6.046209492149579E-7	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999997623023054	WITHOUT_CLASSIFICATION	2.376976947358282E-7	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9999991686433894	WITHOUT_CLASSIFICATION	8.313566105293537E-7	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999999508705534	WITHOUT_CLASSIFICATION	4.9129446596292374E-8	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999422233080754	WITHOUT_CLASSIFICATION	5.777669192467592E-5	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9994133025060887	WITHOUT_CLASSIFICATION	5.8669749391123E-4	IMPLEMENTATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.981899967998618	WITHOUT_CLASSIFICATION	0.018100032001382	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999778968716414	WITHOUT_CLASSIFICATION	2.2103128358611946E-5	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9990094983687471	WITHOUT_CLASSIFICATION	9.905016312529702E-4	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999962928702472	WITHOUT_CLASSIFICATION	3.7071297528264657E-6	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9386161218163084	WITHOUT_CLASSIFICATION	0.06138387818369166	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9768145719860686	WITHOUT_CLASSIFICATION	0.023185428013931406	IMPLEMENTATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.8972503478356826	WITHOUT_CLASSIFICATION	0.10274965216431743	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999999888662287	WITHOUT_CLASSIFICATION	1.1133771319304816E-8	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9998088116385402	WITHOUT_CLASSIFICATION	1.9118836145982468E-4	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999613576518973	WITHOUT_CLASSIFICATION	3.864234810271664E-5	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9989041256049896	WITHOUT_CLASSIFICATION	0.001095874395010297	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999210454905	WITHOUT_CLASSIFICATION	7.895450949538428E-8	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999978583872514	WITHOUT_CLASSIFICATION	2.141612748601533E-6	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999976310994904	WITHOUT_CLASSIFICATION	2.368900509673114E-6	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.999996819505789	WITHOUT_CLASSIFICATION	3.180494210933353E-6	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9998833757593699	WITHOUT_CLASSIFICATION	1.1662424063016728E-4	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999999709629837	WITHOUT_CLASSIFICATION	2.9037016293399334E-8	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.999999387646625	WITHOUT_CLASSIFICATION	6.123533749478412E-7	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999890010858689	WITHOUT_CLASSIFICATION	1.0998914131205555E-5	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9997210595988828	WITHOUT_CLASSIFICATION	2.789404011171949E-4	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999739679395548	WITHOUT_CLASSIFICATION	2.603206044505763E-5	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999066837345459	WITHOUT_CLASSIFICATION	9.331626545410722E-5	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9998771600624062	WITHOUT_CLASSIFICATION	1.2283993759374396E-4	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9999882962995824	WITHOUT_CLASSIFICATION	1.1703700417656098E-5	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999978490698685	WITHOUT_CLASSIFICATION	2.1509301314044122E-6	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9999991056442823	WITHOUT_CLASSIFICATION	8.943557177021375E-7	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999999998553485	WITHOUT_CLASSIFICATION	1.446516164893055E-10	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999925407583669	WITHOUT_CLASSIFICATION	7.4592416331597235E-6	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999883005122828	WITHOUT_CLASSIFICATION	1.169948771714615E-5	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999911273975071	WITHOUT_CLASSIFICATION	8.872602492981689E-6	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999529382544389	WITHOUT_CLASSIFICATION	4.706174556103656E-5	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999203811749068	WITHOUT_CLASSIFICATION	7.961882509323398E-5	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999999522082764	WITHOUT_CLASSIFICATION	4.7791723571370326E-8	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999667529380275	WITHOUT_CLASSIFICATION	3.3247061972470824E-5	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999667529380275	WITHOUT_CLASSIFICATION	3.3247061972470824E-5	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999961104340787	WITHOUT_CLASSIFICATION	3.889565921315259E-6	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999999730751096	WITHOUT_CLASSIFICATION	2.6924890349070903E-8	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999945631294872	WITHOUT_CLASSIFICATION	5.436870512830694E-6	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999999999748515	WITHOUT_CLASSIFICATION	2.5148585727653206E-11	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999999990832	WITHOUT_CLASSIFICATION	9.16788663141587E-13	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999959291933	WITHOUT_CLASSIFICATION	4.070806713872198E-9	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999537879278426	WITHOUT_CLASSIFICATION	4.621207215750199E-5	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999752376417692	WITHOUT_CLASSIFICATION	2.4762358230778186E-5	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999910873045371	WITHOUT_CLASSIFICATION	8.912695462994634E-6	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999997844790927	WITHOUT_CLASSIFICATION	2.1552090727940729E-7	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999999970822832	WITHOUT_CLASSIFICATION	2.9177168058367307E-9	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999999066772594	WITHOUT_CLASSIFICATION	9.332274071018059E-8	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999985832357157	WITHOUT_CLASSIFICATION	1.4167642843763113E-6	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9997991159385388	WITHOUT_CLASSIFICATION	2.008840614611982E-4	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999999594855603	WITHOUT_CLASSIFICATION	4.051443967067839E-8	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9555135633985115	WITHOUT_CLASSIFICATION	0.04448643660148842	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999997087496024	WITHOUT_CLASSIFICATION	2.9125039762354444E-7	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999999549603978	WITHOUT_CLASSIFICATION	4.50396021425659E-8	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999974884078819	WITHOUT_CLASSIFICATION	2.5115921179867475E-6	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.999998689044601	WITHOUT_CLASSIFICATION	1.3109553990912232E-6	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.9999603145781313	WITHOUT_CLASSIFICATION	3.968542186867518E-5	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9999693272127832	WITHOUT_CLASSIFICATION	3.067278721685775E-5	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9995671225950258	WITHOUT_CLASSIFICATION	4.328774049742079E-4	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999998691711597	WITHOUT_CLASSIFICATION	1.308288404383848E-7	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999995699967226	WITHOUT_CLASSIFICATION	4.300032774170007E-7	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999998093712794	WITHOUT_CLASSIFICATION	1.906287206307785E-7	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999960845718	WITHOUT_CLASSIFICATION	3.915428186473524E-9	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999982329930196	WITHOUT_CLASSIFICATION	1.7670069803725627E-6	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999999157707398	WITHOUT_CLASSIFICATION	8.422926013520059E-8	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999999914505805	WITHOUT_CLASSIFICATION	8.549419529558974E-9	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999837118125462	WITHOUT_CLASSIFICATION	1.6288187453833625E-5	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999968062919918	WITHOUT_CLASSIFICATION	3.1937080082634703E-6	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999889315951	WITHOUT_CLASSIFICATION	1.1068404758526807E-8	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999865404344016	WITHOUT_CLASSIFICATION	1.3459565598340338E-5	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999999996608495	WITHOUT_CLASSIFICATION	3.391505413182516E-10	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999999926213508	WITHOUT_CLASSIFICATION	7.378649200159505E-9	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999720447718418	WITHOUT_CLASSIFICATION	2.795522815817352E-5	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999782877599559	WITHOUT_CLASSIFICATION	2.1712240044116117E-5	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999987091457204	WITHOUT_CLASSIFICATION	1.290854279622336E-6	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999971244973348	WITHOUT_CLASSIFICATION	2.8755026652061822E-5	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.999996600993084	WITHOUT_CLASSIFICATION	3.3990069160497984E-6	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.974237836031437	WITHOUT_CLASSIFICATION	0.02576216396856305	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9994202314537316	WITHOUT_CLASSIFICATION	5.797685462684845E-4	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999993673788966	WITHOUT_CLASSIFICATION	6.32621103313759E-7	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999350019104707	WITHOUT_CLASSIFICATION	6.499808952923006E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999979355436908	WITHOUT_CLASSIFICATION	2.064456309316561E-6	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999928313207177	WITHOUT_CLASSIFICATION	7.168679282327375E-6	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999961776096501	WITHOUT_CLASSIFICATION	3.8223903498776266E-6	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.999950817316431	WITHOUT_CLASSIFICATION	4.918268356905344E-5	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9998053391978953	WITHOUT_CLASSIFICATION	1.9466080210476947E-4	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.999874371742326	WITHOUT_CLASSIFICATION	1.2562825767393977E-4	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999969398647728	WITHOUT_CLASSIFICATION	3.0601352272737997E-6	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.999992927175548	WITHOUT_CLASSIFICATION	7.0728244520272665E-6	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999999988983155	WITHOUT_CLASSIFICATION	1.1016845034615652E-9	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999939748261077	WITHOUT_CLASSIFICATION	6.025173892286146E-6	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.994451383659524	WITHOUT_CLASSIFICATION	0.00554861634047591	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999996197681174	WITHOUT_CLASSIFICATION	3.802318826428822E-7	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999965489318512	WITHOUT_CLASSIFICATION	3.451068148894143E-6	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999987111324319	WITHOUT_CLASSIFICATION	1.288867568192223E-6	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999998656121516	WITHOUT_CLASSIFICATION	1.3438784840351112E-7	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999808597807436	WITHOUT_CLASSIFICATION	1.9140219256321486E-5	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999934979405397	WITHOUT_CLASSIFICATION	6.502059460352441E-6	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999963837471	WITHOUT_CLASSIFICATION	3.616252786152563E-9	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999639301589	WITHOUT_CLASSIFICATION	3.6069841142977637E-8	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9998942850469131	WITHOUT_CLASSIFICATION	1.0571495308696235E-4	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999881850765524	WITHOUT_CLASSIFICATION	1.1814923447604428E-5	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999247050946535	WITHOUT_CLASSIFICATION	7.529490534650061E-5	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999995322508488	WITHOUT_CLASSIFICATION	4.67749151184096E-7	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.999993505489587	WITHOUT_CLASSIFICATION	6.494510413080174E-6	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999902263352959	WITHOUT_CLASSIFICATION	9.773664704120463E-6	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.999999033027533	WITHOUT_CLASSIFICATION	9.669724670089809E-7	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9998437185015213	WITHOUT_CLASSIFICATION	1.5628149847873987E-4	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999927388118004	WITHOUT_CLASSIFICATION	7.261188199709002E-6	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999972191498895	WITHOUT_CLASSIFICATION	2.7808501104826817E-6	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9999972132194966	WITHOUT_CLASSIFICATION	2.7867805033272586E-6	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9999942406906379	WITHOUT_CLASSIFICATION	5.759309362070699E-6	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9999963148908046	WITHOUT_CLASSIFICATION	3.6851091952562326E-6	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9999969892628607	WITHOUT_CLASSIFICATION	3.010737139202399E-6	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9999959087379702	WITHOUT_CLASSIFICATION	4.091262029876565E-6	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9999968596774264	WITHOUT_CLASSIFICATION	3.140322573668142E-6	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9999962881110676	WITHOUT_CLASSIFICATION	3.711888932390287E-6	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9999969323371037	WITHOUT_CLASSIFICATION	3.0676628961341814E-6	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9999940044446005	WITHOUT_CLASSIFICATION	5.995555399428165E-6	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9999961514913254	WITHOUT_CLASSIFICATION	3.848508674586403E-6	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9999948105912947	WITHOUT_CLASSIFICATION	5.189408705310115E-6	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9999954260954751	WITHOUT_CLASSIFICATION	4.5739045248598835E-6	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.999994871369119	WITHOUT_CLASSIFICATION	5.128630880957824E-6	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9999945685558861	WITHOUT_CLASSIFICATION	5.43144411387938E-6	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9999936896375782	WITHOUT_CLASSIFICATION	6.310362421824168E-6	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9999950571370161	WITHOUT_CLASSIFICATION	4.942862983931422E-6	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9999935372325556	WITHOUT_CLASSIFICATION	6.462767444418575E-6	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9999978468878344	WITHOUT_CLASSIFICATION	2.153112165542721E-6	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9999935875718949	WITHOUT_CLASSIFICATION	6.412428105057539E-6	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9999966557026518	WITHOUT_CLASSIFICATION	3.344297348158217E-6	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9985121738663546	WITHOUT_CLASSIFICATION	0.0014878261336453893	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9989309620715537	WITHOUT_CLASSIFICATION	0.0010690379284462638	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999994421433963	WITHOUT_CLASSIFICATION	5.578566037611872E-7	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999261164797854	WITHOUT_CLASSIFICATION	7.388352021466789E-5	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999959093827285	WITHOUT_CLASSIFICATION	4.090617271480174E-6	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.999999205158421	WITHOUT_CLASSIFICATION	7.948415788701932E-7	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9989379900262736	WITHOUT_CLASSIFICATION	0.0010620099737264047	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.999999873584994	WITHOUT_CLASSIFICATION	1.264150059020131E-7	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999849258977803	WITHOUT_CLASSIFICATION	1.5074102219735873E-5	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9732870601818248	IMPLEMENTATION	0.02671293981817518	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9999974180537748	WITHOUT_CLASSIFICATION	2.581946225270907E-6	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999999981880285	WITHOUT_CLASSIFICATION	1.8119714624331586E-9	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999977740077155	WITHOUT_CLASSIFICATION	2.225992284514465E-6	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999977740077155	WITHOUT_CLASSIFICATION	2.225992284514465E-6	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999899399235087	WITHOUT_CLASSIFICATION	1.0060076491308173E-5	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9997413124516684	WITHOUT_CLASSIFICATION	2.586875483316023E-4	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999992496336	WITHOUT_CLASSIFICATION	7.503664418197526E-10	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999773401256227	WITHOUT_CLASSIFICATION	2.2659874377378323E-5	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9998454470577494	WITHOUT_CLASSIFICATION	1.5455294225067255E-4	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999989048097888	WITHOUT_CLASSIFICATION	1.0951902111827627E-6	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9999988712935224	WITHOUT_CLASSIFICATION	1.1287064776971612E-6	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.999930800770994	WITHOUT_CLASSIFICATION	6.919922900596789E-5	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9999896168152371	WITHOUT_CLASSIFICATION	1.0383184762830778E-5	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9999984469348465	WITHOUT_CLASSIFICATION	1.5530651535729328E-6	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9994819363203348	WITHOUT_CLASSIFICATION	5.180636796652367E-4	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.999999864996916	WITHOUT_CLASSIFICATION	1.3500308398184546E-7	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9999969301463677	WITHOUT_CLASSIFICATION	3.069853632231487E-6	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999999856357402	WITHOUT_CLASSIFICATION	1.436425967813041E-8	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.999965952305834	WITHOUT_CLASSIFICATION	3.4047694166047615E-5	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.9999700217661474	WITHOUT_CLASSIFICATION	2.9978233852714682E-5	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999999370364155	WITHOUT_CLASSIFICATION	6.296358440963427E-8	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999797475120268	WITHOUT_CLASSIFICATION	2.0252487973293624E-5	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.999972207754849	WITHOUT_CLASSIFICATION	2.7792245151010163E-5	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9997121562422697	WITHOUT_CLASSIFICATION	2.878437577302304E-4	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.999999841580948	WITHOUT_CLASSIFICATION	1.5841905197696744E-7	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999103661597212	WITHOUT_CLASSIFICATION	8.96338402789025E-5	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999703515330728	WITHOUT_CLASSIFICATION	2.9648466927298195E-5	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.999999343355858	WITHOUT_CLASSIFICATION	6.566441418213372E-7	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999954821584244	WITHOUT_CLASSIFICATION	4.517841575717296E-6	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9998703127465356	WITHOUT_CLASSIFICATION	1.2968725346438972E-4	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999998011369843	WITHOUT_CLASSIFICATION	1.9886301573147306E-7	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999632708809284	WITHOUT_CLASSIFICATION	3.6729119071488794E-5	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9998246481028484	WITHOUT_CLASSIFICATION	1.7535189715155692E-4	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999828327278101	WITHOUT_CLASSIFICATION	1.7167272189896846E-5	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999830740381938	WITHOUT_CLASSIFICATION	1.6925961806251835E-5	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999508925115485	WITHOUT_CLASSIFICATION	4.9107488451535474E-5	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999866811324704	WITHOUT_CLASSIFICATION	1.3318867529676782E-5	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999862076935799	WITHOUT_CLASSIFICATION	1.3792306420136233E-5	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999937087930311	WITHOUT_CLASSIFICATION	6.2912069688887035E-6	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999970172038275	WITHOUT_CLASSIFICATION	2.9827961723664584E-6	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999996282847317	WITHOUT_CLASSIFICATION	3.7171526827467524E-7	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999998513084866	WITHOUT_CLASSIFICATION	1.486915133679561E-7	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9998213069801204	WITHOUT_CLASSIFICATION	1.7869301987966191E-4	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.999999998405709	WITHOUT_CLASSIFICATION	1.5942910569650159E-9	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.952607305326073	WITHOUT_CLASSIFICATION	0.04739269467392701	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.999979635418262	WITHOUT_CLASSIFICATION	2.0364581738080356E-5	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999976970352468	WITHOUT_CLASSIFICATION	2.3029647531216955E-6	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9972253429534217	WITHOUT_CLASSIFICATION	0.0027746570465783035	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9972253429534217	WITHOUT_CLASSIFICATION	0.0027746570465783035	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999999859122667	WITHOUT_CLASSIFICATION	1.4087733348900995E-8	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9995286932464246	WITHOUT_CLASSIFICATION	4.7130675357545736E-4	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999914119572021	WITHOUT_CLASSIFICATION	8.588042797863867E-6	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9999977515424937	WITHOUT_CLASSIFICATION	2.2484575062691036E-6	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999922297954411	WITHOUT_CLASSIFICATION	7.770204558949634E-6	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9999969793046836	WITHOUT_CLASSIFICATION	3.020695316468003E-6	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999981973706419	WITHOUT_CLASSIFICATION	1.8026293582136144E-6	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.7080455738289578	WITHOUT_CLASSIFICATION	0.2919544261710421	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999346450272211	WITHOUT_CLASSIFICATION	6.535497277894901E-5	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999944440009301	WITHOUT_CLASSIFICATION	5.555999069939656E-6	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999950818745212	WITHOUT_CLASSIFICATION	4.918125478819053E-6	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999950491749474	WITHOUT_CLASSIFICATION	4.950825052469642E-6	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999956726525654	WITHOUT_CLASSIFICATION	4.3273474345699735E-6	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999999578149729	WITHOUT_CLASSIFICATION	4.2185027066041355E-8	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.6670801767494775	WITHOUT_CLASSIFICATION	0.3329198232505225	IMPLEMENTATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9167393556256798	WITHOUT_CLASSIFICATION	0.08326064437432021	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999942967128695	WITHOUT_CLASSIFICATION	5.70328713046294E-6	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999996990561778	WITHOUT_CLASSIFICATION	3.009438221272025E-7	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9962615414646889	WITHOUT_CLASSIFICATION	0.0037384585353110273	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999961303898911	WITHOUT_CLASSIFICATION	3.869610108944796E-6	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.999992139348799	WITHOUT_CLASSIFICATION	7.860651200858276E-6	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.999992139348799	WITHOUT_CLASSIFICATION	7.860651200858276E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999964523524366	WITHOUT_CLASSIFICATION	3.547647563371298E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999964523524366	WITHOUT_CLASSIFICATION	3.547647563371298E-6	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999986107578195	WITHOUT_CLASSIFICATION	1.3892421805075285E-6	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999971699050755	WITHOUT_CLASSIFICATION	2.830094924513379E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999859323015754	WITHOUT_CLASSIFICATION	1.406769842460731E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999996028886295	WITHOUT_CLASSIFICATION	3.971113704368769E-7	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999289330189636	WITHOUT_CLASSIFICATION	7.106698103643956E-5	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999998866574029	WITHOUT_CLASSIFICATION	1.1334259713342094E-7	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9941336306681086	WITHOUT_CLASSIFICATION	0.0058663693318914	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9999980273714111	WITHOUT_CLASSIFICATION	1.9726285889388076E-6	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999917010461186	WITHOUT_CLASSIFICATION	8.298953881314125E-6	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999934891543945	WITHOUT_CLASSIFICATION	6.5108456055349485E-6	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999994661240451	WITHOUT_CLASSIFICATION	5.338759548944823E-7	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999999826975174	WITHOUT_CLASSIFICATION	1.7302482570524514E-8	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999999467067963	WITHOUT_CLASSIFICATION	5.329320375589122E-8	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9956782398134282	WITHOUT_CLASSIFICATION	0.004321760186571784	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9993010416572545	WITHOUT_CLASSIFICATION	6.989583427455784E-4	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.9999590687740154	WITHOUT_CLASSIFICATION	4.093122598453651E-5	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999498751477378	WITHOUT_CLASSIFICATION	5.012485226226476E-5	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999996233823557	WITHOUT_CLASSIFICATION	3.7661764433284665E-7	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9999693315069286	WITHOUT_CLASSIFICATION	3.0668493071498716E-5	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9998890018406381	WITHOUT_CLASSIFICATION	1.1099815936186558E-4	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.999979902628578	WITHOUT_CLASSIFICATION	2.009737142193685E-5	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.999999513196102	WITHOUT_CLASSIFICATION	4.868038979548346E-7	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999998440918498	WITHOUT_CLASSIFICATION	1.5590815007820217E-7	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999999709629837	WITHOUT_CLASSIFICATION	2.9037016293399334E-8	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999959291933	WITHOUT_CLASSIFICATION	4.070806713872198E-9	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999844083738264	WITHOUT_CLASSIFICATION	1.559162617360139E-5	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999943548131691	WITHOUT_CLASSIFICATION	5.645186830841209E-6	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.999999955531858	WITHOUT_CLASSIFICATION	4.446814191216286E-8	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999996831025528	WITHOUT_CLASSIFICATION	3.168974471681098E-7	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999906409211217	WITHOUT_CLASSIFICATION	9.359078878368236E-6	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999906409211217	WITHOUT_CLASSIFICATION	9.359078878368236E-6	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.999999920202776	WITHOUT_CLASSIFICATION	7.979722403792323E-8	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999999946871726	WITHOUT_CLASSIFICATION	5.312827425663853E-9	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999999343901699	WITHOUT_CLASSIFICATION	6.56098300460954E-8	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999999511336675	WITHOUT_CLASSIFICATION	4.886633264931266E-8	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999989601664462	WITHOUT_CLASSIFICATION	1.0398335539176853E-6	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9999974770471143	WITHOUT_CLASSIFICATION	2.522952885681239E-6	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999975621874552	WITHOUT_CLASSIFICATION	2.4378125449131807E-6	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999941100536984	WITHOUT_CLASSIFICATION	5.8899463016208526E-6	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9998946383376318	WITHOUT_CLASSIFICATION	1.0536166236811824E-4	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999994442810831	WITHOUT_CLASSIFICATION	5.557189168450514E-7	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9999995574424242	WITHOUT_CLASSIFICATION	4.425575758754678E-7	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999989838051754	WITHOUT_CLASSIFICATION	1.0161948246199258E-6	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999487143886817	WITHOUT_CLASSIFICATION	5.128561131815899E-5	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999998676023416	WITHOUT_CLASSIFICATION	1.3239765843500562E-7	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999999721076187	WITHOUT_CLASSIFICATION	2.7892381301723077E-8	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999976159797235	WITHOUT_CLASSIFICATION	2.3840202765568837E-6	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999860186958017	WITHOUT_CLASSIFICATION	1.3981304198257084E-5	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999998647822876	WITHOUT_CLASSIFICATION	1.3521771244418474E-7	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.99996823927101	WITHOUT_CLASSIFICATION	3.176072899003169E-5	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999999986350603	WITHOUT_CLASSIFICATION	1.3649396959518E-9	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999996460799707	WITHOUT_CLASSIFICATION	3.539200291869714E-7	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.999997952075583	WITHOUT_CLASSIFICATION	2.047924417043074E-6	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999994660339288	WITHOUT_CLASSIFICATION	5.339660713328198E-7	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9999933798353058	WITHOUT_CLASSIFICATION	6.620164694193256E-6	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999989536787908	WITHOUT_CLASSIFICATION	1.0463212093230768E-6	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999990358310883	WITHOUT_CLASSIFICATION	9.641689117572826E-7	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.999999185912462	WITHOUT_CLASSIFICATION	8.140875380533933E-7	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999999466956377	WITHOUT_CLASSIFICATION	5.330436213330833E-8	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999999865498678	WITHOUT_CLASSIFICATION	1.3450132142876161E-8	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999965652762605	WITHOUT_CLASSIFICATION	3.4347237394954623E-6	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9984576832232759	WITHOUT_CLASSIFICATION	0.0015423167767242172	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.999983713586225	WITHOUT_CLASSIFICATION	1.6286413774963128E-5	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999973595905151	WITHOUT_CLASSIFICATION	2.640409484993659E-6	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9999849374064083	WITHOUT_CLASSIFICATION	1.5062593591700115E-5	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999148523190443	WITHOUT_CLASSIFICATION	8.514768095566901E-5	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9899338871718744	WITHOUT_CLASSIFICATION	0.010066112828125572	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999925523704757	WITHOUT_CLASSIFICATION	7.44762952432876E-6	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9998161908096511	WITHOUT_CLASSIFICATION	1.8380919034887547E-4	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999997725678285	WITHOUT_CLASSIFICATION	2.2743217159452722E-7	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999950221819369	WITHOUT_CLASSIFICATION	4.9778180630550165E-6	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999464859802	WITHOUT_CLASSIFICATION	5.35140196767731E-8	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.999996745659529	WITHOUT_CLASSIFICATION	3.254340470988791E-6	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9999865066753572	WITHOUT_CLASSIFICATION	1.3493324642989406E-5	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9999985162442012	WITHOUT_CLASSIFICATION	1.483755798744792E-6	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999952968308539	WITHOUT_CLASSIFICATION	4.703169146083418E-6	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.999991796203319	WITHOUT_CLASSIFICATION	8.203796681069892E-6	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999988942566709	WITHOUT_CLASSIFICATION	1.1057433290771145E-6	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999876891982133	WITHOUT_CLASSIFICATION	1.2310801786725587E-5	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9998082327687352	WITHOUT_CLASSIFICATION	1.9176723126471159E-4	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9999651247174894	WITHOUT_CLASSIFICATION	3.487528251046921E-5	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999987327882817	WITHOUT_CLASSIFICATION	1.2672117184034436E-6	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999981270530534	WITHOUT_CLASSIFICATION	1.8729469466095174E-6	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999924951221913	WITHOUT_CLASSIFICATION	7.504877808633277E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999959205015466	WITHOUT_CLASSIFICATION	4.079498453472546E-6	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999969031611632	WITHOUT_CLASSIFICATION	3.096838836782665E-6	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999658395007696	WITHOUT_CLASSIFICATION	3.4160499230446647E-5	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999516332613625	WITHOUT_CLASSIFICATION	4.8366738637401843E-5	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999999034528959	WITHOUT_CLASSIFICATION	9.654710409675584E-8	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.999996962756285	WITHOUT_CLASSIFICATION	3.0372437149828935E-6	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999999691183934	WITHOUT_CLASSIFICATION	3.0881606622969186E-8	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999929600534975	WITHOUT_CLASSIFICATION	7.039946502522667E-6	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999987327882817	WITHOUT_CLASSIFICATION	1.2672117184034436E-6	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999924951221913	WITHOUT_CLASSIFICATION	7.504877808633277E-6	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999981270530534	WITHOUT_CLASSIFICATION	1.8729469466095174E-6	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999941705140066	WITHOUT_CLASSIFICATION	5.829485993270407E-6	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.999996433212394	WITHOUT_CLASSIFICATION	3.566787606124021E-6	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999950457432847	WITHOUT_CLASSIFICATION	4.954256715364236E-6	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9999846614497657	WITHOUT_CLASSIFICATION	1.533855023427894E-5	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9991959431016939	WITHOUT_CLASSIFICATION	8.040568983061759E-4	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999887443202616	WITHOUT_CLASSIFICATION	1.1255679738331746E-5	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999786916881819	WITHOUT_CLASSIFICATION	2.1308311818058468E-5	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.999993192415513	WITHOUT_CLASSIFICATION	6.807584486980482E-6	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999299214575744	WITHOUT_CLASSIFICATION	7.007854242554846E-5	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999993522679399	WITHOUT_CLASSIFICATION	6.477320600967012E-7	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999985451743427	WITHOUT_CLASSIFICATION	1.4548256572186857E-6	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999780606692904	WITHOUT_CLASSIFICATION	2.193933070953828E-5	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.999975964674858	WITHOUT_CLASSIFICATION	2.4035325141904028E-5	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.999991803831255	WITHOUT_CLASSIFICATION	8.196168745090286E-6	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999971669601364	WITHOUT_CLASSIFICATION	2.833039863633089E-6	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9999982659159857	WITHOUT_CLASSIFICATION	1.7340840143355573E-6	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.9999692971517999	WITHOUT_CLASSIFICATION	3.070284820003767E-5	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999578903952606	WITHOUT_CLASSIFICATION	4.210960473932839E-5	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999578903952606	WITHOUT_CLASSIFICATION	4.210960473932839E-5	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9995821607593106	WITHOUT_CLASSIFICATION	4.178392406893896E-4	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.9999996457844038	WITHOUT_CLASSIFICATION	3.542155962188588E-7	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999990725700635	WITHOUT_CLASSIFICATION	9.274299366106982E-7	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999247075369904	WITHOUT_CLASSIFICATION	7.529246300962773E-5	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9996188266253664	WITHOUT_CLASSIFICATION	3.8117337463366345E-4	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999999850359497	WITHOUT_CLASSIFICATION	1.4964050378203086E-8	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.999998485110957	WITHOUT_CLASSIFICATION	1.5148890429377887E-6	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999988670490426	WITHOUT_CLASSIFICATION	1.132950957371129E-6	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.999992117660466	WITHOUT_CLASSIFICATION	7.882339533958593E-6	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999997130915491	WITHOUT_CLASSIFICATION	2.8690845085015104E-7	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999998709265199	WITHOUT_CLASSIFICATION	1.2907348014923606E-7	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9999683920696689	WITHOUT_CLASSIFICATION	3.160793033104809E-5	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999836609423625	WITHOUT_CLASSIFICATION	1.6339057637499527E-5	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999463239078771	WITHOUT_CLASSIFICATION	5.3676092122888025E-5	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.973503422807604	WITHOUT_CLASSIFICATION	0.026496577192395995	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999984549634537	WITHOUT_CLASSIFICATION	1.545036546200675E-6	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999938347944299	WITHOUT_CLASSIFICATION	6.16520557012015E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999720002494429	WITHOUT_CLASSIFICATION	2.799975055717565E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999720002494429	WITHOUT_CLASSIFICATION	2.799975055717565E-5	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.999999144353888	WITHOUT_CLASSIFICATION	8.556461119334018E-7	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9999994593839973	WITHOUT_CLASSIFICATION	5.406160027826143E-7	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999794735053233	WITHOUT_CLASSIFICATION	2.0526494676642076E-5	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.999962963091049	WITHOUT_CLASSIFICATION	3.703690895091457E-5	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999981390840716	WITHOUT_CLASSIFICATION	1.8609159282925703E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999720002494429	WITHOUT_CLASSIFICATION	2.799975055717565E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999720002494429	WITHOUT_CLASSIFICATION	2.799975055717565E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999999521921961	WITHOUT_CLASSIFICATION	4.780780389476112E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999999521921961	WITHOUT_CLASSIFICATION	4.780780389476112E-7	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999986723006268	WITHOUT_CLASSIFICATION	1.3276993732699513E-6	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999659435720157	WITHOUT_CLASSIFICATION	3.405642798416584E-5	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999999054504047	WITHOUT_CLASSIFICATION	9.454959518807513E-8	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999953531336784	WITHOUT_CLASSIFICATION	4.646866321590305E-6	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999813846586004	WITHOUT_CLASSIFICATION	1.8615341399550913E-5	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999813846586004	WITHOUT_CLASSIFICATION	1.8615341399550913E-5	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999938577310824	WITHOUT_CLASSIFICATION	6.142268917593272E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999980447483345	WITHOUT_CLASSIFICATION	1.95525166535421E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999994056585909	WITHOUT_CLASSIFICATION	5.943414091325866E-7	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9998346866717507	WITHOUT_CLASSIFICATION	1.6531332824935038E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999995164309353	WITHOUT_CLASSIFICATION	4.835690647105024E-7	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999845443132	WITHOUT_CLASSIFICATION	1.5455686792037317E-8	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9953446906873682	WITHOUT_CLASSIFICATION	0.004655309312631765	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.999998761160561	WITHOUT_CLASSIFICATION	1.2388394390083623E-6	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999994181918219	WITHOUT_CLASSIFICATION	5.818081780840151E-7	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999999810680316	WITHOUT_CLASSIFICATION	1.8931968449777602E-8	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9968007582000444	WITHOUT_CLASSIFICATION	0.003199241799955579	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999963974405561	WITHOUT_CLASSIFICATION	3.6025594439069275E-6	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999778740879073	WITHOUT_CLASSIFICATION	2.2125912092651954E-5	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999999627175307	WITHOUT_CLASSIFICATION	3.7282469413924874E-8	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999984549634537	WITHOUT_CLASSIFICATION	1.545036546200675E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999720002494429	WITHOUT_CLASSIFICATION	2.799975055717565E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999999521921961	WITHOUT_CLASSIFICATION	4.780780389476112E-7	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999845443132	WITHOUT_CLASSIFICATION	1.5455686792037317E-8	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999884905949	WITHOUT_CLASSIFICATION	1.1509405094019609E-8	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999884905949	WITHOUT_CLASSIFICATION	1.1509405094019609E-8	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999947077803456	WITHOUT_CLASSIFICATION	5.292219654331608E-6	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999999954737759	WITHOUT_CLASSIFICATION	4.526224099011248E-9	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999994572719277	WITHOUT_CLASSIFICATION	5.427280723087976E-7	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999998382880795	WITHOUT_CLASSIFICATION	1.6171192048408607E-7	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999977079553316	WITHOUT_CLASSIFICATION	2.2920446683784125E-6	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999999300047648	WITHOUT_CLASSIFICATION	6.999523509993351E-8	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999472007718604	WITHOUT_CLASSIFICATION	5.2799228139608246E-5	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999639647142116	WITHOUT_CLASSIFICATION	3.603528578849908E-5	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999624347755	WITHOUT_CLASSIFICATION	3.756522440626743E-8	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999535859735744	WITHOUT_CLASSIFICATION	4.641402642546379E-5	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9998234543587199	WITHOUT_CLASSIFICATION	1.7654564128004964E-4	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.999998685809152	WITHOUT_CLASSIFICATION	1.3141908480872312E-6	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999993486765444	WITHOUT_CLASSIFICATION	6.513234556629951E-7	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999938347944299	WITHOUT_CLASSIFICATION	6.16520557012015E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.999999521921961	WITHOUT_CLASSIFICATION	4.780780389476112E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999980447483345	WITHOUT_CLASSIFICATION	1.95525166535421E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999994056585909	WITHOUT_CLASSIFICATION	5.943414091325866E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999994056585909	WITHOUT_CLASSIFICATION	5.943414091325866E-7	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999995164309353	WITHOUT_CLASSIFICATION	4.835690647105024E-7	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999845443132	WITHOUT_CLASSIFICATION	1.5455686792037317E-8	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999845443132	WITHOUT_CLASSIFICATION	1.5455686792037317E-8	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999884905949	WITHOUT_CLASSIFICATION	1.1509405094019609E-8	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.999697547728789	WITHOUT_CLASSIFICATION	3.0245227121100036E-4	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999973717490653	WITHOUT_CLASSIFICATION	2.6282509346411607E-6	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999999904619	WITHOUT_CLASSIFICATION	9.538124879057614E-12	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9973465325204753	WITHOUT_CLASSIFICATION	0.002653467479524607	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.999995724545039	WITHOUT_CLASSIFICATION	4.275454960927074E-6	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.999984625696361	WITHOUT_CLASSIFICATION	1.5374303638974738E-5	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999956082142901	WITHOUT_CLASSIFICATION	4.39178570987067E-6	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999962871711667	WITHOUT_CLASSIFICATION	3.7128288332631377E-6	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999990367427374	WITHOUT_CLASSIFICATION	9.632572626587118E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999980447483345	WITHOUT_CLASSIFICATION	1.95525166535421E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999994056585909	WITHOUT_CLASSIFICATION	5.943414091325866E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999994056585909	WITHOUT_CLASSIFICATION	5.943414091325866E-7	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999995164309353	WITHOUT_CLASSIFICATION	4.835690647105024E-7	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999639647142116	WITHOUT_CLASSIFICATION	3.603528578849908E-5	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999535859735744	WITHOUT_CLASSIFICATION	4.641402642546379E-5	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999643493164856	WITHOUT_CLASSIFICATION	3.565068351436871E-5	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999350573789435	WITHOUT_CLASSIFICATION	6.494262105649351E-5	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999604426141951	WITHOUT_CLASSIFICATION	3.955738580490934E-5	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999604426141951	WITHOUT_CLASSIFICATION	3.955738580490934E-5	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999911071494214	WITHOUT_CLASSIFICATION	8.892850578522403E-6	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999994287806493	WITHOUT_CLASSIFICATION	5.712193506511678E-7	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999947688853438	WITHOUT_CLASSIFICATION	5.2311146562422756E-6	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999078349309716	WITHOUT_CLASSIFICATION	9.216506902845302E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999823515972505	WITHOUT_CLASSIFICATION	1.7648402749499567E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999823515972505	WITHOUT_CLASSIFICATION	1.7648402749499567E-5	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999767256639853	WITHOUT_CLASSIFICATION	2.3274336014695487E-5	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999767256639853	WITHOUT_CLASSIFICATION	2.3274336014695487E-5	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999893410933861	WITHOUT_CLASSIFICATION	1.0658906613844598E-5	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999893410933861	WITHOUT_CLASSIFICATION	1.0658906613844598E-5	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999955784217868	WITHOUT_CLASSIFICATION	4.4215782132290265E-6	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999968683564966	WITHOUT_CLASSIFICATION	3.1316435034747346E-6	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999995363637936	WITHOUT_CLASSIFICATION	4.636362063026815E-7	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999993339215486	WITHOUT_CLASSIFICATION	6.660784513608831E-7	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9998716410034099	WITHOUT_CLASSIFICATION	1.2835899659008608E-4	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.9999988500931845	WITHOUT_CLASSIFICATION	1.1499068155196497E-6	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999656865010049	WITHOUT_CLASSIFICATION	3.431349899502871E-5	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9997759468642983	WITHOUT_CLASSIFICATION	2.240531357017522E-4	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999408889242786	WITHOUT_CLASSIFICATION	5.9111075721382456E-5	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999988394800619	WITHOUT_CLASSIFICATION	1.1605199382456978E-6	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9912712097572106	WITHOUT_CLASSIFICATION	0.008728790242789356	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.999977584144559	WITHOUT_CLASSIFICATION	2.2415855441025394E-5	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999989442959681	WITHOUT_CLASSIFICATION	1.0557040319351168E-6	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999911468577	WITHOUT_CLASSIFICATION	8.853142299973218E-6	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999911468577	WITHOUT_CLASSIFICATION	8.853142299973218E-6	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999996359235964	WITHOUT_CLASSIFICATION	3.640764035345059E-7	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999998866574029	WITHOUT_CLASSIFICATION	1.1334259713342094E-7	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9998242363774092	WITHOUT_CLASSIFICATION	1.7576362259084393E-4	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.999999795062026	WITHOUT_CLASSIFICATION	2.0493797391622017E-7	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999999410317364	WITHOUT_CLASSIFICATION	5.896826371430206E-8	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9988439121032369	WITHOUT_CLASSIFICATION	0.0011560878967631983	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999974579028824	WITHOUT_CLASSIFICATION	2.542097117502154E-6	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999966303620245	WITHOUT_CLASSIFICATION	3.3696379756674024E-6	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999946279696192	WITHOUT_CLASSIFICATION	5.37203038075265E-6	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999998443702864	WITHOUT_CLASSIFICATION	1.5562971355540436E-7	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999966695572399	WITHOUT_CLASSIFICATION	3.3304427602136603E-6	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.996996086230639	WITHOUT_CLASSIFICATION	0.003003913769360906	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9998751634053646	WITHOUT_CLASSIFICATION	1.248365946353611E-4	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.999971759606653	WITHOUT_CLASSIFICATION	2.8240393347045735E-5	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999878556626256	WITHOUT_CLASSIFICATION	1.2144337374433926E-5	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999991133298869	WITHOUT_CLASSIFICATION	8.866701131219949E-7	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9999789614054235	WITHOUT_CLASSIFICATION	2.1038594576549187E-5	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999981332416296	WITHOUT_CLASSIFICATION	1.8667583705109189E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999885612935	WITHOUT_CLASSIFICATION	1.1438706615501575E-8	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999885612935	WITHOUT_CLASSIFICATION	1.1438706615501575E-8	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.999715299208809	WITHOUT_CLASSIFICATION	2.8470079119091783E-4	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999998237651115	WITHOUT_CLASSIFICATION	1.762348883425726E-7	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999394327720184	WITHOUT_CLASSIFICATION	6.0567227981547775E-5	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999394327720184	WITHOUT_CLASSIFICATION	6.0567227981547775E-5	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9996824582614727	WITHOUT_CLASSIFICATION	3.175417385272676E-4	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999999139881975	WITHOUT_CLASSIFICATION	8.601180251275236E-8	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.999996229069389	WITHOUT_CLASSIFICATION	3.7709306109550496E-6	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.999999838213324	WITHOUT_CLASSIFICATION	1.6178667601546095E-7	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999981982097904	WITHOUT_CLASSIFICATION	1.8017902096848242E-6	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999954100036472	WITHOUT_CLASSIFICATION	4.589996352738589E-6	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999954100036472	WITHOUT_CLASSIFICATION	4.589996352738589E-6	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.999984488107474	WITHOUT_CLASSIFICATION	1.5511892526012415E-5	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999988385267325	WITHOUT_CLASSIFICATION	1.1614732674280277E-6	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999650535347582	WITHOUT_CLASSIFICATION	3.494646524186803E-5	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999996147969175	WITHOUT_CLASSIFICATION	3.8520308258569903E-7	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999998237651115	WITHOUT_CLASSIFICATION	1.762348883425726E-7	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999996640904986	WITHOUT_CLASSIFICATION	3.359095015240377E-7	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999999535771058	WITHOUT_CLASSIFICATION	4.6422894330201134E-8	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999999535771058	WITHOUT_CLASSIFICATION	4.6422894330201134E-8	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999533515820472	WITHOUT_CLASSIFICATION	4.664841795276417E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999971871733	WITHOUT_CLASSIFICATION	2.8128268700120706E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999971871733	WITHOUT_CLASSIFICATION	2.8128268700120706E-9	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9998919709992526	WITHOUT_CLASSIFICATION	1.0802900074730836E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9998919709992526	WITHOUT_CLASSIFICATION	1.0802900074730836E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9998919709992526	WITHOUT_CLASSIFICATION	1.0802900074730836E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999971871733	WITHOUT_CLASSIFICATION	2.8128268700120706E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999971871733	WITHOUT_CLASSIFICATION	2.8128268700120706E-9	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999533515820472	WITHOUT_CLASSIFICATION	4.664841795276417E-5	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999983941155913	WITHOUT_CLASSIFICATION	1.605884408637375E-6	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.999997486589417	WITHOUT_CLASSIFICATION	2.5134105829447733E-6	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9991277820882851	WITHOUT_CLASSIFICATION	8.722179117148933E-4	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9999819201141773	WITHOUT_CLASSIFICATION	1.8079885822784415E-5	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999992107816397	WITHOUT_CLASSIFICATION	7.892183603776383E-7	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9955878195428485	WITHOUT_CLASSIFICATION	0.004412180457151571	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999998163630482	WITHOUT_CLASSIFICATION	1.8363695186051305E-7	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999998700291507	WITHOUT_CLASSIFICATION	1.2997084933870624E-7	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999966695572399	WITHOUT_CLASSIFICATION	3.3304427602136603E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999971871733	WITHOUT_CLASSIFICATION	2.8128268700120706E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999971871733	WITHOUT_CLASSIFICATION	2.8128268700120706E-9	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999654879478	WITHOUT_CLASSIFICATION	3.4512052187075645E-8	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9998166543112598	WITHOUT_CLASSIFICATION	1.8334568874015683E-4	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.999998771290721	WITHOUT_CLASSIFICATION	1.228709278883506E-6	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999996658942679	WITHOUT_CLASSIFICATION	3.3410573210331017E-7	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999884384491494	WITHOUT_CLASSIFICATION	1.1561550850507034E-5	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999708268801317	WITHOUT_CLASSIFICATION	2.917311986820259E-5	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999912073129	WITHOUT_CLASSIFICATION	8.79268724477742E-9	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999821958200273	WITHOUT_CLASSIFICATION	1.780417997267751E-5	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999951851797596	WITHOUT_CLASSIFICATION	4.814820240451684E-6	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999994079734069	WITHOUT_CLASSIFICATION	5.920265929454851E-7	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999259274112936	WITHOUT_CLASSIFICATION	7.407258870639112E-5	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999990842552996	WITHOUT_CLASSIFICATION	9.157447004695486E-7	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999843159105335	WITHOUT_CLASSIFICATION	1.568408946653644E-5	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999995825206887	WITHOUT_CLASSIFICATION	4.174793113589493E-7	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.999998305224687	WITHOUT_CLASSIFICATION	1.6947753129406312E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999968318093577	WITHOUT_CLASSIFICATION	3.168190642339802E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999968318093577	WITHOUT_CLASSIFICATION	3.168190642339802E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999968318093577	WITHOUT_CLASSIFICATION	3.168190642339802E-6	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999948178606867	WITHOUT_CLASSIFICATION	5.182139313263094E-6	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999963059117507	WITHOUT_CLASSIFICATION	3.6940882494053505E-6	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999983897062479	WITHOUT_CLASSIFICATION	1.6102937521475227E-6	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999870955989308	WITHOUT_CLASSIFICATION	1.2904401069066191E-5	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.999992406585444	WITHOUT_CLASSIFICATION	7.593414555954086E-6	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999971773264705	WITHOUT_CLASSIFICATION	2.8226735295243046E-6	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999999772010518	WITHOUT_CLASSIFICATION	2.2798948140585232E-8	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999838378702007	WITHOUT_CLASSIFICATION	1.6162129799246582E-5	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999980660184905	WITHOUT_CLASSIFICATION	1.933981509508563E-6	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999996663569356	WITHOUT_CLASSIFICATION	3.336430643469035E-7	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9945916541845586	WITHOUT_CLASSIFICATION	0.0054083458154413734	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999249403427589	WITHOUT_CLASSIFICATION	7.505965724106223E-5	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.999984488107474	WITHOUT_CLASSIFICATION	1.5511892526012415E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999971871733	WITHOUT_CLASSIFICATION	2.8128268700120706E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999971871733	WITHOUT_CLASSIFICATION	2.8128268700120706E-9	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999533515820472	WITHOUT_CLASSIFICATION	4.664841795276417E-5	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9955878195428485	WITHOUT_CLASSIFICATION	0.004412180457151571	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9998166543112598	WITHOUT_CLASSIFICATION	1.8334568874015683E-4	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999996658942679	WITHOUT_CLASSIFICATION	3.3410573210331017E-7	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999708268801317	WITHOUT_CLASSIFICATION	2.917311986820259E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.999998771290721	WITHOUT_CLASSIFICATION	1.228709278883506E-6	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999912073129	WITHOUT_CLASSIFICATION	8.79268724477742E-9	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999994079734069	WITHOUT_CLASSIFICATION	5.920265929454851E-7	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999951851797596	WITHOUT_CLASSIFICATION	4.814820240451684E-6	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999990842552996	WITHOUT_CLASSIFICATION	9.157447004695486E-7	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9997009421520567	WITHOUT_CLASSIFICATION	2.990578479432317E-4	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999995784794544	WITHOUT_CLASSIFICATION	4.2152054558548786E-7	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9997776745408633	WITHOUT_CLASSIFICATION	2.2232545913661195E-4	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.999999812823876	WITHOUT_CLASSIFICATION	1.871761239927087E-7	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999975547298985	WITHOUT_CLASSIFICATION	2.4452701014898963E-6	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999985151680459	WITHOUT_CLASSIFICATION	1.4848319540139422E-6	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999913775637232	WITHOUT_CLASSIFICATION	8.622436276756739E-6	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9996129578998472	WITHOUT_CLASSIFICATION	3.870421001528494E-4	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999254300938608	WITHOUT_CLASSIFICATION	7.45699061390781E-5	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999699037458729	WITHOUT_CLASSIFICATION	3.0096254127188752E-5	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999918018476626	WITHOUT_CLASSIFICATION	8.198152337471696E-6	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999971231679167	WITHOUT_CLASSIFICATION	2.8768320832820304E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999819206149	WITHOUT_CLASSIFICATION	1.8079385086839095E-8	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999993808056554	WITHOUT_CLASSIFICATION	6.191943445453317E-7	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999434183214	WITHOUT_CLASSIFICATION	5.6581678564150896E-8	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999688726331	WITHOUT_CLASSIFICATION	3.112736687138606E-8	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999995495748107	WITHOUT_CLASSIFICATION	4.5042518924664663E-7	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999965037059461	WITHOUT_CLASSIFICATION	3.4962940540135823E-6	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999924199909812	WITHOUT_CLASSIFICATION	7.580009018704301E-6	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999795844176196	WITHOUT_CLASSIFICATION	2.0415582380350145E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9905897713362478	WITHOUT_CLASSIFICATION	0.009410228663752232	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999993673459779	WITHOUT_CLASSIFICATION	6.326540219763655E-7	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999993673459779	WITHOUT_CLASSIFICATION	6.326540219763655E-7	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999996272502687	WITHOUT_CLASSIFICATION	3.7274973132257283E-7	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.999122043999584	WITHOUT_CLASSIFICATION	8.77956000415921E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996195327989991	WITHOUT_CLASSIFICATION	3.8046720100084965E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996195327989991	WITHOUT_CLASSIFICATION	3.8046720100084965E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996195327989991	WITHOUT_CLASSIFICATION	3.8046720100084965E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999884247116948	WITHOUT_CLASSIFICATION	1.157528830524413E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999884247116948	WITHOUT_CLASSIFICATION	1.157528830524413E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999884247116948	WITHOUT_CLASSIFICATION	1.157528830524413E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999884247116948	WITHOUT_CLASSIFICATION	1.157528830524413E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.999989713585621	WITHOUT_CLASSIFICATION	1.0286414378868117E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.999989713585621	WITHOUT_CLASSIFICATION	1.0286414378868117E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.999989713585621	WITHOUT_CLASSIFICATION	1.0286414378868117E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.999978444575866	WITHOUT_CLASSIFICATION	2.1555424133999314E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.999978444575866	WITHOUT_CLASSIFICATION	2.1555424133999314E-5	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999883278356064	WITHOUT_CLASSIFICATION	1.1672164393545495E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999920490384293	WITHOUT_CLASSIFICATION	7.950961570759178E-6	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.999122043999584	WITHOUT_CLASSIFICATION	8.77956000415921E-4	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999973067289921	WITHOUT_CLASSIFICATION	2.693271007955542E-6	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996195327989991	WITHOUT_CLASSIFICATION	3.8046720100084965E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996195327989991	WITHOUT_CLASSIFICATION	3.8046720100084965E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999884247116948	WITHOUT_CLASSIFICATION	1.157528830524413E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999884247116948	WITHOUT_CLASSIFICATION	1.157528830524413E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999884247116948	WITHOUT_CLASSIFICATION	1.157528830524413E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.999989713585621	WITHOUT_CLASSIFICATION	1.0286414378868117E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.999989713585621	WITHOUT_CLASSIFICATION	1.0286414378868117E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.999978444575866	WITHOUT_CLASSIFICATION	2.1555424133999314E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999920490384293	WITHOUT_CLASSIFICATION	7.950961570759178E-6	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.999854629211608	WITHOUT_CLASSIFICATION	1.4537078839201693E-4	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.999854629211608	WITHOUT_CLASSIFICATION	1.4537078839201693E-4	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999750347351	WITHOUT_CLASSIFICATION	2.496526486008505E-8	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999750347351	WITHOUT_CLASSIFICATION	2.496526486008505E-8	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999944602927491	WITHOUT_CLASSIFICATION	5.539707250890863E-6	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999944602927491	WITHOUT_CLASSIFICATION	5.539707250890863E-6	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999124399297892	WITHOUT_CLASSIFICATION	8.756007021086897E-5	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999828363884097	WITHOUT_CLASSIFICATION	1.7163611590315556E-5	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999828363884097	WITHOUT_CLASSIFICATION	1.7163611590315556E-5	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999706694196197	WITHOUT_CLASSIFICATION	2.9330580380368743E-5	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999706694196197	WITHOUT_CLASSIFICATION	2.9330580380368743E-5	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999999900118584	WITHOUT_CLASSIFICATION	9.988141527291403E-9	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999782558315193	WITHOUT_CLASSIFICATION	2.1744168480589764E-5	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999782558315193	WITHOUT_CLASSIFICATION	2.1744168480589764E-5	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999841960737694	WITHOUT_CLASSIFICATION	1.5803926230627316E-5	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999360113661281	WITHOUT_CLASSIFICATION	6.3988633871943E-5	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999992792681023	WITHOUT_CLASSIFICATION	7.207318977091088E-7	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999884247116948	WITHOUT_CLASSIFICATION	1.157528830524413E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999884247116948	WITHOUT_CLASSIFICATION	1.157528830524413E-5	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999841960737694	WITHOUT_CLASSIFICATION	1.5803926230627316E-5	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999999686364773	WITHOUT_CLASSIFICATION	3.1363522620196275E-8	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999846326891398	WITHOUT_CLASSIFICATION	1.5367310860190915E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999846326891398	WITHOUT_CLASSIFICATION	1.5367310860190915E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999846326891398	WITHOUT_CLASSIFICATION	1.5367310860190915E-5	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999975457386724	WITHOUT_CLASSIFICATION	2.4542613275928836E-6	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999997671046524	WITHOUT_CLASSIFICATION	2.3289534753636237E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999998525302404	WITHOUT_CLASSIFICATION	1.474697596008356E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999998525302404	WITHOUT_CLASSIFICATION	1.474697596008356E-6	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999989913680025	WITHOUT_CLASSIFICATION	1.0086319974820813E-6	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999964701350933	WITHOUT_CLASSIFICATION	3.529864906613157E-6	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999999686668166	WITHOUT_CLASSIFICATION	3.133318330047091E-8	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999998253019099	WITHOUT_CLASSIFICATION	1.7469809019918655E-7	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999978323575066	WITHOUT_CLASSIFICATION	2.1676424934035274E-6	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999947125077281	WITHOUT_CLASSIFICATION	5.2874922718554095E-6	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999947125077281	WITHOUT_CLASSIFICATION	5.2874922718554095E-6	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9996468989304396	WITHOUT_CLASSIFICATION	3.5310106956045373E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999867082902798	WITHOUT_CLASSIFICATION	1.3291709720106673E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999867082902798	WITHOUT_CLASSIFICATION	1.3291709720106673E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999884247116948	WITHOUT_CLASSIFICATION	1.157528830524413E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999846326891398	WITHOUT_CLASSIFICATION	1.5367310860190915E-5	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999997671046524	WITHOUT_CLASSIFICATION	2.3289534753636237E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999998525302404	WITHOUT_CLASSIFICATION	1.474697596008356E-6	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999989913680025	WITHOUT_CLASSIFICATION	1.0086319974820813E-6	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999964701350933	WITHOUT_CLASSIFICATION	3.529864906613157E-6	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999999686668166	WITHOUT_CLASSIFICATION	3.133318330047091E-8	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999998253019099	WITHOUT_CLASSIFICATION	1.7469809019918655E-7	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999867082902798	WITHOUT_CLASSIFICATION	1.3291709720106673E-5	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999999211580224	WITHOUT_CLASSIFICATION	7.884197756933936E-8	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999976656886269	WITHOUT_CLASSIFICATION	2.3343113731380273E-6	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999984485697372	WITHOUT_CLASSIFICATION	1.551430262854118E-6	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999961311362509	WITHOUT_CLASSIFICATION	3.8688637492237616E-6	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999996618189333	WITHOUT_CLASSIFICATION	3.381810667415335E-7	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999999664113761	WITHOUT_CLASSIFICATION	3.358862392342287E-8	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999952694163485	WITHOUT_CLASSIFICATION	4.73058365153466E-6	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999952694163485	WITHOUT_CLASSIFICATION	4.73058365153466E-6	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999969855498672	WITHOUT_CLASSIFICATION	3.0144501328692257E-6	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999995663770901	WITHOUT_CLASSIFICATION	4.336229098401303E-7	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999999297484437	WITHOUT_CLASSIFICATION	7.025155640012984E-8	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999998265235363	WITHOUT_CLASSIFICATION	1.734764637491476E-7	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999990913996902	WITHOUT_CLASSIFICATION	9.086003097585794E-7	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999990913996902	WITHOUT_CLASSIFICATION	9.086003097585794E-7	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999996210460043	WITHOUT_CLASSIFICATION	3.789539957933975E-7	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999999319400261	WITHOUT_CLASSIFICATION	6.805997396724391E-8	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999993339275437	WITHOUT_CLASSIFICATION	6.660724563365245E-7	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999993339275437	WITHOUT_CLASSIFICATION	6.660724563365245E-7	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999997264996905	WITHOUT_CLASSIFICATION	2.73500309512156E-7	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999775194575993	WITHOUT_CLASSIFICATION	2.248054240071556E-5	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999978323575066	WITHOUT_CLASSIFICATION	2.1676424934035274E-6	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999806221630491	WITHOUT_CLASSIFICATION	1.93778369510492E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999996888557283	WITHOUT_CLASSIFICATION	3.111442716541787E-7	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999999333463012	WITHOUT_CLASSIFICATION	6.665369879433587E-7	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999999825529173	WITHOUT_CLASSIFICATION	1.744708267471443E-8	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.9999986013345161	WITHOUT_CLASSIFICATION	1.3986654839151015E-6	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9998924763700928	WITHOUT_CLASSIFICATION	1.0752362990716317E-4	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.999999883661721	WITHOUT_CLASSIFICATION	1.1633827901953497E-7	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999991103770272	WITHOUT_CLASSIFICATION	8.896229727383586E-7	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.999997944034834	WITHOUT_CLASSIFICATION	2.0559651660019214E-6	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.999997944034834	WITHOUT_CLASSIFICATION	2.0559651660019214E-6	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999973043544713	WITHOUT_CLASSIFICATION	2.695645528644743E-6	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999973043544713	WITHOUT_CLASSIFICATION	2.695645528644743E-6	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.999999952767999	WITHOUT_CLASSIFICATION	4.723200088518762E-8	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999984337101395	WITHOUT_CLASSIFICATION	1.5662898605543975E-6	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999984337101395	WITHOUT_CLASSIFICATION	1.5662898605543975E-6	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999984337101395	WITHOUT_CLASSIFICATION	1.5662898605543975E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999990366068154	WITHOUT_CLASSIFICATION	9.633931845455733E-7	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9992819464370493	WITHOUT_CLASSIFICATION	7.180535629507954E-4	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9992819464370493	WITHOUT_CLASSIFICATION	7.180535629507954E-4	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999851160124062	WITHOUT_CLASSIFICATION	1.4883987593698093E-5	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.999970089254261	WITHOUT_CLASSIFICATION	2.991074573898756E-5	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.999997286251292	WITHOUT_CLASSIFICATION	2.713748708107867E-6	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9999896598119736	WITHOUT_CLASSIFICATION	1.0340188026423223E-5	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999661844793294	WITHOUT_CLASSIFICATION	3.3815520670650374E-5	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9977716156433617	WITHOUT_CLASSIFICATION	0.002228384356638327	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999999195842806	WITHOUT_CLASSIFICATION	8.04157193925768E-8	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999819206149	WITHOUT_CLASSIFICATION	1.8079385086839095E-8	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999819206149	WITHOUT_CLASSIFICATION	1.8079385086839095E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999990366068154	WITHOUT_CLASSIFICATION	9.633931845455733E-7	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999851160124062	WITHOUT_CLASSIFICATION	1.4883987593698093E-5	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999860653521427	WITHOUT_CLASSIFICATION	1.3934647857411106E-5	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.999970089254261	WITHOUT_CLASSIFICATION	2.991074573898756E-5	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.999997286251292	WITHOUT_CLASSIFICATION	2.713748708107867E-6	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999284407862695	WITHOUT_CLASSIFICATION	7.15592137305154E-5	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9999822173237217	WITHOUT_CLASSIFICATION	1.7782676278259565E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999987220198504	WITHOUT_CLASSIFICATION	1.2779801496331302E-6	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.9998965754461182	WITHOUT_CLASSIFICATION	1.034245538817761E-4	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9998349390518796	WITHOUT_CLASSIFICATION	1.650609481204672E-4	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999987845427326	WITHOUT_CLASSIFICATION	1.2154572673901209E-6	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999808112670376	WITHOUT_CLASSIFICATION	1.9188732962376828E-5	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999284407862695	WITHOUT_CLASSIFICATION	7.15592137305154E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999999662811585	WITHOUT_CLASSIFICATION	3.371884156780361E-8	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999999662811585	WITHOUT_CLASSIFICATION	3.371884156780361E-8	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999987564016268	WITHOUT_CLASSIFICATION	1.2435983731546495E-6	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999795470735717	WITHOUT_CLASSIFICATION	2.045292642822987E-5	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999803664962623	WITHOUT_CLASSIFICATION	1.963350373767666E-5	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999946431138883	WITHOUT_CLASSIFICATION	5.356886111602778E-6	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999993482966366	WITHOUT_CLASSIFICATION	6.517033633440613E-7	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999980914688265	WITHOUT_CLASSIFICATION	1.9085311735586694E-6	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999597244789461	WITHOUT_CLASSIFICATION	4.027552105383628E-5	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.999995436009624	WITHOUT_CLASSIFICATION	4.563990376011443E-6	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999931204263585	WITHOUT_CLASSIFICATION	6.87957364156575E-6	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9999992797791131	WITHOUT_CLASSIFICATION	7.202208869156536E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999951470342648	WITHOUT_CLASSIFICATION	4.8529657351785646E-6	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999946431138883	WITHOUT_CLASSIFICATION	5.356886111602778E-6	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999993482966366	WITHOUT_CLASSIFICATION	6.517033633440613E-7	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999889813034131	WITHOUT_CLASSIFICATION	1.101869658691096E-5	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9999987295612063	WITHOUT_CLASSIFICATION	1.2704387937559057E-6	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.999999939439348	WITHOUT_CLASSIFICATION	6.056065207868604E-8	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999733585366316	WITHOUT_CLASSIFICATION	2.6641463368450595E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999996065594285	WITHOUT_CLASSIFICATION	3.9344057151149727E-7	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.999999501557039	WITHOUT_CLASSIFICATION	4.984429610168605E-7	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9999503368295808	WITHOUT_CLASSIFICATION	4.966317041913251E-5	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9999766022629761	WITHOUT_CLASSIFICATION	2.33977370238671E-5	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999909590937515	WITHOUT_CLASSIFICATION	9.040906248566944E-6	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999979743745725	WITHOUT_CLASSIFICATION	2.0256254275679205E-6	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999978696922783	WITHOUT_CLASSIFICATION	2.130307721597692E-6	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9998578571218188	WITHOUT_CLASSIFICATION	1.4214287818126685E-4	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.999993077940826	WITHOUT_CLASSIFICATION	6.92205917392748E-6	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999998751459577	WITHOUT_CLASSIFICATION	1.2485404229200988E-7	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999999998926172	WITHOUT_CLASSIFICATION	1.0738284882210498E-10	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999836633576	WITHOUT_CLASSIFICATION	1.6336642416711306E-8	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9998745902377679	WITHOUT_CLASSIFICATION	1.2540976223212772E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999954425434157	WITHOUT_CLASSIFICATION	4.55745658428071E-6	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999998061497	WITHOUT_CLASSIFICATION	1.9385041909228515E-10	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999854845524979	WITHOUT_CLASSIFICATION	1.4515447502002931E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9998745902377679	WITHOUT_CLASSIFICATION	1.2540976223212772E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999954425434157	WITHOUT_CLASSIFICATION	4.55745658428071E-6	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999998061497	WITHOUT_CLASSIFICATION	1.9385041909228515E-10	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.999999758925552	WITHOUT_CLASSIFICATION	2.4107444802949603E-7	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999970149238508	WITHOUT_CLASSIFICATION	2.985076149165695E-6	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999919532816867	WITHOUT_CLASSIFICATION	8.046718313417296E-6	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999939421104433	WITHOUT_CLASSIFICATION	6.057889556712162E-6	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999999400954153	WITHOUT_CLASSIFICATION	5.99045848287359E-8	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999946968972986	WITHOUT_CLASSIFICATION	5.303102701307939E-6	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999921271295962	WITHOUT_CLASSIFICATION	7.87287040379258E-6	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9978854417608835	WITHOUT_CLASSIFICATION	0.0021145582391164973	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9999813973128551	WITHOUT_CLASSIFICATION	1.8602687144950402E-5	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9999992656106365	WITHOUT_CLASSIFICATION	7.34389363505333E-7	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.997535386006673	WITHOUT_CLASSIFICATION	0.002464613993327087	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.999999173234355	WITHOUT_CLASSIFICATION	8.267656450935809E-7	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999996095755921	WITHOUT_CLASSIFICATION	3.9042440795347976E-7	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9998417688896912	WITHOUT_CLASSIFICATION	1.582311103087809E-4	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999985555575915	WITHOUT_CLASSIFICATION	1.4444424084262392E-6	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999919042838364	WITHOUT_CLASSIFICATION	8.095716163651883E-6	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.999985207303524	WITHOUT_CLASSIFICATION	1.4792696475945862E-5	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999950533855579	WITHOUT_CLASSIFICATION	4.946614442047921E-6	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999685024562838	WITHOUT_CLASSIFICATION	3.1497543716261223E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999949432608569	WITHOUT_CLASSIFICATION	5.0567391430609334E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.999996971420909	WITHOUT_CLASSIFICATION	3.0285790909515054E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999787197766856	WITHOUT_CLASSIFICATION	2.1280223314366435E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999787197766856	WITHOUT_CLASSIFICATION	2.1280223314366435E-5	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999943139965296	WITHOUT_CLASSIFICATION	5.686003470448119E-6	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999943139965296	WITHOUT_CLASSIFICATION	5.686003470448119E-6	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999981811013295	WITHOUT_CLASSIFICATION	1.818898670502431E-6	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999981811013295	WITHOUT_CLASSIFICATION	1.818898670502431E-6	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999746399719274	WITHOUT_CLASSIFICATION	2.536002807264975E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999522171082	WITHOUT_CLASSIFICATION	4.77828917731283E-8	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999919633642617	WITHOUT_CLASSIFICATION	8.036635738323542E-6	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999956897587519	WITHOUT_CLASSIFICATION	4.310241248103425E-6	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999985727432	WITHOUT_CLASSIFICATION	1.4272567397595984E-9	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999998934427715	WITHOUT_CLASSIFICATION	1.0655722846751029E-7	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999999524095307	WITHOUT_CLASSIFICATION	4.759046940235661E-8	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.999995216608087	WITHOUT_CLASSIFICATION	4.783391912962949E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999819206149	WITHOUT_CLASSIFICATION	1.8079385086839095E-8	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999746399719274	WITHOUT_CLASSIFICATION	2.536002807264975E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999522171082	WITHOUT_CLASSIFICATION	4.77828917731283E-8	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999919633642617	WITHOUT_CLASSIFICATION	8.036635738323542E-6	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999985727432	WITHOUT_CLASSIFICATION	1.4272567397595984E-9	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999998934427715	WITHOUT_CLASSIFICATION	1.0655722846751029E-7	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999999332902666	WITHOUT_CLASSIFICATION	6.670973342922795E-8	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9999992704868971	WITHOUT_CLASSIFICATION	7.295131029470438E-7	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9997997825692916	WITHOUT_CLASSIFICATION	2.0021743070838707E-4	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9997997825692916	WITHOUT_CLASSIFICATION	2.0021743070838707E-4	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999962977577486	WITHOUT_CLASSIFICATION	3.7022422515225193E-6	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999998072412901	WITHOUT_CLASSIFICATION	1.9275870987236285E-7	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999914055634744	WITHOUT_CLASSIFICATION	8.59443652568273E-6	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999988121657082	WITHOUT_CLASSIFICATION	1.1878342917490402E-6	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999988121657082	WITHOUT_CLASSIFICATION	1.1878342917490402E-6	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999999824410747	WITHOUT_CLASSIFICATION	1.7558925312821908E-8	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.999999992016171	WITHOUT_CLASSIFICATION	7.98382903356582E-9	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999998647435648	WITHOUT_CLASSIFICATION	1.352564351998782E-7	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9998739914970535	WITHOUT_CLASSIFICATION	1.2600850294644146E-4	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999998331769508	WITHOUT_CLASSIFICATION	1.6682304916223622E-7	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999993808056554	WITHOUT_CLASSIFICATION	6.191943445453317E-7	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999434183214	WITHOUT_CLASSIFICATION	5.6581678564150896E-8	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999688726331	WITHOUT_CLASSIFICATION	3.112736687138606E-8	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999995495748107	WITHOUT_CLASSIFICATION	4.5042518924664663E-7	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999795844176196	WITHOUT_CLASSIFICATION	2.0415582380350145E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9905897713362478	WITHOUT_CLASSIFICATION	0.009410228663752232	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999999824410747	WITHOUT_CLASSIFICATION	1.7558925312821908E-8	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.999999992016171	WITHOUT_CLASSIFICATION	7.98382903356582E-9	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9998739914970535	WITHOUT_CLASSIFICATION	1.2600850294644146E-4	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9995612619698403	WITHOUT_CLASSIFICATION	4.3873803015965135E-4	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999914055634744	WITHOUT_CLASSIFICATION	8.59443652568273E-6	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999914055634744	WITHOUT_CLASSIFICATION	8.59443652568273E-6	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999951470342648	WITHOUT_CLASSIFICATION	4.8529657351785646E-6	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999951470342648	WITHOUT_CLASSIFICATION	4.8529657351785646E-6	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.7131466673771978	WITHOUT_CLASSIFICATION	0.28685333262280216	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.7131466673771978	WITHOUT_CLASSIFICATION	0.28685333262280216	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999999871484675	WITHOUT_CLASSIFICATION	1.2851532602044608E-8	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999997695297459	WITHOUT_CLASSIFICATION	2.3047025416999876E-7	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999714879236954	WITHOUT_CLASSIFICATION	2.851207630452325E-5	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999997754255833	WITHOUT_CLASSIFICATION	2.2457441681736298E-7	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999999999285188	WITHOUT_CLASSIFICATION	7.148116666400116E-11	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.999999922770851	WITHOUT_CLASSIFICATION	7.722914898391288E-8	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.999999043182375	WITHOUT_CLASSIFICATION	9.568176251018508E-7	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999998234830006	WITHOUT_CLASSIFICATION	1.7651699943239313E-7	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999993033066159	WITHOUT_CLASSIFICATION	6.966933840874272E-7	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999984958612228	WITHOUT_CLASSIFICATION	1.5041387772872277E-6	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999964200440612	WITHOUT_CLASSIFICATION	3.579955938847998E-6	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9999994434929487	WITHOUT_CLASSIFICATION	5.56507051293597E-7	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999993352249366	WITHOUT_CLASSIFICATION	6.647750634959665E-7	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999999155968649	WITHOUT_CLASSIFICATION	8.44031351761954E-8	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999951394654267	WITHOUT_CLASSIFICATION	4.860534573271648E-6	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.999779920484194	WITHOUT_CLASSIFICATION	2.2007951580594462E-4	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9999990364511496	WITHOUT_CLASSIFICATION	9.635488503824408E-7	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999989338361006	WITHOUT_CLASSIFICATION	1.0661638994679904E-6	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9993384176069	WITHOUT_CLASSIFICATION	6.615823930999139E-4	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999434183214	WITHOUT_CLASSIFICATION	5.6581678564150896E-8	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999995495748107	WITHOUT_CLASSIFICATION	4.5042518924664663E-7	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999993673459779	WITHOUT_CLASSIFICATION	6.326540219763655E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999998525302404	WITHOUT_CLASSIFICATION	1.474697596008356E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999998525302404	WITHOUT_CLASSIFICATION	1.474697596008356E-6	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9995612619698403	WITHOUT_CLASSIFICATION	4.3873803015965135E-4	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999914055634744	WITHOUT_CLASSIFICATION	8.59443652568273E-6	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999951470342648	WITHOUT_CLASSIFICATION	4.8529657351785646E-6	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.7131466673771978	WITHOUT_CLASSIFICATION	0.28685333262280216	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999860672410412	WITHOUT_CLASSIFICATION	1.393275895879391E-5	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999592129726755	WITHOUT_CLASSIFICATION	4.078702732443356E-5	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999998419158764	WITHOUT_CLASSIFICATION	1.580841236177676E-7	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.999995805371468	WITHOUT_CLASSIFICATION	4.194628531946389E-6	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999992425144024	WITHOUT_CLASSIFICATION	7.57485597522845E-7	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999992425144024	WITHOUT_CLASSIFICATION	7.57485597522845E-7	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999999592217734	WITHOUT_CLASSIFICATION	4.0778226679139975E-8	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999975185246442	WITHOUT_CLASSIFICATION	2.48147535575964E-6	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999991565045728	WITHOUT_CLASSIFICATION	8.434954272409039E-7	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999991674958034	WITHOUT_CLASSIFICATION	8.325041967320319E-7	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999992732012467	WITHOUT_CLASSIFICATION	7.267987532236502E-7	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999992732012467	WITHOUT_CLASSIFICATION	7.267987532236502E-7	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999975963516476	WITHOUT_CLASSIFICATION	2.40364835242382E-6	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9999779108377129	WITHOUT_CLASSIFICATION	2.2089162287038237E-5	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999999128482042	WITHOUT_CLASSIFICATION	8.715179567245434E-8	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999764411731307	WITHOUT_CLASSIFICATION	2.3558826869357632E-5	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999862823187686	WITHOUT_CLASSIFICATION	1.3717681231425587E-5	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999999363076196	WITHOUT_CLASSIFICATION	6.369238027966122E-8	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999988482140924	WITHOUT_CLASSIFICATION	1.15178590761286E-6	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999999130435779	WITHOUT_CLASSIFICATION	8.695642204701415E-8	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9956266870387678	WITHOUT_CLASSIFICATION	0.00437331296123224	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9042809995128883	WITHOUT_CLASSIFICATION	0.0957190004871117	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999994161143658	WITHOUT_CLASSIFICATION	5.83885634221227E-7	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999998537234286	WITHOUT_CLASSIFICATION	1.4627657136020927E-7	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999998909796309	WITHOUT_CLASSIFICATION	1.0902036905365376E-7	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999983587538124	WITHOUT_CLASSIFICATION	1.6412461875671762E-6	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999959078556039	WITHOUT_CLASSIFICATION	4.092144396033569E-6	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9998864371478526	WITHOUT_CLASSIFICATION	1.1356285214736882E-4	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999999975380252	WITHOUT_CLASSIFICATION	2.461974871400188E-9	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999385808473608	WITHOUT_CLASSIFICATION	6.14191526392262E-5	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999995616734376	WITHOUT_CLASSIFICATION	4.383265623709081E-7	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999987186833549	WITHOUT_CLASSIFICATION	1.2813166450615482E-6	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999933166265337	WITHOUT_CLASSIFICATION	6.683373466232387E-6	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999987030870807	WITHOUT_CLASSIFICATION	1.2969129192939812E-6	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999987030870807	WITHOUT_CLASSIFICATION	1.2969129192939812E-6	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999984188383263	WITHOUT_CLASSIFICATION	1.5811616737247692E-6	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999999344759212	WITHOUT_CLASSIFICATION	6.552407884211595E-8	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999966303620245	WITHOUT_CLASSIFICATION	3.3696379756674024E-6	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999966303620245	WITHOUT_CLASSIFICATION	3.3696379756674024E-6	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9979003783335132	WITHOUT_CLASSIFICATION	0.0020996216664868252	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999998391619561	WITHOUT_CLASSIFICATION	1.6083804392397512E-7	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999867290994672	WITHOUT_CLASSIFICATION	1.3270900532729646E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999825022279	WITHOUT_CLASSIFICATION	1.7497772078316804E-8	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999825022279	WITHOUT_CLASSIFICATION	1.7497772078316804E-8	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999505110677235	WITHOUT_CLASSIFICATION	4.948893227644598E-5	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999669074062	WITHOUT_CLASSIFICATION	3.309259385796218E-8	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999967407227395	WITHOUT_CLASSIFICATION	3.2592772605729314E-6	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999992152627365	WITHOUT_CLASSIFICATION	7.847372636047945E-7	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9995997489601871	WITHOUT_CLASSIFICATION	4.0025103981277917E-4	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999999568491766	WITHOUT_CLASSIFICATION	4.3150823499901786E-8	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999988314993409	WITHOUT_CLASSIFICATION	1.1685006592012337E-6	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.999998982296955	WITHOUT_CLASSIFICATION	1.0177030449578291E-6	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9999976802366449	WITHOUT_CLASSIFICATION	2.3197633550457457E-6	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999677677151467	WITHOUT_CLASSIFICATION	3.223228485325357E-5	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999849493833852	WITHOUT_CLASSIFICATION	1.5050616614696096E-5	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9998929660682786	WITHOUT_CLASSIFICATION	1.0703393172131863E-4	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9999995412289481	WITHOUT_CLASSIFICATION	4.587710518626099E-7	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999998669098935	WITHOUT_CLASSIFICATION	1.330901063978363E-7	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.998263290714	WITHOUT_CLASSIFICATION	0.0017367092859999816	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999959481523659	WITHOUT_CLASSIFICATION	4.051847634079461E-6	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999954840426	WITHOUT_CLASSIFICATION	4.515957417368882E-9	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999959884313661	WITHOUT_CLASSIFICATION	4.011568633928898E-6	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999574178941644	WITHOUT_CLASSIFICATION	4.258210583573974E-5	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999997979831676	WITHOUT_CLASSIFICATION	2.0201683232482803E-7	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9999649462648291	WITHOUT_CLASSIFICATION	3.50537351709376E-5	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9999990824736298	WITHOUT_CLASSIFICATION	9.175263702693716E-7	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999643039405346	WITHOUT_CLASSIFICATION	3.569605946535739E-5	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999932964272982	WITHOUT_CLASSIFICATION	6.703572701815111E-6	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.999992741399614	WITHOUT_CLASSIFICATION	7.258600386010384E-6	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999984826990292	WITHOUT_CLASSIFICATION	1.5173009706892455E-6	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9925168874163417	WITHOUT_CLASSIFICATION	0.00748311258365824	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999279930555	WITHOUT_CLASSIFICATION	7.200694452131222E-8	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999984463664912	WITHOUT_CLASSIFICATION	1.5536335088130551E-6	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999997284552802	WITHOUT_CLASSIFICATION	2.715447198137101E-7	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999982841743893	WITHOUT_CLASSIFICATION	1.7158256107015168E-6	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999998669098935	WITHOUT_CLASSIFICATION	1.330901063978363E-7	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999279930555	WITHOUT_CLASSIFICATION	7.200694452131222E-8	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999984463664912	WITHOUT_CLASSIFICATION	1.5536335088130551E-6	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999982841743893	WITHOUT_CLASSIFICATION	1.7158256107015168E-6	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999973191508021	WITHOUT_CLASSIFICATION	2.68084919788614E-6	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9999941561505357	WITHOUT_CLASSIFICATION	5.843849464306225E-6	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999931783120029	WITHOUT_CLASSIFICATION	6.8216879972140594E-6	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999997256978399	WITHOUT_CLASSIFICATION	2.7430216017028244E-7	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999996412873599	WITHOUT_CLASSIFICATION	3.587126401713247E-7	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999979653763952	WITHOUT_CLASSIFICATION	2.0346236047506987E-6	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9999946686415163	WITHOUT_CLASSIFICATION	5.331358483658122E-6	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.999998017766502	WITHOUT_CLASSIFICATION	1.9822334979329823E-6	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9999904219093577	WITHOUT_CLASSIFICATION	9.57809064230957E-6	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999995606530854	WITHOUT_CLASSIFICATION	4.393469146471962E-7	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999997276740097	WITHOUT_CLASSIFICATION	2.7232599027999454E-7	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999997276740097	WITHOUT_CLASSIFICATION	2.7232599027999454E-7	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999998833389854	WITHOUT_CLASSIFICATION	1.1666101460757345E-7	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999933861547423	WITHOUT_CLASSIFICATION	6.613845257683818E-6	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999995270868728	WITHOUT_CLASSIFICATION	4.729131271851166E-7	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999713511255873	WITHOUT_CLASSIFICATION	2.8648874412674877E-5	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999977486161298	WITHOUT_CLASSIFICATION	2.2513838702292705E-6	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999999102020426	WITHOUT_CLASSIFICATION	8.979795742804835E-8	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.999999636662191	WITHOUT_CLASSIFICATION	3.6333780903837426E-7	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999987685841023	WITHOUT_CLASSIFICATION	1.2314158977513372E-6	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999999863794368	WITHOUT_CLASSIFICATION	1.3620563187669356E-8	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999955556431371	WITHOUT_CLASSIFICATION	4.444356862817421E-6	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999995799353663	WITHOUT_CLASSIFICATION	4.200646337464586E-7	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999924162211163	WITHOUT_CLASSIFICATION	7.583778883751861E-6	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999999844946212	WITHOUT_CLASSIFICATION	1.550537878451571E-8	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999913149789331	WITHOUT_CLASSIFICATION	8.68502106682732E-6	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9999984647438832	WITHOUT_CLASSIFICATION	1.5352561167423183E-6	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999096236584146	WITHOUT_CLASSIFICATION	9.037634158545746E-5	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9999996920307519	WITHOUT_CLASSIFICATION	3.079692481040444E-7	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9999988255766299	WITHOUT_CLASSIFICATION	1.1744233700771884E-6	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9999909861910212	WITHOUT_CLASSIFICATION	9.01380897881244E-6	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9999991362009112	WITHOUT_CLASSIFICATION	8.63799088804011E-7	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9999994112177077	WITHOUT_CLASSIFICATION	5.887822922139002E-7	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9999953113233038	WITHOUT_CLASSIFICATION	4.6886766963187E-6	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999993498835061	WITHOUT_CLASSIFICATION	6.501164939974061E-7	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9998815963274913	WITHOUT_CLASSIFICATION	1.184036725087599E-4	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999991569858518	WITHOUT_CLASSIFICATION	8.43014148220768E-7	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9999972687867835	WITHOUT_CLASSIFICATION	2.731213216570962E-6	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999936983440864	WITHOUT_CLASSIFICATION	6.3016559136417806E-6	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999875071030936	WITHOUT_CLASSIFICATION	1.2492896906390684E-5	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.9999994637419399	WITHOUT_CLASSIFICATION	5.362580600247611E-7	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999999019849649	WITHOUT_CLASSIFICATION	9.801503507192812E-8	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999999888267932	WITHOUT_CLASSIFICATION	1.1173206779541613E-8	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.999999757421704	WITHOUT_CLASSIFICATION	2.4257829596216214E-7	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999999977283027	WITHOUT_CLASSIFICATION	2.271697333922849E-9	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999997403573093	WITHOUT_CLASSIFICATION	2.596426907227523E-7	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999999480289916	WITHOUT_CLASSIFICATION	5.1971008323867155E-8	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999985724270172	WITHOUT_CLASSIFICATION	1.4275729828281555E-6	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999999604518396	WITHOUT_CLASSIFICATION	3.954816041277029E-8	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999976447291197	WITHOUT_CLASSIFICATION	2.35527088034015E-6	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.99997336578114	WITHOUT_CLASSIFICATION	2.663421885990569E-5	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999244468921663	WITHOUT_CLASSIFICATION	7.555310783371899E-5	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999998281001691	WITHOUT_CLASSIFICATION	1.7189983096746691E-7	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.999901139217251	WITHOUT_CLASSIFICATION	9.886078274904455E-5	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.9999858039042038	WITHOUT_CLASSIFICATION	1.4196095796297031E-5	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999997684953338	WITHOUT_CLASSIFICATION	2.3150466629462764E-7	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999979763811947	WITHOUT_CLASSIFICATION	2.023618805221521E-6	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999984917795702	WITHOUT_CLASSIFICATION	1.508220429699317E-6	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9988004590977342	WITHOUT_CLASSIFICATION	0.001199540902265894	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9997912372822784	WITHOUT_CLASSIFICATION	2.087627177216201E-4	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999968020271899	WITHOUT_CLASSIFICATION	3.1979728100617537E-6	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.999999863965568	WITHOUT_CLASSIFICATION	1.3603443199232222E-7	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999578557105693	WITHOUT_CLASSIFICATION	4.2144289430834444E-5	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999988190414181	WITHOUT_CLASSIFICATION	1.180958581925763E-6	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.999819613289219	WITHOUT_CLASSIFICATION	1.803867107810047E-4	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.999999709110006	WITHOUT_CLASSIFICATION	2.908899940272783E-7	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999987574487187	WITHOUT_CLASSIFICATION	1.2425512812970076E-6	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999998989278466	WITHOUT_CLASSIFICATION	1.0107215341695935E-7	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9997339248634515	WITHOUT_CLASSIFICATION	2.6607513654846953E-4	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9996913884718497	WITHOUT_CLASSIFICATION	3.086115281503944E-4	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.8624888186127655	WITHOUT_CLASSIFICATION	0.1375111813872344	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9996330659858266	WITHOUT_CLASSIFICATION	3.6693401417338867E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9996330659858266	WITHOUT_CLASSIFICATION	3.6693401417338867E-4	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999992675630046	WITHOUT_CLASSIFICATION	7.324369954266523E-7	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999992257350846	WITHOUT_CLASSIFICATION	7.742649153850286E-7	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999997606573416	WITHOUT_CLASSIFICATION	2.39342658411245E-7	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999470126761	WITHOUT_CLASSIFICATION	5.298732391619074E-8	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999916899179591	WITHOUT_CLASSIFICATION	8.310082040889703E-6	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999956613086131	WITHOUT_CLASSIFICATION	4.338691386914318E-6	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.99997101707273	WITHOUT_CLASSIFICATION	2.8982927270025956E-5	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999915070417311	WITHOUT_CLASSIFICATION	8.4929582689261E-6	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999980166084657	WITHOUT_CLASSIFICATION	1.983391534374182E-6	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999857988409744	WITHOUT_CLASSIFICATION	1.420115902557461E-5	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999999509686462	WITHOUT_CLASSIFICATION	4.903135369613566E-8	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9999999473467759	WITHOUT_CLASSIFICATION	5.2653224185645244E-8	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999979312558162	WITHOUT_CLASSIFICATION	2.0687441838868355E-6	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9998314466959964	WITHOUT_CLASSIFICATION	1.6855330400361216E-4	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999989022321304	WITHOUT_CLASSIFICATION	1.0977678696631719E-6	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999891675879539	WITHOUT_CLASSIFICATION	1.08324120461975E-5	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9999934803032553	WITHOUT_CLASSIFICATION	6.5196967447024E-6	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999289034476	WITHOUT_CLASSIFICATION	7.109655241155434E-8	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999816735704089	WITHOUT_CLASSIFICATION	1.8326429591084264E-5	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999987443144348	WITHOUT_CLASSIFICATION	1.255685565225863E-6	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999901893568	WITHOUT_CLASSIFICATION	9.810643143544433E-9	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999999093689527	WITHOUT_CLASSIFICATION	9.063104734022865E-8	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999917745214629	WITHOUT_CLASSIFICATION	8.225478537055685E-6	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999999922344927	WITHOUT_CLASSIFICATION	7.765507301395068E-9	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999972911854551	WITHOUT_CLASSIFICATION	2.7088145449200405E-6	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999609330019859	WITHOUT_CLASSIFICATION	3.906699801418009E-5	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999995754048173	WITHOUT_CLASSIFICATION	4.2459518270870455E-7	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999831295049159	WITHOUT_CLASSIFICATION	1.6870495084108817E-5	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.999964352317541	WITHOUT_CLASSIFICATION	3.564768245890181E-5	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999961498907118	WITHOUT_CLASSIFICATION	3.85010928814577E-6	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999708810675425	WITHOUT_CLASSIFICATION	2.9118932457437078E-5	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999973653699401	WITHOUT_CLASSIFICATION	2.634630059915819E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999310265235	WITHOUT_CLASSIFICATION	6.897347651775204E-8	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9998916717657831	WITHOUT_CLASSIFICATION	1.0832823421695865E-4	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999310265235	WITHOUT_CLASSIFICATION	6.897347651775204E-8	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999957575002462	WITHOUT_CLASSIFICATION	4.242499753779115E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9991030211967054	WITHOUT_CLASSIFICATION	8.969788032947565E-4	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9991030211967054	WITHOUT_CLASSIFICATION	8.969788032947565E-4	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9991030211967054	WITHOUT_CLASSIFICATION	8.969788032947565E-4	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999869267161303	WITHOUT_CLASSIFICATION	1.307328386961261E-5	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999869267161303	WITHOUT_CLASSIFICATION	1.307328386961261E-5	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.999999572908282	WITHOUT_CLASSIFICATION	4.270917179121093E-7	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999999970842888	WITHOUT_CLASSIFICATION	2.9157111205031046E-9	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999999972849367	WITHOUT_CLASSIFICATION	2.7150632994078096E-9	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.8736704847239316	WITHOUT_CLASSIFICATION	0.12632951527606845	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999950391034506	WITHOUT_CLASSIFICATION	4.960896549451496E-6	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999948790974038	WITHOUT_CLASSIFICATION	5.1209025962269795E-6	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999981560137725	WITHOUT_CLASSIFICATION	1.8439862274811894E-6	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999906446315804	WITHOUT_CLASSIFICATION	9.355368419661987E-6	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999987753670793	WITHOUT_CLASSIFICATION	1.224632920758014E-6	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999988520364826	WITHOUT_CLASSIFICATION	1.1479635173651044E-6	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999986653199504	WITHOUT_CLASSIFICATION	1.3346800496025312E-6	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999964298545693	WITHOUT_CLASSIFICATION	3.5701454308045383E-6	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999959996017864	WITHOUT_CLASSIFICATION	4.000398213590608E-6	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9999866417546812	WITHOUT_CLASSIFICATION	1.3358245318686116E-5	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999835674515534	WITHOUT_CLASSIFICATION	1.6432548446721992E-5	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.999999892558048	WITHOUT_CLASSIFICATION	1.07441951926148E-7	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999999823142948	WITHOUT_CLASSIFICATION	1.768570526270293E-8	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999893036954942	WITHOUT_CLASSIFICATION	1.069630450586996E-5	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999893036954942	WITHOUT_CLASSIFICATION	1.069630450586996E-5	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9999854546848272	WITHOUT_CLASSIFICATION	1.454531517280235E-5	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999996265920517	WITHOUT_CLASSIFICATION	3.734079483023718E-7	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999996265920517	WITHOUT_CLASSIFICATION	3.734079483023718E-7	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999957444960901	WITHOUT_CLASSIFICATION	4.25550390991426E-6	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9999989359455284	WITHOUT_CLASSIFICATION	1.0640544715569583E-6	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9999341485128673	WITHOUT_CLASSIFICATION	6.585148713271451E-5	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9999984843187347	WITHOUT_CLASSIFICATION	1.515681265262128E-6	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9999939413924059	WITHOUT_CLASSIFICATION	6.058607593985443E-6	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999963156763056	WITHOUT_CLASSIFICATION	3.6843236943936118E-6	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9999960979418271	WITHOUT_CLASSIFICATION	3.902058172887255E-6	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999562017632797	WITHOUT_CLASSIFICATION	4.3798236720296654E-5	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999999857232577	WITHOUT_CLASSIFICATION	1.4276742369074425E-8	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999391335892809	WITHOUT_CLASSIFICATION	6.086641071918897E-5	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9994775741119196	WITHOUT_CLASSIFICATION	5.224258880804606E-4	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999449384497494	WITHOUT_CLASSIFICATION	5.5061550250561905E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999844083738264	WITHOUT_CLASSIFICATION	1.559162617360139E-5	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999744381686708	WITHOUT_CLASSIFICATION	2.556183132919944E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999906446315804	WITHOUT_CLASSIFICATION	9.355368419661987E-6	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999435035847969	WITHOUT_CLASSIFICATION	5.649641520306095E-5	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999987678929602	WITHOUT_CLASSIFICATION	1.2321070399195638E-6	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9997783609485313	WITHOUT_CLASSIFICATION	2.216390514686436E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9997783609485313	WITHOUT_CLASSIFICATION	2.216390514686436E-4	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999994296745018	WITHOUT_CLASSIFICATION	5.7032549819966E-7	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.998490995552758	WITHOUT_CLASSIFICATION	0.0015090044472420114	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999965089747779	WITHOUT_CLASSIFICATION	3.4910252221716486E-6	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9999939779277798	WITHOUT_CLASSIFICATION	6.0220722202651585E-6	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999999845130693	WITHOUT_CLASSIFICATION	1.5486930673412507E-8	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9998259666175955	WITHOUT_CLASSIFICATION	1.740333824045728E-4	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999999961728577	WITHOUT_CLASSIFICATION	3.8271422797971425E-9	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999033273447621	WITHOUT_CLASSIFICATION	9.667265523791486E-5	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999944305542606	WITHOUT_CLASSIFICATION	5.569445739372666E-6	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999094662628831	WITHOUT_CLASSIFICATION	9.053373711684569E-5	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9990883608086079	WITHOUT_CLASSIFICATION	9.116391913922139E-4	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999992164169518	WITHOUT_CLASSIFICATION	7.835830481556745E-7	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9994543799476705	WITHOUT_CLASSIFICATION	5.456200523295485E-4	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999994667679821	WITHOUT_CLASSIFICATION	5.332320178039599E-7	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.999999981665491	WITHOUT_CLASSIFICATION	1.8334509088194368E-8	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999996832119402	WITHOUT_CLASSIFICATION	3.1678805982219267E-7	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999955250705914	WITHOUT_CLASSIFICATION	4.474929408499523E-6	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999652302512737	WITHOUT_CLASSIFICATION	3.476974872628114E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999986234546713	WITHOUT_CLASSIFICATION	1.3765453287332465E-6	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999992926135987	WITHOUT_CLASSIFICATION	7.073864013975984E-7	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999935277632113	WITHOUT_CLASSIFICATION	6.472236788723232E-6	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999930981417517	WITHOUT_CLASSIFICATION	6.901858248355134E-6	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9998087145253652	WITHOUT_CLASSIFICATION	1.9128547463469927E-4	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999149992619	WITHOUT_CLASSIFICATION	8.500073818623075E-8	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.999994382464017	WITHOUT_CLASSIFICATION	5.617535983152951E-6	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999713219442496	WITHOUT_CLASSIFICATION	2.867805575028682E-5	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999958159505797	WITHOUT_CLASSIFICATION	4.184049420279493E-6	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9985301876962581	WITHOUT_CLASSIFICATION	0.0014698123037419739	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999993385436365	WITHOUT_CLASSIFICATION	6.614563634700227E-7	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999984975725381	WITHOUT_CLASSIFICATION	1.5024274618978295E-6	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999995514657074	WITHOUT_CLASSIFICATION	4.485342926407337E-7	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999965372181082	WITHOUT_CLASSIFICATION	3.462781891872467E-6	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999958063930003	WITHOUT_CLASSIFICATION	4.193606999601163E-6	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.999992416789403	WITHOUT_CLASSIFICATION	7.5832105969629295E-6	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999964315117917	WITHOUT_CLASSIFICATION	3.5684882082799904E-6	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.999999491922036	WITHOUT_CLASSIFICATION	5.080779640086128E-7	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9985301876962581	WITHOUT_CLASSIFICATION	0.0014698123037419739	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999919849813684	WITHOUT_CLASSIFICATION	8.015018631572919E-6	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999964315117917	WITHOUT_CLASSIFICATION	3.5684882082799904E-6	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999996116787756	WITHOUT_CLASSIFICATION	3.883212244635878E-7	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999992628601412	WITHOUT_CLASSIFICATION	7.371398588110478E-7	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999999409785176	WITHOUT_CLASSIFICATION	5.902148224792044E-8	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999981554505706	WITHOUT_CLASSIFICATION	1.8445494293841361E-6	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999949145923287	WITHOUT_CLASSIFICATION	5.0854076713662325E-6	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999394062045626	WITHOUT_CLASSIFICATION	6.059379543738065E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999394062045626	WITHOUT_CLASSIFICATION	6.059379543738065E-5	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.804881441364473	WITHOUT_CLASSIFICATION	0.19511855863552693	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999948818931345	WITHOUT_CLASSIFICATION	5.118106865478401E-6	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999954689091481	WITHOUT_CLASSIFICATION	4.53109085183226E-6	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999954689091481	WITHOUT_CLASSIFICATION	4.53109085183226E-6	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999941311613423	WITHOUT_CLASSIFICATION	5.868838657653556E-6	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9997056510944419	WITHOUT_CLASSIFICATION	2.9434890555818936E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9998875415866987	WITHOUT_CLASSIFICATION	1.1245841330137792E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9998875415866987	WITHOUT_CLASSIFICATION	1.1245841330137792E-4	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999649130176671	WITHOUT_CLASSIFICATION	3.5086982332924405E-5	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999907060411047	WITHOUT_CLASSIFICATION	9.293958895290557E-6	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999999873053321	WITHOUT_CLASSIFICATION	1.2694667826540595E-8	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.999999822735681	WITHOUT_CLASSIFICATION	1.7726431913307002E-7	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999993519935345	WITHOUT_CLASSIFICATION	6.4800646548011E-7	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999443370541824	WITHOUT_CLASSIFICATION	5.5662945817562355E-5	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999943478655867	WITHOUT_CLASSIFICATION	5.652134413394766E-6	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.999999779434528	WITHOUT_CLASSIFICATION	2.205654718522064E-7	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.999983934251172	WITHOUT_CLASSIFICATION	1.6065748828002044E-5	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9998739534136876	WITHOUT_CLASSIFICATION	1.260465863124591E-4	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9991137471677012	WITHOUT_CLASSIFICATION	8.862528322987085E-4	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.999983985597372	WITHOUT_CLASSIFICATION	1.601440262800258E-5	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9998938534900093	WITHOUT_CLASSIFICATION	1.0614650999074405E-4	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999364474132747	WITHOUT_CLASSIFICATION	6.355258672537287E-5	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999987784942892	WITHOUT_CLASSIFICATION	1.2215057109035443E-6	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.999989617685037	WITHOUT_CLASSIFICATION	1.038231496293651E-5	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9993487043590958	WITHOUT_CLASSIFICATION	6.512956409040847E-4	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999958539047911	WITHOUT_CLASSIFICATION	4.146095208983327E-6	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9998845482374862	WITHOUT_CLASSIFICATION	1.1545176251373797E-4	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9954265693862657	WITHOUT_CLASSIFICATION	0.004573430613734214	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999994130919403	WITHOUT_CLASSIFICATION	5.869080595928775E-7	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9988071515269776	WITHOUT_CLASSIFICATION	0.0011928484730222666	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9912337514610954	WITHOUT_CLASSIFICATION	0.00876624853890475	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999872967476048	WITHOUT_CLASSIFICATION	1.270325239524822E-5	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999777243795797	WITHOUT_CLASSIFICATION	2.2275620420364676E-5	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999971725020755	WITHOUT_CLASSIFICATION	2.8274979245044565E-6	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999997046418178	WITHOUT_CLASSIFICATION	2.9535818229374546E-7	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9999969622620417	WITHOUT_CLASSIFICATION	3.037737958417622E-6	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999998656121516	WITHOUT_CLASSIFICATION	1.3438784840351112E-7	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999998656121516	WITHOUT_CLASSIFICATION	1.3438784840351112E-7	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999999760393945	WITHOUT_CLASSIFICATION	2.396060550094833E-8	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999988136531816	WITHOUT_CLASSIFICATION	1.1863468184309686E-6	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.999998831033769	WITHOUT_CLASSIFICATION	1.1689662309878073E-6	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999812466861699	WITHOUT_CLASSIFICATION	1.8753313830013688E-5	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999994506562069	WITHOUT_CLASSIFICATION	5.493437930993519E-7	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9999867226155357	WITHOUT_CLASSIFICATION	1.3277384464458882E-5	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999651461300192	WITHOUT_CLASSIFICATION	3.485386998075368E-5	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999846641198713	WITHOUT_CLASSIFICATION	1.533588012862111E-5	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999983259312921	WITHOUT_CLASSIFICATION	1.6740687079209868E-6	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999801899694645	WITHOUT_CLASSIFICATION	1.9810030535554803E-5	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9906992263423617	WITHOUT_CLASSIFICATION	0.00930077365763818	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999997005785868	WITHOUT_CLASSIFICATION	2.994214132569123E-7	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9984471978419293	WITHOUT_CLASSIFICATION	0.0015528021580707714	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999848901104889	WITHOUT_CLASSIFICATION	1.5109889511196434E-5	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999509271214573	WITHOUT_CLASSIFICATION	4.9072878542779115E-5	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999928736627768	WITHOUT_CLASSIFICATION	7.126337223126057E-6	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9989341653460575	WITHOUT_CLASSIFICATION	0.0010658346539424862	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999997186399536	WITHOUT_CLASSIFICATION	2.813600463817082E-7	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9999952184816128	WITHOUT_CLASSIFICATION	4.781518387286906E-6	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.999975644632798	WITHOUT_CLASSIFICATION	2.4355367201982986E-5	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999849688433128	WITHOUT_CLASSIFICATION	1.5031156687124388E-5	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9996273193879622	WITHOUT_CLASSIFICATION	3.726806120376853E-4	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999917248752199	WITHOUT_CLASSIFICATION	8.275124779993112E-6	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999981378439882	WITHOUT_CLASSIFICATION	1.8621560118484978E-6	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999994376451968	WITHOUT_CLASSIFICATION	5.623548031223488E-7	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9997658999239482	WITHOUT_CLASSIFICATION	2.341000760519133E-4	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9979696340458825	WITHOUT_CLASSIFICATION	0.0020303659541175533	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999030495045591	WITHOUT_CLASSIFICATION	9.695049544084007E-5	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9999987671450944	WITHOUT_CLASSIFICATION	1.232854905579631E-6	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9999924836980505	WITHOUT_CLASSIFICATION	7.516301949542606E-6	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999996057502509	WITHOUT_CLASSIFICATION	3.9424974903139444E-7	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.999995153255179	WITHOUT_CLASSIFICATION	4.846744821085086E-6	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.999992289471907	WITHOUT_CLASSIFICATION	7.710528093108721E-6	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9999973882285613	WITHOUT_CLASSIFICATION	2.6117714386745174E-6	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999987838033794	WITHOUT_CLASSIFICATION	1.216196620579457E-6	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9996152035720356	WITHOUT_CLASSIFICATION	3.847964279643962E-4	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999901483520439	WITHOUT_CLASSIFICATION	9.851647956189601E-6	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9993767127788266	WITHOUT_CLASSIFICATION	6.232872211733967E-4	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999996053690217	WITHOUT_CLASSIFICATION	3.9463097834423105E-7	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999980042381311	WITHOUT_CLASSIFICATION	1.9957618688667067E-6	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9982739270827242	WITHOUT_CLASSIFICATION	0.0017260729172758921	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999935103725179	WITHOUT_CLASSIFICATION	6.48962748212506E-6	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999334682109321	WITHOUT_CLASSIFICATION	6.653178906786125E-5	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999334682109321	WITHOUT_CLASSIFICATION	6.653178906786125E-5	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9989081184748952	WITHOUT_CLASSIFICATION	0.001091881525104659	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999939760891061	WITHOUT_CLASSIFICATION	6.023910893896513E-6	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9666419627712554	WITHOUT_CLASSIFICATION	0.03335803722874467	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999967478669008	WITHOUT_CLASSIFICATION	3.25213309919811E-6	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999685024562838	WITHOUT_CLASSIFICATION	3.1497543716261223E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999949432608569	WITHOUT_CLASSIFICATION	5.0567391430609334E-6	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999768729686607	WITHOUT_CLASSIFICATION	2.3127031339395743E-5	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999820903402682	WITHOUT_CLASSIFICATION	1.790965973179468E-5	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999853420189995	WITHOUT_CLASSIFICATION	1.4657981000476726E-5	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9999969946491079	WITHOUT_CLASSIFICATION	3.00535089215343E-6	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9999995815509889	WITHOUT_CLASSIFICATION	4.1844901115802046E-7	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.9999970292850068	WITHOUT_CLASSIFICATION	2.9707149932196914E-6	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9999998505596459	WITHOUT_CLASSIFICATION	1.494403539731884E-7	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999999613535844	WITHOUT_CLASSIFICATION	3.8646415680229016E-8	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999997586672196	WITHOUT_CLASSIFICATION	2.4133278038956107E-7	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9999984048022247	WITHOUT_CLASSIFICATION	1.595197775347929E-6	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999998204195205	WITHOUT_CLASSIFICATION	1.7958047939045954E-7	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9999981595725053	WITHOUT_CLASSIFICATION	1.8404274947708345E-6	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999997438768349	WITHOUT_CLASSIFICATION	2.5612316502256886E-7	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9999992272012952	WITHOUT_CLASSIFICATION	7.727987046750667E-7	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999997313036156	WITHOUT_CLASSIFICATION	2.686963843818994E-7	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.999976458658394	WITHOUT_CLASSIFICATION	2.3541341606021943E-5	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999783203494216	WITHOUT_CLASSIFICATION	2.167965057832912E-5	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999927711429539	WITHOUT_CLASSIFICATION	7.2288570462005645E-6	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999792817268	WITHOUT_CLASSIFICATION	2.0718273102505894E-8	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999999973880894	WITHOUT_CLASSIFICATION	2.611910592830187E-8	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999999980498599	WITHOUT_CLASSIFICATION	1.9501400998965544E-8	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999994371869607	WITHOUT_CLASSIFICATION	5.628130392764054E-7	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999998313939659	WITHOUT_CLASSIFICATION	1.686060340882296E-7	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9999992695830513	WITHOUT_CLASSIFICATION	7.304169487409201E-7	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999997026802124	WITHOUT_CLASSIFICATION	2.973197875435906E-7	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.999983383256969	WITHOUT_CLASSIFICATION	1.6616743031076443E-5	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9997657608160386	WITHOUT_CLASSIFICATION	2.3423918396143855E-4	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9752326062117275	WITHOUT_CLASSIFICATION	0.024767393788272595	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9993767127788266	WITHOUT_CLASSIFICATION	6.232872211733967E-4	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9951071886081135	WITHOUT_CLASSIFICATION	0.004892811391886461	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999965738481028	WITHOUT_CLASSIFICATION	3.4261518972475253E-6	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999965738481028	WITHOUT_CLASSIFICATION	3.4261518972475253E-6	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.999999928175828	WITHOUT_CLASSIFICATION	7.182417211192859E-8	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999994618974255	WITHOUT_CLASSIFICATION	5.381025745771784E-7	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9997644110070351	WITHOUT_CLASSIFICATION	2.3558899296481265E-4	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.9980279567963185	WITHOUT_CLASSIFICATION	0.001972043203681443	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9596831769633077	WITHOUT_CLASSIFICATION	0.040316823036692324	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9580239075622651	WITHOUT_CLASSIFICATION	0.04197609243773496	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9687622239257322	WITHOUT_CLASSIFICATION	0.031237776074267927	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.91785417363742	WITHOUT_CLASSIFICATION	0.08214582636258001	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9288650896266997	WITHOUT_CLASSIFICATION	0.0711349103733003	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9596738850178007	WITHOUT_CLASSIFICATION	0.04032611498219934	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.8647312552796145	WITHOUT_CLASSIFICATION	0.13526874472038555	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.883818104903767	WITHOUT_CLASSIFICATION	0.11618189509623304	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9873377841624434	WITHOUT_CLASSIFICATION	0.012662215837556548	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999368718297557	WITHOUT_CLASSIFICATION	6.312817024436447E-5	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.998605166411312	WITHOUT_CLASSIFICATION	0.0013948335886879665	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999999127552178	WITHOUT_CLASSIFICATION	8.724478222239679E-8	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9482197268133655	WITHOUT_CLASSIFICATION	0.05178027318663446	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9247248251738192	WITHOUT_CLASSIFICATION	0.07527517482618083	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9482366762133486	WITHOUT_CLASSIFICATION	0.051763323786651376	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9709182439464964	WITHOUT_CLASSIFICATION	0.02908175605350367	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9204860844922977	WITHOUT_CLASSIFICATION	0.07951391550770227	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9649543640584382	WITHOUT_CLASSIFICATION	0.03504563594156178	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999849824142413	WITHOUT_CLASSIFICATION	1.501758575867503E-5	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999950927540769	WITHOUT_CLASSIFICATION	4.907245922991765E-6	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.999999191261856	WITHOUT_CLASSIFICATION	8.087381440486815E-7	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9998249572895233	WITHOUT_CLASSIFICATION	1.7504271047665657E-4	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9997820384020492	WITHOUT_CLASSIFICATION	2.1796159795099256E-4	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999998806757217	WITHOUT_CLASSIFICATION	1.1932427831212756E-7	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999948406449256	WITHOUT_CLASSIFICATION	5.159355074398114E-6	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999653407197167	WITHOUT_CLASSIFICATION	3.465928028331055E-5	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9999944373915826	WITHOUT_CLASSIFICATION	5.562608417454782E-6	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999996695779478	WITHOUT_CLASSIFICATION	3.304220521456162E-7	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9999864680987863	WITHOUT_CLASSIFICATION	1.353190121364434E-5	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999791315104746	WITHOUT_CLASSIFICATION	2.086848952554083E-5	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999940182062297	WITHOUT_CLASSIFICATION	5.9817937702189115E-6	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999661431523819	WITHOUT_CLASSIFICATION	3.385684761817868E-5	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999904405946	WITHOUT_CLASSIFICATION	9.55940541247219E-9	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9998249572895233	WITHOUT_CLASSIFICATION	1.7504271047665657E-4	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9997820384020492	WITHOUT_CLASSIFICATION	2.1796159795099256E-4	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999998806757217	WITHOUT_CLASSIFICATION	1.1932427831212756E-7	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999653407197167	WITHOUT_CLASSIFICATION	3.465928028331055E-5	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9968927492728764	WITHOUT_CLASSIFICATION	0.0031072507271236185	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999995122501817	WITHOUT_CLASSIFICATION	4.877498183810512E-7	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9974099639384167	WITHOUT_CLASSIFICATION	0.0025900360615832303	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999978802607664	WITHOUT_CLASSIFICATION	2.1197392336138436E-6	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999619003607999	WITHOUT_CLASSIFICATION	3.8099639199983764E-5	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999967842453796	WITHOUT_CLASSIFICATION	3.2157546203632928E-6	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9998775152161185	WITHOUT_CLASSIFICATION	1.2248478388160775E-4	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999992331189449	WITHOUT_CLASSIFICATION	7.668810551134712E-7	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999997983154094	WITHOUT_CLASSIFICATION	2.016845905236492E-7	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999846354680911	WITHOUT_CLASSIFICATION	1.5364531908805684E-5	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999994441324833	WITHOUT_CLASSIFICATION	5.558675166553535E-7	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999990239221331	WITHOUT_CLASSIFICATION	9.76077866858482E-7	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999999813101906	WITHOUT_CLASSIFICATION	1.8689809453151965E-8	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9998910098030143	WITHOUT_CLASSIFICATION	1.0899019698574277E-4	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.999986836398183	WITHOUT_CLASSIFICATION	1.3163601817116157E-5	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.999985000960723	WITHOUT_CLASSIFICATION	1.4999039277100517E-5	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999948581854224	WITHOUT_CLASSIFICATION	5.141814577606091E-6	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999998146905962	WITHOUT_CLASSIFICATION	1.8530940377342122E-7	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999175485481078	WITHOUT_CLASSIFICATION	8.245145189214992E-5	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999904405946	WITHOUT_CLASSIFICATION	9.55940541247219E-9	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999995122501817	WITHOUT_CLASSIFICATION	4.877498183810512E-7	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9974099639384167	WITHOUT_CLASSIFICATION	0.0025900360615832303	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999619003607999	WITHOUT_CLASSIFICATION	3.8099639199983764E-5	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999967842453796	WITHOUT_CLASSIFICATION	3.2157546203632928E-6	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9998775152161185	WITHOUT_CLASSIFICATION	1.2248478388160775E-4	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999992331189449	WITHOUT_CLASSIFICATION	7.668810551134712E-7	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999999828725733	WITHOUT_CLASSIFICATION	1.712742669743778E-8	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999707210567559	WITHOUT_CLASSIFICATION	2.927894324407548E-5	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999989852055017	WITHOUT_CLASSIFICATION	1.0147944983016665E-6	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999998142162	WITHOUT_CLASSIFICATION	1.8578371754614486E-10	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999976617394157	WITHOUT_CLASSIFICATION	2.338260584313613E-6	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999976617394157	WITHOUT_CLASSIFICATION	2.338260584313613E-6	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9999999694035354	WITHOUT_CLASSIFICATION	3.0596464550819015E-8	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999977989323374	WITHOUT_CLASSIFICATION	2.201067662550192E-6	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999870099375909	WITHOUT_CLASSIFICATION	1.2990062408920299E-5	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999955838441682	WITHOUT_CLASSIFICATION	4.416155831783432E-6	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999999649975483	WITHOUT_CLASSIFICATION	3.500245170031031E-8	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999982810076353	WITHOUT_CLASSIFICATION	1.718992364649118E-6	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9999975912368344	WITHOUT_CLASSIFICATION	2.408763165654904E-6	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999996358721076	WITHOUT_CLASSIFICATION	3.6412789231512283E-7	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999792830866551	WITHOUT_CLASSIFICATION	2.0716913344920402E-5	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999495245472423	WITHOUT_CLASSIFICATION	5.0475452757824965E-5	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999668691095206	WITHOUT_CLASSIFICATION	3.313089047942518E-5	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9997221586416188	WITHOUT_CLASSIFICATION	2.7784135838111685E-4	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.999972040296652	WITHOUT_CLASSIFICATION	2.7959703348036254E-5	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999958743836297	WITHOUT_CLASSIFICATION	4.125616370329094E-6	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999994143776083	WITHOUT_CLASSIFICATION	5.856223917783777E-7	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9998971619450134	WITHOUT_CLASSIFICATION	1.028380549865545E-4	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9999972247570977	WITHOUT_CLASSIFICATION	2.77524290228594E-6	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999998570677495	WITHOUT_CLASSIFICATION	1.4293225051124657E-7	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999969480692315	WITHOUT_CLASSIFICATION	3.0519307685514457E-6	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999986037114942	WITHOUT_CLASSIFICATION	1.396288505832026E-6	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9080872047881241	IMPLEMENTATION	0.09191279521187588	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999992066247277	WITHOUT_CLASSIFICATION	7.933752723307567E-7	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999997802713141	WITHOUT_CLASSIFICATION	2.1972868590094643E-7	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7129747067927357	WITHOUT_CLASSIFICATION	0.28702529320726433	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999258793122745	WITHOUT_CLASSIFICATION	7.412068772545311E-5	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999907846522125	WITHOUT_CLASSIFICATION	9.215347787504917E-6	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999989643004057	WITHOUT_CLASSIFICATION	1.0356995942910245E-6	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999934822838467	WITHOUT_CLASSIFICATION	6.5177161534304765E-6	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9999968132063505	WITHOUT_CLASSIFICATION	3.1867936494130517E-6	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999258793122745	WITHOUT_CLASSIFICATION	7.412068772545311E-5	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999907846522125	WITHOUT_CLASSIFICATION	9.215347787504917E-6	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999958743836297	WITHOUT_CLASSIFICATION	4.125616370329094E-6	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999837815913408	WITHOUT_CLASSIFICATION	1.6218408659083264E-5	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999879887221601	WITHOUT_CLASSIFICATION	1.2011277839848912E-5	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9992956968360756	WITHOUT_CLASSIFICATION	7.043031639245015E-4	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999999930995455	WITHOUT_CLASSIFICATION	6.900454537554567E-9	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999807704039231	WITHOUT_CLASSIFICATION	1.922959607692931E-5	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999626677041241	WITHOUT_CLASSIFICATION	3.7332295875980564E-5	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999921441892665	WITHOUT_CLASSIFICATION	7.855810733447517E-6	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999895100029441	WITHOUT_CLASSIFICATION	1.048999705586333E-5	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999984013223295	WITHOUT_CLASSIFICATION	1.5986776705667363E-6	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999999942846071	WITHOUT_CLASSIFICATION	5.715392963362376E-9	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999841812679329	WITHOUT_CLASSIFICATION	1.5818732067125812E-5	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9998488236193374	WITHOUT_CLASSIFICATION	1.5117638066265555E-4	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9974978134627789	WITHOUT_CLASSIFICATION	0.0025021865372211985	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999994251007694	WITHOUT_CLASSIFICATION	5.748992306404085E-7	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999985050441109	WITHOUT_CLASSIFICATION	1.4949558890565387E-6	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9997893502524827	WITHOUT_CLASSIFICATION	2.1064974751731122E-4	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9998139087549287	WITHOUT_CLASSIFICATION	1.860912450712742E-4	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9997700212112653	WITHOUT_CLASSIFICATION	2.299787887346827E-4	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999995880108901	WITHOUT_CLASSIFICATION	4.1198910993699385E-7	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999998400322334	WITHOUT_CLASSIFICATION	1.5996776656301768E-7	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999934235236633	WITHOUT_CLASSIFICATION	6.5764763367530675E-6	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999999269849169	WITHOUT_CLASSIFICATION	7.30150831010827E-8	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999983400539306	WITHOUT_CLASSIFICATION	1.6599460693208151E-6	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999655579596	WITHOUT_CLASSIFICATION	3.444204037980831E-8	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999996129583241	WITHOUT_CLASSIFICATION	3.870416758675327E-7	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999988975103364	WITHOUT_CLASSIFICATION	1.1024896635353576E-6	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9998703350977337	WITHOUT_CLASSIFICATION	1.2966490226634905E-4	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999798582093088	WITHOUT_CLASSIFICATION	2.014179069120331E-5	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999999583338852	WITHOUT_CLASSIFICATION	4.166611477222717E-8	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999998100827407	WITHOUT_CLASSIFICATION	1.8991725931573998E-7	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999984108288517	WITHOUT_CLASSIFICATION	1.589171148270864E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999820256855889	WITHOUT_CLASSIFICATION	1.7974314411107424E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999820256855889	WITHOUT_CLASSIFICATION	1.7974314411107424E-5	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.999972040296652	WITHOUT_CLASSIFICATION	2.7959703348036254E-5	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999999964803271	WITHOUT_CLASSIFICATION	3.5196729864532873E-9	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999975871526765	WITHOUT_CLASSIFICATION	2.412847323550932E-6	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999950867460768	WITHOUT_CLASSIFICATION	4.913253923150926E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999465441775292	WITHOUT_CLASSIFICATION	5.3455822470811396E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999465441775292	WITHOUT_CLASSIFICATION	5.3455822470811396E-5	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999804565403091	WITHOUT_CLASSIFICATION	1.954345969095766E-5	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999394013378083	WITHOUT_CLASSIFICATION	6.059866219174185E-5	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999999683863438	WITHOUT_CLASSIFICATION	3.161365617510268E-8	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999994259868283	WITHOUT_CLASSIFICATION	5.740131715886646E-7	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999999760537622	WITHOUT_CLASSIFICATION	2.3946237834644135E-8	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999999985770286	WITHOUT_CLASSIFICATION	1.4229713808981918E-9	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999888077550747	WITHOUT_CLASSIFICATION	1.119224492534977E-5	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999935362270767	WITHOUT_CLASSIFICATION	6.463772923332585E-6	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999987194455577	WITHOUT_CLASSIFICATION	1.2805544422531603E-6	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999991656077799	WITHOUT_CLASSIFICATION	8.34392220064805E-7	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999993667534525	WITHOUT_CLASSIFICATION	6.332465475682809E-7	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.999999458124742	WITHOUT_CLASSIFICATION	5.418752579767372E-7	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999992626148394	WITHOUT_CLASSIFICATION	7.373851605242261E-7	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999614063661164	WITHOUT_CLASSIFICATION	3.8593633883640044E-5	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999603927256094	WITHOUT_CLASSIFICATION	3.960727439056437E-5	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.9999781862788626	WITHOUT_CLASSIFICATION	2.181372113741786E-5	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999954122226	WITHOUT_CLASSIFICATION	4.587777437813271E-9	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999954122226	WITHOUT_CLASSIFICATION	4.587777437813271E-9	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999962497698461	WITHOUT_CLASSIFICATION	3.750230153870248E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999962497698461	WITHOUT_CLASSIFICATION	3.750230153870248E-6	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999968774507	WITHOUT_CLASSIFICATION	3.1225493395402428E-9	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999993817485453	WITHOUT_CLASSIFICATION	6.182514547292611E-7	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9993238475757235	WITHOUT_CLASSIFICATION	6.761524242766194E-4	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9993518927346835	WITHOUT_CLASSIFICATION	6.481072653164388E-4	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999999550737817	WITHOUT_CLASSIFICATION	4.492621835557838E-8	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999750646077121	WITHOUT_CLASSIFICATION	2.4935392287814914E-5	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999922724279562	WITHOUT_CLASSIFICATION	7.727572043840198E-6	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.999999458124742	WITHOUT_CLASSIFICATION	5.418752579767372E-7	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999992626148394	WITHOUT_CLASSIFICATION	7.373851605242261E-7	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999603927256094	WITHOUT_CLASSIFICATION	3.960727439056437E-5	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999999655931237	WITHOUT_CLASSIFICATION	3.44068763306444E-8	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999960293935921	WITHOUT_CLASSIFICATION	3.970606407954412E-6	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.999999965426673	WITHOUT_CLASSIFICATION	3.457332694862072E-8	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999995419799131	WITHOUT_CLASSIFICATION	4.580200869372925E-7	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999999991322964	WITHOUT_CLASSIFICATION	8.677034572543166E-10	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999959079721341	WITHOUT_CLASSIFICATION	4.092027865881492E-6	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9998611749656815	WITHOUT_CLASSIFICATION	1.3882503431849368E-4	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9992582103084009	WITHOUT_CLASSIFICATION	7.417896915989778E-4	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9998602273582785	WITHOUT_CLASSIFICATION	1.3977264172155204E-4	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999995507559	WITHOUT_CLASSIFICATION	4.4924407831376753E-10	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9998202042895372	WITHOUT_CLASSIFICATION	1.797957104628698E-4	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999024448406794	WITHOUT_CLASSIFICATION	9.75551593205651E-5	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999998131340283	WITHOUT_CLASSIFICATION	1.8686597176558933E-7	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999941808482343	WITHOUT_CLASSIFICATION	5.819151765697871E-6	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.999929505557818	WITHOUT_CLASSIFICATION	7.04944421820279E-5	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999962884272084	WITHOUT_CLASSIFICATION	3.711572791548626E-6	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999978789236902	WITHOUT_CLASSIFICATION	2.12107630981293E-6	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999924562975029	WITHOUT_CLASSIFICATION	7.543702497088526E-6	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999983279759733	WITHOUT_CLASSIFICATION	1.6720240266416028E-6	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999996443064693	WITHOUT_CLASSIFICATION	3.5569353070054826E-7	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999992973758829	WITHOUT_CLASSIFICATION	7.026241171160705E-7	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999699436137354	WITHOUT_CLASSIFICATION	3.0056386264679907E-5	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999390817738042	WITHOUT_CLASSIFICATION	6.091822619589342E-5	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999999954529948	WITHOUT_CLASSIFICATION	4.5470051858330085E-9	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999998105992095	WITHOUT_CLASSIFICATION	1.8940079059374738E-7	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999998690647217	WITHOUT_CLASSIFICATION	1.3093527837116508E-7	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999963495663122	WITHOUT_CLASSIFICATION	3.6504336877303395E-6	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999370931978246	WITHOUT_CLASSIFICATION	6.290680217542213E-5	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999900213286443	WITHOUT_CLASSIFICATION	9.978671355623062E-6	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999971541327072	WITHOUT_CLASSIFICATION	2.8458672927919877E-6	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999957635703516	WITHOUT_CLASSIFICATION	4.23642964850241E-6	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999988849187986	WITHOUT_CLASSIFICATION	1.115081201344454E-6	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999988426935846	WITHOUT_CLASSIFICATION	1.1573064152848614E-6	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999999542875385	WITHOUT_CLASSIFICATION	4.571246150258125E-8	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999935744909886	WITHOUT_CLASSIFICATION	6.425509011378264E-6	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.999995391127403	WITHOUT_CLASSIFICATION	4.608872596920806E-6	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999876360117703	WITHOUT_CLASSIFICATION	1.2363988229644633E-5	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999949948998907	WITHOUT_CLASSIFICATION	5.005100109235322E-6	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999757848276618	WITHOUT_CLASSIFICATION	2.421517233816181E-5	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999999558028477	WITHOUT_CLASSIFICATION	4.4197152385120514E-8	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999996162002397	WITHOUT_CLASSIFICATION	3.837997602948267E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999975871526765	WITHOUT_CLASSIFICATION	2.412847323550932E-6	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999876360117703	WITHOUT_CLASSIFICATION	1.2363988229644633E-5	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999999139766889	WITHOUT_CLASSIFICATION	8.602331117298727E-8	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999875544958868	WITHOUT_CLASSIFICATION	1.2445504113114873E-5	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.999999828567179	WITHOUT_CLASSIFICATION	1.7143282104902027E-7	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999996994398405	WITHOUT_CLASSIFICATION	3.0056015957629224E-7	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999996994398405	WITHOUT_CLASSIFICATION	3.0056015957629224E-7	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9991966648905818	WITHOUT_CLASSIFICATION	8.033351094181838E-4	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999985335042513	WITHOUT_CLASSIFICATION	1.4664957486605863E-6	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999995834749031	WITHOUT_CLASSIFICATION	4.165250969507979E-7	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999998606351727	WITHOUT_CLASSIFICATION	1.3936482735536263E-7	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9995410011156585	WITHOUT_CLASSIFICATION	4.5899888434149366E-4	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999997918348097	WITHOUT_CLASSIFICATION	2.0816519026701452E-7	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999999881289284	WITHOUT_CLASSIFICATION	1.1871071669457878E-8	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999189297892209	WITHOUT_CLASSIFICATION	8.10702107791024E-5	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999989582965801	WITHOUT_CLASSIFICATION	1.0417034198114628E-6	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999989582965801	WITHOUT_CLASSIFICATION	1.0417034198114628E-6	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999990403111075	WITHOUT_CLASSIFICATION	9.596888924835695E-7	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.999999208961911	WITHOUT_CLASSIFICATION	7.910380889557668E-7	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999999545690655	WITHOUT_CLASSIFICATION	4.543093444497461E-8	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9999993299889635	WITHOUT_CLASSIFICATION	6.700110366063339E-7	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999999882792184	WITHOUT_CLASSIFICATION	1.1720781658846186E-8	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999991910455515	WITHOUT_CLASSIFICATION	8.089544486116195E-7	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999857470304767	WITHOUT_CLASSIFICATION	1.425296952341684E-5	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999952649636795	WITHOUT_CLASSIFICATION	4.735036320568421E-6	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9999979213409328	WITHOUT_CLASSIFICATION	2.078659067168771E-6	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999998920157429	WITHOUT_CLASSIFICATION	1.0798425717030773E-7	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9995665944089178	WITHOUT_CLASSIFICATION	4.3340559108218395E-4	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999998571530567	WITHOUT_CLASSIFICATION	1.4284694328449408E-7	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999861688716243	WITHOUT_CLASSIFICATION	1.3831128375704217E-5	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999562518750522	WITHOUT_CLASSIFICATION	4.3748124947797424E-5	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999562518750522	WITHOUT_CLASSIFICATION	4.3748124947797424E-5	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999994287806493	WITHOUT_CLASSIFICATION	5.712193506511678E-7	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999992331189449	WITHOUT_CLASSIFICATION	7.668810551134712E-7	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999999870324561	WITHOUT_CLASSIFICATION	1.296754381123439E-8	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999993040568115	WITHOUT_CLASSIFICATION	6.959431884936832E-7	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999994571024	WITHOUT_CLASSIFICATION	5.428976796097389E-10	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999999181783767	WITHOUT_CLASSIFICATION	8.182162325958631E-8	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999999211884275	WITHOUT_CLASSIFICATION	7.881157252757848E-8	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.99999374009199	WITHOUT_CLASSIFICATION	6.259908009985486E-6	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.999999766890676	WITHOUT_CLASSIFICATION	2.3310932384926886E-7	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9999994805639077	WITHOUT_CLASSIFICATION	5.194360922780795E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999993587357284	WITHOUT_CLASSIFICATION	6.412642715518612E-7	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999986166450018	WITHOUT_CLASSIFICATION	1.3833549981091872E-6	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9996580809831639	WITHOUT_CLASSIFICATION	3.4191901683616884E-4	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999999799980045	WITHOUT_CLASSIFICATION	2.0001995461448824E-8	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.999999999059281	WITHOUT_CLASSIFICATION	9.40718990956192E-10	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999999697618344	WITHOUT_CLASSIFICATION	3.023816569480446E-8	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999998533076864	WITHOUT_CLASSIFICATION	1.4669231373906367E-7	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999895840318219	WITHOUT_CLASSIFICATION	1.0415968178161734E-5	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999999830548539	WITHOUT_CLASSIFICATION	1.6945146078550796E-8	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999999871247818	WITHOUT_CLASSIFICATION	1.2875218241067935E-8	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9997286979270616	WITHOUT_CLASSIFICATION	2.713020729382646E-4	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9999999518186153	WITHOUT_CLASSIFICATION	4.8181384662178445E-8	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999802958540077	WITHOUT_CLASSIFICATION	1.9704145992386186E-5	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999997236596783	WITHOUT_CLASSIFICATION	2.7634032175635786E-7	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9980325879832723	WITHOUT_CLASSIFICATION	0.0019674120167276527	IMPLEMENTATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999974280956085	WITHOUT_CLASSIFICATION	2.571904391547747E-6	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9999991275629814	WITHOUT_CLASSIFICATION	8.724370186075652E-7	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9999876061599967	WITHOUT_CLASSIFICATION	1.2393840003308324E-5	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9999998768885627	WITHOUT_CLASSIFICATION	1.2311143720627134E-7	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9918614833932573	WITHOUT_CLASSIFICATION	0.008138516606742606	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999983810656491	WITHOUT_CLASSIFICATION	1.6189343509422163E-6	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.999980502810156	WITHOUT_CLASSIFICATION	1.9497189843962626E-5	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999979669828051	WITHOUT_CLASSIFICATION	2.033017194949683E-6	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9998719344405842	WITHOUT_CLASSIFICATION	1.2806555941571721E-4	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999886763632955	WITHOUT_CLASSIFICATION	1.1323636704653332E-5	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999999098724336	WITHOUT_CLASSIFICATION	9.012756642015529E-8	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999836870553291	WITHOUT_CLASSIFICATION	1.6312944670859745E-5	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999782447617556	WITHOUT_CLASSIFICATION	2.17552382444337E-5	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999695311010122	WITHOUT_CLASSIFICATION	3.0468898987926602E-5	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999342193589676	WITHOUT_CLASSIFICATION	6.578064103238197E-5	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999998136600443	WITHOUT_CLASSIFICATION	1.8633995570822728E-7	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9930644854367057	WITHOUT_CLASSIFICATION	0.00693551456329437	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999439619169221	WITHOUT_CLASSIFICATION	5.6038083077848814E-5	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999986534740878	WITHOUT_CLASSIFICATION	1.346525912197727E-6	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9999992625299836	WITHOUT_CLASSIFICATION	7.374700164647465E-7	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999859323015754	WITHOUT_CLASSIFICATION	1.406769842460731E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999996028886295	WITHOUT_CLASSIFICATION	3.971113704368769E-7	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999624347755	WITHOUT_CLASSIFICATION	3.756522440626743E-8	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9973465325204753	WITHOUT_CLASSIFICATION	0.002653467479524607	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999258793122745	WITHOUT_CLASSIFICATION	7.412068772545311E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999258793122745	WITHOUT_CLASSIFICATION	7.412068772545311E-5	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999983772068094	WITHOUT_CLASSIFICATION	1.6227931906176952E-6	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999996290895821	WITHOUT_CLASSIFICATION	3.7091041787161327E-7	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999986952420437	WITHOUT_CLASSIFICATION	1.304757956228281E-6	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999772359271839	WITHOUT_CLASSIFICATION	2.276407281612957E-5	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999719738196668	WITHOUT_CLASSIFICATION	2.802618033307991E-5	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.999994494344354	WITHOUT_CLASSIFICATION	5.505655646097194E-6	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999989733939755	WITHOUT_CLASSIFICATION	1.0266060244913529E-6	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999957952559418	WITHOUT_CLASSIFICATION	4.204744058233957E-6	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999650736538878	WITHOUT_CLASSIFICATION	3.492634611229104E-5	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.999985931733165	WITHOUT_CLASSIFICATION	1.406826683498159E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999892782653917	WITHOUT_CLASSIFICATION	1.0721734608263511E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999892782653917	WITHOUT_CLASSIFICATION	1.0721734608263511E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999892782653917	WITHOUT_CLASSIFICATION	1.0721734608263511E-5	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.8529715101673918	WITHOUT_CLASSIFICATION	0.14702848983260816	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.999961810458477	WITHOUT_CLASSIFICATION	3.8189541523021726E-5	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9999992915808801	WITHOUT_CLASSIFICATION	7.084191199190021E-7	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999489874959329	WITHOUT_CLASSIFICATION	5.1012504067102944E-5	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999489874959329	WITHOUT_CLASSIFICATION	5.1012504067102944E-5	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999629922333761	WITHOUT_CLASSIFICATION	3.700776662379918E-5	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9998323199035497	WITHOUT_CLASSIFICATION	1.6768009645019247E-4	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999999846260603	WITHOUT_CLASSIFICATION	1.5373939767371632E-8	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.999999938444819	WITHOUT_CLASSIFICATION	6.155518102865082E-8	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999990696111434	WITHOUT_CLASSIFICATION	9.303888566099309E-7	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9987579196159576	WITHOUT_CLASSIFICATION	0.0012420803840423344	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.999999514366251	WITHOUT_CLASSIFICATION	4.856337490198535E-7	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999705022256048	WITHOUT_CLASSIFICATION	2.9497774395205376E-5	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999997261323832	WITHOUT_CLASSIFICATION	2.7386761678344913E-7	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999192513925709	WITHOUT_CLASSIFICATION	8.07486074290649E-5	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999192513925709	WITHOUT_CLASSIFICATION	8.07486074290649E-5	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999971370265333	WITHOUT_CLASSIFICATION	2.8629734666508733E-6	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.999998721743904	WITHOUT_CLASSIFICATION	1.2782560959766103E-6	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999989838293041	WITHOUT_CLASSIFICATION	1.0161706959889012E-6	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.999975772605828	WITHOUT_CLASSIFICATION	2.422739417201275E-5	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999888792971154	WITHOUT_CLASSIFICATION	1.1120702884572347E-5	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999983345681579	WITHOUT_CLASSIFICATION	1.6654318421015265E-6	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999945761377043	WITHOUT_CLASSIFICATION	5.423862295705003E-6	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.999967653063307	WITHOUT_CLASSIFICATION	3.234693669291506E-5	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999943055507393	WITHOUT_CLASSIFICATION	5.6944492607583245E-6	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9999935320290265	WITHOUT_CLASSIFICATION	6.467970973407266E-6	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999990544456411	WITHOUT_CLASSIFICATION	9.455543588398524E-7	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999969825288562	WITHOUT_CLASSIFICATION	3.017471143935381E-6	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9999989320834558	WITHOUT_CLASSIFICATION	1.0679165442303587E-6	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999984886258354	WITHOUT_CLASSIFICATION	1.5113741645538367E-6	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.99935926965532	WITHOUT_CLASSIFICATION	6.407303446801048E-4	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999998303400045	WITHOUT_CLASSIFICATION	1.696599955377546E-7	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9998515244209618	WITHOUT_CLASSIFICATION	1.4847557903819252E-4	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999961579604884	WITHOUT_CLASSIFICATION	3.842039511659561E-6	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999366473082737	WITHOUT_CLASSIFICATION	6.335269172629869E-5	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999982076719857	WITHOUT_CLASSIFICATION	1.7923280142997683E-6	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9994298177320199	WITHOUT_CLASSIFICATION	5.70182267980099E-4	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999603993805263	WITHOUT_CLASSIFICATION	3.9600619473724345E-5	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999639549828088	WITHOUT_CLASSIFICATION	3.604501719118847E-5	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9998604859270536	WITHOUT_CLASSIFICATION	1.3951407294649623E-4	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999909639399939	WITHOUT_CLASSIFICATION	9.036060006153219E-6	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999510087116361	WITHOUT_CLASSIFICATION	4.89912883637426E-5	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999945129950788	WITHOUT_CLASSIFICATION	5.4870049212816805E-6	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999995671426558	WITHOUT_CLASSIFICATION	4.328573441598613E-7	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999999826438039	WITHOUT_CLASSIFICATION	1.73561962374977E-8	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999838749180983	WITHOUT_CLASSIFICATION	1.61250819016858E-5	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.99999841191748	WITHOUT_CLASSIFICATION	1.5880825200266208E-6	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999020094534201	WITHOUT_CLASSIFICATION	9.799054657987637E-5	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999991804138177	WITHOUT_CLASSIFICATION	8.195861821489244E-7	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.99999841191748	WITHOUT_CLASSIFICATION	1.5880825200266208E-6	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999948552546035	WITHOUT_CLASSIFICATION	5.144745396417705E-6	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999952677354463	WITHOUT_CLASSIFICATION	4.732264553633664E-6	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999945151823961	WITHOUT_CLASSIFICATION	5.4848176039173375E-6	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999803317440722	WITHOUT_CLASSIFICATION	1.9668255927847747E-5	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999971304861515	WITHOUT_CLASSIFICATION	2.869513848552516E-6	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999923355263776	WITHOUT_CLASSIFICATION	7.664473622365785E-6	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999982801995643	WITHOUT_CLASSIFICATION	1.7198004356370882E-6	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999992395333223	WITHOUT_CLASSIFICATION	7.604666776499842E-7	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999984145698073	WITHOUT_CLASSIFICATION	1.5854301927057827E-6	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999973290270474	WITHOUT_CLASSIFICATION	2.6709729526410503E-6	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999668859137945	WITHOUT_CLASSIFICATION	3.311408620553988E-5	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999981125249218	WITHOUT_CLASSIFICATION	1.8874750782150237E-6	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999709408726986	WITHOUT_CLASSIFICATION	2.9059127301519228E-5	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9998944613293779	WITHOUT_CLASSIFICATION	1.0553867062208664E-4	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.999989902781731	WITHOUT_CLASSIFICATION	1.0097218269084313E-5	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999982462748924	WITHOUT_CLASSIFICATION	1.7537251075593864E-6	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999989514511964	WITHOUT_CLASSIFICATION	1.0485488035690803E-6	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999987833739269	WITHOUT_CLASSIFICATION	1.2166260731413397E-6	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.999998703938152	WITHOUT_CLASSIFICATION	1.2960618478891033E-6	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999811238008767	WITHOUT_CLASSIFICATION	1.887619912332077E-5	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999999558988543	WITHOUT_CLASSIFICATION	4.4101145712984175E-8	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999994938128974	WITHOUT_CLASSIFICATION	5.061871025608059E-7	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999997138335623	WITHOUT_CLASSIFICATION	2.861664376820361E-7	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999999676311135	WITHOUT_CLASSIFICATION	3.2368886453460346E-8	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999998788352698	WITHOUT_CLASSIFICATION	1.211647303240295E-7	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.999999215139492	WITHOUT_CLASSIFICATION	7.848605080692127E-7	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999972854092574	WITHOUT_CLASSIFICATION	2.714590742640001E-6	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999964025645212	WITHOUT_CLASSIFICATION	3.5974354789485094E-6	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9999960526544622	WITHOUT_CLASSIFICATION	3.9473455377459165E-6	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9999582331714291	WITHOUT_CLASSIFICATION	4.176682857091968E-5	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9999978301385024	WITHOUT_CLASSIFICATION	2.1698614976756762E-6	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.7735600896085794	WITHOUT_CLASSIFICATION	0.22643991039142064	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9985704066400944	WITHOUT_CLASSIFICATION	0.0014295933599054935	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999997942742512	WITHOUT_CLASSIFICATION	2.057257487821584E-7	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999038709761237	WITHOUT_CLASSIFICATION	9.612902387632355E-5	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.99999951626391	WITHOUT_CLASSIFICATION	4.837360899649335E-7	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9999986969856559	WITHOUT_CLASSIFICATION	1.3030143441228E-6	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9999832990841422	WITHOUT_CLASSIFICATION	1.6700915857790868E-5	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999960082946409	WITHOUT_CLASSIFICATION	3.991705359125591E-6	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9999987029706973	WITHOUT_CLASSIFICATION	1.2970293027586144E-6	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9999834448150765	WITHOUT_CLASSIFICATION	1.6555184923500026E-5	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999648692451634	WITHOUT_CLASSIFICATION	3.513075483674402E-5	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9999046017369629	WITHOUT_CLASSIFICATION	9.539826303708038E-5	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9999407929085771	WITHOUT_CLASSIFICATION	5.920709142289838E-5	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999892334348285	WITHOUT_CLASSIFICATION	1.0766565171429948E-5	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9999993341050599	WITHOUT_CLASSIFICATION	6.658949401423434E-7	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.999917969261337	WITHOUT_CLASSIFICATION	8.203073866294536E-5	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.999994377005369	WITHOUT_CLASSIFICATION	5.622994631007627E-6	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999986421285992	WITHOUT_CLASSIFICATION	1.3578714007409683E-6	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.999996521282104	WITHOUT_CLASSIFICATION	3.4787178958877694E-6	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999967793626751	WITHOUT_CLASSIFICATION	3.220637324980687E-6	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999930732187131	WITHOUT_CLASSIFICATION	6.926781286838868E-6	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.999958323123183	WITHOUT_CLASSIFICATION	4.1676876816910106E-5	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999986421285992	WITHOUT_CLASSIFICATION	1.3578714007409683E-6	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9902527319137123	WITHOUT_CLASSIFICATION	0.009747268086287663	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9902527319137123	WITHOUT_CLASSIFICATION	0.009747268086287663	IMPLEMENTATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.999997617656219	WITHOUT_CLASSIFICATION	2.382343780984541E-6	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999880154697154	WITHOUT_CLASSIFICATION	1.1984530284520819E-5	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999984592108102	WITHOUT_CLASSIFICATION	1.5407891897427564E-6	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999994566239537	WITHOUT_CLASSIFICATION	5.433760462123736E-7	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999906487267992	WITHOUT_CLASSIFICATION	9.351273200723336E-6	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999811837760758	WITHOUT_CLASSIFICATION	1.881622392418847E-5	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999942207827571	WITHOUT_CLASSIFICATION	5.779217242841415E-6	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.8525424104941066	IMPLEMENTATION	0.14745758950589327	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.999999484586151	WITHOUT_CLASSIFICATION	5.154138489491933E-7	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999101080436887	WITHOUT_CLASSIFICATION	8.98919563112319E-5	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999968549818989	WITHOUT_CLASSIFICATION	3.1450181011364048E-6	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999979126773639	WITHOUT_CLASSIFICATION	2.087322636113572E-6	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999902147683005	WITHOUT_CLASSIFICATION	9.78523169951468E-6	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999952364860092	WITHOUT_CLASSIFICATION	4.763513990806629E-6	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9889765248744972	WITHOUT_CLASSIFICATION	0.01102347512550279	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9977508478457093	WITHOUT_CLASSIFICATION	0.0022491521542905937	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999992892680097	WITHOUT_CLASSIFICATION	7.107319902207658E-7	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999547483342238	WITHOUT_CLASSIFICATION	4.5251665776103455E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999547483342238	WITHOUT_CLASSIFICATION	4.5251665776103455E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999547483342238	WITHOUT_CLASSIFICATION	4.5251665776103455E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999547483342238	WITHOUT_CLASSIFICATION	4.5251665776103455E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999547483342238	WITHOUT_CLASSIFICATION	4.5251665776103455E-5	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.999996818608564	WITHOUT_CLASSIFICATION	3.1813914360260137E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.99999565874635	WITHOUT_CLASSIFICATION	4.341253650044615E-6	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9996882831109561	WITHOUT_CLASSIFICATION	3.117168890438502E-4	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999992498061604	WITHOUT_CLASSIFICATION	7.501938395997334E-7	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.99998950828912	WITHOUT_CLASSIFICATION	1.0491710879941953E-5	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999409107438	WITHOUT_CLASSIFICATION	5.9089256198799284E-8	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9995380458201908	WITHOUT_CLASSIFICATION	4.619541798092426E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999975091734843	WITHOUT_CLASSIFICATION	2.4908265157831883E-6	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999948069442222	WITHOUT_CLASSIFICATION	5.193055777914428E-6	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9999873628417478	WITHOUT_CLASSIFICATION	1.2637158252140753E-5	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9999955103699298	WITHOUT_CLASSIFICATION	4.48963007011973E-6	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.999997425395335	WITHOUT_CLASSIFICATION	2.574604665024672E-6	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9999912400151517	WITHOUT_CLASSIFICATION	8.759984848321275E-6	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9999942225580365	WITHOUT_CLASSIFICATION	5.777441963457174E-6	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.999995396144593	WITHOUT_CLASSIFICATION	4.603855407072437E-6	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9999980211010423	WITHOUT_CLASSIFICATION	1.9788989577495904E-6	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9999943223691344	WITHOUT_CLASSIFICATION	5.677630865523287E-6	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9999891071829528	WITHOUT_CLASSIFICATION	1.089281704718911E-5	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.999996562527289	WITHOUT_CLASSIFICATION	3.437472710960096E-6	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999908052977776	WITHOUT_CLASSIFICATION	9.194702222309952E-6	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9999950522330286	WITHOUT_CLASSIFICATION	4.947766971346669E-6	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9999970679982414	WITHOUT_CLASSIFICATION	2.9320017584855746E-6	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999983708203406	WITHOUT_CLASSIFICATION	1.6291796593752873E-6	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9999954070620557	WITHOUT_CLASSIFICATION	4.592937944310456E-6	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999968744957106	WITHOUT_CLASSIFICATION	3.125504289343909E-6	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9999973769489164	WITHOUT_CLASSIFICATION	2.6230510834463745E-6	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9999877349167545	WITHOUT_CLASSIFICATION	1.2265083245455585E-5	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9999924645889939	WITHOUT_CLASSIFICATION	7.535411006058733E-6	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.999993554011257	WITHOUT_CLASSIFICATION	6.445988743038578E-6	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.999997728580304	WITHOUT_CLASSIFICATION	2.2714196959473745E-6	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999954902217638	WITHOUT_CLASSIFICATION	4.50977823612223E-6	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9999962999360389	WITHOUT_CLASSIFICATION	3.7000639611540884E-6	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9999958504341763	WITHOUT_CLASSIFICATION	4.149565823772046E-6	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9999949262858412	WITHOUT_CLASSIFICATION	5.07371415875684E-6	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.999997610990643	WITHOUT_CLASSIFICATION	2.3890093570647526E-6	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9999964535918456	WITHOUT_CLASSIFICATION	3.5464081544953E-6	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9999952995716136	WITHOUT_CLASSIFICATION	4.700428386448886E-6	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9999958958990917	WITHOUT_CLASSIFICATION	4.104100908427779E-6	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.999997799158264	WITHOUT_CLASSIFICATION	2.2008417359285027E-6	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9999958722089347	WITHOUT_CLASSIFICATION	4.127791065245408E-6	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9999926332719319	WITHOUT_CLASSIFICATION	7.366728068009247E-6	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999919836818995	WITHOUT_CLASSIFICATION	8.016318100460077E-6	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9999971909480557	WITHOUT_CLASSIFICATION	2.809051944343907E-6	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9999919398208471	WITHOUT_CLASSIFICATION	8.06017915287465E-6	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9999923641328535	WITHOUT_CLASSIFICATION	7.63586714644725E-6	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9999970262916434	WITHOUT_CLASSIFICATION	2.9737083566155213E-6	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9999979857213075	WITHOUT_CLASSIFICATION	2.014278692598048E-6	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9999972343317733	WITHOUT_CLASSIFICATION	2.7656682266258546E-6	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9999935816065675	WITHOUT_CLASSIFICATION	6.4183934325782805E-6	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9999964347035869	WITHOUT_CLASSIFICATION	3.5652964130509854E-6	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9996882831109561	WITHOUT_CLASSIFICATION	3.117168890438502E-4	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999976088307424	WITHOUT_CLASSIFICATION	2.391169257540152E-6	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999974170277617	WITHOUT_CLASSIFICATION	2.582972238310409E-6	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999965761537194	WITHOUT_CLASSIFICATION	3.4238462807485826E-6	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999958136294501	WITHOUT_CLASSIFICATION	4.18637054995434E-6	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.999996100209826	WITHOUT_CLASSIFICATION	3.899790174061121E-6	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9999960777852636	WITHOUT_CLASSIFICATION	3.922214736419687E-6	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9999967846395482	WITHOUT_CLASSIFICATION	3.215360451884193E-6	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.999996100209826	WITHOUT_CLASSIFICATION	3.899790174061121E-6	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9999960447524658	WITHOUT_CLASSIFICATION	3.95524753421367E-6	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9999966931389647	WITHOUT_CLASSIFICATION	3.3068610353202634E-6	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9999950580534209	WITHOUT_CLASSIFICATION	4.9419465790937155E-6	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.999995055868381	WITHOUT_CLASSIFICATION	4.944131618969278E-6	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.9999960481901181	WITHOUT_CLASSIFICATION	3.951809881879744E-6	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9999962998860231	WITHOUT_CLASSIFICATION	3.7001139768967473E-6	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9999973666821358	WITHOUT_CLASSIFICATION	2.6333178642481513E-6	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999967280009276	WITHOUT_CLASSIFICATION	3.271999072263824E-6	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9999939052208676	WITHOUT_CLASSIFICATION	6.094779132355614E-6	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.999992578803322	WITHOUT_CLASSIFICATION	7.421196678004512E-6	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9999963881154005	WITHOUT_CLASSIFICATION	3.611884599589047E-6	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9999940342958682	WITHOUT_CLASSIFICATION	5.965704131724656E-6	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9999959493259544	WITHOUT_CLASSIFICATION	4.050674045576424E-6	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.999995087090151	WITHOUT_CLASSIFICATION	4.912909849102862E-6	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.999995785554336	WITHOUT_CLASSIFICATION	4.214445664022579E-6	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9999970086285058	WITHOUT_CLASSIFICATION	2.9913714942032955E-6	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9999962980173133	WITHOUT_CLASSIFICATION	3.701982686699E-6	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9999979986781093	WITHOUT_CLASSIFICATION	2.001321890675979E-6	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999979260908969	WITHOUT_CLASSIFICATION	2.0739091032084678E-6	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999953581774725	WITHOUT_CLASSIFICATION	4.6418225274473565E-6	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9999943482124523	WITHOUT_CLASSIFICATION	5.651787547761525E-6	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9999942786654734	WITHOUT_CLASSIFICATION	5.7213345264967084E-6	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9999982813091879	WITHOUT_CLASSIFICATION	1.7186908121378833E-6	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9999965876325476	WITHOUT_CLASSIFICATION	3.412367452321025E-6	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9999965934171497	WITHOUT_CLASSIFICATION	3.4065828503012083E-6	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999982819929673	WITHOUT_CLASSIFICATION	1.7180070327206874E-6	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9999971257235925	WITHOUT_CLASSIFICATION	2.8742764075273507E-6	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9999950708880438	WITHOUT_CLASSIFICATION	4.9291119561276755E-6	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.999990329304728	WITHOUT_CLASSIFICATION	9.670695271926118E-6	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9999967240322246	WITHOUT_CLASSIFICATION	3.2759677754126356E-6	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9999967050207923	WITHOUT_CLASSIFICATION	3.2949792077237844E-6	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9999975083389869	WITHOUT_CLASSIFICATION	2.491661012962101E-6	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9999968569627355	WITHOUT_CLASSIFICATION	3.1430372643504437E-6	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9999961337178886	WITHOUT_CLASSIFICATION	3.8662821113471765E-6	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999978810266007	WITHOUT_CLASSIFICATION	2.1189733993155436E-6	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9999965178514169	WITHOUT_CLASSIFICATION	3.4821485831303527E-6	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999967114858103	WITHOUT_CLASSIFICATION	3.288514189731816E-6	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999940280485441	WITHOUT_CLASSIFICATION	5.971951455915553E-6	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999885249514845	WITHOUT_CLASSIFICATION	1.1475048515535484E-5	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999961442116608	WITHOUT_CLASSIFICATION	3.8557883391921695E-6	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9999961639448613	WITHOUT_CLASSIFICATION	3.8360551386105025E-6	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9999952799898536	WITHOUT_CLASSIFICATION	4.7200101464182554E-6	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9999939461485932	WITHOUT_CLASSIFICATION	6.053851406771385E-6	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9999941014401078	WITHOUT_CLASSIFICATION	5.898559892216326E-6	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9999889952156213	WITHOUT_CLASSIFICATION	1.1004784378678091E-5	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9999809231480191	WITHOUT_CLASSIFICATION	1.9076851980860402E-5	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.999980891236717	WITHOUT_CLASSIFICATION	1.910876328302943E-5	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.999993403093564	WITHOUT_CLASSIFICATION	6.596906435955748E-6	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9999967479227336	WITHOUT_CLASSIFICATION	3.252077266315681E-6	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9999939051180484	WITHOUT_CLASSIFICATION	6.094881951646854E-6	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9999938482123298	WITHOUT_CLASSIFICATION	6.151787670121675E-6	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999938126429109	WITHOUT_CLASSIFICATION	6.18735708909106E-6	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999955844539846	WITHOUT_CLASSIFICATION	4.415546015303595E-6	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999920661757716	WITHOUT_CLASSIFICATION	7.933824228356868E-6	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9999964910203504	WITHOUT_CLASSIFICATION	3.5089796496331313E-6	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9999935614473291	WITHOUT_CLASSIFICATION	6.438552670878821E-6	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9999781218361571	WITHOUT_CLASSIFICATION	2.187816384283979E-5	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9999925489518701	WITHOUT_CLASSIFICATION	7.451048129914812E-6	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9999832662413146	WITHOUT_CLASSIFICATION	1.6733758685359732E-5	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9999939735746275	WITHOUT_CLASSIFICATION	6.026425372496726E-6	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.99999393710075	WITHOUT_CLASSIFICATION	6.062899249946572E-6	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.999993906948471	WITHOUT_CLASSIFICATION	6.0930515290749836E-6	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.99999381836619	WITHOUT_CLASSIFICATION	6.181633810035188E-6	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999924415181944	WITHOUT_CLASSIFICATION	7.558481805573553E-6	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999925164363891	WITHOUT_CLASSIFICATION	7.483563610966662E-6	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9999969684606667	WITHOUT_CLASSIFICATION	3.0315393333849553E-6	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9999975268969745	WITHOUT_CLASSIFICATION	2.4731030254607444E-6	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.999992798060621	WITHOUT_CLASSIFICATION	7.201939378890554E-6	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9999978817392072	WITHOUT_CLASSIFICATION	2.1182607927909032E-6	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9999966906225302	WITHOUT_CLASSIFICATION	3.3093774697906438E-6	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9999957943096642	WITHOUT_CLASSIFICATION	4.205690335705315E-6	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.999997844275758	WITHOUT_CLASSIFICATION	2.1557242420306122E-6	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9999960514118781	WITHOUT_CLASSIFICATION	3.948588121922039E-6	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9999967972290927	WITHOUT_CLASSIFICATION	3.202770907310881E-6	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999952297270132	WITHOUT_CLASSIFICATION	4.770272986822441E-6	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9999918662584872	WITHOUT_CLASSIFICATION	8.13374151266696E-6	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9999958330347037	WITHOUT_CLASSIFICATION	4.166965296249187E-6	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999968734505987	WITHOUT_CLASSIFICATION	3.1265494013306664E-6	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9999952428685999	WITHOUT_CLASSIFICATION	4.757131400119088E-6	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9999961307275264	WITHOUT_CLASSIFICATION	3.869272473708123E-6	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999978499856413	WITHOUT_CLASSIFICATION	2.150014358759252E-6	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9999939387451126	WITHOUT_CLASSIFICATION	6.061254887386257E-6	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999953407340584	WITHOUT_CLASSIFICATION	4.659265941608321E-6	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9999925463129944	WITHOUT_CLASSIFICATION	7.453687005586495E-6	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9999924442923955	WITHOUT_CLASSIFICATION	7.555707604407739E-6	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9999952254027565	WITHOUT_CLASSIFICATION	4.774597243457286E-6	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.9999927308436928	WITHOUT_CLASSIFICATION	7.269156307261823E-6	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999954082880116	WITHOUT_CLASSIFICATION	4.591711988359659E-6	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9999927136831079	WITHOUT_CLASSIFICATION	7.286316892095354E-6	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9999953854319921	WITHOUT_CLASSIFICATION	4.614568008008944E-6	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9999951876448424	WITHOUT_CLASSIFICATION	4.8123551576325495E-6	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9999975645109708	WITHOUT_CLASSIFICATION	2.4354890292488597E-6	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9999957694028663	WITHOUT_CLASSIFICATION	4.230597133644768E-6	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9999947091721177	WITHOUT_CLASSIFICATION	5.290827882269579E-6	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9999909238174534	WITHOUT_CLASSIFICATION	9.07618254661614E-6	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9999921145590452	WITHOUT_CLASSIFICATION	7.885440954810362E-6	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9999931186213198	WITHOUT_CLASSIFICATION	6.8813786802299165E-6	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9999978106939125	WITHOUT_CLASSIFICATION	2.1893060874669274E-6	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9999970280241391	WITHOUT_CLASSIFICATION	2.97197586091355E-6	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9999963661354947	WITHOUT_CLASSIFICATION	3.6338645053538895E-6	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9999963441421174	WITHOUT_CLASSIFICATION	3.655857882767384E-6	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9999953477354802	WITHOUT_CLASSIFICATION	4.65226451975711E-6	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9999914273638363	WITHOUT_CLASSIFICATION	8.572636163777225E-6	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999955323814784	WITHOUT_CLASSIFICATION	4.467618521515676E-6	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9999971492512246	WITHOUT_CLASSIFICATION	2.850748775335762E-6	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9999966059707719	WITHOUT_CLASSIFICATION	3.3940292280957877E-6	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9999972311807337	WITHOUT_CLASSIFICATION	2.768819266356168E-6	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999864367033022	WITHOUT_CLASSIFICATION	1.3563296697822822E-5	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.999993844818675	WITHOUT_CLASSIFICATION	6.15518132498315E-6	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9999931164002193	WITHOUT_CLASSIFICATION	6.883599780713313E-6	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9999923312954024	WITHOUT_CLASSIFICATION	7.66870459765428E-6	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999967156026893	WITHOUT_CLASSIFICATION	3.284397310681646E-6	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999938445455978	WITHOUT_CLASSIFICATION	6.155454402234224E-6	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9999943251932312	WITHOUT_CLASSIFICATION	5.674806768823015E-6	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.999995015313348	WITHOUT_CLASSIFICATION	4.98468665199456E-6	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999950121804678	WITHOUT_CLASSIFICATION	4.987819532240461E-6	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9999882064466108	WITHOUT_CLASSIFICATION	1.1793553389114767E-5	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9999935210378283	WITHOUT_CLASSIFICATION	6.478962171601046E-6	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999897081282192	WITHOUT_CLASSIFICATION	1.0291871780740736E-5	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9999924859080291	WITHOUT_CLASSIFICATION	7.514091970834212E-6	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9999945500670772	WITHOUT_CLASSIFICATION	5.449932922902131E-6	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9999906504660413	WITHOUT_CLASSIFICATION	9.34953395864182E-6	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9999847463829334	WITHOUT_CLASSIFICATION	1.5253617066554434E-5	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9999808745352659	WITHOUT_CLASSIFICATION	1.9125464734212312E-5	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.999993677100439	WITHOUT_CLASSIFICATION	6.322899561077176E-6	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999964623545297	WITHOUT_CLASSIFICATION	3.5376454703688814E-6	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999976036246748	WITHOUT_CLASSIFICATION	2.3963753251670876E-6	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.999997092116929	WITHOUT_CLASSIFICATION	2.9078830709114294E-6	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9999934625436686	WITHOUT_CLASSIFICATION	6.537456331340685E-6	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9999955551281875	WITHOUT_CLASSIFICATION	4.444871812495705E-6	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9999948990137921	WITHOUT_CLASSIFICATION	5.100986207869493E-6	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.9999940478018946	WITHOUT_CLASSIFICATION	5.952198105385824E-6	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999941604294297	WITHOUT_CLASSIFICATION	5.8395705702254485E-6	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999895885994312	WITHOUT_CLASSIFICATION	1.0411400568793088E-5	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9999945215462985	WITHOUT_CLASSIFICATION	5.478453701472976E-6	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9999932609019939	WITHOUT_CLASSIFICATION	6.739098005994772E-6	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9999935172275629	WITHOUT_CLASSIFICATION	6.482772436999656E-6	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9999913985055047	WITHOUT_CLASSIFICATION	8.601494495460263E-6	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9999958744477916	WITHOUT_CLASSIFICATION	4.125552208355978E-6	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9999933144491955	WITHOUT_CLASSIFICATION	6.685550804550874E-6	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9999933807151258	WITHOUT_CLASSIFICATION	6.61928487416861E-6	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9999970395308757	WITHOUT_CLASSIFICATION	2.960469124332663E-6	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9999945365681903	WITHOUT_CLASSIFICATION	5.463431809827921E-6	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9999926172981144	WITHOUT_CLASSIFICATION	7.382701885588793E-6	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9999932115432153	WITHOUT_CLASSIFICATION	6.7884567847461855E-6	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999966991736615	WITHOUT_CLASSIFICATION	3.300826338490202E-6	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9999897092860772	WITHOUT_CLASSIFICATION	1.0290713922741391E-5	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9999931914728909	WITHOUT_CLASSIFICATION	6.80852710904945E-6	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999879460070706	WITHOUT_CLASSIFICATION	1.205399292938666E-5	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9999964903868502	WITHOUT_CLASSIFICATION	3.5096131497282056E-6	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9999898249975919	WITHOUT_CLASSIFICATION	1.01750024081572E-5	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9999940539717938	WITHOUT_CLASSIFICATION	5.946028206288463E-6	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9999788688257635	WITHOUT_CLASSIFICATION	2.1131174236540846E-5	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999905538298639	WITHOUT_CLASSIFICATION	9.446170136125537E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999958733467056	WITHOUT_CLASSIFICATION	4.126653294402757E-6	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9999911321506497	WITHOUT_CLASSIFICATION	8.867849350260718E-6	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9999855738238355	WITHOUT_CLASSIFICATION	1.4426176164529952E-5	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9999929007120193	WITHOUT_CLASSIFICATION	7.099287980591112E-6	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9999939936033997	WITHOUT_CLASSIFICATION	6.006396600263351E-6	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9999920382590892	WITHOUT_CLASSIFICATION	7.961740910808733E-6	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.999993578951531	WITHOUT_CLASSIFICATION	6.421048469109129E-6	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.999991519648237	WITHOUT_CLASSIFICATION	8.480351763054083E-6	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999946418647921	WITHOUT_CLASSIFICATION	5.358135207838862E-6	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9999910354342704	WITHOUT_CLASSIFICATION	8.964565729657757E-6	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999957772538618	WITHOUT_CLASSIFICATION	4.222746138202611E-6	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9999921889109108	WITHOUT_CLASSIFICATION	7.811089089313526E-6	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9999905153252655	WITHOUT_CLASSIFICATION	9.484674734457577E-6	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9999859503532847	WITHOUT_CLASSIFICATION	1.4049646715352988E-5	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9999847501545271	WITHOUT_CLASSIFICATION	1.524984547277992E-5	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999901269872725	WITHOUT_CLASSIFICATION	9.873012727420423E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.999996614972629	WITHOUT_CLASSIFICATION	3.3850273708546467E-6	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9999965475636063	WITHOUT_CLASSIFICATION	3.4524363937508045E-6	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999935691198107	WITHOUT_CLASSIFICATION	6.430880189210088E-6	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9999921059804755	WITHOUT_CLASSIFICATION	7.894019524435138E-6	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9999940222638414	WITHOUT_CLASSIFICATION	5.977736158630087E-6	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9999951331888712	WITHOUT_CLASSIFICATION	4.866811128774391E-6	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9999940222638414	WITHOUT_CLASSIFICATION	5.977736158630087E-6	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9999921051347264	WITHOUT_CLASSIFICATION	7.89486527366573E-6	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.9999916543507845	WITHOUT_CLASSIFICATION	8.345649215510667E-6	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9999875278551491	WITHOUT_CLASSIFICATION	1.2472144850939547E-5	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.999989068665724	WITHOUT_CLASSIFICATION	1.0931334275871436E-5	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9999937018631022	WITHOUT_CLASSIFICATION	6.298136897874597E-6	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.999993665313219	WITHOUT_CLASSIFICATION	6.33468678101249E-6	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9999899909457882	WITHOUT_CLASSIFICATION	1.0009054211811932E-5	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999916060967463	WITHOUT_CLASSIFICATION	8.393903253663738E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999874632756969	WITHOUT_CLASSIFICATION	1.253672430316209E-5	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9999948600203254	WITHOUT_CLASSIFICATION	5.1399796746541725E-6	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9999923530088406	WITHOUT_CLASSIFICATION	7.646991159404537E-6	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9999936428716585	WITHOUT_CLASSIFICATION	6.357128341498132E-6	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9999919861765908	WITHOUT_CLASSIFICATION	8.013823409150565E-6	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999919348067933	WITHOUT_CLASSIFICATION	8.065193206695498E-6	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999958588925815	WITHOUT_CLASSIFICATION	4.141107418587279E-6	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9999881188555957	WITHOUT_CLASSIFICATION	1.188114440423684E-5	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9999822879624035	WITHOUT_CLASSIFICATION	1.7712037596511857E-5	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9999909354258406	WITHOUT_CLASSIFICATION	9.064574159370288E-6	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9999900770505125	WITHOUT_CLASSIFICATION	9.92294948742753E-6	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9999916066027809	WITHOUT_CLASSIFICATION	8.393397219182662E-6	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9999874564985018	WITHOUT_CLASSIFICATION	1.2543501498130346E-5	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9999834999325926	WITHOUT_CLASSIFICATION	1.650006740740756E-5	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9999958696395127	WITHOUT_CLASSIFICATION	4.13036048734899E-6	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9999926272090199	WITHOUT_CLASSIFICATION	7.372790979981418E-6	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.9999883507073473	WITHOUT_CLASSIFICATION	1.1649292652813748E-5	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9999907059835913	WITHOUT_CLASSIFICATION	9.294016408659007E-6	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999962132271684	WITHOUT_CLASSIFICATION	3.7867728316508187E-6	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999924177138274	WITHOUT_CLASSIFICATION	7.58228617269053E-6	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999941049484076	WITHOUT_CLASSIFICATION	5.895051592451289E-6	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9999941135595118	WITHOUT_CLASSIFICATION	5.886440488112517E-6	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999957354633683	WITHOUT_CLASSIFICATION	4.264536631723058E-6	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9999929423749397	WITHOUT_CLASSIFICATION	7.057625060287148E-6	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999922274166153	WITHOUT_CLASSIFICATION	7.77258338469423E-6	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.99999377889267	WITHOUT_CLASSIFICATION	6.221107329993172E-6	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9999927002441402	WITHOUT_CLASSIFICATION	7.299755859842599E-6	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999959992540521	WITHOUT_CLASSIFICATION	4.000745947904156E-6	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9999934255073831	WITHOUT_CLASSIFICATION	6.57449261686304E-6	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9999887813748394	WITHOUT_CLASSIFICATION	1.1218625160640117E-5	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9999820031225397	WITHOUT_CLASSIFICATION	1.799687746037864E-5	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.9999769106074514	WITHOUT_CLASSIFICATION	2.30893925486128E-5	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.999976707451979	WITHOUT_CLASSIFICATION	2.3292548020956807E-5	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999871729941482	WITHOUT_CLASSIFICATION	1.2827005851808812E-5	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999997403722829	WITHOUT_CLASSIFICATION	2.5962771709040846E-7	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9999864490707202	WITHOUT_CLASSIFICATION	1.3550929279879452E-5	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.999988028152152	WITHOUT_CLASSIFICATION	1.197184784798023E-5	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999933458876372	WITHOUT_CLASSIFICATION	6.654112362733412E-6	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999602280314529	WITHOUT_CLASSIFICATION	3.977196854717499E-5	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999634724722899	WITHOUT_CLASSIFICATION	3.652752771012456E-5	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9998170105531452	WITHOUT_CLASSIFICATION	1.8298944685483487E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999006105658603	WITHOUT_CLASSIFICATION	9.938943413967322E-5	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9998197034415358	WITHOUT_CLASSIFICATION	1.8029655846420095E-4	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9997771107599511	WITHOUT_CLASSIFICATION	2.2288924004879268E-4	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.999994065984682	WITHOUT_CLASSIFICATION	5.934015317949633E-6	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9999966449708843	WITHOUT_CLASSIFICATION	3.3550291158464116E-6	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999931518028563	WITHOUT_CLASSIFICATION	6.848197143680863E-6	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9999933382014176	WITHOUT_CLASSIFICATION	6.661798582378129E-6	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999874903932296	WITHOUT_CLASSIFICATION	1.2509606770381088E-5	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9988656953105121	WITHOUT_CLASSIFICATION	0.0011343046894878416	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999587956784244	WITHOUT_CLASSIFICATION	4.1204321575635024E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9996785836791955	WITHOUT_CLASSIFICATION	3.214163208045499E-4	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.999999255610745	WITHOUT_CLASSIFICATION	7.443892550024942E-7	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999892710114189	WITHOUT_CLASSIFICATION	1.0728988581106373E-5	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9998889948310254	WITHOUT_CLASSIFICATION	1.1100516897459239E-4	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999959871931522	WITHOUT_CLASSIFICATION	4.012806847781736E-6	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.999999887568863	WITHOUT_CLASSIFICATION	1.1243113695308171E-7	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999483706737	WITHOUT_CLASSIFICATION	5.162932619460057E-8	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999483706737	WITHOUT_CLASSIFICATION	5.162932619460057E-8	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999725182672597	WITHOUT_CLASSIFICATION	2.7481732740174028E-5	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999545507639637	WITHOUT_CLASSIFICATION	4.544923603630932E-5	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999990584238042	WITHOUT_CLASSIFICATION	9.415761958477064E-7	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999996321091073	WITHOUT_CLASSIFICATION	3.6789089270913635E-7	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999967203513502	WITHOUT_CLASSIFICATION	3.279648649819198E-6	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.999999853912753	WITHOUT_CLASSIFICATION	1.4608724693305292E-7	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.999931638056227	WITHOUT_CLASSIFICATION	6.836194377306623E-5	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999859391271597	WITHOUT_CLASSIFICATION	1.406087284033256E-5	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9988914838744624	WITHOUT_CLASSIFICATION	0.0011085161255376525	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9993117016549266	WITHOUT_CLASSIFICATION	6.882983450733549E-4	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9999931216624554	WITHOUT_CLASSIFICATION	6.878337544594817E-6	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9990236700747166	WITHOUT_CLASSIFICATION	9.763299252833617E-4	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999464775903804	WITHOUT_CLASSIFICATION	5.352240961952373E-5	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.999973942134806	WITHOUT_CLASSIFICATION	2.605786519406281E-5	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999864382326877	WITHOUT_CLASSIFICATION	1.356176731240786E-5	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999302746432985	WITHOUT_CLASSIFICATION	6.972535670145181E-5	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9997231379118803	WITHOUT_CLASSIFICATION	2.7686208811978274E-4	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999371642912706	WITHOUT_CLASSIFICATION	6.283570872954485E-5	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999671062936187	WITHOUT_CLASSIFICATION	3.289370638116436E-5	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9977640034351163	WITHOUT_CLASSIFICATION	0.0022359965648837293	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999996553352538	WITHOUT_CLASSIFICATION	3.4466474616926167E-7	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9999946521864358	WITHOUT_CLASSIFICATION	5.347813564209097E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.999954663402982	WITHOUT_CLASSIFICATION	4.533659701795001E-5	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999965857017284	WITHOUT_CLASSIFICATION	3.414298271416761E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.999954663402982	WITHOUT_CLASSIFICATION	4.533659701795001E-5	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999969574165427	WITHOUT_CLASSIFICATION	3.0425834573577947E-6	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999990880660319	WITHOUT_CLASSIFICATION	9.119339682023416E-7	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999261058539665	WITHOUT_CLASSIFICATION	7.38941460335456E-5	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999664366510801	WITHOUT_CLASSIFICATION	3.356334891985166E-5	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999990281686406	WITHOUT_CLASSIFICATION	9.718313593854272E-7	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999981780121997	WITHOUT_CLASSIFICATION	1.8219878002364891E-6	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999981780121997	WITHOUT_CLASSIFICATION	1.8219878002364891E-6	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999981780121997	WITHOUT_CLASSIFICATION	1.8219878002364891E-6	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999968244358252	WITHOUT_CLASSIFICATION	3.175564174767107E-6	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9996304656463141	WITHOUT_CLASSIFICATION	3.695343536858868E-4	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999993473459579	WITHOUT_CLASSIFICATION	6.526540421535239E-7	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999797408469595	WITHOUT_CLASSIFICATION	2.0259153040568943E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999797408469595	WITHOUT_CLASSIFICATION	2.0259153040568943E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999797408469595	WITHOUT_CLASSIFICATION	2.0259153040568943E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999797408469595	WITHOUT_CLASSIFICATION	2.0259153040568943E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999797408469595	WITHOUT_CLASSIFICATION	2.0259153040568943E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999797408469595	WITHOUT_CLASSIFICATION	2.0259153040568943E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.999919547156375	WITHOUT_CLASSIFICATION	8.045284362498882E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.999919547156375	WITHOUT_CLASSIFICATION	8.045284362498882E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.999919547156375	WITHOUT_CLASSIFICATION	8.045284362498882E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.999919547156375	WITHOUT_CLASSIFICATION	8.045284362498882E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.999919547156375	WITHOUT_CLASSIFICATION	8.045284362498882E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997678746945632	WITHOUT_CLASSIFICATION	2.321253054367074E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997678746945632	WITHOUT_CLASSIFICATION	2.321253054367074E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997678746945632	WITHOUT_CLASSIFICATION	2.321253054367074E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997678746945632	WITHOUT_CLASSIFICATION	2.321253054367074E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9997678746945632	WITHOUT_CLASSIFICATION	2.321253054367074E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9993987535485396	WITHOUT_CLASSIFICATION	6.012464514603558E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9993987535485396	WITHOUT_CLASSIFICATION	6.012464514603558E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9993987535485396	WITHOUT_CLASSIFICATION	6.012464514603558E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9993987535485396	WITHOUT_CLASSIFICATION	6.012464514603558E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9993987535485396	WITHOUT_CLASSIFICATION	6.012464514603558E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9993987535485396	WITHOUT_CLASSIFICATION	6.012464514603558E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997192553244932	WITHOUT_CLASSIFICATION	2.807446755067667E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997192553244932	WITHOUT_CLASSIFICATION	2.807446755067667E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997192553244932	WITHOUT_CLASSIFICATION	2.807446755067667E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997192553244932	WITHOUT_CLASSIFICATION	2.807446755067667E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9997192553244932	WITHOUT_CLASSIFICATION	2.807446755067667E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9995139972018261	WITHOUT_CLASSIFICATION	4.860027981739023E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9995139972018261	WITHOUT_CLASSIFICATION	4.860027981739023E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9995139972018261	WITHOUT_CLASSIFICATION	4.860027981739023E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9995139972018261	WITHOUT_CLASSIFICATION	4.860027981739023E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9995139972018261	WITHOUT_CLASSIFICATION	4.860027981739023E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9996882831109561	WITHOUT_CLASSIFICATION	3.117168890438502E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9996882831109561	WITHOUT_CLASSIFICATION	3.117168890438502E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9996882831109561	WITHOUT_CLASSIFICATION	3.117168890438502E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9996882831109561	WITHOUT_CLASSIFICATION	3.117168890438502E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9996882831109561	WITHOUT_CLASSIFICATION	3.117168890438502E-4	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999992498061604	WITHOUT_CLASSIFICATION	7.501938395997334E-7	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999409107438	WITHOUT_CLASSIFICATION	5.9089256198799284E-8	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9995380458201908	WITHOUT_CLASSIFICATION	4.619541798092426E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999975091734843	WITHOUT_CLASSIFICATION	2.4908265157831883E-6	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999948069442222	WITHOUT_CLASSIFICATION	5.193055777914428E-6	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999907060411047	WITHOUT_CLASSIFICATION	9.293958895290557E-6	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999908052977776	WITHOUT_CLASSIFICATION	9.194702222309952E-6	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999968744957106	WITHOUT_CLASSIFICATION	3.125504289343909E-6	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.999993554011257	WITHOUT_CLASSIFICATION	6.445988743038578E-6	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.999997728580304	WITHOUT_CLASSIFICATION	2.2714196959473745E-6	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999964513413341	WITHOUT_CLASSIFICATION	3.548658665829046E-6	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999954902217638	WITHOUT_CLASSIFICATION	4.50977823612223E-6	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9999945259132089	WITHOUT_CLASSIFICATION	5.4740867911725185E-6	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9999927338583986	WITHOUT_CLASSIFICATION	7.266141601389318E-6	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9999943481817245	WITHOUT_CLASSIFICATION	5.651818275567436E-6	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9999967914729843	WITHOUT_CLASSIFICATION	3.20852701582599E-6	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9999974376332997	WITHOUT_CLASSIFICATION	2.562366700289984E-6	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9999894474224617	WITHOUT_CLASSIFICATION	1.055257753833356E-5	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9999964088275244	WITHOUT_CLASSIFICATION	3.5911724756010836E-6	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9999963752979552	WITHOUT_CLASSIFICATION	3.624702044827578E-6	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9999979353875674	WITHOUT_CLASSIFICATION	2.0646124325952773E-6	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9999965831501292	WITHOUT_CLASSIFICATION	3.416849870834382E-6	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9999941385364576	WITHOUT_CLASSIFICATION	5.861463542504767E-6	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9999968852768226	WITHOUT_CLASSIFICATION	3.114723177289624E-6	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9999942737565112	WITHOUT_CLASSIFICATION	5.726243488901688E-6	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9999970918701361	WITHOUT_CLASSIFICATION	2.908129863956527E-6	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9999943240742484	WITHOUT_CLASSIFICATION	5.675925751608295E-6	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9999979933512927	WITHOUT_CLASSIFICATION	2.006648707300021E-6	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9999970511659281	WITHOUT_CLASSIFICATION	2.948834071805962E-6	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9999954978666743	WITHOUT_CLASSIFICATION	4.502133325637624E-6	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9999977134004011	WITHOUT_CLASSIFICATION	2.2865995989221036E-6	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9999958116910981	WITHOUT_CLASSIFICATION	4.1883089019941695E-6	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9999953654002848	WITHOUT_CLASSIFICATION	4.634599715282763E-6	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9999920495442808	WITHOUT_CLASSIFICATION	7.950455719198675E-6	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.9999959382970152	WITHOUT_CLASSIFICATION	4.0617029849067185E-6	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9999955547241377	WITHOUT_CLASSIFICATION	4.4452758622940885E-6	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9999949262858412	WITHOUT_CLASSIFICATION	5.07371415875684E-6	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9999948541346624	WITHOUT_CLASSIFICATION	5.145865337626304E-6	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.999993570419088	WITHOUT_CLASSIFICATION	6.429580912040883E-6	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9999766654037522	WITHOUT_CLASSIFICATION	2.3334596247772845E-5	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9999920519319672	WITHOUT_CLASSIFICATION	7.948068032821023E-6	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9999952207377394	WITHOUT_CLASSIFICATION	4.7792622607010375E-6	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9999958720104162	WITHOUT_CLASSIFICATION	4.127989583827681E-6	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9999975307795238	WITHOUT_CLASSIFICATION	2.4692204761847427E-6	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.999996832993384	WITHOUT_CLASSIFICATION	3.167006616022428E-6	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9999969142326819	WITHOUT_CLASSIFICATION	3.0857673182055884E-6	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.999996905997568	WITHOUT_CLASSIFICATION	3.0940024320195697E-6	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.9999901006187859	WITHOUT_CLASSIFICATION	9.899381214057186E-6	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.9999966056125175	WITHOUT_CLASSIFICATION	3.394387482457554E-6	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999974170277617	WITHOUT_CLASSIFICATION	2.582972238310409E-6	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999965761537194	WITHOUT_CLASSIFICATION	3.4238462807485826E-6	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999958136294501	WITHOUT_CLASSIFICATION	4.18637054995434E-6	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.999996100209826	WITHOUT_CLASSIFICATION	3.899790174061121E-6	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999967280009276	WITHOUT_CLASSIFICATION	3.271999072263824E-6	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999979260908969	WITHOUT_CLASSIFICATION	2.0739091032084678E-6	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999861117680606	WITHOUT_CLASSIFICATION	1.3888231939461145E-5	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999953581774725	WITHOUT_CLASSIFICATION	4.6418225274473565E-6	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999978810266007	WITHOUT_CLASSIFICATION	2.1189733993155436E-6	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999967114858103	WITHOUT_CLASSIFICATION	3.288514189731816E-6	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999944980592071	WITHOUT_CLASSIFICATION	5.501940792765813E-6	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999940280485441	WITHOUT_CLASSIFICATION	5.971951455915553E-6	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999885249514845	WITHOUT_CLASSIFICATION	1.1475048515535484E-5	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9999971735856966	WITHOUT_CLASSIFICATION	2.826414303365055E-6	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9999957885580673	WITHOUT_CLASSIFICATION	4.211441932712109E-6	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9999978920980994	WITHOUT_CLASSIFICATION	2.107901900539805E-6	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.999993888795404	WITHOUT_CLASSIFICATION	6.111204596067457E-6	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9999885510238923	WITHOUT_CLASSIFICATION	1.144897610766965E-5	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9999912431438522	WITHOUT_CLASSIFICATION	8.756856147690671E-6	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.9999968889408885	WITHOUT_CLASSIFICATION	3.111059111469959E-6	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9999968272718939	WITHOUT_CLASSIFICATION	3.1727281060740076E-6	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9999938381694716	WITHOUT_CLASSIFICATION	6.16183052843195E-6	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9999938008760835	WITHOUT_CLASSIFICATION	6.19912391664353E-6	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9999978424259408	WITHOUT_CLASSIFICATION	2.157574059197139E-6	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9999958561913644	WITHOUT_CLASSIFICATION	4.143808635549159E-6	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9999938128553336	WITHOUT_CLASSIFICATION	6.1871446663657535E-6	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9999968079975112	WITHOUT_CLASSIFICATION	3.1920024886653145E-6	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9999967383178688	WITHOUT_CLASSIFICATION	3.261682131198683E-6	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9999979866190547	WITHOUT_CLASSIFICATION	2.013380945321383E-6	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.999996226617184	WITHOUT_CLASSIFICATION	3.773382815980273E-6	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9999961693650634	WITHOUT_CLASSIFICATION	3.830634936640708E-6	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9999922390175461	WITHOUT_CLASSIFICATION	7.760982453863834E-6	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9999967750951725	WITHOUT_CLASSIFICATION	3.22490482744867E-6	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.999986564085545	WITHOUT_CLASSIFICATION	1.3435914454899186E-5	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9999954234059599	WITHOUT_CLASSIFICATION	4.576594040079356E-6	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9999941532979177	WITHOUT_CLASSIFICATION	5.846702082231387E-6	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9999960199099488	WITHOUT_CLASSIFICATION	3.980090051155499E-6	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9999927721488214	WITHOUT_CLASSIFICATION	7.2278511786254385E-6	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9999953668724854	WITHOUT_CLASSIFICATION	4.633127514596431E-6	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9999971699388696	WITHOUT_CLASSIFICATION	2.8300611305769104E-6	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9999959840764745	WITHOUT_CLASSIFICATION	4.015923525548911E-6	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.999996607091468	WITHOUT_CLASSIFICATION	3.392908532024684E-6	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9999968779188118	WITHOUT_CLASSIFICATION	3.122081188285789E-6	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9999974855953341	WITHOUT_CLASSIFICATION	2.514404666037229E-6	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9999961648559044	WITHOUT_CLASSIFICATION	3.835144095634172E-6	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9999854038142745	WITHOUT_CLASSIFICATION	1.4596185725645621E-5	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9999942880155905	WITHOUT_CLASSIFICATION	5.7119844094988975E-6	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9999819922318682	WITHOUT_CLASSIFICATION	1.800776813183406E-5	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9999905358826671	WITHOUT_CLASSIFICATION	9.464117332957135E-6	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999955844539846	WITHOUT_CLASSIFICATION	4.415546015303595E-6	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999926924616152	WITHOUT_CLASSIFICATION	7.307538384929051E-6	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999920661757716	WITHOUT_CLASSIFICATION	7.933824228356868E-6	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.99999381836619	WITHOUT_CLASSIFICATION	6.181633810035188E-6	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999925164363891	WITHOUT_CLASSIFICATION	7.483563610966662E-6	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.999997844275758	WITHOUT_CLASSIFICATION	2.1557242420306122E-6	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999952297270132	WITHOUT_CLASSIFICATION	4.770272986822441E-6	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999968734505987	WITHOUT_CLASSIFICATION	3.1265494013306664E-6	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999953407340584	WITHOUT_CLASSIFICATION	4.659265941608321E-6	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999954082880116	WITHOUT_CLASSIFICATION	4.591711988359659E-6	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999930123790151	WITHOUT_CLASSIFICATION	6.987620984996706E-6	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9999966998687068	WITHOUT_CLASSIFICATION	3.3001312932365093E-6	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9999934477783996	WITHOUT_CLASSIFICATION	6.552221600346034E-6	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9999934588856078	WITHOUT_CLASSIFICATION	6.541114392219175E-6	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.999996641439758	WITHOUT_CLASSIFICATION	3.3585602421202307E-6	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9999810947421159	WITHOUT_CLASSIFICATION	1.8905257884083424E-5	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9999947910345122	WITHOUT_CLASSIFICATION	5.2089654879197E-6	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9999951290144492	WITHOUT_CLASSIFICATION	4.870985550831924E-6	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9999938556330504	WITHOUT_CLASSIFICATION	6.1443669495776894E-6	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9999925477322762	WITHOUT_CLASSIFICATION	7.452267723870574E-6	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.999992441756932	WITHOUT_CLASSIFICATION	7.558243068083128E-6	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.999994495142859	WITHOUT_CLASSIFICATION	5.504857141056232E-6	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.999992650564045	WITHOUT_CLASSIFICATION	7.349435954980537E-6	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9999940222412197	WITHOUT_CLASSIFICATION	5.9777587803554275E-6	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9999953357737246	WITHOUT_CLASSIFICATION	4.66422627538815E-6	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9999979471315148	WITHOUT_CLASSIFICATION	2.0528684852732645E-6	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9999962647445731	WITHOUT_CLASSIFICATION	3.7352554269006695E-6	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9999959828507287	WITHOUT_CLASSIFICATION	4.01714927131753E-6	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9999920949887541	WITHOUT_CLASSIFICATION	7.905011245941246E-6	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9999973885950127	WITHOUT_CLASSIFICATION	2.6114049873255517E-6	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9999933960565672	WITHOUT_CLASSIFICATION	6.6039434327585125E-6	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9999848837896101	WITHOUT_CLASSIFICATION	1.5116210389806514E-5	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9999958349154029	WITHOUT_CLASSIFICATION	4.1650845970945256E-6	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9999878651826849	WITHOUT_CLASSIFICATION	1.2134817315177945E-5	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.999995630582666	WITHOUT_CLASSIFICATION	4.369417333892124E-6	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9999955951068381	WITHOUT_CLASSIFICATION	4.404893161899026E-6	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.999995216744425	WITHOUT_CLASSIFICATION	4.78325557495621E-6	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9999961621676454	WITHOUT_CLASSIFICATION	3.837832354581014E-6	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9999938205190039	WITHOUT_CLASSIFICATION	6.1794809961230595E-6	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9999961766506514	WITHOUT_CLASSIFICATION	3.823349348470915E-6	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9999962068189191	WITHOUT_CLASSIFICATION	3.793181081048116E-6	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9999959253570306	WITHOUT_CLASSIFICATION	4.074642969380759E-6	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9999895996862037	WITHOUT_CLASSIFICATION	1.0400313796375645E-5	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9999952628832227	WITHOUT_CLASSIFICATION	4.73711677734055E-6	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9999956680245563	WITHOUT_CLASSIFICATION	4.331975443761232E-6	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9999964765337339	WITHOUT_CLASSIFICATION	3.5234662660077284E-6	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9999949701566658	WITHOUT_CLASSIFICATION	5.02984333417451E-6	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9999942506342374	WITHOUT_CLASSIFICATION	5.749365762530853E-6	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9999966806357676	WITHOUT_CLASSIFICATION	3.3193642322388758E-6	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999964640137203	WITHOUT_CLASSIFICATION	3.5359862797221316E-6	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999864367033022	WITHOUT_CLASSIFICATION	1.3563296697822822E-5	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999965243358282	WITHOUT_CLASSIFICATION	3.475664171783248E-6	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999967156026893	WITHOUT_CLASSIFICATION	3.284397310681646E-6	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999950121804678	WITHOUT_CLASSIFICATION	4.987819532240461E-6	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999897081282192	WITHOUT_CLASSIFICATION	1.0291871780740736E-5	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999964623545297	WITHOUT_CLASSIFICATION	3.5376454703688814E-6	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999976036246748	WITHOUT_CLASSIFICATION	2.3963753251670876E-6	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999941604294297	WITHOUT_CLASSIFICATION	5.8395705702254485E-6	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999895885994312	WITHOUT_CLASSIFICATION	1.0411400568793088E-5	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999879713636168	WITHOUT_CLASSIFICATION	1.2028636383111695E-5	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9999943055159831	WITHOUT_CLASSIFICATION	5.69448401688185E-6	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.999991593991116	WITHOUT_CLASSIFICATION	8.406008883914651E-6	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9999931628626156	WITHOUT_CLASSIFICATION	6.837137384467228E-6	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9999955600554089	WITHOUT_CLASSIFICATION	4.439944591008729E-6	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9999954459702369	WITHOUT_CLASSIFICATION	4.554029763020727E-6	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.999992571045298	WITHOUT_CLASSIFICATION	7.428954701910486E-6	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9999924444052487	WITHOUT_CLASSIFICATION	7.55559475127826E-6	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9999811457794706	WITHOUT_CLASSIFICATION	1.8854220529344253E-5	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.999994364241283	WITHOUT_CLASSIFICATION	5.635758717031986E-6	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9999944024157205	WITHOUT_CLASSIFICATION	5.597584279564655E-6	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9999902682630603	WITHOUT_CLASSIFICATION	9.731736939761825E-6	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.999992571045298	WITHOUT_CLASSIFICATION	7.428954701910486E-6	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9999918675546835	WITHOUT_CLASSIFICATION	8.132445316595281E-6	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.999993113270354	WITHOUT_CLASSIFICATION	6.886729645919857E-6	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9999958413641916	WITHOUT_CLASSIFICATION	4.158635808445364E-6	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9999951204292242	WITHOUT_CLASSIFICATION	4.8795707758441575E-6	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9999939975927498	WITHOUT_CLASSIFICATION	6.002407250146637E-6	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9999896207947347	WITHOUT_CLASSIFICATION	1.0379205265317381E-5	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9999952291843551	WITHOUT_CLASSIFICATION	4.770815644920255E-6	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9999922687882757	WITHOUT_CLASSIFICATION	7.731211724244383E-6	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9999945834609865	WITHOUT_CLASSIFICATION	5.4165390135337295E-6	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9999947905130824	WITHOUT_CLASSIFICATION	5.20948691765361E-6	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9999908954499905	WITHOUT_CLASSIFICATION	9.104550009501554E-6	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9999949283379945	WITHOUT_CLASSIFICATION	5.071662005475722E-6	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.999993311939213	WITHOUT_CLASSIFICATION	6.68806078696456E-6	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.99999428034739	WITHOUT_CLASSIFICATION	5.719652610061549E-6	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9999909142921292	WITHOUT_CLASSIFICATION	9.085707870942008E-6	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9999933918908248	WITHOUT_CLASSIFICATION	6.60810917514702E-6	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9999971125199866	WITHOUT_CLASSIFICATION	2.8874800135333132E-6	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9999955974556962	WITHOUT_CLASSIFICATION	4.402544303867829E-6	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9999946169669167	WITHOUT_CLASSIFICATION	5.383033083273493E-6	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9999945843870366	WITHOUT_CLASSIFICATION	5.41561296337504E-6	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9999934862415848	WITHOUT_CLASSIFICATION	6.513758415163688E-6	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9999894192274126	WITHOUT_CLASSIFICATION	1.0580772587373502E-5	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9999958593227162	WITHOUT_CLASSIFICATION	4.140677283831554E-6	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9999938930623192	WITHOUT_CLASSIFICATION	6.1069376807909604E-6	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.999989526504669	WITHOUT_CLASSIFICATION	1.047349533100522E-5	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9999954453248934	WITHOUT_CLASSIFICATION	4.554675106603161E-6	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999879460070706	WITHOUT_CLASSIFICATION	1.205399292938666E-5	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999905538298639	WITHOUT_CLASSIFICATION	9.446170136125537E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999958733467056	WITHOUT_CLASSIFICATION	4.126653294402757E-6	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999847455733406	WITHOUT_CLASSIFICATION	1.5254426659326523E-5	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999946418647921	WITHOUT_CLASSIFICATION	5.358135207838862E-6	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999957772538618	WITHOUT_CLASSIFICATION	4.222746138202611E-6	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999901269872725	WITHOUT_CLASSIFICATION	9.873012727420423E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.999996614972629	WITHOUT_CLASSIFICATION	3.3850273708546467E-6	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999916060967463	WITHOUT_CLASSIFICATION	8.393903253663738E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999874632756969	WITHOUT_CLASSIFICATION	1.253672430316209E-5	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9999916406078435	WITHOUT_CLASSIFICATION	8.359392156471004E-6	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9999888916239024	WITHOUT_CLASSIFICATION	1.110837609765111E-5	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9999941619289042	WITHOUT_CLASSIFICATION	5.838071095763552E-6	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9999937529286255	WITHOUT_CLASSIFICATION	6.247071374498598E-6	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9999934463984316	WITHOUT_CLASSIFICATION	6.553601568385606E-6	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.999993457507979	WITHOUT_CLASSIFICATION	6.5424920209770515E-6	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9999940194652854	WITHOUT_CLASSIFICATION	5.980534714572666E-6	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9999957541451358	WITHOUT_CLASSIFICATION	4.24585486432846E-6	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9999929732923768	WITHOUT_CLASSIFICATION	7.026707623185125E-6	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.999993594609975	WITHOUT_CLASSIFICATION	6.405390025108234E-6	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9999934696013113	WITHOUT_CLASSIFICATION	6.530398688715197E-6	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9999925458487028	WITHOUT_CLASSIFICATION	7.454151297244769E-6	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9999924398465733	WITHOUT_CLASSIFICATION	7.560153426703787E-6	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9999940283420254	WITHOUT_CLASSIFICATION	5.971657974544815E-6	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9999940194652854	WITHOUT_CLASSIFICATION	5.980534714572666E-6	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.99998833622881	WITHOUT_CLASSIFICATION	1.1663771190102295E-5	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9999925165564835	WITHOUT_CLASSIFICATION	7.483443516626948E-6	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9999882360686242	WITHOUT_CLASSIFICATION	1.1763931375852612E-5	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9999920873467447	WITHOUT_CLASSIFICATION	7.912653255309914E-6	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9999923736496104	WITHOUT_CLASSIFICATION	7.6263503895553765E-6	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9999918844889174	WITHOUT_CLASSIFICATION	8.115511082563367E-6	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.9999930425798736	WITHOUT_CLASSIFICATION	6.9574201263991304E-6	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9999957518095728	WITHOUT_CLASSIFICATION	4.248190427234553E-6	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9999920382590892	WITHOUT_CLASSIFICATION	7.961740910808733E-6	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9999919639233208	WITHOUT_CLASSIFICATION	8.036076679198839E-6	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9999946268247968	WITHOUT_CLASSIFICATION	5.37317520324235E-6	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9999911076321515	WITHOUT_CLASSIFICATION	8.892367848375796E-6	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9999867108157762	WITHOUT_CLASSIFICATION	1.3289184223748641E-5	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9999909813277742	WITHOUT_CLASSIFICATION	9.018672225699788E-6	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9999845261163797	WITHOUT_CLASSIFICATION	1.5473883620320098E-5	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9999919255969009	WITHOUT_CLASSIFICATION	8.074403099143218E-6	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9999959222191686	WITHOUT_CLASSIFICATION	4.077780831521213E-6	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9999919878043347	WITHOUT_CLASSIFICATION	8.012195665214055E-6	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9999967059926502	WITHOUT_CLASSIFICATION	3.294007349713975E-6	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9999905492335746	WITHOUT_CLASSIFICATION	9.450766425406741E-6	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9999953222094966	WITHOUT_CLASSIFICATION	4.677790503425219E-6	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.999993665313219	WITHOUT_CLASSIFICATION	6.33468678101249E-6	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9999947785291288	WITHOUT_CLASSIFICATION	5.221470871265517E-6	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9999853502985422	WITHOUT_CLASSIFICATION	1.464970145774669E-5	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.999991629490766	WITHOUT_CLASSIFICATION	8.370509233940956E-6	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999919348067933	WITHOUT_CLASSIFICATION	8.065193206695498E-6	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999958588925815	WITHOUT_CLASSIFICATION	4.141107418587279E-6	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999962132271684	WITHOUT_CLASSIFICATION	3.7867728316508187E-6	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999931218495187	WITHOUT_CLASSIFICATION	6.878150481324469E-6	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999941049484076	WITHOUT_CLASSIFICATION	5.895051592451289E-6	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999957354633683	WITHOUT_CLASSIFICATION	4.264536631723058E-6	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999922274166153	WITHOUT_CLASSIFICATION	7.77258338469423E-6	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.999976707451979	WITHOUT_CLASSIFICATION	2.3292548020956807E-5	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999871729941482	WITHOUT_CLASSIFICATION	1.2827005851808812E-5	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9999947555338818	WITHOUT_CLASSIFICATION	5.244466118145637E-6	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9999959817896598	WITHOUT_CLASSIFICATION	4.018210340244307E-6	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9999949836343909	WITHOUT_CLASSIFICATION	5.016365609144974E-6	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9999926078883674	WITHOUT_CLASSIFICATION	7.392111632554291E-6	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9999924759345075	WITHOUT_CLASSIFICATION	7.524065492537245E-6	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9999923709888738	WITHOUT_CLASSIFICATION	7.6290111261370415E-6	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9999920854133749	WITHOUT_CLASSIFICATION	7.914586625067283E-6	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9999856262875058	WITHOUT_CLASSIFICATION	1.4373712494176886E-5	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9999935773442279	WITHOUT_CLASSIFICATION	6.422655772089472E-6	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9999940424431508	WITHOUT_CLASSIFICATION	5.9575568491785876E-6	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9999924850105539	WITHOUT_CLASSIFICATION	7.514989446054341E-6	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9999883558556726	WITHOUT_CLASSIFICATION	1.1644144327419023E-5	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.9999973155070151	WITHOUT_CLASSIFICATION	2.684492984950292E-6	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9999901742216124	WITHOUT_CLASSIFICATION	9.825778387515964E-6	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9999930188811746	WITHOUT_CLASSIFICATION	6.9811188252921924E-6	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9999959995571883	WITHOUT_CLASSIFICATION	4.000442811774987E-6	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9999893341203255	WITHOUT_CLASSIFICATION	1.066587967451255E-5	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9999943654946489	WITHOUT_CLASSIFICATION	5.634505351055504E-6	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.99999069357101	WITHOUT_CLASSIFICATION	9.306428989965503E-6	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.999992273687875	WITHOUT_CLASSIFICATION	7.72631212503101E-6	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9999937301284633	WITHOUT_CLASSIFICATION	6.269871536746163E-6	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9999901747492698	WITHOUT_CLASSIFICATION	9.825250730244745E-6	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9999869706494541	WITHOUT_CLASSIFICATION	1.30293505458814E-5	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9999928005913609	WITHOUT_CLASSIFICATION	7.19940863912624E-6	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9999928025952196	WITHOUT_CLASSIFICATION	7.19740478035123E-6	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9999937910989544	WITHOUT_CLASSIFICATION	6.208901045575048E-6	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9999896120445827	WITHOUT_CLASSIFICATION	1.0387955417359259E-5	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9999887246442808	WITHOUT_CLASSIFICATION	1.127535571929318E-5	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9999866404852152	WITHOUT_CLASSIFICATION	1.3359514784815548E-5	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.999992757314153	WITHOUT_CLASSIFICATION	7.242685847016069E-6	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.99998750810468	WITHOUT_CLASSIFICATION	1.2491895320032779E-5	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9999851285263831	WITHOUT_CLASSIFICATION	1.4871473616911669E-5	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9999809260085439	WITHOUT_CLASSIFICATION	1.907399145600364E-5	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9999814152824369	WITHOUT_CLASSIFICATION	1.8584717563104456E-5	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9999786055607306	WITHOUT_CLASSIFICATION	2.139443926937116E-5	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9999810982061894	WITHOUT_CLASSIFICATION	1.8901793810613248E-5	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9999794702667897	WITHOUT_CLASSIFICATION	2.0529733210365347E-5	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.9999651821445049	WITHOUT_CLASSIFICATION	3.4817855495145416E-5	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9999797622424799	WITHOUT_CLASSIFICATION	2.0237757520239732E-5	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9998170105531452	WITHOUT_CLASSIFICATION	1.8298944685483487E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999006105658603	WITHOUT_CLASSIFICATION	9.938943413967322E-5	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999931518028563	WITHOUT_CLASSIFICATION	6.848197143680863E-6	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999874903932296	WITHOUT_CLASSIFICATION	1.2509606770381088E-5	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9988656953105121	WITHOUT_CLASSIFICATION	0.0011343046894878416	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999587956784244	WITHOUT_CLASSIFICATION	4.1204321575635024E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9996785836791955	WITHOUT_CLASSIFICATION	3.214163208045499E-4	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998991542782882	WITHOUT_CLASSIFICATION	1.0084572171178346E-4	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.9999798086949978	WITHOUT_CLASSIFICATION	2.0191305002176873E-5	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9999761703872753	WITHOUT_CLASSIFICATION	2.382961272464063E-5	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9999894385227557	WITHOUT_CLASSIFICATION	1.0561477244268778E-5	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9999811476089605	WITHOUT_CLASSIFICATION	1.885239103951773E-5	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9999765115568305	WITHOUT_CLASSIFICATION	2.3488443169440154E-5	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9999763725205759	WITHOUT_CLASSIFICATION	2.3627479424036582E-5	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9999959167315277	WITHOUT_CLASSIFICATION	4.0832684723025105E-6	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9999937179044137	WITHOUT_CLASSIFICATION	6.282095586370466E-6	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9999855470037786	WITHOUT_CLASSIFICATION	1.4452996221355672E-5	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9999758080745786	WITHOUT_CLASSIFICATION	2.4191925421342624E-5	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9999928269374474	WITHOUT_CLASSIFICATION	7.1730625525869325E-6	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.999987698914538	WITHOUT_CLASSIFICATION	1.2301085462045392E-5	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.9999940479341295	WITHOUT_CLASSIFICATION	5.95206587048132E-6	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9999834668871508	WITHOUT_CLASSIFICATION	1.6533112849287134E-5	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9999937816745372	WITHOUT_CLASSIFICATION	6.218325462743192E-6	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9999921560719902	WITHOUT_CLASSIFICATION	7.843928009754434E-6	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9999849706305091	WITHOUT_CLASSIFICATION	1.5029369491008984E-5	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9999957244989879	WITHOUT_CLASSIFICATION	4.2755010120700994E-6	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9999917954786874	WITHOUT_CLASSIFICATION	8.204521312588312E-6	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9999913576972992	WITHOUT_CLASSIFICATION	8.642302700762526E-6	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9999984266958297	WITHOUT_CLASSIFICATION	1.5733041702575521E-6	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9999979274977993	WITHOUT_CLASSIFICATION	2.0725022007644498E-6	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.999997558436877	WITHOUT_CLASSIFICATION	2.4415631231326985E-6	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999232186158972	WITHOUT_CLASSIFICATION	7.678138410290463E-5	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999948716721323	WITHOUT_CLASSIFICATION	5.1283278677194334E-6	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9994988045123289	WITHOUT_CLASSIFICATION	5.011954876711111E-4	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9990029033620156	WITHOUT_CLASSIFICATION	9.970966379844477E-4	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999996711136275	WITHOUT_CLASSIFICATION	3.2888637249424123E-7	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999757190347277	WITHOUT_CLASSIFICATION	2.4280965272247578E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999892710114189	WITHOUT_CLASSIFICATION	1.0728988581106373E-5	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9998889948310254	WITHOUT_CLASSIFICATION	1.1100516897459239E-4	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999483706737	WITHOUT_CLASSIFICATION	5.162932619460057E-8	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999483706737	WITHOUT_CLASSIFICATION	5.162932619460057E-8	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9993186334188493	WITHOUT_CLASSIFICATION	6.813665811507489E-4	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999999424974751	WITHOUT_CLASSIFICATION	5.7502524882381514E-8	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999996475428105	WITHOUT_CLASSIFICATION	3.5245718955253117E-7	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999911545651586	WITHOUT_CLASSIFICATION	8.845434841383783E-6	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999991014431824	WITHOUT_CLASSIFICATION	8.985568176204764E-7	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999318520300403	WITHOUT_CLASSIFICATION	6.814796995974156E-5	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999999859928008	WITHOUT_CLASSIFICATION	1.4007199139003961E-8	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999985603851013	WITHOUT_CLASSIFICATION	1.4396148987241842E-6	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999414513332542	WITHOUT_CLASSIFICATION	5.8548666745877214E-5	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999999955712845	WITHOUT_CLASSIFICATION	4.428715477340123E-9	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999999509152893	WITHOUT_CLASSIFICATION	4.908471068054471E-8	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.999999978811463	WITHOUT_CLASSIFICATION	2.118853692453432E-8	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999986924704892	WITHOUT_CLASSIFICATION	1.3075295108453972E-6	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9993318867107902	WITHOUT_CLASSIFICATION	6.681132892097891E-4	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999990673633445	WITHOUT_CLASSIFICATION	9.326366555202115E-7	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999990673633445	WITHOUT_CLASSIFICATION	9.326366555202115E-7	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999535227606406	WITHOUT_CLASSIFICATION	4.6477239359263146E-5	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.999999013715738	WITHOUT_CLASSIFICATION	9.862842619902323E-7	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999999554227873	WITHOUT_CLASSIFICATION	4.457721278086626E-8	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999992664094982	WITHOUT_CLASSIFICATION	7.335905018546164E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999956797413478	WITHOUT_CLASSIFICATION	4.3202586521507154E-6	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999959181452567	WITHOUT_CLASSIFICATION	4.081854743237463E-6	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999539143036977	WITHOUT_CLASSIFICATION	4.6085696302265815E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999959181452567	WITHOUT_CLASSIFICATION	4.081854743237463E-6	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9987417168062892	WITHOUT_CLASSIFICATION	0.0012582831937108872	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9980623788161492	WITHOUT_CLASSIFICATION	0.0019376211838507264	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9981333457974086	WITHOUT_CLASSIFICATION	0.0018666542025913408	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9996200620582756	WITHOUT_CLASSIFICATION	3.799379417244787E-4	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9996591610197557	WITHOUT_CLASSIFICATION	3.408389802442183E-4	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999761768878541	WITHOUT_CLASSIFICATION	2.3823112145928413E-5	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9996408833506147	WITHOUT_CLASSIFICATION	3.5911664938529904E-4	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999629756584333	WITHOUT_CLASSIFICATION	3.702434156662482E-5	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999977625134167	WITHOUT_CLASSIFICATION	2.2374865834363845E-6	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999908825302827	WITHOUT_CLASSIFICATION	9.117469717231227E-6	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999916607225922	WITHOUT_CLASSIFICATION	8.3392774078248E-6	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999976214813221	WITHOUT_CLASSIFICATION	2.3785186779269963E-6	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.999988273357168	WITHOUT_CLASSIFICATION	1.1726642832065421E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999929337372103	WITHOUT_CLASSIFICATION	7.066262789633127E-6	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999997814373043	WITHOUT_CLASSIFICATION	2.1856269582488613E-7	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999997814373043	WITHOUT_CLASSIFICATION	2.1856269582488613E-7	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999593018831331	WITHOUT_CLASSIFICATION	4.069811686683408E-5	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9996004607764098	WITHOUT_CLASSIFICATION	3.995392235900971E-4	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999767075445134	WITHOUT_CLASSIFICATION	2.32924554865907E-5	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9982990709865276	WITHOUT_CLASSIFICATION	0.0017009290134725084	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9997924359027277	WITHOUT_CLASSIFICATION	2.075640972724088E-4	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999959181452567	WITHOUT_CLASSIFICATION	4.081854743237463E-6	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999999581966393	WITHOUT_CLASSIFICATION	4.180336067772815E-8	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999909382284533	WITHOUT_CLASSIFICATION	9.061771546665902E-6	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999996307127441	WITHOUT_CLASSIFICATION	3.6928725582270917E-7	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999999516903065	WITHOUT_CLASSIFICATION	4.830969344324549E-8	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999995490989	WITHOUT_CLASSIFICATION	4.5090113683092986E-10	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.999999905244396	WITHOUT_CLASSIFICATION	9.475560404456783E-8	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.999998829624159	WITHOUT_CLASSIFICATION	1.1703758410690243E-6	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999996191937782	WITHOUT_CLASSIFICATION	3.808062217478114E-7	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999996425370434	WITHOUT_CLASSIFICATION	3.574629566297059E-7	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999922020545325	WITHOUT_CLASSIFICATION	7.797945467399984E-6	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999997836532063	WITHOUT_CLASSIFICATION	2.1634679379870613E-7	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999998754206936	WITHOUT_CLASSIFICATION	1.2457930635669438E-7	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.999999623009462	WITHOUT_CLASSIFICATION	3.7699053794382285E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999949839906944	WITHOUT_CLASSIFICATION	5.0160093054779876E-6	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9956039995528476	WITHOUT_CLASSIFICATION	0.004396000447152339	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.999784732829003	WITHOUT_CLASSIFICATION	2.1526717099700418E-4	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999893337526085	WITHOUT_CLASSIFICATION	1.0666247391535872E-5	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9998825350652308	WITHOUT_CLASSIFICATION	1.1746493476926468E-4	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9999970176688634	WITHOUT_CLASSIFICATION	2.9823311366801383E-6	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9999455831819418	WITHOUT_CLASSIFICATION	5.441681805818167E-5	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999700253153738	WITHOUT_CLASSIFICATION	2.997468462617335E-5	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999777211018538	WITHOUT_CLASSIFICATION	2.227889814612085E-5	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.999945082079802	WITHOUT_CLASSIFICATION	5.491792019790901E-5	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999991235872246	WITHOUT_CLASSIFICATION	8.764127752740612E-7	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999976587971005	WITHOUT_CLASSIFICATION	2.3412028995232823E-6	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999739644392567	WITHOUT_CLASSIFICATION	2.60355607432508E-5	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999664066479742	WITHOUT_CLASSIFICATION	3.3593352025775014E-5	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9998555553460977	WITHOUT_CLASSIFICATION	1.444446539023166E-4	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999965519766092	WITHOUT_CLASSIFICATION	3.4480233908480496E-6	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999994835297237	WITHOUT_CLASSIFICATION	5.164702763361577E-7	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999943573731982	WITHOUT_CLASSIFICATION	5.642626801812433E-6	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9999989098549974	WITHOUT_CLASSIFICATION	1.090145002530532E-6	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999999625531508	WITHOUT_CLASSIFICATION	3.744684921288686E-8	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9996358382649023	WITHOUT_CLASSIFICATION	3.641617350977331E-4	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999575724295391	WITHOUT_CLASSIFICATION	4.242757046080538E-5	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999888350565002	WITHOUT_CLASSIFICATION	1.1164943499743962E-5	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999985877818097	WITHOUT_CLASSIFICATION	1.4122181903813636E-6	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9999669913019177	WITHOUT_CLASSIFICATION	3.300869808240442E-5	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9999768948223365	WITHOUT_CLASSIFICATION	2.310517766347471E-5	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999999279147505	WITHOUT_CLASSIFICATION	7.208524964365419E-8	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998991542782882	WITHOUT_CLASSIFICATION	1.0084572171178346E-4	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9252744423707883	WITHOUT_CLASSIFICATION	0.07472555762921165	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999971699050755	WITHOUT_CLASSIFICATION	2.830094924513379E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999859323015754	WITHOUT_CLASSIFICATION	1.406769842460731E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999996028886295	WITHOUT_CLASSIFICATION	3.971113704368769E-7	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9980623788161492	WITHOUT_CLASSIFICATION	0.0019376211838507264	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9994303866036693	WITHOUT_CLASSIFICATION	5.69613396330635E-4	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999983065797257	WITHOUT_CLASSIFICATION	1.6934202742827794E-6	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999963985908209	WITHOUT_CLASSIFICATION	3.6014091790939714E-6	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999164497115	WITHOUT_CLASSIFICATION	8.355028844284554E-8	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999164497115	WITHOUT_CLASSIFICATION	8.355028844284554E-8	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999761539727497	WITHOUT_CLASSIFICATION	2.3846027250248985E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999761539727497	WITHOUT_CLASSIFICATION	2.3846027250248985E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999761539727497	WITHOUT_CLASSIFICATION	2.3846027250248985E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999764255297668	WITHOUT_CLASSIFICATION	2.3574470233192423E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999764255297668	WITHOUT_CLASSIFICATION	2.3574470233192423E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999993631408466	WITHOUT_CLASSIFICATION	6.368591534054088E-7	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999993631408466	WITHOUT_CLASSIFICATION	6.368591534054088E-7	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999999901107676	WITHOUT_CLASSIFICATION	9.88923250802131E-9	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999995908112023	WITHOUT_CLASSIFICATION	4.0918879775897943E-7	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999905964766799	WITHOUT_CLASSIFICATION	9.403523320164392E-6	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999905964766799	WITHOUT_CLASSIFICATION	9.403523320164392E-6	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999996816586255	WITHOUT_CLASSIFICATION	3.1834137443218817E-7	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999932132822831	WITHOUT_CLASSIFICATION	6.78671771689258E-6	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.999999703648526	WITHOUT_CLASSIFICATION	2.9635147397389156E-7	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999995894180256	WITHOUT_CLASSIFICATION	4.105819744568723E-7	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999993980498073	WITHOUT_CLASSIFICATION	6.019501926631294E-7	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999974675967572	WITHOUT_CLASSIFICATION	2.5324032428537565E-6	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999986072435639	WITHOUT_CLASSIFICATION	1.3927564360054909E-6	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999979754570499	WITHOUT_CLASSIFICATION	2.024542950110739E-6	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.99999569605147	WITHOUT_CLASSIFICATION	4.303948529963706E-6	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9999963524001343	WITHOUT_CLASSIFICATION	3.6475998656506253E-6	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999685415741972	WITHOUT_CLASSIFICATION	3.1458425802840886E-5	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9999887763833124	WITHOUT_CLASSIFICATION	1.1223616687616445E-5	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9999832833838976	WITHOUT_CLASSIFICATION	1.6716616102350243E-5	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9999810705426652	WITHOUT_CLASSIFICATION	1.892945733483543E-5	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.999998245148012	WITHOUT_CLASSIFICATION	1.7548519878846217E-6	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9998940662849224	WITHOUT_CLASSIFICATION	1.0593371507767278E-4	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9989704627599844	WITHOUT_CLASSIFICATION	0.0010295372400157374	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999934122770855	WITHOUT_CLASSIFICATION	6.587722914561009E-6	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999796687368809	WITHOUT_CLASSIFICATION	2.0331263119077977E-5	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9998133448701846	WITHOUT_CLASSIFICATION	1.8665512981541353E-4	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.999999422192452	WITHOUT_CLASSIFICATION	5.778075479522929E-7	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.99999983380274	WITHOUT_CLASSIFICATION	1.6619725992807346E-7	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9999983414006929	WITHOUT_CLASSIFICATION	1.6585993070422212E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999975560518832	WITHOUT_CLASSIFICATION	2.443948116761236E-6	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999990783981629	WITHOUT_CLASSIFICATION	9.216018371326456E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999767264529105	WITHOUT_CLASSIFICATION	2.3273547089465448E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999987471024879	WITHOUT_CLASSIFICATION	1.2528975120728778E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999996535897718	WITHOUT_CLASSIFICATION	3.464102281654583E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999998838206016	WITHOUT_CLASSIFICATION	1.1617939839772017E-6	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999995618930666	WITHOUT_CLASSIFICATION	4.381069334182882E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999988936196195	WITHOUT_CLASSIFICATION	1.1063803804975812E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997323033923	WITHOUT_CLASSIFICATION	2.676966076731906E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998990529507	WITHOUT_CLASSIFICATION	1.0094704928249298E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999978746843183	WITHOUT_CLASSIFICATION	2.125315681675536E-6	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998990529507	WITHOUT_CLASSIFICATION	1.0094704928249298E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998990529507	WITHOUT_CLASSIFICATION	1.0094704928249298E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998990529507	WITHOUT_CLASSIFICATION	1.0094704928249298E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998990529507	WITHOUT_CLASSIFICATION	1.0094704928249298E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998990529507	WITHOUT_CLASSIFICATION	1.0094704928249298E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998990529507	WITHOUT_CLASSIFICATION	1.0094704928249298E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999978746843183	WITHOUT_CLASSIFICATION	2.125315681675536E-6	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999978746843183	WITHOUT_CLASSIFICATION	2.125315681675536E-6	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999978746843183	WITHOUT_CLASSIFICATION	2.125315681675536E-6	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999978746843183	WITHOUT_CLASSIFICATION	2.125315681675536E-6	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999978746843183	WITHOUT_CLASSIFICATION	2.125315681675536E-6	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999978746843183	WITHOUT_CLASSIFICATION	2.125315681675536E-6	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.999981979336672	WITHOUT_CLASSIFICATION	1.8020663327989186E-5	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999891802796935	WITHOUT_CLASSIFICATION	1.0819720306468911E-5	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999555206762565	WITHOUT_CLASSIFICATION	4.447932374355905E-5	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9998790119222922	WITHOUT_CLASSIFICATION	1.2098807770767852E-4	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999999981290623	WITHOUT_CLASSIFICATION	1.87093769728049E-9	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999543927128254	WITHOUT_CLASSIFICATION	4.5607287174669955E-5	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999923935530101	WITHOUT_CLASSIFICATION	7.606446989996622E-6	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999986907266579	WITHOUT_CLASSIFICATION	1.3092733420890564E-6	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999959676786869	WITHOUT_CLASSIFICATION	4.032321313094902E-6	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999649124115482	WITHOUT_CLASSIFICATION	3.508758845177611E-5	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9945727677742355	IMPLEMENTATION	0.005427232225764538	WITHOUT_CLASSIFICATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999311374458	WITHOUT_CLASSIFICATION	6.886255424871861E-8	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999704559203828	WITHOUT_CLASSIFICATION	2.9544079617194944E-5	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999379084135	WITHOUT_CLASSIFICATION	6.20915865486324E-8	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999999937300093	WITHOUT_CLASSIFICATION	6.269990670530948E-9	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.999913311984364	WITHOUT_CLASSIFICATION	8.668801563602929E-5	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999921824112834	WITHOUT_CLASSIFICATION	7.817588716674272E-6	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999996438756079	WITHOUT_CLASSIFICATION	3.561243921324678E-7	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999945078584256	WITHOUT_CLASSIFICATION	5.492141574356635E-6	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999985007412464	WITHOUT_CLASSIFICATION	1.4992587535327051E-6	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.999978589237709	WITHOUT_CLASSIFICATION	2.1410762290995128E-5	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999967407035046	WITHOUT_CLASSIFICATION	3.259296495443032E-6	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999539143036977	WITHOUT_CLASSIFICATION	4.6085696302265815E-5	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9526600984860147	WITHOUT_CLASSIFICATION	0.04733990151398525	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999879460613095	WITHOUT_CLASSIFICATION	1.2053938690586416E-5	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999937446113487	WITHOUT_CLASSIFICATION	6.255388651341899E-6	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999992562290576	WITHOUT_CLASSIFICATION	7.437709425058097E-7	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9969007008630316	WITHOUT_CLASSIFICATION	0.0030992991369684806	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.999844073486966	WITHOUT_CLASSIFICATION	1.5592651303397164E-4	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9995337526629947	WITHOUT_CLASSIFICATION	4.662473370053323E-4	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.9991746261140103	WITHOUT_CLASSIFICATION	8.253738859898053E-4	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9998673279292329	WITHOUT_CLASSIFICATION	1.3267207076697715E-4	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9995141854475751	WITHOUT_CLASSIFICATION	4.858145524249483E-4	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9999963528478144	WITHOUT_CLASSIFICATION	3.6471521855089343E-6	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999577875137988	WITHOUT_CLASSIFICATION	4.221248620112756E-5	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999525348841587	WITHOUT_CLASSIFICATION	4.746511584118535E-5	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999900140275482	WITHOUT_CLASSIFICATION	9.985972451897816E-6	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999986576969861	WITHOUT_CLASSIFICATION	1.3423030139071065E-6	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.999613296021384	WITHOUT_CLASSIFICATION	3.867039786158632E-4	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999596349010836	WITHOUT_CLASSIFICATION	4.036509891642062E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999953102828333	WITHOUT_CLASSIFICATION	4.689717166762965E-6	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999990109154706	WITHOUT_CLASSIFICATION	9.890845294037258E-7	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999961331438797	WITHOUT_CLASSIFICATION	3.866856120318986E-6	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999943370606484	WITHOUT_CLASSIFICATION	5.662939351518378E-6	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999943370606484	WITHOUT_CLASSIFICATION	5.662939351518378E-6	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999987239488983	WITHOUT_CLASSIFICATION	1.2760511015818919E-6	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999987239488983	WITHOUT_CLASSIFICATION	1.2760511015818919E-6	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999952763569254	WITHOUT_CLASSIFICATION	4.723643074590774E-6	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999952763569254	WITHOUT_CLASSIFICATION	4.723643074590774E-6	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9998545679302439	WITHOUT_CLASSIFICATION	1.4543206975603862E-4	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999348653706446	WITHOUT_CLASSIFICATION	6.513462935541193E-5	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999986092577346	WITHOUT_CLASSIFICATION	1.3907422654650327E-6	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999969664696667	WITHOUT_CLASSIFICATION	3.033530333265901E-6	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999922633416632	WITHOUT_CLASSIFICATION	7.736658336689744E-6	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.999997178923598	WITHOUT_CLASSIFICATION	2.821076402119084E-6	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9999966528489962	WITHOUT_CLASSIFICATION	3.347151003706849E-6	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.99999956825822	WITHOUT_CLASSIFICATION	4.3174178004726097E-7	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999999990835597	WITHOUT_CLASSIFICATION	9.16440190431685E-10	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999999924333157	WITHOUT_CLASSIFICATION	7.566684285657591E-9	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999994629167891	WITHOUT_CLASSIFICATION	5.370832109922483E-7	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999994485521734	WITHOUT_CLASSIFICATION	5.514478265960366E-7	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999994557341668	WITHOUT_CLASSIFICATION	5.442658331468582E-7	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.99999960310537	WITHOUT_CLASSIFICATION	3.968946300297575E-7	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.99999002448799	WITHOUT_CLASSIFICATION	9.975512010089715E-6	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9999956980994782	WITHOUT_CLASSIFICATION	4.301900521818949E-6	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999994461784069	WITHOUT_CLASSIFICATION	5.538215931671703E-7	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999997562975147	WITHOUT_CLASSIFICATION	2.437024853679775E-7	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9995710654995401	WITHOUT_CLASSIFICATION	4.2893450045982615E-4	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9999947754591252	WITHOUT_CLASSIFICATION	5.224540874796467E-6	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9999712325592555	WITHOUT_CLASSIFICATION	2.8767440744455388E-5	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999797994388608	WITHOUT_CLASSIFICATION	2.0200561139233752E-5	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999937790015156	WITHOUT_CLASSIFICATION	6.220998484384208E-6	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999967639731207	WITHOUT_CLASSIFICATION	3.236026879366701E-6	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999997062265773	WITHOUT_CLASSIFICATION	2.937734226829858E-7	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999995797623472	WITHOUT_CLASSIFICATION	4.2023765280936255E-7	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9999985144606954	WITHOUT_CLASSIFICATION	1.4855393045123665E-6	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997445670228	WITHOUT_CLASSIFICATION	2.554329772840763E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997445670228	WITHOUT_CLASSIFICATION	2.554329772840763E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997445670228	WITHOUT_CLASSIFICATION	2.554329772840763E-7	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999995326803301	WITHOUT_CLASSIFICATION	4.673196698258908E-7	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999995326803301	WITHOUT_CLASSIFICATION	4.673196698258908E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999949839906944	WITHOUT_CLASSIFICATION	5.0160093054779876E-6	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999949839906944	WITHOUT_CLASSIFICATION	5.0160093054779876E-6	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999999989616616	WITHOUT_CLASSIFICATION	1.038338412206565E-9	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9998380829494747	WITHOUT_CLASSIFICATION	1.6191705052518026E-4	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.99999763916029	WITHOUT_CLASSIFICATION	2.360839710044836E-6	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999999554394354	WITHOUT_CLASSIFICATION	4.456056454171492E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997445670228	WITHOUT_CLASSIFICATION	2.554329772840763E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997445670228	WITHOUT_CLASSIFICATION	2.554329772840763E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999997445670228	WITHOUT_CLASSIFICATION	2.554329772840763E-7	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999995326803301	WITHOUT_CLASSIFICATION	4.673196698258908E-7	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999995326803301	WITHOUT_CLASSIFICATION	4.673196698258908E-7	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999995326803301	WITHOUT_CLASSIFICATION	4.673196698258908E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999949839906944	WITHOUT_CLASSIFICATION	5.0160093054779876E-6	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999949839906944	WITHOUT_CLASSIFICATION	5.0160093054779876E-6	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999999810846891	WITHOUT_CLASSIFICATION	1.8915310817901986E-8	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999999983781488	WITHOUT_CLASSIFICATION	1.6218512012620314E-9	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999997364577	WITHOUT_CLASSIFICATION	2.6354240615847716E-10	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999997364577	WITHOUT_CLASSIFICATION	2.6354240615847716E-10	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999997364577	WITHOUT_CLASSIFICATION	2.6354240615847716E-10	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999997364577	WITHOUT_CLASSIFICATION	2.6354240615847716E-10	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999997364577	WITHOUT_CLASSIFICATION	2.6354240615847716E-10	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999978851636876	WITHOUT_CLASSIFICATION	2.1148363123797664E-6	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999793397934399	WITHOUT_CLASSIFICATION	2.066020656014119E-5	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9996642989504493	WITHOUT_CLASSIFICATION	3.3570104955081104E-4	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999957917049419	WITHOUT_CLASSIFICATION	4.2082950580999665E-6	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999926715035835	WITHOUT_CLASSIFICATION	7.328496416560949E-6	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999845156757688	WITHOUT_CLASSIFICATION	1.548432423116453E-5	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9980629801337683	WITHOUT_CLASSIFICATION	0.0019370198662317741	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999971745209201	WITHOUT_CLASSIFICATION	2.825479079994462E-6	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.999964131561094	WITHOUT_CLASSIFICATION	3.586843890597955E-5	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999976273469301	WITHOUT_CLASSIFICATION	2.3726530699401643E-6	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999764318844554	WITHOUT_CLASSIFICATION	2.356811554460256E-5	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.99999999169791	WITHOUT_CLASSIFICATION	8.3020899050665E-9	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999844521448276	WITHOUT_CLASSIFICATION	1.5547855172332944E-5	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999991260360177	WITHOUT_CLASSIFICATION	8.739639822095245E-7	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999987596399592	WITHOUT_CLASSIFICATION	1.240360040826984E-6	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999732263471222	WITHOUT_CLASSIFICATION	2.677365287781131E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999732263471222	WITHOUT_CLASSIFICATION	2.677365287781131E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999732263471222	WITHOUT_CLASSIFICATION	2.677365287781131E-5	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999959048252225	WITHOUT_CLASSIFICATION	4.0951747775687865E-6	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999959070979911	WITHOUT_CLASSIFICATION	4.092902008831161E-6	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999332454110261	WITHOUT_CLASSIFICATION	6.675458897378778E-5	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999966291637	WITHOUT_CLASSIFICATION	3.370836137468976E-9	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999998850485425	WITHOUT_CLASSIFICATION	1.1495145740514858E-7	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999784713684041	WITHOUT_CLASSIFICATION	2.1528631595840523E-5	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.999997576482574	WITHOUT_CLASSIFICATION	2.423517425918102E-6	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9999991464049715	WITHOUT_CLASSIFICATION	8.535950285947555E-7	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999994066775124	WITHOUT_CLASSIFICATION	5.933224875304947E-7	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999997392990378	WITHOUT_CLASSIFICATION	2.6070096211905E-7	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999999653383969	WITHOUT_CLASSIFICATION	3.466160303282216E-8	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999999859806511	WITHOUT_CLASSIFICATION	1.4019348984797085E-8	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999833962546875	WITHOUT_CLASSIFICATION	1.660374531247514E-5	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9999979586270531	WITHOUT_CLASSIFICATION	2.041372946846906E-6	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9999984681887049	WITHOUT_CLASSIFICATION	1.5318112950752054E-6	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999904520355453	WITHOUT_CLASSIFICATION	9.547964454737168E-6	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999987976035707	WITHOUT_CLASSIFICATION	1.2023964292462128E-6	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999996642784018	WITHOUT_CLASSIFICATION	3.3572159824580977E-7	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9999973159394759	WITHOUT_CLASSIFICATION	2.6840605240468056E-6	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999997052322784	WITHOUT_CLASSIFICATION	2.947677216139498E-7	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999908992304656	WITHOUT_CLASSIFICATION	9.10076953436296E-6	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999960819460488	WITHOUT_CLASSIFICATION	3.918053951163655E-6	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9989974203613815	WITHOUT_CLASSIFICATION	0.0010025796386185532	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999957590563823	WITHOUT_CLASSIFICATION	4.240943617740432E-6	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9999979608762967	WITHOUT_CLASSIFICATION	2.0391237032979843E-6	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9999970964668775	WITHOUT_CLASSIFICATION	2.9035331225069466E-6	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9999987549911384	WITHOUT_CLASSIFICATION	1.2450088615571194E-6	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.999994997585386	WITHOUT_CLASSIFICATION	5.002414613987837E-6	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999902232747676	WITHOUT_CLASSIFICATION	9.776725232408005E-6	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.999998040671373	WITHOUT_CLASSIFICATION	1.9593286271004986E-6	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9999976496775864	WITHOUT_CLASSIFICATION	2.350322413685698E-6	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9999988950040961	WITHOUT_CLASSIFICATION	1.1049959038677692E-6	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.9999982995752223	WITHOUT_CLASSIFICATION	1.70042477772941E-6	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9999987954424859	WITHOUT_CLASSIFICATION	1.2045575140359497E-6	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9999985778405563	WITHOUT_CLASSIFICATION	1.422159443730025E-6	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9999986894510263	WITHOUT_CLASSIFICATION	1.310548973614522E-6	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999859786601747	WITHOUT_CLASSIFICATION	1.4021339825351295E-5	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999994082014675	WITHOUT_CLASSIFICATION	5.917985324571169E-7	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9998611049979541	WITHOUT_CLASSIFICATION	1.38895002045969E-4	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9998607193009961	WITHOUT_CLASSIFICATION	1.3928069900383936E-4	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999999996801618	WITHOUT_CLASSIFICATION	3.1983818149876055E-10	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999967672098057	WITHOUT_CLASSIFICATION	3.232790194242309E-6	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.999965772278418	WITHOUT_CLASSIFICATION	3.4227721582051546E-5	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999400076673844	WITHOUT_CLASSIFICATION	5.999233261545251E-5	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999993568305239	WITHOUT_CLASSIFICATION	6.431694761228809E-7	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999894583120599	WITHOUT_CLASSIFICATION	1.0541687940143283E-5	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9994558455599911	WITHOUT_CLASSIFICATION	5.441544400088327E-4	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9994558455599911	WITHOUT_CLASSIFICATION	5.441544400088327E-4	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999523327029448	WITHOUT_CLASSIFICATION	4.766729705518439E-5	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999560344261856	WITHOUT_CLASSIFICATION	4.396557381440467E-5	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999928317964715	WITHOUT_CLASSIFICATION	7.168203528487503E-6	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999997328555119	WITHOUT_CLASSIFICATION	2.671444880806696E-7	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9998171346307672	WITHOUT_CLASSIFICATION	1.8286536923282958E-4	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999978889930472	WITHOUT_CLASSIFICATION	2.111006952847828E-6	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999991527193208	WITHOUT_CLASSIFICATION	8.472806791939892E-7	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999983953736	WITHOUT_CLASSIFICATION	1.6046264143918615E-9	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.999998251247882	WITHOUT_CLASSIFICATION	1.7487521181092834E-6	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9997986912360178	WITHOUT_CLASSIFICATION	2.0130876398222048E-4	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999978802027525	WITHOUT_CLASSIFICATION	2.119797247546236E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999978802027525	WITHOUT_CLASSIFICATION	2.119797247546236E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999978802027525	WITHOUT_CLASSIFICATION	2.119797247546236E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999978802027525	WITHOUT_CLASSIFICATION	2.119797247546236E-6	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9999682286522247	WITHOUT_CLASSIFICATION	3.177134777537829E-5	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9999987873515919	WITHOUT_CLASSIFICATION	1.2126484081903036E-6	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9999867527403898	WITHOUT_CLASSIFICATION	1.3247259610091134E-5	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9997868338184228	WITHOUT_CLASSIFICATION	2.1316618157724354E-4	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9992199986118209	WITHOUT_CLASSIFICATION	7.800013881791219E-4	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999973625203652	WITHOUT_CLASSIFICATION	2.637479634869451E-6	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999935120417691	WITHOUT_CLASSIFICATION	6.4879582309096785E-6	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999992600804665	WITHOUT_CLASSIFICATION	7.399195334789095E-7	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999992600804665	WITHOUT_CLASSIFICATION	7.399195334789095E-7	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999993273791202	WITHOUT_CLASSIFICATION	6.726208798282293E-7	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999892433483453	WITHOUT_CLASSIFICATION	1.0756651654719084E-5	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999887081210254	WITHOUT_CLASSIFICATION	1.1291878974766084E-5	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999409222082	WITHOUT_CLASSIFICATION	5.907779172846672E-8	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999409222082	WITHOUT_CLASSIFICATION	5.907779172846672E-8	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999999886398269	WITHOUT_CLASSIFICATION	1.1360173225116447E-8	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9980866458159136	WITHOUT_CLASSIFICATION	0.0019133541840864175	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9980866458159136	WITHOUT_CLASSIFICATION	0.0019133541840864175	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999985857467988	WITHOUT_CLASSIFICATION	1.4142532012137934E-6	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999999879733579	WITHOUT_CLASSIFICATION	1.2026642159471554E-8	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.999999835310628	WITHOUT_CLASSIFICATION	1.6468937199839447E-7	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999973789545502	WITHOUT_CLASSIFICATION	2.621045449764081E-6	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9984889201594781	WITHOUT_CLASSIFICATION	0.0015110798405219487	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999981310245996	WITHOUT_CLASSIFICATION	1.8689754003471538E-6	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9993331531531862	WITHOUT_CLASSIFICATION	6.668468468138026E-4	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9996747645991448	WITHOUT_CLASSIFICATION	3.252354008551283E-4	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999673608894804	WITHOUT_CLASSIFICATION	3.263911051969317E-5	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999999691264816	WITHOUT_CLASSIFICATION	3.087351848629424E-8	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999980264913919	WITHOUT_CLASSIFICATION	1.9735086080478867E-6	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999975627446064	WITHOUT_CLASSIFICATION	2.4372553936355485E-6	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999877257737975	WITHOUT_CLASSIFICATION	1.2274226202477622E-5	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999950008796126	WITHOUT_CLASSIFICATION	4.999120387524217E-6	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999956956622196	WITHOUT_CLASSIFICATION	4.30433778041557E-6	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.999906695725359	WITHOUT_CLASSIFICATION	9.330427464106639E-5	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9999969968233304	WITHOUT_CLASSIFICATION	3.0031766695376057E-6	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9999969679057338	WITHOUT_CLASSIFICATION	3.0320942661369423E-6	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999800473037651	WITHOUT_CLASSIFICATION	1.9952696234868445E-5	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9998412910071977	WITHOUT_CLASSIFICATION	1.587089928024087E-4	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999090488756219	WITHOUT_CLASSIFICATION	9.095112437797938E-5	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.999999445409373	WITHOUT_CLASSIFICATION	5.545906270249212E-7	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999986996781886	WITHOUT_CLASSIFICATION	1.300321811452671E-6	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999994919333366	WITHOUT_CLASSIFICATION	5.080666634160386E-7	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999997675637319	WITHOUT_CLASSIFICATION	2.3243626801398832E-7	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999996780250193	WITHOUT_CLASSIFICATION	3.219749807339489E-7	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999927832559367	WITHOUT_CLASSIFICATION	7.216744063316394E-6	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.999995839514548	WITHOUT_CLASSIFICATION	4.1604854520408655E-6	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999876616499	WITHOUT_CLASSIFICATION	1.2338350185619607E-8	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999761415476384	WITHOUT_CLASSIFICATION	2.3858452361652667E-5	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9999962072043926	WITHOUT_CLASSIFICATION	3.792795607388392E-6	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999994130331682	WITHOUT_CLASSIFICATION	5.86966831727978E-7	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9995179036549383	WITHOUT_CLASSIFICATION	4.8209634506181706E-4	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999384332789739	WITHOUT_CLASSIFICATION	6.156672102603238E-5	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999985936807124	WITHOUT_CLASSIFICATION	1.4063192875730675E-6	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999990297054308	WITHOUT_CLASSIFICATION	9.70294569277866E-7	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999989536403153	WITHOUT_CLASSIFICATION	1.0463596846743737E-6	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999914432068895	WITHOUT_CLASSIFICATION	8.55679311053772E-6	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9998756536964255	WITHOUT_CLASSIFICATION	1.2434630357450492E-4	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999990297054308	WITHOUT_CLASSIFICATION	9.70294569277866E-7	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999989536403153	WITHOUT_CLASSIFICATION	1.0463596846743737E-6	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999995932834083	WITHOUT_CLASSIFICATION	4.067165916641675E-7	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.999972369413573	WITHOUT_CLASSIFICATION	2.7630586427047948E-5	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.999972369413573	WITHOUT_CLASSIFICATION	2.7630586427047948E-5	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999386862053795	WITHOUT_CLASSIFICATION	6.131379462044456E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999992379733551	WITHOUT_CLASSIFICATION	7.620266448941291E-7	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999993283012847	WITHOUT_CLASSIFICATION	6.71698715316447E-7	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999981644858956	WITHOUT_CLASSIFICATION	1.8355141042656562E-6	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9995835504420765	WITHOUT_CLASSIFICATION	4.164495579234488E-4	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999989372394138	WITHOUT_CLASSIFICATION	1.0627605862430377E-6	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999462818571359	WITHOUT_CLASSIFICATION	5.371814286417539E-5	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999601534076654	WITHOUT_CLASSIFICATION	3.9846592334498925E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9998283684372298	WITHOUT_CLASSIFICATION	1.7163156277019934E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999942901022217	WITHOUT_CLASSIFICATION	5.709897778248224E-6	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999984169985864	WITHOUT_CLASSIFICATION	1.5830014135339144E-6	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999994101530307	WITHOUT_CLASSIFICATION	5.898469693126719E-7	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.999999976315311	WITHOUT_CLASSIFICATION	2.3684689002897703E-8	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999996998435627	WITHOUT_CLASSIFICATION	3.001564372423123E-7	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999996998435627	WITHOUT_CLASSIFICATION	3.001564372423123E-7	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.996295967745443	WITHOUT_CLASSIFICATION	0.0037040322545569687	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.996295967745443	WITHOUT_CLASSIFICATION	0.0037040322545569687	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999997517766052	WITHOUT_CLASSIFICATION	2.4822339478184843E-7	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999839370495827	WITHOUT_CLASSIFICATION	1.606295041724955E-5	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999679556282681	WITHOUT_CLASSIFICATION	3.2044371731884464E-5	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999996110300482	WITHOUT_CLASSIFICATION	3.8896995179562154E-7	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999912195062943	WITHOUT_CLASSIFICATION	8.78049370567617E-6	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999542897496626	WITHOUT_CLASSIFICATION	4.571025033741605E-5	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999993283012847	WITHOUT_CLASSIFICATION	6.71698715316447E-7	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999981644858956	WITHOUT_CLASSIFICATION	1.8355141042656562E-6	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9998283684372298	WITHOUT_CLASSIFICATION	1.7163156277019934E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999942901022217	WITHOUT_CLASSIFICATION	5.709897778248224E-6	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9997427799127099	WITHOUT_CLASSIFICATION	2.5722008729013937E-4	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999630357204593	WITHOUT_CLASSIFICATION	3.696427954076261E-5	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999959957905751	WITHOUT_CLASSIFICATION	4.004209424988888E-6	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999998139052114	WITHOUT_CLASSIFICATION	1.8609478862409345E-7	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999865669660504	WITHOUT_CLASSIFICATION	1.343303394964368E-5	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999999267968894	WITHOUT_CLASSIFICATION	7.320311056285019E-8	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999993873665053	WITHOUT_CLASSIFICATION	6.126334946983075E-7	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999912086703241	WITHOUT_CLASSIFICATION	8.791329675935186E-6	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999982252356238	WITHOUT_CLASSIFICATION	1.7747643762122572E-6	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999944492883582	WITHOUT_CLASSIFICATION	5.55071164180038E-6	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999998864641378	WITHOUT_CLASSIFICATION	1.1353586218296485E-7	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999993451253179	WITHOUT_CLASSIFICATION	6.548746821169645E-7	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.9999836183607524	WITHOUT_CLASSIFICATION	1.6381639247637078E-5	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999906285802537	WITHOUT_CLASSIFICATION	9.37141974626467E-6	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999384728263568	WITHOUT_CLASSIFICATION	6.152717364313265E-5	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999999421231592	WITHOUT_CLASSIFICATION	5.78768408212485E-8	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999807690430971	WITHOUT_CLASSIFICATION	1.9230956902920028E-5	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999987527932424	WITHOUT_CLASSIFICATION	1.2472067576662538E-6	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999997978283345	WITHOUT_CLASSIFICATION	2.0217166546138885E-7	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999987992894002	WITHOUT_CLASSIFICATION	1.2007105998890138E-6	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999989562070096	WITHOUT_CLASSIFICATION	1.0437929903698693E-6	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999989562070096	WITHOUT_CLASSIFICATION	1.0437929903698693E-6	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999994920951404	WITHOUT_CLASSIFICATION	5.079048596000819E-7	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999991349493441	WITHOUT_CLASSIFICATION	8.650506559078856E-7	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999999918255097	WITHOUT_CLASSIFICATION	8.174490342681077E-9	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999626268804532	WITHOUT_CLASSIFICATION	3.73731195467782E-5	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999626268804532	WITHOUT_CLASSIFICATION	3.73731195467782E-5	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999959957905751	WITHOUT_CLASSIFICATION	4.004209424988888E-6	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9998631146609337	WITHOUT_CLASSIFICATION	1.3688533906632333E-4	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999809849864905	WITHOUT_CLASSIFICATION	1.9015013509521054E-5	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999806172555777	WITHOUT_CLASSIFICATION	1.9382744422158748E-5	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999840153898403	WITHOUT_CLASSIFICATION	1.5984610159661828E-5	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999880419519223	WITHOUT_CLASSIFICATION	1.195804807778321E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999985298787889	WITHOUT_CLASSIFICATION	1.4701212111017963E-5	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999944913283455	WITHOUT_CLASSIFICATION	5.508671654545442E-6	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9999273442924843	WITHOUT_CLASSIFICATION	7.265570751570306E-5	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999967176895554	WITHOUT_CLASSIFICATION	3.282310444697418E-6	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999385211564947	WITHOUT_CLASSIFICATION	6.147884350526764E-5	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999958138336035	WITHOUT_CLASSIFICATION	4.186166396584375E-6	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999698508255906	WITHOUT_CLASSIFICATION	3.0149174409275097E-5	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999901043432454	WITHOUT_CLASSIFICATION	9.895656754654093E-6	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999082029121704	WITHOUT_CLASSIFICATION	9.179708782957535E-5	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9999724632712994	WITHOUT_CLASSIFICATION	2.753672870056887E-5	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999998040039438	WITHOUT_CLASSIFICATION	1.9599605606775742E-7	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9999984094768452	WITHOUT_CLASSIFICATION	1.590523154860653E-6	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999999321350832	WITHOUT_CLASSIFICATION	6.786491690120399E-8	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.999999973561229	WITHOUT_CLASSIFICATION	2.643877095308342E-8	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999998209295138	WITHOUT_CLASSIFICATION	1.7907048627989507E-7	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999900200103509	WITHOUT_CLASSIFICATION	9.979989649219638E-6	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999963304335665	WITHOUT_CLASSIFICATION	3.669566433600181E-6	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999979979935852	WITHOUT_CLASSIFICATION	2.002006414829289E-6	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999993892907556	WITHOUT_CLASSIFICATION	6.107092444219873E-7	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999997121562606	WITHOUT_CLASSIFICATION	2.878437394047251E-7	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999871818246586	WITHOUT_CLASSIFICATION	1.2818175341336131E-5	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.999998663078373	WITHOUT_CLASSIFICATION	1.3369216269401633E-6	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999972138963021	WITHOUT_CLASSIFICATION	2.786103697763577E-6	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999870916595865	WITHOUT_CLASSIFICATION	1.2908340413496046E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999993142273829	WITHOUT_CLASSIFICATION	6.857726170557641E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999993142273829	WITHOUT_CLASSIFICATION	6.857726170557641E-7	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999999880777256	WITHOUT_CLASSIFICATION	1.1922274413766554E-8	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999987468235809	WITHOUT_CLASSIFICATION	1.2531764190626578E-6	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999987468235809	WITHOUT_CLASSIFICATION	1.2531764190626578E-6	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999895209799237	WITHOUT_CLASSIFICATION	1.0479020076270672E-5	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999895209799237	WITHOUT_CLASSIFICATION	1.0479020076270672E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996102002603	WITHOUT_CLASSIFICATION	3.8979973978106895E-7	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999990209546078	WITHOUT_CLASSIFICATION	9.790453921829627E-7	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9998052129914086	WITHOUT_CLASSIFICATION	1.9478700859134658E-4	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999992275331034	WITHOUT_CLASSIFICATION	7.72466896638304E-7	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999997385626859	WITHOUT_CLASSIFICATION	2.614373141773298E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999998525302404	WITHOUT_CLASSIFICATION	1.474697596008356E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999998525302404	WITHOUT_CLASSIFICATION	1.474697596008356E-6	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999993892907556	WITHOUT_CLASSIFICATION	6.107092444219873E-7	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999993892907556	WITHOUT_CLASSIFICATION	6.107092444219873E-7	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999993892907556	WITHOUT_CLASSIFICATION	6.107092444219873E-7	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999997121562606	WITHOUT_CLASSIFICATION	2.878437394047251E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999993142273829	WITHOUT_CLASSIFICATION	6.857726170557641E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999993142273829	WITHOUT_CLASSIFICATION	6.857726170557641E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999993142273829	WITHOUT_CLASSIFICATION	6.857726170557641E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996102002603	WITHOUT_CLASSIFICATION	3.8979973978106895E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996102002603	WITHOUT_CLASSIFICATION	3.8979973978106895E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996102002603	WITHOUT_CLASSIFICATION	3.8979973978106895E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999992275331034	WITHOUT_CLASSIFICATION	7.72466896638304E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999992275331034	WITHOUT_CLASSIFICATION	7.72466896638304E-7	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999562012714216	WITHOUT_CLASSIFICATION	4.379872857829997E-5	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999926737278289	WITHOUT_CLASSIFICATION	7.326272171216519E-6	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999625528880707	WITHOUT_CLASSIFICATION	3.7447111929291975E-5	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9995073993959044	WITHOUT_CLASSIFICATION	4.926006040956509E-4	IMPLEMENTATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9997153591005407	WITHOUT_CLASSIFICATION	2.8464089945936204E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9999990661436249	WITHOUT_CLASSIFICATION	9.338563752308873E-7	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9999990661436249	WITHOUT_CLASSIFICATION	9.338563752308873E-7	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999994497020986	WITHOUT_CLASSIFICATION	5.502979013128823E-7	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999985298787889	WITHOUT_CLASSIFICATION	1.4701212111017963E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999985298787889	WITHOUT_CLASSIFICATION	1.4701212111017963E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999985298787889	WITHOUT_CLASSIFICATION	1.4701212111017963E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999985298787889	WITHOUT_CLASSIFICATION	1.4701212111017963E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999985298787889	WITHOUT_CLASSIFICATION	1.4701212111017963E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.999996740056059	WITHOUT_CLASSIFICATION	3.259943941057765E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.999996740056059	WITHOUT_CLASSIFICATION	3.259943941057765E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.999996740056059	WITHOUT_CLASSIFICATION	3.259943941057765E-6	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999998407580984	WITHOUT_CLASSIFICATION	1.5924190156407633E-7	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999641106456941	WITHOUT_CLASSIFICATION	3.5889354305873074E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999997121562606	WITHOUT_CLASSIFICATION	2.878437394047251E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996102002603	WITHOUT_CLASSIFICATION	3.8979973978106895E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996102002603	WITHOUT_CLASSIFICATION	3.8979973978106895E-7	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999985298787889	WITHOUT_CLASSIFICATION	1.4701212111017963E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999985298787889	WITHOUT_CLASSIFICATION	1.4701212111017963E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.999996740056059	WITHOUT_CLASSIFICATION	3.259943941057765E-6	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999994497020986	WITHOUT_CLASSIFICATION	5.502979013128823E-7	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999995302128544	WITHOUT_CLASSIFICATION	4.697871456030733E-7	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.9999986146658096	WITHOUT_CLASSIFICATION	1.3853341903926074E-6	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999998643448222	WITHOUT_CLASSIFICATION	1.3565517782608716E-7	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999594897708222	WITHOUT_CLASSIFICATION	4.051022917775099E-5	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.999995632939043	WITHOUT_CLASSIFICATION	4.367060956934676E-6	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999966931960254	WITHOUT_CLASSIFICATION	3.3068039746408855E-6	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999461395909636	WITHOUT_CLASSIFICATION	5.386040903648387E-5	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999821118823542	WITHOUT_CLASSIFICATION	1.7888117645749674E-5	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999950188126571	WITHOUT_CLASSIFICATION	4.981187342913826E-6	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999989070067735	WITHOUT_CLASSIFICATION	1.0929932265229505E-6	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.999974334476242	WITHOUT_CLASSIFICATION	2.566552375795295E-5	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999989589102652	WITHOUT_CLASSIFICATION	1.0410897346810728E-6	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999946190940762	WITHOUT_CLASSIFICATION	5.380905923836899E-6	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9997525586630243	WITHOUT_CLASSIFICATION	2.4744133697573724E-4	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999956253181884	WITHOUT_CLASSIFICATION	4.374681811518303E-6	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9942555796867681	WITHOUT_CLASSIFICATION	0.005744420313231883	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.999979051880958	WITHOUT_CLASSIFICATION	2.094811904189393E-5	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999997631654745	WITHOUT_CLASSIFICATION	2.368345256945822E-7	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9997399487264705	WITHOUT_CLASSIFICATION	2.6005127352944315E-4	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999997737060305	WITHOUT_CLASSIFICATION	2.2629396948261724E-7	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9992203956596997	WITHOUT_CLASSIFICATION	7.796043403004131E-4	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999979988216	WITHOUT_CLASSIFICATION	2.0011784435248097E-9	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999972998799	WITHOUT_CLASSIFICATION	2.7001200995912797E-9	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999589573451187	WITHOUT_CLASSIFICATION	4.104265488126856E-5	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999997009118424	WITHOUT_CLASSIFICATION	2.9908815761496286E-7	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999873472366679	WITHOUT_CLASSIFICATION	1.2652763332034737E-5	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9999836827889056	WITHOUT_CLASSIFICATION	1.6317211094334148E-5	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999999687481375	WITHOUT_CLASSIFICATION	3.1251862491743095E-8	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999991528601582	WITHOUT_CLASSIFICATION	8.471398418364909E-7	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9984392674947449	WITHOUT_CLASSIFICATION	0.0015607325052552049	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999999100298014	WITHOUT_CLASSIFICATION	8.997019864286544E-8	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999118880816734	WITHOUT_CLASSIFICATION	8.811191832661919E-5	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999999956893039	WITHOUT_CLASSIFICATION	4.310696116223947E-9	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999253922511	WITHOUT_CLASSIFICATION	7.460774896987983E-8	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999995302128544	WITHOUT_CLASSIFICATION	4.697871456030733E-7	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.999999815640189	WITHOUT_CLASSIFICATION	1.8435981097683502E-7	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999995832675809	WITHOUT_CLASSIFICATION	4.1673241912144397E-7	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999998181785935	WITHOUT_CLASSIFICATION	1.8182140656830568E-7	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999977922417493	WITHOUT_CLASSIFICATION	2.207758250615736E-6	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999977922417493	WITHOUT_CLASSIFICATION	2.207758250615736E-6	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9998381821407505	WITHOUT_CLASSIFICATION	1.6181785924950046E-4	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9998381821407505	WITHOUT_CLASSIFICATION	1.6181785924950046E-4	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999999980261782	WITHOUT_CLASSIFICATION	1.9738218639444014E-9	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999999022084346	WITHOUT_CLASSIFICATION	9.779156538442855E-8	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999883558022253	WITHOUT_CLASSIFICATION	1.1644197774603632E-5	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.999788061107413	WITHOUT_CLASSIFICATION	2.119388925870427E-4	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999993220668721	WITHOUT_CLASSIFICATION	6.779331278553493E-7	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9990974734399057	WITHOUT_CLASSIFICATION	9.025265600941648E-4	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999999474522435	WITHOUT_CLASSIFICATION	5.254775651057163E-8	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999898233913516	WITHOUT_CLASSIFICATION	1.0176608648514822E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.995990647263593	WITHOUT_CLASSIFICATION	0.004009352736407051	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999705685302	WITHOUT_CLASSIFICATION	2.9431469796148748E-8	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.999999996716497	WITHOUT_CLASSIFICATION	3.283502987165928E-9	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999781132826322	WITHOUT_CLASSIFICATION	2.1886717367851875E-5	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999781132826322	WITHOUT_CLASSIFICATION	2.1886717367851875E-5	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999999965251307	WITHOUT_CLASSIFICATION	3.4748693151383943E-9	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999965246666439	WITHOUT_CLASSIFICATION	3.4753333561000717E-6	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999949832518169	WITHOUT_CLASSIFICATION	5.016748183043094E-6	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999949832518169	WITHOUT_CLASSIFICATION	5.016748183043094E-6	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999998681311804	WITHOUT_CLASSIFICATION	1.318688196140826E-7	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999801038031	WITHOUT_CLASSIFICATION	1.989619683498176E-8	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999905891102311	WITHOUT_CLASSIFICATION	9.41088976880778E-6	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999987679690318	WITHOUT_CLASSIFICATION	1.2320309682150082E-6	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999997143981181	WITHOUT_CLASSIFICATION	2.8560188192593196E-7	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9998235058733256	WITHOUT_CLASSIFICATION	1.7649412667445862E-4	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9999949394098656	WITHOUT_CLASSIFICATION	5.060590134369365E-6	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999877596224408	WITHOUT_CLASSIFICATION	1.2240377559213377E-5	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9997814809971284	WITHOUT_CLASSIFICATION	2.1851900287168496E-4	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9999992822369751	WITHOUT_CLASSIFICATION	7.177630249767135E-7	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999877298347364	WITHOUT_CLASSIFICATION	1.2270165263559434E-5	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999968376109283	WITHOUT_CLASSIFICATION	3.162389071706129E-6	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999986117332278	WITHOUT_CLASSIFICATION	1.3882667721763013E-6	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999866144906332	WITHOUT_CLASSIFICATION	1.3385509366882044E-5	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999980849343072	WITHOUT_CLASSIFICATION	1.9150656928708415E-6	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999703513662136	WITHOUT_CLASSIFICATION	2.9648633786454086E-5	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999909008944411	WITHOUT_CLASSIFICATION	9.09910555890793E-6	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999975240755902	WITHOUT_CLASSIFICATION	2.4759244097204746E-6	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999999958791186	WITHOUT_CLASSIFICATION	4.1208814267231065E-9	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999996241585679	WITHOUT_CLASSIFICATION	3.7584143207932926E-7	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9555481131670582	IMPLEMENTATION	0.04445188683294164	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999951080901593	WITHOUT_CLASSIFICATION	4.8919098405980584E-6	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999983109856855	WITHOUT_CLASSIFICATION	1.689014314499843E-6	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9998915525331626	WITHOUT_CLASSIFICATION	1.0844746683742302E-4	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999860152950466	WITHOUT_CLASSIFICATION	1.3984704953464796E-5	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999967642638937	WITHOUT_CLASSIFICATION	3.235736106310092E-6	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9999986616102359	WITHOUT_CLASSIFICATION	1.3383897641359326E-6	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999783487516589	WITHOUT_CLASSIFICATION	2.1651248341017624E-5	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999953334342286	WITHOUT_CLASSIFICATION	4.6665657713742056E-6	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999999924932897	WITHOUT_CLASSIFICATION	7.506710279968927E-9	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999998583249992	WITHOUT_CLASSIFICATION	1.4167500089811698E-7	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999999143805453	WITHOUT_CLASSIFICATION	8.561945474786723E-8	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999867393446074	WITHOUT_CLASSIFICATION	1.326065539262453E-5	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999997487964293	WITHOUT_CLASSIFICATION	2.51203570746724E-7	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999997487964293	WITHOUT_CLASSIFICATION	2.51203570746724E-7	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.999978003057346	WITHOUT_CLASSIFICATION	2.1996942654033483E-5	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999998698151035	WITHOUT_CLASSIFICATION	1.3018489647122522E-7	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999999824741168	WITHOUT_CLASSIFICATION	1.7525883196054306E-8	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9999874087442432	WITHOUT_CLASSIFICATION	1.2591255756816894E-5	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9999968828348945	WITHOUT_CLASSIFICATION	3.1171651055552855E-6	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999987284137462	WITHOUT_CLASSIFICATION	1.2715862538695723E-6	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.999983976226285	WITHOUT_CLASSIFICATION	1.602377371509427E-5	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.999990783890537	WITHOUT_CLASSIFICATION	9.216109462919406E-6	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999856160883103	WITHOUT_CLASSIFICATION	1.4383911689684432E-5	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9999949034715655	WITHOUT_CLASSIFICATION	5.096528434501687E-6	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999999976078954	WITHOUT_CLASSIFICATION	2.392104619988983E-9	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9995427266591178	WITHOUT_CLASSIFICATION	4.5727334088222567E-4	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999602306261385	WITHOUT_CLASSIFICATION	3.9769373861545724E-5	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999743244270958	WITHOUT_CLASSIFICATION	2.567557290419117E-5	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999985947521655	WITHOUT_CLASSIFICATION	1.40524783462056E-6	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999985325197257	WITHOUT_CLASSIFICATION	1.4674802742909884E-6	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999595368597288	WITHOUT_CLASSIFICATION	4.0463140271302605E-5	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999923162026738	WITHOUT_CLASSIFICATION	7.683797326170708E-6	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.962102559931921	WITHOUT_CLASSIFICATION	0.037897440068079144	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999018125533851	WITHOUT_CLASSIFICATION	9.818744661496852E-5	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.999994504833222	WITHOUT_CLASSIFICATION	5.495166777888834E-6	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999998586819842	WITHOUT_CLASSIFICATION	1.413180157237952E-7	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999964584822698	WITHOUT_CLASSIFICATION	3.5415177300786687E-6	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.999999397975247	WITHOUT_CLASSIFICATION	6.02024753158161E-7	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999810893219798	WITHOUT_CLASSIFICATION	1.8910678020079677E-5	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999949093652508	WITHOUT_CLASSIFICATION	5.0906347491847935E-6	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999818721917	WITHOUT_CLASSIFICATION	1.8127808236607825E-8	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999998647200103	WITHOUT_CLASSIFICATION	1.35279989636205E-7	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.999873365811263	WITHOUT_CLASSIFICATION	1.2663418873701696E-4	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.999905400258607	WITHOUT_CLASSIFICATION	9.459974139302987E-5	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999920170677967	WITHOUT_CLASSIFICATION	7.982932203319739E-6	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999997787062027	WITHOUT_CLASSIFICATION	2.2129379737738346E-7	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999996662283257	WITHOUT_CLASSIFICATION	3.337716743077367E-7	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999998237307216	WITHOUT_CLASSIFICATION	1.7626927846078744E-7	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999906717460254	WITHOUT_CLASSIFICATION	9.328253974682434E-6	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.999999989020233	WITHOUT_CLASSIFICATION	1.0979766963716154E-8	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999998707172105	WITHOUT_CLASSIFICATION	1.292827894020744E-7	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9999920819238063	WITHOUT_CLASSIFICATION	7.918076193706468E-6	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.999650168931778	WITHOUT_CLASSIFICATION	3.4983106822191915E-4	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999998307873749	WITHOUT_CLASSIFICATION	1.6921262509631134E-7	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999915353248601	WITHOUT_CLASSIFICATION	8.464675139887995E-6	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999991505621485	WITHOUT_CLASSIFICATION	8.494378516190528E-7	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999991505621485	WITHOUT_CLASSIFICATION	8.494378516190528E-7	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999986552492257	WITHOUT_CLASSIFICATION	1.344750774178997E-6	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999999210759218	WITHOUT_CLASSIFICATION	7.892407823635708E-8	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999993088701015	WITHOUT_CLASSIFICATION	6.911298986155566E-7	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999643723045689	WITHOUT_CLASSIFICATION	3.562769543099327E-5	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999299054950942	WITHOUT_CLASSIFICATION	7.009450490573054E-5	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999999992015266	WITHOUT_CLASSIFICATION	7.984733826063207E-10	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999993673459779	WITHOUT_CLASSIFICATION	6.326540219763655E-7	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999998929871234	WITHOUT_CLASSIFICATION	1.0701287645580692E-7	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999978060812639	WITHOUT_CLASSIFICATION	2.19391873617049E-6	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999928854350247	WITHOUT_CLASSIFICATION	7.1145649752589915E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999996147969175	WITHOUT_CLASSIFICATION	3.8520308258569903E-7	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999973067289921	WITHOUT_CLASSIFICATION	2.693271007955542E-6	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999991500584097	WITHOUT_CLASSIFICATION	8.499415903889352E-7	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999934854703849	WITHOUT_CLASSIFICATION	6.514529615000604E-6	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.999991672464651	WITHOUT_CLASSIFICATION	8.327535348997974E-6	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.6275002704157058	WITHOUT_CLASSIFICATION	0.37249972958429417	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999875544958868	WITHOUT_CLASSIFICATION	1.2445504113114873E-5	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999988190858642	WITHOUT_CLASSIFICATION	1.1809141357734952E-6	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999977288902279	WITHOUT_CLASSIFICATION	2.2711097720886344E-6	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999894706369826	WITHOUT_CLASSIFICATION	1.0529363017418948E-5	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999943844816044	WITHOUT_CLASSIFICATION	5.615518395553253E-6	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999969162110673	WITHOUT_CLASSIFICATION	3.083788932606387E-6	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999998915698689	WITHOUT_CLASSIFICATION	1.0843013097937682E-7	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.999948686062794	WITHOUT_CLASSIFICATION	5.131393720598264E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999987194455577	WITHOUT_CLASSIFICATION	1.2805544422531603E-6	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999985661571416	WITHOUT_CLASSIFICATION	1.4338428585477105E-6	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999999992702001	WITHOUT_CLASSIFICATION	7.29799991806451E-10	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999525809366137	WITHOUT_CLASSIFICATION	4.741906338622285E-5	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999996241619403	WITHOUT_CLASSIFICATION	3.758380597367051E-7	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999971204057913	WITHOUT_CLASSIFICATION	2.8795942087039353E-6	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999995749112164	WITHOUT_CLASSIFICATION	4.2508878367364137E-7	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999873650795572	WITHOUT_CLASSIFICATION	1.2634920442726359E-5	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999971204057913	WITHOUT_CLASSIFICATION	2.8795942087039353E-6	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999998554268736	WITHOUT_CLASSIFICATION	1.445731264283298E-7	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999997675637319	WITHOUT_CLASSIFICATION	2.3243626801398832E-7	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.8914574785763145	WITHOUT_CLASSIFICATION	0.1085425214236855	IMPLEMENTATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.7740188654497097	IMPLEMENTATION	0.2259811345502902	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.999990108202186	WITHOUT_CLASSIFICATION	9.891797813939474E-6	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999997364577	WITHOUT_CLASSIFICATION	2.6354240615847716E-10	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999999837546674	WITHOUT_CLASSIFICATION	1.6245332538277594E-8	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999152003725299	WITHOUT_CLASSIFICATION	8.479962747008219E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999992379733551	WITHOUT_CLASSIFICATION	7.620266448941291E-7	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999996241585679	WITHOUT_CLASSIFICATION	3.7584143207932926E-7	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999625528880707	WITHOUT_CLASSIFICATION	3.7447111929291975E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999884905949	WITHOUT_CLASSIFICATION	1.1509405094019609E-8	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999870051993256	WITHOUT_CLASSIFICATION	1.2994800674499684E-5	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999999266561762	WITHOUT_CLASSIFICATION	7.33438237580181E-8	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.999880576446314	WITHOUT_CLASSIFICATION	1.194235536860654E-4	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9999993688553606	WITHOUT_CLASSIFICATION	6.311446393566965E-7	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9999943999882792	WITHOUT_CLASSIFICATION	5.600011720732217E-6	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9998709728394333	WITHOUT_CLASSIFICATION	1.2902716056675858E-4	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999975536459432	WITHOUT_CLASSIFICATION	2.4463540567620995E-6	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999187742331553	WITHOUT_CLASSIFICATION	8.122576684466034E-5	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9999734195958722	WITHOUT_CLASSIFICATION	2.6580404127847526E-5	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9999872182974572	WITHOUT_CLASSIFICATION	1.2781702542892168E-5	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9999974830762514	WITHOUT_CLASSIFICATION	2.5169237487050695E-6	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.999836196573584	WITHOUT_CLASSIFICATION	1.6380342641596758E-4	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999973994768042	WITHOUT_CLASSIFICATION	2.6005231958192247E-6	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999964513413341	WITHOUT_CLASSIFICATION	3.548658665829046E-6	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999919836818995	WITHOUT_CLASSIFICATION	8.016318100460077E-6	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999999918936651	WITHOUT_CLASSIFICATION	8.106334854941686E-9	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999952939328	WITHOUT_CLASSIFICATION	4.7060672073410096E-9	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999965489318512	WITHOUT_CLASSIFICATION	3.451068148894143E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999965489318512	WITHOUT_CLASSIFICATION	3.451068148894143E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999885612935	WITHOUT_CLASSIFICATION	1.1438706615501575E-8	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999985855649	WITHOUT_CLASSIFICATION	1.41443510172812E-9	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999948818931345	WITHOUT_CLASSIFICATION	5.118106865478401E-6	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7129747067927357	WITHOUT_CLASSIFICATION	0.28702529320726433	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7129747067927357	WITHOUT_CLASSIFICATION	0.28702529320726433	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7129747067927357	WITHOUT_CLASSIFICATION	0.28702529320726433	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7129747067927357	WITHOUT_CLASSIFICATION	0.28702529320726433	IMPLEMENTATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999995777135973	WITHOUT_CLASSIFICATION	4.222864027300656E-7	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999995825206887	WITHOUT_CLASSIFICATION	4.174793113589493E-7	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9999907134832148	WITHOUT_CLASSIFICATION	9.286516785274029E-6	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9977943186994961	WITHOUT_CLASSIFICATION	0.00220568130050391	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999258793122745	WITHOUT_CLASSIFICATION	7.412068772545311E-5	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999934599555	WITHOUT_CLASSIFICATION	6.540044499878172E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.999998915566758	WITHOUT_CLASSIFICATION	1.0844332420357406E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.999998915566758	WITHOUT_CLASSIFICATION	1.0844332420357406E-6	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.999970553364159	WITHOUT_CLASSIFICATION	2.9446635841119742E-5	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9999962943125278	WITHOUT_CLASSIFICATION	3.705687472276854E-6	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999967994866685	WITHOUT_CLASSIFICATION	3.2005133314397938E-6	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9995555321358549	WITHOUT_CLASSIFICATION	4.444678641450668E-4	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999843159105335	WITHOUT_CLASSIFICATION	1.568408946653644E-5	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999997330903176	WITHOUT_CLASSIFICATION	2.669096823627182E-7	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999999705749486	WITHOUT_CLASSIFICATION	2.942505139154567E-8	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9998348268290057	WITHOUT_CLASSIFICATION	1.6517317099425826E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999547483342238	WITHOUT_CLASSIFICATION	4.5251665776103455E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999547483342238	WITHOUT_CLASSIFICATION	4.5251665776103455E-5	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999873650795572	WITHOUT_CLASSIFICATION	1.2634920442726359E-5	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9999948959003523	WITHOUT_CLASSIFICATION	5.1040996477164985E-6	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9999953002354323	WITHOUT_CLASSIFICATION	4.699764567689752E-6	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.999935111648037	WITHOUT_CLASSIFICATION	6.488835196309743E-5	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999972386439	WITHOUT_CLASSIFICATION	2.7613561805959365E-9	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9999933144983617	WITHOUT_CLASSIFICATION	6.685501638355889E-6	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999730041777942	WITHOUT_CLASSIFICATION	2.6995822205843087E-5	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999309967434227	WITHOUT_CLASSIFICATION	6.90032565773041E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.999996971420909	WITHOUT_CLASSIFICATION	3.0285790909515054E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.999996971420909	WITHOUT_CLASSIFICATION	3.0285790909515054E-6	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999993664215407	WITHOUT_CLASSIFICATION	6.335784592313801E-7	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.999999946917988	WITHOUT_CLASSIFICATION	5.3082011936347634E-8	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999428742120374	WITHOUT_CLASSIFICATION	5.7125787962542206E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999787197766856	WITHOUT_CLASSIFICATION	2.1280223314366435E-5	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9997033940848814	WITHOUT_CLASSIFICATION	2.966059151186239E-4	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9999838697162968	WITHOUT_CLASSIFICATION	1.6130283703203626E-5	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.973503422807604	WITHOUT_CLASSIFICATION	0.026496577192395995	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999971231679167	WITHOUT_CLASSIFICATION	2.8768320832820304E-6	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999971231679167	WITHOUT_CLASSIFICATION	2.8768320832820304E-6	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999971231679167	WITHOUT_CLASSIFICATION	2.8768320832820304E-6	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999971231679167	WITHOUT_CLASSIFICATION	2.8768320832820304E-6	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999825022279	WITHOUT_CLASSIFICATION	1.7497772078316804E-8	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999917509271308	WITHOUT_CLASSIFICATION	8.24907286918701E-6	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9993487043590958	WITHOUT_CLASSIFICATION	6.512956409040847E-4	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999896073261078	WITHOUT_CLASSIFICATION	1.0392673892356819E-5	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999993321720682	WITHOUT_CLASSIFICATION	6.678279318291503E-7	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9999960416446131	WITHOUT_CLASSIFICATION	3.9583553869484014E-6	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999984549634537	WITHOUT_CLASSIFICATION	1.545036546200675E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999819206149	WITHOUT_CLASSIFICATION	1.8079385086839095E-8	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999819206149	WITHOUT_CLASSIFICATION	1.8079385086839095E-8	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999819206149	WITHOUT_CLASSIFICATION	1.8079385086839095E-8	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999998072412901	WITHOUT_CLASSIFICATION	1.9275870987236285E-7	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999980224346642	WITHOUT_CLASSIFICATION	1.9775653357690526E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999310265235	WITHOUT_CLASSIFICATION	6.897347651775204E-8	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999310265235	WITHOUT_CLASSIFICATION	6.897347651775204E-8	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999872967476048	WITHOUT_CLASSIFICATION	1.270325239524822E-5	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9972618366081616	WITHOUT_CLASSIFICATION	0.002738163391838403	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9996906625247387	WITHOUT_CLASSIFICATION	3.0933747526122764E-4	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9999881076039073	WITHOUT_CLASSIFICATION	1.1892396092764252E-5	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.999999950241938	WITHOUT_CLASSIFICATION	4.9758062015704316E-8	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999938347944299	WITHOUT_CLASSIFICATION	6.16520557012015E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999993808056554	WITHOUT_CLASSIFICATION	6.191943445453317E-7	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999993808056554	WITHOUT_CLASSIFICATION	6.191943445453317E-7	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999988121657082	WITHOUT_CLASSIFICATION	1.1878342917490402E-6	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999978780579	WITHOUT_CLASSIFICATION	2.1219421573732767E-9	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999976955782576	WITHOUT_CLASSIFICATION	2.304421742499569E-6	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9996425398737177	WITHOUT_CLASSIFICATION	3.5746012628228745E-4	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9314828235463533	WITHOUT_CLASSIFICATION	0.06851717645364679	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999915682802971	WITHOUT_CLASSIFICATION	8.431719702920799E-6	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9999990083030362	WITHOUT_CLASSIFICATION	9.916969637677713E-7	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9989501309073401	WITHOUT_CLASSIFICATION	0.0010498690926599105	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.99998950828912	WITHOUT_CLASSIFICATION	1.0491710879941953E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999986717306929	WITHOUT_CLASSIFICATION	1.3282693070396337E-6	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999957997871225	WITHOUT_CLASSIFICATION	4.200212877449626E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999434183214	WITHOUT_CLASSIFICATION	5.6581678564150896E-8	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.7131466673771978	WITHOUT_CLASSIFICATION	0.28685333262280216	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999974756576567	WITHOUT_CLASSIFICATION	2.52434234336776E-6	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999801899694645	WITHOUT_CLASSIFICATION	1.9810030535554803E-5	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999492360329607	WITHOUT_CLASSIFICATION	5.0763967039229145E-5	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999923397027485	WITHOUT_CLASSIFICATION	7.660297251548924E-6	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999915836382882	WITHOUT_CLASSIFICATION	8.416361711846824E-6	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999924199909812	WITHOUT_CLASSIFICATION	7.580009018704301E-6	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999976000033169	WITHOUT_CLASSIFICATION	2.3999966830144015E-6	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999997284552802	WITHOUT_CLASSIFICATION	2.715447198137101E-7	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9968927492728764	WITHOUT_CLASSIFICATION	0.0031072507271236185	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999820256855889	WITHOUT_CLASSIFICATION	1.7974314411107424E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999820256855889	WITHOUT_CLASSIFICATION	1.7974314411107424E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999820256855889	WITHOUT_CLASSIFICATION	1.7974314411107424E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999820256855889	WITHOUT_CLASSIFICATION	1.7974314411107424E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999820256855889	WITHOUT_CLASSIFICATION	1.7974314411107424E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999820256855889	WITHOUT_CLASSIFICATION	1.7974314411107424E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999820256855889	WITHOUT_CLASSIFICATION	1.7974314411107424E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999820256855889	WITHOUT_CLASSIFICATION	1.7974314411107424E-5	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9993238475757235	WITHOUT_CLASSIFICATION	6.761524242766194E-4	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9999969668419633	WITHOUT_CLASSIFICATION	3.0331580368047866E-6	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999051949707116	WITHOUT_CLASSIFICATION	9.480502928846228E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9998971431331473	WITHOUT_CLASSIFICATION	1.0285686685271608E-4	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999993673459779	WITHOUT_CLASSIFICATION	6.326540219763655E-7	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999993673459779	WITHOUT_CLASSIFICATION	6.326540219763655E-7	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999997216879073	WITHOUT_CLASSIFICATION	2.7831209275345124E-7	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999998305254617	WITHOUT_CLASSIFICATION	1.694745383977761E-7	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999999990943149	WITHOUT_CLASSIFICATION	9.056850285080775E-10	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999996664549533	WITHOUT_CLASSIFICATION	3.3354504673034076E-7	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999661431523819	WITHOUT_CLASSIFICATION	3.385684761817868E-5	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9999903606575086	WITHOUT_CLASSIFICATION	9.639342491465747E-6	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9999936172015523	WITHOUT_CLASSIFICATION	6.382798447636414E-6	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.983072352854995	WITHOUT_CLASSIFICATION	0.016927647145005085	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999849258977803	WITHOUT_CLASSIFICATION	1.5074102219735873E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999720002494429	WITHOUT_CLASSIFICATION	2.799975055717565E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999720002494429	WITHOUT_CLASSIFICATION	2.799975055717565E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999720002494429	WITHOUT_CLASSIFICATION	2.799975055717565E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996195327989991	WITHOUT_CLASSIFICATION	3.8046720100084965E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996195327989991	WITHOUT_CLASSIFICATION	3.8046720100084965E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996195327989991	WITHOUT_CLASSIFICATION	3.8046720100084965E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996195327989991	WITHOUT_CLASSIFICATION	3.8046720100084965E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996195327989991	WITHOUT_CLASSIFICATION	3.8046720100084965E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996195327989991	WITHOUT_CLASSIFICATION	3.8046720100084965E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996195327989991	WITHOUT_CLASSIFICATION	3.8046720100084965E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996195327989991	WITHOUT_CLASSIFICATION	3.8046720100084965E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996195327989991	WITHOUT_CLASSIFICATION	3.8046720100084965E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999992425144024	WITHOUT_CLASSIFICATION	7.57485597522845E-7	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999449384497494	WITHOUT_CLASSIFICATION	5.5061550250561905E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999991356155908	WITHOUT_CLASSIFICATION	8.643844090769694E-7	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999997623023054	WITHOUT_CLASSIFICATION	2.376976947358282E-7	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996195327989991	WITHOUT_CLASSIFICATION	3.8046720100084965E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996195327989991	WITHOUT_CLASSIFICATION	3.8046720100084965E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9996195327989991	WITHOUT_CLASSIFICATION	3.8046720100084965E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999991565045728	WITHOUT_CLASSIFICATION	8.434954272409039E-7	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999996412873599	WITHOUT_CLASSIFICATION	3.587126401713247E-7	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999144339323132	WITHOUT_CLASSIFICATION	8.556606768677245E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9997658999239482	WITHOUT_CLASSIFICATION	2.341000760519133E-4	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9997658999239482	WITHOUT_CLASSIFICATION	2.341000760519133E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999978802607664	WITHOUT_CLASSIFICATION	2.1197392336138436E-6	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999975871526765	WITHOUT_CLASSIFICATION	2.412847323550932E-6	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999830531073671	WITHOUT_CLASSIFICATION	1.6946892632792487E-5	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999919768525871	WITHOUT_CLASSIFICATION	8.023147412922056E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999707457218494	WITHOUT_CLASSIFICATION	2.925427815063323E-5	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999707457218494	WITHOUT_CLASSIFICATION	2.925427815063323E-5	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9998699583328811	WITHOUT_CLASSIFICATION	1.3004166711898384E-4	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999998534962893	WITHOUT_CLASSIFICATION	1.4650371080816862E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999980447483345	WITHOUT_CLASSIFICATION	1.95525166535421E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999884247116948	WITHOUT_CLASSIFICATION	1.157528830524413E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999884247116948	WITHOUT_CLASSIFICATION	1.157528830524413E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999884247116948	WITHOUT_CLASSIFICATION	1.157528830524413E-5	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999992732012467	WITHOUT_CLASSIFICATION	7.267987532236502E-7	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999987678929602	WITHOUT_CLASSIFICATION	1.2321070399195638E-6	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999987678929602	WITHOUT_CLASSIFICATION	1.2321070399195638E-6	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999904644304413	WITHOUT_CLASSIFICATION	9.535569558768852E-6	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999904644304413	WITHOUT_CLASSIFICATION	9.535569558768852E-6	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999999828725733	WITHOUT_CLASSIFICATION	1.712742669743778E-8	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999465441775292	WITHOUT_CLASSIFICATION	5.3455822470811396E-5	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999990563514247	WITHOUT_CLASSIFICATION	9.436485753444703E-7	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999932289040578	WITHOUT_CLASSIFICATION	6.771095942111166E-6	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999978583872514	WITHOUT_CLASSIFICATION	2.141612748601533E-6	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999997899282165	WITHOUT_CLASSIFICATION	2.1007178350395767E-7	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999995164309353	WITHOUT_CLASSIFICATION	4.835690647105024E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.999998525302404	WITHOUT_CLASSIFICATION	1.474697596008356E-6	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999995989710131	WITHOUT_CLASSIFICATION	4.0102898693011503E-7	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999994082251	WITHOUT_CLASSIFICATION	5.917749798393058E-10	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9994543799476705	WITHOUT_CLASSIFICATION	5.456200523295485E-4	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999030495045591	WITHOUT_CLASSIFICATION	9.695049544084007E-5	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999356642754913	WITHOUT_CLASSIFICATION	6.433572450869189E-5	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999888077550747	WITHOUT_CLASSIFICATION	1.119224492534977E-5	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999999506127459	WITHOUT_CLASSIFICATION	4.938725412950839E-8	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.999999985081131	WITHOUT_CLASSIFICATION	1.4918868960989627E-8	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999833079542182	WITHOUT_CLASSIFICATION	1.669204578178874E-5	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999979055177867	WITHOUT_CLASSIFICATION	2.094482213232395E-6	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999991196473138	WITHOUT_CLASSIFICATION	8.80352686177977E-7	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999889156223837	WITHOUT_CLASSIFICATION	1.108437761636354E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999884905949	WITHOUT_CLASSIFICATION	1.1509405094019609E-8	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999867082902798	WITHOUT_CLASSIFICATION	1.3291709720106673E-5	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999998429196898	WITHOUT_CLASSIFICATION	1.5708031019532187E-7	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9998629412218314	WITHOUT_CLASSIFICATION	1.3705877816851721E-4	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999998891083399	WITHOUT_CLASSIFICATION	1.1089166008570615E-7	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999728555178324	WITHOUT_CLASSIFICATION	2.714448216753876E-5	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999757848276618	WITHOUT_CLASSIFICATION	2.421517233816181E-5	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999999998232806	WITHOUT_CLASSIFICATION	1.7671943690937442E-10	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.999999669468277	WITHOUT_CLASSIFICATION	3.3053172296381797E-7	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9991040189470948	WITHOUT_CLASSIFICATION	8.959810529052326E-4	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999664130566938	WITHOUT_CLASSIFICATION	3.358694330625545E-5	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999999437960075	WITHOUT_CLASSIFICATION	5.6203992497674277E-8	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999976656886269	WITHOUT_CLASSIFICATION	2.3343113731380273E-6	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999862627678852	WITHOUT_CLASSIFICATION	1.3737232114710203E-5	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999965437258157	WITHOUT_CLASSIFICATION	3.4562741841984448E-6	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999999584697955	WITHOUT_CLASSIFICATION	4.153020453472727E-8	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999999646724388	WITHOUT_CLASSIFICATION	3.532756129918846E-8	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999999578954983	WITHOUT_CLASSIFICATION	4.210450168078541E-8	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999999664113761	WITHOUT_CLASSIFICATION	3.358862392342287E-8	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999987685841023	WITHOUT_CLASSIFICATION	1.2314158977513372E-6	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.999999887278459	WITHOUT_CLASSIFICATION	1.1272154095254172E-7	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999996057502509	WITHOUT_CLASSIFICATION	3.9424974903139444E-7	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999845242038455	WITHOUT_CLASSIFICATION	1.547579615446216E-5	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999976929874667	WITHOUT_CLASSIFICATION	2.307012533472314E-6	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.999979734279669	WITHOUT_CLASSIFICATION	2.0265720331075715E-5	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9973465325204753	WITHOUT_CLASSIFICATION	0.002653467479524607	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9999991488789376	WITHOUT_CLASSIFICATION	8.511210625121946E-7	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999992147586986	WITHOUT_CLASSIFICATION	7.852413013099257E-7	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999993732856468	WITHOUT_CLASSIFICATION	6.26714353126158E-7	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999739679395548	WITHOUT_CLASSIFICATION	2.603206044505763E-5	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999866450332607	WITHOUT_CLASSIFICATION	1.3354966739254173E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999078349309716	WITHOUT_CLASSIFICATION	9.216506902845302E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999078349309716	WITHOUT_CLASSIFICATION	9.216506902845302E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999996888557283	WITHOUT_CLASSIFICATION	3.111442716541787E-7	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999996888557283	WITHOUT_CLASSIFICATION	3.111442716541787E-7	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.999901139217251	WITHOUT_CLASSIFICATION	9.886078274904455E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.999901139217251	WITHOUT_CLASSIFICATION	9.886078274904455E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999903762678399	WITHOUT_CLASSIFICATION	9.623732159998403E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999903762678399	WITHOUT_CLASSIFICATION	9.623732159998403E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999964523524366	WITHOUT_CLASSIFICATION	3.547647563371298E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999964523524366	WITHOUT_CLASSIFICATION	3.547647563371298E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999964523524366	WITHOUT_CLASSIFICATION	3.547647563371298E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999964523524366	WITHOUT_CLASSIFICATION	3.547647563371298E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999964523524366	WITHOUT_CLASSIFICATION	3.547647563371298E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999964523524366	WITHOUT_CLASSIFICATION	3.547647563371298E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999964523524366	WITHOUT_CLASSIFICATION	3.547647563371298E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999964523524366	WITHOUT_CLASSIFICATION	3.547647563371298E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999964523524366	WITHOUT_CLASSIFICATION	3.547647563371298E-6	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999999333463012	WITHOUT_CLASSIFICATION	6.665369879433587E-7	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999999333463012	WITHOUT_CLASSIFICATION	6.665369879433587E-7	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999999333463012	WITHOUT_CLASSIFICATION	6.665369879433587E-7	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999991656077799	WITHOUT_CLASSIFICATION	8.34392220064805E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999973165276946	WITHOUT_CLASSIFICATION	2.6834723053590768E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999973165276946	WITHOUT_CLASSIFICATION	2.6834723053590768E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999973165276946	WITHOUT_CLASSIFICATION	2.6834723053590768E-6	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999952742396504	WITHOUT_CLASSIFICATION	4.725760349625269E-6	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999952742396504	WITHOUT_CLASSIFICATION	4.725760349625269E-6	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999952742396504	WITHOUT_CLASSIFICATION	4.725760349625269E-6	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999066837345459	WITHOUT_CLASSIFICATION	9.331626545410722E-5	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9999676397215632	WITHOUT_CLASSIFICATION	3.23602784368022E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9995563135103723	WITHOUT_CLASSIFICATION	4.436864896277364E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.99945557652088	WITHOUT_CLASSIFICATION	5.44423479120072E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.99945557652088	WITHOUT_CLASSIFICATION	5.44423479120072E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.99945557652088	WITHOUT_CLASSIFICATION	5.44423479120072E-4	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999998336683777	WITHOUT_CLASSIFICATION	1.6633162232024917E-7	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999946268757212	WITHOUT_CLASSIFICATION	5.373124278804373E-6	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999946268757212	WITHOUT_CLASSIFICATION	5.373124278804373E-6	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999987999047006	WITHOUT_CLASSIFICATION	1.2000952993897865E-6	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9998563286894091	WITHOUT_CLASSIFICATION	1.43671310590909E-4	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9998563286894091	WITHOUT_CLASSIFICATION	1.43671310590909E-4	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.976475884635472	IMPLEMENTATION	0.02352411536452805	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9252744423707883	WITHOUT_CLASSIFICATION	0.07472555762921165	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999999480793333	WITHOUT_CLASSIFICATION	5.192066667856994E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999990366068154	WITHOUT_CLASSIFICATION	9.633931845455733E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999990366068154	WITHOUT_CLASSIFICATION	9.633931845455733E-7	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9972414679568835	WITHOUT_CLASSIFICATION	0.0027585320431164437	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.999999999311328	WITHOUT_CLASSIFICATION	6.886721512899862E-10	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999179719384707	WITHOUT_CLASSIFICATION	8.20280615293977E-5	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999999151789708	WITHOUT_CLASSIFICATION	8.482102918551276E-8	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9998944632384348	WITHOUT_CLASSIFICATION	1.0553676156517975E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999990366068154	WITHOUT_CLASSIFICATION	9.633931845455733E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999990366068154	WITHOUT_CLASSIFICATION	9.633931845455733E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999990366068154	WITHOUT_CLASSIFICATION	9.633931845455733E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999990366068154	WITHOUT_CLASSIFICATION	9.633931845455733E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999990366068154	WITHOUT_CLASSIFICATION	9.633931845455733E-7	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999986234546713	WITHOUT_CLASSIFICATION	1.3765453287332465E-6	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999901483520439	WITHOUT_CLASSIFICATION	9.851647956189601E-6	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999309367269	WITHOUT_CLASSIFICATION	6.90632730109315E-8	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999993667534525	WITHOUT_CLASSIFICATION	6.332465475682809E-7	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999995483294439	WITHOUT_CLASSIFICATION	4.5167055610595797E-7	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9949401323526169	WITHOUT_CLASSIFICATION	0.005059867647383082	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.999522972860413	WITHOUT_CLASSIFICATION	4.77027139587012E-4	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999996831025528	WITHOUT_CLASSIFICATION	3.168974471681098E-7	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999860653521427	WITHOUT_CLASSIFICATION	1.3934647857411106E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999987186833549	WITHOUT_CLASSIFICATION	1.2813166450615482E-6	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999992926135987	WITHOUT_CLASSIFICATION	7.073864013975984E-7	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999969162110673	WITHOUT_CLASSIFICATION	3.083788932606387E-6	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999988042018113	WITHOUT_CLASSIFICATION	1.1957981886688412E-6	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9996344082322351	WITHOUT_CLASSIFICATION	3.6559176776476476E-4	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999773736505408	WITHOUT_CLASSIFICATION	2.26263494592389E-5	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9289563699729746	WITHOUT_CLASSIFICATION	0.07104363002702538	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.999991243643212	WITHOUT_CLASSIFICATION	8.756356787867065E-6	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999918950376	WITHOUT_CLASSIFICATION	8.104962472428795E-9	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.999999819207587	WITHOUT_CLASSIFICATION	1.8079241309035074E-7	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999998985397733	WITHOUT_CLASSIFICATION	1.0146022667755043E-7	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999950402305138	WITHOUT_CLASSIFICATION	4.959769486261658E-6	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999994442810831	WITHOUT_CLASSIFICATION	5.557189168450514E-7	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999928854350247	WITHOUT_CLASSIFICATION	7.1145649752589915E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999987220198504	WITHOUT_CLASSIFICATION	1.2779801496331302E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999987220198504	WITHOUT_CLASSIFICATION	1.2779801496331302E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999987220198504	WITHOUT_CLASSIFICATION	1.2779801496331302E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999987220198504	WITHOUT_CLASSIFICATION	1.2779801496331302E-6	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999996167906275	WITHOUT_CLASSIFICATION	3.83209372364126E-7	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999085335253993	WITHOUT_CLASSIFICATION	9.146647460060434E-5	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999922761664215	WITHOUT_CLASSIFICATION	7.72383357849008E-6	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999922761664215	WITHOUT_CLASSIFICATION	7.72383357849008E-6	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999836633576	WITHOUT_CLASSIFICATION	1.6336642416711306E-8	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999726419707	WITHOUT_CLASSIFICATION	2.7358029329882694E-8	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999919849813684	WITHOUT_CLASSIFICATION	8.015018631572919E-6	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999721573373	WITHOUT_CLASSIFICATION	2.7842662759386525E-8	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999993817485453	WITHOUT_CLASSIFICATION	6.182514547292611E-7	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999771884528699	WITHOUT_CLASSIFICATION	2.2811547130045723E-5	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999992168042806	WITHOUT_CLASSIFICATION	7.831957194594046E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999968651281886	WITHOUT_CLASSIFICATION	3.1348718114064125E-6	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999968651281886	WITHOUT_CLASSIFICATION	3.1348718114064125E-6	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999968651281886	WITHOUT_CLASSIFICATION	3.1348718114064125E-6	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999968651281886	WITHOUT_CLASSIFICATION	3.1348718114064125E-6	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999234231518	WITHOUT_CLASSIFICATION	7.657684816601628E-8	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999960845718	WITHOUT_CLASSIFICATION	3.915428186473524E-9	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999960845718	WITHOUT_CLASSIFICATION	3.915428186473524E-9	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999960845718	WITHOUT_CLASSIFICATION	3.915428186473524E-9	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999974579028824	WITHOUT_CLASSIFICATION	2.542097117502154E-6	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999998645252387	WITHOUT_CLASSIFICATION	1.354747612560253E-7	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999874609751706	WITHOUT_CLASSIFICATION	1.253902482940458E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7129747067927357	WITHOUT_CLASSIFICATION	0.28702529320726433	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7129747067927357	WITHOUT_CLASSIFICATION	0.28702529320726433	IMPLEMENTATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.999996401613431	WITHOUT_CLASSIFICATION	3.59838656913148E-6	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999299875278838	WITHOUT_CLASSIFICATION	7.001247211621068E-5	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999998918930625	WITHOUT_CLASSIFICATION	1.0810693747551017E-7	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999998918930625	WITHOUT_CLASSIFICATION	1.0810693747551017E-7	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999860186958017	WITHOUT_CLASSIFICATION	1.3981304198257084E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999860186958017	WITHOUT_CLASSIFICATION	1.3981304198257084E-5	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999955860623164	WITHOUT_CLASSIFICATION	4.413937683535519E-6	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9989190739357034	WITHOUT_CLASSIFICATION	0.0010809260642965037	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999998142730031	WITHOUT_CLASSIFICATION	1.8572699699256638E-7	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999190032430925	WITHOUT_CLASSIFICATION	8.099675690750385E-5	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999799902950668	WITHOUT_CLASSIFICATION	2.0009704933282863E-5	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999997700215956	WITHOUT_CLASSIFICATION	2.2997840457594032E-7	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999311985028	WITHOUT_CLASSIFICATION	6.880149718205769E-8	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.999999981992984	WITHOUT_CLASSIFICATION	1.8007015926201747E-8	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.999999994045896	WITHOUT_CLASSIFICATION	5.95410399317682E-9	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999876891982133	WITHOUT_CLASSIFICATION	1.2310801786725587E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999876891982133	WITHOUT_CLASSIFICATION	1.2310801786725587E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999974416070784	WITHOUT_CLASSIFICATION	2.5583929215112513E-6	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999974416070784	WITHOUT_CLASSIFICATION	2.5583929215112513E-6	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999631711614463	WITHOUT_CLASSIFICATION	3.682883855372029E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999979355436908	WITHOUT_CLASSIFICATION	2.064456309316561E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999959205015466	WITHOUT_CLASSIFICATION	4.079498453472546E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.99999565874635	WITHOUT_CLASSIFICATION	4.341253650044615E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.99999565874635	WITHOUT_CLASSIFICATION	4.341253650044615E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.99999565874635	WITHOUT_CLASSIFICATION	4.341253650044615E-6	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9999911156247425	WITHOUT_CLASSIFICATION	8.88437525743298E-6	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9999958970414164	WITHOUT_CLASSIFICATION	4.1029585834841434E-6	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9999948483651783	WITHOUT_CLASSIFICATION	5.15163482184262E-6	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9999986496146741	WITHOUT_CLASSIFICATION	1.350385325868782E-6	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9999970472081143	WITHOUT_CLASSIFICATION	2.9527918856934346E-6	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999976088307424	WITHOUT_CLASSIFICATION	2.391169257540152E-6	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9999886432302307	WITHOUT_CLASSIFICATION	1.1356769769328648E-5	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.999948548299683	WITHOUT_CLASSIFICATION	5.145170031683789E-5	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999020601270961	WITHOUT_CLASSIFICATION	9.79398729038392E-5	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999970149238508	WITHOUT_CLASSIFICATION	2.985076149165695E-6	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999861076287344	WITHOUT_CLASSIFICATION	1.3892371265626581E-5	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.999989074176767	WITHOUT_CLASSIFICATION	1.0925823233059222E-5	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999995943878729	WITHOUT_CLASSIFICATION	4.056121270400802E-7	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7129747067927357	WITHOUT_CLASSIFICATION	0.28702529320726433	IMPLEMENTATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999994135823107	WITHOUT_CLASSIFICATION	5.86417689251086E-7	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9996442412199045	WITHOUT_CLASSIFICATION	3.5575878009551316E-4	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999965489318512	WITHOUT_CLASSIFICATION	3.451068148894143E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999893307187958	WITHOUT_CLASSIFICATION	1.0669281204273072E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999893307187958	WITHOUT_CLASSIFICATION	1.0669281204273072E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999893307187958	WITHOUT_CLASSIFICATION	1.0669281204273072E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999893307187958	WITHOUT_CLASSIFICATION	1.0669281204273072E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999893307187958	WITHOUT_CLASSIFICATION	1.0669281204273072E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999797408469595	WITHOUT_CLASSIFICATION	2.0259153040568943E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999893307187958	WITHOUT_CLASSIFICATION	1.0669281204273072E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999893307187958	WITHOUT_CLASSIFICATION	1.0669281204273072E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999893307187958	WITHOUT_CLASSIFICATION	1.0669281204273072E-5	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999994761651182	WITHOUT_CLASSIFICATION	5.238348818003924E-7	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9927207355976614	WITHOUT_CLASSIFICATION	0.00727926440233863	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9997923668779426	WITHOUT_CLASSIFICATION	2.0763312205742285E-4	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999997240035464	WITHOUT_CLASSIFICATION	2.7599645352424514E-7	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999997676391874	WITHOUT_CLASSIFICATION	2.323608125654958E-7	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999930732187131	WITHOUT_CLASSIFICATION	6.926781286838868E-6	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999988242949859	WITHOUT_CLASSIFICATION	1.1757050141280784E-6	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9999982470216765	WITHOUT_CLASSIFICATION	1.7529783235154763E-6	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999904985953415	WITHOUT_CLASSIFICATION	9.501404658542136E-6	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999904985953415	WITHOUT_CLASSIFICATION	9.501404658542136E-6	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9999962883161045	WITHOUT_CLASSIFICATION	3.7116838954757374E-6	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9999950175403121	WITHOUT_CLASSIFICATION	4.982459687932103E-6	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999861117680606	WITHOUT_CLASSIFICATION	1.3888231939461145E-5	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9999973148736225	WITHOUT_CLASSIFICATION	2.6851263775119287E-6	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999982819929673	WITHOUT_CLASSIFICATION	1.7180070327206874E-6	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9999962619617785	WITHOUT_CLASSIFICATION	3.7380382214772252E-6	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9999961879278505	WITHOUT_CLASSIFICATION	3.812072149403293E-6	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999944980592071	WITHOUT_CLASSIFICATION	5.501940792765813E-6	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999961442116608	WITHOUT_CLASSIFICATION	3.8557883391921695E-6	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9999960352431506	WITHOUT_CLASSIFICATION	3.964756849422545E-6	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9999940925705596	WITHOUT_CLASSIFICATION	5.907429440411256E-6	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9999947316307989	WITHOUT_CLASSIFICATION	5.268369201144448E-6	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999938126429109	WITHOUT_CLASSIFICATION	6.18735708909106E-6	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999926924616152	WITHOUT_CLASSIFICATION	7.307538384929051E-6	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9999925886674867	WITHOUT_CLASSIFICATION	7.411332513193157E-6	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9999925499703474	WITHOUT_CLASSIFICATION	7.450029652542656E-6	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999924415181944	WITHOUT_CLASSIFICATION	7.558481805573553E-6	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.999988215019593	WITHOUT_CLASSIFICATION	1.1784980407086982E-5	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9999958604387399	WITHOUT_CLASSIFICATION	4.1395612600831115E-6	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.999997747685195	WITHOUT_CLASSIFICATION	2.2523148050797548E-6	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9999979253868357	WITHOUT_CLASSIFICATION	2.0746131641423006E-6	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999978499856413	WITHOUT_CLASSIFICATION	2.150014358759252E-6	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9999858295631341	WITHOUT_CLASSIFICATION	1.417043686599079E-5	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9999939114505227	WITHOUT_CLASSIFICATION	6.088549477358601E-6	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9999951794731579	WITHOUT_CLASSIFICATION	4.820526842100068E-6	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999930123790151	WITHOUT_CLASSIFICATION	6.987620984996706E-6	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9999954145748899	WITHOUT_CLASSIFICATION	4.585425109990657E-6	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9999922164056567	WITHOUT_CLASSIFICATION	7.783594343177363E-6	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999955323814784	WITHOUT_CLASSIFICATION	4.467618521515676E-6	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999964640137203	WITHOUT_CLASSIFICATION	3.5359862797221316E-6	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999965243358282	WITHOUT_CLASSIFICATION	3.475664171783248E-6	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999938445455978	WITHOUT_CLASSIFICATION	6.155454402234224E-6	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9999926156145356	WITHOUT_CLASSIFICATION	7.38438546452359E-6	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9999923369605487	WITHOUT_CLASSIFICATION	7.663039451368771E-6	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9999943986061177	WITHOUT_CLASSIFICATION	5.601393882199795E-6	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.999997092116929	WITHOUT_CLASSIFICATION	2.9078830709114294E-6	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9999933690046384	WITHOUT_CLASSIFICATION	6.630995361655347E-6	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999879713636168	WITHOUT_CLASSIFICATION	1.2028636383111695E-5	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.999991561262622	WITHOUT_CLASSIFICATION	8.438737378077724E-6	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9999945322855326	WITHOUT_CLASSIFICATION	5.467714467472284E-6	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9999964335056821	WITHOUT_CLASSIFICATION	3.566494317785579E-6	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999966991736615	WITHOUT_CLASSIFICATION	3.300826338490202E-6	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9999940035131225	WITHOUT_CLASSIFICATION	5.996486877480753E-6	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9999925548404145	WITHOUT_CLASSIFICATION	7.445159585456E-6	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9999881591784031	WITHOUT_CLASSIFICATION	1.184082159678813E-5	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999847455733406	WITHOUT_CLASSIFICATION	1.5254426659326523E-5	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.999991519648237	WITHOUT_CLASSIFICATION	8.480351763054083E-6	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9999935615783156	WITHOUT_CLASSIFICATION	6.438421684387643E-6	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.999994609605712	WITHOUT_CLASSIFICATION	5.390394288055384E-6	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999935691198107	WITHOUT_CLASSIFICATION	6.430880189210088E-6	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9999945925358118	WITHOUT_CLASSIFICATION	5.407464188127315E-6	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9999956546273961	WITHOUT_CLASSIFICATION	4.345372603843181E-6	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.9999931894282115	WITHOUT_CLASSIFICATION	6.8105717885544815E-6	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999938808981971	WITHOUT_CLASSIFICATION	6.1191018029274875E-6	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999938808981971	WITHOUT_CLASSIFICATION	6.1191018029274875E-6	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.999991629490766	WITHOUT_CLASSIFICATION	8.370509233940956E-6	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9999959309354659	WITHOUT_CLASSIFICATION	4.069064534080975E-6	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9999930718165196	WITHOUT_CLASSIFICATION	6.92818348031682E-6	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9999956734254853	WITHOUT_CLASSIFICATION	4.326574514652797E-6	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9999739404903403	WITHOUT_CLASSIFICATION	2.605950965973378E-5	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999924177138274	WITHOUT_CLASSIFICATION	7.58228617269053E-6	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999931218495187	WITHOUT_CLASSIFICATION	6.878150481324469E-6	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9999934255073831	WITHOUT_CLASSIFICATION	6.57449261686304E-6	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999959992540521	WITHOUT_CLASSIFICATION	4.000745947904156E-6	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9999885589953893	WITHOUT_CLASSIFICATION	1.1441004610645464E-5	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999124351981902	WITHOUT_CLASSIFICATION	8.756480180975275E-5	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999124351981902	WITHOUT_CLASSIFICATION	8.756480180975275E-5	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999997403722829	WITHOUT_CLASSIFICATION	2.5962771709040846E-7	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999602280314529	WITHOUT_CLASSIFICATION	3.977196854717499E-5	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999634724722899	WITHOUT_CLASSIFICATION	3.652752771012456E-5	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999998086524	WITHOUT_CLASSIFICATION	1.9134753563521603E-10	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999892710114189	WITHOUT_CLASSIFICATION	1.0728988581106373E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999892710114189	WITHOUT_CLASSIFICATION	1.0728988581106373E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999892710114189	WITHOUT_CLASSIFICATION	1.0728988581106373E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999892710114189	WITHOUT_CLASSIFICATION	1.0728988581106373E-5	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.999954663402982	WITHOUT_CLASSIFICATION	4.533659701795001E-5	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9986464405984797	WITHOUT_CLASSIFICATION	0.0013535594015202108	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9999942012304968	WITHOUT_CLASSIFICATION	5.79876950319238E-6	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9999963543400027	WITHOUT_CLASSIFICATION	3.6456599972610117E-6	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.9999893586199885	WITHOUT_CLASSIFICATION	1.0641380011577712E-5	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.999993297814479	WITHOUT_CLASSIFICATION	6.702185521043444E-6	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9999871287199023	WITHOUT_CLASSIFICATION	1.2871280097790826E-5	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9999977193345562	WITHOUT_CLASSIFICATION	2.2806654437240774E-6	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9999979276714425	WITHOUT_CLASSIFICATION	2.072328557623712E-6	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9999933864110279	WITHOUT_CLASSIFICATION	6.613588972081363E-6	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9999959107384404	WITHOUT_CLASSIFICATION	4.089261559632519E-6	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9999966358151219	WITHOUT_CLASSIFICATION	3.3641848780030297E-6	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9999924065500299	WITHOUT_CLASSIFICATION	7.593449970104532E-6	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9999962220599552	WITHOUT_CLASSIFICATION	3.77794004475318E-6	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9999953583240867	WITHOUT_CLASSIFICATION	4.641675913309516E-6	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9999978997438612	WITHOUT_CLASSIFICATION	2.1002561387420017E-6	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9999961879278505	WITHOUT_CLASSIFICATION	3.812072149403293E-6	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9999881233626933	WITHOUT_CLASSIFICATION	1.1876637306766143E-5	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9999948441792775	WITHOUT_CLASSIFICATION	5.155820722480027E-6	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9999935957661716	WITHOUT_CLASSIFICATION	6.404233828322914E-6	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9999966501558428	WITHOUT_CLASSIFICATION	3.349844157144518E-6	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.999996841664897	WITHOUT_CLASSIFICATION	3.1583351030313574E-6	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9999961518316894	WITHOUT_CLASSIFICATION	3.848168310507327E-6	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9999934701169869	WITHOUT_CLASSIFICATION	6.529883013032733E-6	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9999973932068313	WITHOUT_CLASSIFICATION	2.606793168667098E-6	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9999953525190871	WITHOUT_CLASSIFICATION	4.64748091291342E-6	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9999979435041347	WITHOUT_CLASSIFICATION	2.0564958652028105E-6	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9999847117153426	WITHOUT_CLASSIFICATION	1.5288284657345506E-5	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9999935102459707	WITHOUT_CLASSIFICATION	6.489754029326075E-6	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9999937870743396	WITHOUT_CLASSIFICATION	6.212925660358905E-6	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9999880638253544	WITHOUT_CLASSIFICATION	1.1936174645504519E-5	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9999957789744485	WITHOUT_CLASSIFICATION	4.221025551443439E-6	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9999869316031186	WITHOUT_CLASSIFICATION	1.306839688135012E-5	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.999994625209687	WITHOUT_CLASSIFICATION	5.374790313133896E-6	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9999894828801394	WITHOUT_CLASSIFICATION	1.0517119860567475E-5	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9999916635311762	WITHOUT_CLASSIFICATION	8.33646882389289E-6	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9999926737259666	WITHOUT_CLASSIFICATION	7.326274033419939E-6	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.999992614801552	WITHOUT_CLASSIFICATION	7.385198447991652E-6	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9999958971993452	WITHOUT_CLASSIFICATION	4.1028006547352855E-6	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9999930957909926	WITHOUT_CLASSIFICATION	6.9042090073746216E-6	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.9999956418364979	WITHOUT_CLASSIFICATION	4.358163502080725E-6	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9999919174590974	WITHOUT_CLASSIFICATION	8.08254090258885E-6	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9999921276837155	WITHOUT_CLASSIFICATION	7.872316284527387E-6	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9999936737692309	WITHOUT_CLASSIFICATION	6.326230769151636E-6	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.999987632017115	WITHOUT_CLASSIFICATION	1.2367982884900666E-5	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9999770731849636	WITHOUT_CLASSIFICATION	2.2926815036425296E-5	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9999919327654212	WITHOUT_CLASSIFICATION	8.067234578768534E-6	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9999907557443365	WITHOUT_CLASSIFICATION	9.244255663603803E-6	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9999898833608504	WITHOUT_CLASSIFICATION	1.0116639149537798E-5	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9999952526583157	WITHOUT_CLASSIFICATION	4.7473416842935124E-6	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.999992759034247	WITHOUT_CLASSIFICATION	7.240965752971741E-6	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9999927200568983	WITHOUT_CLASSIFICATION	7.279943101674347E-6	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9999885152907784	WITHOUT_CLASSIFICATION	1.148470922156114E-5	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9999844388524878	WITHOUT_CLASSIFICATION	1.5561147512223694E-5	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.999978232044505	WITHOUT_CLASSIFICATION	2.1767955495080345E-5	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9999923464679931	WITHOUT_CLASSIFICATION	7.653532006958916E-6	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.999994891099727	WITHOUT_CLASSIFICATION	5.1089002730941926E-6	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9999948344825872	WITHOUT_CLASSIFICATION	5.165517412744427E-6	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9999957520199092	WITHOUT_CLASSIFICATION	4.247980090773325E-6	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999997534988283	WITHOUT_CLASSIFICATION	2.465011716444548E-7	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.999999013715738	WITHOUT_CLASSIFICATION	9.862842619902323E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999956797413478	WITHOUT_CLASSIFICATION	4.3202586521507154E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999956797413478	WITHOUT_CLASSIFICATION	4.3202586521507154E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999956797413478	WITHOUT_CLASSIFICATION	4.3202586521507154E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999956797413478	WITHOUT_CLASSIFICATION	4.3202586521507154E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999956797413478	WITHOUT_CLASSIFICATION	4.3202586521507154E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999956797413478	WITHOUT_CLASSIFICATION	4.3202586521507154E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999956797413478	WITHOUT_CLASSIFICATION	4.3202586521507154E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9980623788161492	WITHOUT_CLASSIFICATION	0.0019376211838507264	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9980623788161492	WITHOUT_CLASSIFICATION	0.0019376211838507264	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9980623788161492	WITHOUT_CLASSIFICATION	0.0019376211838507264	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9980623788161492	WITHOUT_CLASSIFICATION	0.0019376211838507264	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999929337372103	WITHOUT_CLASSIFICATION	7.066262789633127E-6	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999929337372103	WITHOUT_CLASSIFICATION	7.066262789633127E-6	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999997139221157	WITHOUT_CLASSIFICATION	2.8607788434164775E-7	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999164497115	WITHOUT_CLASSIFICATION	8.355028844284554E-8	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999164497115	WITHOUT_CLASSIFICATION	8.355028844284554E-8	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999999368514151	WITHOUT_CLASSIFICATION	6.314858493954154E-8	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999737291127859	WITHOUT_CLASSIFICATION	2.627088721409025E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997323033923	WITHOUT_CLASSIFICATION	2.676966076731906E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997323033923	WITHOUT_CLASSIFICATION	2.676966076731906E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997323033923	WITHOUT_CLASSIFICATION	2.676966076731906E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997323033923	WITHOUT_CLASSIFICATION	2.676966076731906E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997323033923	WITHOUT_CLASSIFICATION	2.676966076731906E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997323033923	WITHOUT_CLASSIFICATION	2.676966076731906E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997323033923	WITHOUT_CLASSIFICATION	2.676966076731906E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998990529507	WITHOUT_CLASSIFICATION	1.0094704928249298E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999978746843183	WITHOUT_CLASSIFICATION	2.125315681675536E-6	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9969007008630316	WITHOUT_CLASSIFICATION	0.0030992991369684806	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9969007008630316	WITHOUT_CLASSIFICATION	0.0030992991369684806	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999993648634934	WITHOUT_CLASSIFICATION	6.351365067060898E-7	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999953102828333	WITHOUT_CLASSIFICATION	4.689717166762965E-6	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999953102828333	WITHOUT_CLASSIFICATION	4.689717166762965E-6	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9993805506791485	WITHOUT_CLASSIFICATION	6.19449320851488E-4	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9996149440710668	WITHOUT_CLASSIFICATION	3.850559289333031E-4	IMPLEMENTATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999901846183449	WITHOUT_CLASSIFICATION	9.81538165517738E-6	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9993596719674491	WITHOUT_CLASSIFICATION	6.403280325509321E-4	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999999902553406	WITHOUT_CLASSIFICATION	9.744659475725169E-9	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999995872204576	WITHOUT_CLASSIFICATION	4.1277954252423166E-7	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999440568454129	WITHOUT_CLASSIFICATION	5.594315458719587E-5	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999994804316652	WITHOUT_CLASSIFICATION	5.195683348598518E-7	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999887081210254	WITHOUT_CLASSIFICATION	1.1291878974766084E-5	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.99999799921486	WITHOUT_CLASSIFICATION	2.0007851400387287E-6	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999997328555119	WITHOUT_CLASSIFICATION	2.671444880806696E-7	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9982666227156655	WITHOUT_CLASSIFICATION	0.0017333772843345	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999983953736	WITHOUT_CLASSIFICATION	1.6046264143918615E-9	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999248511255232	WITHOUT_CLASSIFICATION	7.514887447681029E-5	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999386862053795	WITHOUT_CLASSIFICATION	6.131379462044456E-5	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9996345221383093	WITHOUT_CLASSIFICATION	3.6547786169072085E-4	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999963426539	WITHOUT_CLASSIFICATION	3.657346101515868E-9	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9995835504420765	WITHOUT_CLASSIFICATION	4.164495579234488E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9998283684372298	WITHOUT_CLASSIFICATION	1.7163156277019934E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9998283684372298	WITHOUT_CLASSIFICATION	1.7163156277019934E-4	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999999277905799	WITHOUT_CLASSIFICATION	7.220942007987567E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999993142273829	WITHOUT_CLASSIFICATION	6.857726170557641E-7	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999660510473576	WITHOUT_CLASSIFICATION	3.394895264238566E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999985298787889	WITHOUT_CLASSIFICATION	1.4701212111017963E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999461395909636	WITHOUT_CLASSIFICATION	5.386040903648387E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999461395909636	WITHOUT_CLASSIFICATION	5.386040903648387E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999461395909636	WITHOUT_CLASSIFICATION	5.386040903648387E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.999974334476242	WITHOUT_CLASSIFICATION	2.566552375795295E-5	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9992203956596997	WITHOUT_CLASSIFICATION	7.796043403004131E-4	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9994827743573491	WITHOUT_CLASSIFICATION	5.172256426507672E-4	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999190236911443	WITHOUT_CLASSIFICATION	8.097630885574213E-5	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999988578737786	WITHOUT_CLASSIFICATION	1.1421262213931715E-6	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999994376320697	WITHOUT_CLASSIFICATION	5.62367930429479E-7	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999854723007756	WITHOUT_CLASSIFICATION	1.4527699224380333E-5	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999705685302	WITHOUT_CLASSIFICATION	2.9431469796148748E-8	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.995990647263593	WITHOUT_CLASSIFICATION	0.004009352736407051	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999916764734215	WITHOUT_CLASSIFICATION	8.323526578535736E-6	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9999623913758886	WITHOUT_CLASSIFICATION	3.7608624111332544E-5	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.999850878649596	WITHOUT_CLASSIFICATION	1.491213504039987E-4	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9555481131670582	IMPLEMENTATION	0.04445188683294164	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9996584134730887	WITHOUT_CLASSIFICATION	3.4158652691129656E-4	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.999999998569375	WITHOUT_CLASSIFICATION	1.4306250110686273E-9	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999999853930129	WITHOUT_CLASSIFICATION	1.460698704456945E-8	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999128465107059	WITHOUT_CLASSIFICATION	8.715348929421991E-5	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999920170677967	WITHOUT_CLASSIFICATION	7.982932203319739E-6	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999944249194729	WITHOUT_CLASSIFICATION	5.575080527136497E-6	IMPLEMENTATION
