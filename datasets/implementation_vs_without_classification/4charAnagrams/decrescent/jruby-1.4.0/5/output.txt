// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.9832723999421507	WITHOUT_CLASSIFICATION	0.01672760005784935	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.7189230732910513	IMPLEMENTATION	0.2810769267089486	WITHOUT_CLASSIFICATION
// TODO: Someday, enable.	IMPLEMENTATION	0.5004007393705339	WITHOUT_CLASSIFICATION	0.49959926062946614	IMPLEMENTATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.6984101013831979	IMPLEMENTATION	0.30158989861680197	WITHOUT_CLASSIFICATION
// TODO: non-strict option	IMPLEMENTATION	0.7874509673824026	WITHOUT_CLASSIFICATION	0.21254903261759747	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.8032734421872717	IMPLEMENTATION	0.19672655781272824	WITHOUT_CLASSIFICATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.6581562755987124	IMPLEMENTATION	0.34184372440128774	WITHOUT_CLASSIFICATION
// TODO: rescan code range ?	IMPLEMENTATION	0.6988780707442153	WITHOUT_CLASSIFICATION	0.30112192925578485	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.6988780707442153	WITHOUT_CLASSIFICATION	0.30112192925578485	IMPLEMENTATION
// TODO: pass this in?	IMPLEMENTATION	0.6384039263104786	IMPLEMENTATION	0.36159607368952135	WITHOUT_CLASSIFICATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9934152892082382	WITHOUT_CLASSIFICATION	0.0065847107917617245	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.9842286058247	IMPLEMENTATION	0.015771394175300067	WITHOUT_CLASSIFICATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.9485911558802739	IMPLEMENTATION	0.05140884411972602	WITHOUT_CLASSIFICATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.9989902716081804	WITHOUT_CLASSIFICATION	0.0010097283918195396	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.6770335304766869	IMPLEMENTATION	0.3229664695233131	WITHOUT_CLASSIFICATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.8757732063369895	IMPLEMENTATION	0.12422679366301038	WITHOUT_CLASSIFICATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.5658587320018695	IMPLEMENTATION	0.43414126799813046	WITHOUT_CLASSIFICATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.5704594063820686	WITHOUT_CLASSIFICATION	0.42954059361793134	IMPLEMENTATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.7141150809598668	IMPLEMENTATION	0.28588491904013325	WITHOUT_CLASSIFICATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.9894082842111861	WITHOUT_CLASSIFICATION	0.010591715788813802	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.5308152379991571	WITHOUT_CLASSIFICATION	0.4691847620008429	IMPLEMENTATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.6799055731066427	WITHOUT_CLASSIFICATION	0.3200944268933573	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.7516594074644348	WITHOUT_CLASSIFICATION	0.24834059253556515	IMPLEMENTATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.9350802133212581	WITHOUT_CLASSIFICATION	0.06491978667874183	IMPLEMENTATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.998884557222501	IMPLEMENTATION	0.001115442777498945	WITHOUT_CLASSIFICATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.7842595593134281	WITHOUT_CLASSIFICATION	0.21574044068657194	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.538926650369666	IMPLEMENTATION	0.4610733496303339	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9879324387265797	IMPLEMENTATION	0.01206756127342049	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.538926650369666	IMPLEMENTATION	0.4610733496303339	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9879324387265797	IMPLEMENTATION	0.01206756127342049	WITHOUT_CLASSIFICATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.6950274897545068	WITHOUT_CLASSIFICATION	0.30497251024549327	IMPLEMENTATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.9468766883754514	WITHOUT_CLASSIFICATION	0.05312331162454869	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.9982169382388838	IMPLEMENTATION	0.0017830617611162309	WITHOUT_CLASSIFICATION
// TODO: make threadsafe	IMPLEMENTATION	0.9993115217234411	IMPLEMENTATION	6.884782765588973E-4	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9572989407118878	WITHOUT_CLASSIFICATION	0.042701059288112055	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9572989407118878	WITHOUT_CLASSIFICATION	0.042701059288112055	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.7273929800011488	IMPLEMENTATION	0.2726070199988512	WITHOUT_CLASSIFICATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.9759387307498422	IMPLEMENTATION	0.024061269250157776	WITHOUT_CLASSIFICATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.9182975640080604	WITHOUT_CLASSIFICATION	0.08170243599193953	IMPLEMENTATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.9849591459661672	WITHOUT_CLASSIFICATION	0.015040854033832896	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9868806818715373	IMPLEMENTATION	0.013119318128462645	WITHOUT_CLASSIFICATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.8444551584357934	IMPLEMENTATION	0.15554484156420653	WITHOUT_CLASSIFICATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.9993154115243075	IMPLEMENTATION	6.845884756924023E-4	WITHOUT_CLASSIFICATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.9114315084206616	WITHOUT_CLASSIFICATION	0.0885684915793384	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.5542029779609847	WITHOUT_CLASSIFICATION	0.4457970220390152	IMPLEMENTATION
// TODO: add trace call?	IMPLEMENTATION	0.9431978422421345	IMPLEMENTATION	0.05680215775786549	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9968548477891638	WITHOUT_CLASSIFICATION	0.0031451522108362166	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.6770286617446377	WITHOUT_CLASSIFICATION	0.3229713382553623	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.5593569279182232	WITHOUT_CLASSIFICATION	0.4406430720817769	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.9531436590275644	IMPLEMENTATION	0.04685634097243555	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9968548477891638	WITHOUT_CLASSIFICATION	0.0031451522108362166	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.9992925514333493	WITHOUT_CLASSIFICATION	7.074485666508286E-4	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.8236356490206317	WITHOUT_CLASSIFICATION	0.17636435097936834	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.9771845550001867	IMPLEMENTATION	0.022815444999813302	WITHOUT_CLASSIFICATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.7702338812366148	IMPLEMENTATION	0.22976611876338512	WITHOUT_CLASSIFICATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.9992009096919526	WITHOUT_CLASSIFICATION	7.990903080473657E-4	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.9768545867631293	WITHOUT_CLASSIFICATION	0.023145413236870686	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.8654385702734335	IMPLEMENTATION	0.1345614297265665	WITHOUT_CLASSIFICATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.8827804722853144	WITHOUT_CLASSIFICATION	0.11721952771468555	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9992385125109541	WITHOUT_CLASSIFICATION	7.614874890458411E-4	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.9755200172088363	WITHOUT_CLASSIFICATION	0.024479982791163583	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9973783445289308	IMPLEMENTATION	0.0026216554710691833	WITHOUT_CLASSIFICATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9973783445289308	IMPLEMENTATION	0.0026216554710691833	WITHOUT_CLASSIFICATION
// TODO: validate port as numeric	IMPLEMENTATION	0.8875485971053466	WITHOUT_CLASSIFICATION	0.11245140289465336	IMPLEMENTATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9999883360067577	IMPLEMENTATION	1.1663993242332084E-5	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.7338217990325978	WITHOUT_CLASSIFICATION	0.26617820096740225	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.5639038833169902	IMPLEMENTATION	0.4360961166830098	WITHOUT_CLASSIFICATION
// TODO: deal with varargs	IMPLEMENTATION	0.5639038833169902	IMPLEMENTATION	0.4360961166830098	WITHOUT_CLASSIFICATION
// TODO: other reserved names?	IMPLEMENTATION	0.9953528412691437	IMPLEMENTATION	0.004647158730856359	WITHOUT_CLASSIFICATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.9596711120964201	IMPLEMENTATION	0.04032888790357997	WITHOUT_CLASSIFICATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.8122054774791011	IMPLEMENTATION	0.18779452252089895	WITHOUT_CLASSIFICATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.9957450951088836	WITHOUT_CLASSIFICATION	0.004254904891116396	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.6597002681018418	IMPLEMENTATION	0.3402997318981582	WITHOUT_CLASSIFICATION
// TODO: call ruby method	IMPLEMENTATION	0.6597002681018418	IMPLEMENTATION	0.3402997318981582	WITHOUT_CLASSIFICATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.9878011215051155	IMPLEMENTATION	0.012198878494884562	WITHOUT_CLASSIFICATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9504091473115309	WITHOUT_CLASSIFICATION	0.0495908526884692	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9999997686111874	WITHOUT_CLASSIFICATION	2.3138881270916218E-7	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.9508633380954367	IMPLEMENTATION	0.04913666190456333	WITHOUT_CLASSIFICATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.874085061799683	IMPLEMENTATION	0.12591493820031696	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.9977835047654636	IMPLEMENTATION	0.002216495234536384	WITHOUT_CLASSIFICATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.5881460171695108	WITHOUT_CLASSIFICATION	0.4118539828304892	IMPLEMENTATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.990491622999235	IMPLEMENTATION	0.009508377000765046	WITHOUT_CLASSIFICATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.5770554026652982	IMPLEMENTATION	0.4229445973347017	WITHOUT_CLASSIFICATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.5770554026652982	IMPLEMENTATION	0.4229445973347017	WITHOUT_CLASSIFICATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.9753333438024157	WITHOUT_CLASSIFICATION	0.024666656197584385	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.9599731136441458	WITHOUT_CLASSIFICATION	0.04002688635585405	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9909802557677706	WITHOUT_CLASSIFICATION	0.009019744232229494	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9909802557677706	WITHOUT_CLASSIFICATION	0.009019744232229494	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.8683165481297751	WITHOUT_CLASSIFICATION	0.13168345187022493	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.5038367651403632	WITHOUT_CLASSIFICATION	0.4961632348596368	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.5038367651403632	WITHOUT_CLASSIFICATION	0.4961632348596368	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.5038367651403632	WITHOUT_CLASSIFICATION	0.4961632348596368	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.9196446346163616	WITHOUT_CLASSIFICATION	0.08035536538363841	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.9196446346163616	WITHOUT_CLASSIFICATION	0.08035536538363841	IMPLEMENTATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.5701872385634288	IMPLEMENTATION	0.4298127614365713	WITHOUT_CLASSIFICATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9994562975711255	WITHOUT_CLASSIFICATION	5.437024288745264E-4	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.6896010946837375	WITHOUT_CLASSIFICATION	0.3103989053162624	IMPLEMENTATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9999743770914253	IMPLEMENTATION	2.562290857465699E-5	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9997302246096805	IMPLEMENTATION	2.697753903194197E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9997302246096805	IMPLEMENTATION	2.697753903194197E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9997302246096805	IMPLEMENTATION	2.697753903194197E-4	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9868806818715373	IMPLEMENTATION	0.013119318128462645	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9868806818715373	IMPLEMENTATION	0.013119318128462645	WITHOUT_CLASSIFICATION
// TODO: check for ascii string	IMPLEMENTATION	0.950024289085325	WITHOUT_CLASSIFICATION	0.04997571091467494	IMPLEMENTATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.6580206766145639	IMPLEMENTATION	0.34197932338543624	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9572989407118878	WITHOUT_CLASSIFICATION	0.042701059288112055	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9572989407118878	WITHOUT_CLASSIFICATION	0.042701059288112055	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.9612725133601208	IMPLEMENTATION	0.03872748663987927	WITHOUT_CLASSIFICATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.9816817757909229	WITHOUT_CLASSIFICATION	0.01831822420907718	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.8757732063369895	IMPLEMENTATION	0.12422679366301038	WITHOUT_CLASSIFICATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9922000704696982	WITHOUT_CLASSIFICATION	0.007799929530301738	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.9975654007015653	IMPLEMENTATION	0.0024345992984346827	WITHOUT_CLASSIFICATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.9987319096355372	IMPLEMENTATION	0.0012680903644628435	WITHOUT_CLASSIFICATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.9754585159748821	WITHOUT_CLASSIFICATION	0.02454148402511792	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999989818503375	WITHOUT_CLASSIFICATION	1.0181496624958747E-6	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9999994550695218	WITHOUT_CLASSIFICATION	5.449304782844538E-7	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999968670721205	WITHOUT_CLASSIFICATION	3.1329278795940303E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999968670721205	WITHOUT_CLASSIFICATION	3.1329278795940303E-6	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999594882713432	WITHOUT_CLASSIFICATION	4.051172865683939E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999594882713432	WITHOUT_CLASSIFICATION	4.051172865683939E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999265725483838	WITHOUT_CLASSIFICATION	7.342745161627103E-5	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999929379866981	WITHOUT_CLASSIFICATION	7.0620133018842196E-6	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9999997443913995	WITHOUT_CLASSIFICATION	2.556086004702696E-7	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999997925623474	WITHOUT_CLASSIFICATION	2.0743765252583217E-7	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999267172887522	WITHOUT_CLASSIFICATION	7.328271124787996E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999267172887522	WITHOUT_CLASSIFICATION	7.328271124787996E-5	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.99999823930164	WITHOUT_CLASSIFICATION	1.760698360038796E-6	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998709753870725	WITHOUT_CLASSIFICATION	1.290246129274635E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998709753870725	WITHOUT_CLASSIFICATION	1.290246129274635E-4	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9999993337164313	WITHOUT_CLASSIFICATION	6.662835685679374E-7	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999997161489682	WITHOUT_CLASSIFICATION	2.838510317284831E-7	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999911777386805	WITHOUT_CLASSIFICATION	8.82226131952201E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999911777386805	WITHOUT_CLASSIFICATION	8.82226131952201E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999911777386805	WITHOUT_CLASSIFICATION	8.82226131952201E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999911777386805	WITHOUT_CLASSIFICATION	8.82226131952201E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999911777386805	WITHOUT_CLASSIFICATION	8.82226131952201E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999911777386805	WITHOUT_CLASSIFICATION	8.82226131952201E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999911777386805	WITHOUT_CLASSIFICATION	8.82226131952201E-6	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999429728535292	WITHOUT_CLASSIFICATION	5.7027146470889455E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999429728535292	WITHOUT_CLASSIFICATION	5.7027146470889455E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999429728535292	WITHOUT_CLASSIFICATION	5.7027146470889455E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999429728535292	WITHOUT_CLASSIFICATION	5.7027146470889455E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999429728535292	WITHOUT_CLASSIFICATION	5.7027146470889455E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999429728535292	WITHOUT_CLASSIFICATION	5.7027146470889455E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999429728535292	WITHOUT_CLASSIFICATION	5.7027146470889455E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998311143852862	WITHOUT_CLASSIFICATION	1.6888561471391176E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998311143852862	WITHOUT_CLASSIFICATION	1.6888561471391176E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998311143852862	WITHOUT_CLASSIFICATION	1.6888561471391176E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998311143852862	WITHOUT_CLASSIFICATION	1.6888561471391176E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998311143852862	WITHOUT_CLASSIFICATION	1.6888561471391176E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998311143852862	WITHOUT_CLASSIFICATION	1.6888561471391176E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998968116686008	WITHOUT_CLASSIFICATION	1.0318833139926678E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998968116686008	WITHOUT_CLASSIFICATION	1.0318833139926678E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998968116686008	WITHOUT_CLASSIFICATION	1.0318833139926678E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998968116686008	WITHOUT_CLASSIFICATION	1.0318833139926678E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998968116686008	WITHOUT_CLASSIFICATION	1.0318833139926678E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998968116686008	WITHOUT_CLASSIFICATION	1.0318833139926678E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998183264317139	WITHOUT_CLASSIFICATION	1.8167356828619564E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998183264317139	WITHOUT_CLASSIFICATION	1.8167356828619564E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998183264317139	WITHOUT_CLASSIFICATION	1.8167356828619564E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998183264317139	WITHOUT_CLASSIFICATION	1.8167356828619564E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998183264317139	WITHOUT_CLASSIFICATION	1.8167356828619564E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998183264317139	WITHOUT_CLASSIFICATION	1.8167356828619564E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998183264317139	WITHOUT_CLASSIFICATION	1.8167356828619564E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997603002921123	WITHOUT_CLASSIFICATION	2.3969970788763616E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997603002921123	WITHOUT_CLASSIFICATION	2.3969970788763616E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997603002921123	WITHOUT_CLASSIFICATION	2.3969970788763616E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997603002921123	WITHOUT_CLASSIFICATION	2.3969970788763616E-4	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999977971636779	WITHOUT_CLASSIFICATION	2.202836322232057E-6	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999977971636779	WITHOUT_CLASSIFICATION	2.202836322232057E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999110841704	WITHOUT_CLASSIFICATION	8.891582954720012E-8	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9999994984833277	WITHOUT_CLASSIFICATION	5.015166723233156E-7	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.999998478896347	WITHOUT_CLASSIFICATION	1.5211036529823147E-6	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999993642348632	WITHOUT_CLASSIFICATION	6.357651368142956E-7	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999702270319601	WITHOUT_CLASSIFICATION	2.9772968039901266E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.999996452199097	WITHOUT_CLASSIFICATION	3.5478009030496244E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.999996452199097	WITHOUT_CLASSIFICATION	3.5478009030496244E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.999996452199097	WITHOUT_CLASSIFICATION	3.5478009030496244E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.999996452199097	WITHOUT_CLASSIFICATION	3.5478009030496244E-6	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999763282089147	WITHOUT_CLASSIFICATION	2.3671791085302267E-5	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999930452282892	WITHOUT_CLASSIFICATION	6.95477171078311E-6	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999976491690503	WITHOUT_CLASSIFICATION	2.350830949748679E-6	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.999999067934996	WITHOUT_CLASSIFICATION	9.320650039650809E-7	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9999990336843467	WITHOUT_CLASSIFICATION	9.663156531689288E-7	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999998916046567	WITHOUT_CLASSIFICATION	1.0839534323092512E-7	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999986125850256	WITHOUT_CLASSIFICATION	1.387414974319991E-6	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999999926851705	WITHOUT_CLASSIFICATION	7.314829535196836E-9	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999998674477444	WITHOUT_CLASSIFICATION	1.3255225559179382E-7	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.999999174110708	WITHOUT_CLASSIFICATION	8.258892919933449E-7	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999994206243012	WITHOUT_CLASSIFICATION	5.793756987075212E-7	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999967915542479	WITHOUT_CLASSIFICATION	3.208445752153924E-6	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9998990840183335	WITHOUT_CLASSIFICATION	1.0091598166647954E-4	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999998808421132	WITHOUT_CLASSIFICATION	1.191578868650777E-7	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998965901081	WITHOUT_CLASSIFICATION	1.034098918695378E-7	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999999389800621	WITHOUT_CLASSIFICATION	6.101993783644053E-8	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9993576354646567	WITHOUT_CLASSIFICATION	6.423645353433634E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.999996452199097	WITHOUT_CLASSIFICATION	3.5478009030496244E-6	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999993525014127	WITHOUT_CLASSIFICATION	6.474985873287966E-7	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999999762001088	WITHOUT_CLASSIFICATION	2.3799891162859713E-8	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999991947915399	WITHOUT_CLASSIFICATION	8.052084599881618E-7	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999019472846126	WITHOUT_CLASSIFICATION	9.805271538753737E-5	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9998671624545763	WITHOUT_CLASSIFICATION	1.3283754542370906E-4	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999999652462228	WITHOUT_CLASSIFICATION	3.4753777158741035E-8	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999999770030826	WITHOUT_CLASSIFICATION	2.299691735541983E-8	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999996814185405	WITHOUT_CLASSIFICATION	3.1858145951608885E-7	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999945474939381	WITHOUT_CLASSIFICATION	5.452506061814447E-6	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999997293129328	WITHOUT_CLASSIFICATION	2.7068706725909054E-7	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999997644355092	WITHOUT_CLASSIFICATION	2.3556449072403138E-7	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999992935690674	WITHOUT_CLASSIFICATION	7.064309326800205E-7	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999993517518131	WITHOUT_CLASSIFICATION	6.482481869254752E-7	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.999969333452155	WITHOUT_CLASSIFICATION	3.0666547845072686E-5	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999951906426021	WITHOUT_CLASSIFICATION	4.809357397864086E-6	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999997609212399	WITHOUT_CLASSIFICATION	2.390787600886241E-7	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9999999368920884	WITHOUT_CLASSIFICATION	6.310791153430382E-8	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999999415074796	WITHOUT_CLASSIFICATION	5.849252033458029E-8	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999990959677403	WITHOUT_CLASSIFICATION	9.040322598018184E-7	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999999908635883	WITHOUT_CLASSIFICATION	9.136411743646392E-9	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9998310358350525	WITHOUT_CLASSIFICATION	1.689641649475297E-4	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999994345423682	WITHOUT_CLASSIFICATION	5.654576317891253E-7	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999999782938284	WITHOUT_CLASSIFICATION	2.170617155930074E-8	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.999848784803958	WITHOUT_CLASSIFICATION	1.5121519604195026E-4	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.999998889056504	WITHOUT_CLASSIFICATION	1.1109434959647952E-6	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9999997358675844	WITHOUT_CLASSIFICATION	2.6413241562756395E-7	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999975808382727	WITHOUT_CLASSIFICATION	2.4191617272395784E-6	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999836965922352	WITHOUT_CLASSIFICATION	1.6303407764775243E-5	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999999885847151	WITHOUT_CLASSIFICATION	1.1415285069969524E-8	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999997976039741	WITHOUT_CLASSIFICATION	2.0239602596815317E-7	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999999722119647	WITHOUT_CLASSIFICATION	2.77880351929917E-8	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999996688766334	WITHOUT_CLASSIFICATION	3.311233665102365E-7	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999999948136813	WITHOUT_CLASSIFICATION	5.186318721516304E-9	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999998698830895	WITHOUT_CLASSIFICATION	1.3011691051863186E-7	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999885476296478	WITHOUT_CLASSIFICATION	1.1452370352216808E-5	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999999129155016	WITHOUT_CLASSIFICATION	8.708449837296127E-8	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.999999517647908	WITHOUT_CLASSIFICATION	4.82352092093867E-7	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999999999976114	WITHOUT_CLASSIFICATION	2.388719755440763E-12	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999973045911433	WITHOUT_CLASSIFICATION	2.6954088566112753E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999971122379446	WITHOUT_CLASSIFICATION	2.8877620553633113E-6	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999999868948948	WITHOUT_CLASSIFICATION	1.3105105154773932E-8	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999993285269044	WITHOUT_CLASSIFICATION	6.714730955032262E-7	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999996164070731	WITHOUT_CLASSIFICATION	3.835929269244241E-7	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9377366823688766	WITHOUT_CLASSIFICATION	0.06226331763112341	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9377366823688766	WITHOUT_CLASSIFICATION	0.06226331763112341	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.8953477640153827	WITHOUT_CLASSIFICATION	0.10465223598461727	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999954369427169	WITHOUT_CLASSIFICATION	4.5630572831001385E-6	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999933472103943	WITHOUT_CLASSIFICATION	6.652789605705819E-6	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999996274758121	WITHOUT_CLASSIFICATION	3.7252418803496494E-7	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999868266702027	WITHOUT_CLASSIFICATION	1.317332979732711E-5	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999985203844133	WITHOUT_CLASSIFICATION	1.479615586733127E-6	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9999996185654879	WITHOUT_CLASSIFICATION	3.8143451198031925E-7	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9999964673341911	WITHOUT_CLASSIFICATION	3.532665808940924E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999993285269044	WITHOUT_CLASSIFICATION	6.714730955032262E-7	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999999989896334	WITHOUT_CLASSIFICATION	1.0103665685145326E-9	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999688690515615	WITHOUT_CLASSIFICATION	3.1130948438613855E-5	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9975914731179443	WITHOUT_CLASSIFICATION	0.002408526882055618	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999998776413128	WITHOUT_CLASSIFICATION	1.223586872128541E-7	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999998504241551	WITHOUT_CLASSIFICATION	1.4957584504755808E-7	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999801438241	WITHOUT_CLASSIFICATION	1.9856176007343682E-8	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999801438241	WITHOUT_CLASSIFICATION	1.9856176007343682E-8	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999801438241	WITHOUT_CLASSIFICATION	1.9856176007343682E-8	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999999639627197	WITHOUT_CLASSIFICATION	3.603728028654762E-8	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999998791414085	WITHOUT_CLASSIFICATION	1.208585915337636E-7	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999999981669103	WITHOUT_CLASSIFICATION	1.8330896822165363E-9	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999897169402887	WITHOUT_CLASSIFICATION	1.0283059711340239E-5	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999997122431099	WITHOUT_CLASSIFICATION	2.8775689010643824E-7	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.999999980880142	WITHOUT_CLASSIFICATION	1.9119858062979973E-8	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999485860838668	WITHOUT_CLASSIFICATION	5.141391613310431E-5	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999734631919	WITHOUT_CLASSIFICATION	2.653680810355852E-8	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999990675917388	WITHOUT_CLASSIFICATION	9.324082611671708E-7	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999990675917388	WITHOUT_CLASSIFICATION	9.324082611671708E-7	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999998538743209	WITHOUT_CLASSIFICATION	1.4612567913945865E-7	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999933220630367	WITHOUT_CLASSIFICATION	6.677936963339932E-6	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999999344977841	WITHOUT_CLASSIFICATION	6.550221588168144E-8	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999999344977841	WITHOUT_CLASSIFICATION	6.550221588168144E-8	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999998700866567	WITHOUT_CLASSIFICATION	1.2991334336291043E-7	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999998146383533	WITHOUT_CLASSIFICATION	1.8536164677315034E-7	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999918217640064	WITHOUT_CLASSIFICATION	8.178235993618451E-6	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999999998261143	WITHOUT_CLASSIFICATION	1.7388572404426675E-10	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999972190525532	WITHOUT_CLASSIFICATION	2.780947446839312E-6	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.9999995505048318	WITHOUT_CLASSIFICATION	4.494951681604889E-7	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999988901566707	WITHOUT_CLASSIFICATION	1.109843329330207E-6	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9999990915791872	WITHOUT_CLASSIFICATION	9.08420812828841E-7	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9999920477067448	WITHOUT_CLASSIFICATION	7.952293255134504E-6	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999999334387483	WITHOUT_CLASSIFICATION	6.656125176600127E-8	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999993285269044	WITHOUT_CLASSIFICATION	6.714730955032262E-7	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999999773436096	WITHOUT_CLASSIFICATION	2.2656390462069E-8	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999984948914	WITHOUT_CLASSIFICATION	1.5051085600149023E-9	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999953502194093	WITHOUT_CLASSIFICATION	4.649780590572253E-6	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9989715923558973	WITHOUT_CLASSIFICATION	0.0010284076441027942	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999996274119276	WITHOUT_CLASSIFICATION	3.725880724077733E-7	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999862064103521	WITHOUT_CLASSIFICATION	1.3793589647962591E-5	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999996326452755	WITHOUT_CLASSIFICATION	3.673547244946246E-7	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999997547079378	WITHOUT_CLASSIFICATION	2.4529206213083563E-7	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999999726458922	WITHOUT_CLASSIFICATION	2.7354107720336997E-8	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9998979493311904	WITHOUT_CLASSIFICATION	1.0205066880953469E-4	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999980583586943	WITHOUT_CLASSIFICATION	1.9416413057291586E-6	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999999990604118	WITHOUT_CLASSIFICATION	9.39588179648643E-10	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999762361141367	WITHOUT_CLASSIFICATION	2.3763885863407633E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999996916354825	WITHOUT_CLASSIFICATION	3.0836451753254207E-7	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999999922344073	WITHOUT_CLASSIFICATION	7.765592762815403E-9	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9999978555542626	WITHOUT_CLASSIFICATION	2.144445737472071E-6	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999906247161369	WITHOUT_CLASSIFICATION	9.375283863213216E-6	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9999999520135551	WITHOUT_CLASSIFICATION	4.798644489866615E-8	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999999596569559	WITHOUT_CLASSIFICATION	4.034304410177509E-8	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999985380846729	WITHOUT_CLASSIFICATION	1.4619153271389163E-6	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999997851962489	WITHOUT_CLASSIFICATION	2.1480375103233672E-7	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999999711022639	WITHOUT_CLASSIFICATION	2.8897736144352847E-8	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999995891338633	WITHOUT_CLASSIFICATION	4.108661366781608E-7	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999998466258053	WITHOUT_CLASSIFICATION	1.533741946143406E-7	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999999865445958	WITHOUT_CLASSIFICATION	1.3455404315203648E-8	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9997690494844199	WITHOUT_CLASSIFICATION	2.3095051558023446E-4	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999875281178493	WITHOUT_CLASSIFICATION	1.2471882150819741E-5	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.999999783235668	WITHOUT_CLASSIFICATION	2.1676433209534876E-7	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999999310605712	WITHOUT_CLASSIFICATION	6.893942885093357E-8	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999998482797555	WITHOUT_CLASSIFICATION	1.5172024454535316E-7	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999999961683665	WITHOUT_CLASSIFICATION	3.8316334706217944E-9	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9999994285675249	WITHOUT_CLASSIFICATION	5.714324751460038E-7	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999959547314226	WITHOUT_CLASSIFICATION	4.045268577474789E-6	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.99999909486685	WITHOUT_CLASSIFICATION	9.051331499943292E-7	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999966979141497	WITHOUT_CLASSIFICATION	3.3020858502942904E-6	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999877429759856	WITHOUT_CLASSIFICATION	1.2257024014474138E-5	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999995558647543	WITHOUT_CLASSIFICATION	4.441352457281797E-7	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999922368104553	WITHOUT_CLASSIFICATION	7.763189544731735E-6	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999961650493912	WITHOUT_CLASSIFICATION	3.83495060881863E-6	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999998900080826	WITHOUT_CLASSIFICATION	1.0999191729063623E-7	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999998837758176	WITHOUT_CLASSIFICATION	1.1622418237080832E-7	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9999999707386166	WITHOUT_CLASSIFICATION	2.9261383310819785E-8	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999999963830769	WITHOUT_CLASSIFICATION	3.6169231055201784E-9	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999998999959008	WITHOUT_CLASSIFICATION	1.0000409923225252E-7	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9999955727506427	WITHOUT_CLASSIFICATION	4.4272493573507216E-6	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9999994184648124	WITHOUT_CLASSIFICATION	5.81535187618782E-7	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.99999993774353	WITHOUT_CLASSIFICATION	6.225646994478091E-8	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999738567033636	WITHOUT_CLASSIFICATION	2.6143296636432557E-5	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999999858631725	WITHOUT_CLASSIFICATION	1.4136827516703037E-8	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999896356066486	WITHOUT_CLASSIFICATION	1.0364393351412846E-5	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9995560074486326	WITHOUT_CLASSIFICATION	4.4399255136736056E-4	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999856895294893	WITHOUT_CLASSIFICATION	1.431047051071645E-5	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999989026891353	WITHOUT_CLASSIFICATION	1.0973108647726167E-6	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999999420099819	WITHOUT_CLASSIFICATION	5.799001821348429E-8	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.999988786420148	WITHOUT_CLASSIFICATION	1.1213579852084982E-5	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999995102990362	WITHOUT_CLASSIFICATION	4.897009637976372E-7	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999998020704335	WITHOUT_CLASSIFICATION	1.9792956652490773E-7	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999993875921372	WITHOUT_CLASSIFICATION	6.124078627498355E-7	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999953524993949	WITHOUT_CLASSIFICATION	4.647500605128479E-6	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9999985744233957	WITHOUT_CLASSIFICATION	1.425576604292111E-6	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999989746626214	WITHOUT_CLASSIFICATION	1.0253373784880723E-6	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999989746626214	WITHOUT_CLASSIFICATION	1.0253373784880723E-6	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999987304199154	WITHOUT_CLASSIFICATION	1.2695800845539236E-6	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999987304199154	WITHOUT_CLASSIFICATION	1.2695800845539236E-6	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999997312484832	WITHOUT_CLASSIFICATION	2.687515168020336E-7	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999997312484832	WITHOUT_CLASSIFICATION	2.687515168020336E-7	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999992489690473	WITHOUT_CLASSIFICATION	7.510309525927215E-7	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999992489690473	WITHOUT_CLASSIFICATION	7.510309525927215E-7	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9999999324152034	WITHOUT_CLASSIFICATION	6.758479670246203E-8	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9999827467871554	WITHOUT_CLASSIFICATION	1.7253212844606613E-5	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999990826530312	WITHOUT_CLASSIFICATION	9.173469688636668E-7	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.999999996166274	WITHOUT_CLASSIFICATION	3.833725919040556E-9	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.999999914967066	WITHOUT_CLASSIFICATION	8.503293398634835E-8	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999999534010463	WITHOUT_CLASSIFICATION	4.6598953731294565E-8	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999937262621937	WITHOUT_CLASSIFICATION	6.273737806149916E-6	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999999638972799	WITHOUT_CLASSIFICATION	3.6102720221106396E-8	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999998823782659	WITHOUT_CLASSIFICATION	1.1762173412549976E-7	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.999999957009678	WITHOUT_CLASSIFICATION	4.299032186205995E-8	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999938456165067	WITHOUT_CLASSIFICATION	6.15438349336442E-6	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999999227383886	WITHOUT_CLASSIFICATION	7.726161152909812E-8	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999994808386351	WITHOUT_CLASSIFICATION	5.191613648244475E-7	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999994557619408	WITHOUT_CLASSIFICATION	5.442380591876274E-7	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999995682383683	WITHOUT_CLASSIFICATION	4.3176163175816573E-7	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999998670154945	WITHOUT_CLASSIFICATION	1.3298450543955986E-7	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999825548716179	WITHOUT_CLASSIFICATION	1.7445128382164732E-5	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999999587604436	WITHOUT_CLASSIFICATION	4.123955645392759E-8	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999999872459397	WITHOUT_CLASSIFICATION	1.275406032175746E-8	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9998983490702421	WITHOUT_CLASSIFICATION	1.0165092975789875E-4	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999997432463477	WITHOUT_CLASSIFICATION	2.567536523533556E-7	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999997611364001	WITHOUT_CLASSIFICATION	2.388635998816495E-7	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999401865416754	WITHOUT_CLASSIFICATION	5.981345832458981E-5	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.999999987255627	WITHOUT_CLASSIFICATION	1.2744372904894899E-8	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999998650067579	WITHOUT_CLASSIFICATION	1.349932420882669E-7	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999999950194591	WITHOUT_CLASSIFICATION	4.980540831040378E-9	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999987890935826	WITHOUT_CLASSIFICATION	1.210906417382113E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999951633572219	WITHOUT_CLASSIFICATION	4.836642778107164E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999951633572219	WITHOUT_CLASSIFICATION	4.836642778107164E-6	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999999634601884	WITHOUT_CLASSIFICATION	3.653981152114212E-8	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9999985555080477	WITHOUT_CLASSIFICATION	1.4444919522399233E-6	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9999976436740883	WITHOUT_CLASSIFICATION	2.3563259116771176E-6	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999999991615522	WITHOUT_CLASSIFICATION	8.384477960113774E-10	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999998747089831	WITHOUT_CLASSIFICATION	1.252910168675332E-7	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.999999756550466	WITHOUT_CLASSIFICATION	2.4344953402331265E-7	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999985321995157	WITHOUT_CLASSIFICATION	1.4678004842499721E-6	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999985321995157	WITHOUT_CLASSIFICATION	1.4678004842499721E-6	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999998919086605	WITHOUT_CLASSIFICATION	1.0809133958501965E-7	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9032892192309567	WITHOUT_CLASSIFICATION	0.09671078076904317	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999992040924842	WITHOUT_CLASSIFICATION	7.959075156464682E-7	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999992040924842	WITHOUT_CLASSIFICATION	7.959075156464682E-7	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999999716157939	WITHOUT_CLASSIFICATION	2.8384206153166014E-8	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999994193305977	WITHOUT_CLASSIFICATION	5.80669402390225E-7	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999994193305977	WITHOUT_CLASSIFICATION	5.80669402390225E-7	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999587096395007	WITHOUT_CLASSIFICATION	4.129036049916911E-5	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999587096395007	WITHOUT_CLASSIFICATION	4.129036049916911E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999992772709939	WITHOUT_CLASSIFICATION	7.227290062125632E-7	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999992772709939	WITHOUT_CLASSIFICATION	7.227290062125632E-7	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9999998062646815	WITHOUT_CLASSIFICATION	1.937353185448379E-7	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999984296459229	WITHOUT_CLASSIFICATION	1.570354077143191E-6	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999996979348337	WITHOUT_CLASSIFICATION	3.02065166315648E-7	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.999999999509168	WITHOUT_CLASSIFICATION	4.908320113508903E-10	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999999978734913	WITHOUT_CLASSIFICATION	2.126508649982467E-9	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999998732655047	WITHOUT_CLASSIFICATION	1.2673449530137226E-7	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.999999919488546	WITHOUT_CLASSIFICATION	8.051145388897547E-8	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999999831009957	WITHOUT_CLASSIFICATION	1.6899004280301552E-8	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.999999919488546	WITHOUT_CLASSIFICATION	8.051145388897547E-8	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9991129980100621	WITHOUT_CLASSIFICATION	8.870019899377446E-4	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999985079601175	WITHOUT_CLASSIFICATION	1.492039882532787E-6	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999980695618147	WITHOUT_CLASSIFICATION	1.9304381852317013E-6	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999932041892304	WITHOUT_CLASSIFICATION	6.795810769690993E-6	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999998529049443	WITHOUT_CLASSIFICATION	1.4709505576094898E-7	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9997864747254491	WITHOUT_CLASSIFICATION	2.1352527455097364E-4	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999817572037295	WITHOUT_CLASSIFICATION	1.8242796270562154E-5	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999916209362187	WITHOUT_CLASSIFICATION	8.379063781200818E-6	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.999999810399758	WITHOUT_CLASSIFICATION	1.896002418520541E-7	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.999998895763086	WITHOUT_CLASSIFICATION	1.1042369140019344E-6	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999999730387505	WITHOUT_CLASSIFICATION	2.6961249413449082E-8	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999999515725826	WITHOUT_CLASSIFICATION	4.842741732008177E-8	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.9999514835400374	WITHOUT_CLASSIFICATION	4.851645996267511E-5	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9999993966127851	WITHOUT_CLASSIFICATION	6.033872149665869E-7	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999997391353183	WITHOUT_CLASSIFICATION	2.608646817304682E-7	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999999867284513	WITHOUT_CLASSIFICATION	1.3271548785353846E-8	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999988715397248	WITHOUT_CLASSIFICATION	1.1284602751899313E-6	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999600426423277	WITHOUT_CLASSIFICATION	3.995735767227727E-5	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9989573606337117	WITHOUT_CLASSIFICATION	0.0010426393662884147	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9997887397679053	WITHOUT_CLASSIFICATION	2.1126023209460762E-4	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999999914243292	WITHOUT_CLASSIFICATION	8.57567083004481E-9	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.999999246569287	WITHOUT_CLASSIFICATION	7.534307130904269E-7	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999999968398765	WITHOUT_CLASSIFICATION	3.1601234252582465E-9	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999991323836128	WITHOUT_CLASSIFICATION	8.676163872266238E-7	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999973120473499	WITHOUT_CLASSIFICATION	2.6879526500521996E-6	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999998630935616	WITHOUT_CLASSIFICATION	1.369064383111587E-7	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999999805688521	WITHOUT_CLASSIFICATION	1.9431147837866384E-8	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.999999953348843	WITHOUT_CLASSIFICATION	4.665115706450649E-8	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999999977346851	WITHOUT_CLASSIFICATION	2.2653149681458444E-9	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999999017638216	WITHOUT_CLASSIFICATION	9.823617833386883E-8	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999999547000438	WITHOUT_CLASSIFICATION	4.529995616933756E-8	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999961879137702	WITHOUT_CLASSIFICATION	3.812086229716405E-6	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999999922163095	WITHOUT_CLASSIFICATION	7.783690530580931E-9	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999991519930611	WITHOUT_CLASSIFICATION	8.480069389843057E-7	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999669462318413	WITHOUT_CLASSIFICATION	3.3053768158689106E-5	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999997909564958	WITHOUT_CLASSIFICATION	2.0904350414083572E-7	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999999790144359	WITHOUT_CLASSIFICATION	2.0985564152522434E-8	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999981639457098	WITHOUT_CLASSIFICATION	1.8360542902343296E-6	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999989674279958	WITHOUT_CLASSIFICATION	1.0325720043300946E-6	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999999918214345	WITHOUT_CLASSIFICATION	8.178565482295659E-9	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.999999990073581	WITHOUT_CLASSIFICATION	9.926419063239205E-9	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999993649429808	WITHOUT_CLASSIFICATION	6.35057019265505E-7	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999999670034728	WITHOUT_CLASSIFICATION	3.299652711136979E-8	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999998843021388	WITHOUT_CLASSIFICATION	1.1569786121111969E-7	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999844340307	WITHOUT_CLASSIFICATION	1.556596931446012E-8	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.99999998658563	WITHOUT_CLASSIFICATION	1.3414369952865362E-8	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999999960678401	WITHOUT_CLASSIFICATION	3.932159993711649E-9	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999998805740278	WITHOUT_CLASSIFICATION	1.1942597233230956E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999998504228399	WITHOUT_CLASSIFICATION	1.4957716003761217E-7	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999975410959945	WITHOUT_CLASSIFICATION	2.458904005562559E-6	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999965408185146	WITHOUT_CLASSIFICATION	3.4591814853150953E-6	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999999069254581	WITHOUT_CLASSIFICATION	9.307454188300987E-8	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.999981437598373	WITHOUT_CLASSIFICATION	1.856240162704334E-5	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999998857868774	WITHOUT_CLASSIFICATION	1.1421312260203274E-7	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999987841719709	WITHOUT_CLASSIFICATION	1.2158280290975843E-6	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999987841719709	WITHOUT_CLASSIFICATION	1.2158280290975843E-6	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999981871679	WITHOUT_CLASSIFICATION	1.8128321454899333E-9	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999765770854	WITHOUT_CLASSIFICATION	2.3422914633236934E-8	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999999944460494	WITHOUT_CLASSIFICATION	5.5539506406035025E-9	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999969532909546	WITHOUT_CLASSIFICATION	3.046709045375128E-6	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999977136495452	WITHOUT_CLASSIFICATION	2.286350454879292E-6	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999948216622739	WITHOUT_CLASSIFICATION	5.178337726164706E-6	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999997324828342	WITHOUT_CLASSIFICATION	2.675171657882493E-7	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9997388516366349	WITHOUT_CLASSIFICATION	2.6114836336505023E-4	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999962335150817	WITHOUT_CLASSIFICATION	3.766484918252988E-6	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999999181637406	WITHOUT_CLASSIFICATION	8.183625951205843E-8	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999980772444338	WITHOUT_CLASSIFICATION	1.9227555661973045E-6	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999980772444338	WITHOUT_CLASSIFICATION	1.9227555661973045E-6	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9989508898353212	WITHOUT_CLASSIFICATION	0.0010491101646788173	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999999683416946	WITHOUT_CLASSIFICATION	3.165830544540625E-8	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999995768792439	WITHOUT_CLASSIFICATION	4.2312075600754784E-7	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999999997622976	WITHOUT_CLASSIFICATION	2.3770233595805716E-10	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999999992764714	WITHOUT_CLASSIFICATION	7.235284734250568E-10	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999999705792892	WITHOUT_CLASSIFICATION	2.9420710773151262E-8	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999952075801	WITHOUT_CLASSIFICATION	4.7924199348929695E-9	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999999858144846	WITHOUT_CLASSIFICATION	1.418551541073997E-8	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999997317758387	WITHOUT_CLASSIFICATION	2.682241613122726E-7	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999925172264176	WITHOUT_CLASSIFICATION	7.482773582482318E-6	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999999995774183	WITHOUT_CLASSIFICATION	4.225818449217431E-10	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999999362090125	WITHOUT_CLASSIFICATION	6.37909874143237E-8	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999997515189553	WITHOUT_CLASSIFICATION	2.484810448197252E-7	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999997515189553	WITHOUT_CLASSIFICATION	2.484810448197252E-7	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999966484739543	WITHOUT_CLASSIFICATION	3.3515260456652672E-6	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.999996915180431	WITHOUT_CLASSIFICATION	3.084819569009824E-6	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.999999846654288	WITHOUT_CLASSIFICATION	1.5334571201285684E-7	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999971505186368	WITHOUT_CLASSIFICATION	2.849481363209361E-6	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999993471776046	WITHOUT_CLASSIFICATION	6.528223953415629E-7	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999999858429368	WITHOUT_CLASSIFICATION	1.4157063229953189E-8	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.999999622032959	WITHOUT_CLASSIFICATION	3.779670410086504E-7	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999999950849302	WITHOUT_CLASSIFICATION	4.915069732719266E-9	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999976740462159	WITHOUT_CLASSIFICATION	2.325953784148218E-6	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999999697706574	WITHOUT_CLASSIFICATION	3.02293426076861E-8	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999995768792439	WITHOUT_CLASSIFICATION	4.2312075600754784E-7	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999995083987695	WITHOUT_CLASSIFICATION	4.916012304706247E-7	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999995163378657	WITHOUT_CLASSIFICATION	4.836621343575266E-7	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999999664974191	WITHOUT_CLASSIFICATION	3.350258088744995E-8	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999997044368514	WITHOUT_CLASSIFICATION	2.955631486336493E-7	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999998980585576	WITHOUT_CLASSIFICATION	1.0194144233587056E-7	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999999768583897	WITHOUT_CLASSIFICATION	2.314161031775596E-8	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999928688161224	WITHOUT_CLASSIFICATION	7.131183877744083E-6	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999989755109853	WITHOUT_CLASSIFICATION	1.0244890146973093E-6	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999999991264006	WITHOUT_CLASSIFICATION	8.735993741289921E-10	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.999994957545881	WITHOUT_CLASSIFICATION	5.042454119079216E-6	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999967640043963	WITHOUT_CLASSIFICATION	3.235995603759209E-6	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999999470999649	WITHOUT_CLASSIFICATION	5.2900035146768064E-8	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999992888990878	WITHOUT_CLASSIFICATION	7.11100912273193E-7	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999842457799067	WITHOUT_CLASSIFICATION	1.5754220093323356E-5	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999987725954081	WITHOUT_CLASSIFICATION	1.2274045918273457E-6	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999997128767938	WITHOUT_CLASSIFICATION	2.8712320621098884E-7	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.99999772238697	WITHOUT_CLASSIFICATION	2.277613029977748E-6	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.999999906034565	WITHOUT_CLASSIFICATION	9.396543508946842E-8	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999905067706544	WITHOUT_CLASSIFICATION	9.493229345613876E-6	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.9999999935574095	WITHOUT_CLASSIFICATION	6.4425904221027485E-9	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999999990144771	WITHOUT_CLASSIFICATION	9.8552287837877E-10	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999971044867522	WITHOUT_CLASSIFICATION	2.8955132478848677E-6	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.999999746485428	WITHOUT_CLASSIFICATION	2.5351457200274684E-7	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999968114231184	WITHOUT_CLASSIFICATION	3.18857688149745E-6	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999998808828653	WITHOUT_CLASSIFICATION	1.1911713467609935E-7	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999999939284422	WITHOUT_CLASSIFICATION	6.071557760482588E-9	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9999987988316102	WITHOUT_CLASSIFICATION	1.2011683897510167E-6	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999997002050303	WITHOUT_CLASSIFICATION	2.9979496966368916E-7	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9999969826219385	WITHOUT_CLASSIFICATION	3.017378061438895E-6	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999981680580088	WITHOUT_CLASSIFICATION	1.831941991180362E-6	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999990884807941	WITHOUT_CLASSIFICATION	9.115192060090639E-7	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999990884807941	WITHOUT_CLASSIFICATION	9.115192060090639E-7	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9987830551886169	WITHOUT_CLASSIFICATION	0.001216944811383152	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9996386781143072	WITHOUT_CLASSIFICATION	3.613218856928076E-4	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.9999999990180107	WITHOUT_CLASSIFICATION	9.819892453625041E-10	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9998617441262326	WITHOUT_CLASSIFICATION	1.3825587376743674E-4	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999911056074544	WITHOUT_CLASSIFICATION	8.894392545611801E-6	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999998756321655	WITHOUT_CLASSIFICATION	1.2436783442462032E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999993285269044	WITHOUT_CLASSIFICATION	6.714730955032262E-7	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999999914772963	WITHOUT_CLASSIFICATION	8.522703634627102E-9	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999984675157975	WITHOUT_CLASSIFICATION	1.5324842025153226E-6	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999993317736731	WITHOUT_CLASSIFICATION	6.682263268348437E-7	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999999120035831	WITHOUT_CLASSIFICATION	8.799641689173784E-8	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9999996978472964	WITHOUT_CLASSIFICATION	3.021527036088673E-7	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999991627266209	WITHOUT_CLASSIFICATION	8.372733791031374E-7	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999998900080826	WITHOUT_CLASSIFICATION	1.0999191729063623E-7	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9997550762353243	WITHOUT_CLASSIFICATION	2.4492376467568586E-4	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999787787302381	WITHOUT_CLASSIFICATION	2.1221269761830606E-5	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999958094361233	WITHOUT_CLASSIFICATION	4.190563876601702E-6	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999999739839713	WITHOUT_CLASSIFICATION	2.6016028721931334E-8	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.9999996220765348	WITHOUT_CLASSIFICATION	3.7792346518656653E-7	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999869523314103	WITHOUT_CLASSIFICATION	1.3047668589730758E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999625004580212	WITHOUT_CLASSIFICATION	3.7499541978784505E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999625004580212	WITHOUT_CLASSIFICATION	3.7499541978784505E-5	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9999930035546609	WITHOUT_CLASSIFICATION	6.996445339101541E-6	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.999996214104403	WITHOUT_CLASSIFICATION	3.7858955969766605E-6	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999993555802675	WITHOUT_CLASSIFICATION	6.444197323970496E-7	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999999972528574	WITHOUT_CLASSIFICATION	2.7471426889803223E-9	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999999868402077	WITHOUT_CLASSIFICATION	1.315979215316827E-8	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999585679490903	WITHOUT_CLASSIFICATION	4.143205090969143E-5	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999999304545972	WITHOUT_CLASSIFICATION	6.954540279559832E-8	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.999999999895568	WITHOUT_CLASSIFICATION	1.0443205210562912E-10	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999976375645011	WITHOUT_CLASSIFICATION	2.3624354989597792E-6	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999943269519543	WITHOUT_CLASSIFICATION	5.673048045693576E-6	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.999997070293713	WITHOUT_CLASSIFICATION	2.929706286928264E-6	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999997437691468	WITHOUT_CLASSIFICATION	2.5623085325985254E-7	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999997831472005	WITHOUT_CLASSIFICATION	2.168527994692839E-7	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999999979905342	WITHOUT_CLASSIFICATION	2.0094658246065987E-9	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999946010065208	WITHOUT_CLASSIFICATION	5.398993479138426E-6	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.999999778790161	WITHOUT_CLASSIFICATION	2.2120983903181284E-7	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999969362797064	WITHOUT_CLASSIFICATION	3.0637202934861476E-6	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9999996921006221	WITHOUT_CLASSIFICATION	3.0789937799346563E-7	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999143259981	WITHOUT_CLASSIFICATION	8.56740018714893E-8	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999999979621353	WITHOUT_CLASSIFICATION	2.0378645818868184E-9	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999769501076622	WITHOUT_CLASSIFICATION	2.3049892337852256E-5	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999991838079129	WITHOUT_CLASSIFICATION	8.161920870849644E-7	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999997947645561	WITHOUT_CLASSIFICATION	2.0523544386985158E-7	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999999543254967	WITHOUT_CLASSIFICATION	4.5674503277238014E-8	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999988977491034	WITHOUT_CLASSIFICATION	1.1022508964833197E-6	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999997331685676	WITHOUT_CLASSIFICATION	2.6683143239654E-7	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.9999801400406859	WITHOUT_CLASSIFICATION	1.985995931413627E-5	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999998990446091	WITHOUT_CLASSIFICATION	1.009553909216639E-7	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999999127537996	WITHOUT_CLASSIFICATION	8.724620030684651E-8	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999996026440366	WITHOUT_CLASSIFICATION	3.973559634059925E-7	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999998568706179	WITHOUT_CLASSIFICATION	1.4312938207201802E-7	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.99999086950795	WITHOUT_CLASSIFICATION	9.13049204987716E-6	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999988041924811	WITHOUT_CLASSIFICATION	1.195807518835014E-6	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.999999576584097	WITHOUT_CLASSIFICATION	4.2341590300677333E-7	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.999999998197512	WITHOUT_CLASSIFICATION	1.8024880375221697E-9	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999999987781969	WITHOUT_CLASSIFICATION	1.2218031045682437E-9	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999999659667329	WITHOUT_CLASSIFICATION	3.403326708550336E-8	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9999788666084732	WITHOUT_CLASSIFICATION	2.1133391526822267E-5	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999630005213674	WITHOUT_CLASSIFICATION	3.6999478632660045E-5	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999973458954164	WITHOUT_CLASSIFICATION	2.654104583536646E-6	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999999987816081	WITHOUT_CLASSIFICATION	1.2183918569024454E-9	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999995320938834	WITHOUT_CLASSIFICATION	4.6790611670335975E-7	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999998425202581	WITHOUT_CLASSIFICATION	1.5747974181258572E-7	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.999999701604681	WITHOUT_CLASSIFICATION	2.9839531901917046E-7	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999997610420578	WITHOUT_CLASSIFICATION	2.3895794230118016E-7	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.999999701604681	WITHOUT_CLASSIFICATION	2.9839531901917046E-7	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999998019134989	WITHOUT_CLASSIFICATION	1.9808650118048428E-7	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9862831922401815	WITHOUT_CLASSIFICATION	0.013716807759818468	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999852476493569	WITHOUT_CLASSIFICATION	1.4752350643016062E-5	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.7882561160460405	IMPLEMENTATION	0.21174388395395946	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999993440322692	WITHOUT_CLASSIFICATION	6.559677308628096E-7	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999999867201346	WITHOUT_CLASSIFICATION	1.3279865471567417E-8	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.999999954315085	WITHOUT_CLASSIFICATION	4.568491494608543E-8	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999999926925517	WITHOUT_CLASSIFICATION	7.307448256449613E-9	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9998635404434724	WITHOUT_CLASSIFICATION	1.364595565276845E-4	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.5112641814941203	WITHOUT_CLASSIFICATION	0.48873581850587977	IMPLEMENTATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9993814457885167	WITHOUT_CLASSIFICATION	6.185542114833152E-4	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999898789310983	WITHOUT_CLASSIFICATION	1.012106890164512E-5	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9997630893375283	WITHOUT_CLASSIFICATION	2.3691066247159327E-4	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999941758053004	WITHOUT_CLASSIFICATION	5.824194699637576E-6	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9982908750897682	WITHOUT_CLASSIFICATION	0.0017091249102317322	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9803054353920096	WITHOUT_CLASSIFICATION	0.019694564607990416	IMPLEMENTATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9992423066866781	WITHOUT_CLASSIFICATION	7.576933133218359E-4	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999999990758096	WITHOUT_CLASSIFICATION	9.241902919471373E-10	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999903556891878	WITHOUT_CLASSIFICATION	9.644310812171449E-6	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999966691777559	WITHOUT_CLASSIFICATION	3.3308222441732485E-6	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9998227367665901	WITHOUT_CLASSIFICATION	1.7726323341000884E-4	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999900018623	WITHOUT_CLASSIFICATION	9.99813777743285E-9	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999990304356265	WITHOUT_CLASSIFICATION	9.695643734554353E-7	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.999999909828455	WITHOUT_CLASSIFICATION	9.017154499384889E-8	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999988284645119	WITHOUT_CLASSIFICATION	1.171535488027177E-6	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999984978367668	WITHOUT_CLASSIFICATION	1.5021632331859645E-6	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.999999986270321	WITHOUT_CLASSIFICATION	1.3729678985306843E-8	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999999658793293	WITHOUT_CLASSIFICATION	3.4120670683859355E-8	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999994206243012	WITHOUT_CLASSIFICATION	5.793756987075212E-7	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.999998956100511	WITHOUT_CLASSIFICATION	1.0438994889753E-6	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999994307308018	WITHOUT_CLASSIFICATION	5.692691982779616E-7	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999991822302605	WITHOUT_CLASSIFICATION	8.177697394027069E-7	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999985683618571	WITHOUT_CLASSIFICATION	1.4316381430134104E-6	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9999951386186163	WITHOUT_CLASSIFICATION	4.861381383595068E-6	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999994118966307	WITHOUT_CLASSIFICATION	5.881033693761996E-7	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9999994432951284	WITHOUT_CLASSIFICATION	5.567048716871834E-7	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999999999705316	WITHOUT_CLASSIFICATION	2.9468399525130774E-11	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999896359071	WITHOUT_CLASSIFICATION	1.0364092871129326E-8	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999763570614845	WITHOUT_CLASSIFICATION	2.364293851556067E-5	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999998930009192	WITHOUT_CLASSIFICATION	1.069990808795206E-7	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999365196604021	WITHOUT_CLASSIFICATION	6.348033959786359E-5	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999955387816529	WITHOUT_CLASSIFICATION	4.461218347057056E-6	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999999848373832	WITHOUT_CLASSIFICATION	1.516261673024818E-8	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999933127906546	WITHOUT_CLASSIFICATION	6.68720934535801E-6	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999933127906546	WITHOUT_CLASSIFICATION	6.68720934535801E-6	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999878653108368	WITHOUT_CLASSIFICATION	1.2134689163092713E-5	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.999999996597808	WITHOUT_CLASSIFICATION	3.4021920208785284E-9	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999999464774011	WITHOUT_CLASSIFICATION	5.352259905123512E-8	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999999999982783	WITHOUT_CLASSIFICATION	1.721742164811193E-12	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999999999957	WITHOUT_CLASSIFICATION	4.336845945879406E-15	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999983420399	WITHOUT_CLASSIFICATION	1.6579600438973197E-9	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9998951153058292	WITHOUT_CLASSIFICATION	1.0488469417076131E-4	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999995558786536	WITHOUT_CLASSIFICATION	4.4412134630793136E-7	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999996612475129	WITHOUT_CLASSIFICATION	3.387524870900975E-7	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999999967031276	WITHOUT_CLASSIFICATION	3.2968723944733246E-9	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999999997023292	WITHOUT_CLASSIFICATION	2.976708010489261E-10	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999999785125439	WITHOUT_CLASSIFICATION	2.1487456154748323E-8	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999940873045724	WITHOUT_CLASSIFICATION	5.912695427612517E-6	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999442327765945	WITHOUT_CLASSIFICATION	5.576722340555639E-5	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999999947204207	WITHOUT_CLASSIFICATION	5.279579334740223E-9	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9998967217150253	WITHOUT_CLASSIFICATION	1.0327828497478452E-4	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999999543565701	WITHOUT_CLASSIFICATION	4.5643430009524983E-8	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999999987398267	WITHOUT_CLASSIFICATION	1.2601732887733046E-9	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999999522894668	WITHOUT_CLASSIFICATION	4.7710533241102326E-8	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.999999974179054	WITHOUT_CLASSIFICATION	2.5820946056647124E-8	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.999575145716544	WITHOUT_CLASSIFICATION	4.2485428345591977E-4	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.997706352278112	WITHOUT_CLASSIFICATION	0.0022936477218880305	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999979442275021	WITHOUT_CLASSIFICATION	2.055772497828348E-6	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999997316370557	WITHOUT_CLASSIFICATION	2.683629443016457E-7	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999999926774896	WITHOUT_CLASSIFICATION	7.3225104611029376E-9	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.999999996153351	WITHOUT_CLASSIFICATION	3.846648934643696E-9	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999999544541	WITHOUT_CLASSIFICATION	4.554592690883636E-11	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999996905819161	WITHOUT_CLASSIFICATION	3.094180838864208E-7	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999999914358064	WITHOUT_CLASSIFICATION	8.564193523810608E-9	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.999999997069008	WITHOUT_CLASSIFICATION	2.9309920718394114E-9	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999982217412964	WITHOUT_CLASSIFICATION	1.7782587037407091E-6	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999998628146921	WITHOUT_CLASSIFICATION	1.3718530783959803E-7	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999966293918	WITHOUT_CLASSIFICATION	3.3706081814675375E-9	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.999997328852172	WITHOUT_CLASSIFICATION	2.6711478280557403E-6	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999999998787614	WITHOUT_CLASSIFICATION	1.2123850179283958E-10	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999999776699562	WITHOUT_CLASSIFICATION	2.2330043750244947E-8	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999995815478369	WITHOUT_CLASSIFICATION	4.184521630859701E-7	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999997098240433	WITHOUT_CLASSIFICATION	2.9017595666588094E-7	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999813250076507	WITHOUT_CLASSIFICATION	1.8674992349389925E-5	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999996824816341	WITHOUT_CLASSIFICATION	3.175183659567827E-7	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999981236776667	WITHOUT_CLASSIFICATION	1.8763223332990254E-6	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9975960476164972	WITHOUT_CLASSIFICATION	0.002403952383502757	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9998915391272426	WITHOUT_CLASSIFICATION	1.0846087275740447E-4	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999999800203848	WITHOUT_CLASSIFICATION	1.997961519019698E-8	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999977885333179	WITHOUT_CLASSIFICATION	2.2114666822260057E-6	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999992676564867	WITHOUT_CLASSIFICATION	7.323435131709908E-7	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999991103374851	WITHOUT_CLASSIFICATION	8.896625148850566E-7	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999998730716182	WITHOUT_CLASSIFICATION	1.269283818298357E-7	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.9999977539825876	WITHOUT_CLASSIFICATION	2.24601741238483E-6	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.999914346179336	WITHOUT_CLASSIFICATION	8.565382066385334E-5	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999968497001303	WITHOUT_CLASSIFICATION	3.1502998697268563E-6	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999995464062467	WITHOUT_CLASSIFICATION	4.5359375326952793E-7	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999997969293516	WITHOUT_CLASSIFICATION	2.0307064850187668E-7	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999999997355533	WITHOUT_CLASSIFICATION	2.6444663430782675E-10	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999998479872809	WITHOUT_CLASSIFICATION	1.5201271914272557E-7	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999908104755514	WITHOUT_CLASSIFICATION	9.189524448634622E-6	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999999950945957	WITHOUT_CLASSIFICATION	4.9054043428941105E-9	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999999986119092	WITHOUT_CLASSIFICATION	1.388090802068014E-8	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999971214109548	WITHOUT_CLASSIFICATION	2.8785890451678085E-6	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999788687666	WITHOUT_CLASSIFICATION	2.113123339729056E-8	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999999184847806	WITHOUT_CLASSIFICATION	8.151521934964412E-8	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999999355806624	WITHOUT_CLASSIFICATION	6.441933762905445E-8	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999999664778	WITHOUT_CLASSIFICATION	3.3522216493682396E-11	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999980825636	WITHOUT_CLASSIFICATION	1.9174363841387994E-9	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9999353837707065	WITHOUT_CLASSIFICATION	6.461622929357015E-5	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999998250830128	WITHOUT_CLASSIFICATION	1.7491698730342172E-7	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999995922496613	WITHOUT_CLASSIFICATION	4.0775033872598955E-7	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999999948370822	WITHOUT_CLASSIFICATION	5.162917829911962E-9	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.9999985663284854	WITHOUT_CLASSIFICATION	1.4336715146124507E-6	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999994282362339	WITHOUT_CLASSIFICATION	5.717637661784107E-7	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999997049838861	WITHOUT_CLASSIFICATION	2.950161138411716E-7	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.999985517180097	WITHOUT_CLASSIFICATION	1.4482819903010155E-5	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.999999972776433	WITHOUT_CLASSIFICATION	2.7223566993845307E-8	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999997235933509	WITHOUT_CLASSIFICATION	2.764066491821168E-7	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9999996266608797	WITHOUT_CLASSIFICATION	3.733391203373333E-7	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9999989681551813	WITHOUT_CLASSIFICATION	1.031844818690177E-6	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9999995789283953	WITHOUT_CLASSIFICATION	4.210716046780103E-7	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9999995333538719	WITHOUT_CLASSIFICATION	4.6664612805542703E-7	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9999994808679794	WITHOUT_CLASSIFICATION	5.191320205782815E-7	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9999995061596263	WITHOUT_CLASSIFICATION	4.938403737583815E-7	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9999994193085325	WITHOUT_CLASSIFICATION	5.806914675405941E-7	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9999995300739796	WITHOUT_CLASSIFICATION	4.699260203526988E-7	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.999999259308788	WITHOUT_CLASSIFICATION	7.40691212078002E-7	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9999994065645075	WITHOUT_CLASSIFICATION	5.93435492547934E-7	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9999991386468843	WITHOUT_CLASSIFICATION	8.613531157583261E-7	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9999993299842465	WITHOUT_CLASSIFICATION	6.700157535640064E-7	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9999991152431464	WITHOUT_CLASSIFICATION	8.847568535953764E-7	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9999990486738892	WITHOUT_CLASSIFICATION	9.51326110694685E-7	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.999998900072244	WITHOUT_CLASSIFICATION	1.0999277560280577E-6	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.999999192855585	WITHOUT_CLASSIFICATION	8.071444150333867E-7	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.99999889144332	WITHOUT_CLASSIFICATION	1.1085566800237443E-6	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9999997974276249	WITHOUT_CLASSIFICATION	2.0257237507232587E-7	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9999992963402534	WITHOUT_CLASSIFICATION	7.03659746549863E-7	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9999997576295274	WITHOUT_CLASSIFICATION	2.4237047262740793E-7	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9951468030333878	WITHOUT_CLASSIFICATION	0.0048531969666123255	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9998676893299151	WITHOUT_CLASSIFICATION	1.3231067008487071E-4	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999993287420516	WITHOUT_CLASSIFICATION	6.712579484840941E-7	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999859320887402	WITHOUT_CLASSIFICATION	1.4067911259744964E-5	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999995031490724	WITHOUT_CLASSIFICATION	4.96850927594644E-7	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.999997882448633	WITHOUT_CLASSIFICATION	2.1175513670795298E-6	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9754423062552827	WITHOUT_CLASSIFICATION	0.024557693744717255	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999996910607265	WITHOUT_CLASSIFICATION	3.0893927356335343E-7	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999991463060687	WITHOUT_CLASSIFICATION	8.536939313944E-7	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9534412161157921	IMPLEMENTATION	0.0465587838842078	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9999987085509248	WITHOUT_CLASSIFICATION	1.291449075263748E-6	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999999996257841	WITHOUT_CLASSIFICATION	3.742159262570354E-10	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999998308304983	WITHOUT_CLASSIFICATION	1.691695016987267E-7	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999998308304983	WITHOUT_CLASSIFICATION	1.691695016987267E-7	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999996844842278	WITHOUT_CLASSIFICATION	3.155157721284645E-7	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9998824712778915	WITHOUT_CLASSIFICATION	1.1752872210847542E-4	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999999890082	WITHOUT_CLASSIFICATION	1.0991674775296354E-11	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999990491734813	WITHOUT_CLASSIFICATION	9.50826518669004E-7	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999925964883792	WITHOUT_CLASSIFICATION	7.403511620765709E-6	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.999999480955488	WITHOUT_CLASSIFICATION	5.190445121227122E-7	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9999999079379314	WITHOUT_CLASSIFICATION	9.206206861291978E-8	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999981101031361	WITHOUT_CLASSIFICATION	1.8898968639316728E-6	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9999997667450673	WITHOUT_CLASSIFICATION	2.3325493272039784E-7	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9999998498003467	WITHOUT_CLASSIFICATION	1.5019965333701323E-7	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999225162093095	WITHOUT_CLASSIFICATION	7.748379069045441E-5	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999999918428907	WITHOUT_CLASSIFICATION	8.157109356284396E-9	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9999997537045777	WITHOUT_CLASSIFICATION	2.462954223491409E-7	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999999599532505	WITHOUT_CLASSIFICATION	4.0046749562054116E-8	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999986806942893	WITHOUT_CLASSIFICATION	1.3193057106665332E-6	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.9999949737593624	WITHOUT_CLASSIFICATION	5.026240637658753E-6	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999999652462228	WITHOUT_CLASSIFICATION	3.4753777158741035E-8	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999999918177298	WITHOUT_CLASSIFICATION	8.182270315165455E-9	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999984014824063	WITHOUT_CLASSIFICATION	1.598517593817615E-6	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999986246680463	WITHOUT_CLASSIFICATION	1.3753319537065586E-6	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999999748600185	WITHOUT_CLASSIFICATION	2.5139981487465743E-8	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999998030357541	WITHOUT_CLASSIFICATION	1.969642459481586E-7	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999907434186073	WITHOUT_CLASSIFICATION	9.256581392648753E-6	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.999999993251392	WITHOUT_CLASSIFICATION	6.748608007128491E-9	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999988383175714	WITHOUT_CLASSIFICATION	1.161682428512182E-6	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999984528913158	WITHOUT_CLASSIFICATION	1.547108684157226E-6	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999999944747927	WITHOUT_CLASSIFICATION	5.525207303627556E-9	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999997518135594	WITHOUT_CLASSIFICATION	2.481864406414189E-7	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.999989728680339	WITHOUT_CLASSIFICATION	1.0271319661098678E-5	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.999996645105143	WITHOUT_CLASSIFICATION	3.3548948570611424E-6	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999954664298247	WITHOUT_CLASSIFICATION	4.5335701752052285E-6	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999914952489769	WITHOUT_CLASSIFICATION	8.504751023128939E-6	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999969900848067	WITHOUT_CLASSIFICATION	3.0099151933430917E-6	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999957926556272	WITHOUT_CLASSIFICATION	4.207344372833616E-6	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999985569282168	WITHOUT_CLASSIFICATION	1.4430717831757208E-6	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999961309079478	WITHOUT_CLASSIFICATION	3.869092052137645E-6	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999827562873	WITHOUT_CLASSIFICATION	1.724371270796185E-7	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999999891652507	WITHOUT_CLASSIFICATION	1.0834749257667696E-8	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999843793710784	WITHOUT_CLASSIFICATION	1.5620628921550373E-5	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999999985164234	WITHOUT_CLASSIFICATION	1.4835765079891063E-9	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9932456922059708	WITHOUT_CLASSIFICATION	0.006754307794029153	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999676193197272	WITHOUT_CLASSIFICATION	3.2380680272811537E-5	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999765485041732	WITHOUT_CLASSIFICATION	2.3451495826852733E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9998180139218678	WITHOUT_CLASSIFICATION	1.8198607813219578E-4	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9998180139218678	WITHOUT_CLASSIFICATION	1.8198607813219578E-4	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999999884196046	WITHOUT_CLASSIFICATION	1.1580395418470644E-8	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999960683344362	WITHOUT_CLASSIFICATION	3.9316655637735856E-6	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.999999936863582	WITHOUT_CLASSIFICATION	6.31364180045882E-8	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9999985815765509	WITHOUT_CLASSIFICATION	1.4184234491796054E-6	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999998581692188	WITHOUT_CLASSIFICATION	1.4183078131874559E-7	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9999981659570321	WITHOUT_CLASSIFICATION	1.8340429679957023E-6	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999941945734102	WITHOUT_CLASSIFICATION	5.805426589712134E-6	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9997923001804189	WITHOUT_CLASSIFICATION	2.0769981958125087E-4	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999982593250503	WITHOUT_CLASSIFICATION	1.7406749497368882E-6	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999997636353324	WITHOUT_CLASSIFICATION	2.3636466753421023E-7	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999998301447883	WITHOUT_CLASSIFICATION	1.6985521172065434E-7	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.999999567670885	WITHOUT_CLASSIFICATION	4.3232911494868804E-7	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999941277177075	WITHOUT_CLASSIFICATION	5.872282292533247E-6	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999999976235308	WITHOUT_CLASSIFICATION	2.376469247223243E-9	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.8117274009945682	WITHOUT_CLASSIFICATION	0.18827259900543186	IMPLEMENTATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9998695806876088	WITHOUT_CLASSIFICATION	1.304193123912424E-4	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999549630553144	WITHOUT_CLASSIFICATION	4.5036944685632225E-5	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999999853738897	WITHOUT_CLASSIFICATION	1.462611027675035E-8	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9991472214055782	WITHOUT_CLASSIFICATION	8.52778594421885E-4	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999922368104553	WITHOUT_CLASSIFICATION	7.763189544731735E-6	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999981291113659	WITHOUT_CLASSIFICATION	1.8708886340465123E-6	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999981291113659	WITHOUT_CLASSIFICATION	1.8708886340465123E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999997710690501	WITHOUT_CLASSIFICATION	2.2893094995158238E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999997710690501	WITHOUT_CLASSIFICATION	2.2893094995158238E-7	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999997382265938	WITHOUT_CLASSIFICATION	2.617734061428999E-7	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999989038123489	WITHOUT_CLASSIFICATION	1.0961876511188355E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999997235313718	WITHOUT_CLASSIFICATION	2.764686283031051E-7	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999119758675	WITHOUT_CLASSIFICATION	8.802413252383234E-8	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999996979348337	WITHOUT_CLASSIFICATION	3.02065166315648E-7	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999889171811	WITHOUT_CLASSIFICATION	1.108281875817853E-8	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9686450184953503	WITHOUT_CLASSIFICATION	0.03135498150464961	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9999995515331661	WITHOUT_CLASSIFICATION	4.484668339461075E-7	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999999444749733	WITHOUT_CLASSIFICATION	5.552502658796048E-8	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.999999682053857	WITHOUT_CLASSIFICATION	3.179461430399992E-7	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999999914905473	WITHOUT_CLASSIFICATION	8.509452683329944E-9	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999999700675684	WITHOUT_CLASSIFICATION	2.9932431578586754E-8	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999999997521949	WITHOUT_CLASSIFICATION	2.478051572818168E-10	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999512270296951	WITHOUT_CLASSIFICATION	4.877297030498601E-5	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999985981757431	WITHOUT_CLASSIFICATION	1.4018242569840644E-6	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.9999962907835177	WITHOUT_CLASSIFICATION	3.709216482232649E-6	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999428486962406	WITHOUT_CLASSIFICATION	5.715130375942012E-5	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999999602208817	WITHOUT_CLASSIFICATION	3.9779118337662544E-8	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.999997470598147	WITHOUT_CLASSIFICATION	2.529401852986713E-6	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999852978943117	WITHOUT_CLASSIFICATION	1.4702105688370608E-5	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.999997352622137	WITHOUT_CLASSIFICATION	2.647377863087186E-6	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999997584541966	WITHOUT_CLASSIFICATION	2.4154580329111586E-7	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999999957436787	WITHOUT_CLASSIFICATION	4.256321282296924E-9	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.999999986270321	WITHOUT_CLASSIFICATION	1.3729678985306843E-8	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999983420399	WITHOUT_CLASSIFICATION	1.6579600438973197E-9	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.999999258318105	WITHOUT_CLASSIFICATION	7.41681894930053E-7	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999999843258683	WITHOUT_CLASSIFICATION	1.5674131586865944E-8	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999999978360774	WITHOUT_CLASSIFICATION	2.163922624801721E-9	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999999594193323	WITHOUT_CLASSIFICATION	4.0580667746055034E-8	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999988463372549	WITHOUT_CLASSIFICATION	1.1536627450859786E-6	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999988463372549	WITHOUT_CLASSIFICATION	1.1536627450859786E-6	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999759622218	WITHOUT_CLASSIFICATION	2.4037778142999707E-8	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999999433119073	WITHOUT_CLASSIFICATION	5.668809269878965E-8	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999998242595692	WITHOUT_CLASSIFICATION	1.757404307651268E-7	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999999967695445	WITHOUT_CLASSIFICATION	3.230455460322875E-9	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999998928949355	WITHOUT_CLASSIFICATION	1.071050644270158E-7	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.999999632348904	WITHOUT_CLASSIFICATION	3.6765109603053886E-7	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999998975058804	WITHOUT_CLASSIFICATION	1.0249411964345619E-7	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999999110535639	WITHOUT_CLASSIFICATION	8.89464360953546E-8	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999987109460791	WITHOUT_CLASSIFICATION	1.2890539209630784E-6	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.999999992028702	WITHOUT_CLASSIFICATION	7.971297960859461E-9	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9999999633797498	WITHOUT_CLASSIFICATION	3.6620250070699094E-8	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999997522249262	WITHOUT_CLASSIFICATION	2.4777507378499687E-7	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999963789782744	WITHOUT_CLASSIFICATION	3.621021725668784E-6	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999999959460076	WITHOUT_CLASSIFICATION	4.0539923196759875E-9	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999999957188215	WITHOUT_CLASSIFICATION	4.2811784668754194E-9	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999990826530312	WITHOUT_CLASSIFICATION	9.173469688636668E-7	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999999766143707	WITHOUT_CLASSIFICATION	2.3385629221200817E-8	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.999999898844614	WITHOUT_CLASSIFICATION	1.0115538595825111E-7	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999982145150821	WITHOUT_CLASSIFICATION	1.7854849179262523E-6	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999999820444995	WITHOUT_CLASSIFICATION	1.795550057886551E-8	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999999976771514	WITHOUT_CLASSIFICATION	2.322848668680923E-9	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999999880913301	WITHOUT_CLASSIFICATION	1.1908669938279475E-8	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999999628986921	WITHOUT_CLASSIFICATION	3.7101307887615716E-8	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9999990970734071	WITHOUT_CLASSIFICATION	9.02926593013705E-7	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999999803717095	WITHOUT_CLASSIFICATION	1.962829052816336E-8	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999999711274072	WITHOUT_CLASSIFICATION	2.8872592687593903E-8	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999997092075333	WITHOUT_CLASSIFICATION	2.907924666645815E-7	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999999970161108	WITHOUT_CLASSIFICATION	2.983889215236434E-9	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999999994971474	WITHOUT_CLASSIFICATION	5.028526351600579E-10	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999987518729071	WITHOUT_CLASSIFICATION	1.2481270929483088E-6	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9997688034406366	WITHOUT_CLASSIFICATION	2.3119655936350343E-4	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999956153541549	WITHOUT_CLASSIFICATION	4.384645845080676E-6	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999998365953895	WITHOUT_CLASSIFICATION	1.6340461046748846E-7	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9999693436541114	WITHOUT_CLASSIFICATION	3.065634588848368E-5	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999978461189117	WITHOUT_CLASSIFICATION	2.1538810883189907E-6	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9998362812219997	WITHOUT_CLASSIFICATION	1.637187780001722E-4	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.99999899015596	WITHOUT_CLASSIFICATION	1.0098440399905312E-6	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999932172326401	WITHOUT_CLASSIFICATION	6.782767359983761E-6	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999997652441582	WITHOUT_CLASSIFICATION	2.3475584173683168E-7	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999646702939036	WITHOUT_CLASSIFICATION	3.5329706096401285E-5	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999936074767	WITHOUT_CLASSIFICATION	6.3925231963728676E-9	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999994998444396	WITHOUT_CLASSIFICATION	5.00155560417138E-7	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9999988923994827	WITHOUT_CLASSIFICATION	1.107600517256035E-6	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9999998244199291	WITHOUT_CLASSIFICATION	1.75580070952657E-7	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999979711935593	WITHOUT_CLASSIFICATION	2.0288064407111575E-6	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.999999444491856	WITHOUT_CLASSIFICATION	5.55508143941402E-7	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999999783300559	WITHOUT_CLASSIFICATION	2.1669944130807622E-8	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999990586284389	WITHOUT_CLASSIFICATION	9.413715611203653E-7	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.999994691855085	WITHOUT_CLASSIFICATION	5.308144915037685E-6	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9999972246648453	WITHOUT_CLASSIFICATION	2.7753351547975986E-6	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999997612731457	WITHOUT_CLASSIFICATION	2.387268543075785E-7	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999996950421118	WITHOUT_CLASSIFICATION	3.049578881230711E-7	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999971818140014	WITHOUT_CLASSIFICATION	2.818185998515971E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999982964459739	WITHOUT_CLASSIFICATION	1.703554026032048E-6	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999996132694661	WITHOUT_CLASSIFICATION	3.867305339201432E-7	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999980513159352	WITHOUT_CLASSIFICATION	1.9486840647766342E-6	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999963086606005	WITHOUT_CLASSIFICATION	3.6913393994259974E-6	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.999999998483042	WITHOUT_CLASSIFICATION	1.5169579829377735E-9	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999983057536805	WITHOUT_CLASSIFICATION	1.6942463194095625E-6	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999999746210525	WITHOUT_CLASSIFICATION	2.5378947513982535E-8	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999960712576612	WITHOUT_CLASSIFICATION	3.92874233878446E-6	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999997612731457	WITHOUT_CLASSIFICATION	2.387268543075785E-7	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999971818140014	WITHOUT_CLASSIFICATION	2.818185998515971E-6	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999996950421118	WITHOUT_CLASSIFICATION	3.049578881230711E-7	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999993886439164	WITHOUT_CLASSIFICATION	6.113560836666417E-7	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999990319006092	WITHOUT_CLASSIFICATION	9.680993907750758E-7	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999994458033711	WITHOUT_CLASSIFICATION	5.541966289088544E-7	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9999988210962418	WITHOUT_CLASSIFICATION	1.1789037582096454E-6	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9999787549559226	WITHOUT_CLASSIFICATION	2.1245044077372415E-5	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999989453843415	WITHOUT_CLASSIFICATION	1.0546156585516864E-6	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999980435328241	WITHOUT_CLASSIFICATION	1.9564671759024914E-6	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999995591771441	WITHOUT_CLASSIFICATION	4.4082285589918533E-7	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999950395808979	WITHOUT_CLASSIFICATION	4.960419102079371E-6	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999999710169175	WITHOUT_CLASSIFICATION	2.8983082468717634E-8	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999998885800886	WITHOUT_CLASSIFICATION	1.1141991144809523E-7	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999975911846799	WITHOUT_CLASSIFICATION	2.408815320067246E-6	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999982067997857	WITHOUT_CLASSIFICATION	1.793200214327316E-6	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9999975017890285	WITHOUT_CLASSIFICATION	2.4982109715336445E-6	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999998106125819	WITHOUT_CLASSIFICATION	1.8938741798792857E-7	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9999994747415408	WITHOUT_CLASSIFICATION	5.252584591770071E-7	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.9999966766711273	WITHOUT_CLASSIFICATION	3.323328872671481E-6	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999992534617399	WITHOUT_CLASSIFICATION	7.46538260077516E-7	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999992534617399	WITHOUT_CLASSIFICATION	7.46538260077516E-7	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999997397275265	WITHOUT_CLASSIFICATION	2.602724735059957E-7	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.99999999245192	WITHOUT_CLASSIFICATION	7.54808002297283E-9	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999998600868668	WITHOUT_CLASSIFICATION	1.3991313322605713E-7	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999688615589444	WITHOUT_CLASSIFICATION	3.113844105557512E-5	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999967216290808	WITHOUT_CLASSIFICATION	3.2783709190325145E-6	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999999826006771	WITHOUT_CLASSIFICATION	1.7399322810836883E-8	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999998726598402	WITHOUT_CLASSIFICATION	1.2734015978691602E-7	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999997777161884	WITHOUT_CLASSIFICATION	2.2228381154681483E-7	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999895446403188	WITHOUT_CLASSIFICATION	1.0455359681284018E-5	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999999560740774	WITHOUT_CLASSIFICATION	4.3925922694364815E-8	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999999947485878	WITHOUT_CLASSIFICATION	5.2514122334938425E-9	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9999942342489891	WITHOUT_CLASSIFICATION	5.765751010821421E-6	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999996030771323	WITHOUT_CLASSIFICATION	3.9692286760938494E-7	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999987374088	WITHOUT_CLASSIFICATION	1.2625911999979585E-6	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9831356137551838	WITHOUT_CLASSIFICATION	0.016864386244816156	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999998729981077	WITHOUT_CLASSIFICATION	1.2700189244407888E-7	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999994639231444	WITHOUT_CLASSIFICATION	5.360768554710265E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999944846623202	WITHOUT_CLASSIFICATION	5.515337679803817E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999944846623202	WITHOUT_CLASSIFICATION	5.515337679803817E-6	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9999996104134568	WITHOUT_CLASSIFICATION	3.89586543232187E-7	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9999999433976671	WITHOUT_CLASSIFICATION	5.660233298186095E-8	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999998495143352	WITHOUT_CLASSIFICATION	1.5048566482796696E-7	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9999936752034794	WITHOUT_CLASSIFICATION	6.324796520567823E-6	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.999999768034008	WITHOUT_CLASSIFICATION	2.3196599210694177E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999944846623202	WITHOUT_CLASSIFICATION	5.515337679803817E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999944846623202	WITHOUT_CLASSIFICATION	5.515337679803817E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999986949238372	WITHOUT_CLASSIFICATION	1.3050761629105148E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999986949238372	WITHOUT_CLASSIFICATION	1.3050761629105148E-6	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999996723207221	WITHOUT_CLASSIFICATION	3.27679277903987E-7	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999902968398333	WITHOUT_CLASSIFICATION	9.703160166679643E-6	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999999276902873	WITHOUT_CLASSIFICATION	7.230971270343515E-8	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999999871755207	WITHOUT_CLASSIFICATION	1.2824479174330359E-8	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999995618893475	WITHOUT_CLASSIFICATION	4.381106525572274E-7	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999995618893475	WITHOUT_CLASSIFICATION	4.381106525572274E-7	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999999534584949	WITHOUT_CLASSIFICATION	4.654150517692782E-8	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999859767374544	WITHOUT_CLASSIFICATION	1.4023262545608719E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999998736324193	WITHOUT_CLASSIFICATION	1.2636758073251983E-7	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999430066161552	WITHOUT_CLASSIFICATION	5.699338384486904E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999986340982832	WITHOUT_CLASSIFICATION	1.3659017167809358E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999738011105	WITHOUT_CLASSIFICATION	2.6198889522076807E-8	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9966264950875525	WITHOUT_CLASSIFICATION	0.0033735049124474516	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999997780448243	WITHOUT_CLASSIFICATION	2.2195517578295374E-7	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999999973768094	WITHOUT_CLASSIFICATION	2.6231905695852535E-9	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999999986043028	WITHOUT_CLASSIFICATION	1.3956972352816679E-9	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999752105621338	WITHOUT_CLASSIFICATION	2.478943786618201E-5	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999999727749781	WITHOUT_CLASSIFICATION	2.7225021927315144E-8	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999999156435729	WITHOUT_CLASSIFICATION	8.435642705535713E-8	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999999903937754	WITHOUT_CLASSIFICATION	9.60622461721387E-9	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999998729981077	WITHOUT_CLASSIFICATION	1.2700189244407888E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999944846623202	WITHOUT_CLASSIFICATION	5.515337679803817E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999986949238372	WITHOUT_CLASSIFICATION	1.3050761629105148E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999738011105	WITHOUT_CLASSIFICATION	2.6198889522076807E-8	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999995810611	WITHOUT_CLASSIFICATION	4.189388433193789E-10	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999995810611	WITHOUT_CLASSIFICATION	4.189388433193789E-10	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999924641933013	WITHOUT_CLASSIFICATION	7.535806698645769E-6	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.999999998131364	WITHOUT_CLASSIFICATION	1.86863594581257E-9	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999999798513641	WITHOUT_CLASSIFICATION	2.0148635856830323E-8	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999988146879	WITHOUT_CLASSIFICATION	1.185312021030362E-9	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999996185649691	WITHOUT_CLASSIFICATION	3.8143503088277925E-7	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999999965169286	WITHOUT_CLASSIFICATION	3.4830715035421364E-9	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999987085268598	WITHOUT_CLASSIFICATION	1.2914731401791862E-6	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.999998448746282	WITHOUT_CLASSIFICATION	1.5512537179474294E-6	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999994836234	WITHOUT_CLASSIFICATION	5.163765399406772E-10	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999943620560678	WITHOUT_CLASSIFICATION	5.637943932120292E-6	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.99997863773953	WITHOUT_CLASSIFICATION	2.1362260469991204E-5	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999494792424	WITHOUT_CLASSIFICATION	5.052075762543669E-8	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999999871743617	WITHOUT_CLASSIFICATION	1.2825638422538697E-8	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999994639231444	WITHOUT_CLASSIFICATION	5.360768554710265E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999986949238372	WITHOUT_CLASSIFICATION	1.3050761629105148E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999859767374544	WITHOUT_CLASSIFICATION	1.4023262545608719E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999998736324193	WITHOUT_CLASSIFICATION	1.2636758073251983E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999998736324193	WITHOUT_CLASSIFICATION	1.2636758073251983E-7	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999986340982832	WITHOUT_CLASSIFICATION	1.3659017167809358E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999738011105	WITHOUT_CLASSIFICATION	2.6198889522076807E-8	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999738011105	WITHOUT_CLASSIFICATION	2.6198889522076807E-8	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999995810611	WITHOUT_CLASSIFICATION	4.189388433193789E-10	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999339074483183	WITHOUT_CLASSIFICATION	6.609255168164216E-5	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999996591187263	WITHOUT_CLASSIFICATION	3.4088127369191996E-7	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999999986601	WITHOUT_CLASSIFICATION	1.3399154559281472E-12	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999662480683497	WITHOUT_CLASSIFICATION	3.375193165040846E-5	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999953505261715	WITHOUT_CLASSIFICATION	4.6494738284919555E-6	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999727094195002	WITHOUT_CLASSIFICATION	2.729058049980126E-5	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999994641585556	WITHOUT_CLASSIFICATION	5.358414444174745E-7	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999999865168018	WITHOUT_CLASSIFICATION	1.3483198275700513E-8	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999997808269523	WITHOUT_CLASSIFICATION	2.191730477445045E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999859767374544	WITHOUT_CLASSIFICATION	1.4023262545608719E-5	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999998736324193	WITHOUT_CLASSIFICATION	1.2636758073251983E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999998736324193	WITHOUT_CLASSIFICATION	1.2636758073251983E-7	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999986340982832	WITHOUT_CLASSIFICATION	1.3659017167809358E-6	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.999998448746282	WITHOUT_CLASSIFICATION	1.5512537179474294E-6	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999943620560678	WITHOUT_CLASSIFICATION	5.637943932120292E-6	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9990076784079707	WITHOUT_CLASSIFICATION	9.923215920293203E-4	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999975804504899	WITHOUT_CLASSIFICATION	2.419549509962922E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999831637803237	WITHOUT_CLASSIFICATION	1.683621967637406E-5	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999831637803237	WITHOUT_CLASSIFICATION	1.683621967637406E-5	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999994470379583	WITHOUT_CLASSIFICATION	5.529620417901249E-7	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999999772367983	WITHOUT_CLASSIFICATION	2.276320166764581E-8	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.999999998476619	WITHOUT_CLASSIFICATION	1.5233809944735334E-9	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999946945219507	WITHOUT_CLASSIFICATION	5.3054780492778105E-6	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999993342940531	WITHOUT_CLASSIFICATION	6.657059468968014E-7	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999993342940531	WITHOUT_CLASSIFICATION	6.657059468968014E-7	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999983772958124	WITHOUT_CLASSIFICATION	1.622704187510011E-6	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999983772958124	WITHOUT_CLASSIFICATION	1.622704187510011E-6	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999995521637887	WITHOUT_CLASSIFICATION	4.478362113215073E-7	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999995521637887	WITHOUT_CLASSIFICATION	4.478362113215073E-7	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999999435661673	WITHOUT_CLASSIFICATION	5.643383275948038E-8	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999993892406219	WITHOUT_CLASSIFICATION	6.107593780786106E-7	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999990002663579	WITHOUT_CLASSIFICATION	9.997336421455745E-7	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.999999878733927	WITHOUT_CLASSIFICATION	1.2126607290508892E-7	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999987529072037	WITHOUT_CLASSIFICATION	1.247092796161376E-6	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.999999820744037	WITHOUT_CLASSIFICATION	1.7925596306508622E-7	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999990076462846	WITHOUT_CLASSIFICATION	9.92353715390242E-7	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999960164883457	WITHOUT_CLASSIFICATION	3.9835116543811955E-6	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999998848838861	WITHOUT_CLASSIFICATION	1.1511611387676143E-7	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999999991421467	WITHOUT_CLASSIFICATION	8.578533260422561E-10	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.999056922404923	WITHOUT_CLASSIFICATION	9.430775950769623E-4	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999993407875772	WITHOUT_CLASSIFICATION	6.592124227241313E-7	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999995087397263	WITHOUT_CLASSIFICATION	4.912602736772537E-7	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.999999471913666	WITHOUT_CLASSIFICATION	5.280863340019727E-7	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.999999471913666	WITHOUT_CLASSIFICATION	5.280863340019727E-7	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999995149971418	WITHOUT_CLASSIFICATION	4.850028582053987E-7	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999889171811	WITHOUT_CLASSIFICATION	1.108281875817853E-8	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999587618840509	WITHOUT_CLASSIFICATION	4.1238115949170594E-5	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999980112256	WITHOUT_CLASSIFICATION	1.988774372323807E-9	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999999978530236	WITHOUT_CLASSIFICATION	2.146976380493198E-9	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999247384734119	WITHOUT_CLASSIFICATION	7.526152658815121E-5	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999998380604719	WITHOUT_CLASSIFICATION	1.6193952814304853E-7	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999965015455085	WITHOUT_CLASSIFICATION	3.4984544915393938E-6	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999992470029124	WITHOUT_CLASSIFICATION	7.529970875022896E-7	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999999882374317	WITHOUT_CLASSIFICATION	1.1762568302302228E-8	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999991982757794	WITHOUT_CLASSIFICATION	8.017242206603426E-7	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999894833968347	WITHOUT_CLASSIFICATION	1.0516603165335605E-5	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999991931260205	WITHOUT_CLASSIFICATION	8.06873979542974E-7	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9920934535204186	WITHOUT_CLASSIFICATION	0.007906546479581488	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999999134802635	WITHOUT_CLASSIFICATION	8.65197364038716E-8	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999998038841471	WITHOUT_CLASSIFICATION	1.9611585291370852E-7	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9999877741220917	WITHOUT_CLASSIFICATION	1.2225877908230583E-5	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999982218383131	WITHOUT_CLASSIFICATION	1.7781616867963684E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999964695537	WITHOUT_CLASSIFICATION	3.5304463644111787E-9	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999964695537	WITHOUT_CLASSIFICATION	3.5304463644111787E-9	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999879900973774	WITHOUT_CLASSIFICATION	1.2009902622673239E-5	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999999989306131	WITHOUT_CLASSIFICATION	1.069386908797349E-9	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999956722109138	WITHOUT_CLASSIFICATION	4.327789086216771E-6	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999956722109138	WITHOUT_CLASSIFICATION	4.327789086216771E-6	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999897250436605	WITHOUT_CLASSIFICATION	1.027495633948943E-5	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.999999997048498	WITHOUT_CLASSIFICATION	2.9515021478112014E-9	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999997428458771	WITHOUT_CLASSIFICATION	2.571541228599762E-7	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999999912632693	WITHOUT_CLASSIFICATION	8.736730800463333E-9	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999999975109014	WITHOUT_CLASSIFICATION	2.4890987029682975E-9	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.999999990756065	WITHOUT_CLASSIFICATION	9.243934924133228E-9	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.999999990756065	WITHOUT_CLASSIFICATION	9.243934924133228E-9	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999998856099898	WITHOUT_CLASSIFICATION	1.1439001026633222E-7	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999999980286519	WITHOUT_CLASSIFICATION	1.9713480545882195E-9	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999983868838692	WITHOUT_CLASSIFICATION	1.6131161308779333E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999999983964745	WITHOUT_CLASSIFICATION	1.6035255754095576E-9	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999999989306131	WITHOUT_CLASSIFICATION	1.069386908797349E-9	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999999712236814	WITHOUT_CLASSIFICATION	2.877631861633146E-8	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999999976889439	WITHOUT_CLASSIFICATION	2.3110560996989647E-9	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999999976889439	WITHOUT_CLASSIFICATION	2.3110560996989647E-9	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999458006183358	WITHOUT_CLASSIFICATION	5.41993816642261E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999975589551	WITHOUT_CLASSIFICATION	2.441044883021735E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999975589551	WITHOUT_CLASSIFICATION	2.441044883021735E-9	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999606872782425	WITHOUT_CLASSIFICATION	3.931272175738338E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999606872782425	WITHOUT_CLASSIFICATION	3.931272175738338E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999606872782425	WITHOUT_CLASSIFICATION	3.931272175738338E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999975589551	WITHOUT_CLASSIFICATION	2.441044883021735E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999975589551	WITHOUT_CLASSIFICATION	2.441044883021735E-9	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999458006183358	WITHOUT_CLASSIFICATION	5.41993816642261E-5	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999999714070334	WITHOUT_CLASSIFICATION	2.8592966620194386E-8	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9999998990807113	WITHOUT_CLASSIFICATION	1.0091928864927821E-7	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999938905476049	WITHOUT_CLASSIFICATION	6.109452395028854E-6	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.999996580188845	WITHOUT_CLASSIFICATION	3.4198111550349666E-6	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.999999997665677	WITHOUT_CLASSIFICATION	2.3343228834422785E-9	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9998860887995783	WITHOUT_CLASSIFICATION	1.1391120042167648E-4	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.999999958472072	WITHOUT_CLASSIFICATION	4.152792792223648E-8	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999999989364075	WITHOUT_CLASSIFICATION	1.0635926162173162E-9	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999991982757794	WITHOUT_CLASSIFICATION	8.017242206603426E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999975589551	WITHOUT_CLASSIFICATION	2.441044883021735E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999975589551	WITHOUT_CLASSIFICATION	2.441044883021735E-9	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999995892765	WITHOUT_CLASSIFICATION	4.107234265875882E-10	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999537860280165	WITHOUT_CLASSIFICATION	4.621397198351981E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999999409892638	WITHOUT_CLASSIFICATION	5.9010736256124784E-8	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999992643925	WITHOUT_CLASSIFICATION	7.35607492247857E-10	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999965118174422	WITHOUT_CLASSIFICATION	3.488182557750555E-6	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999991970117141	WITHOUT_CLASSIFICATION	8.029882859097987E-7	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999983707589	WITHOUT_CLASSIFICATION	1.629241148986045E-9	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999998309304099	WITHOUT_CLASSIFICATION	1.6906959008906532E-7	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999993549167967	WITHOUT_CLASSIFICATION	6.450832033809109E-7	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999787123351	WITHOUT_CLASSIFICATION	2.1287664867419797E-8	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999944049451346	WITHOUT_CLASSIFICATION	5.59505486543345E-6	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999993363585632	WITHOUT_CLASSIFICATION	6.636414367869863E-7	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999908924949964	WITHOUT_CLASSIFICATION	9.107505003674264E-6	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999992325843939	WITHOUT_CLASSIFICATION	7.674156061108598E-7	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999998648404014	WITHOUT_CLASSIFICATION	1.351595985684974E-7	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999999138541565	WITHOUT_CLASSIFICATION	8.614584355448158E-8	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999999138541565	WITHOUT_CLASSIFICATION	8.614584355448158E-8	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999999138541565	WITHOUT_CLASSIFICATION	8.614584355448158E-8	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999996305036197	WITHOUT_CLASSIFICATION	3.6949638022523275E-7	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999998354154178	WITHOUT_CLASSIFICATION	1.6458458217679789E-7	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999998998638654	WITHOUT_CLASSIFICATION	1.0013613451879472E-7	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999995313062234	WITHOUT_CLASSIFICATION	4.686937765012029E-7	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999988328075208	WITHOUT_CLASSIFICATION	1.1671924792487212E-6	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999982421571033	WITHOUT_CLASSIFICATION	1.7578428966876852E-6	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999999997754077	WITHOUT_CLASSIFICATION	2.2459241613443194E-10	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999997504402034	WITHOUT_CLASSIFICATION	2.495597965469888E-7	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999999965014275	WITHOUT_CLASSIFICATION	3.498572543775481E-9	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999999527907992	WITHOUT_CLASSIFICATION	4.720920081410332E-8	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999579359151642	WITHOUT_CLASSIFICATION	4.2064084835724955E-5	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999625611623884	WITHOUT_CLASSIFICATION	3.7438837611646793E-5	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999998856099898	WITHOUT_CLASSIFICATION	1.1439001026633222E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999975589551	WITHOUT_CLASSIFICATION	2.441044883021735E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999975589551	WITHOUT_CLASSIFICATION	2.441044883021735E-9	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999458006183358	WITHOUT_CLASSIFICATION	5.41993816642261E-5	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9998860887995783	WITHOUT_CLASSIFICATION	1.1391120042167648E-4	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999537860280165	WITHOUT_CLASSIFICATION	4.621397198351981E-5	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999992643925	WITHOUT_CLASSIFICATION	7.35607492247857E-10	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999991970117141	WITHOUT_CLASSIFICATION	8.029882859097987E-7	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999999409892638	WITHOUT_CLASSIFICATION	5.9010736256124784E-8	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999983707589	WITHOUT_CLASSIFICATION	1.629241148986045E-9	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999787123351	WITHOUT_CLASSIFICATION	2.1287664867419797E-8	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999993549167967	WITHOUT_CLASSIFICATION	6.450832033809109E-7	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999993363585632	WITHOUT_CLASSIFICATION	6.636414367869863E-7	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999944737781805	WITHOUT_CLASSIFICATION	5.526221819410039E-6	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999984784722583	WITHOUT_CLASSIFICATION	1.5215277417301783E-6	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999958495102775	WITHOUT_CLASSIFICATION	4.150489722384288E-6	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999999795190704	WITHOUT_CLASSIFICATION	2.048092960199452E-8	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999922896951554	WITHOUT_CLASSIFICATION	7.710304844572507E-6	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999998679006795	WITHOUT_CLASSIFICATION	1.3209932045725652E-7	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.999999874180386	WITHOUT_CLASSIFICATION	1.2581961392537023E-7	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999999229188912	WITHOUT_CLASSIFICATION	7.70811088895089E-8	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999979187566936	WITHOUT_CLASSIFICATION	2.0812433063802024E-6	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.99999977802707	WITHOUT_CLASSIFICATION	2.2197293007073094E-7	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999984180193393	WITHOUT_CLASSIFICATION	1.581980660694647E-6	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999996803235746	WITHOUT_CLASSIFICATION	3.196764253968481E-7	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999991218255	WITHOUT_CLASSIFICATION	8.781745093372045E-9	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999934036722	WITHOUT_CLASSIFICATION	6.596327771712377E-9	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999993307164	WITHOUT_CLASSIFICATION	6.692836291949279E-10	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999948266002	WITHOUT_CLASSIFICATION	5.173399813876918E-9	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999908331854	WITHOUT_CLASSIFICATION	9.166814532364557E-9	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999960765798784	WITHOUT_CLASSIFICATION	3.9234201215552835E-6	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999986636252179	WITHOUT_CLASSIFICATION	1.3363747821409836E-6	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999998661068484	WITHOUT_CLASSIFICATION	1.3389315156929247E-7	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999984342169312	WITHOUT_CLASSIFICATION	1.5657830688101939E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999994055843	WITHOUT_CLASSIFICATION	5.944156896009468E-10	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999994055843	WITHOUT_CLASSIFICATION	5.944156896009468E-10	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999999782361284	WITHOUT_CLASSIFICATION	2.1763871563947122E-8	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999440038058163	WITHOUT_CLASSIFICATION	5.5996194183723934E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999593982089459	WITHOUT_CLASSIFICATION	4.0601791054101916E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999593982089459	WITHOUT_CLASSIFICATION	4.0601791054101916E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999593982089459	WITHOUT_CLASSIFICATION	4.0601791054101916E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999920920754126	WITHOUT_CLASSIFICATION	7.907924587364228E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999920920754126	WITHOUT_CLASSIFICATION	7.907924587364228E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999920920754126	WITHOUT_CLASSIFICATION	7.907924587364228E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999920920754126	WITHOUT_CLASSIFICATION	7.907924587364228E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999903466042568	WITHOUT_CLASSIFICATION	9.65339574316334E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999903466042568	WITHOUT_CLASSIFICATION	9.65339574316334E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999903466042568	WITHOUT_CLASSIFICATION	9.65339574316334E-6	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999769767520186	WITHOUT_CLASSIFICATION	2.302324798135734E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999769767520186	WITHOUT_CLASSIFICATION	2.302324798135734E-5	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999896104956977	WITHOUT_CLASSIFICATION	1.0389504302435415E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999896606858407	WITHOUT_CLASSIFICATION	1.0339314159321311E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999440038058163	WITHOUT_CLASSIFICATION	5.5996194183723934E-5	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999991430522286	WITHOUT_CLASSIFICATION	8.569477713991989E-7	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999593982089459	WITHOUT_CLASSIFICATION	4.0601791054101916E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999593982089459	WITHOUT_CLASSIFICATION	4.0601791054101916E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999920920754126	WITHOUT_CLASSIFICATION	7.907924587364228E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999920920754126	WITHOUT_CLASSIFICATION	7.907924587364228E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999920920754126	WITHOUT_CLASSIFICATION	7.907924587364228E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999903466042568	WITHOUT_CLASSIFICATION	9.65339574316334E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999903466042568	WITHOUT_CLASSIFICATION	9.65339574316334E-6	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999769767520186	WITHOUT_CLASSIFICATION	2.302324798135734E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999896606858407	WITHOUT_CLASSIFICATION	1.0339314159321311E-5	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999903607626031	WITHOUT_CLASSIFICATION	9.639237397032549E-6	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999903607626031	WITHOUT_CLASSIFICATION	9.639237397032549E-6	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999959766713	WITHOUT_CLASSIFICATION	4.023328688880917E-9	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999959766713	WITHOUT_CLASSIFICATION	4.023328688880917E-9	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999998008991331	WITHOUT_CLASSIFICATION	1.9910086694780374E-7	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999998008991331	WITHOUT_CLASSIFICATION	1.9910086694780374E-7	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999905276947767	WITHOUT_CLASSIFICATION	9.472305223370048E-6	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999999203823156	WITHOUT_CLASSIFICATION	7.961768446148524E-8	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999999203823156	WITHOUT_CLASSIFICATION	7.961768446148524E-8	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999825397976606	WITHOUT_CLASSIFICATION	1.746020233944391E-5	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999825397976606	WITHOUT_CLASSIFICATION	1.746020233944391E-5	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999999998943148	WITHOUT_CLASSIFICATION	1.0568525821117387E-10	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999983547908186	WITHOUT_CLASSIFICATION	1.6452091814409627E-6	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999983547908186	WITHOUT_CLASSIFICATION	1.6452091814409627E-6	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999984625129068	WITHOUT_CLASSIFICATION	1.537487093237967E-6	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999967281712406	WITHOUT_CLASSIFICATION	3.2718287593948846E-6	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999999967470808	WITHOUT_CLASSIFICATION	3.2529191224175158E-9	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999920920754126	WITHOUT_CLASSIFICATION	7.907924587364228E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999920920754126	WITHOUT_CLASSIFICATION	7.907924587364228E-6	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999984625129068	WITHOUT_CLASSIFICATION	1.537487093237967E-6	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999999997378873	WITHOUT_CLASSIFICATION	2.621127129748335E-10	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999976978503656	WITHOUT_CLASSIFICATION	2.3021496344456933E-6	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999976978503656	WITHOUT_CLASSIFICATION	2.3021496344456933E-6	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999976978503656	WITHOUT_CLASSIFICATION	2.3021496344456933E-6	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999990886412303	WITHOUT_CLASSIFICATION	9.113587696230863E-7	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.99999994514732	WITHOUT_CLASSIFICATION	5.48526799162895E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998168475521	WITHOUT_CLASSIFICATION	1.8315244795813188E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998168475521	WITHOUT_CLASSIFICATION	1.8315244795813188E-7	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999997731732462	WITHOUT_CLASSIFICATION	2.2682675373457275E-7	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999996525167157	WITHOUT_CLASSIFICATION	3.4748328423228363E-7	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999999961276372	WITHOUT_CLASSIFICATION	3.872362697575031E-9	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999999765149861	WITHOUT_CLASSIFICATION	2.3485013901179475E-8	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999999019702454	WITHOUT_CLASSIFICATION	9.802975466356784E-8	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999999878840713	WITHOUT_CLASSIFICATION	1.2115928607566125E-8	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999999878840713	WITHOUT_CLASSIFICATION	1.2115928607566125E-8	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999486961103867	WITHOUT_CLASSIFICATION	5.1303889613191625E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999854206808053	WITHOUT_CLASSIFICATION	1.4579319194711178E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999854206808053	WITHOUT_CLASSIFICATION	1.4579319194711178E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999920920754126	WITHOUT_CLASSIFICATION	7.907924587364228E-6	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999976978503656	WITHOUT_CLASSIFICATION	2.3021496344456933E-6	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.99999994514732	WITHOUT_CLASSIFICATION	5.48526799162895E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998168475521	WITHOUT_CLASSIFICATION	1.8315244795813188E-7	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999997731732462	WITHOUT_CLASSIFICATION	2.2682675373457275E-7	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999996525167157	WITHOUT_CLASSIFICATION	3.4748328423228363E-7	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999999961276372	WITHOUT_CLASSIFICATION	3.872362697575031E-9	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999999765149861	WITHOUT_CLASSIFICATION	2.3485013901179475E-8	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999854206808053	WITHOUT_CLASSIFICATION	1.4579319194711178E-5	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999999893149145	WITHOUT_CLASSIFICATION	1.0685085511009635E-8	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999978997510752	WITHOUT_CLASSIFICATION	2.100248924733636E-6	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999998918536818	WITHOUT_CLASSIFICATION	1.0814631823392882E-7	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999993748282503	WITHOUT_CLASSIFICATION	6.25171749591012E-7	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.999999990138288	WITHOUT_CLASSIFICATION	9.861712067539168E-9	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999999620320953	WITHOUT_CLASSIFICATION	3.796790465466034E-8	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999996541158976	WITHOUT_CLASSIFICATION	3.458841022930684E-7	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999996541158976	WITHOUT_CLASSIFICATION	3.458841022930684E-7	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999996819332523	WITHOUT_CLASSIFICATION	3.1806674774462766E-7	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999999312739681	WITHOUT_CLASSIFICATION	6.872603184134547E-8	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.999999890061447	WITHOUT_CLASSIFICATION	1.0993855309709998E-7	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999999837414459	WITHOUT_CLASSIFICATION	1.625855409051497E-8	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999999000944538	WITHOUT_CLASSIFICATION	9.990554623615823E-8	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999999000944538	WITHOUT_CLASSIFICATION	9.990554623615823E-8	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999999144737761	WITHOUT_CLASSIFICATION	8.552622398510569E-8	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999999664811603	WITHOUT_CLASSIFICATION	3.351883975550305E-8	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999999312228302	WITHOUT_CLASSIFICATION	6.877716982291225E-8	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999999312228302	WITHOUT_CLASSIFICATION	6.877716982291225E-8	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999999704041868	WITHOUT_CLASSIFICATION	2.959581329637243E-8	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999447220798535	WITHOUT_CLASSIFICATION	5.5277920146447534E-5	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999999019702454	WITHOUT_CLASSIFICATION	9.802975466356784E-8	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999996977686768	WITHOUT_CLASSIFICATION	3.0223132310361427E-7	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999964944029	WITHOUT_CLASSIFICATION	3.5055971722172804E-9	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999508335442	WITHOUT_CLASSIFICATION	4.916645579893852E-8	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.999999963806625	WITHOUT_CLASSIFICATION	3.6193375013255486E-8	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.9999999974405975	WITHOUT_CLASSIFICATION	2.5594025544644324E-9	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999949492250427	WITHOUT_CLASSIFICATION	5.0507749572748026E-6	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999999964770808	WITHOUT_CLASSIFICATION	3.5229192020833816E-9	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999994037275765	WITHOUT_CLASSIFICATION	5.962724235085622E-7	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999998000373898	WITHOUT_CLASSIFICATION	1.9996261031961776E-7	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999998000373898	WITHOUT_CLASSIFICATION	1.9996261031961776E-7	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999994026638834	WITHOUT_CLASSIFICATION	5.97336116481198E-7	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999994026638834	WITHOUT_CLASSIFICATION	5.97336116481198E-7	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999999257480763	WITHOUT_CLASSIFICATION	7.425192376102929E-8	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999993129002738	WITHOUT_CLASSIFICATION	6.87099726229643E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999993129002738	WITHOUT_CLASSIFICATION	6.87099726229643E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999993129002738	WITHOUT_CLASSIFICATION	6.87099726229643E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999999914381466	WITHOUT_CLASSIFICATION	8.56185340637183E-8	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.999989874177299	WITHOUT_CLASSIFICATION	1.0125822700935953E-5	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.999989874177299	WITHOUT_CLASSIFICATION	1.0125822700935953E-5	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999998610385836	WITHOUT_CLASSIFICATION	1.389614164274112E-7	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999966345404576	WITHOUT_CLASSIFICATION	3.3654595422716437E-6	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999952270564245	WITHOUT_CLASSIFICATION	4.772943575464509E-6	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9999997668284496	WITHOUT_CLASSIFICATION	2.3317155033769187E-7	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999961537898975	WITHOUT_CLASSIFICATION	3.84621010250994E-6	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9999256832529075	WITHOUT_CLASSIFICATION	7.431674709251877E-5	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999999923084707	WITHOUT_CLASSIFICATION	7.691529265551692E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999991218255	WITHOUT_CLASSIFICATION	8.781745093372045E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999991218255	WITHOUT_CLASSIFICATION	8.781745093372045E-9	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999999914381466	WITHOUT_CLASSIFICATION	8.56185340637183E-8	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999998610385836	WITHOUT_CLASSIFICATION	1.389614164274112E-7	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999998229456897	WITHOUT_CLASSIFICATION	1.770543102500174E-7	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999966345404576	WITHOUT_CLASSIFICATION	3.3654595422716437E-6	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999952270564245	WITHOUT_CLASSIFICATION	4.772943575464509E-6	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999790877333405	WITHOUT_CLASSIFICATION	2.0912266659385663E-5	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9999994899251359	WITHOUT_CLASSIFICATION	5.100748640879905E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999998982036998	WITHOUT_CLASSIFICATION	1.0179630020546384E-7	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.999996474182101	WITHOUT_CLASSIFICATION	3.5258178990659267E-6	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999237138190404	WITHOUT_CLASSIFICATION	7.628618095950959E-5	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999999956453682	WITHOUT_CLASSIFICATION	4.354631741392758E-9	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999993679573765	WITHOUT_CLASSIFICATION	6.320426234900645E-7	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999790877333405	WITHOUT_CLASSIFICATION	2.0912266659385663E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999999955738851	WITHOUT_CLASSIFICATION	4.426114926933968E-9	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999999955738851	WITHOUT_CLASSIFICATION	4.426114926933968E-9	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999999925622287	WITHOUT_CLASSIFICATION	7.43777127550631E-9	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999986263096918	WITHOUT_CLASSIFICATION	1.373690308131079E-6	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.99999994619443	WITHOUT_CLASSIFICATION	5.3805570077132535E-8	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999997142532016	WITHOUT_CLASSIFICATION	2.857467984647119E-7	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999999289219793	WITHOUT_CLASSIFICATION	7.107802069189106E-8	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999969089553058	WITHOUT_CLASSIFICATION	3.091044694333642E-6	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999828096087497	WITHOUT_CLASSIFICATION	1.7190391250234464E-5	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999995476970904	WITHOUT_CLASSIFICATION	4.52302909588582E-7	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.999999998440595	WITHOUT_CLASSIFICATION	1.559405063619517E-9	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9999996778719981	WITHOUT_CLASSIFICATION	3.2212800186495075E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999992156294802	WITHOUT_CLASSIFICATION	7.8437051965503E-7	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999997142532016	WITHOUT_CLASSIFICATION	2.857467984647119E-7	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999999289219793	WITHOUT_CLASSIFICATION	7.107802069189106E-8	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999990325470789	WITHOUT_CLASSIFICATION	9.674529211391443E-7	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9999998712062735	WITHOUT_CLASSIFICATION	1.2879372641815128E-7	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999999993367111	WITHOUT_CLASSIFICATION	6.632888241499161E-10	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999993155301315	WITHOUT_CLASSIFICATION	6.844698683609387E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999999960517888	WITHOUT_CLASSIFICATION	3.948211188507974E-9	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999999600677699	WITHOUT_CLASSIFICATION	3.993223010314243E-8	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9999972934779792	WITHOUT_CLASSIFICATION	2.706522020876778E-6	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9999983246362177	WITHOUT_CLASSIFICATION	1.675363782256211E-6	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999997165122195	WITHOUT_CLASSIFICATION	2.8348778046230677E-7	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999999855269658	WITHOUT_CLASSIFICATION	1.4473034290422315E-8	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999999005165058	WITHOUT_CLASSIFICATION	9.948349426044131E-8	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9999961958481822	WITHOUT_CLASSIFICATION	3.804151817680996E-6	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.999999732644287	WITHOUT_CLASSIFICATION	2.6735571303975776E-7	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999999951143723	WITHOUT_CLASSIFICATION	4.885627701475101E-9	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999999998897209	WITHOUT_CLASSIFICATION	1.1027914810451543E-10	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.999999998377734	WITHOUT_CLASSIFICATION	1.6222660344234274E-9	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999904510895591	WITHOUT_CLASSIFICATION	9.548910440865955E-6	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999997985337683	WITHOUT_CLASSIFICATION	2.0146623171620826E-7	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999994614803	WITHOUT_CLASSIFICATION	5.385195889169239E-10	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999994571079152	WITHOUT_CLASSIFICATION	5.428920847822074E-7	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999904510895591	WITHOUT_CLASSIFICATION	9.548910440865955E-6	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999997985337683	WITHOUT_CLASSIFICATION	2.0146623171620826E-7	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999994614803	WITHOUT_CLASSIFICATION	5.385195889169239E-10	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9999999808413508	WITHOUT_CLASSIFICATION	1.915864921629563E-8	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999957338849774	WITHOUT_CLASSIFICATION	4.26611502254134E-6	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999987648836013	WITHOUT_CLASSIFICATION	1.2351163987197364E-6	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.999999890371465	WITHOUT_CLASSIFICATION	1.096285349756263E-7	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999999958430739	WITHOUT_CLASSIFICATION	4.156926046912699E-9	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999998588263935	WITHOUT_CLASSIFICATION	1.4117360660213986E-7	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999982567905191	WITHOUT_CLASSIFICATION	1.7432094808289414E-6	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999864224719308	WITHOUT_CLASSIFICATION	1.357752806914513E-5	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9999995603033477	WITHOUT_CLASSIFICATION	4.3969665235476935E-7	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9999995322871772	WITHOUT_CLASSIFICATION	4.6771282276869083E-7	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9898708056298867	WITHOUT_CLASSIFICATION	0.01012919437011331	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999999535130385	WITHOUT_CLASSIFICATION	4.648696158762583E-8	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999875712994168	WITHOUT_CLASSIFICATION	1.2428700583220135E-5	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999986237303357	WITHOUT_CLASSIFICATION	1.376269664402429E-6	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999998071840654	WITHOUT_CLASSIFICATION	1.9281593448775704E-7	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999995879360184	WITHOUT_CLASSIFICATION	4.120639816029613E-7	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999990475194634	WITHOUT_CLASSIFICATION	9.524805364900046E-7	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999998424078758	WITHOUT_CLASSIFICATION	1.5759212422302324E-7	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999324835326974	WITHOUT_CLASSIFICATION	6.751646730262507E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999969494672516	WITHOUT_CLASSIFICATION	3.0505327483756647E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999998602004498	WITHOUT_CLASSIFICATION	1.397995500260172E-7	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999969444162096	WITHOUT_CLASSIFICATION	3.0555837904714986E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999969444162096	WITHOUT_CLASSIFICATION	3.0555837904714986E-6	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999992783314718	WITHOUT_CLASSIFICATION	7.216685281322561E-7	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999992783314718	WITHOUT_CLASSIFICATION	7.216685281322561E-7	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999998330179365	WITHOUT_CLASSIFICATION	1.6698206352141656E-7	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999998330179365	WITHOUT_CLASSIFICATION	1.6698206352141656E-7	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999998850796312	WITHOUT_CLASSIFICATION	1.1492036875653868E-7	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999782227207	WITHOUT_CLASSIFICATION	2.177727930317783E-8	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999970370486	WITHOUT_CLASSIFICATION	2.9629514533476707E-9	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999997596899662	WITHOUT_CLASSIFICATION	2.403100337650789E-7	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999995136238	WITHOUT_CLASSIFICATION	4.863761751655896E-10	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999616385478	WITHOUT_CLASSIFICATION	3.8361452156030874E-8	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999999706900878	WITHOUT_CLASSIFICATION	2.9309912190021413E-8	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.999997129357512	WITHOUT_CLASSIFICATION	2.8706424881588425E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999991218255	WITHOUT_CLASSIFICATION	8.781745093372045E-9	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999998850796312	WITHOUT_CLASSIFICATION	1.1492036875653868E-7	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999782227207	WITHOUT_CLASSIFICATION	2.177727930317783E-8	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999970370486	WITHOUT_CLASSIFICATION	2.9629514533476707E-9	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999995136238	WITHOUT_CLASSIFICATION	4.863761751655896E-10	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999616385478	WITHOUT_CLASSIFICATION	3.8361452156030874E-8	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999999942513612	WITHOUT_CLASSIFICATION	5.748638827887797E-9	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9999999558193505	WITHOUT_CLASSIFICATION	4.4180649433909516E-8	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999919401427411	WITHOUT_CLASSIFICATION	8.059857258952918E-6	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999919401427411	WITHOUT_CLASSIFICATION	8.059857258952918E-6	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999992459375464	WITHOUT_CLASSIFICATION	7.540624536192815E-7	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999998532715594	WITHOUT_CLASSIFICATION	1.4672844065832734E-7	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999999180178842	WITHOUT_CLASSIFICATION	8.198211576544227E-8	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999522709413	WITHOUT_CLASSIFICATION	4.772905867199534E-8	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999522709413	WITHOUT_CLASSIFICATION	4.772905867199534E-8	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999999957477483	WITHOUT_CLASSIFICATION	4.252251636468638E-9	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999976742782	WITHOUT_CLASSIFICATION	2.325721760503377E-9	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999998882469073	WITHOUT_CLASSIFICATION	1.1175309265613508E-7	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999955455451625	WITHOUT_CLASSIFICATION	4.454454837565053E-6	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999999809608873	WITHOUT_CLASSIFICATION	1.9039112654326055E-8	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999934036722	WITHOUT_CLASSIFICATION	6.596327771712377E-9	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999993307164	WITHOUT_CLASSIFICATION	6.692836291949279E-10	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999948266002	WITHOUT_CLASSIFICATION	5.173399813876918E-9	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999908331854	WITHOUT_CLASSIFICATION	9.166814532364557E-9	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999998661068484	WITHOUT_CLASSIFICATION	1.3389315156929247E-7	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999984342169312	WITHOUT_CLASSIFICATION	1.5657830688101939E-6	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999999957477483	WITHOUT_CLASSIFICATION	4.252251636468638E-9	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999976742782	WITHOUT_CLASSIFICATION	2.325721760503377E-9	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999955455451625	WITHOUT_CLASSIFICATION	4.454454837565053E-6	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999803712036297	WITHOUT_CLASSIFICATION	1.96287963702057E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999999180178842	WITHOUT_CLASSIFICATION	8.198211576544227E-8	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999999180178842	WITHOUT_CLASSIFICATION	8.198211576544227E-8	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999992156294802	WITHOUT_CLASSIFICATION	7.8437051965503E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999992156294802	WITHOUT_CLASSIFICATION	7.8437051965503E-7	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9873614753070102	WITHOUT_CLASSIFICATION	0.012638524692989775	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9873614753070102	WITHOUT_CLASSIFICATION	0.012638524692989775	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999999975954457	WITHOUT_CLASSIFICATION	2.404554389047842E-9	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999999869678071	WITHOUT_CLASSIFICATION	1.3032192820102222E-8	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.999993892639431	WITHOUT_CLASSIFICATION	6.107360569038195E-6	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999998592401078	WITHOUT_CLASSIFICATION	1.4075989211478864E-7	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999999996383353	WITHOUT_CLASSIFICATION	3.6166469944709895E-10	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999999099920861	WITHOUT_CLASSIFICATION	9.000791396150598E-8	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.999999990347732	WITHOUT_CLASSIFICATION	9.652268093276471E-9	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999999952828106	WITHOUT_CLASSIFICATION	4.717189460228435E-9	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999998442293201	WITHOUT_CLASSIFICATION	1.557706798108639E-7	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999998429521246	WITHOUT_CLASSIFICATION	1.5704787529141262E-7	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999999219913842	WITHOUT_CLASSIFICATION	7.800861578798763E-8	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9999996936278064	WITHOUT_CLASSIFICATION	3.0637219364585984E-7	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999998803634761	WITHOUT_CLASSIFICATION	1.1963652390431815E-7	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999992085189291	WITHOUT_CLASSIFICATION	7.914810710059394E-7	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999998272510592	WITHOUT_CLASSIFICATION	1.7274894079776644E-7	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9997074531153981	WITHOUT_CLASSIFICATION	2.925468846019579E-4	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9999990336893689	WITHOUT_CLASSIFICATION	9.663106309962075E-7	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999998889041647	WITHOUT_CLASSIFICATION	1.1109583523244621E-7	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999977635767983	WITHOUT_CLASSIFICATION	2.236423201634516E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999993307164	WITHOUT_CLASSIFICATION	6.692836291949279E-10	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999908331854	WITHOUT_CLASSIFICATION	9.166814532364557E-9	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999994055843	WITHOUT_CLASSIFICATION	5.944156896009468E-10	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998168475521	WITHOUT_CLASSIFICATION	1.8315244795813188E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998168475521	WITHOUT_CLASSIFICATION	1.8315244795813188E-7	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999803712036297	WITHOUT_CLASSIFICATION	1.96287963702057E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999999180178842	WITHOUT_CLASSIFICATION	8.198211576544227E-8	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999992156294802	WITHOUT_CLASSIFICATION	7.8437051965503E-7	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9873614753070102	WITHOUT_CLASSIFICATION	0.012638524692989775	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999875787373114	WITHOUT_CLASSIFICATION	1.242126268849154E-5	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999977593926335	WITHOUT_CLASSIFICATION	2.2406073665230653E-6	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999992909865164	WITHOUT_CLASSIFICATION	7.090134836366748E-7	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999989519638668	WITHOUT_CLASSIFICATION	1.0480361332481697E-6	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999742111269	WITHOUT_CLASSIFICATION	2.5788873133638565E-8	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999742111269	WITHOUT_CLASSIFICATION	2.5788873133638565E-8	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999999912463593	WITHOUT_CLASSIFICATION	8.753640635326946E-9	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999997259539435	WITHOUT_CLASSIFICATION	2.740460565245312E-7	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999888184319	WITHOUT_CLASSIFICATION	1.1181568182737E-8	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999998527663251	WITHOUT_CLASSIFICATION	1.4723367497461505E-7	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999991543733948	WITHOUT_CLASSIFICATION	8.456266052757022E-7	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999991543733948	WITHOUT_CLASSIFICATION	8.456266052757022E-7	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999999752171629	WITHOUT_CLASSIFICATION	2.4782837075296466E-8	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9999975624759289	WITHOUT_CLASSIFICATION	2.437524071111931E-6	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999999921957885	WITHOUT_CLASSIFICATION	7.804211508061146E-9	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999989610688219	WITHOUT_CLASSIFICATION	1.0389311780383915E-6	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999988391029091	WITHOUT_CLASSIFICATION	1.1608970908696483E-6	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999999919459913	WITHOUT_CLASSIFICATION	8.054008636706643E-9	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999999227279889	WITHOUT_CLASSIFICATION	7.727201112091956E-8	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999999369741224	WITHOUT_CLASSIFICATION	6.302587760312809E-8	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9998390641155638	WITHOUT_CLASSIFICATION	1.6093588443626212E-4	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9998032969056716	WITHOUT_CLASSIFICATION	1.9670309432841913E-4	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999999975401437	WITHOUT_CLASSIFICATION	2.4598562923708056E-9	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999999280933541	WITHOUT_CLASSIFICATION	7.190664585716345E-8	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999994846974726	WITHOUT_CLASSIFICATION	5.153025273805502E-7	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999979754769612	WITHOUT_CLASSIFICATION	2.0245230387657353E-6	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999994815171948	WITHOUT_CLASSIFICATION	5.18482805370287E-7	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9991970475003251	WITHOUT_CLASSIFICATION	8.029524996749143E-4	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999999998909883	WITHOUT_CLASSIFICATION	1.0901166548856626E-10	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999896916774504	WITHOUT_CLASSIFICATION	1.0308322549545116E-5	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999994728013806	WITHOUT_CLASSIFICATION	5.271986194212018E-7	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999998801728466	WITHOUT_CLASSIFICATION	1.1982715338841437E-7	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999879380479503	WITHOUT_CLASSIFICATION	1.2061952049714806E-5	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999999581048531	WITHOUT_CLASSIFICATION	4.1895146873440396E-8	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999999581048531	WITHOUT_CLASSIFICATION	4.1895146873440396E-8	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999995361847344	WITHOUT_CLASSIFICATION	4.638152656564675E-7	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999999924572344	WITHOUT_CLASSIFICATION	7.54276570351816E-9	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999965015455085	WITHOUT_CLASSIFICATION	3.4984544915393938E-6	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999965015455085	WITHOUT_CLASSIFICATION	3.4984544915393938E-6	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9167075087051033	WITHOUT_CLASSIFICATION	0.08329249129489678	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999999499488119	WITHOUT_CLASSIFICATION	5.005118805624445E-8	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999959956358532	WITHOUT_CLASSIFICATION	4.0043641467842054E-6	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.999999996033197	WITHOUT_CLASSIFICATION	3.966802921628236E-9	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.999999996033197	WITHOUT_CLASSIFICATION	3.966802921628236E-9	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999956708254358	WITHOUT_CLASSIFICATION	4.32917456419323E-6	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999893561453	WITHOUT_CLASSIFICATION	1.0643854613847001E-8	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999999104526147	WITHOUT_CLASSIFICATION	8.95473853038627E-8	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999999401284586	WITHOUT_CLASSIFICATION	5.987154135043598E-8	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999994600683879	WITHOUT_CLASSIFICATION	5.399316121088784E-7	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999999970266078	WITHOUT_CLASSIFICATION	2.9733920488735103E-9	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999993880354248	WITHOUT_CLASSIFICATION	6.119645752292418E-7	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999999553574759	WITHOUT_CLASSIFICATION	4.4642524029869636E-8	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9999990182577565	WITHOUT_CLASSIFICATION	9.817422434587688E-7	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999854833186533	WITHOUT_CLASSIFICATION	1.4516681346636705E-5	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999976863369933	WITHOUT_CLASSIFICATION	2.3136630067420324E-6	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999863156660109	WITHOUT_CLASSIFICATION	1.3684333989031754E-5	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9999997113486808	WITHOUT_CLASSIFICATION	2.8865131920867673E-7	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999999221693917	WITHOUT_CLASSIFICATION	7.783060828896702E-8	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9994122812594511	WITHOUT_CLASSIFICATION	5.877187405487663E-4	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999999291591385	WITHOUT_CLASSIFICATION	7.084086151205768E-8	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999998944464	WITHOUT_CLASSIFICATION	1.0555352798724846E-10	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999906087691364	WITHOUT_CLASSIFICATION	9.391230863720997E-6	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999947091874604	WITHOUT_CLASSIFICATION	5.290812539592257E-6	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999999983303849	WITHOUT_CLASSIFICATION	1.6696151586823654E-9	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.999996734923427	WITHOUT_CLASSIFICATION	3.265076573080835E-6	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.999999639084316	WITHOUT_CLASSIFICATION	3.6091568406166314E-7	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999842781807191	WITHOUT_CLASSIFICATION	1.5721819280927216E-5	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999998085848963	WITHOUT_CLASSIFICATION	1.9141510357807166E-7	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999745872504254	WITHOUT_CLASSIFICATION	2.541274957454495E-5	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999999894550667	WITHOUT_CLASSIFICATION	1.0544933306894168E-8	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9998219187483778	WITHOUT_CLASSIFICATION	1.7808125162226728E-4	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999899018819	WITHOUT_CLASSIFICATION	1.009811816837839E-8	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999978340239991	WITHOUT_CLASSIFICATION	2.165976000909095E-6	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999993041718	WITHOUT_CLASSIFICATION	6.958281585996054E-10	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.999999980384226	WITHOUT_CLASSIFICATION	1.961577401663521E-8	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999999221693917	WITHOUT_CLASSIFICATION	7.783060828896702E-8	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999899018819	WITHOUT_CLASSIFICATION	1.009811816837839E-8	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999978340239991	WITHOUT_CLASSIFICATION	2.165976000909095E-6	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.999999980384226	WITHOUT_CLASSIFICATION	1.961577401663521E-8	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999954333715885	WITHOUT_CLASSIFICATION	4.5666284114530215E-6	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9999968448125275	WITHOUT_CLASSIFICATION	3.155187472472002E-6	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999995785014302	WITHOUT_CLASSIFICATION	4.214985697678022E-7	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999999750539765	WITHOUT_CLASSIFICATION	2.4946023461512712E-8	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999999630465413	WITHOUT_CLASSIFICATION	3.695345877448809E-8	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999999987777363	WITHOUT_CLASSIFICATION	1.2222636902312979E-9	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9999990359247323	WITHOUT_CLASSIFICATION	9.640752676921652E-7	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9999990863485874	WITHOUT_CLASSIFICATION	9.136514126802656E-7	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9999991950565662	WITHOUT_CLASSIFICATION	8.049434338158379E-7	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999999892620004	WITHOUT_CLASSIFICATION	1.0737999616900021E-8	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999999402281142	WITHOUT_CLASSIFICATION	5.977188584164917E-8	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999999402281142	WITHOUT_CLASSIFICATION	5.977188584164917E-8	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999999984532203	WITHOUT_CLASSIFICATION	1.546779723276241E-9	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999998751533195	WITHOUT_CLASSIFICATION	1.2484668043592083E-7	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999720520868	WITHOUT_CLASSIFICATION	2.794791314098474E-8	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999980468300722	WITHOUT_CLASSIFICATION	1.953169927843562E-6	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999991721447845	WITHOUT_CLASSIFICATION	8.278552155741315E-7	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.999999943294959	WITHOUT_CLASSIFICATION	5.6705040865515494E-8	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999999576397658	WITHOUT_CLASSIFICATION	4.2360234136430874E-8	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999995560968	WITHOUT_CLASSIFICATION	4.439032844647567E-10	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999999978852959	WITHOUT_CLASSIFICATION	2.114704108671476E-9	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.999999928780907	WITHOUT_CLASSIFICATION	7.121909293421547E-8	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999998328183549	WITHOUT_CLASSIFICATION	1.671816450145815E-7	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999990972574373	WITHOUT_CLASSIFICATION	9.027425627414188E-7	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999999678615986	WITHOUT_CLASSIFICATION	3.2138401430897597E-8	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999999401776392	WITHOUT_CLASSIFICATION	5.982236091221933E-8	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9999996038038927	WITHOUT_CLASSIFICATION	3.9619610725630494E-7	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.999999549515767	WITHOUT_CLASSIFICATION	4.504842329940321E-7	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9999998033746841	WITHOUT_CLASSIFICATION	1.9662531599097149E-7	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9999990136264884	WITHOUT_CLASSIFICATION	9.863735116418084E-7	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9999843154970326	WITHOUT_CLASSIFICATION	1.568450296740573E-5	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9999997934775943	WITHOUT_CLASSIFICATION	2.065224058607789E-7	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9999996422012151	WITHOUT_CLASSIFICATION	3.5779878494992185E-7	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.999999020251901	WITHOUT_CLASSIFICATION	9.797480990096913E-7	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999999831164331	WITHOUT_CLASSIFICATION	1.688356685363139E-8	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.99998766717375	WITHOUT_CLASSIFICATION	1.2332826250063783E-5	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999999906931609	WITHOUT_CLASSIFICATION	9.306839127296881E-9	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9999909389724363	WITHOUT_CLASSIFICATION	9.06102756368389E-6	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999999749088777	WITHOUT_CLASSIFICATION	2.509112231761213E-8	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999999119290237	WITHOUT_CLASSIFICATION	8.807097620627853E-8	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.9999999604146582	WITHOUT_CLASSIFICATION	3.958534187511749E-8	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999999977635472	WITHOUT_CLASSIFICATION	2.236452809270572E-9	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999999995774934	WITHOUT_CLASSIFICATION	4.2250659374644775E-10	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9999999907819583	WITHOUT_CLASSIFICATION	9.218041645471723E-9	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999999388738223	WITHOUT_CLASSIFICATION	6.11261776196034E-8	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999995586397734	WITHOUT_CLASSIFICATION	4.413602266017071E-7	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999999937371271	WITHOUT_CLASSIFICATION	6.262872858450887E-9	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.999999937095176	WITHOUT_CLASSIFICATION	6.290482407523289E-8	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.999999985383004	WITHOUT_CLASSIFICATION	1.4616995867708732E-8	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999998890880037	WITHOUT_CLASSIFICATION	1.109119962860275E-7	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999996474769818	WITHOUT_CLASSIFICATION	3.525230182532189E-7	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999739333416086	WITHOUT_CLASSIFICATION	2.606665839140702E-5	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999999442331332	WITHOUT_CLASSIFICATION	5.576686682527076E-8	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.999943373408391	WITHOUT_CLASSIFICATION	5.662659160897028E-5	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.9999978811335497	WITHOUT_CLASSIFICATION	2.118866450375174E-6	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999999294899324	WITHOUT_CLASSIFICATION	7.05100675504193E-8	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999995520780861	WITHOUT_CLASSIFICATION	4.479219138811156E-7	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999999918541742	WITHOUT_CLASSIFICATION	8.14582575189174E-9	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9971347037097165	WITHOUT_CLASSIFICATION	0.002865296290283644	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999988465742182	WITHOUT_CLASSIFICATION	1.1534257818091471E-6	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999880626244512	WITHOUT_CLASSIFICATION	1.193737554886871E-5	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999999707479031	WITHOUT_CLASSIFICATION	2.925209694897876E-8	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999668700884964	WITHOUT_CLASSIFICATION	3.312991150365102E-5	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999999766320076	WITHOUT_CLASSIFICATION	2.3367992482074947E-8	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999602502467875	WITHOUT_CLASSIFICATION	3.974975321255034E-5	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999999489109662	WITHOUT_CLASSIFICATION	5.1089033846275874E-8	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999988969891971	WITHOUT_CLASSIFICATION	1.1030108029767102E-6	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999807490135	WITHOUT_CLASSIFICATION	1.925098652313254E-8	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.99993704934807	WITHOUT_CLASSIFICATION	6.295065192996682E-5	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9997174148884699	WITHOUT_CLASSIFICATION	2.8258511153020593E-4	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9455461779298053	WITHOUT_CLASSIFICATION	0.05445382207019463	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9998022469059434	WITHOUT_CLASSIFICATION	1.977530940566275E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9998022469059434	WITHOUT_CLASSIFICATION	1.977530940566275E-4	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999998816334663	WITHOUT_CLASSIFICATION	1.1836653369975985E-7	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999989355345774	WITHOUT_CLASSIFICATION	1.064465422583118E-6	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999693843465	WITHOUT_CLASSIFICATION	3.061565351215534E-8	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999499023992	WITHOUT_CLASSIFICATION	5.009760080384896E-8	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999996394807731	WITHOUT_CLASSIFICATION	3.6051922682088245E-7	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999997292831323	WITHOUT_CLASSIFICATION	2.7071686766533564E-7	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999960547974721	WITHOUT_CLASSIFICATION	3.945202527948384E-6	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999811404239234	WITHOUT_CLASSIFICATION	1.8859576076686818E-5	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999999372830403	WITHOUT_CLASSIFICATION	6.2716959734031E-8	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999994686381614	WITHOUT_CLASSIFICATION	5.313618387375518E-7	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999999887803332	WITHOUT_CLASSIFICATION	1.1219666724065814E-8	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9999999824583116	WITHOUT_CLASSIFICATION	1.754168845392264E-8	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999995137890214	WITHOUT_CLASSIFICATION	4.862109786489216E-7	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9998544928093391	WITHOUT_CLASSIFICATION	1.4550719066094676E-4	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999991352508457	WITHOUT_CLASSIFICATION	8.647491543304294E-7	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999975397963896	WITHOUT_CLASSIFICATION	2.4602036103555945E-6	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9999997374645859	WITHOUT_CLASSIFICATION	2.6253541408326033E-7	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999954051395	WITHOUT_CLASSIFICATION	4.594860564607696E-9	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999826940419221	WITHOUT_CLASSIFICATION	1.7305958077963774E-5	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999894194233516	WITHOUT_CLASSIFICATION	1.0580576648442116E-5	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999775417089	WITHOUT_CLASSIFICATION	2.2458291075854E-8	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999999943794368	WITHOUT_CLASSIFICATION	5.620563288808271E-9	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999374433533974	WITHOUT_CLASSIFICATION	6.25566466026163E-5	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999999966925034	WITHOUT_CLASSIFICATION	3.307496616917195E-9	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999998297223538	WITHOUT_CLASSIFICATION	1.7027764614040571E-7	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999731925599983	WITHOUT_CLASSIFICATION	2.6807440001697718E-5	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999999564704519	WITHOUT_CLASSIFICATION	4.3529547995371555E-8	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.999999999411434	WITHOUT_CLASSIFICATION	5.885659049528283E-10	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.999999494873278	WITHOUT_CLASSIFICATION	5.051267219438868E-7	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999999991138383	WITHOUT_CLASSIFICATION	8.861617197650586E-10	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999976380364343	WITHOUT_CLASSIFICATION	2.3619635657984178E-6	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999984508960004	WITHOUT_CLASSIFICATION	1.5491039995930066E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999997036164309	WITHOUT_CLASSIFICATION	2.9638356917285845E-7	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999985127586515	WITHOUT_CLASSIFICATION	1.4872413485560318E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999997036164309	WITHOUT_CLASSIFICATION	2.9638356917285845E-7	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999999538831739	WITHOUT_CLASSIFICATION	4.6116826015409904E-8	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999833034357565	WITHOUT_CLASSIFICATION	1.6696564243527986E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999833034357565	WITHOUT_CLASSIFICATION	1.6696564243527986E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999833034357565	WITHOUT_CLASSIFICATION	1.6696564243527986E-5	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999983963381056	WITHOUT_CLASSIFICATION	1.6036618944299E-6	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999983963381056	WITHOUT_CLASSIFICATION	1.6036618944299E-6	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.999999992898081	WITHOUT_CLASSIFICATION	7.101919034847E-9	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999999999773356	WITHOUT_CLASSIFICATION	2.2664329262899163E-11	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999999973107797	WITHOUT_CLASSIFICATION	2.689220226424005E-9	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9996210921105593	WITHOUT_CLASSIFICATION	3.789078894406892E-4	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999999165103618	WITHOUT_CLASSIFICATION	8.348963826192548E-8	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999997430881727	WITHOUT_CLASSIFICATION	2.5691182722652197E-7	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999990391027135	WITHOUT_CLASSIFICATION	9.608972864745528E-7	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999994359789146	WITHOUT_CLASSIFICATION	5.640210852589289E-7	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999963964157362	WITHOUT_CLASSIFICATION	3.6035842638268794E-6	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999999347794581	WITHOUT_CLASSIFICATION	6.522054186845457E-8	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999991772474038	WITHOUT_CLASSIFICATION	8.227525962285606E-7	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999998177356951	WITHOUT_CLASSIFICATION	1.822643047965803E-7	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999994846735277	WITHOUT_CLASSIFICATION	5.153264722809994E-7	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9999992699402549	WITHOUT_CLASSIFICATION	7.300597451185181E-7	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999986596068071	WITHOUT_CLASSIFICATION	1.340393192852083E-6	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9999999935754411	WITHOUT_CLASSIFICATION	6.424558991960389E-9	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999999966269911	WITHOUT_CLASSIFICATION	3.3730089762029657E-9	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999978786313792	WITHOUT_CLASSIFICATION	2.1213686207540857E-6	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999978786313792	WITHOUT_CLASSIFICATION	2.1213686207540857E-6	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9999981243118593	WITHOUT_CLASSIFICATION	1.8756881407303508E-6	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999996569746106	WITHOUT_CLASSIFICATION	3.430253893209522E-7	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999996569746106	WITHOUT_CLASSIFICATION	3.430253893209522E-7	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.999998707594808	WITHOUT_CLASSIFICATION	1.2924051919068676E-6	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.999999869009327	WITHOUT_CLASSIFICATION	1.3099067303098792E-7	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9999936595709127	WITHOUT_CLASSIFICATION	6.340429087328649E-6	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9999996341540258	WITHOUT_CLASSIFICATION	3.6584597425878367E-7	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9999993033198801	WITHOUT_CLASSIFICATION	6.966801198750647E-7	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999999128019721	WITHOUT_CLASSIFICATION	8.719802781815286E-8	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9999998312255214	WITHOUT_CLASSIFICATION	1.6877447874197141E-7	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999632332640683	WITHOUT_CLASSIFICATION	3.6766735931796555E-5	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999999683188523	WITHOUT_CLASSIFICATION	3.168114766966752E-8	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999954484575397	WITHOUT_CLASSIFICATION	4.551542460275124E-6	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9998884236852159	WITHOUT_CLASSIFICATION	1.1157631478416124E-4	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999899977856218	WITHOUT_CLASSIFICATION	1.000221437807089E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.999999258318105	WITHOUT_CLASSIFICATION	7.41681894930053E-7	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999998992436018	WITHOUT_CLASSIFICATION	1.0075639823870419E-7	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999994359789146	WITHOUT_CLASSIFICATION	5.640210852589289E-7	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999974291610548	WITHOUT_CLASSIFICATION	2.5708389451898194E-6	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999926310534	WITHOUT_CLASSIFICATION	7.368946574048803E-9	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999939359204979	WITHOUT_CLASSIFICATION	6.064079502086033E-6	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999939359204979	WITHOUT_CLASSIFICATION	6.064079502086033E-6	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999998747250475	WITHOUT_CLASSIFICATION	1.2527495265454598E-7	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999534584112001	WITHOUT_CLASSIFICATION	4.654158879988779E-5	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999998956201943	WITHOUT_CLASSIFICATION	1.0437980578666518E-7	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9999994477018723	WITHOUT_CLASSIFICATION	5.522981276838506E-7	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.999999999909542	WITHOUT_CLASSIFICATION	9.045802425679547E-11	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999962163385379	WITHOUT_CLASSIFICATION	3.783661462223719E-6	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999999563665986	WITHOUT_CLASSIFICATION	4.3633401359932605E-8	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999718528495796	WITHOUT_CLASSIFICATION	2.8147150420507135E-5	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.999999504966238	WITHOUT_CLASSIFICATION	4.950337620151718E-7	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999748045545959	WITHOUT_CLASSIFICATION	2.5195445404123714E-5	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9998183407501827	WITHOUT_CLASSIFICATION	1.81659249817256E-4	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999999760925148	WITHOUT_CLASSIFICATION	2.390748523966249E-8	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.8982850930884863	WITHOUT_CLASSIFICATION	0.1017149069115137	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999999836907543	WITHOUT_CLASSIFICATION	1.6309245823606917E-8	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999999970777448	WITHOUT_CLASSIFICATION	2.9222552219891895E-9	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999999836879884	WITHOUT_CLASSIFICATION	1.6312011570084353E-8	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.999999570818742	WITHOUT_CLASSIFICATION	4.2918125798389324E-7	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999364722695087	WITHOUT_CLASSIFICATION	6.352773049140081E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999994385033197	WITHOUT_CLASSIFICATION	5.614966802328598E-7	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999998106489155	WITHOUT_CLASSIFICATION	1.8935108449818515E-7	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999998154307197	WITHOUT_CLASSIFICATION	1.845692803956179E-7	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999986339359442	WITHOUT_CLASSIFICATION	1.3660640557519955E-6	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999872770075817	WITHOUT_CLASSIFICATION	1.2722992418386337E-5	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999941937799	WITHOUT_CLASSIFICATION	5.806220027043724E-9	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999906366702654	WITHOUT_CLASSIFICATION	9.363329734653878E-6	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999962193302302	WITHOUT_CLASSIFICATION	3.7806697697768342E-6	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999990557802965	WITHOUT_CLASSIFICATION	9.442197035327262E-7	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9997482452754614	WITHOUT_CLASSIFICATION	2.517547245385811E-4	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999999264129247	WITHOUT_CLASSIFICATION	7.358707530215575E-8	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999999064664499	WITHOUT_CLASSIFICATION	9.35335501404533E-8	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999994953832096	WITHOUT_CLASSIFICATION	5.046167903145261E-7	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999999684910377	WITHOUT_CLASSIFICATION	3.150896237962535E-8	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999989176138969	WITHOUT_CLASSIFICATION	1.082386103030974E-6	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999991198322805	WITHOUT_CLASSIFICATION	8.801677193473925E-7	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999998174939269	WITHOUT_CLASSIFICATION	1.8250607321552627E-7	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.9999999427267752	WITHOUT_CLASSIFICATION	5.7273224758888685E-8	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9997482452754614	WITHOUT_CLASSIFICATION	2.517547245385811E-4	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999784718868	WITHOUT_CLASSIFICATION	2.1528113135629667E-8	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999998174939269	WITHOUT_CLASSIFICATION	1.8250607321552627E-7	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999998917442677	WITHOUT_CLASSIFICATION	1.0825573221594378E-7	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999998140815288	WITHOUT_CLASSIFICATION	1.859184712059284E-7	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999999037602494	WITHOUT_CLASSIFICATION	9.623975055688763E-8	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999996823241595	WITHOUT_CLASSIFICATION	3.176758405123713E-7	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.999999097047254	WITHOUT_CLASSIFICATION	9.029527461440798E-7	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.999991836690171	WITHOUT_CLASSIFICATION	8.163309829005213E-6	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.999991836690171	WITHOUT_CLASSIFICATION	8.163309829005213E-6	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.7115798057148625	WITHOUT_CLASSIFICATION	0.2884201942851376	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.999968710357243	WITHOUT_CLASSIFICATION	3.1289642756981244E-5	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999998329440444	WITHOUT_CLASSIFICATION	1.6705595562892687E-7	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999998329440444	WITHOUT_CLASSIFICATION	1.6705595562892687E-7	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999998580670694	WITHOUT_CLASSIFICATION	1.4193293055172175E-7	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9998101786501714	WITHOUT_CLASSIFICATION	1.8982134982863417E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999868373854038	WITHOUT_CLASSIFICATION	1.3162614596084785E-5	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999868373854038	WITHOUT_CLASSIFICATION	1.3162614596084785E-5	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999872819858334	WITHOUT_CLASSIFICATION	1.2718014166513668E-5	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999987656637255	WITHOUT_CLASSIFICATION	1.2343362745173477E-6	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999999996923936	WITHOUT_CLASSIFICATION	3.0760641739920267E-10	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999999214700996	WITHOUT_CLASSIFICATION	7.852990040044255E-8	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.999999998933879	WITHOUT_CLASSIFICATION	1.0661209788253188E-9	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999862234309146	WITHOUT_CLASSIFICATION	1.3776569085275884E-5	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999999379488833	WITHOUT_CLASSIFICATION	6.205111663570818E-8	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999999664105153	WITHOUT_CLASSIFICATION	3.3589484786617825E-8	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999985035170139	WITHOUT_CLASSIFICATION	1.4964829860969642E-6	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.999999721616966	WITHOUT_CLASSIFICATION	2.7838303390773236E-7	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9999876375539171	WITHOUT_CLASSIFICATION	1.2362446082998513E-5	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999986965965536	WITHOUT_CLASSIFICATION	1.303403446366826E-6	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999970185369409	WITHOUT_CLASSIFICATION	2.981463059080021E-6	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999966335640647	WITHOUT_CLASSIFICATION	3.3664359352876106E-6	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999974310459144	WITHOUT_CLASSIFICATION	2.5689540855508946E-6	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999995889241783	WITHOUT_CLASSIFICATION	4.110758216985976E-7	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.999990137505703	WITHOUT_CLASSIFICATION	9.862494296967887E-6	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999998538628954	WITHOUT_CLASSIFICATION	1.46137104667274E-7	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999984249974959	WITHOUT_CLASSIFICATION	1.5750025040218648E-6	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9898107918089365	WITHOUT_CLASSIFICATION	0.010189208191063613	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999999461371363	WITHOUT_CLASSIFICATION	5.386286376385832E-8	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999974498908982	WITHOUT_CLASSIFICATION	2.550109101786467E-6	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9993546061497253	WITHOUT_CLASSIFICATION	6.453938502746998E-4	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999983469986214	WITHOUT_CLASSIFICATION	1.6530013785084203E-6	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999979878227347	WITHOUT_CLASSIFICATION	2.012177265303372E-6	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999998231229386	WITHOUT_CLASSIFICATION	1.7687706152754923E-7	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999999637346847	WITHOUT_CLASSIFICATION	3.6265315386268265E-8	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.999999570088631	WITHOUT_CLASSIFICATION	4.2991136899682586E-7	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999788687666	WITHOUT_CLASSIFICATION	2.113123339729056E-8	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999788687666	WITHOUT_CLASSIFICATION	2.113123339729056E-8	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.999999999797888	WITHOUT_CLASSIFICATION	2.0211192671381797E-10	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999998904291629	WITHOUT_CLASSIFICATION	1.0957083702388197E-7	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999999840896082	WITHOUT_CLASSIFICATION	1.5910391856642358E-8	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999998967055106	WITHOUT_CLASSIFICATION	1.0329448938464303E-7	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999999900653472	WITHOUT_CLASSIFICATION	9.934652705926411E-9	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9999990907514806	WITHOUT_CLASSIFICATION	9.092485193652225E-7	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999987325914776	WITHOUT_CLASSIFICATION	1.2674085223275543E-6	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997845664876	WITHOUT_CLASSIFICATION	2.1543351248902603E-7	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999999948243933	WITHOUT_CLASSIFICATION	5.1756067593862855E-9	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999995447958825	WITHOUT_CLASSIFICATION	4.5520411752131866E-7	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9968422679146719	WITHOUT_CLASSIFICATION	0.0031577320853281065	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999999926532979	WITHOUT_CLASSIFICATION	7.3467020903830805E-9	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.999731179429303	WITHOUT_CLASSIFICATION	2.688205706970004E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999972940534239	WITHOUT_CLASSIFICATION	2.705946576082163E-6	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999975743589082	WITHOUT_CLASSIFICATION	2.425641091831768E-6	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999892613732482	WITHOUT_CLASSIFICATION	1.073862675192256E-5	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9985319530430083	WITHOUT_CLASSIFICATION	0.0014680469569917688	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999999223942506	WITHOUT_CLASSIFICATION	7.760574933925093E-8	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9999996706909796	WITHOUT_CLASSIFICATION	3.293090203470117E-7	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999976962936059	WITHOUT_CLASSIFICATION	2.3037063941152864E-6	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999831580346145	WITHOUT_CLASSIFICATION	1.684196538555051E-5	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999811511066407	WITHOUT_CLASSIFICATION	1.884889335925701E-5	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999998790139217	WITHOUT_CLASSIFICATION	1.2098607825202223E-7	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.999999857382295	WITHOUT_CLASSIFICATION	1.4261770500915722E-7	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999965095299544	WITHOUT_CLASSIFICATION	3.490470045615631E-6	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.999684450611318	WITHOUT_CLASSIFICATION	3.1554938868193515E-4	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999916182828891	WITHOUT_CLASSIFICATION	8.381717110953874E-6	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999978155041139	WITHOUT_CLASSIFICATION	2.184495886132738E-6	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9999997832261878	WITHOUT_CLASSIFICATION	2.1677381222332602E-7	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9999997988875451	WITHOUT_CLASSIFICATION	2.0111245478995422E-7	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.999999957678466	WITHOUT_CLASSIFICATION	4.232153414576826E-8	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999983971789129	WITHOUT_CLASSIFICATION	1.6028210870699519E-6	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999994951473083	WITHOUT_CLASSIFICATION	5.048526915860689E-7	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.999997199629419	WITHOUT_CLASSIFICATION	2.800370580914436E-6	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999995277237246	WITHOUT_CLASSIFICATION	4.7227627537985444E-7	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.999496891101799	WITHOUT_CLASSIFICATION	5.031088982010812E-4	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999976402454657	WITHOUT_CLASSIFICATION	2.3597545343673077E-6	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.999986193083084	WITHOUT_CLASSIFICATION	1.380691691600401E-5	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.999997311069001	WITHOUT_CLASSIFICATION	2.6889309990119268E-6	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999986403400316	WITHOUT_CLASSIFICATION	1.3596599683604474E-6	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999081533303127	WITHOUT_CLASSIFICATION	9.184666968734834E-5	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999997700635038	WITHOUT_CLASSIFICATION	2.2993649603943206E-7	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999985026285192	WITHOUT_CLASSIFICATION	1.4973714809020314E-6	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999985026285192	WITHOUT_CLASSIFICATION	1.4973714809020314E-6	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999537887192264	WITHOUT_CLASSIFICATION	4.621128077355712E-5	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999998564506274	WITHOUT_CLASSIFICATION	1.4354937270337858E-7	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.981569149506001	WITHOUT_CLASSIFICATION	0.01843085049399893	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999997675417847	WITHOUT_CLASSIFICATION	2.3245821528824075E-7	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999324835326974	WITHOUT_CLASSIFICATION	6.751646730262507E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999969494672516	WITHOUT_CLASSIFICATION	3.0505327483756647E-6	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9995933716782213	WITHOUT_CLASSIFICATION	4.0662832177871383E-4	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9998310999501192	WITHOUT_CLASSIFICATION	1.6890004988089053E-4	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999990084456742	WITHOUT_CLASSIFICATION	9.915543256863836E-7	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9999993133835441	WITHOUT_CLASSIFICATION	6.866164559513747E-7	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9999999253097399	WITHOUT_CLASSIFICATION	7.469026005810113E-8	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.999999267465803	WITHOUT_CLASSIFICATION	7.325341970027668E-7	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9999999476747028	WITHOUT_CLASSIFICATION	5.2325297126863896E-8	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999999910369419	WITHOUT_CLASSIFICATION	8.96305803958866E-9	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999242227221	WITHOUT_CLASSIFICATION	7.577727788408221E-8	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9999998832786429	WITHOUT_CLASSIFICATION	1.1672135702960641E-7	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999829834073	WITHOUT_CLASSIFICATION	1.7016592726835437E-8	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9999993806124464	WITHOUT_CLASSIFICATION	6.193875534807279E-7	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999998971145659	WITHOUT_CLASSIFICATION	1.028854340917535E-7	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9999995484822747	WITHOUT_CLASSIFICATION	4.5151772526139544E-7	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999998149905895	WITHOUT_CLASSIFICATION	1.850094104430497E-7	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999950281696386	WITHOUT_CLASSIFICATION	4.971830361367072E-6	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999975085415078	WITHOUT_CLASSIFICATION	2.4914584922216833E-6	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999992146863497	WITHOUT_CLASSIFICATION	7.853136504700414E-7	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.999999999507459	WITHOUT_CLASSIFICATION	4.925409979436266E-10	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999974862428	WITHOUT_CLASSIFICATION	2.513757149509368E-9	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999999996851434	WITHOUT_CLASSIFICATION	3.1485659818797563E-9	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999999805865591	WITHOUT_CLASSIFICATION	1.9413440884011187E-8	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999999425117004	WITHOUT_CLASSIFICATION	5.748829955340928E-8	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.999999948037308	WITHOUT_CLASSIFICATION	5.1962692050699E-8	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999999379200323	WITHOUT_CLASSIFICATION	6.207996777472701E-8	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999994842030688	WITHOUT_CLASSIFICATION	5.157969311590501E-7	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999891990765734	WITHOUT_CLASSIFICATION	1.0800923426718571E-5	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9828055200309713	WITHOUT_CLASSIFICATION	0.017194479969028686	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.999986193083084	WITHOUT_CLASSIFICATION	1.380691691600401E-5	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9987024016739646	WITHOUT_CLASSIFICATION	0.0012975983260354207	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.999999935160708	WITHOUT_CLASSIFICATION	6.483929196827794E-8	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.999999935160708	WITHOUT_CLASSIFICATION	6.483929196827794E-8	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999999922620152	WITHOUT_CLASSIFICATION	7.737984886475554E-9	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999999979166436	WITHOUT_CLASSIFICATION	2.083356384405097E-9	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999717819155625	WITHOUT_CLASSIFICATION	2.8218084437473977E-5	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.9989442194556435	WITHOUT_CLASSIFICATION	0.0010557805443564868	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9915252361209259	WITHOUT_CLASSIFICATION	0.00847476387907405	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9876779162362519	WITHOUT_CLASSIFICATION	0.012322083763748048	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9885092981934199	WITHOUT_CLASSIFICATION	0.011490701806580156	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9899002592080044	WITHOUT_CLASSIFICATION	0.010099740791995526	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9506488467612177	WITHOUT_CLASSIFICATION	0.049351153238782274	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9711617060829179	WITHOUT_CLASSIFICATION	0.028838293917082227	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9592741733278713	WITHOUT_CLASSIFICATION	0.040725826672128665	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9394403380966265	WITHOUT_CLASSIFICATION	0.06055966190337341	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9955898981123183	WITHOUT_CLASSIFICATION	0.004410101887681676	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999843211040639	WITHOUT_CLASSIFICATION	1.567889593615372E-5	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999966340879649	WITHOUT_CLASSIFICATION	3.365912035096379E-6	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999994728339443	WITHOUT_CLASSIFICATION	5.271660557890096E-7	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9867758860709881	WITHOUT_CLASSIFICATION	0.013224113929011877	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9312481545464031	WITHOUT_CLASSIFICATION	0.06875184545359696	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9440860416149575	WITHOUT_CLASSIFICATION	0.055913958385042394	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9672327138677022	WITHOUT_CLASSIFICATION	0.032767286132297783	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9594442905452719	WITHOUT_CLASSIFICATION	0.04055570945472805	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9753013514432498	WITHOUT_CLASSIFICATION	0.024698648556750264	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999982403758803	WITHOUT_CLASSIFICATION	1.7596241197839874E-6	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999999309933199	WITHOUT_CLASSIFICATION	6.900668009763326E-8	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999999896238683	WITHOUT_CLASSIFICATION	1.0376131801403289E-8	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9975215447073109	WITHOUT_CLASSIFICATION	0.002478455292688993	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999901619324804	WITHOUT_CLASSIFICATION	9.838067519532779E-6	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999998879480295	WITHOUT_CLASSIFICATION	1.120519703927341E-7	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999991731622361	WITHOUT_CLASSIFICATION	8.26837764037568E-7	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999909380887281	WITHOUT_CLASSIFICATION	9.061911271889621E-6	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9999998599049468	WITHOUT_CLASSIFICATION	1.4009505317829402E-7	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999999746787139	WITHOUT_CLASSIFICATION	2.5321286094096494E-8	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9999993834988125	WITHOUT_CLASSIFICATION	6.165011875852497E-7	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999995793094123	WITHOUT_CLASSIFICATION	4.206905877118247E-7	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999986019491923	WITHOUT_CLASSIFICATION	1.3980508076791559E-6	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999976866453545	WITHOUT_CLASSIFICATION	2.313354645573537E-6	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999994713844	WITHOUT_CLASSIFICATION	5.286156877440267E-10	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9975215447073109	WITHOUT_CLASSIFICATION	0.002478455292688993	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999901619324804	WITHOUT_CLASSIFICATION	9.838067519532779E-6	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999998879480295	WITHOUT_CLASSIFICATION	1.120519703927341E-7	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999909380887281	WITHOUT_CLASSIFICATION	9.061911271889621E-6	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9930493476725609	WITHOUT_CLASSIFICATION	0.00695065232743904	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999885308738	WITHOUT_CLASSIFICATION	1.1469126176897035E-8	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9998785659418893	WITHOUT_CLASSIFICATION	1.2143405811070947E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999997661658295	WITHOUT_CLASSIFICATION	2.3383417052888328E-7	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999960154503302	WITHOUT_CLASSIFICATION	3.984549669775686E-6	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999979702732	WITHOUT_CLASSIFICATION	2.0297269124386218E-9	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999947806755227	WITHOUT_CLASSIFICATION	5.219324477318346E-6	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.999999900215743	WITHOUT_CLASSIFICATION	9.978425700966329E-8	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999999808590293	WITHOUT_CLASSIFICATION	1.9140970664056122E-8	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999933878812635	WITHOUT_CLASSIFICATION	6.612118736518652E-6	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999998260589994	WITHOUT_CLASSIFICATION	1.739410006209498E-7	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999993386077124	WITHOUT_CLASSIFICATION	6.613922877014101E-7	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999999984052679	WITHOUT_CLASSIFICATION	1.5947322383515124E-9	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999986494172715	WITHOUT_CLASSIFICATION	1.350582728517798E-6	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9999977705617107	WITHOUT_CLASSIFICATION	2.2294382892079733E-6	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9999993298166654	WITHOUT_CLASSIFICATION	6.701833345273284E-7	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999999285552978	WITHOUT_CLASSIFICATION	7.144470214209472E-8	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999999937203983	WITHOUT_CLASSIFICATION	6.279601744815719E-9	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999995255659263	WITHOUT_CLASSIFICATION	4.7443407363019383E-7	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999994713844	WITHOUT_CLASSIFICATION	5.286156877440267E-10	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999885308738	WITHOUT_CLASSIFICATION	1.1469126176897035E-8	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9998785659418893	WITHOUT_CLASSIFICATION	1.2143405811070947E-4	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999960154503302	WITHOUT_CLASSIFICATION	3.984549669775686E-6	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999979702732	WITHOUT_CLASSIFICATION	2.0297269124386218E-9	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999947806755227	WITHOUT_CLASSIFICATION	5.219324477318346E-6	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.999999900215743	WITHOUT_CLASSIFICATION	9.978425700966329E-8	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999999360870193	WITHOUT_CLASSIFICATION	6.391298073918049E-8	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999827849480958	WITHOUT_CLASSIFICATION	1.721505190419812E-5	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999999095048342	WITHOUT_CLASSIFICATION	9.049516575837672E-8	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.999999999834903	WITHOUT_CLASSIFICATION	1.6509702671608416E-10	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999995265606815	WITHOUT_CLASSIFICATION	4.734393185107915E-7	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999995265606815	WITHOUT_CLASSIFICATION	4.734393185107915E-7	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9999999952501418	WITHOUT_CLASSIFICATION	4.749858112603322E-9	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999997761377716	WITHOUT_CLASSIFICATION	2.2386222829142614E-7	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999999268574705	WITHOUT_CLASSIFICATION	7.31425294951454E-8	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999988979147371	WITHOUT_CLASSIFICATION	1.102085262849168E-6	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999999989892099	WITHOUT_CLASSIFICATION	1.0107900863651911E-9	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999993761911666	WITHOUT_CLASSIFICATION	6.238088334203156E-7	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.999999469652143	WITHOUT_CLASSIFICATION	5.303478569355414E-7	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999994205758342	WITHOUT_CLASSIFICATION	5.794241658658564E-7	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.999999336923944	WITHOUT_CLASSIFICATION	6.630760558987424E-7	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999873625363657	WITHOUT_CLASSIFICATION	1.2637463634186633E-5	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999947250530394	WITHOUT_CLASSIFICATION	5.274946960597916E-6	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999765134666246	WITHOUT_CLASSIFICATION	2.3486533375301823E-5	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999931203387108	WITHOUT_CLASSIFICATION	6.879661289215838E-6	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999987664713901	WITHOUT_CLASSIFICATION	1.2335286099546197E-6	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999995041883374	WITHOUT_CLASSIFICATION	4.958116626970533E-7	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999532029314248	WITHOUT_CLASSIFICATION	4.6797068575386444E-5	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.999999753367544	WITHOUT_CLASSIFICATION	2.4663245605223673E-7	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999999981688508	WITHOUT_CLASSIFICATION	1.8311492410212758E-9	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999999402300773	WITHOUT_CLASSIFICATION	5.976992273079822E-8	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999968648574313	WITHOUT_CLASSIFICATION	3.135142568761327E-6	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9729514936739907	IMPLEMENTATION	0.027048506326009268	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999999878146569	WITHOUT_CLASSIFICATION	1.2185342977017852E-8	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999999970115929	WITHOUT_CLASSIFICATION	2.9884070835458138E-9	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.502251816546525	WITHOUT_CLASSIFICATION	0.49774818345347516	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999832483533707	WITHOUT_CLASSIFICATION	1.6751646629309108E-5	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999916438127507	WITHOUT_CLASSIFICATION	8.356187249182954E-6	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999707192644	WITHOUT_CLASSIFICATION	2.9280735587405736E-8	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999989932827401	WITHOUT_CLASSIFICATION	1.0067172599087699E-6	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9999995522901295	WITHOUT_CLASSIFICATION	4.4770987050685306E-7	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999832483533707	WITHOUT_CLASSIFICATION	1.6751646629309108E-5	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999916438127507	WITHOUT_CLASSIFICATION	8.356187249182954E-6	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999987664713901	WITHOUT_CLASSIFICATION	1.2335286099546197E-6	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999682866051691	WITHOUT_CLASSIFICATION	3.171339483090467E-5	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.999996281380257	WITHOUT_CLASSIFICATION	3.7186197429747372E-6	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9994807696648094	WITHOUT_CLASSIFICATION	5.192303351906733E-4	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999999999951399	WITHOUT_CLASSIFICATION	4.860082227199679E-12	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999856815699175	WITHOUT_CLASSIFICATION	1.4318430082430196E-5	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999961935092535	WITHOUT_CLASSIFICATION	3.8064907465218617E-6	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999998913277028	WITHOUT_CLASSIFICATION	1.086722971748197E-7	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999996278762834	WITHOUT_CLASSIFICATION	3.7212371664941456E-7	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999989829489492	WITHOUT_CLASSIFICATION	1.0170510507574328E-6	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999999999242856	WITHOUT_CLASSIFICATION	7.571438538713653E-11	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.999994657876434	WITHOUT_CLASSIFICATION	5.3421235659785245E-6	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9998649247272339	WITHOUT_CLASSIFICATION	1.3507527276620127E-4	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9978355063843676	WITHOUT_CLASSIFICATION	0.002164493615632438	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999999161708595	WITHOUT_CLASSIFICATION	8.382914053530381E-8	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999999668982327	WITHOUT_CLASSIFICATION	3.310176738882593E-8	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999841338202583	WITHOUT_CLASSIFICATION	1.5866179741707368E-5	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999495469138228	WITHOUT_CLASSIFICATION	5.045308617737773E-5	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9997932578054652	WITHOUT_CLASSIFICATION	2.0674219453466468E-4	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999950160960682	WITHOUT_CLASSIFICATION	4.983903931799287E-6	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999999865039628	WITHOUT_CLASSIFICATION	1.3496037075969218E-8	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.999998994955714	WITHOUT_CLASSIFICATION	1.005044286002208E-6	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999998881777387	WITHOUT_CLASSIFICATION	1.118222612955994E-7	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999987096900114	WITHOUT_CLASSIFICATION	1.290309988692788E-6	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999992175209	WITHOUT_CLASSIFICATION	7.824792026569475E-10	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999998022425483	WITHOUT_CLASSIFICATION	1.9775745181394547E-7	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999997225808789	WITHOUT_CLASSIFICATION	2.7741912107451327E-7	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9999931126663746	WITHOUT_CLASSIFICATION	6.887333625354499E-6	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999949308079827	WITHOUT_CLASSIFICATION	5.069192017229865E-6	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999999561300217	WITHOUT_CLASSIFICATION	4.3869978278520866E-8	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999999975062793	WITHOUT_CLASSIFICATION	2.493720686091056E-9	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999995952749214	WITHOUT_CLASSIFICATION	4.047250785785376E-7	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999978484744501	WITHOUT_CLASSIFICATION	2.151525549968656E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999978484744501	WITHOUT_CLASSIFICATION	2.151525549968656E-6	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999931203387108	WITHOUT_CLASSIFICATION	6.879661289215838E-6	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999999998016369	WITHOUT_CLASSIFICATION	1.9836298950076086E-10	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999993736296104	WITHOUT_CLASSIFICATION	6.263703895938537E-7	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999986986985471	WITHOUT_CLASSIFICATION	1.3013014529519254E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999700278608094	WITHOUT_CLASSIFICATION	2.9972139190632683E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999700278608094	WITHOUT_CLASSIFICATION	2.9972139190632683E-5	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999998558770722	WITHOUT_CLASSIFICATION	1.4412292771096126E-7	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999827594402072	WITHOUT_CLASSIFICATION	1.7240559792813067E-5	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999995163145073	WITHOUT_CLASSIFICATION	4.836854926933322E-7	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999998793552068	WITHOUT_CLASSIFICATION	1.2064479311697297E-7	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999997893280103	WITHOUT_CLASSIFICATION	2.1067198968354567E-7	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999999999791452	WITHOUT_CLASSIFICATION	2.085473756536779E-11	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999805580427085	WITHOUT_CLASSIFICATION	1.9441957291548534E-5	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999760248511722	WITHOUT_CLASSIFICATION	2.3975148827752866E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999435748599	WITHOUT_CLASSIFICATION	5.6425140101695466E-8	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999956542145159	WITHOUT_CLASSIFICATION	4.345785484173752E-6	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999997769882082	WITHOUT_CLASSIFICATION	2.230117917906643E-7	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999999362747488	WITHOUT_CLASSIFICATION	6.372525110413894E-8	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999998512236619	WITHOUT_CLASSIFICATION	1.4877633812874884E-7	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999984710355512	WITHOUT_CLASSIFICATION	1.5289644487082338E-6	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999997183983032	WITHOUT_CLASSIFICATION	2.816016969041424E-7	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.999999016119565	WITHOUT_CLASSIFICATION	9.838804349963362E-7	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999998787231	WITHOUT_CLASSIFICATION	1.2127684859411825E-10	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999998787231	WITHOUT_CLASSIFICATION	1.2127684859411825E-10	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999999011845255	WITHOUT_CLASSIFICATION	9.881547445874502E-8	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999999011845255	WITHOUT_CLASSIFICATION	9.881547445874502E-8	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999912897886	WITHOUT_CLASSIFICATION	8.710211398206331E-9	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999999831979196	WITHOUT_CLASSIFICATION	1.680208036457334E-8	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.999983947640633	WITHOUT_CLASSIFICATION	1.605235936701277E-5	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9957795322318106	WITHOUT_CLASSIFICATION	0.004220467768189389	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999999874661967	WITHOUT_CLASSIFICATION	1.2533803390797038E-8	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999980326562012	WITHOUT_CLASSIFICATION	1.9673437988331196E-6	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.999999297883413	WITHOUT_CLASSIFICATION	7.021165869346029E-7	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999999362747488	WITHOUT_CLASSIFICATION	6.372525110413894E-8	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999998512236619	WITHOUT_CLASSIFICATION	1.4877633812874884E-7	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999997183983032	WITHOUT_CLASSIFICATION	2.816016969041424E-7	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999999949817109	WITHOUT_CLASSIFICATION	5.0182891373108445E-9	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999993697114149	WITHOUT_CLASSIFICATION	6.302885851602132E-7	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999999717447866	WITHOUT_CLASSIFICATION	2.825521339633803E-8	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999996526745282	WITHOUT_CLASSIFICATION	3.4732547177710965E-7	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999999998239952	WITHOUT_CLASSIFICATION	1.7600481201495002E-10	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999792522564979	WITHOUT_CLASSIFICATION	2.0747743502147486E-5	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999965648732665	WITHOUT_CLASSIFICATION	3.435126733399668E-6	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999827734597243	WITHOUT_CLASSIFICATION	1.722654027568821E-5	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999978696314653	WITHOUT_CLASSIFICATION	2.1303685347392586E-6	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999999350693	WITHOUT_CLASSIFICATION	6.493079584356494E-11	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9928065852836877	WITHOUT_CLASSIFICATION	0.0071934147163122885	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999989014087836	WITHOUT_CLASSIFICATION	1.0985912165199275E-6	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.99999991396985	WITHOUT_CLASSIFICATION	8.603014995590665E-8	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999996143478911	WITHOUT_CLASSIFICATION	3.8565210896357757E-7	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999824659517145	WITHOUT_CLASSIFICATION	1.7534048285530676E-5	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999997713575746	WITHOUT_CLASSIFICATION	2.2864242539886964E-7	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999998963734031	WITHOUT_CLASSIFICATION	1.0362659675595203E-7	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999993514830875	WITHOUT_CLASSIFICATION	6.485169124469873E-7	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999966526403329	WITHOUT_CLASSIFICATION	3.3473596670126973E-6	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999999950327016	WITHOUT_CLASSIFICATION	4.967298321906012E-9	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999999848014499	WITHOUT_CLASSIFICATION	1.5198550015041573E-8	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999460713163978	WITHOUT_CLASSIFICATION	5.3928683602161304E-5	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999862142267424	WITHOUT_CLASSIFICATION	1.3785773257703947E-5	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999999865251377	WITHOUT_CLASSIFICATION	1.347486238221667E-8	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.999999901500956	WITHOUT_CLASSIFICATION	9.849904400446172E-8	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999996793899187	WITHOUT_CLASSIFICATION	3.2061008118757263E-7	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999928290135236	WITHOUT_CLASSIFICATION	7.170986476288671E-6	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999929006003313	WITHOUT_CLASSIFICATION	7.099399668714218E-6	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999999445583811	WITHOUT_CLASSIFICATION	5.544161891240688E-8	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999996878483834	WITHOUT_CLASSIFICATION	3.121516165194195E-7	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.999997883167739	WITHOUT_CLASSIFICATION	2.116832260977545E-6	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999999778058145	WITHOUT_CLASSIFICATION	2.219418557155957E-8	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999999768388557	WITHOUT_CLASSIFICATION	2.3161144358853384E-8	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999999641316262	WITHOUT_CLASSIFICATION	3.586837392153079E-8	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999926430210616	WITHOUT_CLASSIFICATION	7.356978938291757E-6	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999996964457435	WITHOUT_CLASSIFICATION	3.0355425650103033E-7	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999961684671219	WITHOUT_CLASSIFICATION	3.831532878043538E-6	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999999457538135	WITHOUT_CLASSIFICATION	5.424618646390037E-8	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999991047184137	WITHOUT_CLASSIFICATION	8.952815861939396E-7	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999999977265039	WITHOUT_CLASSIFICATION	2.2734961156294417E-9	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999999665751091	WITHOUT_CLASSIFICATION	3.342489085514813E-8	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999993736296104	WITHOUT_CLASSIFICATION	6.263703895938537E-7	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999961684671219	WITHOUT_CLASSIFICATION	3.831532878043538E-6	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999999987942632	WITHOUT_CLASSIFICATION	1.205736880381254E-9	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999581205753	WITHOUT_CLASSIFICATION	4.187942468483072E-8	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999990493869237	WITHOUT_CLASSIFICATION	9.506130762140127E-7	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999995151214683	WITHOUT_CLASSIFICATION	4.848785316584814E-7	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999995151214683	WITHOUT_CLASSIFICATION	4.848785316584814E-7	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9998282155920797	WITHOUT_CLASSIFICATION	1.7178440792023998E-4	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999889744763079	WITHOUT_CLASSIFICATION	1.1025523692050086E-5	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999997449983518	WITHOUT_CLASSIFICATION	2.550016482374785E-7	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999999998362852	WITHOUT_CLASSIFICATION	1.637148286424175E-10	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9973817114882306	WITHOUT_CLASSIFICATION	0.0026182885117694084	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999999598466786	WITHOUT_CLASSIFICATION	4.01533214140134E-8	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999999999881222	WITHOUT_CLASSIFICATION	1.1877974267344648E-11	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999883278393876	WITHOUT_CLASSIFICATION	1.1672160612393032E-5	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999052036619	WITHOUT_CLASSIFICATION	9.479633806849653E-8	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999052036619	WITHOUT_CLASSIFICATION	9.479633806849653E-8	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.999999921370024	WITHOUT_CLASSIFICATION	7.862997596470983E-8	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.999997262115315	WITHOUT_CLASSIFICATION	2.737884684936452E-6	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999999988484811	WITHOUT_CLASSIFICATION	1.1515188443180406E-9	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9999999981198795	WITHOUT_CLASSIFICATION	1.880120426871529E-9	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999999999450172	WITHOUT_CLASSIFICATION	5.498279192308822E-11	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999999502964653	WITHOUT_CLASSIFICATION	4.970353470347218E-8	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999999360317372	WITHOUT_CLASSIFICATION	6.39682627245049E-8	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999999681854285	WITHOUT_CLASSIFICATION	3.1814571557479694E-8	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9999999042587151	WITHOUT_CLASSIFICATION	9.574128486974833E-8	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999999990918428	WITHOUT_CLASSIFICATION	9.081571825778596E-10	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999920827724236	WITHOUT_CLASSIFICATION	7.917227576480275E-6	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999999702890371	WITHOUT_CLASSIFICATION	2.9710962833824678E-8	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999992076487387	WITHOUT_CLASSIFICATION	7.923512612901226E-7	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999992347797689	WITHOUT_CLASSIFICATION	7.652202311717797E-7	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999992347797689	WITHOUT_CLASSIFICATION	7.652202311717797E-7	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999999772367983	WITHOUT_CLASSIFICATION	2.276320166764581E-8	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.999999900215743	WITHOUT_CLASSIFICATION	9.978425700966329E-8	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999999999525274	WITHOUT_CLASSIFICATION	4.747248674851607E-11	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999988990939229	WITHOUT_CLASSIFICATION	1.100906077096578E-6	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.999999999985967	WITHOUT_CLASSIFICATION	1.4033030275266925E-11	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999999984466472	WITHOUT_CLASSIFICATION	1.5533527362065005E-9	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999999995385511	WITHOUT_CLASSIFICATION	4.6144885478228106E-10	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999996804080324	WITHOUT_CLASSIFICATION	3.195919674900618E-7	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999995960183456	WITHOUT_CLASSIFICATION	4.039816544517677E-7	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9999999103808263	WITHOUT_CLASSIFICATION	8.961917375846093E-8	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999997120453682	WITHOUT_CLASSIFICATION	2.879546318287117E-7	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999999479920373	WITHOUT_CLASSIFICATION	5.200796272683636E-8	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999383807872185	WITHOUT_CLASSIFICATION	6.161921278149177E-5	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999999992447778	WITHOUT_CLASSIFICATION	7.552221867061618E-10	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999999996685537	WITHOUT_CLASSIFICATION	3.314463088488564E-10	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999999828087501	WITHOUT_CLASSIFICATION	1.719124981588611E-8	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999999892836093	WITHOUT_CLASSIFICATION	1.0716390662776714E-8	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999998412175176	WITHOUT_CLASSIFICATION	1.5878248237538676E-7	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999999617068909	WITHOUT_CLASSIFICATION	3.829310904861533E-8	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999999138459417	WITHOUT_CLASSIFICATION	8.615405842439244E-8	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9999978479752236	WITHOUT_CLASSIFICATION	2.152024776352126E-6	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9999999938784566	WITHOUT_CLASSIFICATION	6.121543423441788E-9	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999876755519157	WITHOUT_CLASSIFICATION	1.2324448084208183E-5	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999993886371782	WITHOUT_CLASSIFICATION	6.113628218036722E-7	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.7136618223167276	WITHOUT_CLASSIFICATION	0.2863381776832724	IMPLEMENTATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999983607087577	WITHOUT_CLASSIFICATION	1.6392912422407805E-6	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9999992316184524	WITHOUT_CLASSIFICATION	7.683815475739912E-7	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9999993983459615	WITHOUT_CLASSIFICATION	6.016540385190956E-7	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9999999520598967	WITHOUT_CLASSIFICATION	4.794010334968625E-8	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9993459162119148	WITHOUT_CLASSIFICATION	6.540837880851755E-4	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999997625112179	WITHOUT_CLASSIFICATION	2.3748878206952234E-7	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9999965565182876	WITHOUT_CLASSIFICATION	3.44348171239294E-6	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999999229279672	WITHOUT_CLASSIFICATION	7.707203282502257E-8	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999460736992212	WITHOUT_CLASSIFICATION	5.392630077873867E-5	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999927349807569	WITHOUT_CLASSIFICATION	7.265019242984119E-6	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999999910951962	WITHOUT_CLASSIFICATION	8.904803802919944E-9	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999989829776134	WITHOUT_CLASSIFICATION	1.0170223865482483E-6	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999998087908311	WITHOUT_CLASSIFICATION	1.9120916885639335E-7	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999999081354048	WITHOUT_CLASSIFICATION	9.186459522532349E-8	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999995923945987	WITHOUT_CLASSIFICATION	4.076054012330745E-7	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999999707563759	WITHOUT_CLASSIFICATION	2.9243623986343833E-8	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9775316862889732	WITHOUT_CLASSIFICATION	0.022468313711026724	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999808474725875	WITHOUT_CLASSIFICATION	1.915252741253194E-5	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999996242769491	WITHOUT_CLASSIFICATION	3.757230508210313E-7	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9999998531742739	WITHOUT_CLASSIFICATION	1.468257261754763E-7	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999997235313718	WITHOUT_CLASSIFICATION	2.764686283031051E-7	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999119758675	WITHOUT_CLASSIFICATION	8.802413252383234E-8	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999994836234	WITHOUT_CLASSIFICATION	5.163765399406772E-10	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999662480683497	WITHOUT_CLASSIFICATION	3.375193165040846E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999832483533707	WITHOUT_CLASSIFICATION	1.6751646629309108E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999832483533707	WITHOUT_CLASSIFICATION	1.6751646629309108E-5	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999960502117158	WITHOUT_CLASSIFICATION	3.94978828430141E-6	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.999999967200685	WITHOUT_CLASSIFICATION	3.279931503510199E-8	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999999130521146	WITHOUT_CLASSIFICATION	8.694788538621634E-8	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999999962593378	WITHOUT_CLASSIFICATION	3.740662215233543E-9	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999980409424557	WITHOUT_CLASSIFICATION	1.9590575442544603E-6	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999376230981248	WITHOUT_CLASSIFICATION	6.237690187521204E-5	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999999817178455	WITHOUT_CLASSIFICATION	1.8282154506750855E-8	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999741485867	WITHOUT_CLASSIFICATION	2.585141331637196E-8	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999054353867	WITHOUT_CLASSIFICATION	9.456461322254768E-8	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.999999757940169	WITHOUT_CLASSIFICATION	2.4205983089411586E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.999999567086379	WITHOUT_CLASSIFICATION	4.329136209469984E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.999999567086379	WITHOUT_CLASSIFICATION	4.329136209469984E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.999999567086379	WITHOUT_CLASSIFICATION	4.329136209469984E-7	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9985914445419231	WITHOUT_CLASSIFICATION	0.0014085554580769903	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999998749266622	WITHOUT_CLASSIFICATION	1.250733378997552E-7	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9999996551269825	WITHOUT_CLASSIFICATION	3.4487301744913925E-7	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999997910446903	WITHOUT_CLASSIFICATION	2.0895530972217792E-7	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999997910446903	WITHOUT_CLASSIFICATION	2.0895530972217792E-7	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.999995116495322	WITHOUT_CLASSIFICATION	4.883504677965157E-6	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999596031844697	WITHOUT_CLASSIFICATION	4.039681553036467E-5	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999999994522621	WITHOUT_CLASSIFICATION	5.47737849908915E-10	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999999672132465	WITHOUT_CLASSIFICATION	3.278675354938789E-8	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999999759327229	WITHOUT_CLASSIFICATION	2.4067277079047565E-8	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9998142362676286	WITHOUT_CLASSIFICATION	1.857637323713008E-4	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999999831522802	WITHOUT_CLASSIFICATION	1.6847719773772352E-8	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999816357609707	WITHOUT_CLASSIFICATION	1.836423902935066E-5	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999999848419406	WITHOUT_CLASSIFICATION	1.5158059395818647E-8	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.999986639981863	WITHOUT_CLASSIFICATION	1.3360018137078647E-5	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.999986639981863	WITHOUT_CLASSIFICATION	1.3360018137078647E-5	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999998578117242	WITHOUT_CLASSIFICATION	1.4218827582237242E-7	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999995784773043	WITHOUT_CLASSIFICATION	4.215226958003963E-7	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999999615106836	WITHOUT_CLASSIFICATION	3.848931641839458E-8	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999997737314194	WITHOUT_CLASSIFICATION	2.2626858054364444E-7	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.999999787149758	WITHOUT_CLASSIFICATION	2.128502419590565E-7	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999981270712447	WITHOUT_CLASSIFICATION	1.8729287554012968E-6	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999991740213208	WITHOUT_CLASSIFICATION	8.259786792955077E-7	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999974733848171	WITHOUT_CLASSIFICATION	2.5266151828850396E-6	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999984937860974	WITHOUT_CLASSIFICATION	1.5062139026394147E-6	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9999990513797281	WITHOUT_CLASSIFICATION	9.486202718818365E-7	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999999472329574	WITHOUT_CLASSIFICATION	5.276704274141508E-8	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999997469247529	WITHOUT_CLASSIFICATION	2.530752470751005E-7	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9999999037525067	WITHOUT_CLASSIFICATION	9.624749325587678E-8	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999999021123046	WITHOUT_CLASSIFICATION	9.788769539085123E-8	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9992734892012464	WITHOUT_CLASSIFICATION	7.265107987536249E-4	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.999999982537074	WITHOUT_CLASSIFICATION	1.7462926064766887E-8	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999963270739388	WITHOUT_CLASSIFICATION	3.672926061159816E-6	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999999926122254	WITHOUT_CLASSIFICATION	7.387774624551942E-9	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999985352145244	WITHOUT_CLASSIFICATION	1.4647854755773307E-6	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999983720914827	WITHOUT_CLASSIFICATION	1.6279085172673166E-6	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999815219581227	WITHOUT_CLASSIFICATION	1.847804187737208E-5	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999831451650906	WITHOUT_CLASSIFICATION	1.6854834909366606E-5	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999979332152076	WITHOUT_CLASSIFICATION	2.0667847924151153E-6	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.999988301167321	WITHOUT_CLASSIFICATION	1.1698832679052732E-5	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999965572318299	WITHOUT_CLASSIFICATION	3.4427681700228583E-6	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999984834568129	WITHOUT_CLASSIFICATION	1.5165431872393165E-6	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999998176661485	WITHOUT_CLASSIFICATION	1.823338513618755E-7	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999994066941766	WITHOUT_CLASSIFICATION	5.933058234606827E-7	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.999999970753767	WITHOUT_CLASSIFICATION	2.9246232981537856E-8	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999987124817327	WITHOUT_CLASSIFICATION	1.2875182673036461E-6	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999995849523258	WITHOUT_CLASSIFICATION	4.1504767421463395E-7	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999742887066779	WITHOUT_CLASSIFICATION	2.5711293322042648E-5	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999998650178211	WITHOUT_CLASSIFICATION	1.3498217887069534E-7	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999995849523258	WITHOUT_CLASSIFICATION	4.1504767421463395E-7	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999995150819148	WITHOUT_CLASSIFICATION	4.849180852382738E-7	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999995869501827	WITHOUT_CLASSIFICATION	4.1304981745908083E-7	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999995655437174	WITHOUT_CLASSIFICATION	4.344562826213417E-7	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999983372511109	WITHOUT_CLASSIFICATION	1.6627488892164252E-6	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999996554865482	WITHOUT_CLASSIFICATION	3.4451345175473545E-7	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.999999656654448	WITHOUT_CLASSIFICATION	3.43345551976379E-7	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999999837297272	WITHOUT_CLASSIFICATION	1.6270272775155445E-8	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999998599628308	WITHOUT_CLASSIFICATION	1.4003716917859783E-7	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999985935321932	WITHOUT_CLASSIFICATION	1.406467806736951E-6	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999917569635168	WITHOUT_CLASSIFICATION	8.243036483112742E-6	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999728009234272	WITHOUT_CLASSIFICATION	2.719907657278834E-5	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999995291186324	WITHOUT_CLASSIFICATION	4.70881367601683E-7	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999907802945549	WITHOUT_CLASSIFICATION	9.2197054451967E-6	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999460980743425	WITHOUT_CLASSIFICATION	5.390192565741058E-5	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999997110963539	WITHOUT_CLASSIFICATION	2.889036461230394E-7	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999983294243678	WITHOUT_CLASSIFICATION	1.6705756322534668E-6	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999981468758953	WITHOUT_CLASSIFICATION	1.8531241045949086E-6	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999987321715418	WITHOUT_CLASSIFICATION	1.2678284582450014E-6	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999979938641863	WITHOUT_CLASSIFICATION	2.0061358135943833E-6	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999739054512863	WITHOUT_CLASSIFICATION	2.6094548713718168E-5	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999999387410664	WITHOUT_CLASSIFICATION	6.125893361360549E-8	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999993940694959	WITHOUT_CLASSIFICATION	6.059305041180344E-7	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999994377085428	WITHOUT_CLASSIFICATION	5.622914571032277E-7	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999999716922731	WITHOUT_CLASSIFICATION	2.830772701671842E-8	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999999439299012	WITHOUT_CLASSIFICATION	5.607009863660529E-8	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.999999999417663	WITHOUT_CLASSIFICATION	5.823368203344303E-10	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999994182877339	WITHOUT_CLASSIFICATION	5.817122661803389E-7	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999997149682368	WITHOUT_CLASSIFICATION	2.850317632387953E-7	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9999974038369658	WITHOUT_CLASSIFICATION	2.5961630343205894E-6	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9999889381212532	WITHOUT_CLASSIFICATION	1.1061878746780226E-5	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9999998966813956	WITHOUT_CLASSIFICATION	1.0331860448918365E-7	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9954030808017252	WITHOUT_CLASSIFICATION	0.004596919198274697	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.8542572529525359	WITHOUT_CLASSIFICATION	0.1457427470474642	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999999886635731	WITHOUT_CLASSIFICATION	1.1336426860791757E-8	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999831507970721	WITHOUT_CLASSIFICATION	1.684920292787128E-5	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9999999704990152	WITHOUT_CLASSIFICATION	2.95009847553745E-8	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9999996515362326	WITHOUT_CLASSIFICATION	3.4846376734700387E-7	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9999982957315444	WITHOUT_CLASSIFICATION	1.7042684556193579E-6	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.999983721779375	WITHOUT_CLASSIFICATION	1.627822062498153E-5	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9999998927966183	WITHOUT_CLASSIFICATION	1.0720338169432458E-7	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9999989986535597	WITHOUT_CLASSIFICATION	1.001346440285087E-6	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999810206797853	WITHOUT_CLASSIFICATION	1.897932021466352E-5	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9999351074486464	WITHOUT_CLASSIFICATION	6.489255135363956E-5	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9999656729415566	WITHOUT_CLASSIFICATION	3.432705844340804E-5	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.999998090746479	WITHOUT_CLASSIFICATION	1.909253520889236E-6	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9999999793702213	WITHOUT_CLASSIFICATION	2.0629778663083562E-8	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9999974606931764	WITHOUT_CLASSIFICATION	2.5393068236726643E-6	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999999888935994	WITHOUT_CLASSIFICATION	1.1106400721884688E-8	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999995462031598	WITHOUT_CLASSIFICATION	4.537968403034516E-7	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.9999997979939672	WITHOUT_CLASSIFICATION	2.020060327609691E-7	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999995953242011	WITHOUT_CLASSIFICATION	4.0467579889742733E-7	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999936396747843	WITHOUT_CLASSIFICATION	6.3603252157643265E-6	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999990618111261	WITHOUT_CLASSIFICATION	9.381888739026475E-7	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999995462031598	WITHOUT_CLASSIFICATION	4.537968403034516E-7	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.8889128007102391	IMPLEMENTATION	0.11108719928976085	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.8889128007102391	IMPLEMENTATION	0.11108719928976085	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999990017801665	WITHOUT_CLASSIFICATION	9.982198333789023E-7	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999993438581749	WITHOUT_CLASSIFICATION	6.561418250369657E-7	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999998995124804	WITHOUT_CLASSIFICATION	1.0048751959157826E-7	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999995644573515	WITHOUT_CLASSIFICATION	4.3554264851320103E-7	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999992300279477	WITHOUT_CLASSIFICATION	7.69972052263203E-7	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999950403775852	WITHOUT_CLASSIFICATION	4.959622414740914E-6	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999987627649625	WITHOUT_CLASSIFICATION	1.2372350374923687E-6	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9808258406338902	IMPLEMENTATION	0.019174159366109788	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999998619832345	WITHOUT_CLASSIFICATION	1.3801676543413973E-7	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999859650012333	WITHOUT_CLASSIFICATION	1.4034998766715426E-5	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999999984858261	WITHOUT_CLASSIFICATION	1.5141738772432147E-9	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.999999984644736	WITHOUT_CLASSIFICATION	1.5355264024987468E-8	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.999993912856723	WITHOUT_CLASSIFICATION	6.087143276897131E-6	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999983996418633	WITHOUT_CLASSIFICATION	1.6003581366296586E-6	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9953730872703931	WITHOUT_CLASSIFICATION	0.004626912729606842	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9994224641294039	WITHOUT_CLASSIFICATION	5.775358705961486E-4	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999999961273011	WITHOUT_CLASSIFICATION	3.87269898021575E-9	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999948630970082	WITHOUT_CLASSIFICATION	5.136902991782843E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999948630970082	WITHOUT_CLASSIFICATION	5.136902991782843E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999948630970082	WITHOUT_CLASSIFICATION	5.136902991782843E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999948630970082	WITHOUT_CLASSIFICATION	5.136902991782843E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999948630970082	WITHOUT_CLASSIFICATION	5.136902991782843E-6	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9999995611968099	WITHOUT_CLASSIFICATION	4.388031901652088E-7	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998217371382	WITHOUT_CLASSIFICATION	1.782628618315462E-7	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998957800914177	WITHOUT_CLASSIFICATION	1.0421990858228779E-4	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.999999952532053	WITHOUT_CLASSIFICATION	4.7467947013793976E-8	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999999746348939	WITHOUT_CLASSIFICATION	2.536510621176075E-8	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999955380746	WITHOUT_CLASSIFICATION	4.4619253390896175E-9	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999766117558162	WITHOUT_CLASSIFICATION	2.3388244183816867E-5	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999994307604966	WITHOUT_CLASSIFICATION	5.692395034415889E-7	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999989971092164	WITHOUT_CLASSIFICATION	1.0028907836737667E-6	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9999982977179389	WITHOUT_CLASSIFICATION	1.7022820610992808E-6	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9999994223602877	WITHOUT_CLASSIFICATION	5.776397122048858E-7	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9999996109834643	WITHOUT_CLASSIFICATION	3.89016535582909E-7	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9999986375345311	WITHOUT_CLASSIFICATION	1.3624654688477262E-6	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.999999111619683	WITHOUT_CLASSIFICATION	8.883803170520882E-7	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9999992486139959	WITHOUT_CLASSIFICATION	7.513860041689194E-7	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9999997450567469	WITHOUT_CLASSIFICATION	2.549432531007191E-7	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9999992429957607	WITHOUT_CLASSIFICATION	7.570042393859606E-7	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9999984398875353	WITHOUT_CLASSIFICATION	1.5601124646692024E-6	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9999994579870054	WITHOUT_CLASSIFICATION	5.420129946547536E-7	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999986433394509	WITHOUT_CLASSIFICATION	1.3566605490702417E-6	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9999993605187688	WITHOUT_CLASSIFICATION	6.394812311472376E-7	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9999994859530065	WITHOUT_CLASSIFICATION	5.140469935798853E-7	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999997925623474	WITHOUT_CLASSIFICATION	2.0743765252583217E-7	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9999994010804879	WITHOUT_CLASSIFICATION	5.989195121141336E-7	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999996862928066	WITHOUT_CLASSIFICATION	3.137071934667397E-7	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9999996778358563	WITHOUT_CLASSIFICATION	3.22164143676788E-7	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9999984755222592	WITHOUT_CLASSIFICATION	1.5244777408221114E-6	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9999989389867769	WITHOUT_CLASSIFICATION	1.0610132230316916E-6	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.999999159248194	WITHOUT_CLASSIFICATION	8.407518059201444E-7	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999997955647781	WITHOUT_CLASSIFICATION	2.0443522179256346E-7	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999994931905846	WITHOUT_CLASSIFICATION	5.068094153849643E-7	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9999994719917711	WITHOUT_CLASSIFICATION	5.28008228861132E-7	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9999994370128645	WITHOUT_CLASSIFICATION	5.629871354941874E-7	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9999993033239581	WITHOUT_CLASSIFICATION	6.966760419113428E-7	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9999997527375354	WITHOUT_CLASSIFICATION	2.4726246464791906E-7	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9999995008438747	WITHOUT_CLASSIFICATION	4.99156125336412E-7	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9999993241653882	WITHOUT_CLASSIFICATION	6.758346117934907E-7	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9999994259231089	WITHOUT_CLASSIFICATION	5.740768912457422E-7	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.9999997606375907	WITHOUT_CLASSIFICATION	2.3936240930955507E-7	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9999994526122382	WITHOUT_CLASSIFICATION	5.473877618293848E-7	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9999991636562303	WITHOUT_CLASSIFICATION	8.363437696601079E-7	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999991292137225	WITHOUT_CLASSIFICATION	8.707862775276648E-7	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9999997157714731	WITHOUT_CLASSIFICATION	2.8422852703943367E-7	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9999991949583356	WITHOUT_CLASSIFICATION	8.05041664574275E-7	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9999989966929507	WITHOUT_CLASSIFICATION	1.0033070493252025E-6	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9999996054204149	WITHOUT_CLASSIFICATION	3.945795850650274E-7	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9999996936433634	WITHOUT_CLASSIFICATION	3.063566367073858E-7	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9999996775216139	WITHOUT_CLASSIFICATION	3.2247838607328326E-7	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9999989880308716	WITHOUT_CLASSIFICATION	1.0119691283176465E-6	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9999995123440301	WITHOUT_CLASSIFICATION	4.876559699371739E-7	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998957800914177	WITHOUT_CLASSIFICATION	1.0421990858228779E-4	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.99999958400409	WITHOUT_CLASSIFICATION	4.1599591007769093E-7	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999996894903347	WITHOUT_CLASSIFICATION	3.105096653348207E-7	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999994980905329	WITHOUT_CLASSIFICATION	5.019094670728017E-7	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999993789053355	WITHOUT_CLASSIFICATION	6.210946644147865E-7	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9999993345373065	WITHOUT_CLASSIFICATION	6.654626935218897E-7	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9999993449839754	WITHOUT_CLASSIFICATION	6.550160247072415E-7	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9999994610158972	WITHOUT_CLASSIFICATION	5.389841026830067E-7	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999993345618111	WITHOUT_CLASSIFICATION	6.654381888718476E-7	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9999993377353323	WITHOUT_CLASSIFICATION	6.622646677031512E-7	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9999994555674209	WITHOUT_CLASSIFICATION	5.444325791537249E-7	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9999993635298638	WITHOUT_CLASSIFICATION	6.364701361555538E-7	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.9999993234342713	WITHOUT_CLASSIFICATION	6.765657286377521E-7	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.9999993457777757	WITHOUT_CLASSIFICATION	6.5422222423561E-7	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9999995093941974	WITHOUT_CLASSIFICATION	4.906058026781252E-7	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9999995984210003	WITHOUT_CLASSIFICATION	4.015789997676415E-7	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.999999605403265	WITHOUT_CLASSIFICATION	3.945967350270727E-7	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9999990030092097	WITHOUT_CLASSIFICATION	9.969907903287796E-7	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9999987673220467	WITHOUT_CLASSIFICATION	1.232677953348419E-6	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9999994464863069	WITHOUT_CLASSIFICATION	5.53513693032026E-7	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9999992301033852	WITHOUT_CLASSIFICATION	7.698966147207884E-7	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9999994075534461	WITHOUT_CLASSIFICATION	5.924465538493136E-7	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9999992713779521	WITHOUT_CLASSIFICATION	7.286220478547343E-7	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9999992923860813	WITHOUT_CLASSIFICATION	7.076139186698866E-7	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9999995867185036	WITHOUT_CLASSIFICATION	4.1328149641162263E-7	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9999993592042902	WITHOUT_CLASSIFICATION	6.40795709881624E-7	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9999997310670775	WITHOUT_CLASSIFICATION	2.689329225549967E-7	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999997398434842	WITHOUT_CLASSIFICATION	2.601565158194346E-7	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.999999222835373	WITHOUT_CLASSIFICATION	7.771646270692301E-7	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9999993102770677	WITHOUT_CLASSIFICATION	6.897229322746543E-7	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9999990768092996	WITHOUT_CLASSIFICATION	9.231907004091713E-7	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9999998115336157	WITHOUT_CLASSIFICATION	1.8846638425322085E-7	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9999995328524696	WITHOUT_CLASSIFICATION	4.6714753042727914E-7	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9999995420966048	WITHOUT_CLASSIFICATION	4.5790339530635146E-7	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.999999790917652	WITHOUT_CLASSIFICATION	2.090823480570021E-7	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9999995531433064	WITHOUT_CLASSIFICATION	4.4685669374740656E-7	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9999993792374662	WITHOUT_CLASSIFICATION	6.207625338573421E-7	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9999985232304976	WITHOUT_CLASSIFICATION	1.4767695023589498E-6	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9999995014227873	WITHOUT_CLASSIFICATION	4.985772127772783E-7	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9999994288608981	WITHOUT_CLASSIFICATION	5.711391019382478E-7	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9999996633827766	WITHOUT_CLASSIFICATION	3.366172233559878E-7	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9999994849926969	WITHOUT_CLASSIFICATION	5.150073030915765E-7	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9999993671962855	WITHOUT_CLASSIFICATION	6.328037146537551E-7	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999997339864898	WITHOUT_CLASSIFICATION	2.6601351029653714E-7	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9999994272390212	WITHOUT_CLASSIFICATION	5.727609788374507E-7	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.999999680147953	WITHOUT_CLASSIFICATION	3.1985204704174275E-7	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999992402853407	WITHOUT_CLASSIFICATION	7.597146592745501E-7	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999982139239444	WITHOUT_CLASSIFICATION	1.786076055636624E-6	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999994253147366	WITHOUT_CLASSIFICATION	5.746852633439025E-7	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9999993488813059	WITHOUT_CLASSIFICATION	6.511186940317518E-7	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9999994658673623	WITHOUT_CLASSIFICATION	5.341326376747992E-7	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.999999309023322	WITHOUT_CLASSIFICATION	6.909766779430783E-7	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9999993326461349	WITHOUT_CLASSIFICATION	6.673538650966174E-7	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.999998584434126	WITHOUT_CLASSIFICATION	1.4155658739325812E-6	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9999979964901579	WITHOUT_CLASSIFICATION	2.003509842156002E-6	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9999980335153963	WITHOUT_CLASSIFICATION	1.9664846037309863E-6	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9999993450823346	WITHOUT_CLASSIFICATION	6.549176654970121E-7	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9999996387622557	WITHOUT_CLASSIFICATION	3.6123774417589025E-7	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9999991936962197	WITHOUT_CLASSIFICATION	8.063037802570218E-7	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9999991878882939	WITHOUT_CLASSIFICATION	8.12111706068408E-7	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999991963380901	WITHOUT_CLASSIFICATION	8.036619099826706E-7	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999996141263866	WITHOUT_CLASSIFICATION	3.8587361339199947E-7	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999990906654399	WITHOUT_CLASSIFICATION	9.093345602046869E-7	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9999996470262277	WITHOUT_CLASSIFICATION	3.5297377223546837E-7	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9999991499225532	WITHOUT_CLASSIFICATION	8.500774467670972E-7	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9999972146695992	WITHOUT_CLASSIFICATION	2.7853304006709187E-6	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.999999018771141	WITHOUT_CLASSIFICATION	9.812288591106644E-7	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9999979049372987	WITHOUT_CLASSIFICATION	2.0950627012355156E-6	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9999992066250891	WITHOUT_CLASSIFICATION	7.933749109035611E-7	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9999992155400956	WITHOUT_CLASSIFICATION	7.844599044281021E-7	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9999991998528471	WITHOUT_CLASSIFICATION	8.001471529928356E-7	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999992145730815	WITHOUT_CLASSIFICATION	7.854269185044372E-7	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999990234940921	WITHOUT_CLASSIFICATION	9.76505907940381E-7	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999990297522853	WITHOUT_CLASSIFICATION	9.702477146554124E-7	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9999995699693841	WITHOUT_CLASSIFICATION	4.3003061589221787E-7	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9999996163175383	WITHOUT_CLASSIFICATION	3.836824617830188E-7	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.999998834794275	WITHOUT_CLASSIFICATION	1.1652057250607657E-6	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9999997685817257	WITHOUT_CLASSIFICATION	2.3141827427004988E-7	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9999995531868735	WITHOUT_CLASSIFICATION	4.4681312647775387E-7	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9999994263524775	WITHOUT_CLASSIFICATION	5.736475225227447E-7	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999997351491604	WITHOUT_CLASSIFICATION	2.648508395356371E-7	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9999993492151433	WITHOUT_CLASSIFICATION	6.507848565857798E-7	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9999996218604306	WITHOUT_CLASSIFICATION	3.781395694572403E-7	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999992736036791	WITHOUT_CLASSIFICATION	7.263963208244318E-7	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9999990836006462	WITHOUT_CLASSIFICATION	9.163993538280497E-7	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9999993075597061	WITHOUT_CLASSIFICATION	6.924402938281062E-7	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999995749958454	WITHOUT_CLASSIFICATION	4.250041547334594E-7	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9999992732848784	WITHOUT_CLASSIFICATION	7.267151216370448E-7	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9999993410282347	WITHOUT_CLASSIFICATION	6.589717653516553E-7	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999997347189378	WITHOUT_CLASSIFICATION	2.6528106230443184E-7	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9999992331475404	WITHOUT_CLASSIFICATION	7.668524596934857E-7	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999995192400001	WITHOUT_CLASSIFICATION	4.807599998176203E-7	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9999991303751956	WITHOUT_CLASSIFICATION	8.696248043688829E-7	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9999990335376683	WITHOUT_CLASSIFICATION	9.664623316908399E-7	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9999991970898048	WITHOUT_CLASSIFICATION	8.02910195264349E-7	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.9999988805041906	WITHOUT_CLASSIFICATION	1.1194958094022049E-6	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999993041113854	WITHOUT_CLASSIFICATION	6.95888614744338E-7	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9999990602733647	WITHOUT_CLASSIFICATION	9.397266354348336E-7	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9999992935144845	WITHOUT_CLASSIFICATION	7.064855155201554E-7	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9999993233230005	WITHOUT_CLASSIFICATION	6.766769995113609E-7	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9999996835162759	WITHOUT_CLASSIFICATION	3.16483724163039E-7	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9999993244771141	WITHOUT_CLASSIFICATION	6.755228858504678E-7	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9999991978806166	WITHOUT_CLASSIFICATION	8.021193832698832E-7	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9999989248583142	WITHOUT_CLASSIFICATION	1.0751416857237204E-6	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9999986603794353	WITHOUT_CLASSIFICATION	1.3396205647362113E-6	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9999990368362521	WITHOUT_CLASSIFICATION	9.631637478742115E-7	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9999996486081741	WITHOUT_CLASSIFICATION	3.513918258064853E-7	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9999995013686598	WITHOUT_CLASSIFICATION	4.986313401364414E-7	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9999993781271946	WITHOUT_CLASSIFICATION	6.218728054375826E-7	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9999993852071974	WITHOUT_CLASSIFICATION	6.147928026593098E-7	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9999995204422149	WITHOUT_CLASSIFICATION	4.795577852492904E-7	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9999988537605613	WITHOUT_CLASSIFICATION	1.1462394386361792E-6	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999992092768746	WITHOUT_CLASSIFICATION	7.907231254211755E-7	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9999995812676432	WITHOUT_CLASSIFICATION	4.1873235676847606E-7	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9999994540723781	WITHOUT_CLASSIFICATION	5.45927621881027E-7	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9999995302534975	WITHOUT_CLASSIFICATION	4.697465025337119E-7	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999972089624377	WITHOUT_CLASSIFICATION	2.791037562346173E-6	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.9999987129487018	WITHOUT_CLASSIFICATION	1.2870512981543439E-6	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9999985597504205	WITHOUT_CLASSIFICATION	1.4402495795689696E-6	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9999984012981398	WITHOUT_CLASSIFICATION	1.5987018602312106E-6	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999994209867475	WITHOUT_CLASSIFICATION	5.790132525304334E-7	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999987073066554	WITHOUT_CLASSIFICATION	1.2926933445911726E-6	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9999988672950539	WITHOUT_CLASSIFICATION	1.1327049460653485E-6	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9999989376824031	WITHOUT_CLASSIFICATION	1.0623175968107548E-6	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999992499926831	WITHOUT_CLASSIFICATION	7.500073169587496E-7	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9999976383683569	WITHOUT_CLASSIFICATION	2.36163164309711E-6	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9999987405839045	WITHOUT_CLASSIFICATION	1.2594160956330316E-6	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999983024180221	WITHOUT_CLASSIFICATION	1.6975819778888129E-6	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9999985447987827	WITHOUT_CLASSIFICATION	1.4552012172611594E-6	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9999989311561015	WITHOUT_CLASSIFICATION	1.068843898519887E-6	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9999985658145982	WITHOUT_CLASSIFICATION	1.4341854017803105E-6	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9999978622683298	WITHOUT_CLASSIFICATION	2.137731670258219E-6	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9999974628211312	WITHOUT_CLASSIFICATION	2.537178868754248E-6	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9999987006764354	WITHOUT_CLASSIFICATION	1.2993235647127307E-6	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999994777587079	WITHOUT_CLASSIFICATION	5.222412920853065E-7	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999995945018643	WITHOUT_CLASSIFICATION	4.0549813575306193E-7	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999996029009893	WITHOUT_CLASSIFICATION	3.970990106830412E-7	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9999988774244987	WITHOUT_CLASSIFICATION	1.122575501314474E-6	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9999992254587254	WITHOUT_CLASSIFICATION	7.745412744309781E-7	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9999990594252509	WITHOUT_CLASSIFICATION	9.405747491737711E-7	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.999999039947477	WITHOUT_CLASSIFICATION	9.600525230558758E-7	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999990309962468	WITHOUT_CLASSIFICATION	9.690037532480425E-7	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999981618063727	WITHOUT_CLASSIFICATION	1.838193627325988E-6	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9999989867115259	WITHOUT_CLASSIFICATION	1.013288474158397E-6	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9999987549445735	WITHOUT_CLASSIFICATION	1.2450554264660077E-6	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9999992272877659	WITHOUT_CLASSIFICATION	7.727122340618091E-7	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.999998750278524	WITHOUT_CLASSIFICATION	1.2497214759810786E-6	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9999993831678745	WITHOUT_CLASSIFICATION	6.168321255634897E-7	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9999987658425387	WITHOUT_CLASSIFICATION	1.2341574613765946E-6	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9999987737519572	WITHOUT_CLASSIFICATION	1.2262480428084792E-6	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9999995762034772	WITHOUT_CLASSIFICATION	4.2379652267864233E-7	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9999989599915804	WITHOUT_CLASSIFICATION	1.0400084196557182E-6	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9999983628928313	WITHOUT_CLASSIFICATION	1.6371071687268726E-6	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9999985171037447	WITHOUT_CLASSIFICATION	1.4828962553165533E-6	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.999999523725972	WITHOUT_CLASSIFICATION	4.7627402805152995E-7	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9999985731521851	WITHOUT_CLASSIFICATION	1.4268478148382067E-6	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9999985630485811	WITHOUT_CLASSIFICATION	1.4369514188306773E-6	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999981968222216	WITHOUT_CLASSIFICATION	1.803177778384E-6	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9999994381122385	WITHOUT_CLASSIFICATION	5.618877615688627E-7	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.999998313723756	WITHOUT_CLASSIFICATION	1.6862762440500131E-6	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9999988282066151	WITHOUT_CLASSIFICATION	1.1717933849285799E-6	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9999964324723314	WITHOUT_CLASSIFICATION	3.56752766868971E-6	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999983269199695	WITHOUT_CLASSIFICATION	1.6730800305700768E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999993310172168	WITHOUT_CLASSIFICATION	6.689827832192207E-7	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9999982855402255	WITHOUT_CLASSIFICATION	1.7144597744920394E-6	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9999972898023203	WITHOUT_CLASSIFICATION	2.710197679803899E-6	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9999985610423128	WITHOUT_CLASSIFICATION	1.438957687217604E-6	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9999990508634743	WITHOUT_CLASSIFICATION	9.491365256152946E-7	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.999998465715924	WITHOUT_CLASSIFICATION	1.534284075994132E-6	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9999987315363074	WITHOUT_CLASSIFICATION	1.2684636925916995E-6	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999983325318469	WITHOUT_CLASSIFICATION	1.6674681531137812E-6	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999992220766675	WITHOUT_CLASSIFICATION	7.779233325311491E-7	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9999982727475845	WITHOUT_CLASSIFICATION	1.7272524155912127E-6	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999993478416351	WITHOUT_CLASSIFICATION	6.521583649217616E-7	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.999998445474968	WITHOUT_CLASSIFICATION	1.5545250320112203E-6	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9999988195358679	WITHOUT_CLASSIFICATION	1.1804641320855796E-6	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9999978627623998	WITHOUT_CLASSIFICATION	2.1372376001922846E-6	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9999977079574902	WITHOUT_CLASSIFICATION	2.2920425098577583E-6	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999980960549902	WITHOUT_CLASSIFICATION	1.9039450097761664E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999995161040912	WITHOUT_CLASSIFICATION	4.838959086916659E-7	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9999994548032913	WITHOUT_CLASSIFICATION	5.451967087017276E-7	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.999998622638127	WITHOUT_CLASSIFICATION	1.377361872933551E-6	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9999982865365069	WITHOUT_CLASSIFICATION	1.713463493109999E-6	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9999986481416571	WITHOUT_CLASSIFICATION	1.3518583430280583E-6	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9999991127112902	WITHOUT_CLASSIFICATION	8.872887098147437E-7	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9999986483076236	WITHOUT_CLASSIFICATION	1.351692376319943E-6	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9999982231230231	WITHOUT_CLASSIFICATION	1.7768769768312155E-6	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.999998152132676	WITHOUT_CLASSIFICATION	1.847867324051913E-6	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9999978316705712	WITHOUT_CLASSIFICATION	2.1683294288192114E-6	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9999976483421394	WITHOUT_CLASSIFICATION	2.3516578604613804E-6	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9999987393815529	WITHOUT_CLASSIFICATION	1.2606184469876259E-6	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9999985501283876	WITHOUT_CLASSIFICATION	1.4498716124628618E-6	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9999981933058426	WITHOUT_CLASSIFICATION	1.8066941573978375E-6	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999981943425759	WITHOUT_CLASSIFICATION	1.805657424149138E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999979807277268	WITHOUT_CLASSIFICATION	2.0192722731025016E-6	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9999990968891403	WITHOUT_CLASSIFICATION	9.031108597820342E-7	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9999985529705592	WITHOUT_CLASSIFICATION	1.4470294408545533E-6	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9999988597697282	WITHOUT_CLASSIFICATION	1.1402302717383007E-6	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.999998544926014	WITHOUT_CLASSIFICATION	1.4550739860360823E-6	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999985689561913	WITHOUT_CLASSIFICATION	1.4310438086744706E-6	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999993218260284	WITHOUT_CLASSIFICATION	6.781739715949852E-7	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9999979865369821	WITHOUT_CLASSIFICATION	2.013463017825076E-6	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9999966451594003	WITHOUT_CLASSIFICATION	3.354840599733885E-6	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9999981587620718	WITHOUT_CLASSIFICATION	1.841237928287734E-6	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.999998096541753	WITHOUT_CLASSIFICATION	1.9034582469754175E-6	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9999981498056125	WITHOUT_CLASSIFICATION	1.8501943875327943E-6	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.999997828435833	WITHOUT_CLASSIFICATION	2.171564167037066E-6	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9999964095241468	WITHOUT_CLASSIFICATION	3.5904758532477933E-6	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.999999319628188	WITHOUT_CLASSIFICATION	6.803718119006079E-7	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9999983235741948	WITHOUT_CLASSIFICATION	1.676425805130214E-6	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.9999979111476183	WITHOUT_CLASSIFICATION	2.0888523816927637E-6	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9999981423114299	WITHOUT_CLASSIFICATION	1.8576885700835031E-6	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999993020386253	WITHOUT_CLASSIFICATION	6.979613746507265E-7	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999989571632111	WITHOUT_CLASSIFICATION	1.0428367888763435E-6	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999990032579167	WITHOUT_CLASSIFICATION	9.967420833203485E-7	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9999987906326626	WITHOUT_CLASSIFICATION	1.20936733741809E-6	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999994217942525	WITHOUT_CLASSIFICATION	5.78205747470882E-7	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.999998732840571	WITHOUT_CLASSIFICATION	1.2671594291302491E-6	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999986085216261	WITHOUT_CLASSIFICATION	1.3914783739106582E-6	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9999986457496748	WITHOUT_CLASSIFICATION	1.3542503251642158E-6	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9999984993474319	WITHOUT_CLASSIFICATION	1.5006525681691933E-6	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999993691660637	WITHOUT_CLASSIFICATION	6.308339362685891E-7	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9999986417347358	WITHOUT_CLASSIFICATION	1.3582652641133287E-6	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.999998315179047	WITHOUT_CLASSIFICATION	1.6848209530067725E-6	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9999977726678446	WITHOUT_CLASSIFICATION	2.227332155343629E-6	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.9999968775332198	WITHOUT_CLASSIFICATION	3.12246678030906E-6	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999966188474131	WITHOUT_CLASSIFICATION	3.3811525870308773E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999985900397615	WITHOUT_CLASSIFICATION	1.4099602385313715E-6	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999995404107525	WITHOUT_CLASSIFICATION	4.595892476030646E-7	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.999990753828715	WITHOUT_CLASSIFICATION	9.246171284987371E-6	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.999997169090948	WITHOUT_CLASSIFICATION	2.8309090519561077E-6	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.999998139413488	WITHOUT_CLASSIFICATION	1.8605865120185462E-6	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999918610482509	WITHOUT_CLASSIFICATION	8.138951749177205E-6	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999791864071809	WITHOUT_CLASSIFICATION	2.081359281911463E-5	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9977891210232477	WITHOUT_CLASSIFICATION	0.0022108789767524097	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9984845998259788	WITHOUT_CLASSIFICATION	0.0015154001740210821	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999705723885756	WITHOUT_CLASSIFICATION	2.942761142436482E-5	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9998946929382946	WITHOUT_CLASSIFICATION	1.0530706170533176E-4	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9998287150989598	WITHOUT_CLASSIFICATION	1.712849010401949E-4	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9999995401435777	WITHOUT_CLASSIFICATION	4.5985642224308176E-7	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.999999436950038	WITHOUT_CLASSIFICATION	5.630499618926349E-7	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9999952253011924	WITHOUT_CLASSIFICATION	4.774698807495887E-6	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999965967380482	WITHOUT_CLASSIFICATION	3.4032619516998477E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9966294654495522	WITHOUT_CLASSIFICATION	0.003370534550447768	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.999908050627051	WITHOUT_CLASSIFICATION	9.194937294902737E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9992350144142659	WITHOUT_CLASSIFICATION	7.649855857340662E-4	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999786572217	WITHOUT_CLASSIFICATION	2.1342778274726296E-8	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999961656512202	WITHOUT_CLASSIFICATION	3.834348779825998E-6	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999913096248777	WITHOUT_CLASSIFICATION	8.690375122403971E-6	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999996826824968	WITHOUT_CLASSIFICATION	3.173175031802907E-7	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999999954278334	WITHOUT_CLASSIFICATION	4.572166602635345E-9	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999795695046	WITHOUT_CLASSIFICATION	2.0430495400759885E-8	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999795695046	WITHOUT_CLASSIFICATION	2.0430495400759885E-8	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999997079608312	WITHOUT_CLASSIFICATION	2.9203916889847597E-7	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999622377879648	WITHOUT_CLASSIFICATION	3.7762212035245314E-5	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999999660837231	WITHOUT_CLASSIFICATION	3.39162769326245E-8	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999994346509025	WITHOUT_CLASSIFICATION	5.653490975334686E-7	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999995203548162	WITHOUT_CLASSIFICATION	4.7964518375677E-7	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999999892225998	WITHOUT_CLASSIFICATION	1.0777400244749961E-8	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999992662928496	WITHOUT_CLASSIFICATION	7.337071504235756E-7	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999997828646779	WITHOUT_CLASSIFICATION	2.1713532203329286E-7	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999298917104147	WITHOUT_CLASSIFICATION	7.010828958537262E-5	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999077674383053	WITHOUT_CLASSIFICATION	9.223256169469391E-5	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9999984292681375	WITHOUT_CLASSIFICATION	1.5707318624894936E-6	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999859053107806	WITHOUT_CLASSIFICATION	1.4094689219476215E-5	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999854405731983	WITHOUT_CLASSIFICATION	1.4559426801831526E-5	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999981339808158	WITHOUT_CLASSIFICATION	1.8660191840928862E-6	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999985365265205	WITHOUT_CLASSIFICATION	1.4634734795625689E-6	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999969238413307	WITHOUT_CLASSIFICATION	3.076158669359891E-6	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999992937050294	WITHOUT_CLASSIFICATION	7.062949705411495E-7	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999973220052522	WITHOUT_CLASSIFICATION	2.6779947478809538E-6	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.999999556938475	WITHOUT_CLASSIFICATION	4.4306152509097237E-7	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9977473392375781	WITHOUT_CLASSIFICATION	0.0022526607624218757	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999800954781	WITHOUT_CLASSIFICATION	1.9904522029305307E-8	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9999940062548673	WITHOUT_CLASSIFICATION	5.993745132646187E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.991882725903727	WITHOUT_CLASSIFICATION	0.008117274096273143	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999987388473496	WITHOUT_CLASSIFICATION	1.2611526503907675E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.991882725903727	WITHOUT_CLASSIFICATION	0.008117274096273143	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999978641175038	WITHOUT_CLASSIFICATION	2.135882496198455E-6	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999995249751151	WITHOUT_CLASSIFICATION	4.750248848899444E-7	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.828164298233421	WITHOUT_CLASSIFICATION	0.17183570176657909	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999873499634324	WITHOUT_CLASSIFICATION	1.2650036567499441E-5	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999999866018734	WITHOUT_CLASSIFICATION	1.3398126636378046E-8	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999993617301202	WITHOUT_CLASSIFICATION	6.382698797739384E-7	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999993617301202	WITHOUT_CLASSIFICATION	6.382698797739384E-7	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999993617301202	WITHOUT_CLASSIFICATION	6.382698797739384E-7	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999996176985558	WITHOUT_CLASSIFICATION	3.8230144410860495E-7	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999830887919293	WITHOUT_CLASSIFICATION	1.69112080706733E-5	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999998704228047	WITHOUT_CLASSIFICATION	1.2957719523934868E-7	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999981052185113	WITHOUT_CLASSIFICATION	1.8947814887494364E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999981052185113	WITHOUT_CLASSIFICATION	1.8947814887494364E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999981052185113	WITHOUT_CLASSIFICATION	1.8947814887494364E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999981052185113	WITHOUT_CLASSIFICATION	1.8947814887494364E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999981052185113	WITHOUT_CLASSIFICATION	1.8947814887494364E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999981052185113	WITHOUT_CLASSIFICATION	1.8947814887494364E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999968670721205	WITHOUT_CLASSIFICATION	3.1329278795940303E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999968670721205	WITHOUT_CLASSIFICATION	3.1329278795940303E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999968670721205	WITHOUT_CLASSIFICATION	3.1329278795940303E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999968670721205	WITHOUT_CLASSIFICATION	3.1329278795940303E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999968670721205	WITHOUT_CLASSIFICATION	3.1329278795940303E-6	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999594882713432	WITHOUT_CLASSIFICATION	4.051172865683939E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999594882713432	WITHOUT_CLASSIFICATION	4.051172865683939E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999594882713432	WITHOUT_CLASSIFICATION	4.051172865683939E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999594882713432	WITHOUT_CLASSIFICATION	4.051172865683939E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999594882713432	WITHOUT_CLASSIFICATION	4.051172865683939E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999265725483838	WITHOUT_CLASSIFICATION	7.342745161627103E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999265725483838	WITHOUT_CLASSIFICATION	7.342745161627103E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999265725483838	WITHOUT_CLASSIFICATION	7.342745161627103E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999265725483838	WITHOUT_CLASSIFICATION	7.342745161627103E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999265725483838	WITHOUT_CLASSIFICATION	7.342745161627103E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999265725483838	WITHOUT_CLASSIFICATION	7.342745161627103E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999267172887522	WITHOUT_CLASSIFICATION	7.328271124787996E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999267172887522	WITHOUT_CLASSIFICATION	7.328271124787996E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999267172887522	WITHOUT_CLASSIFICATION	7.328271124787996E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999267172887522	WITHOUT_CLASSIFICATION	7.328271124787996E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999267172887522	WITHOUT_CLASSIFICATION	7.328271124787996E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998709753870725	WITHOUT_CLASSIFICATION	1.290246129274635E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998709753870725	WITHOUT_CLASSIFICATION	1.290246129274635E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998709753870725	WITHOUT_CLASSIFICATION	1.290246129274635E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998709753870725	WITHOUT_CLASSIFICATION	1.290246129274635E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998709753870725	WITHOUT_CLASSIFICATION	1.290246129274635E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998957800914177	WITHOUT_CLASSIFICATION	1.0421990858228779E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998957800914177	WITHOUT_CLASSIFICATION	1.0421990858228779E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998957800914177	WITHOUT_CLASSIFICATION	1.0421990858228779E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998957800914177	WITHOUT_CLASSIFICATION	1.0421990858228779E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9998957800914177	WITHOUT_CLASSIFICATION	1.0421990858228779E-4	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.999999952532053	WITHOUT_CLASSIFICATION	4.7467947013793976E-8	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999955380746	WITHOUT_CLASSIFICATION	4.4619253390896175E-9	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999766117558162	WITHOUT_CLASSIFICATION	2.3388244183816867E-5	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999994307604966	WITHOUT_CLASSIFICATION	5.692395034415889E-7	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999989971092164	WITHOUT_CLASSIFICATION	1.0028907836737667E-6	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999987656637255	WITHOUT_CLASSIFICATION	1.2343362745173477E-6	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999986433394509	WITHOUT_CLASSIFICATION	1.3566605490702417E-6	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999996862928066	WITHOUT_CLASSIFICATION	3.137071934667397E-7	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.999999159248194	WITHOUT_CLASSIFICATION	8.407518059201444E-7	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999997955647781	WITHOUT_CLASSIFICATION	2.0443522179256346E-7	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999996052645684	WITHOUT_CLASSIFICATION	3.9473543149430455E-7	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999994931905846	WITHOUT_CLASSIFICATION	5.068094153849643E-7	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9999994950011116	WITHOUT_CLASSIFICATION	5.049988883951949E-7	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9999991831477908	WITHOUT_CLASSIFICATION	8.168522092004486E-7	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9999991933058808	WITHOUT_CLASSIFICATION	8.066941192523662E-7	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9999995888728724	WITHOUT_CLASSIFICATION	4.111271275300797E-7	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9999996363961101	WITHOUT_CLASSIFICATION	3.636038898857316E-7	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9999982715677157	WITHOUT_CLASSIFICATION	1.7284322843029327E-6	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9999993779952656	WITHOUT_CLASSIFICATION	6.220047344913961E-7	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9999993734849599	WITHOUT_CLASSIFICATION	6.265150399787395E-7	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9999997671507559	WITHOUT_CLASSIFICATION	2.3284924415841404E-7	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9999994897324782	WITHOUT_CLASSIFICATION	5.102675216827558E-7	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9999993161865183	WITHOUT_CLASSIFICATION	6.838134815969495E-7	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9999995256644321	WITHOUT_CLASSIFICATION	4.743355679411515E-7	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9999992357663736	WITHOUT_CLASSIFICATION	7.642336263959117E-7	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9999994888764226	WITHOUT_CLASSIFICATION	5.111235773460384E-7	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9999992518195351	WITHOUT_CLASSIFICATION	7.481804649995113E-7	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9999997463507849	WITHOUT_CLASSIFICATION	2.536492150585127E-7	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9999994919847243	WITHOUT_CLASSIFICATION	5.080152756513193E-7	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9999995032729828	WITHOUT_CLASSIFICATION	4.967270171783045E-7	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.99999976825224	WITHOUT_CLASSIFICATION	2.317477600449292E-7	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9999994305483725	WITHOUT_CLASSIFICATION	5.694516274653549E-7	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9999993701197804	WITHOUT_CLASSIFICATION	6.298802197165425E-7	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9999991558926442	WITHOUT_CLASSIFICATION	8.441073558645291E-7	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.9999994122995353	WITHOUT_CLASSIFICATION	5.877004647092963E-7	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9999993977476694	WITHOUT_CLASSIFICATION	6.02252330611242E-7	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9999993007415641	WITHOUT_CLASSIFICATION	6.992584359459813E-7	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9999993039681799	WITHOUT_CLASSIFICATION	6.960318201301194E-7	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.999999333756353	WITHOUT_CLASSIFICATION	6.662436470597195E-7	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9999976186815547	WITHOUT_CLASSIFICATION	2.3813184452374905E-6	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9999991589838956	WITHOUT_CLASSIFICATION	8.410161044260494E-7	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9999993226471913	WITHOUT_CLASSIFICATION	6.773528088108419E-7	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9999994309403125	WITHOUT_CLASSIFICATION	5.690596874556606E-7	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9999996439487906	WITHOUT_CLASSIFICATION	3.560512093429826E-7	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9999995394013947	WITHOUT_CLASSIFICATION	4.6059860527694807E-7	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9999995550960639	WITHOUT_CLASSIFICATION	4.449039360165947E-7	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9999996211950777	WITHOUT_CLASSIFICATION	3.788049223770574E-7	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.9999986979109468	WITHOUT_CLASSIFICATION	1.3020890531540304E-6	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.9999995277660738	WITHOUT_CLASSIFICATION	4.722339260683923E-7	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999996894903347	WITHOUT_CLASSIFICATION	3.105096653348207E-7	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999994980905329	WITHOUT_CLASSIFICATION	5.019094670728017E-7	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999993789053355	WITHOUT_CLASSIFICATION	6.210946644147865E-7	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999993345618111	WITHOUT_CLASSIFICATION	6.654381888718476E-7	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.999999605403265	WITHOUT_CLASSIFICATION	3.945967350270727E-7	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999997398434842	WITHOUT_CLASSIFICATION	2.601565158194346E-7	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999977923440936	WITHOUT_CLASSIFICATION	2.207655906415196E-6	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.999999222835373	WITHOUT_CLASSIFICATION	7.771646270692301E-7	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999997339864898	WITHOUT_CLASSIFICATION	2.6601351029653714E-7	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.999999680147953	WITHOUT_CLASSIFICATION	3.1985204704174275E-7	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999992889293056	WITHOUT_CLASSIFICATION	7.110706943522346E-7	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999992402853407	WITHOUT_CLASSIFICATION	7.597146592745501E-7	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999982139239444	WITHOUT_CLASSIFICATION	1.786076055636624E-6	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9999995570519602	WITHOUT_CLASSIFICATION	4.4294803977734745E-7	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9999993833681134	WITHOUT_CLASSIFICATION	6.166318864991547E-7	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9999997310414152	WITHOUT_CLASSIFICATION	2.68958584809865E-7	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9999991928895006	WITHOUT_CLASSIFICATION	8.071104993855308E-7	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9999981505342348	WITHOUT_CLASSIFICATION	1.8494657652287553E-6	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9999986086750202	WITHOUT_CLASSIFICATION	1.3913249796922953E-6	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.9999995278782442	WITHOUT_CLASSIFICATION	4.721217559123868E-7	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9999994790427134	WITHOUT_CLASSIFICATION	5.209572866070026E-7	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9999991705867983	WITHOUT_CLASSIFICATION	8.29413201716345E-7	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9999991969304538	WITHOUT_CLASSIFICATION	8.03069546276311E-7	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.999999733863639	WITHOUT_CLASSIFICATION	2.6613636087494105E-7	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9999993281306687	WITHOUT_CLASSIFICATION	6.718693312817614E-7	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9999992520782496	WITHOUT_CLASSIFICATION	7.479217503612913E-7	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.999999564005425	WITHOUT_CLASSIFICATION	4.359945750105157E-7	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9999995455183078	WITHOUT_CLASSIFICATION	4.544816921192075E-7	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9999997166268423	WITHOUT_CLASSIFICATION	2.8337315771040737E-7	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.999999367502027	WITHOUT_CLASSIFICATION	6.324979729433197E-7	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9999993695744196	WITHOUT_CLASSIFICATION	6.304255804732646E-7	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9999991117230659	WITHOUT_CLASSIFICATION	8.882769341886114E-7	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9999994414053217	WITHOUT_CLASSIFICATION	5.585946782827686E-7	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9999978300403828	WITHOUT_CLASSIFICATION	2.1699596172056087E-6	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9999992189753641	WITHOUT_CLASSIFICATION	7.810246358834929E-7	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9999992486415553	WITHOUT_CLASSIFICATION	7.513584446345846E-7	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9999996034198042	WITHOUT_CLASSIFICATION	3.9658019582842066E-7	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9999990545714885	WITHOUT_CLASSIFICATION	9.454285114554091E-7	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.999999223057039	WITHOUT_CLASSIFICATION	7.769429609331425E-7	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.999999598167027	WITHOUT_CLASSIFICATION	4.018329728925521E-7	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9999995602507649	WITHOUT_CLASSIFICATION	4.397492351373877E-7	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9999995205394175	WITHOUT_CLASSIFICATION	4.794605825314181E-7	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.999999470376028	WITHOUT_CLASSIFICATION	5.296239719424697E-7	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9999995785235409	WITHOUT_CLASSIFICATION	4.2147645906010287E-7	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.999999371086602	WITHOUT_CLASSIFICATION	6.289133980736921E-7	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9999984948180659	WITHOUT_CLASSIFICATION	1.5051819341382084E-6	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9999993605991164	WITHOUT_CLASSIFICATION	6.394008836736692E-7	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.999997828563297	WITHOUT_CLASSIFICATION	2.171436703046967E-6	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9999988025777538	WITHOUT_CLASSIFICATION	1.1974222462046148E-6	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999996141263866	WITHOUT_CLASSIFICATION	3.8587361339199947E-7	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999991543939204	WITHOUT_CLASSIFICATION	8.456060796009174E-7	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999990906654399	WITHOUT_CLASSIFICATION	9.093345602046869E-7	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999992145730815	WITHOUT_CLASSIFICATION	7.854269185044372E-7	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999990297522853	WITHOUT_CLASSIFICATION	9.702477146554124E-7	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999997351491604	WITHOUT_CLASSIFICATION	2.648508395356371E-7	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999992736036791	WITHOUT_CLASSIFICATION	7.263963208244318E-7	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999995749958454	WITHOUT_CLASSIFICATION	4.250041547334594E-7	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999995192400001	WITHOUT_CLASSIFICATION	4.807599998176203E-7	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999993041113854	WITHOUT_CLASSIFICATION	6.95888614744338E-7	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999990603644984	WITHOUT_CLASSIFICATION	9.396355015894763E-7	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9999997122996191	WITHOUT_CLASSIFICATION	2.877003808601302E-7	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9999992868067389	WITHOUT_CLASSIFICATION	7.131932612017399E-7	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9999993010965118	WITHOUT_CLASSIFICATION	6.989034883037343E-7	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.9999996694296276	WITHOUT_CLASSIFICATION	3.3057037234915053E-7	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9999976719788449	WITHOUT_CLASSIFICATION	2.3280211550729475E-6	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9999992875295893	WITHOUT_CLASSIFICATION	7.124704107715903E-7	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9999994695790521	WITHOUT_CLASSIFICATION	5.304209479116581E-7	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.999999188395631	WITHOUT_CLASSIFICATION	8.116043690359207E-7	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9999989979806377	WITHOUT_CLASSIFICATION	1.0020193623146533E-6	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.999999002910499	WITHOUT_CLASSIFICATION	9.970895010364356E-7	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9999992855804467	WITHOUT_CLASSIFICATION	7.144195533679718E-7	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9999991049848007	WITHOUT_CLASSIFICATION	8.950151992660453E-7	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9999991886233843	WITHOUT_CLASSIFICATION	8.113766157420714E-7	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9999995119631593	WITHOUT_CLASSIFICATION	4.880368406639894E-7	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9999997810714906	WITHOUT_CLASSIFICATION	2.1892850951303492E-7	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.999999459949981	WITHOUT_CLASSIFICATION	5.400500190063928E-7	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9999994940451284	WITHOUT_CLASSIFICATION	5.059548715384346E-7	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9999987046488011	WITHOUT_CLASSIFICATION	1.2953511988417065E-6	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9999996742909076	WITHOUT_CLASSIFICATION	3.2570909241394247E-7	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9999993067605304	WITHOUT_CLASSIFICATION	6.932394695116887E-7	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.999997909165328	WITHOUT_CLASSIFICATION	2.0908346720303563E-6	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9999993831480358	WITHOUT_CLASSIFICATION	6.168519642155824E-7	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9999981542047987	WITHOUT_CLASSIFICATION	1.8457952013858991E-6	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9999992844037808	WITHOUT_CLASSIFICATION	7.155962191369878E-7	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9999992724277272	WITHOUT_CLASSIFICATION	7.275722726917311E-7	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9999991970164235	WITHOUT_CLASSIFICATION	8.029835764861278E-7	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9999993457650421	WITHOUT_CLASSIFICATION	6.542349578777678E-7	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9999992225519634	WITHOUT_CLASSIFICATION	7.774480367323988E-7	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9999993688415352	WITHOUT_CLASSIFICATION	6.311584648074777E-7	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9999994623210181	WITHOUT_CLASSIFICATION	5.376789819386868E-7	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9999993236021375	WITHOUT_CLASSIFICATION	6.763978625896831E-7	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9999984473519868	WITHOUT_CLASSIFICATION	1.552648013155491E-6	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9999992829217987	WITHOUT_CLASSIFICATION	7.170782013256962E-7	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9999992854402835	WITHOUT_CLASSIFICATION	7.145597165021849E-7	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9999993521936809	WITHOUT_CLASSIFICATION	6.478063192295581E-7	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9999991584639032	WITHOUT_CLASSIFICATION	8.415360967720694E-7	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9999990062754307	WITHOUT_CLASSIFICATION	9.937245692958394E-7	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9999994399991264	WITHOUT_CLASSIFICATION	5.600008735857535E-7	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.999999419557498	WITHOUT_CLASSIFICATION	5.804425019868135E-7	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999972089624377	WITHOUT_CLASSIFICATION	2.791037562346173E-6	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999994404804244	WITHOUT_CLASSIFICATION	5.595195756750445E-7	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999994209867475	WITHOUT_CLASSIFICATION	5.790132525304334E-7	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999992499926831	WITHOUT_CLASSIFICATION	7.500073169587496E-7	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999983024180221	WITHOUT_CLASSIFICATION	1.6975819778888129E-6	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999994777587079	WITHOUT_CLASSIFICATION	5.222412920853065E-7	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999995945018643	WITHOUT_CLASSIFICATION	4.0549813575306193E-7	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999990309962468	WITHOUT_CLASSIFICATION	9.690037532480425E-7	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999981618063727	WITHOUT_CLASSIFICATION	1.838193627325988E-6	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999977986871339	WITHOUT_CLASSIFICATION	2.2013128660425434E-6	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.999999251582179	WITHOUT_CLASSIFICATION	7.484178211309299E-7	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9999989347780053	WITHOUT_CLASSIFICATION	1.0652219947063144E-6	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9999990343222869	WITHOUT_CLASSIFICATION	9.65677713110181E-7	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.999999267234102	WITHOUT_CLASSIFICATION	7.327658979776333E-7	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.999999219247504	WITHOUT_CLASSIFICATION	7.807524958914976E-7	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9999985594498132	WITHOUT_CLASSIFICATION	1.4405501867932472E-6	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9999983988844869	WITHOUT_CLASSIFICATION	1.601115512984198E-6	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9999974601059828	WITHOUT_CLASSIFICATION	2.5398940171856876E-6	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9999990957783559	WITHOUT_CLASSIFICATION	9.042216440327339E-7	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9999990121216269	WITHOUT_CLASSIFICATION	9.878783731705457E-7	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9999984264740472	WITHOUT_CLASSIFICATION	1.5735259527083698E-6	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9999985592386493	WITHOUT_CLASSIFICATION	1.4407613506066916E-6	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9999985106764018	WITHOUT_CLASSIFICATION	1.4893235981876918E-6	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9999985536432792	WITHOUT_CLASSIFICATION	1.4463567207583295E-6	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9999993438415253	WITHOUT_CLASSIFICATION	6.561584747625791E-7	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9999990480745575	WITHOUT_CLASSIFICATION	9.519254424774163E-7	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9999988262265085	WITHOUT_CLASSIFICATION	1.1737734915244307E-6	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9999989384970167	WITHOUT_CLASSIFICATION	1.0615029833041723E-6	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9999991922911668	WITHOUT_CLASSIFICATION	8.077088330132185E-7	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9999983845766567	WITHOUT_CLASSIFICATION	1.615423343342652E-6	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9999989967214092	WITHOUT_CLASSIFICATION	1.0032785907610077E-6	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.999999050210471	WITHOUT_CLASSIFICATION	9.497895290817121E-7	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9999983396722446	WITHOUT_CLASSIFICATION	1.6603277554674641E-6	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9999990494626961	WITHOUT_CLASSIFICATION	9.505373039904934E-7	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.999998859051008	WITHOUT_CLASSIFICATION	1.1409489919382653E-6	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9999990195625489	WITHOUT_CLASSIFICATION	9.80437451157418E-7	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9999986784439306	WITHOUT_CLASSIFICATION	1.3215560694045677E-6	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9999988674072664	WITHOUT_CLASSIFICATION	1.13259273359238E-6	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9999995736742133	WITHOUT_CLASSIFICATION	4.2632578665318024E-7	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9999992123560826	WITHOUT_CLASSIFICATION	7.876439173492839E-7	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9999990141638384	WITHOUT_CLASSIFICATION	9.858361616693298E-7	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9999990250230113	WITHOUT_CLASSIFICATION	9.749769887106007E-7	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.999999119786018	WITHOUT_CLASSIFICATION	8.802139820457163E-7	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9999984958352215	WITHOUT_CLASSIFICATION	1.5041647784411247E-6	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9999992978135128	WITHOUT_CLASSIFICATION	7.021864871713156E-7	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9999988947524248	WITHOUT_CLASSIFICATION	1.1052475752238593E-6	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9999985779981436	WITHOUT_CLASSIFICATION	1.4220018563633315E-6	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9999991153064292	WITHOUT_CLASSIFICATION	8.846935709002979E-7	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999981968222216	WITHOUT_CLASSIFICATION	1.803177778384E-6	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999983269199695	WITHOUT_CLASSIFICATION	1.6730800305700768E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999993310172168	WITHOUT_CLASSIFICATION	6.689827832192207E-7	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999976995924689	WITHOUT_CLASSIFICATION	2.3004075310996466E-6	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999992220766675	WITHOUT_CLASSIFICATION	7.779233325311491E-7	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999993478416351	WITHOUT_CLASSIFICATION	6.521583649217616E-7	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999980960549902	WITHOUT_CLASSIFICATION	1.9039450097761664E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999995161040912	WITHOUT_CLASSIFICATION	4.838959086916659E-7	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999981943425759	WITHOUT_CLASSIFICATION	1.805657424149138E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999979807277268	WITHOUT_CLASSIFICATION	2.0192722731025016E-6	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9999987580286565	WITHOUT_CLASSIFICATION	1.2419713435401917E-6	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9999977252805404	WITHOUT_CLASSIFICATION	2.2747194596406326E-6	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9999987455014488	WITHOUT_CLASSIFICATION	1.254498551260151E-6	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9999988661876512	WITHOUT_CLASSIFICATION	1.1338123487353355E-6	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9999988192474039	WITHOUT_CLASSIFICATION	1.1807525961058935E-6	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9999988427371214	WITHOUT_CLASSIFICATION	1.1572628786055207E-6	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9999986521971465	WITHOUT_CLASSIFICATION	1.347802853460163E-6	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9999993859891564	WITHOUT_CLASSIFICATION	6.140108436414118E-7	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.999998654452797	WITHOUT_CLASSIFICATION	1.3455472029717499E-6	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.999998749203296	WITHOUT_CLASSIFICATION	1.2507967039503464E-6	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9999986315910555	WITHOUT_CLASSIFICATION	1.368408944539537E-6	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.999998348537046	WITHOUT_CLASSIFICATION	1.651462953985639E-6	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9999983565897039	WITHOUT_CLASSIFICATION	1.6434102960403076E-6	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9999987073130293	WITHOUT_CLASSIFICATION	1.29268697075458E-6	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9999986522884928	WITHOUT_CLASSIFICATION	1.3477115071536147E-6	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9999979658414653	WITHOUT_CLASSIFICATION	2.034158534720248E-6	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9999983658811773	WITHOUT_CLASSIFICATION	1.6341188227932807E-6	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9999981784153326	WITHOUT_CLASSIFICATION	1.8215846673496798E-6	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9999986824635876	WITHOUT_CLASSIFICATION	1.3175364125038982E-6	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9999985495884239	WITHOUT_CLASSIFICATION	1.450411576040647E-6	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9999986461755875	WITHOUT_CLASSIFICATION	1.353824412359002E-6	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.9999988782561272	WITHOUT_CLASSIFICATION	1.1217438727211561E-6	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9999993098360315	WITHOUT_CLASSIFICATION	6.901639685625001E-7	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9999984595326675	WITHOUT_CLASSIFICATION	1.5404673324140062E-6	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9999984480985457	WITHOUT_CLASSIFICATION	1.5519014542984242E-6	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9999992166742243	WITHOUT_CLASSIFICATION	7.833257757470243E-7	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9999982834153422	WITHOUT_CLASSIFICATION	1.7165846578619627E-6	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9999979774533083	WITHOUT_CLASSIFICATION	2.022546691789337E-6	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9999981583088342	WITHOUT_CLASSIFICATION	1.8416911656827495E-6	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9999977022004246	WITHOUT_CLASSIFICATION	2.297799575366028E-6	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.999998468829398	WITHOUT_CLASSIFICATION	1.5311706019641577E-6	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9999991822565775	WITHOUT_CLASSIFICATION	8.177434226233811E-7	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9999982891195219	WITHOUT_CLASSIFICATION	1.7108804780934016E-6	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9999994457550508	WITHOUT_CLASSIFICATION	5.542449492703652E-7	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.999998354455704	WITHOUT_CLASSIFICATION	1.645544296100032E-6	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9999993157865475	WITHOUT_CLASSIFICATION	6.842134525797527E-7	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.999998550415355	WITHOUT_CLASSIFICATION	1.4495846450550825E-6	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9999988720100462	WITHOUT_CLASSIFICATION	1.1279899537061325E-6	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9999968556512704	WITHOUT_CLASSIFICATION	3.1443487295836724E-6	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999981530271299	WITHOUT_CLASSIFICATION	1.8469728701051544E-6	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999985689561913	WITHOUT_CLASSIFICATION	1.4310438086744706E-6	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999993218260284	WITHOUT_CLASSIFICATION	6.781739715949852E-7	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999993020386253	WITHOUT_CLASSIFICATION	6.979613746507265E-7	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999985587019392	WITHOUT_CLASSIFICATION	1.4412980608165436E-6	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999990032579167	WITHOUT_CLASSIFICATION	9.967420833203485E-7	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999994217942525	WITHOUT_CLASSIFICATION	5.78205747470882E-7	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999986085216261	WITHOUT_CLASSIFICATION	1.3914783739106582E-6	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999966188474131	WITHOUT_CLASSIFICATION	3.3811525870308773E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999985900397615	WITHOUT_CLASSIFICATION	1.4099602385313715E-6	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9999989496680051	WITHOUT_CLASSIFICATION	1.0503319950177992E-6	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9999993467473994	WITHOUT_CLASSIFICATION	6.532526005201429E-7	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9999991687742251	WITHOUT_CLASSIFICATION	8.312257748249471E-7	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9999986825006291	WITHOUT_CLASSIFICATION	1.3174993709203548E-6	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9999983437962168	WITHOUT_CLASSIFICATION	1.6562037832161806E-6	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9999983512865838	WITHOUT_CLASSIFICATION	1.648713416137959E-6	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9999984365837783	WITHOUT_CLASSIFICATION	1.5634162217097632E-6	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9999969789772938	WITHOUT_CLASSIFICATION	3.021022706312477E-6	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9999985394450842	WITHOUT_CLASSIFICATION	1.4605549157242177E-6	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9999989197341124	WITHOUT_CLASSIFICATION	1.0802658876501347E-6	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9999983472682976	WITHOUT_CLASSIFICATION	1.6527317023896516E-6	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9999980350186534	WITHOUT_CLASSIFICATION	1.9649813465546593E-6	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.999999644269242	WITHOUT_CLASSIFICATION	3.5573075793166955E-7	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9999980971640531	WITHOUT_CLASSIFICATION	1.9028359469855603E-6	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9999985608746704	WITHOUT_CLASSIFICATION	1.4391253296430032E-6	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.999999370961115	WITHOUT_CLASSIFICATION	6.290388849906019E-7	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9999978723175059	WITHOUT_CLASSIFICATION	2.127682494125156E-6	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9999989456383918	WITHOUT_CLASSIFICATION	1.0543616082814602E-6	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9999985279022793	WITHOUT_CLASSIFICATION	1.4720977207747E-6	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9999985986150909	WITHOUT_CLASSIFICATION	1.401384909217524E-6	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9999986862210879	WITHOUT_CLASSIFICATION	1.3137789120251778E-6	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9999984064586855	WITHOUT_CLASSIFICATION	1.5935413143731227E-6	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9999973467806436	WITHOUT_CLASSIFICATION	2.6532193563906204E-6	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9999984360019728	WITHOUT_CLASSIFICATION	1.5639980271512472E-6	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9999984916237229	WITHOUT_CLASSIFICATION	1.5083762771339037E-6	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9999992414914916	WITHOUT_CLASSIFICATION	7.585085085934581E-7	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.999998313742596	WITHOUT_CLASSIFICATION	1.6862574039662884E-6	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9999981983867514	WITHOUT_CLASSIFICATION	1.8016132486058425E-6	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9999973190160203	WITHOUT_CLASSIFICATION	2.6809839797205437E-6	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9999984558654155	WITHOUT_CLASSIFICATION	1.5441345845203167E-6	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9999985492678389	WITHOUT_CLASSIFICATION	1.4507321610294749E-6	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9999981393658649	WITHOUT_CLASSIFICATION	1.8606341350323006E-6	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9999975930055532	WITHOUT_CLASSIFICATION	2.4069944467428843E-6	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9999976752947055	WITHOUT_CLASSIFICATION	2.324705294422855E-6	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9999968781848002	WITHOUT_CLASSIFICATION	3.1218151997518935E-6	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9999977646850089	WITHOUT_CLASSIFICATION	2.235314991136392E-6	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9999975911527788	WITHOUT_CLASSIFICATION	2.408847221346418E-6	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.9999950603354758	WITHOUT_CLASSIFICATION	4.93966452418144E-6	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.999997342351467	WITHOUT_CLASSIFICATION	2.6576485331004513E-6	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9977891210232477	WITHOUT_CLASSIFICATION	0.0022108789767524097	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9984845998259788	WITHOUT_CLASSIFICATION	0.0015154001740210821	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.999999436950038	WITHOUT_CLASSIFICATION	5.630499618926349E-7	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999965967380482	WITHOUT_CLASSIFICATION	3.4032619516998477E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9966294654495522	WITHOUT_CLASSIFICATION	0.003370534550447768	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.999908050627051	WITHOUT_CLASSIFICATION	9.194937294902737E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9992350144142659	WITHOUT_CLASSIFICATION	7.649855857340662E-4	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999984944036431	WITHOUT_CLASSIFICATION	1.5055963568683512E-6	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.999997262093419	WITHOUT_CLASSIFICATION	2.7379065809600807E-6	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9999965267899268	WITHOUT_CLASSIFICATION	3.473210073112746E-6	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9999988439163131	WITHOUT_CLASSIFICATION	1.1560836869016915E-6	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.999997151429348	WITHOUT_CLASSIFICATION	2.848570652046097E-6	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9999965347806383	WITHOUT_CLASSIFICATION	3.465219361655365E-6	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9999969856325723	WITHOUT_CLASSIFICATION	3.01436742765118E-6	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9999994293960481	WITHOUT_CLASSIFICATION	5.706039518921405E-7	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9999988084924802	WITHOUT_CLASSIFICATION	1.1915075197005107E-6	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9999970531951041	WITHOUT_CLASSIFICATION	2.946804895778044E-6	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9999966118799701	WITHOUT_CLASSIFICATION	3.388120029869731E-6	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9999985252910517	WITHOUT_CLASSIFICATION	1.474708948371997E-6	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9999979513707411	WITHOUT_CLASSIFICATION	2.0486292588006534E-6	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.9999991549940555	WITHOUT_CLASSIFICATION	8.450059444922601E-7	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9999975659583537	WITHOUT_CLASSIFICATION	2.4340416462876935E-6	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.999998892809803	WITHOUT_CLASSIFICATION	1.1071901969420791E-6	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9999983060557662	WITHOUT_CLASSIFICATION	1.6939442337433098E-6	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9999974477761354	WITHOUT_CLASSIFICATION	2.552223864615168E-6	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9999993102151946	WITHOUT_CLASSIFICATION	6.897848053667446E-7	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9999989752286299	WITHOUT_CLASSIFICATION	1.0247713700277113E-6	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9999981276785002	WITHOUT_CLASSIFICATION	1.8723214998530977E-6	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9999998306982646	WITHOUT_CLASSIFICATION	1.6930173542522815E-7	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9999997664300271	WITHOUT_CLASSIFICATION	2.335699729258907E-7	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9999997677926261	WITHOUT_CLASSIFICATION	2.3220737384989635E-7	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999952939233923	WITHOUT_CLASSIFICATION	4.70607660776239E-6	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999953055245895	WITHOUT_CLASSIFICATION	4.694475410535074E-6	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.999988913775649	WITHOUT_CLASSIFICATION	1.108622435088903E-5	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999800845041142	WITHOUT_CLASSIFICATION	1.991549588583488E-5	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.999999924066632	WITHOUT_CLASSIFICATION	7.59333680908814E-8	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999958292453635	WITHOUT_CLASSIFICATION	4.170754636511247E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999961656512202	WITHOUT_CLASSIFICATION	3.834348779825998E-6	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999913096248777	WITHOUT_CLASSIFICATION	8.690375122403971E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999795695046	WITHOUT_CLASSIFICATION	2.0430495400759885E-8	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999795695046	WITHOUT_CLASSIFICATION	2.0430495400759885E-8	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9994801409822467	WITHOUT_CLASSIFICATION	5.198590177533404E-4	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999999135433288	WITHOUT_CLASSIFICATION	8.645667109564293E-8	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999999959882184	WITHOUT_CLASSIFICATION	4.011781632141306E-9	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999995119503992	WITHOUT_CLASSIFICATION	4.880496007725778E-7	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999999704569508	WITHOUT_CLASSIFICATION	2.954304923370833E-8	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999661507903587	WITHOUT_CLASSIFICATION	3.384920964135092E-5	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999999818088198	WITHOUT_CLASSIFICATION	1.8191180193947435E-8	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999994465113269	WITHOUT_CLASSIFICATION	5.534886732323765E-7	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999522376284645	WITHOUT_CLASSIFICATION	4.776237153546095E-5	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999999973267517	WITHOUT_CLASSIFICATION	2.6732483510258913E-9	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999997939567014	WITHOUT_CLASSIFICATION	2.060432985410631E-7	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999998512804311	WITHOUT_CLASSIFICATION	1.4871956877455177E-7	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999999402841306	WITHOUT_CLASSIFICATION	5.971586938594306E-8	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999994544467561	WITHOUT_CLASSIFICATION	5.455532438563392E-7	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999995205478296	WITHOUT_CLASSIFICATION	4.794521703313675E-7	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999995205478296	WITHOUT_CLASSIFICATION	4.794521703313675E-7	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999987602062252	WITHOUT_CLASSIFICATION	1.2397937747062328E-6	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999987136724315	WITHOUT_CLASSIFICATION	1.2863275684544524E-6	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.999999997567358	WITHOUT_CLASSIFICATION	2.4326418793080168E-9	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999971401935055	WITHOUT_CLASSIFICATION	2.859806494453567E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997505546006	WITHOUT_CLASSIFICATION	2.49445399468805E-7	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999999972878025	WITHOUT_CLASSIFICATION	2.7121974995432952E-8	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999852080335502	WITHOUT_CLASSIFICATION	1.4791966449897937E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999999972878025	WITHOUT_CLASSIFICATION	2.7121974995432952E-8	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999275576662945	WITHOUT_CLASSIFICATION	7.244233370548825E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999897099196182	WITHOUT_CLASSIFICATION	1.0290080381764719E-5	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9995182976521607	WITHOUT_CLASSIFICATION	4.817023478392474E-4	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9997499140570478	WITHOUT_CLASSIFICATION	2.500859429521219E-4	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999709053120748	WITHOUT_CLASSIFICATION	2.909468792526089E-5	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999975263859071	WITHOUT_CLASSIFICATION	2.4736140929790187E-6	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9993245886076426	WITHOUT_CLASSIFICATION	6.754113923574141E-4	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999727918245107	WITHOUT_CLASSIFICATION	2.7208175489304865E-5	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.999999150546836	WITHOUT_CLASSIFICATION	8.494531639184243E-7	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999984989643723	WITHOUT_CLASSIFICATION	1.5010356277276912E-6	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999770481545401	WITHOUT_CLASSIFICATION	2.2951845459891676E-5	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999999688444804	WITHOUT_CLASSIFICATION	3.115551959573741E-8	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999995861612956	WITHOUT_CLASSIFICATION	4.1383870441709106E-7	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999841177776877	WITHOUT_CLASSIFICATION	1.588222231230144E-5	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999672384379	WITHOUT_CLASSIFICATION	3.276156213156274E-8	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999672384379	WITHOUT_CLASSIFICATION	3.276156213156274E-8	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.999997818912697	WITHOUT_CLASSIFICATION	2.1810873030069672E-6	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.999995347783649	WITHOUT_CLASSIFICATION	4.6522163510272235E-6	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999993834017332	WITHOUT_CLASSIFICATION	6.165982666951505E-7	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999379483297475	WITHOUT_CLASSIFICATION	6.205167025245549E-5	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9999984798695071	WITHOUT_CLASSIFICATION	1.5201304930004462E-6	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999999972878025	WITHOUT_CLASSIFICATION	2.7121974995432952E-8	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999999932147314	WITHOUT_CLASSIFICATION	6.785268580226792E-9	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999953532972085	WITHOUT_CLASSIFICATION	4.646702791506244E-6	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999999720367378	WITHOUT_CLASSIFICATION	2.7963262114108862E-8	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999999905153292	WITHOUT_CLASSIFICATION	9.48467081917198E-9	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999999984736	WITHOUT_CLASSIFICATION	1.5264609622746075E-12	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999997772630749	WITHOUT_CLASSIFICATION	2.2273692515137028E-7	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999980698441385	WITHOUT_CLASSIFICATION	1.930155861498297E-6	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999999927521899	WITHOUT_CLASSIFICATION	7.247810192498188E-9	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999997424585896	WITHOUT_CLASSIFICATION	2.575414104614708E-7	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999995071946649	WITHOUT_CLASSIFICATION	4.928053350738756E-7	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999997543926443	WITHOUT_CLASSIFICATION	2.4560735565477915E-7	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999999975032433	WITHOUT_CLASSIFICATION	2.496756735149528E-9	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999992961391558	WITHOUT_CLASSIFICATION	7.038608442950132E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999998775123898	WITHOUT_CLASSIFICATION	1.2248761012030366E-7	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999399914380632	WITHOUT_CLASSIFICATION	6.0008561936876024E-5	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999899517463957	WITHOUT_CLASSIFICATION	1.0048253604274858E-5	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999985425652489	WITHOUT_CLASSIFICATION	1.4574347511956957E-6	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.999997553096102	WITHOUT_CLASSIFICATION	2.4469038979282883E-6	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9999996116319427	WITHOUT_CLASSIFICATION	3.883680572665231E-7	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.999995809240626	WITHOUT_CLASSIFICATION	4.190759373927839E-6	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999972355467301	WITHOUT_CLASSIFICATION	2.764453269738754E-6	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.999999840504961	WITHOUT_CLASSIFICATION	1.5949503900293957E-7	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999852441236257	WITHOUT_CLASSIFICATION	1.475587637439301E-5	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999999489159466	WITHOUT_CLASSIFICATION	5.1084053477541026E-8	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999999143383909	WITHOUT_CLASSIFICATION	8.566160909184054E-8	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999989766079632	WITHOUT_CLASSIFICATION	1.0233920368315997E-6	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999987020780349	WITHOUT_CLASSIFICATION	1.2979219650559707E-6	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999989445179499	WITHOUT_CLASSIFICATION	1.0554820500984525E-6	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.999998726443929	WITHOUT_CLASSIFICATION	1.2735560710014177E-6	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999999655865552	WITHOUT_CLASSIFICATION	3.441344469885908E-8	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999997645152274	WITHOUT_CLASSIFICATION	2.3548477251010417E-7	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.999999809595246	WITHOUT_CLASSIFICATION	1.9040475392094125E-7	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999996067712527	WITHOUT_CLASSIFICATION	3.9322874735278244E-7	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999688131537197	WITHOUT_CLASSIFICATION	3.118684628046601E-5	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999980387373902	WITHOUT_CLASSIFICATION	1.961262609819947E-6	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999866811582085	WITHOUT_CLASSIFICATION	1.3318841791463128E-5	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999999777329175	WITHOUT_CLASSIFICATION	2.2267082524699393E-8	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9999961335759254	WITHOUT_CLASSIFICATION	3.866424074511036E-6	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.999997373523671	WITHOUT_CLASSIFICATION	2.6264763288389475E-6	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999999916403151	WITHOUT_CLASSIFICATION	8.359684909674723E-9	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999984944036431	WITHOUT_CLASSIFICATION	1.5055963568683512E-6	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.7046251091447662	WITHOUT_CLASSIFICATION	0.29537489085523383	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999989038123489	WITHOUT_CLASSIFICATION	1.0961876511188355E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999997235313718	WITHOUT_CLASSIFICATION	2.764686283031051E-7	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999119758675	WITHOUT_CLASSIFICATION	8.802413252383234E-8	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999897099196182	WITHOUT_CLASSIFICATION	1.0290080381764719E-5	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9998547523615119	WITHOUT_CLASSIFICATION	1.4524763848820232E-4	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999985218344963	WITHOUT_CLASSIFICATION	1.4781655036042208E-6	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999999671913627	WITHOUT_CLASSIFICATION	3.2808637269950856E-8	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999773789094	WITHOUT_CLASSIFICATION	2.2621090515544787E-8	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999773789094	WITHOUT_CLASSIFICATION	2.2621090515544787E-8	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999998417222414	WITHOUT_CLASSIFICATION	1.5827775856000292E-7	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999998417222414	WITHOUT_CLASSIFICATION	1.5827775856000292E-7	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999998417222414	WITHOUT_CLASSIFICATION	1.5827775856000292E-7	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999975701441504	WITHOUT_CLASSIFICATION	2.4298558495360156E-6	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999975701441504	WITHOUT_CLASSIFICATION	2.4298558495360156E-6	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999998812107664	WITHOUT_CLASSIFICATION	1.1878923354912667E-7	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999998812107664	WITHOUT_CLASSIFICATION	1.1878923354912667E-7	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999999991913551	WITHOUT_CLASSIFICATION	8.086449420236364E-10	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999998986881143	WITHOUT_CLASSIFICATION	1.0131188558775643E-7	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999954726095556	WITHOUT_CLASSIFICATION	4.527390444413771E-6	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999954726095556	WITHOUT_CLASSIFICATION	4.527390444413771E-6	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999999765524022	WITHOUT_CLASSIFICATION	2.3447597660841344E-8	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999990361461224	WITHOUT_CLASSIFICATION	9.638538775715118E-7	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999999494677141	WITHOUT_CLASSIFICATION	5.053228592382187E-8	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.999999981922989	WITHOUT_CLASSIFICATION	1.8077011088028505E-8	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999999783858199	WITHOUT_CLASSIFICATION	2.1614180138123762E-8	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999997869029249	WITHOUT_CLASSIFICATION	2.130970750037739E-7	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999999173949093	WITHOUT_CLASSIFICATION	8.260509066103783E-8	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999996463158763	WITHOUT_CLASSIFICATION	3.5368412375536E-7	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9999983667125633	WITHOUT_CLASSIFICATION	1.6332874368307312E-6	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9999951076806031	WITHOUT_CLASSIFICATION	4.8923193968840265E-6	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999995429617151	WITHOUT_CLASSIFICATION	4.5703828488167256E-7	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9999997475201438	WITHOUT_CLASSIFICATION	2.524798562303661E-7	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9999915035954522	WITHOUT_CLASSIFICATION	8.49640454774689E-6	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9999910419336516	WITHOUT_CLASSIFICATION	8.958066348465018E-6	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999998890834948	WITHOUT_CLASSIFICATION	1.1091650515652445E-7	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.999994628037992	WITHOUT_CLASSIFICATION	5.371962007997312E-6	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9998275166539384	WITHOUT_CLASSIFICATION	1.7248334606145778E-4	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999984741825183	WITHOUT_CLASSIFICATION	1.525817481736449E-6	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999994458271576	WITHOUT_CLASSIFICATION	5.541728424698754E-7	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999794089330668	WITHOUT_CLASSIFICATION	2.059106693313846E-5	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999999338665762	WITHOUT_CLASSIFICATION	6.613342387108667E-8	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999999729500829	WITHOUT_CLASSIFICATION	2.7049917078487238E-8	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9999997987116149	WITHOUT_CLASSIFICATION	2.0128838503243558E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999996055909366	WITHOUT_CLASSIFICATION	3.9440906337423185E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999998274769402	WITHOUT_CLASSIFICATION	1.7252305987080934E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999981741874338	WITHOUT_CLASSIFICATION	1.8258125662528936E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999776948827	WITHOUT_CLASSIFICATION	2.2305117232793206E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999776726615	WITHOUT_CLASSIFICATION	2.2327338587747805E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999999871198465	WITHOUT_CLASSIFICATION	1.2880153492523836E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999436594295	WITHOUT_CLASSIFICATION	5.634057039877107E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999994037467453	WITHOUT_CLASSIFICATION	5.962532546737162E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999452669089	WITHOUT_CLASSIFICATION	5.473309100125115E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999976058566	WITHOUT_CLASSIFICATION	2.3941433927730876E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997666965152	WITHOUT_CLASSIFICATION	2.333034846951251E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999976058566	WITHOUT_CLASSIFICATION	2.3941433927730876E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999976058566	WITHOUT_CLASSIFICATION	2.3941433927730876E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999976058566	WITHOUT_CLASSIFICATION	2.3941433927730876E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999976058566	WITHOUT_CLASSIFICATION	2.3941433927730876E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999976058566	WITHOUT_CLASSIFICATION	2.3941433927730876E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999976058566	WITHOUT_CLASSIFICATION	2.3941433927730876E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997666965152	WITHOUT_CLASSIFICATION	2.333034846951251E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997666965152	WITHOUT_CLASSIFICATION	2.333034846951251E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997666965152	WITHOUT_CLASSIFICATION	2.333034846951251E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997666965152	WITHOUT_CLASSIFICATION	2.333034846951251E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997666965152	WITHOUT_CLASSIFICATION	2.333034846951251E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997666965152	WITHOUT_CLASSIFICATION	2.333034846951251E-7	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999996011514525	WITHOUT_CLASSIFICATION	3.988485475935661E-7	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999993443624878	WITHOUT_CLASSIFICATION	6.556375121424209E-7	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999830168018367	WITHOUT_CLASSIFICATION	1.6983198163304535E-5	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999977721896606	WITHOUT_CLASSIFICATION	2.227810339378372E-6	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999999994820078	WITHOUT_CLASSIFICATION	5.179920990301422E-10	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.99999881910927	WITHOUT_CLASSIFICATION	1.1808907299410895E-6	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.999999335962274	WITHOUT_CLASSIFICATION	6.640377261008807E-7	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999999984594683	WITHOUT_CLASSIFICATION	1.5405315905303101E-9	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.999999811583258	WITHOUT_CLASSIFICATION	1.8841674195618328E-7	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999981449805341	WITHOUT_CLASSIFICATION	1.8550194658315835E-6	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.5803359394858193	IMPLEMENTATION	0.41966406051418065	WITHOUT_CLASSIFICATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999988686523	WITHOUT_CLASSIFICATION	1.1313476669028662E-9	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999855970194054	WITHOUT_CLASSIFICATION	1.44029805947726E-5	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999994869568	WITHOUT_CLASSIFICATION	5.130430646344747E-10	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999999986623725	WITHOUT_CLASSIFICATION	1.337627432570533E-9	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999979117002341	WITHOUT_CLASSIFICATION	2.088299765878614E-6	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999997350292542	WITHOUT_CLASSIFICATION	2.649707458435182E-7	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999999363559253	WITHOUT_CLASSIFICATION	6.364407462963523E-8	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999997776191826	WITHOUT_CLASSIFICATION	2.2238081745722527E-7	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999999887006805	WITHOUT_CLASSIFICATION	1.1299319471689218E-8	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999991614059835	WITHOUT_CLASSIFICATION	8.385940165745282E-7	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999999527015935	WITHOUT_CLASSIFICATION	4.72984065052355E-8	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999852080335502	WITHOUT_CLASSIFICATION	1.4791966449897937E-5	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9994013327716017	WITHOUT_CLASSIFICATION	5.986672283983283E-4	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.999998854433511	WITHOUT_CLASSIFICATION	1.1455664890986423E-6	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.999999185733156	WITHOUT_CLASSIFICATION	8.142668438566219E-7	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.999999978490402	WITHOUT_CLASSIFICATION	2.1509598065892744E-8	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999123502891449	WITHOUT_CLASSIFICATION	8.764971085500444E-5	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.999992994931024	WITHOUT_CLASSIFICATION	7.005068976059788E-6	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999996083796316	WITHOUT_CLASSIFICATION	3.916203683779038E-7	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.9999731037237586	WITHOUT_CLASSIFICATION	2.689627624147508E-5	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999803936163857	WITHOUT_CLASSIFICATION	1.9606383614280066E-5	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999994749421973	WITHOUT_CLASSIFICATION	5.250578027498559E-7	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9999997531163932	WITHOUT_CLASSIFICATION	2.468836067970995E-7	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999984705349859	WITHOUT_CLASSIFICATION	1.5294650140379512E-6	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999479768721059	WITHOUT_CLASSIFICATION	5.202312789409779E-5	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999960631009704	WITHOUT_CLASSIFICATION	3.936899029569329E-6	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999999942185938	WITHOUT_CLASSIFICATION	5.781406227903797E-9	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999924464104171	WITHOUT_CLASSIFICATION	7.55358958294053E-6	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999999197218614	WITHOUT_CLASSIFICATION	8.027813855533286E-8	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999995797971878	WITHOUT_CLASSIFICATION	4.2020281215862227E-7	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999999893468927	WITHOUT_CLASSIFICATION	1.0653107232058643E-8	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999999938916861	WITHOUT_CLASSIFICATION	6.108313832715274E-9	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999999486720872	WITHOUT_CLASSIFICATION	5.132791287913589E-8	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999999486720872	WITHOUT_CLASSIFICATION	5.132791287913589E-8	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999999882140722	WITHOUT_CLASSIFICATION	1.1785927738843529E-8	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999999882140722	WITHOUT_CLASSIFICATION	1.1785927738843529E-8	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.99999938186837	WITHOUT_CLASSIFICATION	6.181316299578066E-7	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.99999938186837	WITHOUT_CLASSIFICATION	6.181316299578066E-7	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999884736644012	WITHOUT_CLASSIFICATION	1.1526335598762988E-5	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999939692552281	WITHOUT_CLASSIFICATION	6.0307447719215045E-6	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999999981602077	WITHOUT_CLASSIFICATION	1.8397923753286974E-9	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999999707195271	WITHOUT_CLASSIFICATION	2.9280473015183678E-8	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.999996667519366	WITHOUT_CLASSIFICATION	3.3324806339074944E-6	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.999999481480093	WITHOUT_CLASSIFICATION	5.185199070984989E-7	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9999993822372467	WITHOUT_CLASSIFICATION	6.177627533319043E-7	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999838286032	WITHOUT_CLASSIFICATION	1.6171396788135964E-8	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999999999940002	WITHOUT_CLASSIFICATION	5.999872755441943E-12	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.999999999289037	WITHOUT_CLASSIFICATION	7.10962989598379E-10	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999999702378302	WITHOUT_CLASSIFICATION	2.9762169828361442E-8	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999999508516842	WITHOUT_CLASSIFICATION	4.9148315746006324E-8	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.999999992023615	WITHOUT_CLASSIFICATION	7.976385098076789E-9	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999999988752393	WITHOUT_CLASSIFICATION	1.1247607242478682E-9	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999912092741677	WITHOUT_CLASSIFICATION	8.790725832228296E-6	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9999998546244575	WITHOUT_CLASSIFICATION	1.4537554261331773E-7	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999988261794631	WITHOUT_CLASSIFICATION	1.1738205369215448E-6	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999999857607244	WITHOUT_CLASSIFICATION	1.4239275557768495E-8	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9997382844266604	WITHOUT_CLASSIFICATION	2.617155733396738E-4	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9999991965196211	WITHOUT_CLASSIFICATION	8.034803788962951E-7	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9999984557845953	WITHOUT_CLASSIFICATION	1.5442154046458837E-6	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999943001494149	WITHOUT_CLASSIFICATION	5.699850585086519E-6	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999960936023401	WITHOUT_CLASSIFICATION	3.9063976599107E-6	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999999628976082	WITHOUT_CLASSIFICATION	3.710239185597287E-8	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999999975463574	WITHOUT_CLASSIFICATION	2.4536425489027017E-9	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999999975087902	WITHOUT_CLASSIFICATION	2.4912097459575696E-9	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9999999330937259	WITHOUT_CLASSIFICATION	6.690627399665314E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999119511979	WITHOUT_CLASSIFICATION	8.804880215257424E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999119511979	WITHOUT_CLASSIFICATION	8.804880215257424E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999119511979	WITHOUT_CLASSIFICATION	8.804880215257424E-8	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999985020354851	WITHOUT_CLASSIFICATION	1.497964514960342E-6	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999985020354851	WITHOUT_CLASSIFICATION	1.497964514960342E-6	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999998775123898	WITHOUT_CLASSIFICATION	1.2248761012030366E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999998775123898	WITHOUT_CLASSIFICATION	1.2248761012030366E-7	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999999999036883	WITHOUT_CLASSIFICATION	9.631175874887892E-11	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9999605538744044	WITHOUT_CLASSIFICATION	3.9446125595473666E-5	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999997155608072	WITHOUT_CLASSIFICATION	2.8443919270320353E-7	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.999999990578323	WITHOUT_CLASSIFICATION	9.421676897265082E-9	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999119511979	WITHOUT_CLASSIFICATION	8.804880215257424E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999119511979	WITHOUT_CLASSIFICATION	8.804880215257424E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999119511979	WITHOUT_CLASSIFICATION	8.804880215257424E-8	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999985020354851	WITHOUT_CLASSIFICATION	1.497964514960342E-6	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999985020354851	WITHOUT_CLASSIFICATION	1.497964514960342E-6	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999985020354851	WITHOUT_CLASSIFICATION	1.497964514960342E-6	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999998775123898	WITHOUT_CLASSIFICATION	1.2248761012030366E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999998775123898	WITHOUT_CLASSIFICATION	1.2248761012030366E-7	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999999996990987	WITHOUT_CLASSIFICATION	3.009012964357297E-10	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999999999103297	WITHOUT_CLASSIFICATION	8.967025220305298E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999896252	WITHOUT_CLASSIFICATION	1.0374816395508783E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999896252	WITHOUT_CLASSIFICATION	1.0374816395508783E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999896252	WITHOUT_CLASSIFICATION	1.0374816395508783E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999896252	WITHOUT_CLASSIFICATION	1.0374816395508783E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999896252	WITHOUT_CLASSIFICATION	1.0374816395508783E-11	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999995319233327	WITHOUT_CLASSIFICATION	4.6807666728136764E-7	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999996873994418	WITHOUT_CLASSIFICATION	3.1260055823567156E-7	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999565815993635	WITHOUT_CLASSIFICATION	4.341840063648344E-5	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999967433561096	WITHOUT_CLASSIFICATION	3.2566438904381406E-6	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.999997590206038	WITHOUT_CLASSIFICATION	2.4097939620274715E-6	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999997823628423	WITHOUT_CLASSIFICATION	2.1763715775456235E-7	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9997516797196365	WITHOUT_CLASSIFICATION	2.4832028036351567E-4	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999998976857202	WITHOUT_CLASSIFICATION	1.023142798381505E-7	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999988730671799	WITHOUT_CLASSIFICATION	1.1269328200791434E-6	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999998040726231	WITHOUT_CLASSIFICATION	1.9592737682462667E-7	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999954344963364	WITHOUT_CLASSIFICATION	4.565503663660454E-6	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.999999997879869	WITHOUT_CLASSIFICATION	2.1201310450440525E-9	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999988006297659	WITHOUT_CLASSIFICATION	1.1993702341433226E-6	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999998053567044	WITHOUT_CLASSIFICATION	1.9464329559809107E-7	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999999991831322	WITHOUT_CLASSIFICATION	8.168677170276511E-10	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999969284533841	WITHOUT_CLASSIFICATION	3.0715466159136482E-6	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999969284533841	WITHOUT_CLASSIFICATION	3.0715466159136482E-6	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999969284533841	WITHOUT_CLASSIFICATION	3.0715466159136482E-6	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.999999993117017	WITHOUT_CLASSIFICATION	6.882982939695645E-9	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999999931179333	WITHOUT_CLASSIFICATION	6.882066706748838E-9	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.999977246241506	WITHOUT_CLASSIFICATION	2.2753758494027962E-5	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999999998244	WITHOUT_CLASSIFICATION	1.7552676302704724E-13	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999999904613845	WITHOUT_CLASSIFICATION	9.538615543786083E-9	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999983817742062	WITHOUT_CLASSIFICATION	1.6182257938316814E-6	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999997904369193	WITHOUT_CLASSIFICATION	2.0956308056792594E-7	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.999999621383694	WITHOUT_CLASSIFICATION	3.7861630592385436E-7	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999991787645084	WITHOUT_CLASSIFICATION	8.212354915487245E-7	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999999810762772	WITHOUT_CLASSIFICATION	1.8923722878641214E-8	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.999999996263574	WITHOUT_CLASSIFICATION	3.7364259228737265E-9	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999999894564321	WITHOUT_CLASSIFICATION	1.0543567937723178E-8	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999996641008014	WITHOUT_CLASSIFICATION	3.3589919860664377E-7	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9999998785925618	WITHOUT_CLASSIFICATION	1.2140743814511096E-7	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9999999233699287	WITHOUT_CLASSIFICATION	7.66300713616457E-8	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999996998506147	WITHOUT_CLASSIFICATION	3.0014938530775665E-7	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999999154709963	WITHOUT_CLASSIFICATION	8.452900370413206E-8	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999999836944662	WITHOUT_CLASSIFICATION	1.630553373841274E-8	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9999997286935749	WITHOUT_CLASSIFICATION	2.7130642510491325E-7	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999983201458891	WITHOUT_CLASSIFICATION	1.6798541110095468E-6	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999984906631868	WITHOUT_CLASSIFICATION	1.5093368132327137E-6	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999987844997265	WITHOUT_CLASSIFICATION	1.2155002736390335E-6	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9998830316975023	WITHOUT_CLASSIFICATION	1.1696830249778731E-4	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999998752402983	WITHOUT_CLASSIFICATION	1.2475970176421535E-7	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9999997613389335	WITHOUT_CLASSIFICATION	2.3866106650060494E-7	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9999998030783385	WITHOUT_CLASSIFICATION	1.9692166152189253E-7	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9999999076673891	WITHOUT_CLASSIFICATION	9.233261086694903E-8	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9999986689040681	WITHOUT_CLASSIFICATION	1.331095931964998E-6	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999946294499922	WITHOUT_CLASSIFICATION	5.37055000779365E-6	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9999994660533628	WITHOUT_CLASSIFICATION	5.339466372593187E-7	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9999994430522279	WITHOUT_CLASSIFICATION	5.5694777218403E-7	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9999997278680899	WITHOUT_CLASSIFICATION	2.721319100730053E-7	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.999999686011879	WITHOUT_CLASSIFICATION	3.139881210619209E-7	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.999999700816919	WITHOUT_CLASSIFICATION	2.9918308101548044E-7	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.999999652890783	WITHOUT_CLASSIFICATION	3.47109217078119E-7	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9999996969966372	WITHOUT_CLASSIFICATION	3.0300336285107575E-7	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999997638041549	WITHOUT_CLASSIFICATION	2.3619584506686613E-7	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.999999995944657	WITHOUT_CLASSIFICATION	4.055343033635711E-9	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9996575525196624	WITHOUT_CLASSIFICATION	3.424474803375786E-4	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999550153361183	WITHOUT_CLASSIFICATION	4.498466388171882E-5	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999999997422415	WITHOUT_CLASSIFICATION	2.5775855081017636E-10	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999971663227323	WITHOUT_CLASSIFICATION	2.8336772677589355E-6	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999555081491154	WITHOUT_CLASSIFICATION	4.4491850884736074E-5	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999931605873675	WITHOUT_CLASSIFICATION	6.839412632455523E-6	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.999999960166913	WITHOUT_CLASSIFICATION	3.98330871461562E-8	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999987565108349	WITHOUT_CLASSIFICATION	1.2434891651013284E-6	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999983365494765	WITHOUT_CLASSIFICATION	1.663450523639289E-6	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999983365494765	WITHOUT_CLASSIFICATION	1.663450523639289E-6	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999998503923586	WITHOUT_CLASSIFICATION	1.4960764142965452E-7	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999988640817854	WITHOUT_CLASSIFICATION	1.1359182145385806E-6	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999992343778353	WITHOUT_CLASSIFICATION	7.65622164555747E-7	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999999936583155	WITHOUT_CLASSIFICATION	6.341684550692756E-9	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999930968461082	WITHOUT_CLASSIFICATION	6.9031538918680325E-6	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999998754564474	WITHOUT_CLASSIFICATION	1.2454355265113095E-7	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999999695614816	WITHOUT_CLASSIFICATION	3.043851836907162E-8	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999999916583	WITHOUT_CLASSIFICATION	8.34161728500842E-12	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999995037455113	WITHOUT_CLASSIFICATION	4.96254488768445E-7	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999960237055379	WITHOUT_CLASSIFICATION	3.97629446209227E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999768881764	WITHOUT_CLASSIFICATION	2.311182356733105E-8	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999768881764	WITHOUT_CLASSIFICATION	2.311182356733105E-8	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999768881764	WITHOUT_CLASSIFICATION	2.311182356733105E-8	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999768881764	WITHOUT_CLASSIFICATION	2.311182356733105E-8	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9999958926031052	WITHOUT_CLASSIFICATION	4.107396894797775E-6	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9999999247695943	WITHOUT_CLASSIFICATION	7.523040576234529E-8	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9999977898643977	WITHOUT_CLASSIFICATION	2.2101356022328066E-6	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9999845684897889	WITHOUT_CLASSIFICATION	1.543151021116468E-5	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999724646356234	WITHOUT_CLASSIFICATION	2.7535364376610915E-5	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999996923420097	WITHOUT_CLASSIFICATION	3.076579903306577E-7	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999998019580449	WITHOUT_CLASSIFICATION	1.9804195499664587E-7	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999992507132249	WITHOUT_CLASSIFICATION	7.492867752071527E-7	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999992507132249	WITHOUT_CLASSIFICATION	7.492867752071527E-7	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999999728158597	WITHOUT_CLASSIFICATION	2.7184140371491573E-8	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999971597854053	WITHOUT_CLASSIFICATION	2.840214594763793E-6	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999805582197	WITHOUT_CLASSIFICATION	1.9441780302440303E-8	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999871245505	WITHOUT_CLASSIFICATION	1.2875449510879419E-8	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999871245505	WITHOUT_CLASSIFICATION	1.2875449510879419E-8	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999999979933863	WITHOUT_CLASSIFICATION	2.0066137400380897E-9	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999136414622374	WITHOUT_CLASSIFICATION	8.635853776255893E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999136414622374	WITHOUT_CLASSIFICATION	8.635853776255893E-5	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999999678734848	WITHOUT_CLASSIFICATION	3.21265152513452E-8	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999999993014789	WITHOUT_CLASSIFICATION	6.985211371050162E-10	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999691376512	WITHOUT_CLASSIFICATION	3.086234877019674E-8	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999938794407756	WITHOUT_CLASSIFICATION	6.120559224435037E-6	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9674804627770419	WITHOUT_CLASSIFICATION	0.03251953722295809	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999773744392	WITHOUT_CLASSIFICATION	2.2625560735972924E-8	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.999526567059928	WITHOUT_CLASSIFICATION	4.734329400720012E-4	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9999796450912386	WITHOUT_CLASSIFICATION	2.035490876140091E-5	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999995394642082	WITHOUT_CLASSIFICATION	4.6053579175507873E-7	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999999949154253	WITHOUT_CLASSIFICATION	5.084574579671632E-9	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999999387735141	WITHOUT_CLASSIFICATION	6.122648597906874E-8	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999993919731212	WITHOUT_CLASSIFICATION	6.080268789332248E-7	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.999993520784911	WITHOUT_CLASSIFICATION	6.479215089042164E-6	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999954419136281	WITHOUT_CLASSIFICATION	4.558086371833253E-6	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999997683167369	WITHOUT_CLASSIFICATION	2.3168326312641247E-7	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999985390555857	WITHOUT_CLASSIFICATION	1.4609444142897734E-6	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9999992816371788	WITHOUT_CLASSIFICATION	7.183628211463423E-7	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.99999983247198	WITHOUT_CLASSIFICATION	1.6752802004801402E-7	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999643755522	WITHOUT_CLASSIFICATION	3.5624447858663446E-8	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999903108812302	WITHOUT_CLASSIFICATION	9.689118769665118E-6	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999790001735391	WITHOUT_CLASSIFICATION	2.0999826460835952E-5	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999999641178667	WITHOUT_CLASSIFICATION	3.5882133244268694E-8	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999999656967219	WITHOUT_CLASSIFICATION	3.43032781593711E-8	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999981545061991	WITHOUT_CLASSIFICATION	1.8454938008525403E-6	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999991477471286	WITHOUT_CLASSIFICATION	8.522528713778427E-7	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999999791624438	WITHOUT_CLASSIFICATION	2.0837556235329792E-8	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.999999576416334	WITHOUT_CLASSIFICATION	4.235836661380272E-7	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999999465673611	WITHOUT_CLASSIFICATION	5.343263894658751E-8	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999997857693	WITHOUT_CLASSIFICATION	2.142308381090251E-10	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999997760881957	WITHOUT_CLASSIFICATION	2.2391180434284673E-7	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9999996615696333	WITHOUT_CLASSIFICATION	3.3843036674170027E-7	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999999283734934	WITHOUT_CLASSIFICATION	7.162650664098148E-8	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.8543729905141088	WITHOUT_CLASSIFICATION	0.14562700948589125	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999984358083688	WITHOUT_CLASSIFICATION	1.5641916312454583E-6	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999992386293248	WITHOUT_CLASSIFICATION	7.613706752639751E-7	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999999923267252	WITHOUT_CLASSIFICATION	7.673274682662683E-9	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999995670807874	WITHOUT_CLASSIFICATION	4.3291921268994136E-7	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999999660102541	WITHOUT_CLASSIFICATION	3.398974589451819E-8	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999995823841938	WITHOUT_CLASSIFICATION	4.1761580621256947E-7	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999999923267252	WITHOUT_CLASSIFICATION	7.673274682662683E-9	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999995670807874	WITHOUT_CLASSIFICATION	4.3291921268994136E-7	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999991485075782	WITHOUT_CLASSIFICATION	8.514924218207718E-7	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999974619614398	WITHOUT_CLASSIFICATION	2.5380385602911064E-6	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999974619614398	WITHOUT_CLASSIFICATION	2.5380385602911064E-6	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999038846845547	WITHOUT_CLASSIFICATION	9.611531544520679E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.999999991850363	WITHOUT_CLASSIFICATION	8.149636903508105E-9	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999789602758	WITHOUT_CLASSIFICATION	2.1039724149987902E-8	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999999109740371	WITHOUT_CLASSIFICATION	8.902596291257101E-8	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998205760547537	WITHOUT_CLASSIFICATION	1.7942394524627462E-4	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.999999135929786	WITHOUT_CLASSIFICATION	8.640702139776631E-7	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.999935806829571	WITHOUT_CLASSIFICATION	6.419317042906519E-5	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999471006175961	WITHOUT_CLASSIFICATION	5.289938240401737E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999931704613694	WITHOUT_CLASSIFICATION	6.829538630615189E-6	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999995751529128	WITHOUT_CLASSIFICATION	4.2484708709267114E-7	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999992928356983	WITHOUT_CLASSIFICATION	7.071643015913424E-7	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999998888178274	WITHOUT_CLASSIFICATION	1.1118217256603294E-7	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999999942843423	WITHOUT_CLASSIFICATION	5.7156577303572156E-9	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999914015852	WITHOUT_CLASSIFICATION	8.59841465045415E-9	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999914015852	WITHOUT_CLASSIFICATION	8.59841465045415E-9	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999501723955232	WITHOUT_CLASSIFICATION	4.982760447677629E-5	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999501723955232	WITHOUT_CLASSIFICATION	4.982760447677629E-5	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999999538616108	WITHOUT_CLASSIFICATION	4.613838930426391E-8	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999994731601469	WITHOUT_CLASSIFICATION	5.268398530587449E-7	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999938038297512	WITHOUT_CLASSIFICATION	6.1961702487325816E-6	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999999929936205	WITHOUT_CLASSIFICATION	7.006379408971891E-9	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999948608721858	WITHOUT_CLASSIFICATION	5.1391278141842804E-6	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999994874735796	WITHOUT_CLASSIFICATION	5.125264204781286E-7	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999789602758	WITHOUT_CLASSIFICATION	2.1039724149987902E-8	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999999109740371	WITHOUT_CLASSIFICATION	8.902596291257101E-8	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999931704613694	WITHOUT_CLASSIFICATION	6.829538630615189E-6	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999995751529128	WITHOUT_CLASSIFICATION	4.2484708709267114E-7	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999669013531247	WITHOUT_CLASSIFICATION	3.3098646875156705E-5	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999913073358021	WITHOUT_CLASSIFICATION	8.69266419793176E-6	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.999999470761437	WITHOUT_CLASSIFICATION	5.292385629877768E-7	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999999602102999	WITHOUT_CLASSIFICATION	3.978970001813043E-8	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999979206899209	WITHOUT_CLASSIFICATION	2.079310079023241E-6	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.999999997687661	WITHOUT_CLASSIFICATION	2.3123390668595055E-9	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999995058678998	WITHOUT_CLASSIFICATION	4.941321001693414E-7	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999996420775179	WITHOUT_CLASSIFICATION	3.579224820577081E-7	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.999991815534822	WITHOUT_CLASSIFICATION	8.184465178085638E-6	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999997441560551	WITHOUT_CLASSIFICATION	2.558439448200905E-7	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999983040597	WITHOUT_CLASSIFICATION	1.6959402409622512E-9	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999999986892917	WITHOUT_CLASSIFICATION	1.310708290643692E-9	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.9999989765740149	WITHOUT_CLASSIFICATION	1.0234259850727419E-6	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999998562714929	WITHOUT_CLASSIFICATION	1.4372850698836003E-7	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999940635955058	WITHOUT_CLASSIFICATION	5.936404494163292E-6	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999999773783907	WITHOUT_CLASSIFICATION	2.262160921509755E-8	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999996274005828	WITHOUT_CLASSIFICATION	3.7259941724551863E-7	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999999723371116	WITHOUT_CLASSIFICATION	2.7662888334661363E-8	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999999977575889	WITHOUT_CLASSIFICATION	2.2424110386483116E-9	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999999941322311	WITHOUT_CLASSIFICATION	5.867768994726791E-9	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999999819955343	WITHOUT_CLASSIFICATION	1.8004465734663296E-8	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999999819955343	WITHOUT_CLASSIFICATION	1.8004465734663296E-8	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999994664827555	WITHOUT_CLASSIFICATION	5.335172444066347E-7	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999992715826977	WITHOUT_CLASSIFICATION	7.284173021564448E-7	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999999998124818	WITHOUT_CLASSIFICATION	1.8751814497973795E-10	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999998983920306	WITHOUT_CLASSIFICATION	1.0160796929059313E-7	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999998983920306	WITHOUT_CLASSIFICATION	1.0160796929059313E-7	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.999999470761437	WITHOUT_CLASSIFICATION	5.292385629877768E-7	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999994536309973	WITHOUT_CLASSIFICATION	5.463690027125597E-7	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999999427783147	WITHOUT_CLASSIFICATION	5.722168524603133E-8	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999997656391355	WITHOUT_CLASSIFICATION	2.343608645195405E-7	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999996517898156	WITHOUT_CLASSIFICATION	3.482101843439489E-7	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999835205396	WITHOUT_CLASSIFICATION	1.6479460260722283E-8	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999975075482643	WITHOUT_CLASSIFICATION	2.492451735679577E-6	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999999814097679	WITHOUT_CLASSIFICATION	1.85902321306444E-8	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9999636245688157	WITHOUT_CLASSIFICATION	3.637543118422578E-5	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999978265113324	WITHOUT_CLASSIFICATION	2.1734886676213627E-6	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999994330312775	WITHOUT_CLASSIFICATION	5.669687224496587E-7	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999997689475649	WITHOUT_CLASSIFICATION	2.3105243496002906E-7	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999994194137887	WITHOUT_CLASSIFICATION	5.805862112835101E-7	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999993757675172	WITHOUT_CLASSIFICATION	6.242324828577903E-7	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999989488711423	WITHOUT_CLASSIFICATION	1.0511288577981117E-6	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9999982073008944	WITHOUT_CLASSIFICATION	1.7926991056568108E-6	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999999840142132	WITHOUT_CLASSIFICATION	1.5985786729619864E-8	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9999998835380924	WITHOUT_CLASSIFICATION	1.1646190754121127E-7	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999999517669969	WITHOUT_CLASSIFICATION	4.823300325878331E-8	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.999999998839124	WITHOUT_CLASSIFICATION	1.1608759987216935E-9	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999974731493	WITHOUT_CLASSIFICATION	2.526850666307506E-9	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999991027993117	WITHOUT_CLASSIFICATION	8.972006883473612E-7	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999959580264209	WITHOUT_CLASSIFICATION	4.0419735790249845E-6	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999995481798069	WITHOUT_CLASSIFICATION	4.5182019314987554E-7	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999894832703	WITHOUT_CLASSIFICATION	1.0516729669693693E-8	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999998205497026	WITHOUT_CLASSIFICATION	1.7945029731269836E-7	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999987992451018	WITHOUT_CLASSIFICATION	1.2007548982623315E-6	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999989640951475	WITHOUT_CLASSIFICATION	1.0359048523678238E-6	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999639655114	WITHOUT_CLASSIFICATION	3.603448860956987E-8	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999988330513971	WITHOUT_CLASSIFICATION	1.1669486028284623E-6	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999518644208	WITHOUT_CLASSIFICATION	4.8135579155782226E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999518644208	WITHOUT_CLASSIFICATION	4.8135579155782226E-8	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999999974673719	WITHOUT_CLASSIFICATION	2.532628067375817E-9	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999994095032227	WITHOUT_CLASSIFICATION	5.904967772604103E-7	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999994095032227	WITHOUT_CLASSIFICATION	5.904967772604103E-7	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999998672016105	WITHOUT_CLASSIFICATION	1.327983894944262E-7	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999998672016105	WITHOUT_CLASSIFICATION	1.327983894944262E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999995906624785	WITHOUT_CLASSIFICATION	4.0933752150007427E-7	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999999547500378	WITHOUT_CLASSIFICATION	4.5249962235257604E-8	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999989290242869	WITHOUT_CLASSIFICATION	1.0709757130699906E-6	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999998348967787	WITHOUT_CLASSIFICATION	1.6510322136764462E-7	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999857527758	WITHOUT_CLASSIFICATION	1.4247224181480757E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998168475521	WITHOUT_CLASSIFICATION	1.8315244795813188E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998168475521	WITHOUT_CLASSIFICATION	1.8315244795813188E-7	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999894832703	WITHOUT_CLASSIFICATION	1.0516729669693693E-8	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999894832703	WITHOUT_CLASSIFICATION	1.0516729669693693E-8	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999894832703	WITHOUT_CLASSIFICATION	1.0516729669693693E-8	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999998205497026	WITHOUT_CLASSIFICATION	1.7945029731269836E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999518644208	WITHOUT_CLASSIFICATION	4.8135579155782226E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999518644208	WITHOUT_CLASSIFICATION	4.8135579155782226E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999518644208	WITHOUT_CLASSIFICATION	4.8135579155782226E-8	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999995906624785	WITHOUT_CLASSIFICATION	4.0933752150007427E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999995906624785	WITHOUT_CLASSIFICATION	4.0933752150007427E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999995906624785	WITHOUT_CLASSIFICATION	4.0933752150007427E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999998348967787	WITHOUT_CLASSIFICATION	1.6510322136764462E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999998348967787	WITHOUT_CLASSIFICATION	1.6510322136764462E-7	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999994871376989	WITHOUT_CLASSIFICATION	5.128623011263911E-7	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999979705189751	WITHOUT_CLASSIFICATION	2.029481024830981E-6	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999986804717707	WITHOUT_CLASSIFICATION	1.3195282293739496E-6	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9994339652104456	WITHOUT_CLASSIFICATION	5.66034789554506E-4	IMPLEMENTATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9997966930450516	WITHOUT_CLASSIFICATION	2.033069549483307E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.999998670104196	WITHOUT_CLASSIFICATION	1.329895804111372E-6	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.999998670104196	WITHOUT_CLASSIFICATION	1.329895804111372E-6	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999999872884213	WITHOUT_CLASSIFICATION	1.2711578640982924E-8	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999975075482643	WITHOUT_CLASSIFICATION	2.492451735679577E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999975075482643	WITHOUT_CLASSIFICATION	2.492451735679577E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999975075482643	WITHOUT_CLASSIFICATION	2.492451735679577E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999975075482643	WITHOUT_CLASSIFICATION	2.492451735679577E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999975075482643	WITHOUT_CLASSIFICATION	2.492451735679577E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999911880575	WITHOUT_CLASSIFICATION	8.811942470004138E-9	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999911880575	WITHOUT_CLASSIFICATION	8.811942470004138E-9	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999911880575	WITHOUT_CLASSIFICATION	8.811942470004138E-9	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999999977047815	WITHOUT_CLASSIFICATION	2.2952184775687604E-9	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999990706614537	WITHOUT_CLASSIFICATION	9.293385464071343E-7	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999998205497026	WITHOUT_CLASSIFICATION	1.7945029731269836E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999995906624785	WITHOUT_CLASSIFICATION	4.0933752150007427E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999995906624785	WITHOUT_CLASSIFICATION	4.0933752150007427E-7	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999975075482643	WITHOUT_CLASSIFICATION	2.492451735679577E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999975075482643	WITHOUT_CLASSIFICATION	2.492451735679577E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999911880575	WITHOUT_CLASSIFICATION	8.811942470004138E-9	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999999872884213	WITHOUT_CLASSIFICATION	1.2711578640982924E-8	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999949024335	WITHOUT_CLASSIFICATION	5.0975664602168505E-9	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.999999722252467	WITHOUT_CLASSIFICATION	2.7774753290004694E-7	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999999900569403	WITHOUT_CLASSIFICATION	9.943059717413332E-9	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999995913772796	WITHOUT_CLASSIFICATION	4.086227205058273E-7	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999994947475509	WITHOUT_CLASSIFICATION	5.052524491715579E-7	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999998598739168	WITHOUT_CLASSIFICATION	1.401260830574392E-7	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999866542697452	WITHOUT_CLASSIFICATION	1.3345730254753433E-5	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999994311379917	WITHOUT_CLASSIFICATION	5.688620083832452E-7	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999985817660756	WITHOUT_CLASSIFICATION	1.4182339244407136E-6	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999998870252079	WITHOUT_CLASSIFICATION	1.1297479202576826E-7	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999746783433953	WITHOUT_CLASSIFICATION	2.532165660475941E-5	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999999796753031	WITHOUT_CLASSIFICATION	2.0324696937919206E-8	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999962340331096	WITHOUT_CLASSIFICATION	3.765966890593319E-6	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9987842718107629	WITHOUT_CLASSIFICATION	0.0012157281892370248	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999990601738229	WITHOUT_CLASSIFICATION	9.39826177109473E-7	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9998331159601372	WITHOUT_CLASSIFICATION	1.6688403986271218E-4	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999983689858385	WITHOUT_CLASSIFICATION	1.6310141615694898E-6	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999999927363126	WITHOUT_CLASSIFICATION	7.26368741753419E-9	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999354046407031	WITHOUT_CLASSIFICATION	6.459535929694905E-5	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999999753754526	WITHOUT_CLASSIFICATION	2.4624547320060516E-8	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999772060945795	WITHOUT_CLASSIFICATION	2.2793905420454598E-5	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999997174758	WITHOUT_CLASSIFICATION	2.8252423841314373E-10	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999997526882	WITHOUT_CLASSIFICATION	2.473118215909205E-10	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999995716120892	WITHOUT_CLASSIFICATION	4.28387910869927E-7	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999997536034699	WITHOUT_CLASSIFICATION	2.4639653008299525E-7	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999984022040435	WITHOUT_CLASSIFICATION	1.5977959565572589E-6	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9999995398561083	WITHOUT_CLASSIFICATION	4.601438916606689E-7	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999999961027694	WITHOUT_CLASSIFICATION	3.897230559520161E-9	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999991731595267	WITHOUT_CLASSIFICATION	8.268404733603285E-7	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999773031827016	WITHOUT_CLASSIFICATION	2.2696817298308188E-5	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999999991184333	WITHOUT_CLASSIFICATION	8.81566764475947E-10	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999692617569	WITHOUT_CLASSIFICATION	3.0738243002848607E-8	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999999999542208	WITHOUT_CLASSIFICATION	4.57791179049148E-11	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999938282672	WITHOUT_CLASSIFICATION	6.171732764823962E-9	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999949024335	WITHOUT_CLASSIFICATION	5.0975664602168505E-9	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.999999959316209	WITHOUT_CLASSIFICATION	4.0683791013078624E-8	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999999883457971	WITHOUT_CLASSIFICATION	1.1654202913718984E-8	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999999380201007	WITHOUT_CLASSIFICATION	6.197989925156615E-8	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999998982087492	WITHOUT_CLASSIFICATION	1.017912506962455E-7	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999998982087492	WITHOUT_CLASSIFICATION	1.017912506962455E-7	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.999960545698798	WITHOUT_CLASSIFICATION	3.9454301201919436E-5	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.999960545698798	WITHOUT_CLASSIFICATION	3.9454301201919436E-5	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999999990451149	WITHOUT_CLASSIFICATION	9.548851151100322E-10	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999999469905728	WITHOUT_CLASSIFICATION	5.300942718921835E-8	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.999999881768443	WITHOUT_CLASSIFICATION	1.182315569846758E-7	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999995015935772	WITHOUT_CLASSIFICATION	4.984064227903256E-7	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999999004909893	WITHOUT_CLASSIFICATION	9.950901061205222E-8	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999949545322323	WITHOUT_CLASSIFICATION	5.045467767718901E-6	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999999900187507	WITHOUT_CLASSIFICATION	9.981249253210107E-9	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999982624262255	WITHOUT_CLASSIFICATION	1.7375737745754522E-6	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9998827815504187	WITHOUT_CLASSIFICATION	1.1721844958135023E-4	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999989926897	WITHOUT_CLASSIFICATION	1.0073103420688176E-9	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999997670899	WITHOUT_CLASSIFICATION	2.3291021470696114E-10	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999994255919205	WITHOUT_CLASSIFICATION	5.744080795336916E-7	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999994255919205	WITHOUT_CLASSIFICATION	5.744080795336916E-7	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999999998551388	WITHOUT_CLASSIFICATION	1.4486132588720183E-10	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999997791633616	WITHOUT_CLASSIFICATION	2.208366384598591E-7	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.999999440487019	WITHOUT_CLASSIFICATION	5.595129809926931E-7	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.999999440487019	WITHOUT_CLASSIFICATION	5.595129809926931E-7	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999999949395977	WITHOUT_CLASSIFICATION	5.0604022702631005E-9	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999908027206	WITHOUT_CLASSIFICATION	9.197279404830542E-9	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999978635918748	WITHOUT_CLASSIFICATION	2.1364081251664387E-6	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.999999971192594	WITHOUT_CLASSIFICATION	2.880740595391069E-8	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999999694461299	WITHOUT_CLASSIFICATION	3.055387010176011E-8	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999998717909163	WITHOUT_CLASSIFICATION	1.282090838091869E-7	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9999934031373768	WITHOUT_CLASSIFICATION	6.5968626232419405E-6	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999818134348917	WITHOUT_CLASSIFICATION	1.8186565108247166E-5	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9998914933285312	WITHOUT_CLASSIFICATION	1.0850667146872147E-4	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9999998524764169	WITHOUT_CLASSIFICATION	1.4752358318808477E-7	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999998909341032	WITHOUT_CLASSIFICATION	1.090658967722899E-7	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999997905671617	WITHOUT_CLASSIFICATION	2.0943283832544323E-7	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999993689232464	WITHOUT_CLASSIFICATION	6.310767535686187E-7	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999995078905847	WITHOUT_CLASSIFICATION	4.921094153595026E-7	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999998961870139	WITHOUT_CLASSIFICATION	1.0381298608868295E-7	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999955991591697	WITHOUT_CLASSIFICATION	4.400840830385837E-6	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999989034480173	WITHOUT_CLASSIFICATION	1.0965519826580018E-6	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.999999659362862	WITHOUT_CLASSIFICATION	3.4063713810958235E-7	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999999998983772	WITHOUT_CLASSIFICATION	1.016228043580852E-10	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999987100506975	WITHOUT_CLASSIFICATION	1.2899493024274683E-6	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.5553206200318165	WITHOUT_CLASSIFICATION	0.4446793799681835	IMPLEMENTATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999991352288664	WITHOUT_CLASSIFICATION	8.647711335286984E-7	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999985045639618	WITHOUT_CLASSIFICATION	1.4954360382825024E-6	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999903463103322	WITHOUT_CLASSIFICATION	9.653689667731934E-6	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999992757882435	WITHOUT_CLASSIFICATION	7.242117563579447E-7	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999990410588726	WITHOUT_CLASSIFICATION	9.5894112737707E-7	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9999998042997803	WITHOUT_CLASSIFICATION	1.9570021971788047E-7	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999922334756215	WITHOUT_CLASSIFICATION	7.7665243785558E-6	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999999905275971	WITHOUT_CLASSIFICATION	9.472402824507216E-9	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999999997852488	WITHOUT_CLASSIFICATION	2.147511968918525E-10	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999999981854656	WITHOUT_CLASSIFICATION	1.8145345176053824E-9	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999999987505727	WITHOUT_CLASSIFICATION	1.2494272930106608E-9	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999999814284006	WITHOUT_CLASSIFICATION	1.8571599383929615E-8	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999982806873	WITHOUT_CLASSIFICATION	1.719312759957828E-9	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999982806873	WITHOUT_CLASSIFICATION	1.719312759957828E-9	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999999800820495	WITHOUT_CLASSIFICATION	1.991795051774319E-8	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999998977361065	WITHOUT_CLASSIFICATION	1.0226389343019471E-7	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999999971734633	WITHOUT_CLASSIFICATION	2.826536708752936E-9	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9999991539660515	WITHOUT_CLASSIFICATION	8.460339484171297E-7	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9999996762182449	WITHOUT_CLASSIFICATION	3.237817551354494E-7	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999994206004036	WITHOUT_CLASSIFICATION	5.793995964751029E-7	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999913227375521	WITHOUT_CLASSIFICATION	8.6772624479408E-6	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999961169765096	WITHOUT_CLASSIFICATION	3.883023490384045E-6	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999997913288046	WITHOUT_CLASSIFICATION	2.0867119542487064E-7	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.999999577486034	WITHOUT_CLASSIFICATION	4.2251396606885984E-7	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999999977502465	WITHOUT_CLASSIFICATION	2.249753492566232E-9	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9998625430790156	WITHOUT_CLASSIFICATION	1.3745692098445894E-4	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999300979359692	WITHOUT_CLASSIFICATION	6.990206403088102E-5	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999989117019836	WITHOUT_CLASSIFICATION	1.0882980164067791E-6	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999995184956629	WITHOUT_CLASSIFICATION	4.815043370967223E-7	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999998242765776	WITHOUT_CLASSIFICATION	1.7572342241336326E-7	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999998877848679	WITHOUT_CLASSIFICATION	1.1221513216528652E-7	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999984978544123	WITHOUT_CLASSIFICATION	1.502145587630774E-6	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9981901239539238	WITHOUT_CLASSIFICATION	0.0018098760460762155	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999670704970859	WITHOUT_CLASSIFICATION	3.29295029141677E-5	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999998426826721	WITHOUT_CLASSIFICATION	1.573173278655726E-7	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999999950194591	WITHOUT_CLASSIFICATION	4.980540831040378E-9	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999974414086088	WITHOUT_CLASSIFICATION	2.5585913912073763E-6	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999997054837341	WITHOUT_CLASSIFICATION	2.945162659238184E-7	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.999983767855641	WITHOUT_CLASSIFICATION	1.6232144358994373E-5	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9996910099787594	WITHOUT_CLASSIFICATION	3.0899002124067245E-4	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999997923844	WITHOUT_CLASSIFICATION	2.0761559422088768E-10	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999999962360832	WITHOUT_CLASSIFICATION	3.763916888594629E-9	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9999797703240473	WITHOUT_CLASSIFICATION	2.022967595270558E-5	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999983881846182	WITHOUT_CLASSIFICATION	1.6118153818425606E-6	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999998310894006	WITHOUT_CLASSIFICATION	1.689105995254394E-7	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.999764052405974	WITHOUT_CLASSIFICATION	2.359475940260056E-4	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999999624077585	WITHOUT_CLASSIFICATION	3.75922414830425E-8	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.999999996861225	WITHOUT_CLASSIFICATION	3.138774914925052E-9	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999995657997306	WITHOUT_CLASSIFICATION	4.3420026942620134E-7	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999999984281518	WITHOUT_CLASSIFICATION	1.5718481583061922E-9	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999999892198533	WITHOUT_CLASSIFICATION	1.0780146660273212E-8	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9999999082524993	WITHOUT_CLASSIFICATION	9.174750070093428E-8	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9999841194521764	WITHOUT_CLASSIFICATION	1.588054782360569E-5	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999999643312554	WITHOUT_CLASSIFICATION	3.5668744523251425E-8	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999967954280257	WITHOUT_CLASSIFICATION	3.2045719742715295E-6	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999999536531422	WITHOUT_CLASSIFICATION	4.634685767585317E-8	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999999536531422	WITHOUT_CLASSIFICATION	4.634685767585317E-8	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999997712937462	WITHOUT_CLASSIFICATION	2.287062539026373E-7	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999999916877987	WITHOUT_CLASSIFICATION	8.312201319920996E-9	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999998255455304	WITHOUT_CLASSIFICATION	1.7445446958012772E-7	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999951873334216	WITHOUT_CLASSIFICATION	4.8126665783495605E-6	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999989522640814	WITHOUT_CLASSIFICATION	1.0477359186606815E-6	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999999999989219	WITHOUT_CLASSIFICATION	1.078152377075082E-12	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999994055843	WITHOUT_CLASSIFICATION	5.944156896009468E-10	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999997779100176	WITHOUT_CLASSIFICATION	2.2208998244257965E-7	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999995599082042	WITHOUT_CLASSIFICATION	4.4009179586536027E-7	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999946346157693	WITHOUT_CLASSIFICATION	5.365384230671644E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999999983964745	WITHOUT_CLASSIFICATION	1.6035255754095576E-9	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999991430522286	WITHOUT_CLASSIFICATION	8.569477713991989E-7	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999999744037965	WITHOUT_CLASSIFICATION	2.5596203432145845E-8	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999971252468798	WITHOUT_CLASSIFICATION	2.8747531202096074E-6	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.999999561574505	WITHOUT_CLASSIFICATION	4.3842549494663693E-7	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9215868385632049	WITHOUT_CLASSIFICATION	0.0784131614367951	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999581205753	WITHOUT_CLASSIFICATION	4.187942468483072E-8	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999999952750892	WITHOUT_CLASSIFICATION	4.72491077116716E-9	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999999433845247	WITHOUT_CLASSIFICATION	5.661547535508136E-8	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9962232283991372	WITHOUT_CLASSIFICATION	0.003776771600862718	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999997057852983	WITHOUT_CLASSIFICATION	2.942147016423387E-7	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999995247828821	WITHOUT_CLASSIFICATION	4.7521711793870993E-7	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999979809929556	WITHOUT_CLASSIFICATION	2.019007044366065E-6	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999965888679644	WITHOUT_CLASSIFICATION	3.4111320355648343E-6	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999435748599	WITHOUT_CLASSIFICATION	5.6425140101695466E-8	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999834441461597	WITHOUT_CLASSIFICATION	1.6555853840263616E-5	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999999999996854	WITHOUT_CLASSIFICATION	3.146279170787811E-13	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999926163046727	WITHOUT_CLASSIFICATION	7.383695327354787E-6	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999953804776	WITHOUT_CLASSIFICATION	4.619522456520131E-9	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999994333452764	WITHOUT_CLASSIFICATION	5.666547234512526E-7	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999950544787	WITHOUT_CLASSIFICATION	4.9455212441772594E-9	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999866688647	WITHOUT_CLASSIFICATION	1.3331135414909759E-8	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999994333452764	WITHOUT_CLASSIFICATION	5.666547234512526E-7	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999999652532313	WITHOUT_CLASSIFICATION	3.474676863036596E-8	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999991477471286	WITHOUT_CLASSIFICATION	8.522528713778427E-7	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9714937654894107	WITHOUT_CLASSIFICATION	0.028506234510589323	IMPLEMENTATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9453058038792332	IMPLEMENTATION	0.05469419612076664	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999995364598118	WITHOUT_CLASSIFICATION	4.635401882325328E-7	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999896252	WITHOUT_CLASSIFICATION	1.0374816395508783E-11	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999999972891772	WITHOUT_CLASSIFICATION	2.7108227790992925E-9	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.999987482908328	WITHOUT_CLASSIFICATION	1.2517091671980295E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.999999991850363	WITHOUT_CLASSIFICATION	8.149636903508105E-9	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999987100506975	WITHOUT_CLASSIFICATION	1.2899493024274683E-6	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999986804717707	WITHOUT_CLASSIFICATION	1.3195282293739496E-6	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999995810611	WITHOUT_CLASSIFICATION	4.189388433193789E-10	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.999999298463174	WITHOUT_CLASSIFICATION	7.015368259857697E-7	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999998127157884	WITHOUT_CLASSIFICATION	1.872842115094231E-7	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999981132686176	WITHOUT_CLASSIFICATION	1.8867313823807532E-6	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9999998172360246	WITHOUT_CLASSIFICATION	1.827639752783156E-7	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9999898740247896	WITHOUT_CLASSIFICATION	1.0125975210462301E-5	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999869021734759	WITHOUT_CLASSIFICATION	1.3097826524254928E-5	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999999860170744	WITHOUT_CLASSIFICATION	1.3982925620364801E-8	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999987331442912	WITHOUT_CLASSIFICATION	1.2668557088506285E-6	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9999962400462574	WITHOUT_CLASSIFICATION	3.7599537426625955E-6	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9999982069191926	WITHOUT_CLASSIFICATION	1.7930808072956922E-6	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9999959009160292	WITHOUT_CLASSIFICATION	4.099083970772624E-6	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999993693920898	WITHOUT_CLASSIFICATION	6.306079102007823E-7	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999937179800105	WITHOUT_CLASSIFICATION	6.282019989520639E-6	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999996052645684	WITHOUT_CLASSIFICATION	3.9473543149430455E-7	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999991292137225	WITHOUT_CLASSIFICATION	8.707862775276648E-7	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999999997526037	WITHOUT_CLASSIFICATION	2.4739640286908085E-10	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.999999999895568	WITHOUT_CLASSIFICATION	1.0443205210562912E-10	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999999986119092	WITHOUT_CLASSIFICATION	1.388090802068014E-8	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999999986119092	WITHOUT_CLASSIFICATION	1.388090802068014E-8	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999964695537	WITHOUT_CLASSIFICATION	3.5304463644111787E-9	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999999810516	WITHOUT_CLASSIFICATION	1.894844495628914E-11	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.999968710357243	WITHOUT_CLASSIFICATION	3.1289642756981244E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.502251816546525	WITHOUT_CLASSIFICATION	0.49774818345347516	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.502251816546525	WITHOUT_CLASSIFICATION	0.49774818345347516	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.502251816546525	WITHOUT_CLASSIFICATION	0.49774818345347516	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.502251816546525	WITHOUT_CLASSIFICATION	0.49774818345347516	IMPLEMENTATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999999993435419	WITHOUT_CLASSIFICATION	6.564580761952338E-10	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999992325843939	WITHOUT_CLASSIFICATION	7.674156061108598E-7	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.999999915310029	WITHOUT_CLASSIFICATION	8.468997103216544E-8	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.5496676692843666	WITHOUT_CLASSIFICATION	0.4503323307156334	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999832483533707	WITHOUT_CLASSIFICATION	1.6751646629309108E-5	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.999999088848576	WITHOUT_CLASSIFICATION	9.111514239624305E-7	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999959547314226	WITHOUT_CLASSIFICATION	4.045268577474789E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999959547314226	WITHOUT_CLASSIFICATION	4.045268577474789E-6	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999999993252044	WITHOUT_CLASSIFICATION	6.747955065426931E-10	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9999994843415585	WITHOUT_CLASSIFICATION	5.156584415105985E-7	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999935351039037	WITHOUT_CLASSIFICATION	6.464896096379933E-6	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9991348453580073	WITHOUT_CLASSIFICATION	8.651546419927137E-4	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999908924949964	WITHOUT_CLASSIFICATION	9.107505003674264E-6	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999998859951582	WITHOUT_CLASSIFICATION	1.1400484168114476E-7	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.999999999703961	WITHOUT_CLASSIFICATION	2.96038896806359E-10	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999979533294141	WITHOUT_CLASSIFICATION	2.04667058586561E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999948630970082	WITHOUT_CLASSIFICATION	5.136902991782843E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999948630970082	WITHOUT_CLASSIFICATION	5.136902991782843E-6	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999866688647	WITHOUT_CLASSIFICATION	1.3331135414909759E-8	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9999993084031351	WITHOUT_CLASSIFICATION	6.915968648492471E-7	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9999993743506378	WITHOUT_CLASSIFICATION	6.256493622064249E-7	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999977310710657	WITHOUT_CLASSIFICATION	2.2689289342751956E-6	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999999819171	WITHOUT_CLASSIFICATION	1.8082939144624905E-11	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9999989757113856	WITHOUT_CLASSIFICATION	1.0242886143389477E-6	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999968648872269	WITHOUT_CLASSIFICATION	3.1351127730219173E-6	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999944248714837	WITHOUT_CLASSIFICATION	5.575128516277897E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999998602004498	WITHOUT_CLASSIFICATION	1.397995500260172E-7	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999998602004498	WITHOUT_CLASSIFICATION	1.397995500260172E-7	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999978478843768	WITHOUT_CLASSIFICATION	2.1521156231500533E-6	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.999999997451029	WITHOUT_CLASSIFICATION	2.5489711081098893E-9	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999999582973115	WITHOUT_CLASSIFICATION	4.170268855252518E-8	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999969444162096	WITHOUT_CLASSIFICATION	3.0555837904714986E-6	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999928260447013	WITHOUT_CLASSIFICATION	7.173955298791945E-6	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.999998131523516	WITHOUT_CLASSIFICATION	1.868476483987394E-6	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9831356137551838	WITHOUT_CLASSIFICATION	0.016864386244816156	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999996803235746	WITHOUT_CLASSIFICATION	3.196764253968481E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999996803235746	WITHOUT_CLASSIFICATION	3.196764253968481E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999996803235746	WITHOUT_CLASSIFICATION	3.196764253968481E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999996803235746	WITHOUT_CLASSIFICATION	3.196764253968481E-7	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.999999996033197	WITHOUT_CLASSIFICATION	3.966802921628236E-9	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999995374995	WITHOUT_CLASSIFICATION	4.625005202709562E-10	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.999990137505703	WITHOUT_CLASSIFICATION	9.862494296967887E-6	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999993099462134	WITHOUT_CLASSIFICATION	6.900537866382739E-7	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999999190547073	WITHOUT_CLASSIFICATION	8.094529270002309E-8	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9999995548815975	WITHOUT_CLASSIFICATION	4.4511840254446445E-7	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999998729981077	WITHOUT_CLASSIFICATION	1.2700189244407888E-7	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999991218255	WITHOUT_CLASSIFICATION	8.781745093372045E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999991218255	WITHOUT_CLASSIFICATION	8.781745093372045E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999991218255	WITHOUT_CLASSIFICATION	8.781745093372045E-9	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999998532715594	WITHOUT_CLASSIFICATION	1.4672844065832734E-7	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999999615390935	WITHOUT_CLASSIFICATION	3.846090644031376E-8	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999997036164309	WITHOUT_CLASSIFICATION	2.9638356917285845E-7	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999997036164309	WITHOUT_CLASSIFICATION	2.9638356917285845E-7	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999983469986214	WITHOUT_CLASSIFICATION	1.6530013785084203E-6	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9979494255572267	WITHOUT_CLASSIFICATION	0.0020505744427732416	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999881950431736	WITHOUT_CLASSIFICATION	1.1804956826477327E-5	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9999995391551677	WITHOUT_CLASSIFICATION	4.608448323495484E-7	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999844297168	WITHOUT_CLASSIFICATION	1.557028324251213E-8	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999994639231444	WITHOUT_CLASSIFICATION	5.360768554710265E-7	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999934036722	WITHOUT_CLASSIFICATION	6.596327771712377E-9	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999934036722	WITHOUT_CLASSIFICATION	6.596327771712377E-9	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999522709413	WITHOUT_CLASSIFICATION	4.772905867199534E-8	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999958060457	WITHOUT_CLASSIFICATION	4.193954222417124E-9	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999998706453177	WITHOUT_CLASSIFICATION	1.2935468228799575E-7	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999931759763236	WITHOUT_CLASSIFICATION	6.824023676392231E-6	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.966961378377128	WITHOUT_CLASSIFICATION	0.033038621622871925	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999962762367702	WITHOUT_CLASSIFICATION	3.7237632297280906E-6	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9999995785487235	WITHOUT_CLASSIFICATION	4.21451276578566E-7	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998311143852862	WITHOUT_CLASSIFICATION	1.6888561471391176E-4	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999999746348939	WITHOUT_CLASSIFICATION	2.536510621176075E-8	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999995996991512	WITHOUT_CLASSIFICATION	4.0030084886530695E-7	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999996038233157	WITHOUT_CLASSIFICATION	3.961766844074589E-7	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999993307164	WITHOUT_CLASSIFICATION	6.692836291949279E-10	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9873614753070102	WITHOUT_CLASSIFICATION	0.012638524692989775	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999998271489915	WITHOUT_CLASSIFICATION	1.7285100845389604E-7	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999995447958825	WITHOUT_CLASSIFICATION	4.5520411752131866E-7	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999594709403188	WITHOUT_CLASSIFICATION	4.0529059681168784E-5	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999690739035562	WITHOUT_CLASSIFICATION	3.092609644390589E-5	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.999999987176589	WITHOUT_CLASSIFICATION	1.2823410897416264E-8	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999986636252179	WITHOUT_CLASSIFICATION	1.3363747821409836E-6	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.999999708363863	WITHOUT_CLASSIFICATION	2.916361369925741E-7	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999993041718	WITHOUT_CLASSIFICATION	6.958281585996054E-10	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9930493476725609	WITHOUT_CLASSIFICATION	0.00695065232743904	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999978484744501	WITHOUT_CLASSIFICATION	2.151525549968656E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999978484744501	WITHOUT_CLASSIFICATION	2.151525549968656E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999978484744501	WITHOUT_CLASSIFICATION	2.151525549968656E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999978484744501	WITHOUT_CLASSIFICATION	2.151525549968656E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999978484744501	WITHOUT_CLASSIFICATION	2.151525549968656E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999978484744501	WITHOUT_CLASSIFICATION	2.151525549968656E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999978484744501	WITHOUT_CLASSIFICATION	2.151525549968656E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999978484744501	WITHOUT_CLASSIFICATION	2.151525549968656E-6	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.999983947640633	WITHOUT_CLASSIFICATION	1.605235936701277E-5	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9999980408888374	WITHOUT_CLASSIFICATION	1.9591111626948017E-6	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999986428686872	WITHOUT_CLASSIFICATION	1.3571313127829477E-6	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999998019134989	WITHOUT_CLASSIFICATION	1.9808650118048428E-7	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999994055843	WITHOUT_CLASSIFICATION	5.944156896009468E-10	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999994055843	WITHOUT_CLASSIFICATION	5.944156896009468E-10	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999999777929007	WITHOUT_CLASSIFICATION	2.2207099255626877E-8	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999998922686515	WITHOUT_CLASSIFICATION	1.077313485625141E-7	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999999982032997	WITHOUT_CLASSIFICATION	1.7967003492809099E-9	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999999762954992	WITHOUT_CLASSIFICATION	2.3704500855170038E-8	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999976866453545	WITHOUT_CLASSIFICATION	2.313354645573537E-6	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9999995442842486	WITHOUT_CLASSIFICATION	4.5571575127533176E-7	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9999991195064978	WITHOUT_CLASSIFICATION	8.804935022544336E-7	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9998983490702421	WITHOUT_CLASSIFICATION	1.0165092975789875E-4	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999991463060687	WITHOUT_CLASSIFICATION	8.536939313944E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999944846623202	WITHOUT_CLASSIFICATION	5.515337679803817E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999944846623202	WITHOUT_CLASSIFICATION	5.515337679803817E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999944846623202	WITHOUT_CLASSIFICATION	5.515337679803817E-6	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999593982089459	WITHOUT_CLASSIFICATION	4.0601791054101916E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999593982089459	WITHOUT_CLASSIFICATION	4.0601791054101916E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999593982089459	WITHOUT_CLASSIFICATION	4.0601791054101916E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999593982089459	WITHOUT_CLASSIFICATION	4.0601791054101916E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999593982089459	WITHOUT_CLASSIFICATION	4.0601791054101916E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999593982089459	WITHOUT_CLASSIFICATION	4.0601791054101916E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999593982089459	WITHOUT_CLASSIFICATION	4.0601791054101916E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999593982089459	WITHOUT_CLASSIFICATION	4.0601791054101916E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999593982089459	WITHOUT_CLASSIFICATION	4.0601791054101916E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999742111269	WITHOUT_CLASSIFICATION	2.5788873133638565E-8	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999899977856218	WITHOUT_CLASSIFICATION	1.000221437807089E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999998650067579	WITHOUT_CLASSIFICATION	1.349932420882669E-7	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999999867201346	WITHOUT_CLASSIFICATION	1.3279865471567417E-8	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999593982089459	WITHOUT_CLASSIFICATION	4.0601791054101916E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999593982089459	WITHOUT_CLASSIFICATION	4.0601791054101916E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999593982089459	WITHOUT_CLASSIFICATION	4.0601791054101916E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999888184319	WITHOUT_CLASSIFICATION	1.1181568182737E-8	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999999630465413	WITHOUT_CLASSIFICATION	3.695345877448809E-8	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9998946396554461	WITHOUT_CLASSIFICATION	1.053603445538459E-4	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.999684450611318	WITHOUT_CLASSIFICATION	3.1554938868193515E-4	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.999684450611318	WITHOUT_CLASSIFICATION	3.1554938868193515E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999997661658295	WITHOUT_CLASSIFICATION	2.3383417052888328E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999993736296104	WITHOUT_CLASSIFICATION	6.263703895938537E-7	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999999924412952	WITHOUT_CLASSIFICATION	7.55870479466338E-9	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.999999973203727	WITHOUT_CLASSIFICATION	2.67962728854051E-8	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999951633572219	WITHOUT_CLASSIFICATION	4.836642778107164E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999951633572219	WITHOUT_CLASSIFICATION	4.836642778107164E-6	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999872096795185	WITHOUT_CLASSIFICATION	1.2790320481530446E-5	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999687994079	WITHOUT_CLASSIFICATION	3.120059207094035E-8	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999859767374544	WITHOUT_CLASSIFICATION	1.4023262545608719E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999920920754126	WITHOUT_CLASSIFICATION	7.907924587364228E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999920920754126	WITHOUT_CLASSIFICATION	7.907924587364228E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999920920754126	WITHOUT_CLASSIFICATION	7.907924587364228E-6	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999991543733948	WITHOUT_CLASSIFICATION	8.456266052757022E-7	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999926310534	WITHOUT_CLASSIFICATION	7.368946574048803E-9	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999926310534	WITHOUT_CLASSIFICATION	7.368946574048803E-9	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999994914196816	WITHOUT_CLASSIFICATION	5.085803183520958E-7	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999994914196816	WITHOUT_CLASSIFICATION	5.085803183520958E-7	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999999360870193	WITHOUT_CLASSIFICATION	6.391298073918049E-8	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999700278608094	WITHOUT_CLASSIFICATION	2.9972139190632683E-5	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999998398192462	WITHOUT_CLASSIFICATION	1.601807537913696E-7	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999992772709939	WITHOUT_CLASSIFICATION	7.227290062125632E-7	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999990304356265	WITHOUT_CLASSIFICATION	9.695643734554353E-7	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999998116337818	WITHOUT_CLASSIFICATION	1.8836621823271688E-7	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999986340982832	WITHOUT_CLASSIFICATION	1.3659017167809358E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998168475521	WITHOUT_CLASSIFICATION	1.8315244795813188E-7	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999999890339049	WITHOUT_CLASSIFICATION	1.0966095058088435E-8	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999999980721	WITHOUT_CLASSIFICATION	1.927972257494114E-12	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.8982850930884863	WITHOUT_CLASSIFICATION	0.1017149069115137	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999978155041139	WITHOUT_CLASSIFICATION	2.184495886132738E-6	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999960236219817	WITHOUT_CLASSIFICATION	3.976378018325414E-6	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999805580427085	WITHOUT_CLASSIFICATION	1.9441957291548534E-5	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999994625441551	WITHOUT_CLASSIFICATION	5.374558449791527E-7	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.999999996117295	WITHOUT_CLASSIFICATION	3.882705009456664E-9	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999997769186454	WITHOUT_CLASSIFICATION	2.2308135465520076E-7	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.999999810399758	WITHOUT_CLASSIFICATION	1.896002418520541E-7	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.999999993213142	WITHOUT_CLASSIFICATION	6.7868580363338936E-9	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999989518084768	WITHOUT_CLASSIFICATION	1.0481915232292669E-6	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999995810611	WITHOUT_CLASSIFICATION	4.189388433193789E-10	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999854206808053	WITHOUT_CLASSIFICATION	1.4579319194711178E-5	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999999247762491	WITHOUT_CLASSIFICATION	7.522375091470781E-8	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999975408541659	WITHOUT_CLASSIFICATION	2.4591458340815404E-6	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999995183850908	WITHOUT_CLASSIFICATION	4.816149092836584E-7	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999994240320623	WITHOUT_CLASSIFICATION	5.759679376938165E-7	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999991047184137	WITHOUT_CLASSIFICATION	8.952815861939396E-7	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999999998767067	WITHOUT_CLASSIFICATION	1.2329315481036578E-10	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999999607030461	WITHOUT_CLASSIFICATION	3.929695393633182E-8	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999992627302702	WITHOUT_CLASSIFICATION	7.372697297348872E-7	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999965618322171	WITHOUT_CLASSIFICATION	3.4381677830222364E-6	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999999963569316	WITHOUT_CLASSIFICATION	3.643068357070017E-9	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999978997510752	WITHOUT_CLASSIFICATION	2.100248924733636E-6	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999999813741904	WITHOUT_CLASSIFICATION	1.8625809529244995E-8	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.999999246569287	WITHOUT_CLASSIFICATION	7.534307130904269E-7	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999999981006692	WITHOUT_CLASSIFICATION	1.899330891834511E-9	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999999940525467	WITHOUT_CLASSIFICATION	5.947453388820542E-9	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.999999974668287	WITHOUT_CLASSIFICATION	2.533171297139332E-8	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999999620320953	WITHOUT_CLASSIFICATION	3.796790465466034E-8	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999995560968	WITHOUT_CLASSIFICATION	4.439032844647567E-10	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999999930863906	WITHOUT_CLASSIFICATION	6.913609372728692E-9	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.999999957678466	WITHOUT_CLASSIFICATION	4.232153414576826E-8	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999999852155061	WITHOUT_CLASSIFICATION	1.4784493801074736E-8	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.999999995909848	WITHOUT_CLASSIFICATION	4.09015206961446E-9	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999999463710294	WITHOUT_CLASSIFICATION	5.3628970629855156E-8	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999662480683497	WITHOUT_CLASSIFICATION	3.375193165040846E-5	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9999998397831559	WITHOUT_CLASSIFICATION	1.6021684424763212E-7	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999636090272	WITHOUT_CLASSIFICATION	3.6390972735205906E-8	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999231361935	WITHOUT_CLASSIFICATION	7.68638065358384E-8	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999994307308018	WITHOUT_CLASSIFICATION	5.692691982779616E-7	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999994528704171	WITHOUT_CLASSIFICATION	5.471295828720319E-7	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999946945219507	WITHOUT_CLASSIFICATION	5.3054780492778105E-6	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999946945219507	WITHOUT_CLASSIFICATION	5.3054780492778105E-6	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999964944029	WITHOUT_CLASSIFICATION	3.5055971722172804E-9	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999964944029	WITHOUT_CLASSIFICATION	3.5055971722172804E-9	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.999943373408391	WITHOUT_CLASSIFICATION	5.662659160897028E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.999943373408391	WITHOUT_CLASSIFICATION	5.662659160897028E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999971122379446	WITHOUT_CLASSIFICATION	2.8877620553633113E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999971122379446	WITHOUT_CLASSIFICATION	2.8877620553633113E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999997710690501	WITHOUT_CLASSIFICATION	2.2893094995158238E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999997710690501	WITHOUT_CLASSIFICATION	2.2893094995158238E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999997710690501	WITHOUT_CLASSIFICATION	2.2893094995158238E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999997710690501	WITHOUT_CLASSIFICATION	2.2893094995158238E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999997710690501	WITHOUT_CLASSIFICATION	2.2893094995158238E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999997710690501	WITHOUT_CLASSIFICATION	2.2893094995158238E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999997710690501	WITHOUT_CLASSIFICATION	2.2893094995158238E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999997710690501	WITHOUT_CLASSIFICATION	2.2893094995158238E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999997710690501	WITHOUT_CLASSIFICATION	2.2893094995158238E-7	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999508335442	WITHOUT_CLASSIFICATION	4.916645579893852E-8	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999508335442	WITHOUT_CLASSIFICATION	4.916645579893852E-8	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999508335442	WITHOUT_CLASSIFICATION	4.916645579893852E-8	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999956542145159	WITHOUT_CLASSIFICATION	4.345785484173752E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999993285269044	WITHOUT_CLASSIFICATION	6.714730955032262E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999993285269044	WITHOUT_CLASSIFICATION	6.714730955032262E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999993285269044	WITHOUT_CLASSIFICATION	6.714730955032262E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999998504228399	WITHOUT_CLASSIFICATION	1.4957716003761217E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999998504228399	WITHOUT_CLASSIFICATION	1.4957716003761217E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999998504228399	WITHOUT_CLASSIFICATION	1.4957716003761217E-7	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999991822302605	WITHOUT_CLASSIFICATION	8.177697394027069E-7	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9999984559582801	WITHOUT_CLASSIFICATION	1.5440417200254033E-6	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9998968116686008	WITHOUT_CLASSIFICATION	1.0318833139926678E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997603002921123	WITHOUT_CLASSIFICATION	2.3969970788763616E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997603002921123	WITHOUT_CLASSIFICATION	2.3969970788763616E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9997603002921123	WITHOUT_CLASSIFICATION	2.3969970788763616E-4	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999999864493045	WITHOUT_CLASSIFICATION	1.3550695544942773E-8	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.999998311673209	WITHOUT_CLASSIFICATION	1.6883267909872054E-6	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.999998311673209	WITHOUT_CLASSIFICATION	1.6883267909872054E-6	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999996164070731	WITHOUT_CLASSIFICATION	3.835929269244241E-7	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999825995728544	WITHOUT_CLASSIFICATION	1.7400427145553932E-5	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999825995728544	WITHOUT_CLASSIFICATION	1.7400427145553932E-5	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9978691060679971	IMPLEMENTATION	0.002130893932002972	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.7046251091447662	WITHOUT_CLASSIFICATION	0.29537489085523383	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999998601597366	WITHOUT_CLASSIFICATION	1.3984026332454815E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999999914381466	WITHOUT_CLASSIFICATION	8.56185340637183E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999999914381466	WITHOUT_CLASSIFICATION	8.56185340637183E-8	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999868266702027	WITHOUT_CLASSIFICATION	1.317332979732711E-5	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999999997595959	WITHOUT_CLASSIFICATION	2.404041910461399E-10	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999998132686222	WITHOUT_CLASSIFICATION	1.8673137787935376E-7	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999998533415619	WITHOUT_CLASSIFICATION	1.4665843805644222E-7	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999991057338029	WITHOUT_CLASSIFICATION	8.942661970729266E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999999914381466	WITHOUT_CLASSIFICATION	8.56185340637183E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999999914381466	WITHOUT_CLASSIFICATION	8.56185340637183E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999999914381466	WITHOUT_CLASSIFICATION	8.56185340637183E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999999914381466	WITHOUT_CLASSIFICATION	8.56185340637183E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999999914381466	WITHOUT_CLASSIFICATION	8.56185340637183E-8	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999994385033197	WITHOUT_CLASSIFICATION	5.614966802328598E-7	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999976402454657	WITHOUT_CLASSIFICATION	2.3597545343673077E-6	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999993269738	WITHOUT_CLASSIFICATION	6.730262344570588E-10	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999997769882082	WITHOUT_CLASSIFICATION	2.230117917906643E-7	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999999950259918	WITHOUT_CLASSIFICATION	4.974008235662078E-9	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.998821368423095	WITHOUT_CLASSIFICATION	0.0011786315769050464	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.999999989397282	WITHOUT_CLASSIFICATION	1.0602718018975945E-8	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999999594193323	WITHOUT_CLASSIFICATION	4.0580667746055034E-8	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999998229456897	WITHOUT_CLASSIFICATION	1.770543102500174E-7	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999998801728466	WITHOUT_CLASSIFICATION	1.1982715338841437E-7	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999998106489155	WITHOUT_CLASSIFICATION	1.8935108449818515E-7	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999995247828821	WITHOUT_CLASSIFICATION	4.7521711793870993E-7	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999999689020204	WITHOUT_CLASSIFICATION	3.109797957325255E-8	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999933220630367	WITHOUT_CLASSIFICATION	6.677936963339932E-6	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999994769448443	WITHOUT_CLASSIFICATION	5.230551557461408E-7	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9950971112535416	WITHOUT_CLASSIFICATION	0.004902888746458398	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.999999439051937	WITHOUT_CLASSIFICATION	5.609480630347341E-7	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999412341047	WITHOUT_CLASSIFICATION	5.8765895319020694E-8	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.999999879771929	WITHOUT_CLASSIFICATION	1.2022807108812912E-7	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999952075801	WITHOUT_CLASSIFICATION	4.7924199348929695E-9	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999989382734884	WITHOUT_CLASSIFICATION	1.0617265116287185E-6	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.999999992028702	WITHOUT_CLASSIFICATION	7.971297960859461E-9	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999946346157693	WITHOUT_CLASSIFICATION	5.365384230671644E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999998982036998	WITHOUT_CLASSIFICATION	1.0179630020546384E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999998982036998	WITHOUT_CLASSIFICATION	1.0179630020546384E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999998982036998	WITHOUT_CLASSIFICATION	1.0179630020546384E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999998982036998	WITHOUT_CLASSIFICATION	1.0179630020546384E-7	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.999999877724368	WITHOUT_CLASSIFICATION	1.222756320768962E-7	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.999947762821436	WITHOUT_CLASSIFICATION	5.2237178563882E-5	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999997289295774	WITHOUT_CLASSIFICATION	2.710704225381808E-7	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999997289295774	WITHOUT_CLASSIFICATION	2.710704225381808E-7	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.999999998377734	WITHOUT_CLASSIFICATION	1.6222660344234274E-9	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999868947834	WITHOUT_CLASSIFICATION	1.3105216647040306E-8	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999784718868	WITHOUT_CLASSIFICATION	2.1528113135629667E-8	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999978066456	WITHOUT_CLASSIFICATION	2.19335438059154E-9	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999999831979196	WITHOUT_CLASSIFICATION	1.680208036457334E-8	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999952463663475	WITHOUT_CLASSIFICATION	4.753633652502847E-6	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999993320820979	WITHOUT_CLASSIFICATION	6.67917902139125E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999996292519191	WITHOUT_CLASSIFICATION	3.7074808087702234E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999996292519191	WITHOUT_CLASSIFICATION	3.7074808087702234E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999996292519191	WITHOUT_CLASSIFICATION	3.7074808087702234E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999996292519191	WITHOUT_CLASSIFICATION	3.7074808087702234E-7	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999869821965	WITHOUT_CLASSIFICATION	1.3017803506602289E-8	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999999544541	WITHOUT_CLASSIFICATION	4.554592690883636E-11	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999999544541	WITHOUT_CLASSIFICATION	4.554592690883636E-11	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999999544541	WITHOUT_CLASSIFICATION	4.554592690883636E-11	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999998380604719	WITHOUT_CLASSIFICATION	1.6193952814304853E-7	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999999866716092	WITHOUT_CLASSIFICATION	1.3328390858302107E-8	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999256601848924	WITHOUT_CLASSIFICATION	7.433981510763245E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.502251816546525	WITHOUT_CLASSIFICATION	0.49774818345347516	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.502251816546525	WITHOUT_CLASSIFICATION	0.49774818345347516	IMPLEMENTATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999997058763	WITHOUT_CLASSIFICATION	2.9412380871579246E-10	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.999985139741373	WITHOUT_CLASSIFICATION	1.48602586268962E-5	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999999414187518	WITHOUT_CLASSIFICATION	5.858124823824889E-8	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999999414187518	WITHOUT_CLASSIFICATION	5.858124823824889E-8	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999999766143707	WITHOUT_CLASSIFICATION	2.3385629221200817E-8	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999999766143707	WITHOUT_CLASSIFICATION	2.3385629221200817E-8	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.999999983543965	WITHOUT_CLASSIFICATION	1.645603497280233E-8	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999978095713125	WITHOUT_CLASSIFICATION	2.190428687568341E-6	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999999938590945	WITHOUT_CLASSIFICATION	6.140905339912072E-9	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999995684347311	WITHOUT_CLASSIFICATION	4.3156526895362E-7	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999996304143194	WITHOUT_CLASSIFICATION	3.695856805987744E-7	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999993024161394	WITHOUT_CLASSIFICATION	6.97583860534655E-7	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999984948914	WITHOUT_CLASSIFICATION	1.5051085600149023E-9	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999999963529591	WITHOUT_CLASSIFICATION	3.647040803594486E-9	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999999995409019	WITHOUT_CLASSIFICATION	4.590981311833811E-10	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999990586284389	WITHOUT_CLASSIFICATION	9.413715611203653E-7	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999990586284389	WITHOUT_CLASSIFICATION	9.413715611203653E-7	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999996916354825	WITHOUT_CLASSIFICATION	3.0836451753254207E-7	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999996916354825	WITHOUT_CLASSIFICATION	3.0836451753254207E-7	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999948627985501	WITHOUT_CLASSIFICATION	5.13720144985981E-6	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999992676564867	WITHOUT_CLASSIFICATION	7.323435131709908E-7	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999982964459739	WITHOUT_CLASSIFICATION	1.703554026032048E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998217371382	WITHOUT_CLASSIFICATION	1.782628618315462E-7	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998217371382	WITHOUT_CLASSIFICATION	1.782628618315462E-7	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998217371382	WITHOUT_CLASSIFICATION	1.782628618315462E-7	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9999989845416488	WITHOUT_CLASSIFICATION	1.0154583510990385E-6	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9999994463914401	WITHOUT_CLASSIFICATION	5.536085598380546E-7	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9999991853039872	WITHOUT_CLASSIFICATION	8.146960128844956E-7	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9999997972168763	WITHOUT_CLASSIFICATION	2.0278312375540968E-7	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9999994938449667	WITHOUT_CLASSIFICATION	5.061550332457751E-7	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.99999958400409	WITHOUT_CLASSIFICATION	4.1599591007769093E-7	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9999982260960477	WITHOUT_CLASSIFICATION	1.7739039523004274E-6	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.999997932839791	WITHOUT_CLASSIFICATION	2.067160209006049E-6	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.999708862884787	WITHOUT_CLASSIFICATION	2.9113711521301525E-4	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999957338849774	WITHOUT_CLASSIFICATION	4.26611502254134E-6	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999595808102827	WITHOUT_CLASSIFICATION	4.0419189717213084E-5	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999988302519408	WITHOUT_CLASSIFICATION	1.1697480591757538E-6	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999999988921512	WITHOUT_CLASSIFICATION	1.1078487342694278E-9	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.502251816546525	WITHOUT_CLASSIFICATION	0.49774818345347516	IMPLEMENTATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999994879894372	WITHOUT_CLASSIFICATION	5.120105628259748E-7	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999869523314103	WITHOUT_CLASSIFICATION	1.3047668589730758E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999999986119092	WITHOUT_CLASSIFICATION	1.388090802068014E-8	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999979466764946	WITHOUT_CLASSIFICATION	2.0533235053697484E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999979466764946	WITHOUT_CLASSIFICATION	2.0533235053697484E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999979466764946	WITHOUT_CLASSIFICATION	2.0533235053697484E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999979466764946	WITHOUT_CLASSIFICATION	2.0533235053697484E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999979466764946	WITHOUT_CLASSIFICATION	2.0533235053697484E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999981052185113	WITHOUT_CLASSIFICATION	1.8947814887494364E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999979466764946	WITHOUT_CLASSIFICATION	2.0533235053697484E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999979466764946	WITHOUT_CLASSIFICATION	2.0533235053697484E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999979466764946	WITHOUT_CLASSIFICATION	2.0533235053697484E-6	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999966642543404	WITHOUT_CLASSIFICATION	3.335745659498882E-6	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9997394019720127	WITHOUT_CLASSIFICATION	2.605980279872823E-4	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999968177035303	WITHOUT_CLASSIFICATION	3.182296469631114E-6	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999999760397597	WITHOUT_CLASSIFICATION	2.396024035650945E-8	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999999648626324	WITHOUT_CLASSIFICATION	3.513736747847369E-8	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999936396747843	WITHOUT_CLASSIFICATION	6.3603252157643265E-6	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999997936183451	WITHOUT_CLASSIFICATION	2.0638165487390265E-7	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9999997796253496	WITHOUT_CLASSIFICATION	2.203746504229827E-7	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999987523383101	WITHOUT_CLASSIFICATION	1.2476616897639149E-6	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999987523383101	WITHOUT_CLASSIFICATION	1.2476616897639149E-6	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9999994962222496	WITHOUT_CLASSIFICATION	5.037777503631982E-7	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9999992721298615	WITHOUT_CLASSIFICATION	7.278701384670101E-7	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999977923440936	WITHOUT_CLASSIFICATION	2.207655906415196E-6	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9999996361166463	WITHOUT_CLASSIFICATION	3.638833537077651E-7	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.999999790917652	WITHOUT_CLASSIFICATION	2.090823480570021E-7	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9999994656057324	WITHOUT_CLASSIFICATION	5.34394267554926E-7	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9999993641715338	WITHOUT_CLASSIFICATION	6.358284662067843E-7	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999992889293056	WITHOUT_CLASSIFICATION	7.110706943522346E-7	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999994253147366	WITHOUT_CLASSIFICATION	5.746852633439025E-7	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9999995835993617	WITHOUT_CLASSIFICATION	4.1640063821743906E-7	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9999994118841102	WITHOUT_CLASSIFICATION	5.881158896758784E-7	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.999999422959391	WITHOUT_CLASSIFICATION	5.770406090163095E-7	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999991963380901	WITHOUT_CLASSIFICATION	8.036619099826706E-7	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999991543939204	WITHOUT_CLASSIFICATION	8.456060796009174E-7	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9999990928375718	WITHOUT_CLASSIFICATION	9.071624282644087E-7	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9999990053449075	WITHOUT_CLASSIFICATION	9.946550925059926E-7	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999990234940921	WITHOUT_CLASSIFICATION	9.76505907940381E-7	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9999982128003995	WITHOUT_CLASSIFICATION	1.7871996005625964E-6	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9999994349089566	WITHOUT_CLASSIFICATION	5.650910434891164E-7	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.9999997201680253	WITHOUT_CLASSIFICATION	2.79831974669427E-7	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9999997255374876	WITHOUT_CLASSIFICATION	2.7446251232552783E-7	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999997347189378	WITHOUT_CLASSIFICATION	2.6528106230443184E-7	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9999977332020388	WITHOUT_CLASSIFICATION	2.26679796121244E-6	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9999991038888089	WITHOUT_CLASSIFICATION	8.961111912245984E-7	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9999993095880406	WITHOUT_CLASSIFICATION	6.904119595151125E-7	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999990603644984	WITHOUT_CLASSIFICATION	9.396355015894763E-7	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9999991803904293	WITHOUT_CLASSIFICATION	8.196095706447004E-7	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9999989338557391	WITHOUT_CLASSIFICATION	1.066144260888905E-6	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999992092768746	WITHOUT_CLASSIFICATION	7.907231254211755E-7	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.999999419557498	WITHOUT_CLASSIFICATION	5.804425019868135E-7	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999994404804244	WITHOUT_CLASSIFICATION	5.595195756750445E-7	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999987073066554	WITHOUT_CLASSIFICATION	1.2926933445911726E-6	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.999998643623364	WITHOUT_CLASSIFICATION	1.356376636094715E-6	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9999984002619967	WITHOUT_CLASSIFICATION	1.599738003258919E-6	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9999991595001123	WITHOUT_CLASSIFICATION	8.404998877012307E-7	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999996029009893	WITHOUT_CLASSIFICATION	3.970990106830412E-7	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9999987801505694	WITHOUT_CLASSIFICATION	1.2198494306713108E-6	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999977986871339	WITHOUT_CLASSIFICATION	2.2013128660425434E-6	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.9999987327248347	WITHOUT_CLASSIFICATION	1.2672751652361896E-6	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9999990073377613	WITHOUT_CLASSIFICATION	9.926622387296957E-7	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9999992864792776	WITHOUT_CLASSIFICATION	7.135207224299988E-7	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.999999523725972	WITHOUT_CLASSIFICATION	4.7627402805152995E-7	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9999989374340851	WITHOUT_CLASSIFICATION	1.0625659148933663E-6	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9999983508586437	WITHOUT_CLASSIFICATION	1.6491413563156755E-6	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9999981050164671	WITHOUT_CLASSIFICATION	1.8949835327837296E-6	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999976995924689	WITHOUT_CLASSIFICATION	2.3004075310996466E-6	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999983325318469	WITHOUT_CLASSIFICATION	1.6674681531137812E-6	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9999987906048377	WITHOUT_CLASSIFICATION	1.2093951623484444E-6	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9999992253949164	WITHOUT_CLASSIFICATION	7.746050836378204E-7	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.999998622638127	WITHOUT_CLASSIFICATION	1.377361872933551E-6	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9999990175351191	WITHOUT_CLASSIFICATION	9.824648808806748E-7	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9999992746944247	WITHOUT_CLASSIFICATION	7.2530557518722E-7	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.9999991027792795	WITHOUT_CLASSIFICATION	8.972207206226532E-7	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999988420889122	WITHOUT_CLASSIFICATION	1.1579110877921508E-6	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999988420889122	WITHOUT_CLASSIFICATION	1.1579110877921508E-6	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999981530271299	WITHOUT_CLASSIFICATION	1.8469728701051544E-6	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.999999409408988	WITHOUT_CLASSIFICATION	5.905910119487147E-7	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9999985505882257	WITHOUT_CLASSIFICATION	1.4494117742804645E-6	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9999992764081638	WITHOUT_CLASSIFICATION	7.235918361864367E-7	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.999995545865088	WITHOUT_CLASSIFICATION	4.454134912062836E-6	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999989571632111	WITHOUT_CLASSIFICATION	1.0428367888763435E-6	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999985587019392	WITHOUT_CLASSIFICATION	1.4412980608165436E-6	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9999986422869797	WITHOUT_CLASSIFICATION	1.3577130202740128E-6	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999993691660637	WITHOUT_CLASSIFICATION	6.308339362685891E-7	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9999981870369351	WITHOUT_CLASSIFICATION	1.8129630649445913E-6	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.999977496793183	WITHOUT_CLASSIFICATION	2.2503206816980118E-5	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.999977496793183	WITHOUT_CLASSIFICATION	2.2503206816980118E-5	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999995404107525	WITHOUT_CLASSIFICATION	4.595892476030646E-7	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999918610482509	WITHOUT_CLASSIFICATION	8.138951749177205E-6	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999791864071809	WITHOUT_CLASSIFICATION	2.081359281911463E-5	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999991354698	WITHOUT_CLASSIFICATION	8.645302432186748E-10	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999961656512202	WITHOUT_CLASSIFICATION	3.834348779825998E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999961656512202	WITHOUT_CLASSIFICATION	3.834348779825998E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999961656512202	WITHOUT_CLASSIFICATION	3.834348779825998E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999961656512202	WITHOUT_CLASSIFICATION	3.834348779825998E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.991882725903727	WITHOUT_CLASSIFICATION	0.008117274096273143	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999996685403145	WITHOUT_CLASSIFICATION	3.314596854202129E-7	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9999990214406932	WITHOUT_CLASSIFICATION	9.785593067652776E-7	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9999993801386755	WITHOUT_CLASSIFICATION	6.198613244985432E-7	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.9999982592400357	WITHOUT_CLASSIFICATION	1.7407599642720146E-6	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9999991118997774	WITHOUT_CLASSIFICATION	8.881002226025406E-7	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9999983689896956	WITHOUT_CLASSIFICATION	1.631010304397341E-6	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9999997684447619	WITHOUT_CLASSIFICATION	2.3155523802006293E-7	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9999997224061412	WITHOUT_CLASSIFICATION	2.7759385883439734E-7	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9999989540362892	WITHOUT_CLASSIFICATION	1.0459637108131416E-6	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9999993120577836	WITHOUT_CLASSIFICATION	6.879422163166507E-7	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9999996640115082	WITHOUT_CLASSIFICATION	3.3598849189523967E-7	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9999987615947046	WITHOUT_CLASSIFICATION	1.2384052953962193E-6	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.999999366710293	WITHOUT_CLASSIFICATION	6.332897070081486E-7	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9999992231593922	WITHOUT_CLASSIFICATION	7.768406077423905E-7	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9999997053281682	WITHOUT_CLASSIFICATION	2.9467183184337424E-7	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9999993639393049	WITHOUT_CLASSIFICATION	6.360606950441361E-7	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9999985841386708	WITHOUT_CLASSIFICATION	1.4158613292096958E-6	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9999994445793945	WITHOUT_CLASSIFICATION	5.554206054170375E-7	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9999992141128664	WITHOUT_CLASSIFICATION	7.858871335961968E-7	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9999996681587763	WITHOUT_CLASSIFICATION	3.318412237179658E-7	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9999995428439211	WITHOUT_CLASSIFICATION	4.5715607878227443E-7	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.999999483748382	WITHOUT_CLASSIFICATION	5.162516181040662E-7	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9999991601080274	WITHOUT_CLASSIFICATION	8.398919725747956E-7	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9999996733807411	WITHOUT_CLASSIFICATION	3.2661925895311006E-7	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9999992762359835	WITHOUT_CLASSIFICATION	7.237640163887615E-7	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9999997324068265	WITHOUT_CLASSIFICATION	2.675931735406864E-7	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9999979418872557	WITHOUT_CLASSIFICATION	2.0581127443118452E-6	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9999991851665557	WITHOUT_CLASSIFICATION	8.148334442530924E-7	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9999986978340875	WITHOUT_CLASSIFICATION	1.3021659124783591E-6	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9999980383882667	WITHOUT_CLASSIFICATION	1.96161173331824E-6	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9999993428523566	WITHOUT_CLASSIFICATION	6.571476434801529E-7	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9999979346105333	WITHOUT_CLASSIFICATION	2.065389466742425E-6	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9999989731612797	WITHOUT_CLASSIFICATION	1.0268387202353427E-6	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9999984464264631	WITHOUT_CLASSIFICATION	1.553573536898882E-6	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9999985159266223	WITHOUT_CLASSIFICATION	1.4840733777445996E-6	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9999985167942363	WITHOUT_CLASSIFICATION	1.4832057636923998E-6	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9999983598082534	WITHOUT_CLASSIFICATION	1.6401917466506135E-6	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9999993259909469	WITHOUT_CLASSIFICATION	6.740090530273698E-7	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9999985271283818	WITHOUT_CLASSIFICATION	1.4728716182685809E-6	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.9999994428496187	WITHOUT_CLASSIFICATION	5.571503812155922E-7	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9999984645800355	WITHOUT_CLASSIFICATION	1.5354199644421372E-6	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9999984916309627	WITHOUT_CLASSIFICATION	1.5083690373950164E-6	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9999986407108679	WITHOUT_CLASSIFICATION	1.359289132225855E-6	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9999978608648028	WITHOUT_CLASSIFICATION	2.139135197132297E-6	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9999967424962943	WITHOUT_CLASSIFICATION	3.257503705625418E-6	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9999984506885694	WITHOUT_CLASSIFICATION	1.5493114305333787E-6	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9999979696558137	WITHOUT_CLASSIFICATION	2.030344186428178E-6	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9999986611536372	WITHOUT_CLASSIFICATION	1.3388463626933766E-6	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9999990005921817	WITHOUT_CLASSIFICATION	9.99407818280891E-7	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.999998508573055	WITHOUT_CLASSIFICATION	1.4914269451263661E-6	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9999986372744687	WITHOUT_CLASSIFICATION	1.3627255312854597E-6	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9999987029985756	WITHOUT_CLASSIFICATION	1.297001424356938E-6	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9999976915732361	WITHOUT_CLASSIFICATION	2.308426763864474E-6	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9999969536691868	WITHOUT_CLASSIFICATION	3.0463308131725023E-6	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9999986550441146	WITHOUT_CLASSIFICATION	1.3449558855034364E-6	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9999990948759617	WITHOUT_CLASSIFICATION	9.051240382852482E-7	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9999991495071267	WITHOUT_CLASSIFICATION	8.50492873295763E-7	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9999995648655763	WITHOUT_CLASSIFICATION	4.35134423730374E-7	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999999207916096	WITHOUT_CLASSIFICATION	7.920839044858389E-8	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999987136724315	WITHOUT_CLASSIFICATION	1.2863275684544524E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997505546006	WITHOUT_CLASSIFICATION	2.49445399468805E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997505546006	WITHOUT_CLASSIFICATION	2.49445399468805E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997505546006	WITHOUT_CLASSIFICATION	2.49445399468805E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997505546006	WITHOUT_CLASSIFICATION	2.49445399468805E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997505546006	WITHOUT_CLASSIFICATION	2.49445399468805E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997505546006	WITHOUT_CLASSIFICATION	2.49445399468805E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997505546006	WITHOUT_CLASSIFICATION	2.49445399468805E-7	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999897099196182	WITHOUT_CLASSIFICATION	1.0290080381764719E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999897099196182	WITHOUT_CLASSIFICATION	1.0290080381764719E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999897099196182	WITHOUT_CLASSIFICATION	1.0290080381764719E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999897099196182	WITHOUT_CLASSIFICATION	1.0290080381764719E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999841177776877	WITHOUT_CLASSIFICATION	1.588222231230144E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999841177776877	WITHOUT_CLASSIFICATION	1.588222231230144E-5	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999999884081435	WITHOUT_CLASSIFICATION	1.1591856531720713E-8	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999773789094	WITHOUT_CLASSIFICATION	2.2621090515544787E-8	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999773789094	WITHOUT_CLASSIFICATION	2.2621090515544787E-8	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999999651924328	WITHOUT_CLASSIFICATION	3.4807567144592694E-8	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999969535983055	WITHOUT_CLASSIFICATION	3.0464016944577935E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999452669089	WITHOUT_CLASSIFICATION	5.473309100125115E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999452669089	WITHOUT_CLASSIFICATION	5.473309100125115E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999452669089	WITHOUT_CLASSIFICATION	5.473309100125115E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999452669089	WITHOUT_CLASSIFICATION	5.473309100125115E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999452669089	WITHOUT_CLASSIFICATION	5.473309100125115E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999452669089	WITHOUT_CLASSIFICATION	5.473309100125115E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999452669089	WITHOUT_CLASSIFICATION	5.473309100125115E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999976058566	WITHOUT_CLASSIFICATION	2.3941433927730876E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997666965152	WITHOUT_CLASSIFICATION	2.333034846951251E-7	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999123502891449	WITHOUT_CLASSIFICATION	8.764971085500444E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999123502891449	WITHOUT_CLASSIFICATION	8.764971085500444E-5	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999858125659	WITHOUT_CLASSIFICATION	1.4187434080826729E-8	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999995797971878	WITHOUT_CLASSIFICATION	4.2020281215862227E-7	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999995797971878	WITHOUT_CLASSIFICATION	4.2020281215862227E-7	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999992438932308	WITHOUT_CLASSIFICATION	7.561067693233523E-7	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9678363410344852	IMPLEMENTATION	0.032163658965514666	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999994376920364	WITHOUT_CLASSIFICATION	5.623079636187452E-7	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999237984639708	WITHOUT_CLASSIFICATION	7.62015360291623E-5	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999999771305256	WITHOUT_CLASSIFICATION	2.2869474421317808E-8	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999990104966474	WITHOUT_CLASSIFICATION	9.895033526002718E-7	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9998984626608778	WITHOUT_CLASSIFICATION	1.0153733912219928E-4	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999999313804028	WITHOUT_CLASSIFICATION	6.861959718346277E-8	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999805582197	WITHOUT_CLASSIFICATION	1.9441780302440303E-8	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999982469533791	WITHOUT_CLASSIFICATION	1.7530466209044973E-6	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999999936583155	WITHOUT_CLASSIFICATION	6.341684550692756E-9	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999959400847357	WITHOUT_CLASSIFICATION	4.059915264265396E-6	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999999916583	WITHOUT_CLASSIFICATION	8.34161728500842E-12	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9998889815336179	WITHOUT_CLASSIFICATION	1.1101846638198129E-4	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999038846845547	WITHOUT_CLASSIFICATION	9.611531544520679E-5	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.999819788988469	WITHOUT_CLASSIFICATION	1.8021101153102228E-4	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.999999998471823	WITHOUT_CLASSIFICATION	1.5281770637074228E-9	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998205760547537	WITHOUT_CLASSIFICATION	1.7942394524627462E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999931704613694	WITHOUT_CLASSIFICATION	6.829538630615189E-6	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999931704613694	WITHOUT_CLASSIFICATION	6.829538630615189E-6	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999961408312227	WITHOUT_CLASSIFICATION	3.859168777298314E-6	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999518644208	WITHOUT_CLASSIFICATION	4.8135579155782226E-8	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999982273512623	WITHOUT_CLASSIFICATION	1.7726487377923649E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999975075482643	WITHOUT_CLASSIFICATION	2.492451735679577E-6	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999866542697452	WITHOUT_CLASSIFICATION	1.3345730254753433E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999866542697452	WITHOUT_CLASSIFICATION	1.3345730254753433E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999866542697452	WITHOUT_CLASSIFICATION	1.3345730254753433E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999746783433953	WITHOUT_CLASSIFICATION	2.532165660475941E-5	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999772060945795	WITHOUT_CLASSIFICATION	2.2793905420454598E-5	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.999782661533755	WITHOUT_CLASSIFICATION	2.1733846624496646E-4	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999147920729448	WITHOUT_CLASSIFICATION	8.520792705517586E-5	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999999990894463	WITHOUT_CLASSIFICATION	9.105536786055874E-10	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999950809199246	WITHOUT_CLASSIFICATION	4.919080075384869E-6	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999994173995558	WITHOUT_CLASSIFICATION	5.826004442513309E-7	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999989926897	WITHOUT_CLASSIFICATION	1.0073103420688176E-9	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9998827815504187	WITHOUT_CLASSIFICATION	1.1721844958135023E-4	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999991427877135	WITHOUT_CLASSIFICATION	8.572122865303907E-7	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9999970994171942	WITHOUT_CLASSIFICATION	2.9005828058158287E-6	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999966865953184	WITHOUT_CLASSIFICATION	3.3134046815414894E-6	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.5553206200318165	WITHOUT_CLASSIFICATION	0.4446793799681835	IMPLEMENTATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999971108674117	WITHOUT_CLASSIFICATION	2.8891325882157004E-6	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999999999939032	WITHOUT_CLASSIFICATION	6.096829702118174E-12	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999999999728955	WITHOUT_CLASSIFICATION	2.7104468084762635E-11	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999994529410868	WITHOUT_CLASSIFICATION	5.470589131988872E-7	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999998310894006	WITHOUT_CLASSIFICATION	1.689105995254394E-7	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999675866969618	WITHOUT_CLASSIFICATION	3.2413303038167045E-5	IMPLEMENTATION
