// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.997922492793953	WITHOUT_CLASSIFICATION	0.0020775072060470593	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.5712591839449532	WITHOUT_CLASSIFICATION	0.4287408160550469	IMPLEMENTATION
// TODO: Someday, enable.	IMPLEMENTATION	0.7467240391186609	IMPLEMENTATION	0.25327596088133913	WITHOUT_CLASSIFICATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.77365408230745	IMPLEMENTATION	0.22634591769255008	WITHOUT_CLASSIFICATION
// TODO: non-strict option	IMPLEMENTATION	0.6269517567746155	WITHOUT_CLASSIFICATION	0.3730482432253845	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.8728841978134482	IMPLEMENTATION	0.12711580218655186	WITHOUT_CLASSIFICATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.5972510708199747	WITHOUT_CLASSIFICATION	0.40274892918002525	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.8306524967409902	WITHOUT_CLASSIFICATION	0.16934750325900985	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.8306524967409902	WITHOUT_CLASSIFICATION	0.16934750325900985	IMPLEMENTATION
// TODO: pass this in?	IMPLEMENTATION	0.9004318541379638	IMPLEMENTATION	0.09956814586203626	WITHOUT_CLASSIFICATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9966242100653603	WITHOUT_CLASSIFICATION	0.0033757899346396176	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.9945610572804243	IMPLEMENTATION	0.005438942719575592	WITHOUT_CLASSIFICATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.9716735417731961	IMPLEMENTATION	0.02832645822680394	WITHOUT_CLASSIFICATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.9992073461289726	WITHOUT_CLASSIFICATION	7.926538710274746E-4	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.9677866863850724	IMPLEMENTATION	0.032213313614927665	WITHOUT_CLASSIFICATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9156819971615585	IMPLEMENTATION	0.08431800283844146	WITHOUT_CLASSIFICATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.6941789630674579	IMPLEMENTATION	0.3058210369325422	WITHOUT_CLASSIFICATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.5841209985808454	IMPLEMENTATION	0.4158790014191545	WITHOUT_CLASSIFICATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.526912358640508	WITHOUT_CLASSIFICATION	0.47308764135949205	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.991019513267702	WITHOUT_CLASSIFICATION	0.008980486732297965	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.5959328193014656	IMPLEMENTATION	0.4040671806985343	WITHOUT_CLASSIFICATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.5623702708010034	IMPLEMENTATION	0.43762972919899645	WITHOUT_CLASSIFICATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.554853381749294	IMPLEMENTATION	0.44514661825070595	WITHOUT_CLASSIFICATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.9712984473285325	WITHOUT_CLASSIFICATION	0.028701552671467435	IMPLEMENTATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.99512194825646	IMPLEMENTATION	0.004878051743539883	WITHOUT_CLASSIFICATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.7117547862547496	WITHOUT_CLASSIFICATION	0.2882452137452504	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.6821811249292626	IMPLEMENTATION	0.31781887507073725	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9965746042563648	IMPLEMENTATION	0.003425395743635242	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.6821811249292626	IMPLEMENTATION	0.31781887507073725	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9965746042563648	IMPLEMENTATION	0.003425395743635242	WITHOUT_CLASSIFICATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.671620324895205	WITHOUT_CLASSIFICATION	0.32837967510479493	IMPLEMENTATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.8779801568219877	WITHOUT_CLASSIFICATION	0.12201984317801223	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.9983086443142852	IMPLEMENTATION	0.0016913556857148335	WITHOUT_CLASSIFICATION
// TODO: make threadsafe	IMPLEMENTATION	0.9964565565445224	IMPLEMENTATION	0.003543443455477566	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9335020179038747	WITHOUT_CLASSIFICATION	0.06649798209612531	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9335020179038747	WITHOUT_CLASSIFICATION	0.06649798209612531	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.6078979115436265	WITHOUT_CLASSIFICATION	0.39210208845637357	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.8070150476317843	IMPLEMENTATION	0.19298495236821564	WITHOUT_CLASSIFICATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.8536339652528646	WITHOUT_CLASSIFICATION	0.14636603474713544	IMPLEMENTATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.9962929670470912	WITHOUT_CLASSIFICATION	0.003707032952908713	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9169984676734291	IMPLEMENTATION	0.08300153232657095	WITHOUT_CLASSIFICATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.9584635492087272	IMPLEMENTATION	0.041536450791272744	WITHOUT_CLASSIFICATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.9943024671360716	IMPLEMENTATION	0.005697532863928318	WITHOUT_CLASSIFICATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.9776018369562083	WITHOUT_CLASSIFICATION	0.022398163043791657	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.9198836937991012	WITHOUT_CLASSIFICATION	0.08011630620089888	IMPLEMENTATION
// TODO: add trace call?	IMPLEMENTATION	0.9456725152424432	IMPLEMENTATION	0.0543274847575568	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9957819290671882	WITHOUT_CLASSIFICATION	0.0042180709328117835	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.7249460652822928	WITHOUT_CLASSIFICATION	0.27505393471770734	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.6506025130602539	WITHOUT_CLASSIFICATION	0.349397486939746	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.982921738464224	IMPLEMENTATION	0.01707826153577597	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9957819290671882	WITHOUT_CLASSIFICATION	0.0042180709328117835	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.999598464210875	WITHOUT_CLASSIFICATION	4.015357891250486E-4	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.6342221098130282	WITHOUT_CLASSIFICATION	0.3657778901869718	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.9519169944311964	IMPLEMENTATION	0.04808300556880363	WITHOUT_CLASSIFICATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.9519296113118	IMPLEMENTATION	0.04807038868820002	WITHOUT_CLASSIFICATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.993400473457928	WITHOUT_CLASSIFICATION	0.006599526542072005	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.7595759725809852	WITHOUT_CLASSIFICATION	0.24042402741901478	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.5994969400830569	WITHOUT_CLASSIFICATION	0.40050305991694307	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.8608619080061957	WITHOUT_CLASSIFICATION	0.1391380919938044	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9998929790217103	WITHOUT_CLASSIFICATION	1.0702097828971539E-4	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.9842253494714515	WITHOUT_CLASSIFICATION	0.015774650528548546	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9868751520253856	IMPLEMENTATION	0.013124847974614483	WITHOUT_CLASSIFICATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9868751520253856	IMPLEMENTATION	0.013124847974614483	WITHOUT_CLASSIFICATION
// TODO: validate port as numeric	IMPLEMENTATION	0.851325775011851	WITHOUT_CLASSIFICATION	0.148674224988149	IMPLEMENTATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9999858474516797	IMPLEMENTATION	1.4152548320200758E-5	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.5667386134321356	IMPLEMENTATION	0.4332613865678644	WITHOUT_CLASSIFICATION
// TODO: deal with varargs	IMPLEMENTATION	0.6349500557706479	WITHOUT_CLASSIFICATION	0.3650499442293522	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.6349500557706479	WITHOUT_CLASSIFICATION	0.3650499442293522	IMPLEMENTATION
// TODO: other reserved names?	IMPLEMENTATION	0.9971638973241768	IMPLEMENTATION	0.002836102675823144	WITHOUT_CLASSIFICATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.9619544047869333	IMPLEMENTATION	0.038045595213066725	WITHOUT_CLASSIFICATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.6055970947097656	IMPLEMENTATION	0.3944029052902344	WITHOUT_CLASSIFICATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.7038459844090184	IMPLEMENTATION	0.2961540155909815	WITHOUT_CLASSIFICATION
// TODO: call ruby method	IMPLEMENTATION	0.5481984948503197	IMPLEMENTATION	0.4518015051496805	WITHOUT_CLASSIFICATION
// TODO: call ruby method	IMPLEMENTATION	0.5481984948503197	IMPLEMENTATION	0.4518015051496805	WITHOUT_CLASSIFICATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.9828375609289347	IMPLEMENTATION	0.017162439071065305	WITHOUT_CLASSIFICATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.7900705189920273	WITHOUT_CLASSIFICATION	0.20992948100797276	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9999994608850344	WITHOUT_CLASSIFICATION	5.391149654417262E-7	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.9940849383531689	IMPLEMENTATION	0.005915061646831037	WITHOUT_CLASSIFICATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.9718562186020147	IMPLEMENTATION	0.028143781397985262	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.9952722075727397	IMPLEMENTATION	0.004727792427260368	WITHOUT_CLASSIFICATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.955405362060685	IMPLEMENTATION	0.04459463793931504	WITHOUT_CLASSIFICATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.8608502626482797	IMPLEMENTATION	0.1391497373517203	WITHOUT_CLASSIFICATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.7324800192527133	WITHOUT_CLASSIFICATION	0.2675199807472867	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.7324800192527133	WITHOUT_CLASSIFICATION	0.2675199807472867	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.9492941919565064	WITHOUT_CLASSIFICATION	0.05070580804349359	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.8795660294483113	WITHOUT_CLASSIFICATION	0.12043397055168872	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9966998020015947	WITHOUT_CLASSIFICATION	0.0033001979984052647	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9966998020015947	WITHOUT_CLASSIFICATION	0.0033001979984052647	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.9741429802828795	WITHOUT_CLASSIFICATION	0.02585701971712051	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.5926880065183618	IMPLEMENTATION	0.40731199348163827	WITHOUT_CLASSIFICATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.5926880065183618	IMPLEMENTATION	0.40731199348163827	WITHOUT_CLASSIFICATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.5926880065183618	IMPLEMENTATION	0.40731199348163827	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.8782831881677031	WITHOUT_CLASSIFICATION	0.12171681183229688	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.8782831881677031	WITHOUT_CLASSIFICATION	0.12171681183229688	IMPLEMENTATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.7901307879019108	IMPLEMENTATION	0.20986921209808918	WITHOUT_CLASSIFICATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9999739145545815	WITHOUT_CLASSIFICATION	2.608544541852846E-5	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.5163152577835627	WITHOUT_CLASSIFICATION	0.4836847422164373	IMPLEMENTATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9999821408840033	IMPLEMENTATION	1.7859115996733682E-5	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9997583443950476	IMPLEMENTATION	2.4165560495246547E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9997583443950476	IMPLEMENTATION	2.4165560495246547E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9997583443950476	IMPLEMENTATION	2.4165560495246547E-4	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9169984676734291	IMPLEMENTATION	0.08300153232657095	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9169984676734291	IMPLEMENTATION	0.08300153232657095	WITHOUT_CLASSIFICATION
// TODO: check for ascii string	IMPLEMENTATION	0.9091242839300422	WITHOUT_CLASSIFICATION	0.09087571606995781	IMPLEMENTATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.662682000236406	IMPLEMENTATION	0.33731799976359406	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9335020179038747	WITHOUT_CLASSIFICATION	0.06649798209612531	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9335020179038747	WITHOUT_CLASSIFICATION	0.06649798209612531	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.8308063159715926	IMPLEMENTATION	0.1691936840284073	WITHOUT_CLASSIFICATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.959237281847194	WITHOUT_CLASSIFICATION	0.04076271815280603	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9156819971615585	IMPLEMENTATION	0.08431800283844146	WITHOUT_CLASSIFICATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9877723624331646	WITHOUT_CLASSIFICATION	0.0122276375668354	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.9920164415182213	IMPLEMENTATION	0.00798355848177876	WITHOUT_CLASSIFICATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.9990943681039963	IMPLEMENTATION	9.05631896003798E-4	WITHOUT_CLASSIFICATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.9924775491415264	WITHOUT_CLASSIFICATION	0.007522450858473492	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999991580094036	WITHOUT_CLASSIFICATION	8.419905963699558E-7	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.999999623822478	WITHOUT_CLASSIFICATION	3.7617752199192723E-7	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999990531714336	WITHOUT_CLASSIFICATION	9.4682856645714E-7	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999990531714336	WITHOUT_CLASSIFICATION	9.4682856645714E-7	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999791986959734	WITHOUT_CLASSIFICATION	2.0801304026552295E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999791986959734	WITHOUT_CLASSIFICATION	2.0801304026552295E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999570929418495	WITHOUT_CLASSIFICATION	4.2907058150510016E-5	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999992357927393	WITHOUT_CLASSIFICATION	7.642072607765493E-7	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9999998213148412	WITHOUT_CLASSIFICATION	1.7868515869999349E-7	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999998603326957	WITHOUT_CLASSIFICATION	1.3966730415599673E-7	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999687758456154	WITHOUT_CLASSIFICATION	3.122415438463919E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999687758456154	WITHOUT_CLASSIFICATION	3.122415438463919E-5	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.999998807958339	WITHOUT_CLASSIFICATION	1.1920416610543395E-6	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999235664851339	WITHOUT_CLASSIFICATION	7.643351486607656E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999235664851339	WITHOUT_CLASSIFICATION	7.643351486607656E-5	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9999992008746733	WITHOUT_CLASSIFICATION	7.991253266049828E-7	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.999999813523407	WITHOUT_CLASSIFICATION	1.8647659287585505E-7	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999966288616361	WITHOUT_CLASSIFICATION	3.3711383638808738E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999966288616361	WITHOUT_CLASSIFICATION	3.3711383638808738E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999966288616361	WITHOUT_CLASSIFICATION	3.3711383638808738E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999966288616361	WITHOUT_CLASSIFICATION	3.3711383638808738E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999966288616361	WITHOUT_CLASSIFICATION	3.3711383638808738E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999966288616361	WITHOUT_CLASSIFICATION	3.3711383638808738E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999966288616361	WITHOUT_CLASSIFICATION	3.3711383638808738E-6	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999682996283544	WITHOUT_CLASSIFICATION	3.1700371645616264E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999682996283544	WITHOUT_CLASSIFICATION	3.1700371645616264E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999682996283544	WITHOUT_CLASSIFICATION	3.1700371645616264E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999682996283544	WITHOUT_CLASSIFICATION	3.1700371645616264E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999682996283544	WITHOUT_CLASSIFICATION	3.1700371645616264E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999682996283544	WITHOUT_CLASSIFICATION	3.1700371645616264E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999682996283544	WITHOUT_CLASSIFICATION	3.1700371645616264E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998775564287818	WITHOUT_CLASSIFICATION	1.2244357121809387E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998775564287818	WITHOUT_CLASSIFICATION	1.2244357121809387E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998775564287818	WITHOUT_CLASSIFICATION	1.2244357121809387E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998775564287818	WITHOUT_CLASSIFICATION	1.2244357121809387E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998775564287818	WITHOUT_CLASSIFICATION	1.2244357121809387E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998775564287818	WITHOUT_CLASSIFICATION	1.2244357121809387E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.999952405896629	WITHOUT_CLASSIFICATION	4.759410337094955E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.999952405896629	WITHOUT_CLASSIFICATION	4.759410337094955E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.999952405896629	WITHOUT_CLASSIFICATION	4.759410337094955E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.999952405896629	WITHOUT_CLASSIFICATION	4.759410337094955E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.999952405896629	WITHOUT_CLASSIFICATION	4.759410337094955E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.999952405896629	WITHOUT_CLASSIFICATION	4.759410337094955E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998834972970186	WITHOUT_CLASSIFICATION	1.1650270298142114E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998834972970186	WITHOUT_CLASSIFICATION	1.1650270298142114E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998834972970186	WITHOUT_CLASSIFICATION	1.1650270298142114E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998834972970186	WITHOUT_CLASSIFICATION	1.1650270298142114E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998834972970186	WITHOUT_CLASSIFICATION	1.1650270298142114E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998834972970186	WITHOUT_CLASSIFICATION	1.1650270298142114E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998834972970186	WITHOUT_CLASSIFICATION	1.1650270298142114E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998938913798068	WITHOUT_CLASSIFICATION	1.0610862019328209E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998938913798068	WITHOUT_CLASSIFICATION	1.0610862019328209E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998938913798068	WITHOUT_CLASSIFICATION	1.0610862019328209E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998938913798068	WITHOUT_CLASSIFICATION	1.0610862019328209E-4	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999945423825095	WITHOUT_CLASSIFICATION	5.457617490466955E-6	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999945423825095	WITHOUT_CLASSIFICATION	5.457617490466955E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999615947384	WITHOUT_CLASSIFICATION	3.8405261674099636E-8	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.999999871372265	WITHOUT_CLASSIFICATION	1.2862773495959512E-7	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9999988676998937	WITHOUT_CLASSIFICATION	1.1323001062964288E-6	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.999999943284198	WITHOUT_CLASSIFICATION	5.671580205588645E-8	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999974530541598	WITHOUT_CLASSIFICATION	2.5469458402858397E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999991357461716	WITHOUT_CLASSIFICATION	8.64253828419966E-7	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999991357461716	WITHOUT_CLASSIFICATION	8.64253828419966E-7	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999991357461716	WITHOUT_CLASSIFICATION	8.64253828419966E-7	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999991357461716	WITHOUT_CLASSIFICATION	8.64253828419966E-7	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999873050642776	WITHOUT_CLASSIFICATION	1.2694935722482461E-5	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999982707345896	WITHOUT_CLASSIFICATION	1.7292654105069594E-6	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999976577203644	WITHOUT_CLASSIFICATION	2.3422796354572533E-6	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999983599082158	WITHOUT_CLASSIFICATION	1.6400917842191344E-6	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9999997544187443	WITHOUT_CLASSIFICATION	2.455812556048032E-7	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999999849092573	WITHOUT_CLASSIFICATION	1.5090742716094918E-8	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999994393794461	WITHOUT_CLASSIFICATION	5.606205538262849E-7	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999999975783265	WITHOUT_CLASSIFICATION	2.4216734887301483E-9	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999999062904	WITHOUT_CLASSIFICATION	9.370954491540158E-11	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999996260641024	WITHOUT_CLASSIFICATION	3.739358976624977E-7	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999982727377539	WITHOUT_CLASSIFICATION	1.727262246169744E-6	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999994757993947	WITHOUT_CLASSIFICATION	5.24200605251328E-7	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9998928409275221	WITHOUT_CLASSIFICATION	1.0715907247787214E-4	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999999163445754	WITHOUT_CLASSIFICATION	8.365542457050637E-8	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999999619536696	WITHOUT_CLASSIFICATION	3.8046330351064195E-8	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999992515430055	WITHOUT_CLASSIFICATION	7.484569945800646E-7	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9997452927365351	WITHOUT_CLASSIFICATION	2.5470726346484446E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999991357461716	WITHOUT_CLASSIFICATION	8.64253828419966E-7	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999989878430653	WITHOUT_CLASSIFICATION	1.0121569347146805E-6	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999999797619558	WITHOUT_CLASSIFICATION	2.0238044145438432E-8	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998225682314	WITHOUT_CLASSIFICATION	1.7743176873362548E-7	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9998230115471681	WITHOUT_CLASSIFICATION	1.7698845283181208E-4	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999622644195789	WITHOUT_CLASSIFICATION	3.773558042108893E-5	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999999476702741	WITHOUT_CLASSIFICATION	5.232972603518425E-8	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999999977628431	WITHOUT_CLASSIFICATION	2.2371570307470975E-9	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999999142582963	WITHOUT_CLASSIFICATION	8.574170370824661E-8	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999758234924547	WITHOUT_CLASSIFICATION	2.417650754536462E-5	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999997734680328	WITHOUT_CLASSIFICATION	2.265319671723662E-7	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999999655864097	WITHOUT_CLASSIFICATION	3.4413590277639316E-8	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999996440232519	WITHOUT_CLASSIFICATION	3.559767481212735E-7	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999994934446206	WITHOUT_CLASSIFICATION	5.065553794859375E-7	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999709673514496	WITHOUT_CLASSIFICATION	2.903264855042358E-5	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999960119333835	WITHOUT_CLASSIFICATION	3.9880666165408915E-6	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999997986138013	WITHOUT_CLASSIFICATION	2.0138619869302905E-7	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9999999541519752	WITHOUT_CLASSIFICATION	4.5848024874397567E-8	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999999807135532	WITHOUT_CLASSIFICATION	1.928644672305062E-8	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999994889930195	WITHOUT_CLASSIFICATION	5.11006980431978E-7	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999999928884509	WITHOUT_CLASSIFICATION	7.111549156109613E-9	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999584283543742	WITHOUT_CLASSIFICATION	4.157164562591151E-5	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999996216823066	WITHOUT_CLASSIFICATION	3.783176934104125E-7	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.999999984136199	WITHOUT_CLASSIFICATION	1.5863801093789333E-8	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9997214898692691	WITHOUT_CLASSIFICATION	2.7851013073082974E-4	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999997590181364	WITHOUT_CLASSIFICATION	2.4098186365757265E-7	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9999998462246624	WITHOUT_CLASSIFICATION	1.537753375532295E-7	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999985983511918	WITHOUT_CLASSIFICATION	1.4016488083208172E-6	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999973142364459	WITHOUT_CLASSIFICATION	2.6857635541098897E-6	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999999990124444	WITHOUT_CLASSIFICATION	9.87555601029582E-10	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999996818778073	WITHOUT_CLASSIFICATION	3.1812219276212224E-7	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999999964274171	WITHOUT_CLASSIFICATION	3.5725829114222424E-9	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999998500622231	WITHOUT_CLASSIFICATION	1.4993777695073372E-7	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999999940745686	WITHOUT_CLASSIFICATION	5.925431407804018E-9	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999999720882327	WITHOUT_CLASSIFICATION	2.7911767253522107E-8	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.999978127651057	WITHOUT_CLASSIFICATION	2.1872348943004608E-5	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999998712235351	WITHOUT_CLASSIFICATION	1.2877646483918133E-7	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999998378290257	WITHOUT_CLASSIFICATION	1.6217097428587583E-7	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999999999286214	WITHOUT_CLASSIFICATION	7.137858436190471E-11	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999970632057213	WITHOUT_CLASSIFICATION	2.9367942786847954E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999995088726933	WITHOUT_CLASSIFICATION	4.911273066376644E-7	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999999111029907	WITHOUT_CLASSIFICATION	8.889700937868336E-8	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992425594818	WITHOUT_CLASSIFICATION	7.57440518165033E-7	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999999408297172	WITHOUT_CLASSIFICATION	5.9170282812043343E-8	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9584034448073648	WITHOUT_CLASSIFICATION	0.04159655519263507	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9584034448073648	WITHOUT_CLASSIFICATION	0.04159655519263507	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9867408780980577	WITHOUT_CLASSIFICATION	0.013259121901942271	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999997920571272	WITHOUT_CLASSIFICATION	2.0794287294886686E-7	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999960328593929	WITHOUT_CLASSIFICATION	3.967140607162502E-6	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999997920286975	WITHOUT_CLASSIFICATION	2.0797130239359E-7	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.99999756104989	WITHOUT_CLASSIFICATION	2.438950109894264E-6	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999991707431115	WITHOUT_CLASSIFICATION	8.292568884895529E-7	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9999999517212157	WITHOUT_CLASSIFICATION	4.827878433254489E-8	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9999978614487696	WITHOUT_CLASSIFICATION	2.13855123040117E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992425594818	WITHOUT_CLASSIFICATION	7.57440518165033E-7	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999999982800462	WITHOUT_CLASSIFICATION	1.7199538161882712E-9	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999912295630967	WITHOUT_CLASSIFICATION	8.770436903304658E-6	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9994056155514457	WITHOUT_CLASSIFICATION	5.943844485542882E-4	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999999046993547	WITHOUT_CLASSIFICATION	9.530064524102729E-8	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999999627920345	WITHOUT_CLASSIFICATION	3.72079655798866E-8	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999922044515	WITHOUT_CLASSIFICATION	7.795548532485E-9	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999922044515	WITHOUT_CLASSIFICATION	7.795548532485E-9	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999922044515	WITHOUT_CLASSIFICATION	7.795548532485E-9	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999999763473341	WITHOUT_CLASSIFICATION	2.3652665887010923E-8	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999999800817022	WITHOUT_CLASSIFICATION	1.9918297795684178E-8	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999999987178283	WITHOUT_CLASSIFICATION	1.2821717710042433E-9	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.99999726966659	WITHOUT_CLASSIFICATION	2.730333409976006E-6	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999999890711322	WITHOUT_CLASSIFICATION	1.0928867834148508E-8	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999999953312267	WITHOUT_CLASSIFICATION	4.668773209970425E-9	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999858367373871	WITHOUT_CLASSIFICATION	1.4163262612916425E-5	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999950568719	WITHOUT_CLASSIFICATION	4.943128155922754E-9	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999997071913738	WITHOUT_CLASSIFICATION	2.928086262328353E-7	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999997071913738	WITHOUT_CLASSIFICATION	2.928086262328353E-7	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999998817953474	WITHOUT_CLASSIFICATION	1.1820465262506442E-7	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999985123450025	WITHOUT_CLASSIFICATION	1.4876549975039728E-6	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999999764000385	WITHOUT_CLASSIFICATION	2.359996155087968E-8	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999999764000385	WITHOUT_CLASSIFICATION	2.359996155087968E-8	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999998901073583	WITHOUT_CLASSIFICATION	1.098926415991116E-7	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999999766999966	WITHOUT_CLASSIFICATION	2.3300003357798848E-8	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999939138044535	WITHOUT_CLASSIFICATION	6.086195546594194E-6	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999999993490719	WITHOUT_CLASSIFICATION	6.509280959107889E-10	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999993271659681	WITHOUT_CLASSIFICATION	6.728340319583476E-7	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.9999998322061999	WITHOUT_CLASSIFICATION	1.6779380010562084E-7	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999996737124468	WITHOUT_CLASSIFICATION	3.262875531211864E-7	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9999981810193525	WITHOUT_CLASSIFICATION	1.8189806475575123E-6	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.999992250815921	WITHOUT_CLASSIFICATION	7.749184079027547E-6	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999999331529131	WITHOUT_CLASSIFICATION	6.684708690312315E-8	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992425594818	WITHOUT_CLASSIFICATION	7.57440518165033E-7	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999999941999314	WITHOUT_CLASSIFICATION	5.800068620262587E-9	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999983752715	WITHOUT_CLASSIFICATION	1.6247284069985917E-9	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999972982878849	WITHOUT_CLASSIFICATION	2.7017121151481244E-6	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.994746406815982	WITHOUT_CLASSIFICATION	0.005253593184017971	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999994947035329	WITHOUT_CLASSIFICATION	5.052964670606583E-7	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999943276681794	WITHOUT_CLASSIFICATION	5.672331820622335E-6	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999996785825104	WITHOUT_CLASSIFICATION	3.214174895612115E-7	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999995630607914	WITHOUT_CLASSIFICATION	4.3693920864286193E-7	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999999568341579	WITHOUT_CLASSIFICATION	4.3165842164805235E-8	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999911878291134	WITHOUT_CLASSIFICATION	8.81217088656323E-6	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999997457680896	WITHOUT_CLASSIFICATION	2.542319104109201E-7	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999999995075523	WITHOUT_CLASSIFICATION	4.924478176276214E-10	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999991486685775	WITHOUT_CLASSIFICATION	8.513314225024239E-7	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999997346273485	WITHOUT_CLASSIFICATION	2.653726514726553E-7	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999999985704364	WITHOUT_CLASSIFICATION	1.429563615221574E-9	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9999953954582914	WITHOUT_CLASSIFICATION	4.604541708525142E-6	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999981297889361	WITHOUT_CLASSIFICATION	1.870211063898288E-6	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9999999739541223	WITHOUT_CLASSIFICATION	2.6045877654773718E-8	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.999999926466187	WITHOUT_CLASSIFICATION	7.353381303697639E-8	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999991051487153	WITHOUT_CLASSIFICATION	8.94851284640613E-7	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999993930883327	WITHOUT_CLASSIFICATION	6.069116672083393E-7	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999999837831838	WITHOUT_CLASSIFICATION	1.6216816146009246E-8	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.999999926605739	WITHOUT_CLASSIFICATION	7.339426099583416E-8	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999999867057606	WITHOUT_CLASSIFICATION	1.3294239421836458E-8	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999999961161806	WITHOUT_CLASSIFICATION	3.883819371883719E-9	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.999973569887018	WITHOUT_CLASSIFICATION	2.6430112981922496E-5	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999979578370797	WITHOUT_CLASSIFICATION	2.042162920317479E-6	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999999510431592	WITHOUT_CLASSIFICATION	4.895684093324002E-8	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999999686881603	WITHOUT_CLASSIFICATION	3.1311839703491734E-8	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999999413084906	WITHOUT_CLASSIFICATION	5.869150929728417E-8	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999999965802631	WITHOUT_CLASSIFICATION	3.4197369095617863E-9	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9999999037893537	WITHOUT_CLASSIFICATION	9.621064641250342E-8	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999985700873516	WITHOUT_CLASSIFICATION	1.4299126484254388E-6	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999996253795259	WITHOUT_CLASSIFICATION	3.7462047412061556E-7	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999989731299219	WITHOUT_CLASSIFICATION	1.026870078079908E-6	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999965132136585	WITHOUT_CLASSIFICATION	3.486786341511251E-6	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999997387254811	WITHOUT_CLASSIFICATION	2.612745189265694E-7	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999962947428672	WITHOUT_CLASSIFICATION	3.705257132740811E-6	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999972228186473	WITHOUT_CLASSIFICATION	2.7771813526396653E-6	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999998764961332	WITHOUT_CLASSIFICATION	1.2350386673654725E-7	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.999999991119766	WITHOUT_CLASSIFICATION	8.880233953846481E-9	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9999999782759641	WITHOUT_CLASSIFICATION	2.172403591949935E-8	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999999839005782	WITHOUT_CLASSIFICATION	1.6099421805140044E-8	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999999258667858	WITHOUT_CLASSIFICATION	7.41332142206708E-8	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9999985302838922	WITHOUT_CLASSIFICATION	1.4697161078564204E-6	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9999999755935837	WITHOUT_CLASSIFICATION	2.440641633675211E-8	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9999998252064253	WITHOUT_CLASSIFICATION	1.7479357478606496E-7	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999750914127914	WITHOUT_CLASSIFICATION	2.4908587208669065E-5	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.999999933164806	WITHOUT_CLASSIFICATION	6.683519399510602E-8	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999965697785463	WITHOUT_CLASSIFICATION	3.4302214537035883E-6	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9998034330142721	WITHOUT_CLASSIFICATION	1.9656698572798216E-4	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999876344653125	WITHOUT_CLASSIFICATION	1.23655346874879E-5	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999964438804371	WITHOUT_CLASSIFICATION	3.556119563028455E-6	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999999798413456	WITHOUT_CLASSIFICATION	2.015865433607637E-8	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999957966334776	WITHOUT_CLASSIFICATION	4.203366522389493E-6	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.999999652145486	WITHOUT_CLASSIFICATION	3.4785451397131136E-7	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999998160365322	WITHOUT_CLASSIFICATION	1.8396346771497743E-7	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.99999983172256	WITHOUT_CLASSIFICATION	1.6827743998846312E-7	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999971733017637	WITHOUT_CLASSIFICATION	2.8266982363022823E-6	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9999891740763006	WITHOUT_CLASSIFICATION	1.0825923699323482E-5	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.999999359318059	WITHOUT_CLASSIFICATION	6.406819410285061E-7	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.999999359318059	WITHOUT_CLASSIFICATION	6.406819410285061E-7	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999986560276267	WITHOUT_CLASSIFICATION	1.3439723732265322E-6	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999986560276267	WITHOUT_CLASSIFICATION	1.3439723732265322E-6	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999999003072828	WITHOUT_CLASSIFICATION	9.969271724875035E-8	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999999003072828	WITHOUT_CLASSIFICATION	9.969271724875035E-8	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999995504343454	WITHOUT_CLASSIFICATION	4.49565654636653E-7	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999995504343454	WITHOUT_CLASSIFICATION	4.49565654636653E-7	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9999997835789286	WITHOUT_CLASSIFICATION	2.1642107136749382E-7	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9999808815460869	WITHOUT_CLASSIFICATION	1.9118453913123155E-5	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999998818272282	WITHOUT_CLASSIFICATION	1.181727718134839E-7	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999999991820895	WITHOUT_CLASSIFICATION	8.179106078109512E-10	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999999654493378	WITHOUT_CLASSIFICATION	3.455066223466194E-8	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999999561181057	WITHOUT_CLASSIFICATION	4.388189427635108E-8	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999971554623168	WITHOUT_CLASSIFICATION	2.8445376832482535E-6	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999999773016801	WITHOUT_CLASSIFICATION	2.2698319919278563E-8	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999999142884458	WITHOUT_CLASSIFICATION	8.571155421716726E-8	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999999924130242	WITHOUT_CLASSIFICATION	7.58697588283262E-9	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999987315485769	WITHOUT_CLASSIFICATION	1.2684514231414747E-6	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999999968390181	WITHOUT_CLASSIFICATION	3.160981974600128E-9	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999998958884326	WITHOUT_CLASSIFICATION	1.041115673698489E-7	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.999999954549687	WITHOUT_CLASSIFICATION	4.5450313086928944E-8	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999999811415696	WITHOUT_CLASSIFICATION	1.8858430314174258E-8	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999999713879417	WITHOUT_CLASSIFICATION	2.861205821213649E-8	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999868832295685	WITHOUT_CLASSIFICATION	1.3116770431479204E-5	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999999835965224	WITHOUT_CLASSIFICATION	1.6403477517350785E-8	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999999878836117	WITHOUT_CLASSIFICATION	1.211638830715972E-8	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999511234395893	WITHOUT_CLASSIFICATION	4.887656041068363E-5	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999998460778647	WITHOUT_CLASSIFICATION	1.539221352349682E-7	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.999999221218507	WITHOUT_CLASSIFICATION	7.787814930212116E-7	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999865073663934	WITHOUT_CLASSIFICATION	1.3492633606558852E-5	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999999879524522	WITHOUT_CLASSIFICATION	1.2047547732720763E-8	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999999615910445	WITHOUT_CLASSIFICATION	3.840895548011299E-8	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999999960910704	WITHOUT_CLASSIFICATION	3.908929634522452E-9	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.999999492626224	WITHOUT_CLASSIFICATION	5.073737760344248E-7	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.999996828475044	WITHOUT_CLASSIFICATION	3.1715249560727664E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.999996828475044	WITHOUT_CLASSIFICATION	3.1715249560727664E-6	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999999863307653	WITHOUT_CLASSIFICATION	1.3669234789946707E-8	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.999999441594588	WITHOUT_CLASSIFICATION	5.584054121181664E-7	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9999977850774376	WITHOUT_CLASSIFICATION	2.2149225623242112E-6	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999999997087743	WITHOUT_CLASSIFICATION	2.9122571531963497E-10	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999999809926629	WITHOUT_CLASSIFICATION	1.900733710840996E-8	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999999299871716	WITHOUT_CLASSIFICATION	7.001282839140052E-8	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999961564763817	WITHOUT_CLASSIFICATION	3.843523618157397E-6	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999961564763817	WITHOUT_CLASSIFICATION	3.843523618157397E-6	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999999637149455	WITHOUT_CLASSIFICATION	3.62850544782771E-8	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9920885628550011	WITHOUT_CLASSIFICATION	0.007911437144998954	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999999722727917	WITHOUT_CLASSIFICATION	2.7727208340921938E-8	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999999722727917	WITHOUT_CLASSIFICATION	2.7727208340921938E-8	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999999934624955	WITHOUT_CLASSIFICATION	6.537504463641008E-9	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999998119395928	WITHOUT_CLASSIFICATION	1.880604072223398E-7	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999998119395928	WITHOUT_CLASSIFICATION	1.880604072223398E-7	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999615714153601	WITHOUT_CLASSIFICATION	3.8428584639821105E-5	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999615714153601	WITHOUT_CLASSIFICATION	3.8428584639821105E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999997112628034	WITHOUT_CLASSIFICATION	2.887371966255088E-7	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999997112628034	WITHOUT_CLASSIFICATION	2.887371966255088E-7	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.999999882777286	WITHOUT_CLASSIFICATION	1.1722271389371315E-7	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999994310112884	WITHOUT_CLASSIFICATION	5.689887115395014E-7	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999999929551828	WITHOUT_CLASSIFICATION	7.0448172317882705E-9	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999999997948821	WITHOUT_CLASSIFICATION	2.0511805565253645E-10	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999999991920149	WITHOUT_CLASSIFICATION	8.079852641236335E-10	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999999599220459	WITHOUT_CLASSIFICATION	4.007795405579683E-8	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999999282028316	WITHOUT_CLASSIFICATION	7.179716836790277E-8	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999999381835918	WITHOUT_CLASSIFICATION	6.181640825134862E-8	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999999282028316	WITHOUT_CLASSIFICATION	7.179716836790277E-8	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9999016590539919	WITHOUT_CLASSIFICATION	9.834094600813527E-5	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.999999664987476	WITHOUT_CLASSIFICATION	3.3501252396874796E-7	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999998633687446	WITHOUT_CLASSIFICATION	1.3663125534494294E-7	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999966337255518	WITHOUT_CLASSIFICATION	3.366274448116921E-6	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999999669647944	WITHOUT_CLASSIFICATION	3.303520554702778E-8	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.999943902256281	WITHOUT_CLASSIFICATION	5.609774371905207E-5	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999893702291672	WITHOUT_CLASSIFICATION	1.0629770832866424E-5	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999909291412566	WITHOUT_CLASSIFICATION	9.070858743375186E-6	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.999999908960532	WITHOUT_CLASSIFICATION	9.103946796327322E-8	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999998472897476	WITHOUT_CLASSIFICATION	1.5271025249608974E-7	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999999938031617	WITHOUT_CLASSIFICATION	6.196838327680335E-9	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999999897427022	WITHOUT_CLASSIFICATION	1.025729776847731E-8	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.999899502263817	WITHOUT_CLASSIFICATION	1.0049773618303654E-4	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9999998026822761	WITHOUT_CLASSIFICATION	1.9731772394275664E-7	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999999113870295	WITHOUT_CLASSIFICATION	8.861297044359842E-8	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999999981480394	WITHOUT_CLASSIFICATION	1.8519605732440063E-9	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999974507041409	WITHOUT_CLASSIFICATION	2.5492958589876365E-6	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999823479083798	WITHOUT_CLASSIFICATION	1.7652091620185132E-5	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9917484598646095	WITHOUT_CLASSIFICATION	0.008251540135390579	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999732422787279	WITHOUT_CLASSIFICATION	2.6757721272154695E-5	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999999993719508	WITHOUT_CLASSIFICATION	6.280491823477881E-10	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999983650373724	WITHOUT_CLASSIFICATION	1.6349626276393266E-6	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999999984185776	WITHOUT_CLASSIFICATION	1.581422469154727E-9	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999974244863877	WITHOUT_CLASSIFICATION	2.575513612166501E-6	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999997644316645	WITHOUT_CLASSIFICATION	2.355683355433006E-7	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999999799238039	WITHOUT_CLASSIFICATION	2.0076196106035287E-8	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.999999997579323	WITHOUT_CLASSIFICATION	2.4206769827206315E-9	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999999789542037	WITHOUT_CLASSIFICATION	2.1045796277772232E-8	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.999999999483703	WITHOUT_CLASSIFICATION	5.162969667204235E-10	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999999784048075	WITHOUT_CLASSIFICATION	2.1595192497256853E-8	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999999926678893	WITHOUT_CLASSIFICATION	7.332110666779809E-9	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999998274505042	WITHOUT_CLASSIFICATION	1.725494957480351E-7	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999999960241035	WITHOUT_CLASSIFICATION	3.975896488593657E-9	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999998840280339	WITHOUT_CLASSIFICATION	1.1597196621004364E-7	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999993726206778	WITHOUT_CLASSIFICATION	6.273793222308706E-7	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999999931919304	WITHOUT_CLASSIFICATION	6.8080696009480535E-9	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999999969531383	WITHOUT_CLASSIFICATION	3.046861710014927E-9	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999998421353896	WITHOUT_CLASSIFICATION	1.5786461036872658E-7	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999993463452121	WITHOUT_CLASSIFICATION	6.536547878713715E-7	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999999992829334	WITHOUT_CLASSIFICATION	7.170665055072752E-10	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999999971352004	WITHOUT_CLASSIFICATION	2.864799686595296E-9	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999745433594	WITHOUT_CLASSIFICATION	2.545664055802553E-8	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999999956390205	WITHOUT_CLASSIFICATION	4.360979545757223E-9	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999999845101244	WITHOUT_CLASSIFICATION	1.5489875712596985E-8	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999982689414	WITHOUT_CLASSIFICATION	1.7310586833793394E-9	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999999949316131	WITHOUT_CLASSIFICATION	5.0683869311342514E-9	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999999989976587	WITHOUT_CLASSIFICATION	1.0023413238355492E-9	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999999828012499	WITHOUT_CLASSIFICATION	1.7198750091368478E-8	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999302466432	WITHOUT_CLASSIFICATION	6.975335680860948E-8	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999970222115534	WITHOUT_CLASSIFICATION	2.977788446519106E-6	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999958312843172	WITHOUT_CLASSIFICATION	4.168715682794394E-6	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999999735392413	WITHOUT_CLASSIFICATION	2.6460758677345428E-8	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999983033643128	WITHOUT_CLASSIFICATION	1.6966356871891515E-6	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999999661271817	WITHOUT_CLASSIFICATION	3.387281839980902E-8	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999997686046047	WITHOUT_CLASSIFICATION	2.3139539522092503E-7	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999997686046047	WITHOUT_CLASSIFICATION	2.3139539522092503E-7	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999883836831	WITHOUT_CLASSIFICATION	1.1616316889381069E-8	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999998926997477	WITHOUT_CLASSIFICATION	1.0730025235938937E-7	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999999970304644	WITHOUT_CLASSIFICATION	2.969535749217644E-9	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999976189850812	WITHOUT_CLASSIFICATION	2.3810149187866813E-6	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999998680248999	WITHOUT_CLASSIFICATION	1.3197509999006974E-7	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999996977457354	WITHOUT_CLASSIFICATION	3.022542646626522E-7	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999999749167799	WITHOUT_CLASSIFICATION	2.50832200923985E-8	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999795953583428	WITHOUT_CLASSIFICATION	2.0404641657168954E-5	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999935967366075	WITHOUT_CLASSIFICATION	6.403263392434711E-6	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.999999992174382	WITHOUT_CLASSIFICATION	7.825618021663236E-9	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999994082252407	WITHOUT_CLASSIFICATION	5.917747594244114E-7	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999994082252407	WITHOUT_CLASSIFICATION	5.917747594244114E-7	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.999494824331897	WITHOUT_CLASSIFICATION	5.051756681030956E-4	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999999206249146	WITHOUT_CLASSIFICATION	7.937508542239598E-8	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999986074438074	WITHOUT_CLASSIFICATION	1.3925561925280479E-6	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999999991114841	WITHOUT_CLASSIFICATION	8.885159491648562E-10	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999999998180398	WITHOUT_CLASSIFICATION	1.8196018871244543E-10	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999998561936679	WITHOUT_CLASSIFICATION	1.4380633212631E-7	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999968175693	WITHOUT_CLASSIFICATION	3.1824306442792507E-9	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999999747419929	WITHOUT_CLASSIFICATION	2.525800708424729E-8	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.999999788271266	WITHOUT_CLASSIFICATION	2.117287340456837E-7	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999951085940116	WITHOUT_CLASSIFICATION	4.89140598831221E-6	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.999999999724371	WITHOUT_CLASSIFICATION	2.7562887811832043E-10	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999999737115836	WITHOUT_CLASSIFICATION	2.6288416432510637E-8	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999998193163898	WITHOUT_CLASSIFICATION	1.806836101935304E-7	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999998193163898	WITHOUT_CLASSIFICATION	1.806836101935304E-7	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999990354417836	WITHOUT_CLASSIFICATION	9.64558216395589E-7	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999916965436246	WITHOUT_CLASSIFICATION	8.303456375465036E-6	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999998214919982	WITHOUT_CLASSIFICATION	1.785080017927987E-7	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999982214251955	WITHOUT_CLASSIFICATION	1.7785748045650359E-6	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999980052359172	WITHOUT_CLASSIFICATION	1.9947640828312856E-6	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999999910903863	WITHOUT_CLASSIFICATION	8.909613738763858E-9	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.999999855358066	WITHOUT_CLASSIFICATION	1.4464193405383813E-7	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999999913310693	WITHOUT_CLASSIFICATION	8.668930793329926E-9	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9998094229432468	WITHOUT_CLASSIFICATION	1.9057705675311795E-4	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999999430563848	WITHOUT_CLASSIFICATION	5.694361514268784E-8	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999986074438074	WITHOUT_CLASSIFICATION	1.3925561925280479E-6	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999897079956058	WITHOUT_CLASSIFICATION	1.0292004394299698E-5	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999995039410128	WITHOUT_CLASSIFICATION	4.960589873336776E-7	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999999788949269	WITHOUT_CLASSIFICATION	2.110507304736952E-8	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999987860625456	WITHOUT_CLASSIFICATION	1.2139374544372376E-6	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999998031948485	WITHOUT_CLASSIFICATION	1.9680515156277739E-7	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999999967885367	WITHOUT_CLASSIFICATION	3.211463290512055E-9	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999828954671406	WITHOUT_CLASSIFICATION	1.7104532859406147E-5	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999968682878138	WITHOUT_CLASSIFICATION	3.1317121862039735E-6	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999999897393925	WITHOUT_CLASSIFICATION	1.0260607423588121E-8	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999749575076518	WITHOUT_CLASSIFICATION	2.5042492348264882E-5	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999619453598408	WITHOUT_CLASSIFICATION	3.805464015923286E-5	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999999862458006	WITHOUT_CLASSIFICATION	1.3754199500854844E-8	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999987519844913	WITHOUT_CLASSIFICATION	1.2480155086598908E-6	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999915265024968	WITHOUT_CLASSIFICATION	8.473497503344434E-6	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999956006087283	WITHOUT_CLASSIFICATION	4.399391271802074E-6	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999997583046506	WITHOUT_CLASSIFICATION	2.4169534943947194E-7	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999996690193704	WITHOUT_CLASSIFICATION	3.309806295373987E-7	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999998174090828	WITHOUT_CLASSIFICATION	1.8259091707004805E-7	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999954946013905	WITHOUT_CLASSIFICATION	4.505398609551794E-6	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.9999999982998009	WITHOUT_CLASSIFICATION	1.7001991391484267E-9	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999999999648911	WITHOUT_CLASSIFICATION	3.510888379645591E-11	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999950452542135	WITHOUT_CLASSIFICATION	4.954745786611424E-6	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.999999797814239	WITHOUT_CLASSIFICATION	2.021857610274732E-7	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999546996719816	WITHOUT_CLASSIFICATION	4.5300328018465976E-5	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999995664482327	WITHOUT_CLASSIFICATION	4.3355176728557374E-7	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999999990174848	WITHOUT_CLASSIFICATION	9.825152102539296E-10	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9999997416526308	WITHOUT_CLASSIFICATION	2.583473691600993E-7	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999997508033305	WITHOUT_CLASSIFICATION	2.491966694643681E-7	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9999992709143695	WITHOUT_CLASSIFICATION	7.290856306292289E-7	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999997620562894	WITHOUT_CLASSIFICATION	2.3794371061173642E-7	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999996362867464	WITHOUT_CLASSIFICATION	3.637132536008484E-7	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999996362867464	WITHOUT_CLASSIFICATION	3.637132536008484E-7	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9986406019699844	WITHOUT_CLASSIFICATION	0.0013593980300155527	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9997428662579471	WITHOUT_CLASSIFICATION	2.571337420528599E-4	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.9999999995240744	WITHOUT_CLASSIFICATION	4.759256046083705E-10	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9994638322107373	WITHOUT_CLASSIFICATION	5.36167789262645E-4	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999968079730536	WITHOUT_CLASSIFICATION	3.192026946480027E-6	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999998516554589	WITHOUT_CLASSIFICATION	1.4834454106388447E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999992425594818	WITHOUT_CLASSIFICATION	7.57440518165033E-7	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999999783347423	WITHOUT_CLASSIFICATION	2.166525773680958E-8	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999996940316077	WITHOUT_CLASSIFICATION	3.0596839224250243E-7	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999997705527962	WITHOUT_CLASSIFICATION	2.2944720371463436E-7	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999999355694389	WITHOUT_CLASSIFICATION	6.443056107451754E-8	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.999999933462915	WITHOUT_CLASSIFICATION	6.653708502691736E-8	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999999465402866	WITHOUT_CLASSIFICATION	5.3459713374525955E-8	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999998764961332	WITHOUT_CLASSIFICATION	1.2350386673654725E-7	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9995548123011911	WITHOUT_CLASSIFICATION	4.4518769880890174E-4	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999992482034141	WITHOUT_CLASSIFICATION	7.517965859942732E-7	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999992983287664	WITHOUT_CLASSIFICATION	7.016712336156225E-7	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999999816549282	WITHOUT_CLASSIFICATION	1.8345071774296245E-8	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.999999809813036	WITHOUT_CLASSIFICATION	1.901869639576349E-7	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999997731596203	WITHOUT_CLASSIFICATION	2.2684037968257121E-7	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999943575288702	WITHOUT_CLASSIFICATION	5.642471129722157E-6	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999943575288702	WITHOUT_CLASSIFICATION	5.642471129722157E-6	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9999989497423858	WITHOUT_CLASSIFICATION	1.050257614224681E-6	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999969562333579	WITHOUT_CLASSIFICATION	3.0437666420604433E-6	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999991907746216	WITHOUT_CLASSIFICATION	8.092253784510334E-7	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.999999998322573	WITHOUT_CLASSIFICATION	1.6774270067274226E-9	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999999903970284	WITHOUT_CLASSIFICATION	9.602971700404421E-9	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9991140482897666	WITHOUT_CLASSIFICATION	8.859517102334768E-4	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999999321343048	WITHOUT_CLASSIFICATION	6.786569507458915E-8	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999998276756	WITHOUT_CLASSIFICATION	1.7232425429396013E-10	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999990412528639	WITHOUT_CLASSIFICATION	9.587471361925042E-7	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999437205832764	WITHOUT_CLASSIFICATION	5.62794167236023E-5	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9999993838377956	WITHOUT_CLASSIFICATION	6.161622043883245E-7	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999999776871434	WITHOUT_CLASSIFICATION	2.231285652687005E-8	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999990799691053	WITHOUT_CLASSIFICATION	9.200308946571291E-7	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999999989637925	WITHOUT_CLASSIFICATION	1.0362074164982524E-9	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999992031177591	WITHOUT_CLASSIFICATION	7.968822407965765E-7	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999998606182234	WITHOUT_CLASSIFICATION	1.393817765410646E-7	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999971254762249	WITHOUT_CLASSIFICATION	2.874523775120916E-6	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9999997912209716	WITHOUT_CLASSIFICATION	2.08779028381409E-7	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999959711892	WITHOUT_CLASSIFICATION	4.028810781871686E-9	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999999984257277	WITHOUT_CLASSIFICATION	1.574272375198251E-9	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999800835445081	WITHOUT_CLASSIFICATION	1.9916455491942294E-5	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999994643843028	WITHOUT_CLASSIFICATION	5.356156971779092E-7	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999999372767724	WITHOUT_CLASSIFICATION	6.272322760018267E-8	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999996818027073	WITHOUT_CLASSIFICATION	3.181972927555617E-7	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999993181812814	WITHOUT_CLASSIFICATION	6.818187185243451E-7	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999988856273601	WITHOUT_CLASSIFICATION	1.1143726400351478E-6	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.9999942737601034	WITHOUT_CLASSIFICATION	5.726239896617825E-6	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999999684901852	WITHOUT_CLASSIFICATION	3.1509814700413916E-8	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.999999977803974	WITHOUT_CLASSIFICATION	2.2196026058770445E-8	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999999312549951	WITHOUT_CLASSIFICATION	6.874500495234565E-8	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999997675101642	WITHOUT_CLASSIFICATION	2.3248983585361383E-7	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999892906354395	WITHOUT_CLASSIFICATION	1.0709364560456683E-5	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999992137239977	WITHOUT_CLASSIFICATION	7.862760022208127E-7	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.9999997684909666	WITHOUT_CLASSIFICATION	2.3150903336475507E-7	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999999965524432	WITHOUT_CLASSIFICATION	3.447556854339499E-9	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999999999153003	WITHOUT_CLASSIFICATION	8.46997743257749E-11	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999999840567605	WITHOUT_CLASSIFICATION	1.5943239513924415E-8	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9999695126106661	WITHOUT_CLASSIFICATION	3.0487389333818343E-5	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999662325098738	WITHOUT_CLASSIFICATION	3.376749012616728E-5	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999965270024986	WITHOUT_CLASSIFICATION	3.472997501320123E-6	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.999999999523631	WITHOUT_CLASSIFICATION	4.763690974439575E-10	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999998563921745	WITHOUT_CLASSIFICATION	1.4360782560902688E-7	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999999736137287	WITHOUT_CLASSIFICATION	2.638627136946388E-8	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999996564645209	WITHOUT_CLASSIFICATION	3.435354790690501E-7	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999998649498612	WITHOUT_CLASSIFICATION	1.3505013890179488E-7	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999996564645209	WITHOUT_CLASSIFICATION	3.435354790690501E-7	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999998613951301	WITHOUT_CLASSIFICATION	1.3860486991492144E-7	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9854708951494223	WITHOUT_CLASSIFICATION	0.014529104850577743	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999962933375606	WITHOUT_CLASSIFICATION	3.7066624395115544E-6	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.7765856532603704	IMPLEMENTATION	0.22341434673962965	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999992551717178	WITHOUT_CLASSIFICATION	7.448282820543372E-7	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999999952042448	WITHOUT_CLASSIFICATION	4.795755253054128E-9	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9999999915567469	WITHOUT_CLASSIFICATION	8.443252999610821E-9	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999999725068291	WITHOUT_CLASSIFICATION	2.7493170935001188E-8	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999973016410698	WITHOUT_CLASSIFICATION	2.698358930198473E-6	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.8695623671756769	IMPLEMENTATION	0.1304376328243231	WITHOUT_CLASSIFICATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999378650709483	WITHOUT_CLASSIFICATION	6.21349290517092E-5	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999993129569339	WITHOUT_CLASSIFICATION	6.870430660941249E-7	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999705109695648	WITHOUT_CLASSIFICATION	2.9489030435158186E-5	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999921470281693	WITHOUT_CLASSIFICATION	7.852971830653017E-6	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9948667355618194	WITHOUT_CLASSIFICATION	0.005133264438180609	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9885817895107889	WITHOUT_CLASSIFICATION	0.011418210489211027	IMPLEMENTATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9994851744728447	WITHOUT_CLASSIFICATION	5.148255271553544E-4	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999999952426237	WITHOUT_CLASSIFICATION	4.757376248427456E-9	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999982338051008	WITHOUT_CLASSIFICATION	1.7661948990952842E-6	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999988162045829	WITHOUT_CLASSIFICATION	1.183795417174209E-6	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999814863640174	WITHOUT_CLASSIFICATION	1.8513635982633094E-5	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999902201561	WITHOUT_CLASSIFICATION	9.779843800673263E-9	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999994288114656	WITHOUT_CLASSIFICATION	5.71188534262665E-7	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.999999926777014	WITHOUT_CLASSIFICATION	7.322298590260394E-8	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999992759946446	WITHOUT_CLASSIFICATION	7.240053554657321E-7	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999993796413845	WITHOUT_CLASSIFICATION	6.203586154833762E-7	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999999958995969	WITHOUT_CLASSIFICATION	4.100403078655198E-9	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999999579061091	WITHOUT_CLASSIFICATION	4.209389084773235E-8	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999982727377539	WITHOUT_CLASSIFICATION	1.727262246169744E-6	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999998008830419	WITHOUT_CLASSIFICATION	1.9911695809300928E-7	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999996409145108	WITHOUT_CLASSIFICATION	3.590854892420647E-7	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999992838795522	WITHOUT_CLASSIFICATION	7.161204478322164E-7	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.999999149432518	WITHOUT_CLASSIFICATION	8.505674818589912E-7	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9999984624080963	WITHOUT_CLASSIFICATION	1.5375919036707417E-6	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999996066531346	WITHOUT_CLASSIFICATION	3.933468654841806E-7	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9999997886945716	WITHOUT_CLASSIFICATION	2.1130542849932255E-7	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999999999194006	WITHOUT_CLASSIFICATION	8.059940441496236E-11	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999970274629	WITHOUT_CLASSIFICATION	2.9725371718381915E-9	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999961584350527	WITHOUT_CLASSIFICATION	3.841564947255474E-6	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999999441539471	WITHOUT_CLASSIFICATION	5.58460528794864E-8	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999135105162561	WITHOUT_CLASSIFICATION	8.648948374391613E-5	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999988399872162	WITHOUT_CLASSIFICATION	1.1600127838289878E-6	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999999936751152	WITHOUT_CLASSIFICATION	6.324884883785652E-9	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999979203113564	WITHOUT_CLASSIFICATION	2.0796886436979735E-6	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999979203113564	WITHOUT_CLASSIFICATION	2.0796886436979735E-6	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999971532317945	WITHOUT_CLASSIFICATION	2.8467682055676783E-6	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.999999995725976	WITHOUT_CLASSIFICATION	4.274024007666873E-9	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999999694280319	WITHOUT_CLASSIFICATION	3.057196814657277E-8	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999999999986032	WITHOUT_CLASSIFICATION	1.3967481792963792E-12	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999999999998	WITHOUT_CLASSIFICATION	2.687675168762399E-16	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999834592902	WITHOUT_CLASSIFICATION	1.6540709823498427E-8	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999640632885715	WITHOUT_CLASSIFICATION	3.5936711428617334E-5	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999997962741416	WITHOUT_CLASSIFICATION	2.0372585831690565E-7	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999995114522419	WITHOUT_CLASSIFICATION	4.88547758069596E-7	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999999997395543	WITHOUT_CLASSIFICATION	2.604456427145989E-10	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999999990433031	WITHOUT_CLASSIFICATION	9.566968636106524E-10	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999999859772016	WITHOUT_CLASSIFICATION	1.4022798427412475E-8	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999999570472587	WITHOUT_CLASSIFICATION	4.2952741174231906E-8	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9998417412824263	WITHOUT_CLASSIFICATION	1.5825871757363985E-4	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999999651819915	WITHOUT_CLASSIFICATION	3.481800839366596E-8	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.999940856441366	WITHOUT_CLASSIFICATION	5.9143558634086715E-5	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999998867239801	WITHOUT_CLASSIFICATION	1.1327601983719294E-7	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999999974659378	WITHOUT_CLASSIFICATION	2.534062223102368E-9	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999999869645815	WITHOUT_CLASSIFICATION	1.3035418470887092E-8	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999999837618563	WITHOUT_CLASSIFICATION	1.6238143678625812E-8	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.9999042779026808	WITHOUT_CLASSIFICATION	9.572209731928512E-5	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9995422006342395	WITHOUT_CLASSIFICATION	4.5779936576052966E-4	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999998355690047	WITHOUT_CLASSIFICATION	1.64430995366242E-7	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999997207804867	WITHOUT_CLASSIFICATION	2.7921951326686807E-7	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999999942786518	WITHOUT_CLASSIFICATION	5.721348227422986E-9	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999941211052	WITHOUT_CLASSIFICATION	5.878894863333075E-9	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999999205654	WITHOUT_CLASSIFICATION	7.943457956093116E-11	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999999831274112	WITHOUT_CLASSIFICATION	1.68725888143475E-8	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.999999992885186	WITHOUT_CLASSIFICATION	7.114813886110346E-9	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.999999997324483	WITHOUT_CLASSIFICATION	2.6755170058416816E-9	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999996970519512	WITHOUT_CLASSIFICATION	3.029480487807117E-7	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999999740893767	WITHOUT_CLASSIFICATION	2.5910623257753885E-8	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999933461117	WITHOUT_CLASSIFICATION	6.653888328680859E-9	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999967364639107	WITHOUT_CLASSIFICATION	3.2635360891204283E-6	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999999987772762	WITHOUT_CLASSIFICATION	1.222723796696567E-9	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999990645886466	WITHOUT_CLASSIFICATION	9.354113534095816E-7	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999997404743022	WITHOUT_CLASSIFICATION	2.595256978071517E-7	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999998340398994	WITHOUT_CLASSIFICATION	1.6596010065507572E-7	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9998904244800029	WITHOUT_CLASSIFICATION	1.0957551999705437E-4	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999122378377	WITHOUT_CLASSIFICATION	8.776216225873608E-8	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999996725947008	WITHOUT_CLASSIFICATION	3.2740529925141064E-7	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9991214578721951	WITHOUT_CLASSIFICATION	8.785421278049415E-4	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999741973095992	WITHOUT_CLASSIFICATION	2.5802690400641084E-5	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999999642705604	WITHOUT_CLASSIFICATION	3.572943956864883E-8	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999877520821865	WITHOUT_CLASSIFICATION	1.2247917813610245E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999995266919043	WITHOUT_CLASSIFICATION	4.733080957561654E-7	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999995328352154	WITHOUT_CLASSIFICATION	4.671647846611364E-7	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999998711384303	WITHOUT_CLASSIFICATION	1.28861569827681E-7	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.999998555033081	WITHOUT_CLASSIFICATION	1.4449669190850162E-6	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999465219395755	WITHOUT_CLASSIFICATION	5.347806042452948E-5	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.999998653436253	WITHOUT_CLASSIFICATION	1.3465637469394054E-6	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999989883460786	WITHOUT_CLASSIFICATION	1.011653921449589E-6	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.999999892325191	WITHOUT_CLASSIFICATION	1.0767480891512006E-7	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999999948575494	WITHOUT_CLASSIFICATION	5.142450568915085E-9	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999996270814824	WITHOUT_CLASSIFICATION	3.729185176354356E-7	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.999993876019052	WITHOUT_CLASSIFICATION	6.123980948019029E-6	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999999928369433	WITHOUT_CLASSIFICATION	7.163056616184612E-9	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999999957254601	WITHOUT_CLASSIFICATION	4.27453996070067E-9	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999923905927559	WITHOUT_CLASSIFICATION	7.609407244077787E-6	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999998242745611	WITHOUT_CLASSIFICATION	1.7572543895078008E-7	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.999999973964166	WITHOUT_CLASSIFICATION	2.6035834062404096E-8	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999999781073194	WITHOUT_CLASSIFICATION	2.189268061383293E-8	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999999767825	WITHOUT_CLASSIFICATION	2.3217430410699337E-11	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999974676699	WITHOUT_CLASSIFICATION	2.532330053676362E-9	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9999364683497489	WITHOUT_CLASSIFICATION	6.353165025106591E-5	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999998971832754	WITHOUT_CLASSIFICATION	1.0281672448892784E-7	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999998410113069	WITHOUT_CLASSIFICATION	1.5898869316116733E-7	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999999841797208	WITHOUT_CLASSIFICATION	1.5820279276193514E-8	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.9999985198555894	WITHOUT_CLASSIFICATION	1.4801444105377109E-6	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.999999831837331	WITHOUT_CLASSIFICATION	1.6816266894605378E-7	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999988263182864	WITHOUT_CLASSIFICATION	1.173681713589284E-6	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999942189443554	WITHOUT_CLASSIFICATION	5.781055644681052E-6	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999999263422101	WITHOUT_CLASSIFICATION	7.365778988211742E-8	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999996914873522	WITHOUT_CLASSIFICATION	3.085126477114238E-7	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9999997584172682	WITHOUT_CLASSIFICATION	2.41582731787167E-7	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9999993073294907	WITHOUT_CLASSIFICATION	6.926705093607401E-7	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9999996821956263	WITHOUT_CLASSIFICATION	3.178043737966665E-7	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9999996120925916	WITHOUT_CLASSIFICATION	3.8790740839502324E-7	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9999995841319377	WITHOUT_CLASSIFICATION	4.158680623961085E-7	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9999996467381198	WITHOUT_CLASSIFICATION	3.5326188018949886E-7	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9999995255560756	WITHOUT_CLASSIFICATION	4.7444392442459025E-7	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9999996321570933	WITHOUT_CLASSIFICATION	3.6784290663441407E-7	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9999994144146678	WITHOUT_CLASSIFICATION	5.855853321760429E-7	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9999995041956122	WITHOUT_CLASSIFICATION	4.95804387699337E-7	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9999996076126795	WITHOUT_CLASSIFICATION	3.9238732046865047E-7	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9999997319561377	WITHOUT_CLASSIFICATION	2.6804386228326665E-7	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.999999593706851	WITHOUT_CLASSIFICATION	4.0629314902083644E-7	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9999996084870078	WITHOUT_CLASSIFICATION	3.9151299223490076E-7	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9999994969244776	WITHOUT_CLASSIFICATION	5.030755223794367E-7	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9999996407840119	WITHOUT_CLASSIFICATION	3.5921598812263636E-7	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.999999483191631	WITHOUT_CLASSIFICATION	5.168083689944637E-7	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9999999057341018	WITHOUT_CLASSIFICATION	9.42658983011599E-8	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9999996816456149	WITHOUT_CLASSIFICATION	3.183543851074109E-7	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9999996803200315	WITHOUT_CLASSIFICATION	3.1967996851849545E-7	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9991207945759378	WITHOUT_CLASSIFICATION	8.792054240620799E-4	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9998722184920864	WITHOUT_CLASSIFICATION	1.2778150791348754E-4	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999987062666985	WITHOUT_CLASSIFICATION	1.293733301436156E-6	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.999998336516466	WITHOUT_CLASSIFICATION	1.6634835340702229E-6	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.999999848041491	WITHOUT_CLASSIFICATION	1.5195850912349146E-7	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999993443220688	WITHOUT_CLASSIFICATION	6.556779312584958E-7	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9910996897325373	WITHOUT_CLASSIFICATION	0.008900310267462767	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999997279060868	WITHOUT_CLASSIFICATION	2.720939132318268E-7	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999928926015257	WITHOUT_CLASSIFICATION	7.10739847425544E-6	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.8542384835479644	IMPLEMENTATION	0.14576151645203575	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9999987817646331	WITHOUT_CLASSIFICATION	1.218235366919051E-6	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999999999562347	WITHOUT_CLASSIFICATION	4.3765330730130995E-11	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999999470511877	WITHOUT_CLASSIFICATION	5.294881228171305E-8	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999999470511877	WITHOUT_CLASSIFICATION	5.294881228171305E-8	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.999999898084072	WITHOUT_CLASSIFICATION	1.0191592810022966E-7	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.999914940775748	WITHOUT_CLASSIFICATION	8.505922425203861E-5	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.999999999996849	WITHOUT_CLASSIFICATION	3.150992110398746E-12	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999990284386161	WITHOUT_CLASSIFICATION	9.715613839498966E-7	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999995321912651	WITHOUT_CLASSIFICATION	4.6780873485310773E-7	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999993205439206	WITHOUT_CLASSIFICATION	6.794560794165612E-7	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9999999472237908	WITHOUT_CLASSIFICATION	5.277620918523895E-8	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999974943091782	WITHOUT_CLASSIFICATION	2.50569082178097E-6	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9999997345081879	WITHOUT_CLASSIFICATION	2.65491812072387E-7	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9999999394010184	WITHOUT_CLASSIFICATION	6.059898161377399E-8	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999970519460554	WITHOUT_CLASSIFICATION	2.9480539446807028E-6	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999999688999809	WITHOUT_CLASSIFICATION	3.1100019152057796E-8	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9999998861122885	WITHOUT_CLASSIFICATION	1.138877115475283E-7	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999998628871716	WITHOUT_CLASSIFICATION	1.371128284591513E-7	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999999430024634	WITHOUT_CLASSIFICATION	5.6997536521116496E-8	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.9999990577201875	WITHOUT_CLASSIFICATION	9.422798124694692E-7	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999999476702741	WITHOUT_CLASSIFICATION	5.232972603518425E-8	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999999858375763	WITHOUT_CLASSIFICATION	1.416242356652901E-8	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999998555878798	WITHOUT_CLASSIFICATION	1.4441212023509116E-7	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999981182929197	WITHOUT_CLASSIFICATION	1.8817070802866402E-6	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999999970205348	WITHOUT_CLASSIFICATION	2.979465218269548E-9	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999999816178766	WITHOUT_CLASSIFICATION	1.8382123391363277E-8	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999967614901706	WITHOUT_CLASSIFICATION	3.238509829390317E-6	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.99999999982659	WITHOUT_CLASSIFICATION	1.7340997017511167E-10	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999997296601129	WITHOUT_CLASSIFICATION	2.7033988712206114E-7	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999987063385625	WITHOUT_CLASSIFICATION	1.2936614374457894E-6	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999999961221313	WITHOUT_CLASSIFICATION	3.877868743419632E-9	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999998981775227	WITHOUT_CLASSIFICATION	1.0182247745645584E-7	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.999996445028228	WITHOUT_CLASSIFICATION	3.5549717719765494E-6	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999995104133363	WITHOUT_CLASSIFICATION	4.895866635956674E-7	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999980309000567	WITHOUT_CLASSIFICATION	1.9690999433532032E-6	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999958312295586	WITHOUT_CLASSIFICATION	4.16877044134712E-6	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.999999561023929	WITHOUT_CLASSIFICATION	4.3897607106500466E-7	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999987082984324	WITHOUT_CLASSIFICATION	1.2917015675921577E-6	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999994087491084	WITHOUT_CLASSIFICATION	5.912508915926979E-7	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999981572025788	WITHOUT_CLASSIFICATION	1.8427974213134816E-6	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999659896073	WITHOUT_CLASSIFICATION	3.4010392691893547E-8	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999999981367249	WITHOUT_CLASSIFICATION	1.8632750874697786E-9	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999753144635182	WITHOUT_CLASSIFICATION	2.4685536481809614E-5	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999999858446237	WITHOUT_CLASSIFICATION	1.4155376281074524E-8	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9981938016535337	WITHOUT_CLASSIFICATION	0.0018061983464664098	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999956264010194	WITHOUT_CLASSIFICATION	4.373598980572438E-6	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999894803789409	WITHOUT_CLASSIFICATION	1.0519621059083088E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999404776492073	WITHOUT_CLASSIFICATION	5.952235079266436E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999404776492073	WITHOUT_CLASSIFICATION	5.952235079266436E-5	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.999999982173366	WITHOUT_CLASSIFICATION	1.782663389885666E-8	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999991650231317	WITHOUT_CLASSIFICATION	8.349768683731292E-7	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999999200289797	WITHOUT_CLASSIFICATION	7.997102035324097E-8	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9999978403640677	WITHOUT_CLASSIFICATION	2.159635932284645E-6	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.999999790981253	WITHOUT_CLASSIFICATION	2.0901874705961183E-7	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9999993323484404	WITHOUT_CLASSIFICATION	6.676515596287883E-7	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999961008642367	WITHOUT_CLASSIFICATION	3.899135763263404E-6	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999925382861475	WITHOUT_CLASSIFICATION	7.461713852430376E-6	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999985260527929	WITHOUT_CLASSIFICATION	1.4739472071155408E-6	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.999999772442826	WITHOUT_CLASSIFICATION	2.275571739294928E-7	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999998787827116	WITHOUT_CLASSIFICATION	1.2121728843564366E-7	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999998023819799	WITHOUT_CLASSIFICATION	1.9761801998606624E-7	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999992280326384	WITHOUT_CLASSIFICATION	7.719673616602065E-7	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.999999998556391	WITHOUT_CLASSIFICATION	1.4436090118668307E-9	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9156506038433586	WITHOUT_CLASSIFICATION	0.08434939615664137	IMPLEMENTATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9998611634853817	WITHOUT_CLASSIFICATION	1.388365146183962E-4	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999921702775646	WITHOUT_CLASSIFICATION	7.829722435399225E-6	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999999712926922	WITHOUT_CLASSIFICATION	2.8707307820774164E-8	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999723780721733	WITHOUT_CLASSIFICATION	2.762192782675082E-5	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999962947428672	WITHOUT_CLASSIFICATION	3.705257132740811E-6	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999993682047834	WITHOUT_CLASSIFICATION	6.317952165956314E-7	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999993682047834	WITHOUT_CLASSIFICATION	6.317952165956314E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998369718345	WITHOUT_CLASSIFICATION	1.6302816540531052E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998369718345	WITHOUT_CLASSIFICATION	1.6302816540531052E-7	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.999999949785503	WITHOUT_CLASSIFICATION	5.021449692353177E-8	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999990628841482	WITHOUT_CLASSIFICATION	9.371158517635529E-7	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.999998597408498	WITHOUT_CLASSIFICATION	1.4025915020002274E-6	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999938221901	WITHOUT_CLASSIFICATION	6.177809938849848E-9	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999999929551828	WITHOUT_CLASSIFICATION	7.0448172317882705E-9	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999993378849	WITHOUT_CLASSIFICATION	6.621150754575849E-10	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.998718454899226	WITHOUT_CLASSIFICATION	0.0012815451007740168	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9999997893326996	WITHOUT_CLASSIFICATION	2.1066730044114817E-7	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999999279735368	WITHOUT_CLASSIFICATION	7.202646321184126E-8	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999997893959315	WITHOUT_CLASSIFICATION	2.106040684566157E-7	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999999983332928	WITHOUT_CLASSIFICATION	1.666707289926768E-9	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999999849297334	WITHOUT_CLASSIFICATION	1.5070266505913742E-8	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999999999329563	WITHOUT_CLASSIFICATION	6.704371135059708E-11	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999979008399739	WITHOUT_CLASSIFICATION	2.0991600261745127E-6	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999999039061876	WITHOUT_CLASSIFICATION	9.609381228528066E-8	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.9999995868358508	WITHOUT_CLASSIFICATION	4.1316414914178785E-7	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999818729437455	WITHOUT_CLASSIFICATION	1.812705625447303E-5	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999999941687966	WITHOUT_CLASSIFICATION	5.831203414686129E-9	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9999973030991177	WITHOUT_CLASSIFICATION	2.6969008823049894E-6	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999941993820173	WITHOUT_CLASSIFICATION	5.800617982686139E-6	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999991252319	WITHOUT_CLASSIFICATION	8.747681000215432E-7	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999992890583019	WITHOUT_CLASSIFICATION	7.109416980578413E-7	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999999966389085	WITHOUT_CLASSIFICATION	3.3610915774712626E-9	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999999958995969	WITHOUT_CLASSIFICATION	4.100403078655198E-9	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999834592902	WITHOUT_CLASSIFICATION	1.6540709823498427E-8	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999985671952552	WITHOUT_CLASSIFICATION	1.4328047447804931E-6	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999999910502531	WITHOUT_CLASSIFICATION	8.949746990311112E-9	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999999965348055	WITHOUT_CLASSIFICATION	3.465194380671489E-9	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.999999979168456	WITHOUT_CLASSIFICATION	2.0831544052360282E-8	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999997969998351	WITHOUT_CLASSIFICATION	2.0300016489950546E-7	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999997969998351	WITHOUT_CLASSIFICATION	2.0300016489950546E-7	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999404800315	WITHOUT_CLASSIFICATION	5.951996865100639E-8	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.999998636233718	WITHOUT_CLASSIFICATION	1.3637662819969408E-6	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999963317075466	WITHOUT_CLASSIFICATION	3.668292453461702E-6	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999999845869989	WITHOUT_CLASSIFICATION	1.5413001065267572E-8	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999999026486567	WITHOUT_CLASSIFICATION	9.735134324092491E-8	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9999995791165468	WITHOUT_CLASSIFICATION	4.208834532713516E-7	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999985149230765	WITHOUT_CLASSIFICATION	1.485076923503288E-6	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999995948514682	WITHOUT_CLASSIFICATION	4.051485318573952E-7	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999998099959478	WITHOUT_CLASSIFICATION	1.9000405223310417E-7	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999999948413729	WITHOUT_CLASSIFICATION	5.158627087636641E-9	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.999999957710486	WITHOUT_CLASSIFICATION	4.228951406319783E-8	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999997415677525	WITHOUT_CLASSIFICATION	2.584322475893841E-7	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999857559001244	WITHOUT_CLASSIFICATION	1.4244099875570211E-5	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.999999999083531	WITHOUT_CLASSIFICATION	9.164690236742174E-10	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.999999998821695	WITHOUT_CLASSIFICATION	1.1783051176442209E-9	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999998818272282	WITHOUT_CLASSIFICATION	1.181727718134839E-7	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999997020135228	WITHOUT_CLASSIFICATION	2.9798647715607685E-7	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999999649853615	WITHOUT_CLASSIFICATION	3.5014638403909835E-8	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999973355915105	WITHOUT_CLASSIFICATION	2.664408489470374E-6	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999987487338248	WITHOUT_CLASSIFICATION	1.2512661752139887E-6	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999999948041529	WITHOUT_CLASSIFICATION	5.195847060666308E-9	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999999916436979	WITHOUT_CLASSIFICATION	8.356302128170598E-9	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999999865620425	WITHOUT_CLASSIFICATION	1.3437957620514138E-8	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9999988124637904	WITHOUT_CLASSIFICATION	1.1875362095362278E-6	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999999937531373	WITHOUT_CLASSIFICATION	6.24686266419479E-9	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999999619736191	WITHOUT_CLASSIFICATION	3.802638092577356E-8	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999994903411523	WITHOUT_CLASSIFICATION	5.096588477488713E-7	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999999994348491	WITHOUT_CLASSIFICATION	5.651508033588738E-10	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999999998627659	WITHOUT_CLASSIFICATION	1.3723413751050773E-10	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999993551810958	WITHOUT_CLASSIFICATION	6.448189041554432E-7	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999571371557722	WITHOUT_CLASSIFICATION	4.2862844227888996E-5	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999989199913806	WITHOUT_CLASSIFICATION	1.0800086194338853E-6	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999999905773165	WITHOUT_CLASSIFICATION	9.422683570067953E-9	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9999815590823687	WITHOUT_CLASSIFICATION	1.844091763120325E-5	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.999998290742348	WITHOUT_CLASSIFICATION	1.7092576519238492E-6	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999773292642579	WITHOUT_CLASSIFICATION	2.2670735742121434E-5	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999995951366273	WITHOUT_CLASSIFICATION	4.0486337266480365E-7	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999945908417708	WITHOUT_CLASSIFICATION	5.4091582292140755E-6	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999997146282927	WITHOUT_CLASSIFICATION	2.8537170735888454E-7	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999559661888525	WITHOUT_CLASSIFICATION	4.4033811147549536E-5	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999877018744	WITHOUT_CLASSIFICATION	1.2298125639704498E-8	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999984658103346	WITHOUT_CLASSIFICATION	1.5341896654189912E-6	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9999997604575571	WITHOUT_CLASSIFICATION	2.395424428946875E-7	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9999999562252735	WITHOUT_CLASSIFICATION	4.3774726461696006E-8	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999987633623661	WITHOUT_CLASSIFICATION	1.2366376338419192E-6	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999999588699107	WITHOUT_CLASSIFICATION	4.113008925663464E-8	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999999743374048	WITHOUT_CLASSIFICATION	2.5662595196839098E-8	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999820988056	WITHOUT_CLASSIFICATION	1.7901194411168316E-8	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999969768854029	WITHOUT_CLASSIFICATION	3.023114597096789E-6	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9999995073969621	WITHOUT_CLASSIFICATION	4.926030378983427E-7	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999998317376843	WITHOUT_CLASSIFICATION	1.6826231564515049E-7	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999996911289664	WITHOUT_CLASSIFICATION	3.0887103361924856E-7	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999969915338051	WITHOUT_CLASSIFICATION	3.008466194965047E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999983410244984	WITHOUT_CLASSIFICATION	1.6589755017257402E-6	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999997385665262	WITHOUT_CLASSIFICATION	2.6143347376582015E-7	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999990737009188	WITHOUT_CLASSIFICATION	9.262990812620787E-7	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999980930534911	WITHOUT_CLASSIFICATION	1.9069465089165494E-6	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999999999416004	WITHOUT_CLASSIFICATION	5.839958096441882E-11	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999984626071221	WITHOUT_CLASSIFICATION	1.5373928778688262E-6	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999999534971138	WITHOUT_CLASSIFICATION	4.65028862088196E-8	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999977331935935	WITHOUT_CLASSIFICATION	2.266806406501627E-6	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999998317376843	WITHOUT_CLASSIFICATION	1.6826231564515049E-7	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999969915338051	WITHOUT_CLASSIFICATION	3.008466194965047E-6	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999996911289664	WITHOUT_CLASSIFICATION	3.0887103361924856E-7	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999997601569023	WITHOUT_CLASSIFICATION	2.398430976716824E-7	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999995000600908	WITHOUT_CLASSIFICATION	4.99939909293739E-7	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999995588837434	WITHOUT_CLASSIFICATION	4.4111625659911884E-7	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9999996778563099	WITHOUT_CLASSIFICATION	3.2214369012414453E-7	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9999494833961351	WITHOUT_CLASSIFICATION	5.0516603864978884E-5	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999997326384426	WITHOUT_CLASSIFICATION	2.6736155737157077E-7	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999996423780639	WITHOUT_CLASSIFICATION	3.57621936032836E-7	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999998609543066	WITHOUT_CLASSIFICATION	1.390456934014826E-7	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999973038372485	WITHOUT_CLASSIFICATION	2.696162751533065E-6	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999999859164957	WITHOUT_CLASSIFICATION	1.4083504134306032E-8	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999999417165946	WITHOUT_CLASSIFICATION	5.828340551869758E-8	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999978452051641	WITHOUT_CLASSIFICATION	2.1547948358149784E-6	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999995280750539	WITHOUT_CLASSIFICATION	4.7192494614937654E-7	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9999977317908222	WITHOUT_CLASSIFICATION	2.2682091778884316E-6	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999999287364235	WITHOUT_CLASSIFICATION	7.126357658268227E-8	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9999995876453228	WITHOUT_CLASSIFICATION	4.1235467714483547E-7	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.9999793382240839	WITHOUT_CLASSIFICATION	2.066177591604427E-5	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999995278998223	WITHOUT_CLASSIFICATION	4.721001777707947E-7	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999995278998223	WITHOUT_CLASSIFICATION	4.721001777707947E-7	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999997836304604	WITHOUT_CLASSIFICATION	2.1636953965387044E-7	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.9999999881815943	WITHOUT_CLASSIFICATION	1.1818405613364379E-8	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999998100328749	WITHOUT_CLASSIFICATION	1.8996712523287845E-7	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999526809793721	WITHOUT_CLASSIFICATION	4.731902062789166E-5	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999987856081685	WITHOUT_CLASSIFICATION	1.2143918315065304E-6	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999998711299504	WITHOUT_CLASSIFICATION	1.2887004962288662E-7	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999999704607563	WITHOUT_CLASSIFICATION	2.953924366574717E-8	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999999135341148	WITHOUT_CLASSIFICATION	8.646588517672042E-8	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999868288058152	WITHOUT_CLASSIFICATION	1.3171194184650205E-5	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999999221216539	WITHOUT_CLASSIFICATION	7.787834607549405E-8	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999999913616942	WITHOUT_CLASSIFICATION	8.638305881987245E-9	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9999978263848885	WITHOUT_CLASSIFICATION	2.1736151114947067E-6	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999998609131996	WITHOUT_CLASSIFICATION	1.3908680049134163E-7	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999998904228485	WITHOUT_CLASSIFICATION	1.095771515398869E-7	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9986978664860355	WITHOUT_CLASSIFICATION	0.0013021335139644205	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999780317512	WITHOUT_CLASSIFICATION	2.196824871691376E-8	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999996852115138	WITHOUT_CLASSIFICATION	3.1478848608232804E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999999583043847	WITHOUT_CLASSIFICATION	4.1695615298164963E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999999583043847	WITHOUT_CLASSIFICATION	4.1695615298164963E-7	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.999999291025923	WITHOUT_CLASSIFICATION	7.089740769919743E-7	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9999999566470068	WITHOUT_CLASSIFICATION	4.335299320722585E-8	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999999894074523	WITHOUT_CLASSIFICATION	1.0592547812961082E-8	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9999977515947499	WITHOUT_CLASSIFICATION	2.2484052501443896E-6	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999991109011237	WITHOUT_CLASSIFICATION	8.890988763884976E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999999583043847	WITHOUT_CLASSIFICATION	4.1695615298164963E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999999583043847	WITHOUT_CLASSIFICATION	4.1695615298164963E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999992597575014	WITHOUT_CLASSIFICATION	7.402424986826501E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999992597575014	WITHOUT_CLASSIFICATION	7.402424986826501E-7	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999982815075374	WITHOUT_CLASSIFICATION	1.7184924625336222E-6	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999966421109671	WITHOUT_CLASSIFICATION	3.3578890328736544E-6	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999999700885831	WITHOUT_CLASSIFICATION	2.9911416896687695E-8	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999999959155005	WITHOUT_CLASSIFICATION	4.084499472879899E-9	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999996733210919	WITHOUT_CLASSIFICATION	3.266789080300551E-7	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999996733210919	WITHOUT_CLASSIFICATION	3.266789080300551E-7	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999999696404239	WITHOUT_CLASSIFICATION	3.0359576051852914E-8	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999997391163632	WITHOUT_CLASSIFICATION	2.6088363681050555E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999852888507	WITHOUT_CLASSIFICATION	1.4711149381621211E-8	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999859672472743	WITHOUT_CLASSIFICATION	1.4032752725575147E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999992790578565	WITHOUT_CLASSIFICATION	7.20942143534184E-7	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999993418720936	WITHOUT_CLASSIFICATION	6.581279063725901E-7	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9993580066517028	WITHOUT_CLASSIFICATION	6.419933482971447E-4	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999999480091082	WITHOUT_CLASSIFICATION	5.199089187928164E-8	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999999989833985	WITHOUT_CLASSIFICATION	1.016601403792451E-9	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999999995235601	WITHOUT_CLASSIFICATION	4.764398757624704E-10	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999926254286386	WITHOUT_CLASSIFICATION	7.374571361413599E-6	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999999843826882	WITHOUT_CLASSIFICATION	1.5617311793300476E-8	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999998917956933	WITHOUT_CLASSIFICATION	1.082043067694938E-7	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999999850394448	WITHOUT_CLASSIFICATION	1.496055523321113E-8	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999780317512	WITHOUT_CLASSIFICATION	2.196824871691376E-8	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999999583043847	WITHOUT_CLASSIFICATION	4.1695615298164963E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999992597575014	WITHOUT_CLASSIFICATION	7.402424986826501E-7	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999993418720936	WITHOUT_CLASSIFICATION	6.581279063725901E-7	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999997136139	WITHOUT_CLASSIFICATION	2.8638606694530347E-10	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999997136139	WITHOUT_CLASSIFICATION	2.8638606694530347E-10	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999976143516143	WITHOUT_CLASSIFICATION	2.385648385733511E-6	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999999992610976	WITHOUT_CLASSIFICATION	7.389022486285095E-10	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999999942818688	WITHOUT_CLASSIFICATION	5.718131172610336E-9	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999833778526	WITHOUT_CLASSIFICATION	1.6622147429012257E-8	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999995167284857	WITHOUT_CLASSIFICATION	4.832715142162676E-7	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.999999999452448	WITHOUT_CLASSIFICATION	5.475520182915952E-10	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999999523788449	WITHOUT_CLASSIFICATION	4.7621155098303626E-8	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999996512085827	WITHOUT_CLASSIFICATION	3.487914172518078E-7	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999997827388	WITHOUT_CLASSIFICATION	2.1726127589119266E-10	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999997568304017	WITHOUT_CLASSIFICATION	2.4316959841227105E-7	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999888436876934	WITHOUT_CLASSIFICATION	1.115631230666924E-5	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999915048957	WITHOUT_CLASSIFICATION	8.495104291270999E-9	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999999936547381	WITHOUT_CLASSIFICATION	6.345261808271714E-9	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999996852115138	WITHOUT_CLASSIFICATION	3.1478848608232804E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999992597575014	WITHOUT_CLASSIFICATION	7.402424986826501E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999997391163632	WITHOUT_CLASSIFICATION	2.6088363681050555E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999852888507	WITHOUT_CLASSIFICATION	1.4711149381621211E-8	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999852888507	WITHOUT_CLASSIFICATION	1.4711149381621211E-8	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999992790578565	WITHOUT_CLASSIFICATION	7.20942143534184E-7	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999993418720936	WITHOUT_CLASSIFICATION	6.581279063725901E-7	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999993418720936	WITHOUT_CLASSIFICATION	6.581279063725901E-7	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999997136139	WITHOUT_CLASSIFICATION	2.8638606694530347E-10	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999859375342928	WITHOUT_CLASSIFICATION	1.4062465707113483E-5	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999991607766197	WITHOUT_CLASSIFICATION	8.392233803365816E-7	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999999997778	WITHOUT_CLASSIFICATION	2.2228645109615522E-13	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999766677057526	WITHOUT_CLASSIFICATION	2.3332294247450227E-5	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.999996451333414	WITHOUT_CLASSIFICATION	3.548666586087225E-6	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999725134401952	WITHOUT_CLASSIFICATION	2.7486559804753267E-5	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999985401915132	WITHOUT_CLASSIFICATION	1.459808486799343E-6	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999999978979682	WITHOUT_CLASSIFICATION	2.102031721466329E-9	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999998296771748	WITHOUT_CLASSIFICATION	1.7032282515471868E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999997391163632	WITHOUT_CLASSIFICATION	2.6088363681050555E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999852888507	WITHOUT_CLASSIFICATION	1.4711149381621211E-8	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999852888507	WITHOUT_CLASSIFICATION	1.4711149381621211E-8	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999992790578565	WITHOUT_CLASSIFICATION	7.20942143534184E-7	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999996512085827	WITHOUT_CLASSIFICATION	3.487914172518078E-7	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999997568304017	WITHOUT_CLASSIFICATION	2.4316959841227105E-7	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999403777720169	WITHOUT_CLASSIFICATION	5.962222798310186E-5	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999968966632234	WITHOUT_CLASSIFICATION	3.103336776529811E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999934587852944	WITHOUT_CLASSIFICATION	6.541214705466831E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999934587852944	WITHOUT_CLASSIFICATION	6.541214705466831E-6	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999998496569238	WITHOUT_CLASSIFICATION	1.503430761426931E-7	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999999949260229	WITHOUT_CLASSIFICATION	5.07397705173286E-9	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999999961722824	WITHOUT_CLASSIFICATION	3.827717570493094E-9	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999970341877081	WITHOUT_CLASSIFICATION	2.965812291782409E-6	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999998270810804	WITHOUT_CLASSIFICATION	1.7291891965815692E-7	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999998270810804	WITHOUT_CLASSIFICATION	1.7291891965815692E-7	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9998721563039553	WITHOUT_CLASSIFICATION	1.2784369604469024E-4	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9998721563039553	WITHOUT_CLASSIFICATION	1.2784369604469024E-4	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999999693364544	WITHOUT_CLASSIFICATION	3.0663545668554535E-8	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999999693364544	WITHOUT_CLASSIFICATION	3.0663545668554535E-8	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999999893569447	WITHOUT_CLASSIFICATION	1.06430552513558E-8	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999999341072884	WITHOUT_CLASSIFICATION	6.589271166828491E-8	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.999984897134402	WITHOUT_CLASSIFICATION	1.5102865598125238E-5	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999996271287074	WITHOUT_CLASSIFICATION	3.7287129263804843E-7	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999997413678743	WITHOUT_CLASSIFICATION	2.586321256604539E-7	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.9999999199912771	WITHOUT_CLASSIFICATION	8.000872294562828E-8	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999995479289772	WITHOUT_CLASSIFICATION	4.5207102279808387E-7	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.999999533633044	WITHOUT_CLASSIFICATION	4.6636695604509363E-7	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999999288057592	WITHOUT_CLASSIFICATION	7.119424078622603E-8	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999999982363521	WITHOUT_CLASSIFICATION	1.7636478986033882E-9	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.999956722175523	WITHOUT_CLASSIFICATION	4.327782447706818E-5	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999995591813667	WITHOUT_CLASSIFICATION	4.4081863323578487E-7	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.999999843955429	WITHOUT_CLASSIFICATION	1.5604457107796387E-7	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999987750355788	WITHOUT_CLASSIFICATION	1.2249644213222161E-6	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999987750355788	WITHOUT_CLASSIFICATION	1.2249644213222161E-6	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999998612073063	WITHOUT_CLASSIFICATION	1.387926937581761E-7	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999993378849	WITHOUT_CLASSIFICATION	6.621150754575849E-10	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999680114090013	WITHOUT_CLASSIFICATION	3.198859099873881E-5	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999993113134	WITHOUT_CLASSIFICATION	6.886865631313939E-10	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999999985382064	WITHOUT_CLASSIFICATION	1.4617935712735829E-9	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999759363664955	WITHOUT_CLASSIFICATION	2.4063633504577193E-5	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999999398945879	WITHOUT_CLASSIFICATION	6.010541206638692E-8	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999985504474884	WITHOUT_CLASSIFICATION	1.44955251153274E-6	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999994638188634	WITHOUT_CLASSIFICATION	5.361811365938722E-7	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999999916642484	WITHOUT_CLASSIFICATION	8.335751695016025E-9	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.999999280319081	WITHOUT_CLASSIFICATION	7.196809190811371E-7	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999863304644919	WITHOUT_CLASSIFICATION	1.3669535508015002E-5	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999997156927136	WITHOUT_CLASSIFICATION	2.843072864058771E-7	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9959043917979118	WITHOUT_CLASSIFICATION	0.004095608202088237	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999991827318891	WITHOUT_CLASSIFICATION	8.172681107972591E-7	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999999329197389	WITHOUT_CLASSIFICATION	6.708026106447883E-8	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9999871895838357	WITHOUT_CLASSIFICATION	1.2810416164337359E-5	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999988391539154	WITHOUT_CLASSIFICATION	1.1608460846591556E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999966944928	WITHOUT_CLASSIFICATION	3.3055072410063812E-9	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999966944928	WITHOUT_CLASSIFICATION	3.3055072410063812E-9	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999995930038869	WITHOUT_CLASSIFICATION	4.0699611311849675E-7	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999999994911869	WITHOUT_CLASSIFICATION	5.088130605084904E-10	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999968954301895	WITHOUT_CLASSIFICATION	3.1045698104852227E-6	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999968954301895	WITHOUT_CLASSIFICATION	3.1045698104852227E-6	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999865020721805	WITHOUT_CLASSIFICATION	1.3497927819446372E-5	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999999980121684	WITHOUT_CLASSIFICATION	1.9878316265823955E-9	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999997309879689	WITHOUT_CLASSIFICATION	2.690120311482637E-7	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999999927237446	WITHOUT_CLASSIFICATION	7.276255356591575E-9	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999999974329671	WITHOUT_CLASSIFICATION	2.5670328999675882E-9	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999999789757544	WITHOUT_CLASSIFICATION	2.1024245538765694E-8	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999999789757544	WITHOUT_CLASSIFICATION	2.1024245538765694E-8	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.999999728543855	WITHOUT_CLASSIFICATION	2.714561450109208E-7	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999999980466848	WITHOUT_CLASSIFICATION	1.9533151690747015E-9	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.999997804935297	WITHOUT_CLASSIFICATION	2.1950647030572653E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999999992256356	WITHOUT_CLASSIFICATION	7.743643057533063E-10	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999999994911869	WITHOUT_CLASSIFICATION	5.088130605084904E-10	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999999796323727	WITHOUT_CLASSIFICATION	2.036762725671013E-8	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999999992000372	WITHOUT_CLASSIFICATION	7.999627139044771E-10	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999999992000372	WITHOUT_CLASSIFICATION	7.999627139044771E-10	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999966815504433	WITHOUT_CLASSIFICATION	3.318449556707831E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999978940765	WITHOUT_CLASSIFICATION	2.10592359810792E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999978940765	WITHOUT_CLASSIFICATION	2.10592359810792E-9	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999990255831277	WITHOUT_CLASSIFICATION	9.744168723046961E-6	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999990255831277	WITHOUT_CLASSIFICATION	9.744168723046961E-6	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999990255831277	WITHOUT_CLASSIFICATION	9.744168723046961E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999978940765	WITHOUT_CLASSIFICATION	2.10592359810792E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999978940765	WITHOUT_CLASSIFICATION	2.10592359810792E-9	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999966815504433	WITHOUT_CLASSIFICATION	3.318449556707831E-5	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999999925975058	WITHOUT_CLASSIFICATION	7.402494257707668E-9	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9999999752365101	WITHOUT_CLASSIFICATION	2.4763489950698635E-8	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999981863795722	WITHOUT_CLASSIFICATION	1.813620427823595E-6	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9999984323450617	WITHOUT_CLASSIFICATION	1.5676549383666506E-6	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999995157086	WITHOUT_CLASSIFICATION	4.84291322282594E-10	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999217067108432	WITHOUT_CLASSIFICATION	7.829328915674735E-5	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999999632861031	WITHOUT_CLASSIFICATION	3.671389691842949E-8	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.999999999570769	WITHOUT_CLASSIFICATION	4.292310368175167E-10	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.999999280319081	WITHOUT_CLASSIFICATION	7.196809190811371E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999978940765	WITHOUT_CLASSIFICATION	2.10592359810792E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999978940765	WITHOUT_CLASSIFICATION	2.10592359810792E-9	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999997859018	WITHOUT_CLASSIFICATION	2.1409819870728988E-10	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999742302067972	WITHOUT_CLASSIFICATION	2.5769793202699585E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999999838128665	WITHOUT_CLASSIFICATION	1.6187133479754317E-8	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999986148591	WITHOUT_CLASSIFICATION	1.3851408944598302E-9	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999923842419094	WITHOUT_CLASSIFICATION	7.615758090697967E-6	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999979660402442	WITHOUT_CLASSIFICATION	2.033959755816321E-6	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999994402835	WITHOUT_CLASSIFICATION	5.597164328414393E-10	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.999999819629823	WITHOUT_CLASSIFICATION	1.803701770606309E-7	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999995693161444	WITHOUT_CLASSIFICATION	4.3068385546524857E-7	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999947592149	WITHOUT_CLASSIFICATION	5.240785094871536E-9	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999950252965016	WITHOUT_CLASSIFICATION	4.9747034983524764E-6	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999995683922288	WITHOUT_CLASSIFICATION	4.3160777123908045E-7	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999972839732797	WITHOUT_CLASSIFICATION	2.7160267204438887E-6	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999967292151896	WITHOUT_CLASSIFICATION	3.2707848104895933E-6	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999998517484308	WITHOUT_CLASSIFICATION	1.4825156914169595E-7	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999999729073488	WITHOUT_CLASSIFICATION	2.709265134129546E-8	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999999729073488	WITHOUT_CLASSIFICATION	2.709265134129546E-8	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999999729073488	WITHOUT_CLASSIFICATION	2.709265134129546E-8	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999992574718456	WITHOUT_CLASSIFICATION	7.425281544050476E-7	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999997654742725	WITHOUT_CLASSIFICATION	2.345257276378957E-7	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999994624082232	WITHOUT_CLASSIFICATION	5.375917767492479E-7	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999999009581393	WITHOUT_CLASSIFICATION	9.904186078279013E-8	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999982266423426	WITHOUT_CLASSIFICATION	1.773357657440259E-6	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999991433101516	WITHOUT_CLASSIFICATION	8.566898484554704E-7	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.999999999946513	WITHOUT_CLASSIFICATION	5.348699731705405E-11	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999999785650793	WITHOUT_CLASSIFICATION	2.143492073232171E-8	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999999988800906	WITHOUT_CLASSIFICATION	1.1199094422587315E-9	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999999956468296	WITHOUT_CLASSIFICATION	4.353170345208575E-9	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999311689507951	WITHOUT_CLASSIFICATION	6.883104920480597E-5	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.999986540892755	WITHOUT_CLASSIFICATION	1.3459107245006495E-5	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.999999728543855	WITHOUT_CLASSIFICATION	2.714561450109208E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999978940765	WITHOUT_CLASSIFICATION	2.10592359810792E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999978940765	WITHOUT_CLASSIFICATION	2.10592359810792E-9	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999966815504433	WITHOUT_CLASSIFICATION	3.318449556707831E-5	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999217067108432	WITHOUT_CLASSIFICATION	7.829328915674735E-5	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999742302067972	WITHOUT_CLASSIFICATION	2.5769793202699585E-5	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999986148591	WITHOUT_CLASSIFICATION	1.3851408944598302E-9	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999979660402442	WITHOUT_CLASSIFICATION	2.033959755816321E-6	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999999838128665	WITHOUT_CLASSIFICATION	1.6187133479754317E-8	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999994402835	WITHOUT_CLASSIFICATION	5.597164328414393E-10	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999947592149	WITHOUT_CLASSIFICATION	5.240785094871536E-9	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999995693161444	WITHOUT_CLASSIFICATION	4.3068385546524857E-7	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999995683922288	WITHOUT_CLASSIFICATION	4.3160777123908045E-7	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999891419107714	WITHOUT_CLASSIFICATION	1.0858089228591967E-5	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999843506807811	WITHOUT_CLASSIFICATION	1.564931921897897E-5	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999956303253471	WITHOUT_CLASSIFICATION	4.369674652877242E-6	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999999966715941	WITHOUT_CLASSIFICATION	3.3284059041767737E-9	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999986764185129	WITHOUT_CLASSIFICATION	1.3235814871306711E-6	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999991222865782	WITHOUT_CLASSIFICATION	8.777134219206522E-7	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999998984005861	WITHOUT_CLASSIFICATION	1.0159941395884305E-7	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999987039628963	WITHOUT_CLASSIFICATION	1.296037103777018E-6	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999970238850966	WITHOUT_CLASSIFICATION	2.976114903508826E-6	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999996204967916	WITHOUT_CLASSIFICATION	3.795032083994809E-7	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999962492099271	WITHOUT_CLASSIFICATION	3.7507900728104574E-6	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998376703666	WITHOUT_CLASSIFICATION	1.623296333200664E-7	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999998986354	WITHOUT_CLASSIFICATION	1.0136459342336888E-9	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.999999997155115	WITHOUT_CLASSIFICATION	2.8448850038533677E-9	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999934732481	WITHOUT_CLASSIFICATION	6.526751844888198E-9	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999738945935	WITHOUT_CLASSIFICATION	2.6105406624969676E-8	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999881043395	WITHOUT_CLASSIFICATION	1.1895660471621943E-8	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999981371843105	WITHOUT_CLASSIFICATION	1.8628156895594039E-6	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999902427888723	WITHOUT_CLASSIFICATION	9.75721112780333E-6	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999998954934048	WITHOUT_CLASSIFICATION	1.0450659507579998E-7	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999996061748241	WITHOUT_CLASSIFICATION	3.938251758643193E-7	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999655422	WITHOUT_CLASSIFICATION	3.445782873174486E-11	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999655422	WITHOUT_CLASSIFICATION	3.445782873174486E-11	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999999893580551	WITHOUT_CLASSIFICATION	1.0641944820252799E-8	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999706115237945	WITHOUT_CLASSIFICATION	2.938847620547012E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998617677757762	WITHOUT_CLASSIFICATION	1.3823222422383062E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998617677757762	WITHOUT_CLASSIFICATION	1.3823222422383062E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998617677757762	WITHOUT_CLASSIFICATION	1.3823222422383062E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.999995520633678	WITHOUT_CLASSIFICATION	4.479366321974889E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.999995520633678	WITHOUT_CLASSIFICATION	4.479366321974889E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.999995520633678	WITHOUT_CLASSIFICATION	4.479366321974889E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.999995520633678	WITHOUT_CLASSIFICATION	4.479366321974889E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999949895160031	WITHOUT_CLASSIFICATION	5.010483996871467E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999949895160031	WITHOUT_CLASSIFICATION	5.010483996871467E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999949895160031	WITHOUT_CLASSIFICATION	5.010483996871467E-6	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999879637399183	WITHOUT_CLASSIFICATION	1.2036260081785169E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999879637399183	WITHOUT_CLASSIFICATION	1.2036260081785169E-5	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.999994344451881	WITHOUT_CLASSIFICATION	5.655548119075856E-6	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999948700152765	WITHOUT_CLASSIFICATION	5.129984723501349E-6	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999706115237945	WITHOUT_CLASSIFICATION	2.938847620547012E-5	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999993031429243	WITHOUT_CLASSIFICATION	6.968570756481921E-7	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998617677757762	WITHOUT_CLASSIFICATION	1.3823222422383062E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998617677757762	WITHOUT_CLASSIFICATION	1.3823222422383062E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.999995520633678	WITHOUT_CLASSIFICATION	4.479366321974889E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.999995520633678	WITHOUT_CLASSIFICATION	4.479366321974889E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.999995520633678	WITHOUT_CLASSIFICATION	4.479366321974889E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999949895160031	WITHOUT_CLASSIFICATION	5.010483996871467E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999949895160031	WITHOUT_CLASSIFICATION	5.010483996871467E-6	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999879637399183	WITHOUT_CLASSIFICATION	1.2036260081785169E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999948700152765	WITHOUT_CLASSIFICATION	5.129984723501349E-6	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999957133909669	WITHOUT_CLASSIFICATION	4.286609033073637E-6	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999957133909669	WITHOUT_CLASSIFICATION	4.286609033073637E-6	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999977100319	WITHOUT_CLASSIFICATION	2.2899681188060595E-9	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999977100319	WITHOUT_CLASSIFICATION	2.2899681188060595E-9	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999997779929121	WITHOUT_CLASSIFICATION	2.220070879306157E-7	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999997779929121	WITHOUT_CLASSIFICATION	2.220070879306157E-7	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999936901460222	WITHOUT_CLASSIFICATION	6.309853977744533E-6	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999999713863998	WITHOUT_CLASSIFICATION	2.8613600096643146E-8	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999999713863998	WITHOUT_CLASSIFICATION	2.8613600096643146E-8	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999857021046883	WITHOUT_CLASSIFICATION	1.429789531175161E-5	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999857021046883	WITHOUT_CLASSIFICATION	1.429789531175161E-5	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999999999142798	WITHOUT_CLASSIFICATION	8.572019036094786E-11	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999995879583864	WITHOUT_CLASSIFICATION	4.120416136258916E-7	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999995879583864	WITHOUT_CLASSIFICATION	4.120416136258916E-7	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999958141389785	WITHOUT_CLASSIFICATION	4.185861021473728E-6	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999973239420042	WITHOUT_CLASSIFICATION	2.6760579957117257E-6	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999999974474796	WITHOUT_CLASSIFICATION	2.55252029566413E-9	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.999995520633678	WITHOUT_CLASSIFICATION	4.479366321974889E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.999995520633678	WITHOUT_CLASSIFICATION	4.479366321974889E-6	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999958141389785	WITHOUT_CLASSIFICATION	4.185861021473728E-6	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999999995748553	WITHOUT_CLASSIFICATION	4.2514473181115266E-10	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999993199018806	WITHOUT_CLASSIFICATION	6.800981193810421E-7	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999993199018806	WITHOUT_CLASSIFICATION	6.800981193810421E-7	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999993199018806	WITHOUT_CLASSIFICATION	6.800981193810421E-7	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.999998781474142	WITHOUT_CLASSIFICATION	1.218525858002309E-6	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999999663487807	WITHOUT_CLASSIFICATION	3.365121929809645E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998942343551	WITHOUT_CLASSIFICATION	1.0576564496196545E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998942343551	WITHOUT_CLASSIFICATION	1.0576564496196545E-7	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999999302984021	WITHOUT_CLASSIFICATION	6.970159789593242E-8	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999999355411527	WITHOUT_CLASSIFICATION	6.445884719497711E-8	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999999994492726	WITHOUT_CLASSIFICATION	5.507273248214206E-10	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999999951516961	WITHOUT_CLASSIFICATION	4.848303851835111E-9	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999999612891228	WITHOUT_CLASSIFICATION	3.8710877127808086E-8	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999999868265405	WITHOUT_CLASSIFICATION	1.3173459593077356E-8	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999999868265405	WITHOUT_CLASSIFICATION	1.3173459593077356E-8	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999571355811672	WITHOUT_CLASSIFICATION	4.286441883287092E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999914337512458	WITHOUT_CLASSIFICATION	8.566248754271441E-6	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999914337512458	WITHOUT_CLASSIFICATION	8.566248754271441E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.999995520633678	WITHOUT_CLASSIFICATION	4.479366321974889E-6	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999993199018806	WITHOUT_CLASSIFICATION	6.800981193810421E-7	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999999663487807	WITHOUT_CLASSIFICATION	3.365121929809645E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998942343551	WITHOUT_CLASSIFICATION	1.0576564496196545E-7	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999999302984021	WITHOUT_CLASSIFICATION	6.970159789593242E-8	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999999355411527	WITHOUT_CLASSIFICATION	6.445884719497711E-8	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999999994492726	WITHOUT_CLASSIFICATION	5.507273248214206E-10	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999999951516961	WITHOUT_CLASSIFICATION	4.848303851835111E-9	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999914337512458	WITHOUT_CLASSIFICATION	8.566248754271441E-6	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999999943084088	WITHOUT_CLASSIFICATION	5.6915912947787055E-9	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999992717653285	WITHOUT_CLASSIFICATION	7.282346715221651E-7	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999999710449916	WITHOUT_CLASSIFICATION	2.8955008402634844E-8	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999981301282911	WITHOUT_CLASSIFICATION	1.8698717089998537E-6	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999999929610679	WITHOUT_CLASSIFICATION	7.038932050667805E-9	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999999894549806	WITHOUT_CLASSIFICATION	1.0545019504479432E-8	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999997764647548	WITHOUT_CLASSIFICATION	2.2353524522520196E-7	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999997764647548	WITHOUT_CLASSIFICATION	2.2353524522520196E-7	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999997114967067	WITHOUT_CLASSIFICATION	2.885032933506546E-7	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999998915441665	WITHOUT_CLASSIFICATION	1.0845583350381135E-7	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.999999639998747	WITHOUT_CLASSIFICATION	3.600012529866368E-7	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.999999952196428	WITHOUT_CLASSIFICATION	4.78035720894894E-8	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999996089644501	WITHOUT_CLASSIFICATION	3.910355499640737E-7	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999996089644501	WITHOUT_CLASSIFICATION	3.910355499640737E-7	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999993454008629	WITHOUT_CLASSIFICATION	6.545991371947468E-7	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999998974975801	WITHOUT_CLASSIFICATION	1.0250241978114519E-7	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999999283786992	WITHOUT_CLASSIFICATION	7.162130075956862E-8	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999999283786992	WITHOUT_CLASSIFICATION	7.162130075956862E-8	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999999669420803	WITHOUT_CLASSIFICATION	3.3057919807346755E-8	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999101016542303	WITHOUT_CLASSIFICATION	8.98983457696137E-5	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999999612891228	WITHOUT_CLASSIFICATION	3.8710877127808086E-8	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999999055222812	WITHOUT_CLASSIFICATION	9.447771882506759E-8	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999995652696	WITHOUT_CLASSIFICATION	4.3473038065923766E-10	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999727066196	WITHOUT_CLASSIFICATION	2.7293380389607545E-8	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999999833285395	WITHOUT_CLASSIFICATION	1.6671460597030635E-8	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.9999999988367252	WITHOUT_CLASSIFICATION	1.163274752787899E-9	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999976012771004	WITHOUT_CLASSIFICATION	2.398722899682132E-6	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999999949974506	WITHOUT_CLASSIFICATION	5.0025494415654325E-9	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999996741993102	WITHOUT_CLASSIFICATION	3.2580068973557583E-7	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.999999816696619	WITHOUT_CLASSIFICATION	1.8330338094266176E-7	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.999999816696619	WITHOUT_CLASSIFICATION	1.8330338094266176E-7	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.999999534541585	WITHOUT_CLASSIFICATION	4.654584149925238E-7	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.999999534541585	WITHOUT_CLASSIFICATION	4.654584149925238E-7	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999999821594406	WITHOUT_CLASSIFICATION	1.7840559454638303E-8	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999998003122176	WITHOUT_CLASSIFICATION	1.9968778247779518E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999998003122176	WITHOUT_CLASSIFICATION	1.9968778247779518E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999998003122176	WITHOUT_CLASSIFICATION	1.9968778247779518E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999907917041	WITHOUT_CLASSIFICATION	9.20829584999134E-9	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999754014930609	WITHOUT_CLASSIFICATION	2.4598506939193196E-5	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999754014930609	WITHOUT_CLASSIFICATION	2.4598506939193196E-5	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999765067294	WITHOUT_CLASSIFICATION	2.3493270555122753E-8	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999923692306719	WITHOUT_CLASSIFICATION	7.630769328020597E-6	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999993838164241	WITHOUT_CLASSIFICATION	6.161835759849172E-7	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9999998894418282	WITHOUT_CLASSIFICATION	1.1055817182628845E-7	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999970574195853	WITHOUT_CLASSIFICATION	2.9425804147934457E-6	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9999728162731147	WITHOUT_CLASSIFICATION	2.7183726885282465E-5	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999999011022978	WITHOUT_CLASSIFICATION	9.88977021448084E-8	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999998986354	WITHOUT_CLASSIFICATION	1.0136459342336888E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999998986354	WITHOUT_CLASSIFICATION	1.0136459342336888E-9	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999907917041	WITHOUT_CLASSIFICATION	9.20829584999134E-9	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999765067294	WITHOUT_CLASSIFICATION	2.3493270555122753E-8	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999870953207	WITHOUT_CLASSIFICATION	1.2904679338663543E-8	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999923692306719	WITHOUT_CLASSIFICATION	7.630769328020597E-6	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999993838164241	WITHOUT_CLASSIFICATION	6.161835759849172E-7	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999865928461884	WITHOUT_CLASSIFICATION	1.3407153811593122E-5	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9999998711386474	WITHOUT_CLASSIFICATION	1.2886135261337265E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999998035972425	WITHOUT_CLASSIFICATION	1.9640275759899513E-7	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.9999981442410988	WITHOUT_CLASSIFICATION	1.8557589011888085E-6	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999908012848481	WITHOUT_CLASSIFICATION	9.19871515197172E-6	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999999984955413	WITHOUT_CLASSIFICATION	1.504458691924015E-9	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999998211805872	WITHOUT_CLASSIFICATION	1.7881941288455356E-7	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999865928461884	WITHOUT_CLASSIFICATION	1.3407153811593122E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999999437837268	WITHOUT_CLASSIFICATION	5.621627308818914E-8	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999999437837268	WITHOUT_CLASSIFICATION	5.621627308818914E-8	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999999872312016	WITHOUT_CLASSIFICATION	1.2768798356172423E-8	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999993645084718	WITHOUT_CLASSIFICATION	6.35491528136477E-7	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999996766884363	WITHOUT_CLASSIFICATION	3.233115637404078E-7	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999994522367911	WITHOUT_CLASSIFICATION	5.477632089717214E-7	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999992279447623	WITHOUT_CLASSIFICATION	7.720552376995426E-7	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999182651342949	WITHOUT_CLASSIFICATION	8.173486570509088E-5	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999966084481362	WITHOUT_CLASSIFICATION	3.3915518636856446E-6	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999918323203945	WITHOUT_CLASSIFICATION	8.167679605506985E-6	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.999999997124877	WITHOUT_CLASSIFICATION	2.8751230123962217E-9	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9999999486581654	WITHOUT_CLASSIFICATION	5.134183459183531E-8	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999997785261686	WITHOUT_CLASSIFICATION	2.2147383136623162E-7	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999994522367911	WITHOUT_CLASSIFICATION	5.477632089717214E-7	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999992279447623	WITHOUT_CLASSIFICATION	7.720552376995426E-7	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999993957484868	WITHOUT_CLASSIFICATION	6.0425151327007E-7	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9999999581557938	WITHOUT_CLASSIFICATION	4.184420616587049E-8	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.999999999152255	WITHOUT_CLASSIFICATION	8.477448664421369E-10	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999985469767607	WITHOUT_CLASSIFICATION	1.4530232392859058E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999999997891573	WITHOUT_CLASSIFICATION	2.1084271748136013E-10	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.999999992374697	WITHOUT_CLASSIFICATION	7.625302979537116E-9	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9999981134088912	WITHOUT_CLASSIFICATION	1.8865911088683623E-6	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9999996103252793	WITHOUT_CLASSIFICATION	3.896747206765711E-7	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999999665336661	WITHOUT_CLASSIFICATION	3.3466333977764224E-8	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999999917310193	WITHOUT_CLASSIFICATION	8.268980649332999E-9	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999999644114165	WITHOUT_CLASSIFICATION	3.5588583497806416E-8	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9999949351051651	WITHOUT_CLASSIFICATION	5.064894834928789E-6	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.999999842397904	WITHOUT_CLASSIFICATION	1.576020960498669E-7	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999999843865619	WITHOUT_CLASSIFICATION	1.5613438049638602E-8	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999999999790398	WITHOUT_CLASSIFICATION	2.0960237260725263E-11	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999937147998	WITHOUT_CLASSIFICATION	6.285200209396867E-9	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999968289167253	WITHOUT_CLASSIFICATION	3.1710832747299833E-6	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999998909768405	WITHOUT_CLASSIFICATION	1.090231594062258E-7	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999990192506	WITHOUT_CLASSIFICATION	9.80749352875953E-10	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999991523939508	WITHOUT_CLASSIFICATION	8.476060491973688E-7	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999968289167253	WITHOUT_CLASSIFICATION	3.1710832747299833E-6	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999998909768405	WITHOUT_CLASSIFICATION	1.090231594062258E-7	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999990192506	WITHOUT_CLASSIFICATION	9.80749352875953E-10	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9999997722128277	WITHOUT_CLASSIFICATION	2.2778717227897026E-7	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999972496500951	WITHOUT_CLASSIFICATION	2.750349905016244E-6	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999804863944667	WITHOUT_CLASSIFICATION	1.9513605533353302E-5	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999995018040831	WITHOUT_CLASSIFICATION	4.981959168757426E-7	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.999999991293777	WITHOUT_CLASSIFICATION	8.706222931413635E-9	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999998517051912	WITHOUT_CLASSIFICATION	1.4829480873710944E-7	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999987523450827	WITHOUT_CLASSIFICATION	1.2476549173048918E-6	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999692483151016	WITHOUT_CLASSIFICATION	3.075168489845647E-5	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9999999314831468	WITHOUT_CLASSIFICATION	6.851685316038373E-8	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9999997726451456	WITHOUT_CLASSIFICATION	2.273548544638876E-7	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9834310084476771	WITHOUT_CLASSIFICATION	0.016568991552322887	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999999696799762	WITHOUT_CLASSIFICATION	3.0320023907639664E-8	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999986960260785	WITHOUT_CLASSIFICATION	1.3039739214784939E-6	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999903590839839	WITHOUT_CLASSIFICATION	9.640916016014317E-6	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999999367922627	WITHOUT_CLASSIFICATION	6.32077372328854E-8	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999999142839748	WITHOUT_CLASSIFICATION	8.571602519237989E-8	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999993188694192	WITHOUT_CLASSIFICATION	6.811305808259191E-7	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999998265280442	WITHOUT_CLASSIFICATION	1.734719557031674E-7	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999435600564823	WITHOUT_CLASSIFICATION	5.6439943517572516E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999975252248725	WITHOUT_CLASSIFICATION	2.474775127477167E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999997673019914	WITHOUT_CLASSIFICATION	2.3269800851457303E-7	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999984263232378	WITHOUT_CLASSIFICATION	1.573676762178617E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999984263232378	WITHOUT_CLASSIFICATION	1.573676762178617E-6	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999991735029347	WITHOUT_CLASSIFICATION	8.26497065420976E-7	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999991735029347	WITHOUT_CLASSIFICATION	8.26497065420976E-7	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999999399416672	WITHOUT_CLASSIFICATION	6.005833278926679E-8	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999999399416672	WITHOUT_CLASSIFICATION	6.005833278926679E-8	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999999171647739	WITHOUT_CLASSIFICATION	8.28352261936462E-8	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999952178278	WITHOUT_CLASSIFICATION	4.7821721954873705E-9	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999961498541	WITHOUT_CLASSIFICATION	3.850145780392544E-9	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999995855384012	WITHOUT_CLASSIFICATION	4.1446159885709485E-7	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999998075311	WITHOUT_CLASSIFICATION	1.9246889071938512E-10	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999291514737	WITHOUT_CLASSIFICATION	7.084852623138296E-8	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999999055905252	WITHOUT_CLASSIFICATION	9.440947475148412E-8	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9999976942057205	WITHOUT_CLASSIFICATION	2.305794279597818E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999998986354	WITHOUT_CLASSIFICATION	1.0136459342336888E-9	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999999171647739	WITHOUT_CLASSIFICATION	8.28352261936462E-8	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999952178278	WITHOUT_CLASSIFICATION	4.7821721954873705E-9	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999961498541	WITHOUT_CLASSIFICATION	3.850145780392544E-9	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999998075311	WITHOUT_CLASSIFICATION	1.9246889071938512E-10	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999291514737	WITHOUT_CLASSIFICATION	7.084852623138296E-8	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999998514427693	WITHOUT_CLASSIFICATION	1.4855723067584278E-7	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9999998589520906	WITHOUT_CLASSIFICATION	1.4104790939800005E-7	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.999998917722927	WITHOUT_CLASSIFICATION	1.0822770729900043E-6	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.999998917722927	WITHOUT_CLASSIFICATION	1.0822770729900043E-6	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999976359688513	WITHOUT_CLASSIFICATION	2.3640311487825962E-6	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999999642021341	WITHOUT_CLASSIFICATION	3.5797865852514316E-8	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999995659783796	WITHOUT_CLASSIFICATION	4.3402162041720816E-7	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999999997298734	WITHOUT_CLASSIFICATION	2.701265947770072E-9	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999999997298734	WITHOUT_CLASSIFICATION	2.701265947770072E-9	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999999989471375	WITHOUT_CLASSIFICATION	1.0528624149982087E-9	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999997715164	WITHOUT_CLASSIFICATION	2.2848361848043297E-10	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999998658773237	WITHOUT_CLASSIFICATION	1.3412267631916496E-7	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999989865419059	WITHOUT_CLASSIFICATION	1.0134580940829946E-6	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999999596946566	WITHOUT_CLASSIFICATION	4.0305343462503715E-8	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.999999997155115	WITHOUT_CLASSIFICATION	2.8448850038533677E-9	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999934732481	WITHOUT_CLASSIFICATION	6.526751844888198E-9	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999738945935	WITHOUT_CLASSIFICATION	2.6105406624969676E-8	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999881043395	WITHOUT_CLASSIFICATION	1.1895660471621943E-8	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999998954934048	WITHOUT_CLASSIFICATION	1.0450659507579998E-7	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999996061748241	WITHOUT_CLASSIFICATION	3.938251758643193E-7	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999999989471375	WITHOUT_CLASSIFICATION	1.0528624149982087E-9	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999997715164	WITHOUT_CLASSIFICATION	2.2848361848043297E-10	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999989865419059	WITHOUT_CLASSIFICATION	1.0134580940829946E-6	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999906283408653	WITHOUT_CLASSIFICATION	9.371659134705364E-6	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999995659783796	WITHOUT_CLASSIFICATION	4.3402162041720816E-7	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999995659783796	WITHOUT_CLASSIFICATION	4.3402162041720816E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999997785261686	WITHOUT_CLASSIFICATION	2.2147383136623162E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999997785261686	WITHOUT_CLASSIFICATION	2.2147383136623162E-7	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9998219527709119	WITHOUT_CLASSIFICATION	1.7804722908819936E-4	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9998219527709119	WITHOUT_CLASSIFICATION	1.7804722908819936E-4	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999999974455346	WITHOUT_CLASSIFICATION	2.554465490565894E-9	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999999927420644	WITHOUT_CLASSIFICATION	7.257935565327856E-9	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999998493033895	WITHOUT_CLASSIFICATION	1.5069661059238406E-7	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999999513206742	WITHOUT_CLASSIFICATION	4.867932579376249E-8	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999999990815984	WITHOUT_CLASSIFICATION	9.184015166618363E-10	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999999025511442	WITHOUT_CLASSIFICATION	9.744885572695994E-8	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999999971500189	WITHOUT_CLASSIFICATION	2.84998100235277E-9	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999999758651825	WITHOUT_CLASSIFICATION	2.413481750262743E-8	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999999230261395	WITHOUT_CLASSIFICATION	7.697386047121739E-8	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999999207848649	WITHOUT_CLASSIFICATION	7.921513516765312E-8	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999999569646641	WITHOUT_CLASSIFICATION	4.3035335749315506E-8	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9999996329123757	WITHOUT_CLASSIFICATION	3.6708762435260795E-7	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999999686222455	WITHOUT_CLASSIFICATION	3.1377754522179936E-8	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999989648210356	WITHOUT_CLASSIFICATION	1.0351789644846902E-6	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999997984657324	WITHOUT_CLASSIFICATION	2.015342675500031E-7	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9997865131286885	WITHOUT_CLASSIFICATION	2.134868713115781E-4	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9999997665089916	WITHOUT_CLASSIFICATION	2.3349100845986315E-7	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999999163291216	WITHOUT_CLASSIFICATION	8.36708785081462E-8	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999998452843776	WITHOUT_CLASSIFICATION	1.5471562252080872E-7	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999934732481	WITHOUT_CLASSIFICATION	6.526751844888198E-9	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999881043395	WITHOUT_CLASSIFICATION	1.1895660471621943E-8	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999655422	WITHOUT_CLASSIFICATION	3.445782873174486E-11	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998942343551	WITHOUT_CLASSIFICATION	1.0576564496196545E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998942343551	WITHOUT_CLASSIFICATION	1.0576564496196545E-7	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999906283408653	WITHOUT_CLASSIFICATION	9.371659134705364E-6	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999995659783796	WITHOUT_CLASSIFICATION	4.3402162041720816E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999997785261686	WITHOUT_CLASSIFICATION	2.2147383136623162E-7	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9998219527709119	WITHOUT_CLASSIFICATION	1.7804722908819936E-4	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999984149798942	WITHOUT_CLASSIFICATION	1.585020105932619E-6	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999990480724339	WITHOUT_CLASSIFICATION	9.519275660751155E-7	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999944559007263	WITHOUT_CLASSIFICATION	5.544099273572945E-6	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999999384703714	WITHOUT_CLASSIFICATION	6.152962868324389E-8	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999903678306	WITHOUT_CLASSIFICATION	9.632169408566629E-9	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999903678306	WITHOUT_CLASSIFICATION	9.632169408566629E-9	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999999905112722	WITHOUT_CLASSIFICATION	9.488727814180909E-9	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999981707814807	WITHOUT_CLASSIFICATION	1.8292185192464596E-6	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999880233594	WITHOUT_CLASSIFICATION	1.1976640488361575E-8	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999989062591594	WITHOUT_CLASSIFICATION	1.0937408406106918E-6	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.999999540130879	WITHOUT_CLASSIFICATION	4.5986912103040916E-7	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.999999540130879	WITHOUT_CLASSIFICATION	4.5986912103040916E-7	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999999194161173	WITHOUT_CLASSIFICATION	8.058388265954572E-8	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9999993632800339	WITHOUT_CLASSIFICATION	6.367199661259718E-7	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999999879855894	WITHOUT_CLASSIFICATION	1.2014410719185577E-8	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999871227195473	WITHOUT_CLASSIFICATION	1.2877280452613204E-5	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999995670821414	WITHOUT_CLASSIFICATION	4.3291785856043294E-7	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999999962489253	WITHOUT_CLASSIFICATION	3.751074741316702E-9	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999998935784717	WITHOUT_CLASSIFICATION	1.064215282311592E-7	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.999999977739278	WITHOUT_CLASSIFICATION	2.2260722079211428E-8	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9996003496725414	WITHOUT_CLASSIFICATION	3.996503274585385E-4	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9999571962723889	WITHOUT_CLASSIFICATION	4.280372761103138E-5	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999999977302998	WITHOUT_CLASSIFICATION	2.269700189830521E-9	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999999572054686	WITHOUT_CLASSIFICATION	4.279453133226426E-8	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999998919328419	WITHOUT_CLASSIFICATION	1.080671580648557E-7	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999994135941138	WITHOUT_CLASSIFICATION	5.864058862126806E-7	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999998312571187	WITHOUT_CLASSIFICATION	1.6874288137236922E-7	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999837716374292	WITHOUT_CLASSIFICATION	1.62283625707492E-5	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999999992979827	WITHOUT_CLASSIFICATION	7.02017346444468E-10	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999970241587841	WITHOUT_CLASSIFICATION	2.9758412158850944E-6	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999964606714178	WITHOUT_CLASSIFICATION	3.5393285823278584E-6	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999999617974694	WITHOUT_CLASSIFICATION	3.8202530540456245E-8	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999963993834304	WITHOUT_CLASSIFICATION	3.6006165695999655E-6	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999999785307387	WITHOUT_CLASSIFICATION	2.1469261214330086E-8	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999999785307387	WITHOUT_CLASSIFICATION	2.1469261214330086E-8	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999998586630315	WITHOUT_CLASSIFICATION	1.4133696845269105E-7	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999999913939771	WITHOUT_CLASSIFICATION	8.606022829614608E-9	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999985504474884	WITHOUT_CLASSIFICATION	1.44955251153274E-6	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999985504474884	WITHOUT_CLASSIFICATION	1.44955251153274E-6	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9375177142081513	WITHOUT_CLASSIFICATION	0.06248228579184862	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.999999931273022	WITHOUT_CLASSIFICATION	6.872697794998487E-8	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999984160335753	WITHOUT_CLASSIFICATION	1.5839664246933538E-6	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.999999971799776	WITHOUT_CLASSIFICATION	2.820022402614213E-8	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.999999971799776	WITHOUT_CLASSIFICATION	2.820022402614213E-8	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999987331897577	WITHOUT_CLASSIFICATION	1.2668102423397133E-6	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999965839552	WITHOUT_CLASSIFICATION	3.416044808322387E-9	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999998995959795	WITHOUT_CLASSIFICATION	1.0040402054485504E-7	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999998500396139	WITHOUT_CLASSIFICATION	1.499603861054422E-7	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999995510507991	WITHOUT_CLASSIFICATION	4.489492010351174E-7	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999999971309408	WITHOUT_CLASSIFICATION	2.869059302848595E-9	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999997104172549	WITHOUT_CLASSIFICATION	2.8958274515331416E-7	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999993222688847	WITHOUT_CLASSIFICATION	6.777311153244304E-7	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9999994446190608	WITHOUT_CLASSIFICATION	5.553809393124115E-7	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999968336433368	WITHOUT_CLASSIFICATION	3.1663566633120765E-6	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999990389962329	WITHOUT_CLASSIFICATION	9.610037670461273E-7	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999882227198861	WITHOUT_CLASSIFICATION	1.1777280113973857E-5	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9999997994789708	WITHOUT_CLASSIFICATION	2.005210292890139E-7	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999998927223727	WITHOUT_CLASSIFICATION	1.0727762737119914E-7	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9995253407040537	WITHOUT_CLASSIFICATION	4.746592959461963E-4	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999998576086117	WITHOUT_CLASSIFICATION	1.4239138841652996E-7	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999998476559	WITHOUT_CLASSIFICATION	1.5234410899664943E-10	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999801424961505	WITHOUT_CLASSIFICATION	1.9857503849519127E-5	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999971803942252	WITHOUT_CLASSIFICATION	2.8196057747194842E-6	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999999990713374	WITHOUT_CLASSIFICATION	9.286624798859965E-10	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9999860824856187	WITHOUT_CLASSIFICATION	1.3917514381276702E-5	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9999997657828396	WITHOUT_CLASSIFICATION	2.3421716047066517E-7	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999925929521741	WITHOUT_CLASSIFICATION	7.407047825923413E-6	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999992979413013	WITHOUT_CLASSIFICATION	7.020586987147735E-7	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999950645809048	WITHOUT_CLASSIFICATION	4.935419095181351E-6	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999999746771494	WITHOUT_CLASSIFICATION	2.5322850570182114E-8	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9995893781660987	WITHOUT_CLASSIFICATION	4.10621833901313E-4	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999923332467	WITHOUT_CLASSIFICATION	7.66675328795469E-9	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999983235570236	WITHOUT_CLASSIFICATION	1.6764429764850216E-6	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999986847254	WITHOUT_CLASSIFICATION	1.3152745660560473E-9	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.999999988698044	WITHOUT_CLASSIFICATION	1.1301955993229105E-8	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999998927223727	WITHOUT_CLASSIFICATION	1.0727762737119914E-7	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999923332467	WITHOUT_CLASSIFICATION	7.66675328795469E-9	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999983235570236	WITHOUT_CLASSIFICATION	1.6764429764850216E-6	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.999999988698044	WITHOUT_CLASSIFICATION	1.1301955993229105E-8	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999986299719729	WITHOUT_CLASSIFICATION	1.3700280270530233E-6	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9999957127088712	WITHOUT_CLASSIFICATION	4.2872911287274594E-6	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999997921646059	WITHOUT_CLASSIFICATION	2.0783539402524924E-7	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999999699724533	WITHOUT_CLASSIFICATION	3.002754658294353E-8	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.999999967606328	WITHOUT_CLASSIFICATION	3.239367199567475E-8	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.999999998949611	WITHOUT_CLASSIFICATION	1.0503890624310862E-9	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.99999950007195	WITHOUT_CLASSIFICATION	4.999280499802581E-7	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9999993263247886	WITHOUT_CLASSIFICATION	6.736752114269232E-7	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9999997334861098	WITHOUT_CLASSIFICATION	2.6651389020127255E-7	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999995388951574	WITHOUT_CLASSIFICATION	4.611048426034242E-7	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.999999913996142	WITHOUT_CLASSIFICATION	8.600385801828181E-8	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.999999913996142	WITHOUT_CLASSIFICATION	8.600385801828181E-8	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999999993515197	WITHOUT_CLASSIFICATION	6.484802728147558E-10	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999997821997791	WITHOUT_CLASSIFICATION	2.1780022098385136E-7	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999899653897	WITHOUT_CLASSIFICATION	1.0034610176077902E-8	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.99999952736826	WITHOUT_CLASSIFICATION	4.726317399259079E-7	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999999855014159	WITHOUT_CLASSIFICATION	1.4498584004240973E-8	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999999760809123	WITHOUT_CLASSIFICATION	2.3919087739887222E-8	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999999354717782	WITHOUT_CLASSIFICATION	6.452822169613564E-8	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999956401089	WITHOUT_CLASSIFICATION	4.359891131408088E-9	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999999929463496	WITHOUT_CLASSIFICATION	7.053650398590945E-9	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.999998223859686	WITHOUT_CLASSIFICATION	1.77614031402853E-6	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999998290025218	WITHOUT_CLASSIFICATION	1.709974781361486E-7	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.99999282290015	WITHOUT_CLASSIFICATION	7.177099849924356E-6	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999999738866567	WITHOUT_CLASSIFICATION	2.6113343260556838E-8	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999997982218838	WITHOUT_CLASSIFICATION	2.0177811623877662E-7	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9999986332597613	WITHOUT_CLASSIFICATION	1.3667402385971079E-6	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999782603908648	WITHOUT_CLASSIFICATION	2.1739609135214016E-5	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9999992743251039	WITHOUT_CLASSIFICATION	7.256748962020123E-7	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9999985624012202	WITHOUT_CLASSIFICATION	1.437598779756869E-6	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9999504103054186	WITHOUT_CLASSIFICATION	4.958969458131338E-5	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9999953629570916	WITHOUT_CLASSIFICATION	4.6370429084444145E-6	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9999996810495656	WITHOUT_CLASSIFICATION	3.189504343856573E-7	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9999990744335289	WITHOUT_CLASSIFICATION	9.255664711257707E-7	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999999340731975	WITHOUT_CLASSIFICATION	6.592680242034612E-8	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9999930255013785	WITHOUT_CLASSIFICATION	6.97449862154052E-6	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.999999997499502	WITHOUT_CLASSIFICATION	2.5004980659463907E-9	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9999952066571799	WITHOUT_CLASSIFICATION	4.793342820090374E-6	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999999870406177	WITHOUT_CLASSIFICATION	1.2959382357852506E-8	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999998670927716	WITHOUT_CLASSIFICATION	1.3290722836421423E-7	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.9999999880278376	WITHOUT_CLASSIFICATION	1.1972162291567124E-8	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999999979968003	WITHOUT_CLASSIFICATION	2.0031997807646132E-9	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999999978417488	WITHOUT_CLASSIFICATION	2.1582513063216915E-9	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9999999900921528	WITHOUT_CLASSIFICATION	9.907847287939599E-9	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999999412512893	WITHOUT_CLASSIFICATION	5.8748710672742954E-8	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999996798035147	WITHOUT_CLASSIFICATION	3.2019648530651314E-7	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999999968017081	WITHOUT_CLASSIFICATION	3.1982918349769578E-9	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999999823383674	WITHOUT_CLASSIFICATION	1.7661632584215453E-8	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999999963511963	WITHOUT_CLASSIFICATION	3.6488037018192568E-9	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999998609713908	WITHOUT_CLASSIFICATION	1.3902860920757927E-7	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999990672361909	WITHOUT_CLASSIFICATION	9.327638090126655E-7	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999937992203985	WITHOUT_CLASSIFICATION	6.2007796014148395E-6	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999999681387822	WITHOUT_CLASSIFICATION	3.1861217889530075E-8	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998616296034104	WITHOUT_CLASSIFICATION	1.383703965896438E-4	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.9999984933954564	WITHOUT_CLASSIFICATION	1.5066045435616343E-6	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999999135265827	WITHOUT_CLASSIFICATION	8.647341729457498E-8	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999990852534615	WITHOUT_CLASSIFICATION	9.147465383765493E-7	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999999984437008	WITHOUT_CLASSIFICATION	1.5562991418027644E-9	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.999935439652574	WITHOUT_CLASSIFICATION	6.456034742595444E-5	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999996272723414	WITHOUT_CLASSIFICATION	3.7272765865464615E-7	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.999998326220098	WITHOUT_CLASSIFICATION	1.6737799020008105E-6	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999999869180635	WITHOUT_CLASSIFICATION	1.3081936561174877E-8	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999916098618628	WITHOUT_CLASSIFICATION	8.390138137196153E-6	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999999903276736	WITHOUT_CLASSIFICATION	9.67232635599307E-9	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.999986046561285	WITHOUT_CLASSIFICATION	1.3953438714870317E-5	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999999933402847	WITHOUT_CLASSIFICATION	6.659715267371602E-9	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.999999724130222	WITHOUT_CLASSIFICATION	2.758697780395511E-7	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999999984903201	WITHOUT_CLASSIFICATION	1.5096799046076228E-8	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999914957661384	WITHOUT_CLASSIFICATION	8.504233861638776E-6	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999308538272149	WITHOUT_CLASSIFICATION	6.914617278506999E-5	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.7224252450238393	WITHOUT_CLASSIFICATION	0.27757475497616063	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9998229931531655	WITHOUT_CLASSIFICATION	1.7700684683463313E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9998229931531655	WITHOUT_CLASSIFICATION	1.7700684683463313E-4	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999451463819	WITHOUT_CLASSIFICATION	5.4853618068386575E-8	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.999999402667642	WITHOUT_CLASSIFICATION	5.973323579347389E-7	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999904013087	WITHOUT_CLASSIFICATION	9.598691327365019E-9	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999999962727062	WITHOUT_CLASSIFICATION	3.7272937917313966E-8	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999997866014589	WITHOUT_CLASSIFICATION	2.1339854104211717E-7	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999998662253511	WITHOUT_CLASSIFICATION	1.337746488821865E-7	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999960943242685	WITHOUT_CLASSIFICATION	3.905675731405156E-6	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999646237039252	WITHOUT_CLASSIFICATION	3.5376296074809046E-5	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999999691460794	WITHOUT_CLASSIFICATION	3.0853920672519974E-8	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999995207202196	WITHOUT_CLASSIFICATION	4.792797804175637E-7	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999999958146116	WITHOUT_CLASSIFICATION	4.185388385958573E-9	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9999999870977254	WITHOUT_CLASSIFICATION	1.2902274538811179E-8	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999997409925903	WITHOUT_CLASSIFICATION	2.5900740976540725E-7	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999042767513775	WITHOUT_CLASSIFICATION	9.572324862248526E-5	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999999730404844	WITHOUT_CLASSIFICATION	2.695951571557614E-8	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999990769190933	WITHOUT_CLASSIFICATION	9.230809066511585E-7	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9999998083419799	WITHOUT_CLASSIFICATION	1.9165802019494294E-7	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999974886732	WITHOUT_CLASSIFICATION	2.511326712833922E-9	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999939684966004	WITHOUT_CLASSIFICATION	6.031503399653705E-6	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999879793128206	WITHOUT_CLASSIFICATION	1.2020687179370724E-5	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999921337748	WITHOUT_CLASSIFICATION	7.86622526453805E-9	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999999649740482	WITHOUT_CLASSIFICATION	3.502595169169987E-8	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9994294997354674	WITHOUT_CLASSIFICATION	5.70500264532617E-4	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999999922324911	WITHOUT_CLASSIFICATION	7.767508944315519E-9	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999999718045591	WITHOUT_CLASSIFICATION	2.8195440931872637E-8	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999582833559592	WITHOUT_CLASSIFICATION	4.171664404078676E-5	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999999526872637	WITHOUT_CLASSIFICATION	4.7312736356371136E-8	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999999989578688	WITHOUT_CLASSIFICATION	1.0421312171384469E-9	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999998722577477	WITHOUT_CLASSIFICATION	1.2774225232840573E-7	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999999997182276	WITHOUT_CLASSIFICATION	2.8177239655208806E-10	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999955001063245	WITHOUT_CLASSIFICATION	4.499893675376989E-6	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999989854512937	WITHOUT_CLASSIFICATION	1.0145487062110745E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999997707469231	WITHOUT_CLASSIFICATION	2.2925307674655473E-7	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999998234326836	WITHOUT_CLASSIFICATION	1.7656731633915499E-7	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999997707469231	WITHOUT_CLASSIFICATION	2.2925307674655473E-7	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999999584241231	WITHOUT_CLASSIFICATION	4.1575876781713136E-8	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999986006846118	WITHOUT_CLASSIFICATION	1.3993153883015643E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999986006846118	WITHOUT_CLASSIFICATION	1.3993153883015643E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999986006846118	WITHOUT_CLASSIFICATION	1.3993153883015643E-6	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999995914600837	WITHOUT_CLASSIFICATION	4.0853991628292154E-7	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999995914600837	WITHOUT_CLASSIFICATION	4.0853991628292154E-7	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999999703401807	WITHOUT_CLASSIFICATION	2.9659819177406565E-8	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999999999025898	WITHOUT_CLASSIFICATION	9.741018976553767E-11	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999999825414126	WITHOUT_CLASSIFICATION	1.7458587298786427E-8	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9999797440315169	WITHOUT_CLASSIFICATION	2.0255968483066644E-5	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999998282781031	WITHOUT_CLASSIFICATION	1.7172189685626688E-7	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999999030362798	WITHOUT_CLASSIFICATION	9.696372010724232E-8	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999997517118768	WITHOUT_CLASSIFICATION	2.482881232010228E-7	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999993515179539	WITHOUT_CLASSIFICATION	6.484820460458664E-7	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999997719220455	WITHOUT_CLASSIFICATION	2.2807795447990277E-7	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999998998110471	WITHOUT_CLASSIFICATION	1.0018895293252271E-7	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999996639397218	WITHOUT_CLASSIFICATION	3.360602781414643E-7	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999994953064779	WITHOUT_CLASSIFICATION	5.0469352213583E-7	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999988674128176	WITHOUT_CLASSIFICATION	1.1325871824417563E-6	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9999997016889401	WITHOUT_CLASSIFICATION	2.9831105983119476E-7	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999995741260249	WITHOUT_CLASSIFICATION	4.2587397518710895E-7	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9999999882731088	WITHOUT_CLASSIFICATION	1.172689125112119E-8	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999999996663538	WITHOUT_CLASSIFICATION	3.3364626487171374E-10	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999988628795417	WITHOUT_CLASSIFICATION	1.1371204584396844E-6	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999988628795417	WITHOUT_CLASSIFICATION	1.1371204584396844E-6	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9999995416826012	WITHOUT_CLASSIFICATION	4.583173988795721E-7	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999997330844788	WITHOUT_CLASSIFICATION	2.669155212889744E-7	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999997330844788	WITHOUT_CLASSIFICATION	2.669155212889744E-7	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999998743920967	WITHOUT_CLASSIFICATION	1.2560790332957445E-7	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.999999969810036	WITHOUT_CLASSIFICATION	3.0189964048008136E-8	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9999500368905009	WITHOUT_CLASSIFICATION	4.9963109499154016E-5	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9999999011873422	WITHOUT_CLASSIFICATION	9.881265781866715E-8	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.999999541921111	WITHOUT_CLASSIFICATION	4.5807888903207145E-7	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999999098509242	WITHOUT_CLASSIFICATION	9.014907570064239E-8	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9999999529255105	WITHOUT_CLASSIFICATION	4.7074489491021534E-8	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999816795539378	WITHOUT_CLASSIFICATION	1.8320446062239247E-5	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999999748941704	WITHOUT_CLASSIFICATION	2.510582973050713E-8	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999987171322713	WITHOUT_CLASSIFICATION	1.282867728748258E-6	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.999959501128343	WITHOUT_CLASSIFICATION	4.049887165694291E-5	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999557960524289	WITHOUT_CLASSIFICATION	4.4203947571116546E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999985671952552	WITHOUT_CLASSIFICATION	1.4328047447804931E-6	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999999774579388	WITHOUT_CLASSIFICATION	2.2542061163230234E-8	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999993515179539	WITHOUT_CLASSIFICATION	6.484820460458664E-7	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999978215506679	WITHOUT_CLASSIFICATION	2.178449332236207E-6	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999947096416	WITHOUT_CLASSIFICATION	5.290358348693292E-9	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999978558340503	WITHOUT_CLASSIFICATION	2.1441659497745597E-6	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999978558340503	WITHOUT_CLASSIFICATION	2.1441659497745597E-6	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999999831476418	WITHOUT_CLASSIFICATION	1.6852358067414233E-8	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999921844845031	WITHOUT_CLASSIFICATION	7.815515496809832E-6	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.999999993212967	WITHOUT_CLASSIFICATION	6.78703304019813E-9	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9999991966670446	WITHOUT_CLASSIFICATION	8.033329553816619E-7	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999999997699235	WITHOUT_CLASSIFICATION	2.3007653053964335E-10	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999987478017015	WITHOUT_CLASSIFICATION	1.2521982985222994E-6	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999998954782853	WITHOUT_CLASSIFICATION	1.0452171470628095E-7	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999975130658447	WITHOUT_CLASSIFICATION	2.4869341553235367E-6	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999994784422441	WITHOUT_CLASSIFICATION	5.215577558038245E-7	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999907336237406	WITHOUT_CLASSIFICATION	9.266376259519022E-6	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999229646252965	WITHOUT_CLASSIFICATION	7.703537470354697E-5	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999999368067514	WITHOUT_CLASSIFICATION	6.319324869307122E-8	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.8887951038359365	WITHOUT_CLASSIFICATION	0.1112048961640635	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999999913567765	WITHOUT_CLASSIFICATION	8.643223458457721E-9	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999999973554612	WITHOUT_CLASSIFICATION	2.6445389185260595E-9	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999999958866698	WITHOUT_CLASSIFICATION	4.113330288854243E-9	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.999999218380663	WITHOUT_CLASSIFICATION	7.81619337001865E-7	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999684711253557	WITHOUT_CLASSIFICATION	3.1528874644222486E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.999999326507801	WITHOUT_CLASSIFICATION	6.734921989005734E-7	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999881266874	WITHOUT_CLASSIFICATION	1.1873312538587337E-8	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999989246583538	WITHOUT_CLASSIFICATION	1.075341646131589E-6	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999712767972779	WITHOUT_CLASSIFICATION	2.8723202722063907E-5	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999959681621465	WITHOUT_CLASSIFICATION	4.031837853453527E-6	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999977685726	WITHOUT_CLASSIFICATION	2.231427320779113E-9	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999965207574085	WITHOUT_CLASSIFICATION	3.479242591357644E-6	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999993773402522	WITHOUT_CLASSIFICATION	6.226597478163511E-7	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999998513937717	WITHOUT_CLASSIFICATION	1.4860622829106078E-7	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9998315868975921	WITHOUT_CLASSIFICATION	1.684131024078558E-4	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999999908430219	WITHOUT_CLASSIFICATION	9.156978134049239E-9	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999999980023101	WITHOUT_CLASSIFICATION	1.9976899693977823E-9	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.999998979945327	WITHOUT_CLASSIFICATION	1.0200546729715939E-6	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.999999705158094	WITHOUT_CLASSIFICATION	2.9484190596902246E-7	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999992260314763	WITHOUT_CLASSIFICATION	7.739685238449444E-7	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999999875722427	WITHOUT_CLASSIFICATION	1.2427757228742507E-8	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999999864674977	WITHOUT_CLASSIFICATION	1.3532502231370351E-8	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.99999995376987	WITHOUT_CLASSIFICATION	4.6230129820994085E-8	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9998315868975921	WITHOUT_CLASSIFICATION	1.684131024078558E-4	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999962717774	WITHOUT_CLASSIFICATION	3.728222621130771E-9	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999999864674977	WITHOUT_CLASSIFICATION	1.3532502231370351E-8	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999998905020123	WITHOUT_CLASSIFICATION	1.0949798768323224E-7	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999999606107882	WITHOUT_CLASSIFICATION	3.93892118363573E-8	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999995987298173	WITHOUT_CLASSIFICATION	4.0127018263591577E-7	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999997693876336	WITHOUT_CLASSIFICATION	2.3061236649184522E-7	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999998707569098	WITHOUT_CLASSIFICATION	1.2924309022446878E-7	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.999997748574181	WITHOUT_CLASSIFICATION	2.2514258190132145E-6	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.999997748574181	WITHOUT_CLASSIFICATION	2.2514258190132145E-6	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.8877598151973178	WITHOUT_CLASSIFICATION	0.1122401848026821	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999428129977251	WITHOUT_CLASSIFICATION	5.7187002274910674E-5	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.999999803805574	WITHOUT_CLASSIFICATION	1.9619442608762217E-7	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.999999803805574	WITHOUT_CLASSIFICATION	1.9619442608762217E-7	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999999226892151	WITHOUT_CLASSIFICATION	7.731078481960154E-8	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9999066790836447	WITHOUT_CLASSIFICATION	9.332091635520963E-5	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999882369171886	WITHOUT_CLASSIFICATION	1.1763082811452646E-5	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999882369171886	WITHOUT_CLASSIFICATION	1.1763082811452646E-5	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999893996841648	WITHOUT_CLASSIFICATION	1.0600315835238642E-5	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999992419234797	WITHOUT_CLASSIFICATION	7.580765203186766E-7	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999999998059127	WITHOUT_CLASSIFICATION	1.940872926262351E-10	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999998797486765	WITHOUT_CLASSIFICATION	1.2025132345486086E-7	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.999999983315213	WITHOUT_CLASSIFICATION	1.668478699887376E-8	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999938417595017	WITHOUT_CLASSIFICATION	6.15824049827219E-6	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999999468667786	WITHOUT_CLASSIFICATION	5.313322141560852E-8	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999999422455753	WITHOUT_CLASSIFICATION	5.7754424644892014E-8	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999993076296654	WITHOUT_CLASSIFICATION	6.923703347251144E-7	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.999999884997603	WITHOUT_CLASSIFICATION	1.1500239701224696E-7	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9999560689012057	WITHOUT_CLASSIFICATION	4.3931098794239184E-5	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.999999321558727	WITHOUT_CLASSIFICATION	6.78441273117359E-7	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999975766504619	WITHOUT_CLASSIFICATION	2.423349538096724E-6	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999978785385932	WITHOUT_CLASSIFICATION	2.1214614067917754E-6	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999982246919255	WITHOUT_CLASSIFICATION	1.7753080746101767E-6	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999999065337317	WITHOUT_CLASSIFICATION	9.346626825482588E-8	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999992535552391	WITHOUT_CLASSIFICATION	7.464447608583611E-7	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999998816838497	WITHOUT_CLASSIFICATION	1.1831615038164697E-7	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999990052515862	WITHOUT_CLASSIFICATION	9.947484137096427E-7	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9937582259982346	WITHOUT_CLASSIFICATION	0.006241774001765433	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999999933895635	WITHOUT_CLASSIFICATION	6.6104365284748814E-9	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999996705555577	WITHOUT_CLASSIFICATION	3.2944444235815347E-7	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999192902928785	WITHOUT_CLASSIFICATION	8.070970712144853E-5	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999990156602803	WITHOUT_CLASSIFICATION	9.843397196945876E-7	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999992300069247	WITHOUT_CLASSIFICATION	7.699930752672636E-7	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999999301000793	WITHOUT_CLASSIFICATION	6.989992070169568E-8	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999999802262184	WITHOUT_CLASSIFICATION	1.97737817074997E-8	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.999999704515408	WITHOUT_CLASSIFICATION	2.954845919415525E-7	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999998242745611	WITHOUT_CLASSIFICATION	1.7572543895078008E-7	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999998242745611	WITHOUT_CLASSIFICATION	1.7572543895078008E-7	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999999999116671	WITHOUT_CLASSIFICATION	8.833292317264357E-11	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999999924704824	WITHOUT_CLASSIFICATION	7.529517507734796E-9	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999999945636939	WITHOUT_CLASSIFICATION	5.436306078063649E-9	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999997702998652	WITHOUT_CLASSIFICATION	2.297001346892154E-7	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999999777495586	WITHOUT_CLASSIFICATION	2.2250441410950494E-8	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.999999527727099	WITHOUT_CLASSIFICATION	4.7227290112497105E-7	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999986431129867	WITHOUT_CLASSIFICATION	1.356887013293962E-6	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998861843115	WITHOUT_CLASSIFICATION	1.1381568861983948E-7	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999999988661515	WITHOUT_CLASSIFICATION	1.133848436064504E-9	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999996336502007	WITHOUT_CLASSIFICATION	3.663497992993983E-7	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9997887521008134	WITHOUT_CLASSIFICATION	2.1124789918666942E-4	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999999912870686	WITHOUT_CLASSIFICATION	8.712931455327042E-9	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9998318738094334	WITHOUT_CLASSIFICATION	1.6812619056669008E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.99999278723419	WITHOUT_CLASSIFICATION	7.212765810006239E-6	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999996834452213	WITHOUT_CLASSIFICATION	3.1655477876502373E-7	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999971344777103	WITHOUT_CLASSIFICATION	2.8655222896697856E-6	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9990837891450287	WITHOUT_CLASSIFICATION	9.16210854971171E-4	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.999999209501028	WITHOUT_CLASSIFICATION	7.904989720061149E-7	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9999997470789754	WITHOUT_CLASSIFICATION	2.529210244870424E-7	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999988672993282	WITHOUT_CLASSIFICATION	1.132700671840139E-6	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999967156350676	WITHOUT_CLASSIFICATION	3.284364932331507E-6	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999828755845324	WITHOUT_CLASSIFICATION	1.712441546756495E-5	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999998656326754	WITHOUT_CLASSIFICATION	1.3436732464908462E-7	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.999999884457006	WITHOUT_CLASSIFICATION	1.1554299388825867E-7	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999991588913427	WITHOUT_CLASSIFICATION	8.411086572753147E-7	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9997383352142946	WITHOUT_CLASSIFICATION	2.61664785705446E-4	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999980001737147	WITHOUT_CLASSIFICATION	1.9998262853501705E-6	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999984540286383	WITHOUT_CLASSIFICATION	1.5459713616598921E-6	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9999999461477765	WITHOUT_CLASSIFICATION	5.385222341559029E-8	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9999997640900365	WITHOUT_CLASSIFICATION	2.3590996350675511E-7	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999999936232301	WITHOUT_CLASSIFICATION	6.376769923078786E-9	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999993427094341	WITHOUT_CLASSIFICATION	6.57290565801348E-7	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999994710348477	WITHOUT_CLASSIFICATION	5.289651524052812E-7	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9999986709608356	WITHOUT_CLASSIFICATION	1.3290391643498662E-6	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.999999203824256	WITHOUT_CLASSIFICATION	7.96175744014454E-7	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999131764476005	WITHOUT_CLASSIFICATION	8.682355239949052E-5	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999970930219613	WITHOUT_CLASSIFICATION	2.906978038688218E-6	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999281658819068	WITHOUT_CLASSIFICATION	7.183411809315716E-5	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999974958035236	WITHOUT_CLASSIFICATION	2.5041964764162295E-6	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.999999573963698	WITHOUT_CLASSIFICATION	4.260363020829867E-7	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999884464607217	WITHOUT_CLASSIFICATION	1.155353927829125E-5	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999999400914441	WITHOUT_CLASSIFICATION	5.990855599601257E-8	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999916030845623	WITHOUT_CLASSIFICATION	8.396915437647758E-6	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999916030845623	WITHOUT_CLASSIFICATION	8.396915437647758E-6	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999872883098885	WITHOUT_CLASSIFICATION	1.271169011161365E-5	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999999887810914	WITHOUT_CLASSIFICATION	1.1218908542469266E-8	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.996865967356244	WITHOUT_CLASSIFICATION	0.003134032643755995	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999998210270007	WITHOUT_CLASSIFICATION	1.7897299943073994E-7	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999435600564823	WITHOUT_CLASSIFICATION	5.6439943517572516E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999975252248725	WITHOUT_CLASSIFICATION	2.474775127477167E-6	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999630088675504	WITHOUT_CLASSIFICATION	3.6991132449607904E-4	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999330073443269	WITHOUT_CLASSIFICATION	6.699265567301061E-5	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999996054030034	WITHOUT_CLASSIFICATION	3.9459699661487007E-7	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9999996807910516	WITHOUT_CLASSIFICATION	3.1920894836947795E-7	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9999999588981867	WITHOUT_CLASSIFICATION	4.110181327096974E-8	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.9999994605175369	WITHOUT_CLASSIFICATION	5.394824630723957E-7	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.999999974685902	WITHOUT_CLASSIFICATION	2.5314098018470886E-8	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999999960522811	WITHOUT_CLASSIFICATION	3.9477189068033915E-9	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999922150509	WITHOUT_CLASSIFICATION	7.784949125155568E-9	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9999999219360185	WITHOUT_CLASSIFICATION	7.80639815369409E-8	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.99999999849974	WITHOUT_CLASSIFICATION	1.5002600206002267E-9	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9999999290695238	WITHOUT_CLASSIFICATION	7.09304762325354E-8	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999899755405	WITHOUT_CLASSIFICATION	1.0024459449329331E-8	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.999999936892481	WITHOUT_CLASSIFICATION	6.310751889227248E-8	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999802020052	WITHOUT_CLASSIFICATION	1.9797994810669387E-8	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999943572255002	WITHOUT_CLASSIFICATION	5.642774499808353E-6	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999997874245259	WITHOUT_CLASSIFICATION	2.1257547407610785E-7	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999999407905399	WITHOUT_CLASSIFICATION	5.920946020311019E-8	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999998832702	WITHOUT_CLASSIFICATION	1.1672989371902683E-10	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999994640866	WITHOUT_CLASSIFICATION	5.359133272608805E-10	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.99999999927675	WITHOUT_CLASSIFICATION	7.232499334307348E-10	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999999298332383	WITHOUT_CLASSIFICATION	7.01667616592657E-8	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999999791270135	WITHOUT_CLASSIFICATION	2.0872986522738833E-8	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9999999143653007	WITHOUT_CLASSIFICATION	8.563469935503969E-8	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999999460319565	WITHOUT_CLASSIFICATION	5.3968043514238574E-8	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999999166812862	WITHOUT_CLASSIFICATION	8.33187138036859E-8	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.99997220250757	WITHOUT_CLASSIFICATION	2.7797492429989592E-5	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9967976581058293	WITHOUT_CLASSIFICATION	0.003202341894170585	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999281658819068	WITHOUT_CLASSIFICATION	7.183411809315716E-5	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9998617893332951	WITHOUT_CLASSIFICATION	1.3821066670494523E-4	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999999512006937	WITHOUT_CLASSIFICATION	4.8799306343871075E-8	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999999512006937	WITHOUT_CLASSIFICATION	4.8799306343871075E-8	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999999976987276	WITHOUT_CLASSIFICATION	2.301272503371988E-9	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999999948415496	WITHOUT_CLASSIFICATION	5.158450397691618E-9	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999834027401753	WITHOUT_CLASSIFICATION	1.6597259824766615E-5	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.9996138331078771	WITHOUT_CLASSIFICATION	3.8616689212283325E-4	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9995458253439835	WITHOUT_CLASSIFICATION	4.541746560164991E-4	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9995832567089756	WITHOUT_CLASSIFICATION	4.16743291024322E-4	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.999574148088069	WITHOUT_CLASSIFICATION	4.258519119310835E-4	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9996997712197261	WITHOUT_CLASSIFICATION	3.0022878027385517E-4	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9980758284156952	WITHOUT_CLASSIFICATION	0.001924171584304801	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9988629543176273	WITHOUT_CLASSIFICATION	0.0011370456823727895	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9986132101613354	WITHOUT_CLASSIFICATION	0.001386789838664646	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9968353330493934	WITHOUT_CLASSIFICATION	0.0031646669506065137	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.998559903243135	WITHOUT_CLASSIFICATION	0.0014400967568649456	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999971417090207	WITHOUT_CLASSIFICATION	2.8582909793816745E-6	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999992332074417	WITHOUT_CLASSIFICATION	7.667925582729338E-7	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999998016632443	WITHOUT_CLASSIFICATION	1.9833675580095284E-7	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9982047114928628	WITHOUT_CLASSIFICATION	0.001795288507137156	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9828353550374808	WITHOUT_CLASSIFICATION	0.017164644962519234	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9891642030096558	WITHOUT_CLASSIFICATION	0.01083579699034412	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9935733573161809	WITHOUT_CLASSIFICATION	0.006426642683819173	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9937723062498283	WITHOUT_CLASSIFICATION	0.006227693750171772	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9924645005857395	WITHOUT_CLASSIFICATION	0.0075354994142605	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.999998227901125	WITHOUT_CLASSIFICATION	1.7720988750012134E-6	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999999213315348	WITHOUT_CLASSIFICATION	7.866846530394125E-8	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999999994732319	WITHOUT_CLASSIFICATION	5.267681003433776E-10	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9895475706074139	WITHOUT_CLASSIFICATION	0.010452429392585994	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999983237361906	WITHOUT_CLASSIFICATION	1.67626380947016E-6	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999998775163079	WITHOUT_CLASSIFICATION	1.2248369209798103E-7	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.99999957766411	WITHOUT_CLASSIFICATION	4.223358901119398E-7	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999932574639259	WITHOUT_CLASSIFICATION	6.742536074067512E-6	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9999999728411904	WITHOUT_CLASSIFICATION	2.7158809657391783E-8	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.999999978840936	WITHOUT_CLASSIFICATION	2.1159063943641903E-8	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9999998914020894	WITHOUT_CLASSIFICATION	1.0859791064997025E-7	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999999933949425	WITHOUT_CLASSIFICATION	6.605057455516447E-9	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999992672485429	WITHOUT_CLASSIFICATION	7.327514570934691E-7	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999983676744383	WITHOUT_CLASSIFICATION	1.6323255617050672E-6	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999972076716	WITHOUT_CLASSIFICATION	2.79232840196949E-9	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9895475706074139	WITHOUT_CLASSIFICATION	0.010452429392585994	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999983237361906	WITHOUT_CLASSIFICATION	1.67626380947016E-6	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999998775163079	WITHOUT_CLASSIFICATION	1.2248369209798103E-7	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999932574639259	WITHOUT_CLASSIFICATION	6.742536074067512E-6	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9861931998556931	WITHOUT_CLASSIFICATION	0.013806800144306925	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999862399361	WITHOUT_CLASSIFICATION	1.3760063868959977E-8	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999466321217774	WITHOUT_CLASSIFICATION	5.336787822273166E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999998745889437	WITHOUT_CLASSIFICATION	1.2541105623110026E-7	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.999994718869124	WITHOUT_CLASSIFICATION	5.2811308759276286E-6	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999912736606	WITHOUT_CLASSIFICATION	8.72633952965567E-9	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999970545897449	WITHOUT_CLASSIFICATION	2.9454102550880667E-6	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999997194220873	WITHOUT_CLASSIFICATION	2.805779126005459E-7	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999999635057057	WITHOUT_CLASSIFICATION	3.649429418227175E-8	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999964950978574	WITHOUT_CLASSIFICATION	3.5049021427203054E-6	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999999774729372	WITHOUT_CLASSIFICATION	2.2527062751132744E-8	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999999041961597	WITHOUT_CLASSIFICATION	9.580384038515657E-8	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999999976430431	WITHOUT_CLASSIFICATION	2.3569568830571175E-9	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999996783630246	WITHOUT_CLASSIFICATION	3.216369753081676E-7	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9999985799974278	WITHOUT_CLASSIFICATION	1.4200025721899124E-6	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9999990093986778	WITHOUT_CLASSIFICATION	9.906013221745504E-7	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999999841475332	WITHOUT_CLASSIFICATION	1.585246684473036E-8	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999997136976645	WITHOUT_CLASSIFICATION	2.863023355331492E-7	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999996899479306	WITHOUT_CLASSIFICATION	3.10052069374817E-7	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999972076716	WITHOUT_CLASSIFICATION	2.79232840196949E-9	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999862399361	WITHOUT_CLASSIFICATION	1.3760063868959977E-8	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999466321217774	WITHOUT_CLASSIFICATION	5.336787822273166E-5	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.999994718869124	WITHOUT_CLASSIFICATION	5.2811308759276286E-6	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999912736606	WITHOUT_CLASSIFICATION	8.72633952965567E-9	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999970545897449	WITHOUT_CLASSIFICATION	2.9454102550880667E-6	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999997194220873	WITHOUT_CLASSIFICATION	2.805779126005459E-7	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999999192945297	WITHOUT_CLASSIFICATION	8.070547030728971E-8	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999931841639486	WITHOUT_CLASSIFICATION	6.815836051398193E-6	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999999532489494	WITHOUT_CLASSIFICATION	4.67510506311052E-8	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999991230842	WITHOUT_CLASSIFICATION	8.769157629060038E-10	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999998044774363	WITHOUT_CLASSIFICATION	1.955225636067805E-7	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999998044774363	WITHOUT_CLASSIFICATION	1.955225636067805E-7	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9999999945836389	WITHOUT_CLASSIFICATION	5.4163611545149475E-9	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999999111496638	WITHOUT_CLASSIFICATION	8.885033627193944E-8	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999999488607959	WITHOUT_CLASSIFICATION	5.1139203953553614E-8	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.999999139655638	WITHOUT_CLASSIFICATION	8.603443619398322E-7	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999999960206711	WITHOUT_CLASSIFICATION	3.979328894440217E-9	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999972683438425	WITHOUT_CLASSIFICATION	2.7316561575342297E-6	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9999997163425598	WITHOUT_CLASSIFICATION	2.836574402045242E-7	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999995218526724	WITHOUT_CLASSIFICATION	4.781473276412148E-7	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999997362351278	WITHOUT_CLASSIFICATION	2.637648721185527E-7	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999903848616921	WITHOUT_CLASSIFICATION	9.615138307837846E-6	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999936114843632	WITHOUT_CLASSIFICATION	6.388515636807331E-6	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999016200230955	WITHOUT_CLASSIFICATION	9.837997690453267E-5	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.999995057561903	WITHOUT_CLASSIFICATION	4.942438096938668E-6	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999995784896336	WITHOUT_CLASSIFICATION	4.215103664165791E-7	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999995187579614	WITHOUT_CLASSIFICATION	4.812420385314661E-7	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.999954267365491	WITHOUT_CLASSIFICATION	4.573263450900801E-5	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9999998797722476	WITHOUT_CLASSIFICATION	1.2022775238152453E-7	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.999999998295269	WITHOUT_CLASSIFICATION	1.7047310142603786E-9	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999999399012458	WITHOUT_CLASSIFICATION	6.009875417805294E-8	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999993481545801	WITHOUT_CLASSIFICATION	6.518454199074213E-7	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9659581250918579	IMPLEMENTATION	0.03404187490814218	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999998960692574	WITHOUT_CLASSIFICATION	1.039307425370404E-7	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.999999992238282	WITHOUT_CLASSIFICATION	7.761718109240044E-9	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5887280554955185	WITHOUT_CLASSIFICATION	0.4112719445044815	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999761480744581	WITHOUT_CLASSIFICATION	2.385192554182966E-5	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999906019526115	WITHOUT_CLASSIFICATION	9.398047388530092E-6	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999844429326	WITHOUT_CLASSIFICATION	1.5557067441582363E-8	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999996511254854	WITHOUT_CLASSIFICATION	3.488745145761028E-7	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9999996828557293	WITHOUT_CLASSIFICATION	3.171442707622993E-7	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999761480744581	WITHOUT_CLASSIFICATION	2.385192554182966E-5	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999906019526115	WITHOUT_CLASSIFICATION	9.398047388530092E-6	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999995784896336	WITHOUT_CLASSIFICATION	4.215103664165791E-7	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999675768433374	WITHOUT_CLASSIFICATION	3.2423156662681754E-5	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999993686741101	WITHOUT_CLASSIFICATION	6.313258898730018E-7	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999362081493666	WITHOUT_CLASSIFICATION	6.379185063345624E-5	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999999999517243	WITHOUT_CLASSIFICATION	4.8275691481698045E-11	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999936765877265	WITHOUT_CLASSIFICATION	6.323412273549673E-6	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999989102993743	WITHOUT_CLASSIFICATION	1.089700625699484E-6	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999988736377785	WITHOUT_CLASSIFICATION	1.1263622214675842E-6	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999996865281479	WITHOUT_CLASSIFICATION	3.1347185212146686E-7	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999993582603821	WITHOUT_CLASSIFICATION	6.417396179148667E-7	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999999999036387	WITHOUT_CLASSIFICATION	9.636124341707394E-11	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999885981898106	WITHOUT_CLASSIFICATION	1.1401810189351456E-5	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999670634200031	WITHOUT_CLASSIFICATION	3.293657999697589E-5	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9998929600070964	WITHOUT_CLASSIFICATION	1.0703999290353277E-4	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999999965691502	WITHOUT_CLASSIFICATION	3.43084982313616E-9	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999999989447396	WITHOUT_CLASSIFICATION	1.0552604085847081E-9	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.999999591462295	WITHOUT_CLASSIFICATION	4.085377049282852E-7	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999799166402338	WITHOUT_CLASSIFICATION	2.0083359766160992E-5	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999589164212392	WITHOUT_CLASSIFICATION	4.108357876081575E-5	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999828849211563	WITHOUT_CLASSIFICATION	1.7115078843705613E-5	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999999722479567	WITHOUT_CLASSIFICATION	2.7752043321931815E-8	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999998373366579	WITHOUT_CLASSIFICATION	1.626633420892186E-7	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999999012470202	WITHOUT_CLASSIFICATION	9.875297979389276E-8	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999995352556886	WITHOUT_CLASSIFICATION	4.647443114427164E-7	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999932451821	WITHOUT_CLASSIFICATION	6.7548178424784035E-9	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.999999967351433	WITHOUT_CLASSIFICATION	3.264856696289702E-8	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999999468698311	WITHOUT_CLASSIFICATION	5.313016894052395E-8	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9999938452831943	WITHOUT_CLASSIFICATION	6.1547168057384895E-6	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.999998043953506	WITHOUT_CLASSIFICATION	1.9560464940532562E-6	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999999230204893	WITHOUT_CLASSIFICATION	7.69795106689269E-8	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999999976554569	WITHOUT_CLASSIFICATION	2.3445430836867063E-9	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999993768731807	WITHOUT_CLASSIFICATION	6.231268193326083E-7	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999990986316467	WITHOUT_CLASSIFICATION	9.013683532268602E-7	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999990986316467	WITHOUT_CLASSIFICATION	9.013683532268602E-7	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.999995057561903	WITHOUT_CLASSIFICATION	4.942438096938668E-6	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999999998136568	WITHOUT_CLASSIFICATION	1.8634310727465988E-10	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9998814694557498	WITHOUT_CLASSIFICATION	1.1853054425018598E-4	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999996687594362	WITHOUT_CLASSIFICATION	3.3124056375297314E-7	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999930655186869	WITHOUT_CLASSIFICATION	6.9344813130340665E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999930655186869	WITHOUT_CLASSIFICATION	6.9344813130340665E-6	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999999220473959	WITHOUT_CLASSIFICATION	7.795260420611122E-8	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999815580048881	WITHOUT_CLASSIFICATION	1.844199511186815E-5	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999993688767581	WITHOUT_CLASSIFICATION	6.311232418484633E-7	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999998328310334	WITHOUT_CLASSIFICATION	1.6716896662264165E-7	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999999516211604	WITHOUT_CLASSIFICATION	4.837883963314352E-8	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999999999737241	WITHOUT_CLASSIFICATION	2.6275910671810793E-11	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999985413665337	WITHOUT_CLASSIFICATION	1.4586334662579905E-6	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999904809631569	WITHOUT_CLASSIFICATION	9.519036843002492E-6	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999747204822	WITHOUT_CLASSIFICATION	2.527951785407676E-8	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999971824822345	WITHOUT_CLASSIFICATION	2.817517765553474E-6	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999999285664372	WITHOUT_CLASSIFICATION	7.143356288404314E-8	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999999659965108	WITHOUT_CLASSIFICATION	3.4003489252670144E-8	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999999251876089	WITHOUT_CLASSIFICATION	7.481239103952516E-8	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999998140751072	WITHOUT_CLASSIFICATION	1.8592489275308942E-7	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999996618071363	WITHOUT_CLASSIFICATION	3.381928636894266E-7	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.9999988150073376	WITHOUT_CLASSIFICATION	1.1849926624594668E-6	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999993174105	WITHOUT_CLASSIFICATION	6.825895501228061E-10	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999993174105	WITHOUT_CLASSIFICATION	6.825895501228061E-10	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999987956821079	WITHOUT_CLASSIFICATION	1.2043178920739548E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999987956821079	WITHOUT_CLASSIFICATION	1.2043178920739548E-6	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999971605793	WITHOUT_CLASSIFICATION	2.8394208067028554E-9	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999999718771871	WITHOUT_CLASSIFICATION	2.8122812765495047E-8	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999993651078604	WITHOUT_CLASSIFICATION	6.348921396811402E-7	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9908368121629247	WITHOUT_CLASSIFICATION	0.009163187837075284	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999999901665123	WITHOUT_CLASSIFICATION	9.833487627990473E-9	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999981484081372	WITHOUT_CLASSIFICATION	1.8515918628012912E-6	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999996434086852	WITHOUT_CLASSIFICATION	3.565913148322617E-7	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999999659965108	WITHOUT_CLASSIFICATION	3.4003489252670144E-8	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999999251876089	WITHOUT_CLASSIFICATION	7.481239103952516E-8	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999996618071363	WITHOUT_CLASSIFICATION	3.381928636894266E-7	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999999981857519	WITHOUT_CLASSIFICATION	1.8142479855004096E-9	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999996015561832	WITHOUT_CLASSIFICATION	3.9844381689367946E-7	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999999864537555	WITHOUT_CLASSIFICATION	1.3546244466525709E-8	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999993223348193	WITHOUT_CLASSIFICATION	6.776651807382403E-7	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999999999430587	WITHOUT_CLASSIFICATION	5.694121610397103E-11	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999969621823114	WITHOUT_CLASSIFICATION	3.0378176886145975E-6	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999994727759929	WITHOUT_CLASSIFICATION	5.272240070582278E-7	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999975099767944	WITHOUT_CLASSIFICATION	2.4900232056963776E-6	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999990475030768	WITHOUT_CLASSIFICATION	9.524969232311756E-7	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999999957876	WITHOUT_CLASSIFICATION	4.212441197676396E-12	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999546121689569	WITHOUT_CLASSIFICATION	4.5387831043100015E-5	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999979619787329	WITHOUT_CLASSIFICATION	2.0380212670206295E-6	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999999505135857	WITHOUT_CLASSIFICATION	4.9486414227749005E-8	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999999329578614	WITHOUT_CLASSIFICATION	6.704213864072858E-8	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999602894702474	WITHOUT_CLASSIFICATION	3.971052975258101E-5	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999999775929582	WITHOUT_CLASSIFICATION	2.240704181226252E-8	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999998875274853	WITHOUT_CLASSIFICATION	1.1247251480450004E-7	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999961307313959	WITHOUT_CLASSIFICATION	3.869268604085585E-6	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999973518227653	WITHOUT_CLASSIFICATION	2.6481772346474094E-6	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999999980982311	WITHOUT_CLASSIFICATION	1.9017689735934292E-9	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999999990202563	WITHOUT_CLASSIFICATION	9.797437100317002E-10	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999824465268615	WITHOUT_CLASSIFICATION	1.7553473138491368E-5	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999966588350346	WITHOUT_CLASSIFICATION	3.3411649652906976E-6	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999999936022622	WITHOUT_CLASSIFICATION	6.397737779733329E-9	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999998386193922	WITHOUT_CLASSIFICATION	1.6138060771106847E-7	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999995192586808	WITHOUT_CLASSIFICATION	4.807413192296347E-7	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999868936241697	WITHOUT_CLASSIFICATION	1.3106375830263767E-5	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999984571404834	WITHOUT_CLASSIFICATION	1.542859516649021E-6	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999999963149282	WITHOUT_CLASSIFICATION	3.685071781207959E-9	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999994501622308	WITHOUT_CLASSIFICATION	5.498377692433841E-7	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999986440468331	WITHOUT_CLASSIFICATION	1.3559531668467803E-6	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999997806572123	WITHOUT_CLASSIFICATION	2.193427878295386E-7	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999998733811302	WITHOUT_CLASSIFICATION	1.2661886985055965E-7	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999998349427834	WITHOUT_CLASSIFICATION	1.6505721643898987E-7	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999878307539265	WITHOUT_CLASSIFICATION	1.2169246073418627E-5	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999988222484794	WITHOUT_CLASSIFICATION	1.1777515205910586E-6	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999947244536795	WITHOUT_CLASSIFICATION	5.275546320565404E-6	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.999999982484249	WITHOUT_CLASSIFICATION	1.7515750936381304E-8	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999995510750721	WITHOUT_CLASSIFICATION	4.489249279009196E-7	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999999976160691	WITHOUT_CLASSIFICATION	2.3839309803681147E-9	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999994148466658	WITHOUT_CLASSIFICATION	5.851533342559516E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9998814694557498	WITHOUT_CLASSIFICATION	1.1853054425018598E-4	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999947244536795	WITHOUT_CLASSIFICATION	5.275546320565404E-6	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999999943830853	WITHOUT_CLASSIFICATION	5.61691470247578E-9	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999997798236525	WITHOUT_CLASSIFICATION	2.2017634743102385E-7	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999984578308515	WITHOUT_CLASSIFICATION	1.542169148516207E-6	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999997403518591	WITHOUT_CLASSIFICATION	2.596481408426008E-7	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999997403518591	WITHOUT_CLASSIFICATION	2.596481408426008E-7	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999034539569661	WITHOUT_CLASSIFICATION	9.654604303379972E-5	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999526628541674	WITHOUT_CLASSIFICATION	4.733714583256144E-5	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999993895475286	WITHOUT_CLASSIFICATION	6.104524713691989E-7	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999999997393266	WITHOUT_CLASSIFICATION	2.6067336115269605E-10	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9994677061807106	WITHOUT_CLASSIFICATION	5.322938192895364E-4	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999999402711757	WITHOUT_CLASSIFICATION	5.972882428580641E-8	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999999995570185	WITHOUT_CLASSIFICATION	4.4298165447760735E-10	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999952026420869	WITHOUT_CLASSIFICATION	4.797357913132171E-6	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999811260918	WITHOUT_CLASSIFICATION	1.887390821419696E-8	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999811260918	WITHOUT_CLASSIFICATION	1.887390821419696E-8	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.999999855762959	WITHOUT_CLASSIFICATION	1.4423704099753546E-7	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999953545138259	WITHOUT_CLASSIFICATION	4.645486174069426E-6	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999999936862315	WITHOUT_CLASSIFICATION	6.31376853070624E-9	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9999999954437274	WITHOUT_CLASSIFICATION	4.5562725088146976E-9	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999999996964546	WITHOUT_CLASSIFICATION	3.0354540838177264E-10	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999999051129075	WITHOUT_CLASSIFICATION	9.488709257701728E-8	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999999953367896	WITHOUT_CLASSIFICATION	4.663210349416876E-9	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999999958854748	WITHOUT_CLASSIFICATION	4.114525150527938E-9	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9999997704231234	WITHOUT_CLASSIFICATION	2.2957687661828012E-7	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999999975165175	WITHOUT_CLASSIFICATION	2.483482451680666E-9	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999851710041314	WITHOUT_CLASSIFICATION	1.482899586855288E-5	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999999673508164	WITHOUT_CLASSIFICATION	3.264918366007084E-8	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999995446362551	WITHOUT_CLASSIFICATION	4.553637449723467E-7	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994962045464	WITHOUT_CLASSIFICATION	5.037954536108438E-7	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994962045464	WITHOUT_CLASSIFICATION	5.037954536108438E-7	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999999949260229	WITHOUT_CLASSIFICATION	5.07397705173286E-9	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999997194220873	WITHOUT_CLASSIFICATION	2.805779126005459E-7	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999999998311044	WITHOUT_CLASSIFICATION	1.6889560730522697E-10	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999992633486081	WITHOUT_CLASSIFICATION	7.366513919137407E-7	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999999805056	WITHOUT_CLASSIFICATION	1.949438676491271E-11	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999999928681201	WITHOUT_CLASSIFICATION	7.131879845964575E-9	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999999997496284	WITHOUT_CLASSIFICATION	2.5037164059275985E-10	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999995143895302	WITHOUT_CLASSIFICATION	4.856104698036112E-7	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999990447749928	WITHOUT_CLASSIFICATION	9.552250072080816E-7	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9999998132140901	WITHOUT_CLASSIFICATION	1.867859097896046E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999688892299884	WITHOUT_CLASSIFICATION	3.111077001158207E-5	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999999611433888	WITHOUT_CLASSIFICATION	3.8856611119468664E-8	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999707600577058	WITHOUT_CLASSIFICATION	2.923994229419862E-5	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999999997760827	WITHOUT_CLASSIFICATION	2.239173855619808E-10	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999999970640497	WITHOUT_CLASSIFICATION	2.9359502726609223E-9	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999999810881223	WITHOUT_CLASSIFICATION	1.8911877759955828E-8	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.999999868505974	WITHOUT_CLASSIFICATION	1.3149402601271962E-7	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999998896880039	WITHOUT_CLASSIFICATION	1.1031199612715493E-7	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999999581648389	WITHOUT_CLASSIFICATION	4.18351611825203E-8	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999997203990378	WITHOUT_CLASSIFICATION	2.796009621549038E-7	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9999964091291889	WITHOUT_CLASSIFICATION	3.5908708110886186E-6	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.999999995399818	WITHOUT_CLASSIFICATION	4.600182042703258E-9	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999794199785177	WITHOUT_CLASSIFICATION	2.0580021482232693E-5	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999996322026394	WITHOUT_CLASSIFICATION	3.6779736064807635E-7	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.6504941401810382	WITHOUT_CLASSIFICATION	0.3495058598189617	IMPLEMENTATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999996639023464	WITHOUT_CLASSIFICATION	3.3609765353470877E-7	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9999996369478193	WITHOUT_CLASSIFICATION	3.6305218065053E-7	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9999997510109906	WITHOUT_CLASSIFICATION	2.4898900941018906E-7	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9999999307437505	WITHOUT_CLASSIFICATION	6.925624948534364E-8	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9988820878384882	WITHOUT_CLASSIFICATION	0.0011179121615118857	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999983148524226	WITHOUT_CLASSIFICATION	1.6851475773165539E-6	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9999957783695403	WITHOUT_CLASSIFICATION	4.221630459646604E-6	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999999163614576	WITHOUT_CLASSIFICATION	8.363854241506738E-8	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.99996807452561	WITHOUT_CLASSIFICATION	3.192547439008707E-5	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999989749820253	WITHOUT_CLASSIFICATION	1.0250179747369957E-6	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999999914071293	WITHOUT_CLASSIFICATION	8.592870774672403E-9	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999996928429652	WITHOUT_CLASSIFICATION	3.071570347608498E-7	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999996618697011	WITHOUT_CLASSIFICATION	3.3813029883955353E-7	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999999842440568	WITHOUT_CLASSIFICATION	1.575594324041317E-8	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999993455586478	WITHOUT_CLASSIFICATION	6.544413521707346E-7	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999999714889758	WITHOUT_CLASSIFICATION	2.851102423467305E-8	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9910813433443298	WITHOUT_CLASSIFICATION	0.008918656655670158	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999980286362062	WITHOUT_CLASSIFICATION	1.9713637937338415E-6	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999996942620673	WITHOUT_CLASSIFICATION	3.057379327636519E-7	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9999999003353442	WITHOUT_CLASSIFICATION	9.966465562919162E-8	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.999998597408498	WITHOUT_CLASSIFICATION	1.4025915020002274E-6	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999938221901	WITHOUT_CLASSIFICATION	6.177809938849848E-9	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999997827388	WITHOUT_CLASSIFICATION	2.1726127589119266E-10	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999766677057526	WITHOUT_CLASSIFICATION	2.3332294247450227E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999761480744581	WITHOUT_CLASSIFICATION	2.385192554182966E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999761480744581	WITHOUT_CLASSIFICATION	2.385192554182966E-5	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999986020440524	WITHOUT_CLASSIFICATION	1.3979559474999165E-6	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.999999951955976	WITHOUT_CLASSIFICATION	4.804402393552198E-8	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999999694854828	WITHOUT_CLASSIFICATION	3.0514517272600925E-8	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999999999240712	WITHOUT_CLASSIFICATION	7.592880549101478E-11	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999990829558026	WITHOUT_CLASSIFICATION	9.170441973033396E-7	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999919168962894	WITHOUT_CLASSIFICATION	8.083103710549338E-6	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999999762542032	WITHOUT_CLASSIFICATION	2.3745796693343118E-8	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999990928795	WITHOUT_CLASSIFICATION	9.071204435272527E-10	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.999999999124116	WITHOUT_CLASSIFICATION	8.758840608297138E-10	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999998900660902	WITHOUT_CLASSIFICATION	1.0993390972321172E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999998180105664	WITHOUT_CLASSIFICATION	1.819894336935039E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999998180105664	WITHOUT_CLASSIFICATION	1.819894336935039E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999998180105664	WITHOUT_CLASSIFICATION	1.819894336935039E-7	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9966871172235132	WITHOUT_CLASSIFICATION	0.0033128827764867565	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999999697177113	WITHOUT_CLASSIFICATION	3.028228870906215E-8	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9999995650459773	WITHOUT_CLASSIFICATION	4.349540226885699E-7	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999991265276761	WITHOUT_CLASSIFICATION	8.734723239155967E-7	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999991265276761	WITHOUT_CLASSIFICATION	8.734723239155967E-7	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999968265765915	WITHOUT_CLASSIFICATION	3.173423408585501E-6	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999458303514879	WITHOUT_CLASSIFICATION	5.416964851215515E-5	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999999997343858	WITHOUT_CLASSIFICATION	2.656141626836543E-10	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999999480772287	WITHOUT_CLASSIFICATION	5.192277125975094E-8	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.999999966574821	WITHOUT_CLASSIFICATION	3.342517890135782E-8	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9993945102144774	WITHOUT_CLASSIFICATION	6.054897855225141E-4	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999999721704522	WITHOUT_CLASSIFICATION	2.7829547812867625E-8	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999756795226206	WITHOUT_CLASSIFICATION	2.4320477379476563E-5	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999999954664932	WITHOUT_CLASSIFICATION	4.5335067917211366E-9	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999966876394508	WITHOUT_CLASSIFICATION	3.312360549126362E-6	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999966876394508	WITHOUT_CLASSIFICATION	3.312360549126362E-6	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999998404724738	WITHOUT_CLASSIFICATION	1.5952752621900487E-7	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.999999876908459	WITHOUT_CLASSIFICATION	1.230915409327582E-7	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999998581998832	WITHOUT_CLASSIFICATION	1.4180011685739752E-7	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999997315002601	WITHOUT_CLASSIFICATION	2.684997398956815E-7	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999999547451016	WITHOUT_CLASSIFICATION	4.525489833213015E-8	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999974969739033	WITHOUT_CLASSIFICATION	2.503026096665564E-6	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999988851621471	WITHOUT_CLASSIFICATION	1.1148378529166637E-6	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999919234949505	WITHOUT_CLASSIFICATION	8.07650504954902E-6	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.999999488877329	WITHOUT_CLASSIFICATION	5.111226710277031E-7	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.999999641030272	WITHOUT_CLASSIFICATION	3.589697280550332E-7	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999999920180582	WITHOUT_CLASSIFICATION	7.981941728408351E-9	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999999135163422	WITHOUT_CLASSIFICATION	8.648365778346859E-8	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9999999528749115	WITHOUT_CLASSIFICATION	4.7125088541215766E-8	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999999148978974	WITHOUT_CLASSIFICATION	8.51021026273811E-8	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.998412357035136	WITHOUT_CLASSIFICATION	0.0015876429648639574	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999999455454481	WITHOUT_CLASSIFICATION	5.445455186173246E-8	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.999996709789584	WITHOUT_CLASSIFICATION	3.290210415996048E-6	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999999625935575	WITHOUT_CLASSIFICATION	3.740644253159202E-8	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999981770084452	WITHOUT_CLASSIFICATION	1.8229915548572647E-6	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999999711838454	WITHOUT_CLASSIFICATION	2.881615449191787E-8	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999351327318093	WITHOUT_CLASSIFICATION	6.486726819072825E-5	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999913410286416	WITHOUT_CLASSIFICATION	8.658971358367782E-6	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999992967486239	WITHOUT_CLASSIFICATION	7.032513761072331E-7	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999987090753395	WITHOUT_CLASSIFICATION	1.2909246604389722E-6	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999984613291036	WITHOUT_CLASSIFICATION	1.5386708963122092E-6	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999947952478889	WITHOUT_CLASSIFICATION	5.2047521109993446E-6	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999996427431735	WITHOUT_CLASSIFICATION	3.5725682637194814E-7	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.999999898650896	WITHOUT_CLASSIFICATION	1.0134910408429924E-7	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999999994835949	WITHOUT_CLASSIFICATION	5.16405108628431E-10	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999991257585128	WITHOUT_CLASSIFICATION	8.742414872396944E-7	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999997712616766	WITHOUT_CLASSIFICATION	2.287383232939131E-7	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999049783022669	WITHOUT_CLASSIFICATION	9.502169773316776E-5	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999999295292458	WITHOUT_CLASSIFICATION	7.047075423396169E-8	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999997712616766	WITHOUT_CLASSIFICATION	2.287383232939131E-7	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999906145424083	WITHOUT_CLASSIFICATION	9.38545759167014E-6	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.999999721548103	WITHOUT_CLASSIFICATION	2.7845189692529355E-7	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999989406478001	WITHOUT_CLASSIFICATION	1.0593521998196906E-6	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999996617961047	WITHOUT_CLASSIFICATION	3.3820389536533345E-7	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999999519406431	WITHOUT_CLASSIFICATION	4.8059356857989055E-8	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999999247445981	WITHOUT_CLASSIFICATION	7.52554019221192E-8	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999999697220046	WITHOUT_CLASSIFICATION	3.027799550701836E-8	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999998403970792	WITHOUT_CLASSIFICATION	1.596029206569811E-7	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999989225179001	WITHOUT_CLASSIFICATION	1.0774820998864952E-6	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999930410916404	WITHOUT_CLASSIFICATION	6.9589083595644415E-6	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.999983565773507	WITHOUT_CLASSIFICATION	1.6434226492946572E-5	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999992249424012	WITHOUT_CLASSIFICATION	7.750575989171882E-7	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.999993855971274	WITHOUT_CLASSIFICATION	6.144028725973142E-6	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999658793255322	WITHOUT_CLASSIFICATION	3.4120674467878864E-5	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999978892476837	WITHOUT_CLASSIFICATION	2.1107523161976704E-6	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999965440205133	WITHOUT_CLASSIFICATION	3.455979486783426E-6	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999979108640568	WITHOUT_CLASSIFICATION	2.0891359432201414E-6	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999992202274008	WITHOUT_CLASSIFICATION	7.797725991205196E-7	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999984170128488	WITHOUT_CLASSIFICATION	1.582987151261009E-6	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999175628969524	WITHOUT_CLASSIFICATION	8.243710304759559E-5	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999999228235924	WITHOUT_CLASSIFICATION	7.717640758514072E-8	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999998593496745	WITHOUT_CLASSIFICATION	1.40650325422245E-7	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999993572139049	WITHOUT_CLASSIFICATION	6.427860950658558E-7	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999999117101795	WITHOUT_CLASSIFICATION	8.828982049960204E-8	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999999408818784	WITHOUT_CLASSIFICATION	5.9118121609196905E-8	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999999999106821	WITHOUT_CLASSIFICATION	8.931787525857273E-11	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999997649392349	WITHOUT_CLASSIFICATION	2.3506076503922092E-7	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999997313649088	WITHOUT_CLASSIFICATION	2.686350911654672E-7	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9999993528087056	WITHOUT_CLASSIFICATION	6.471912945051844E-7	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9999972396763586	WITHOUT_CLASSIFICATION	2.7603236414298728E-6	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.99999992449294	WITHOUT_CLASSIFICATION	7.550706002492898E-8	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9976125309307677	WITHOUT_CLASSIFICATION	0.002387469069232376	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.8565156492141575	WITHOUT_CLASSIFICATION	0.1434843507858426	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999999997472273	WITHOUT_CLASSIFICATION	2.5277262831812145E-10	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999895063418999	WITHOUT_CLASSIFICATION	1.0493658100017053E-5	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9999999894149337	WITHOUT_CLASSIFICATION	1.0585066302708762E-8	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.999999898077774	WITHOUT_CLASSIFICATION	1.0192222606767117E-7	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9999995853671713	WITHOUT_CLASSIFICATION	4.146328287398525E-7	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999933965564047	WITHOUT_CLASSIFICATION	6.603443595280234E-6	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9999998133342427	WITHOUT_CLASSIFICATION	1.8666575732170844E-7	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9999995034492668	WITHOUT_CLASSIFICATION	4.965507331473314E-7	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999871138509759	WITHOUT_CLASSIFICATION	1.2886149024135014E-5	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9999669791619118	WITHOUT_CLASSIFICATION	3.302083808811237E-5	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9999932462841002	WITHOUT_CLASSIFICATION	6.7537158997259525E-6	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999988243915122	WITHOUT_CLASSIFICATION	1.1756084877834775E-6	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.999999993308246	WITHOUT_CLASSIFICATION	6.69175406633154E-9	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9999967029103163	WITHOUT_CLASSIFICATION	3.297089683629552E-6	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999999863133592	WITHOUT_CLASSIFICATION	1.3686640877269115E-8	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999998230200462	WITHOUT_CLASSIFICATION	1.7697995387837174E-7	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.9999999231105816	WITHOUT_CLASSIFICATION	7.688941831085118E-8	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999999473511904	WITHOUT_CLASSIFICATION	5.264880963399787E-8	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999981339617524	WITHOUT_CLASSIFICATION	1.866038247533205E-6	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999955598486455	WITHOUT_CLASSIFICATION	4.4401513544725646E-6	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999998230200462	WITHOUT_CLASSIFICATION	1.7697995387837174E-7	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.8782443267144799	IMPLEMENTATION	0.12175567328552007	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.8782443267144799	IMPLEMENTATION	0.12175567328552007	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.999999598929811	WITHOUT_CLASSIFICATION	4.010701889903898E-7	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999999481253825	WITHOUT_CLASSIFICATION	5.1874617517887875E-8	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999999199157551	WITHOUT_CLASSIFICATION	8.008424499455176E-8	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999999406989746	WITHOUT_CLASSIFICATION	5.930102545205185E-8	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999994397719918	WITHOUT_CLASSIFICATION	5.602280082441724E-7	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999995845996565	WITHOUT_CLASSIFICATION	4.1540034338920793E-7	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999998190833675	WITHOUT_CLASSIFICATION	1.8091663230746438E-7	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9892418514292887	IMPLEMENTATION	0.010758148570711253	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999999004636939	WITHOUT_CLASSIFICATION	9.95363061469542E-8	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999967612362529	WITHOUT_CLASSIFICATION	3.2387637471548776E-6	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999999999908034	WITHOUT_CLASSIFICATION	9.196614375981704E-12	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999738890222	WITHOUT_CLASSIFICATION	2.6110977855097754E-8	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999969755693013	WITHOUT_CLASSIFICATION	3.024430698594596E-6	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999998081502967	WITHOUT_CLASSIFICATION	1.9184970338293337E-7	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9997259350072266	WITHOUT_CLASSIFICATION	2.740649927734219E-4	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.999947775148809	WITHOUT_CLASSIFICATION	5.2224851190934746E-5	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999999994320767	WITHOUT_CLASSIFICATION	5.679233519475591E-10	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999997924004356	WITHOUT_CLASSIFICATION	2.0759956439058595E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999997924004356	WITHOUT_CLASSIFICATION	2.0759956439058595E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999997924004356	WITHOUT_CLASSIFICATION	2.0759956439058595E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999997924004356	WITHOUT_CLASSIFICATION	2.0759956439058595E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999997924004356	WITHOUT_CLASSIFICATION	2.0759956439058595E-6	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9999996872464678	WITHOUT_CLASSIFICATION	3.1275353226851987E-7	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999996115836448	WITHOUT_CLASSIFICATION	3.8841635517383884E-7	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999628153043109	WITHOUT_CLASSIFICATION	3.718469568908892E-5	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999911830844	WITHOUT_CLASSIFICATION	8.816915687172345E-9	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999999904934321	WITHOUT_CLASSIFICATION	9.506567839960218E-9	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999976710572	WITHOUT_CLASSIFICATION	2.328942841733871E-9	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999831662473649	WITHOUT_CLASSIFICATION	1.6833752635034617E-5	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999998083333494	WITHOUT_CLASSIFICATION	1.9166665057772273E-7	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999991838626361	WITHOUT_CLASSIFICATION	8.161373639880115E-7	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9999990199511855	WITHOUT_CLASSIFICATION	9.80048814572554E-7	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9999996155226809	WITHOUT_CLASSIFICATION	3.844773190254824E-7	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9999997412339106	WITHOUT_CLASSIFICATION	2.587660894516349E-7	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9999990904841293	WITHOUT_CLASSIFICATION	9.095158707635305E-7	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9999993914455341	WITHOUT_CLASSIFICATION	6.085544658887025E-7	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9999994983215587	WITHOUT_CLASSIFICATION	5.016784414158076E-7	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9999998225507876	WITHOUT_CLASSIFICATION	1.7744921244825247E-7	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9999994291329792	WITHOUT_CLASSIFICATION	5.708670207230183E-7	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9999989849447398	WITHOUT_CLASSIFICATION	1.0150552602531474E-6	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9999995931800582	WITHOUT_CLASSIFICATION	4.068199418388911E-7	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999991682709257	WITHOUT_CLASSIFICATION	8.317290742155213E-7	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9999995590940739	WITHOUT_CLASSIFICATION	4.4090592617568786E-7	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9999996155043083	WITHOUT_CLASSIFICATION	3.8449569169690834E-7	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999998603326957	WITHOUT_CLASSIFICATION	1.3966730415599673E-7	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9999995675742546	WITHOUT_CLASSIFICATION	4.3242574535233885E-7	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999997880256075	WITHOUT_CLASSIFICATION	2.1197439254228837E-7	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9999997983616238	WITHOUT_CLASSIFICATION	2.0163837626169748E-7	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9999990317512893	WITHOUT_CLASSIFICATION	9.682487106006984E-7	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9999993042303472	WITHOUT_CLASSIFICATION	6.957696527120353E-7	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999994659191406	WITHOUT_CLASSIFICATION	5.340808593718695E-7	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.999999877637899	WITHOUT_CLASSIFICATION	1.2236210105151225E-7	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999996572178765	WITHOUT_CLASSIFICATION	3.427821235339363E-7	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9999996196351044	WITHOUT_CLASSIFICATION	3.8036489566631865E-7	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9999995917787399	WITHOUT_CLASSIFICATION	4.0822126004504733E-7	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9999994911221216	WITHOUT_CLASSIFICATION	5.088778784591584E-7	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9999998546101642	WITHOUT_CLASSIFICATION	1.453898358133216E-7	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9999996836453049	WITHOUT_CLASSIFICATION	3.1635469513761753E-7	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9999995006343246	WITHOUT_CLASSIFICATION	4.993656753356666E-7	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9999995905876792	WITHOUT_CLASSIFICATION	4.094123208515374E-7	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.9999998527032329	WITHOUT_CLASSIFICATION	1.472967671166642E-7	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9999996068359416	WITHOUT_CLASSIFICATION	3.931640584118168E-7	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9999993937046557	WITHOUT_CLASSIFICATION	6.062953441774092E-7	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999993713408851	WITHOUT_CLASSIFICATION	6.286591148691236E-7	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9999998071399765	WITHOUT_CLASSIFICATION	1.928600234723545E-7	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9999994001292613	WITHOUT_CLASSIFICATION	5.998707388331294E-7	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9999994956759642	WITHOUT_CLASSIFICATION	5.043240357321012E-7	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9999997706051907	WITHOUT_CLASSIFICATION	2.2939480929397704E-7	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9999998279588076	WITHOUT_CLASSIFICATION	1.7204119240137972E-7	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9999998346445397	WITHOUT_CLASSIFICATION	1.653554602262469E-7	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.999999394742656	WITHOUT_CLASSIFICATION	6.052573441345244E-7	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.999999706893063	WITHOUT_CLASSIFICATION	2.931069370200094E-7	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999628153043109	WITHOUT_CLASSIFICATION	3.718469568908892E-5	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999997402293068	WITHOUT_CLASSIFICATION	2.5977069315196504E-7	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999998223479777	WITHOUT_CLASSIFICATION	1.7765202242757205E-7	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999996748080687	WITHOUT_CLASSIFICATION	3.2519193135567753E-7	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999995946287159	WITHOUT_CLASSIFICATION	4.053712841101591E-7	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9999995627768544	WITHOUT_CLASSIFICATION	4.3722314551326064E-7	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.99999956815121	WITHOUT_CLASSIFICATION	4.318487899474765E-7	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9999996433904542	WITHOUT_CLASSIFICATION	3.56609545771139E-7	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999995586778836	WITHOUT_CLASSIFICATION	4.4132211633129093E-7	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9999995547933498	WITHOUT_CLASSIFICATION	4.452066501303682E-7	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9999996573020312	WITHOUT_CLASSIFICATION	3.4269796871970924E-7	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9999996050981917	WITHOUT_CLASSIFICATION	3.9490180824603916E-7	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.9999995733046558	WITHOUT_CLASSIFICATION	4.266953442210974E-7	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.9999995692810005	WITHOUT_CLASSIFICATION	4.3071899943455803E-7	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9999996714809398	WITHOUT_CLASSIFICATION	3.2851906022056257E-7	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9999997397240519	WITHOUT_CLASSIFICATION	2.6027594821563804E-7	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.999999769735525	WITHOUT_CLASSIFICATION	2.3026447504687926E-7	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9999993315662378	WITHOUT_CLASSIFICATION	6.684337621854369E-7	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9999991809632907	WITHOUT_CLASSIFICATION	8.190367092175719E-7	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9999995924511068	WITHOUT_CLASSIFICATION	4.07548893174155E-7	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9999994340838092	WITHOUT_CLASSIFICATION	5.659161908619883E-7	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.999999560504646	WITHOUT_CLASSIFICATION	4.3949535395641334E-7	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9999994586408227	WITHOUT_CLASSIFICATION	5.413591773118329E-7	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9999995262446862	WITHOUT_CLASSIFICATION	4.7375531385545613E-7	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9999997260370718	WITHOUT_CLASSIFICATION	2.739629282652193E-7	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9999995322728408	WITHOUT_CLASSIFICATION	4.677271592006184E-7	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9999998282927242	WITHOUT_CLASSIFICATION	1.7170727579812853E-7	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999998275807778	WITHOUT_CLASSIFICATION	1.7241922218204968E-7	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999994098100189	WITHOUT_CLASSIFICATION	5.901899810649857E-7	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9999996232281443	WITHOUT_CLASSIFICATION	3.7677185578373943E-7	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9999994102304728	WITHOUT_CLASSIFICATION	5.897695271974041E-7	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9999998885477722	WITHOUT_CLASSIFICATION	1.1145222776864619E-7	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9999996878410486	WITHOUT_CLASSIFICATION	3.1215895127946853E-7	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9999996921144686	WITHOUT_CLASSIFICATION	3.078855314120147E-7	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999998643097103	WITHOUT_CLASSIFICATION	1.3569028969079622E-7	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9999997122520303	WITHOUT_CLASSIFICATION	2.8774796968687597E-7	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9999995633403067	WITHOUT_CLASSIFICATION	4.366596931725808E-7	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9999991696965672	WITHOUT_CLASSIFICATION	8.303034327563316E-7	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.999999679826077	WITHOUT_CLASSIFICATION	3.201739230576856E-7	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9999996336747851	WITHOUT_CLASSIFICATION	3.663252148329499E-7	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9999997809835168	WITHOUT_CLASSIFICATION	2.190164832358285E-7	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9999996257518319	WITHOUT_CLASSIFICATION	3.742481681590349E-7	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9999995327896086	WITHOUT_CLASSIFICATION	4.672103913380947E-7	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999998261771104	WITHOUT_CLASSIFICATION	1.738228896983327E-7	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9999996364999124	WITHOUT_CLASSIFICATION	3.6350008766524003E-7	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999997974511898	WITHOUT_CLASSIFICATION	2.0254881013636793E-7	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999994713172556	WITHOUT_CLASSIFICATION	5.286827443062078E-7	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999988624258301	WITHOUT_CLASSIFICATION	1.1375741698678318E-6	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999995797661845	WITHOUT_CLASSIFICATION	4.2023381552910397E-7	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9999995235968918	WITHOUT_CLASSIFICATION	4.764031082677276E-7	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9999996601534917	WITHOUT_CLASSIFICATION	3.398465081921899E-7	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9999995510779066	WITHOUT_CLASSIFICATION	4.4892209348497093E-7	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9999995698809675	WITHOUT_CLASSIFICATION	4.301190325369545E-7	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9999991794559578	WITHOUT_CLASSIFICATION	8.20544042135126E-7	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9999987033739292	WITHOUT_CLASSIFICATION	1.2966260708224573E-6	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9999988526737779	WITHOUT_CLASSIFICATION	1.1473262221956005E-6	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9999995581889942	WITHOUT_CLASSIFICATION	4.4181100584864057E-7	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9999997773749909	WITHOUT_CLASSIFICATION	2.2262500909872707E-7	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.999999414460995	WITHOUT_CLASSIFICATION	5.855390050192121E-7	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9999994099995243	WITHOUT_CLASSIFICATION	5.900004756653463E-7	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999994109889457	WITHOUT_CLASSIFICATION	5.890110541455335E-7	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999997477398284	WITHOUT_CLASSIFICATION	2.52260171632896E-7	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999993398145729	WITHOUT_CLASSIFICATION	6.601854270177648E-7	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9999997918595569	WITHOUT_CLASSIFICATION	2.0814044313226107E-7	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9999994383221672	WITHOUT_CLASSIFICATION	5.616778328364914E-7	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9999982272844158	WITHOUT_CLASSIFICATION	1.7727155841970414E-6	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9999992821280588	WITHOUT_CLASSIFICATION	7.178719411847248E-7	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9999987204252175	WITHOUT_CLASSIFICATION	1.2795747824242157E-6	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9999994331510187	WITHOUT_CLASSIFICATION	5.668489813726745E-7	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9999994395412243	WITHOUT_CLASSIFICATION	5.604587756626177E-7	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.999999425650912	WITHOUT_CLASSIFICATION	5.743490879212697E-7	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.999999424900736	WITHOUT_CLASSIFICATION	5.750992639400456E-7	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.999999279591001	WITHOUT_CLASSIFICATION	7.204089990039785E-7	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999992890254423	WITHOUT_CLASSIFICATION	7.10974557769493E-7	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.99999970717064	WITHOUT_CLASSIFICATION	2.928293599421784E-7	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9999997428939461	WITHOUT_CLASSIFICATION	2.571060539641676E-7	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9999992888328436	WITHOUT_CLASSIFICATION	7.111671562999925E-7	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9999998542416132	WITHOUT_CLASSIFICATION	1.4575838681473E-7	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9999996921200541	WITHOUT_CLASSIFICATION	3.0787994593282514E-7	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9999995917132263	WITHOUT_CLASSIFICATION	4.0828677374494637E-7	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.999999816252121	WITHOUT_CLASSIFICATION	1.8374787907189194E-7	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9999994999742262	WITHOUT_CLASSIFICATION	5.000257737161524E-7	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9999997469251651	WITHOUT_CLASSIFICATION	2.53074834836993E-7	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999994432513799	WITHOUT_CLASSIFICATION	5.56748620032269E-7	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9999993099414153	WITHOUT_CLASSIFICATION	6.900585848049367E-7	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9999995199722626	WITHOUT_CLASSIFICATION	4.800277373943607E-7	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.999999710376407	WITHOUT_CLASSIFICATION	2.8962359296334346E-7	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9999994384995893	WITHOUT_CLASSIFICATION	5.615004108476112E-7	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9999995055359507	WITHOUT_CLASSIFICATION	4.944640493207148E-7	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999998199816744	WITHOUT_CLASSIFICATION	1.8001832553230711E-7	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9999994423605447	WITHOUT_CLASSIFICATION	5.576394551907781E-7	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999996820544743	WITHOUT_CLASSIFICATION	3.1794552569825376E-7	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9999993375230718	WITHOUT_CLASSIFICATION	6.624769281758826E-7	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9999992623063999	WITHOUT_CLASSIFICATION	7.376936001047105E-7	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9999993822275048	WITHOUT_CLASSIFICATION	6.177724951194296E-7	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.999999377914424	WITHOUT_CLASSIFICATION	6.220855759733051E-7	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.999999601119378	WITHOUT_CLASSIFICATION	3.9888062198296587E-7	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9999994695534676	WITHOUT_CLASSIFICATION	5.304465323065986E-7	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9999996049356737	WITHOUT_CLASSIFICATION	3.950643262650046E-7	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9999996360081921	WITHOUT_CLASSIFICATION	3.639918079176952E-7	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9999998391826644	WITHOUT_CLASSIFICATION	1.608173356089371E-7	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9999996276869083	WITHOUT_CLASSIFICATION	3.7231309167473625E-7	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9999996047736958	WITHOUT_CLASSIFICATION	3.9522630421410797E-7	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9999994073599883	WITHOUT_CLASSIFICATION	5.926400118130156E-7	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9999993471469059	WITHOUT_CLASSIFICATION	6.528530940824621E-7	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9999995265764526	WITHOUT_CLASSIFICATION	4.7342354739321436E-7	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9999998159128163	WITHOUT_CLASSIFICATION	1.8408718369623263E-7	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9999997320147757	WITHOUT_CLASSIFICATION	2.679852242687258E-7	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9999996594725166	WITHOUT_CLASSIFICATION	3.405274833899226E-7	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9999996633980732	WITHOUT_CLASSIFICATION	3.3660192680253453E-7	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9999997593477796	WITHOUT_CLASSIFICATION	2.4065222035234605E-7	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9999993596492734	WITHOUT_CLASSIFICATION	6.403507265022853E-7	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.999999561880063	WITHOUT_CLASSIFICATION	4.3811993700950603E-7	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9999997626275712	WITHOUT_CLASSIFICATION	2.373724287610648E-7	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9999996929318465	WITHOUT_CLASSIFICATION	3.0706815348172403E-7	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9999997436308152	WITHOUT_CLASSIFICATION	2.563691848495503E-7	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999982469584819	WITHOUT_CLASSIFICATION	1.7530415180041386E-6	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.9999991726739123	WITHOUT_CLASSIFICATION	8.273260877393557E-7	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9999991760992062	WITHOUT_CLASSIFICATION	8.23900793863006E-7	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9999989567356782	WITHOUT_CLASSIFICATION	1.0432643217872346E-6	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999996804042871	WITHOUT_CLASSIFICATION	3.19595712906495E-7	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999991656934889	WITHOUT_CLASSIFICATION	8.343065111550887E-7	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9999993451127862	WITHOUT_CLASSIFICATION	6.548872138490303E-7	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9999993374767012	WITHOUT_CLASSIFICATION	6.625232987499556E-7	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.999999581442938	WITHOUT_CLASSIFICATION	4.185570619530565E-7	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9999986587051292	WITHOUT_CLASSIFICATION	1.341294870843368E-6	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9999992721724039	WITHOUT_CLASSIFICATION	7.278275961633985E-7	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999990270753596	WITHOUT_CLASSIFICATION	9.729246403876404E-7	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9999990656617946	WITHOUT_CLASSIFICATION	9.34338205392129E-7	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9999994115105028	WITHOUT_CLASSIFICATION	5.884894971440866E-7	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9999991290324972	WITHOUT_CLASSIFICATION	8.709675028259056E-7	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9999987023291013	WITHOUT_CLASSIFICATION	1.297670898669933E-6	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.999998400270391	WITHOUT_CLASSIFICATION	1.5997296089898801E-6	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9999991530832143	WITHOUT_CLASSIFICATION	8.469167856919303E-7	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999997448477664	WITHOUT_CLASSIFICATION	2.551522335404048E-7	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999998087005532	WITHOUT_CLASSIFICATION	1.9129944682339652E-7	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999998055654584	WITHOUT_CLASSIFICATION	1.9443454153385158E-7	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9999993695151419	WITHOUT_CLASSIFICATION	6.304848581064659E-7	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9999996063983537	WITHOUT_CLASSIFICATION	3.9360164639573286E-7	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9999994919819349	WITHOUT_CLASSIFICATION	5.080180650998982E-7	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.9999994637371493	WITHOUT_CLASSIFICATION	5.362628507460665E-7	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999994709521128	WITHOUT_CLASSIFICATION	5.290478871642832E-7	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999990851309865	WITHOUT_CLASSIFICATION	9.148690135915624E-7	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9999994298288802	WITHOUT_CLASSIFICATION	5.701711197314323E-7	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9999992881999655	WITHOUT_CLASSIFICATION	7.118000345211423E-7	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9999996285424884	WITHOUT_CLASSIFICATION	3.7145751171648E-7	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.99999931300324	WITHOUT_CLASSIFICATION	6.869967599911164E-7	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9999996904101478	WITHOUT_CLASSIFICATION	3.095898522294503E-7	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9999992950534089	WITHOUT_CLASSIFICATION	7.049465910756005E-7	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9999993042853554	WITHOUT_CLASSIFICATION	6.957146446428948E-7	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9999997764819835	WITHOUT_CLASSIFICATION	2.2351801644101372E-7	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9999994047074053	WITHOUT_CLASSIFICATION	5.952925947204932E-7	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9999989419872461	WITHOUT_CLASSIFICATION	1.0580127538999027E-6	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9999991422101385	WITHOUT_CLASSIFICATION	8.577898614268477E-7	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999997481271271	WITHOUT_CLASSIFICATION	2.518728728893065E-7	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9999991609375057	WITHOUT_CLASSIFICATION	8.39062494272266E-7	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9999991617051768	WITHOUT_CLASSIFICATION	8.382948232453911E-7	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999988781117137	WITHOUT_CLASSIFICATION	1.1218882862802373E-6	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9999997030966327	WITHOUT_CLASSIFICATION	2.9690336731713036E-7	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9999990190326177	WITHOUT_CLASSIFICATION	9.80967382351299E-7	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9999992670913452	WITHOUT_CLASSIFICATION	7.329086546980077E-7	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9999977881476315	WITHOUT_CLASSIFICATION	2.211852368357033E-6	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.999998973362455	WITHOUT_CLASSIFICATION	1.026637545000933E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999996022510378	WITHOUT_CLASSIFICATION	3.977489621689831E-7	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9999990243021082	WITHOUT_CLASSIFICATION	9.7569789181506E-7	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9999983079852722	WITHOUT_CLASSIFICATION	1.69201472783766E-6	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9999990952704627	WITHOUT_CLASSIFICATION	9.047295373564561E-7	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9999994697736829	WITHOUT_CLASSIFICATION	5.302263169632182E-7	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9999990289841543	WITHOUT_CLASSIFICATION	9.710158457308826E-7	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9999992927947392	WITHOUT_CLASSIFICATION	7.07205260673086E-7	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999990487279848	WITHOUT_CLASSIFICATION	9.51272015079948E-7	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999995473762713	WITHOUT_CLASSIFICATION	4.5262372876243586E-7	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9999990134089427	WITHOUT_CLASSIFICATION	9.86591057249264E-7	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999996497227074	WITHOUT_CLASSIFICATION	3.5027729252426623E-7	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9999990369253658	WITHOUT_CLASSIFICATION	9.63074634079247E-7	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9999993549055889	WITHOUT_CLASSIFICATION	6.450944111021147E-7	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9999988042359435	WITHOUT_CLASSIFICATION	1.1957640565038206E-6	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9999985650554243	WITHOUT_CLASSIFICATION	1.4349445756611296E-6	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999987530473895	WITHOUT_CLASSIFICATION	1.246952610540876E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999997690989739	WITHOUT_CLASSIFICATION	2.3090102616699977E-7	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.999999722914081	WITHOUT_CLASSIFICATION	2.7708591907775484E-7	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999991956706042	WITHOUT_CLASSIFICATION	8.043293958118916E-7	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.999999002481479	WITHOUT_CLASSIFICATION	9.975185210614738E-7	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9999992289317738	WITHOUT_CLASSIFICATION	7.710682261660747E-7	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.999999549331624	WITHOUT_CLASSIFICATION	4.506683759390295E-7	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9999992336092943	WITHOUT_CLASSIFICATION	7.663907057657609E-7	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9999989689872018	WITHOUT_CLASSIFICATION	1.0310127982703537E-6	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.999998896378731	WITHOUT_CLASSIFICATION	1.1036212689843844E-6	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9999987476433545	WITHOUT_CLASSIFICATION	1.252356645475043E-6	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9999987152266449	WITHOUT_CLASSIFICATION	1.2847733551674529E-6	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9999992906064611	WITHOUT_CLASSIFICATION	7.093935388566139E-7	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9999991841696396	WITHOUT_CLASSIFICATION	8.158303604294125E-7	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9999989940022608	WITHOUT_CLASSIFICATION	1.0059977391626747E-6	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999989496478476	WITHOUT_CLASSIFICATION	1.0503521523787917E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999988292200406	WITHOUT_CLASSIFICATION	1.1707799594544282E-6	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9999994818610808	WITHOUT_CLASSIFICATION	5.181389192240715E-7	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.999999162330275	WITHOUT_CLASSIFICATION	8.376697250281805E-7	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9999993408415382	WITHOUT_CLASSIFICATION	6.591584618352143E-7	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.999999136276459	WITHOUT_CLASSIFICATION	8.637235409406797E-7	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999991388748587	WITHOUT_CLASSIFICATION	8.611251414093753E-7	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999996059986306	WITHOUT_CLASSIFICATION	3.9400136931777034E-7	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9999987326756979	WITHOUT_CLASSIFICATION	1.267324302008945E-6	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9999979033388134	WITHOUT_CLASSIFICATION	2.096661186557709E-6	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9999988173814872	WITHOUT_CLASSIFICATION	1.1826185127936287E-6	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9999987592102684	WITHOUT_CLASSIFICATION	1.240789731629111E-6	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9999989392754909	WITHOUT_CLASSIFICATION	1.0607245091273365E-6	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9999987505184564	WITHOUT_CLASSIFICATION	1.2494815436275296E-6	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9999977440148207	WITHOUT_CLASSIFICATION	2.2559851792793504E-6	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9999996142223353	WITHOUT_CLASSIFICATION	3.8577766462377724E-7	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9999989531475446	WITHOUT_CLASSIFICATION	1.04685245540543E-6	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.999998722233227	WITHOUT_CLASSIFICATION	1.2777667729590023E-6	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9999987897920717	WITHOUT_CLASSIFICATION	1.2102079282645557E-6	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999996726077025	WITHOUT_CLASSIFICATION	3.273922974748297E-7	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999994351111513	WITHOUT_CLASSIFICATION	5.648888486927944E-7	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999994856902521	WITHOUT_CLASSIFICATION	5.143097479263598E-7	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9999992439026181	WITHOUT_CLASSIFICATION	7.560973819410111E-7	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999996746019703	WITHOUT_CLASSIFICATION	3.2539802973168997E-7	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9999993045051951	WITHOUT_CLASSIFICATION	6.954948048774156E-7	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999991174589375	WITHOUT_CLASSIFICATION	8.82541062406658E-7	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9999992445738817	WITHOUT_CLASSIFICATION	7.554261184275145E-7	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9999990363674992	WITHOUT_CLASSIFICATION	9.636325007592557E-7	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999996415770221	WITHOUT_CLASSIFICATION	3.5842297788876774E-7	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.999999250367491	WITHOUT_CLASSIFICATION	7.496325088969174E-7	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9999989756996652	WITHOUT_CLASSIFICATION	1.024300334789382E-6	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.999998770497847	WITHOUT_CLASSIFICATION	1.2295021530584613E-6	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.9999980347803702	WITHOUT_CLASSIFICATION	1.9652196299046263E-6	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999978665626439	WITHOUT_CLASSIFICATION	2.133437356076646E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999991979224344	WITHOUT_CLASSIFICATION	8.020775656861548E-7	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999995123110361	WITHOUT_CLASSIFICATION	4.876889638414076E-7	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9999258277661925	WITHOUT_CLASSIFICATION	7.417223380746027E-5	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999982623706797	WITHOUT_CLASSIFICATION	1.737629320336551E-6	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999984719238522	WITHOUT_CLASSIFICATION	1.5280761478254669E-6	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999958166516537	WITHOUT_CLASSIFICATION	4.183348346295295E-6	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999540989951609	WITHOUT_CLASSIFICATION	4.590100483914993E-5	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9996233068470655	WITHOUT_CLASSIFICATION	3.766931529345727E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9997799320788918	WITHOUT_CLASSIFICATION	2.2006792110825128E-4	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999893983230868	WITHOUT_CLASSIFICATION	1.0601676913164445E-5	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9999107934315482	WITHOUT_CLASSIFICATION	8.920656845176904E-5	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9997939903050408	WITHOUT_CLASSIFICATION	2.0600969495920542E-4	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.999999721683694	WITHOUT_CLASSIFICATION	2.783163060048499E-7	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999997795286212	WITHOUT_CLASSIFICATION	2.2047137882015954E-7	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9999438505990812	WITHOUT_CLASSIFICATION	5.6149400918818544E-5	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999982582540272	WITHOUT_CLASSIFICATION	1.7417459728296178E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9975552836800945	WITHOUT_CLASSIFICATION	0.0024447163199055335	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999313911941399	WITHOUT_CLASSIFICATION	6.860880586005561E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9996947602252864	WITHOUT_CLASSIFICATION	3.0523977471362627E-4	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999989293893	WITHOUT_CLASSIFICATION	1.0706107201361796E-9	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999998565102264	WITHOUT_CLASSIFICATION	1.4348977374173645E-7	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999992949740935	WITHOUT_CLASSIFICATION	7.050259065003071E-7	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999998205442526	WITHOUT_CLASSIFICATION	1.7945574744424255E-7	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999999995280857	WITHOUT_CLASSIFICATION	4.719142382980626E-10	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999999992737258	WITHOUT_CLASSIFICATION	7.262742058674225E-9	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999999992737258	WITHOUT_CLASSIFICATION	7.262742058674225E-9	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999999794041428	WITHOUT_CLASSIFICATION	2.0595857189337164E-8	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999720700233691	WITHOUT_CLASSIFICATION	2.7929976630835332E-5	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999999844391761	WITHOUT_CLASSIFICATION	1.5560823831207324E-8	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999990307223129	WITHOUT_CLASSIFICATION	9.692776871343462E-7	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999993006871422	WITHOUT_CLASSIFICATION	6.993128578221011E-7	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.999999999245714	WITHOUT_CLASSIFICATION	7.542859487223683E-10	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999990099293617	WITHOUT_CLASSIFICATION	9.900706382573886E-7	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999999934449003	WITHOUT_CLASSIFICATION	6.5550997067242605E-9	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999185796298093	WITHOUT_CLASSIFICATION	8.142037019069821E-5	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999798640064846	WITHOUT_CLASSIFICATION	2.0135993515338185E-5	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9999999470335809	WITHOUT_CLASSIFICATION	5.29664191451446E-8	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.999999623943229	WITHOUT_CLASSIFICATION	3.760567708764799E-7	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999958533625551	WITHOUT_CLASSIFICATION	4.146637444835649E-6	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999992592782538	WITHOUT_CLASSIFICATION	7.407217462834089E-7	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.999999642810379	WITHOUT_CLASSIFICATION	3.5718962098058943E-7	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999969881462596	WITHOUT_CLASSIFICATION	3.011853740495825E-6	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999999453142246	WITHOUT_CLASSIFICATION	5.4685775428536085E-8	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999987271918421	WITHOUT_CLASSIFICATION	1.2728081578486122E-6	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.999999764660734	WITHOUT_CLASSIFICATION	2.3533926601504013E-7	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.999317375750862	WITHOUT_CLASSIFICATION	6.826242491379315E-4	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999854594115	WITHOUT_CLASSIFICATION	1.4540588628114212E-8	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9999974582078047	WITHOUT_CLASSIFICATION	2.5417921952205446E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9872463719109573	WITHOUT_CLASSIFICATION	0.012753628089042707	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999965170365177	WITHOUT_CLASSIFICATION	3.4829634823534552E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9872463719109573	WITHOUT_CLASSIFICATION	0.012753628089042707	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999966099503279	WITHOUT_CLASSIFICATION	3.3900496721499006E-6	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999985761301629	WITHOUT_CLASSIFICATION	1.4238698371306635E-6	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9279157158444763	WITHOUT_CLASSIFICATION	0.07208428415552363	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.999991054611815	WITHOUT_CLASSIFICATION	8.945388184886008E-6	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999999840557044	WITHOUT_CLASSIFICATION	1.5944295520609334E-8	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999993058600649	WITHOUT_CLASSIFICATION	6.941399351422695E-7	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999993058600649	WITHOUT_CLASSIFICATION	6.941399351422695E-7	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999993058600649	WITHOUT_CLASSIFICATION	6.941399351422695E-7	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999994982603229	WITHOUT_CLASSIFICATION	5.017396770849737E-7	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999795775787483	WITHOUT_CLASSIFICATION	2.0422421251736464E-5	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999997500552265	WITHOUT_CLASSIFICATION	2.499447735476215E-7	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999994020666815	WITHOUT_CLASSIFICATION	5.979333184697464E-7	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999994020666815	WITHOUT_CLASSIFICATION	5.979333184697464E-7	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999994020666815	WITHOUT_CLASSIFICATION	5.979333184697464E-7	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999994020666815	WITHOUT_CLASSIFICATION	5.979333184697464E-7	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999994020666815	WITHOUT_CLASSIFICATION	5.979333184697464E-7	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999994020666815	WITHOUT_CLASSIFICATION	5.979333184697464E-7	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999990531714336	WITHOUT_CLASSIFICATION	9.4682856645714E-7	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999990531714336	WITHOUT_CLASSIFICATION	9.4682856645714E-7	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999990531714336	WITHOUT_CLASSIFICATION	9.4682856645714E-7	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999990531714336	WITHOUT_CLASSIFICATION	9.4682856645714E-7	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999990531714336	WITHOUT_CLASSIFICATION	9.4682856645714E-7	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999791986959734	WITHOUT_CLASSIFICATION	2.0801304026552295E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999791986959734	WITHOUT_CLASSIFICATION	2.0801304026552295E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999791986959734	WITHOUT_CLASSIFICATION	2.0801304026552295E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999791986959734	WITHOUT_CLASSIFICATION	2.0801304026552295E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999791986959734	WITHOUT_CLASSIFICATION	2.0801304026552295E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999570929418495	WITHOUT_CLASSIFICATION	4.2907058150510016E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999570929418495	WITHOUT_CLASSIFICATION	4.2907058150510016E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999570929418495	WITHOUT_CLASSIFICATION	4.2907058150510016E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999570929418495	WITHOUT_CLASSIFICATION	4.2907058150510016E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999570929418495	WITHOUT_CLASSIFICATION	4.2907058150510016E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999570929418495	WITHOUT_CLASSIFICATION	4.2907058150510016E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999687758456154	WITHOUT_CLASSIFICATION	3.122415438463919E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999687758456154	WITHOUT_CLASSIFICATION	3.122415438463919E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999687758456154	WITHOUT_CLASSIFICATION	3.122415438463919E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999687758456154	WITHOUT_CLASSIFICATION	3.122415438463919E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999687758456154	WITHOUT_CLASSIFICATION	3.122415438463919E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999235664851339	WITHOUT_CLASSIFICATION	7.643351486607656E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999235664851339	WITHOUT_CLASSIFICATION	7.643351486607656E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999235664851339	WITHOUT_CLASSIFICATION	7.643351486607656E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999235664851339	WITHOUT_CLASSIFICATION	7.643351486607656E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999235664851339	WITHOUT_CLASSIFICATION	7.643351486607656E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999628153043109	WITHOUT_CLASSIFICATION	3.718469568908892E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999628153043109	WITHOUT_CLASSIFICATION	3.718469568908892E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999628153043109	WITHOUT_CLASSIFICATION	3.718469568908892E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999628153043109	WITHOUT_CLASSIFICATION	3.718469568908892E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999628153043109	WITHOUT_CLASSIFICATION	3.718469568908892E-5	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999911830844	WITHOUT_CLASSIFICATION	8.816915687172345E-9	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999976710572	WITHOUT_CLASSIFICATION	2.328942841733871E-9	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999831662473649	WITHOUT_CLASSIFICATION	1.6833752635034617E-5	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999998083333494	WITHOUT_CLASSIFICATION	1.9166665057772273E-7	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999991838626361	WITHOUT_CLASSIFICATION	8.161373639880115E-7	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999992419234797	WITHOUT_CLASSIFICATION	7.580765203186766E-7	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999991682709257	WITHOUT_CLASSIFICATION	8.317290742155213E-7	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999997880256075	WITHOUT_CLASSIFICATION	2.1197439254228837E-7	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999994659191406	WITHOUT_CLASSIFICATION	5.340808593718695E-7	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.999999877637899	WITHOUT_CLASSIFICATION	1.2236210105151225E-7	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999997415299747	WITHOUT_CLASSIFICATION	2.5847002535031546E-7	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999996572178765	WITHOUT_CLASSIFICATION	3.427821235339363E-7	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9999997038686802	WITHOUT_CLASSIFICATION	2.9613131981557956E-7	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9999994522180207	WITHOUT_CLASSIFICATION	5.477819793222404E-7	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.999999438340774	WITHOUT_CLASSIFICATION	5.616592260270297E-7	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9999997080350711	WITHOUT_CLASSIFICATION	2.91964928877704E-7	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9999997505026934	WITHOUT_CLASSIFICATION	2.494973065668846E-7	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.999998837862724	WITHOUT_CLASSIFICATION	1.1621372758941395E-6	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.999999523599752	WITHOUT_CLASSIFICATION	4.76400247973776E-7	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9999995170359837	WITHOUT_CLASSIFICATION	4.829640163469073E-7	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9999998426394315	WITHOUT_CLASSIFICATION	1.5736056856502653E-7	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9999996666970903	WITHOUT_CLASSIFICATION	3.3330290979795175E-7	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9999994957556784	WITHOUT_CLASSIFICATION	5.0424432168014E-7	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9999996701841141	WITHOUT_CLASSIFICATION	3.298158859442435E-7	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9999994216115979	WITHOUT_CLASSIFICATION	5.783884021575981E-7	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9999996209964045	WITHOUT_CLASSIFICATION	3.7900359550638696E-7	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9999994440953652	WITHOUT_CLASSIFICATION	5.559046347139602E-7	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9999998212626066	WITHOUT_CLASSIFICATION	1.7873739333196062E-7	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9999996158648362	WITHOUT_CLASSIFICATION	3.841351637799621E-7	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9999996619635609	WITHOUT_CLASSIFICATION	3.380364391073823E-7	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.999999847099717	WITHOUT_CLASSIFICATION	1.5290028293110358E-7	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9999995839161385	WITHOUT_CLASSIFICATION	4.16083861562833E-7	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.999999594379887	WITHOUT_CLASSIFICATION	4.0562011308326703E-7	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9999993918933544	WITHOUT_CLASSIFICATION	6.081066455668283E-7	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.9999996140522787	WITHOUT_CLASSIFICATION	3.859477212695469E-7	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9999996049563077	WITHOUT_CLASSIFICATION	3.9504369221156693E-7	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9999994884349516	WITHOUT_CLASSIFICATION	5.115650484642671E-7	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9999994838339601	WITHOUT_CLASSIFICATION	5.161660399222328E-7	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.999999539947043	WITHOUT_CLASSIFICATION	4.6005295698212567E-7	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9999984956294363	WITHOUT_CLASSIFICATION	1.5043705636694434E-6	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9999993968847221	WITHOUT_CLASSIFICATION	6.031152779722935E-7	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9999994898856777	WITHOUT_CLASSIFICATION	5.101143223782129E-7	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9999995855993475	WITHOUT_CLASSIFICATION	4.144006525197835E-7	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9999997936769993	WITHOUT_CLASSIFICATION	2.0632300069389708E-7	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9999997274706491	WITHOUT_CLASSIFICATION	2.725293508596509E-7	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9999997388843876	WITHOUT_CLASSIFICATION	2.6111561228495037E-7	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9999998043168056	WITHOUT_CLASSIFICATION	1.9568319441096335E-7	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.999999317771249	WITHOUT_CLASSIFICATION	6.822287511587428E-7	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.999999714530506	WITHOUT_CLASSIFICATION	2.854694940417788E-7	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999998223479777	WITHOUT_CLASSIFICATION	1.7765202242757205E-7	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999996748080687	WITHOUT_CLASSIFICATION	3.2519193135567753E-7	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999995946287159	WITHOUT_CLASSIFICATION	4.053712841101591E-7	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999995586778836	WITHOUT_CLASSIFICATION	4.4132211633129093E-7	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.999999769735525	WITHOUT_CLASSIFICATION	2.3026447504687926E-7	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999998275807778	WITHOUT_CLASSIFICATION	1.7241922218204968E-7	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999985346533373	WITHOUT_CLASSIFICATION	1.465346662707014E-6	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999994098100189	WITHOUT_CLASSIFICATION	5.901899810649857E-7	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999998261771104	WITHOUT_CLASSIFICATION	1.738228896983327E-7	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999997974511898	WITHOUT_CLASSIFICATION	2.0254881013636793E-7	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999995574443605	WITHOUT_CLASSIFICATION	4.425556395385661E-7	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999994713172556	WITHOUT_CLASSIFICATION	5.286827443062078E-7	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999988624258301	WITHOUT_CLASSIFICATION	1.1375741698678318E-6	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9999997195210453	WITHOUT_CLASSIFICATION	2.804789547207559E-7	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9999995899866017	WITHOUT_CLASSIFICATION	4.100133983569686E-7	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9999998410543157	WITHOUT_CLASSIFICATION	1.589456842084884E-7	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.999999474882971	WITHOUT_CLASSIFICATION	5.25117029044458E-7	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9999989287509896	WITHOUT_CLASSIFICATION	1.0712490103784492E-6	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9999992329649553	WITHOUT_CLASSIFICATION	7.670350446277863E-7	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.999999699088928	WITHOUT_CLASSIFICATION	3.0091107197615087E-7	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9999996640398486	WITHOUT_CLASSIFICATION	3.359601514043721E-7	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9999994597905779	WITHOUT_CLASSIFICATION	5.402094221340701E-7	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9999994739557792	WITHOUT_CLASSIFICATION	5.260442208752184E-7	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9999998415632949	WITHOUT_CLASSIFICATION	1.5843670510386778E-7	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9999995612750591	WITHOUT_CLASSIFICATION	4.3872494098778735E-7	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9999995150726465	WITHOUT_CLASSIFICATION	4.849273534840346E-7	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9999997055928501	WITHOUT_CLASSIFICATION	2.944071498936762E-7	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9999996928876672	WITHOUT_CLASSIFICATION	3.071123328309875E-7	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9999998193643136	WITHOUT_CLASSIFICATION	1.8063568640436279E-7	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.9999995249022648	WITHOUT_CLASSIFICATION	4.750977350575166E-7	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.999999522085095	WITHOUT_CLASSIFICATION	4.779149049557544E-7	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9999993452144372	WITHOUT_CLASSIFICATION	6.547855627794041E-7	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9999996324933327	WITHOUT_CLASSIFICATION	3.675066673568741E-7	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.99999858103334	WITHOUT_CLASSIFICATION	1.418966659982E-6	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9999994151854384	WITHOUT_CLASSIFICATION	5.848145614983531E-7	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9999994708662991	WITHOUT_CLASSIFICATION	5.291337009386481E-7	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9999997353211183	WITHOUT_CLASSIFICATION	2.6467888168192646E-7	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9999993061127491	WITHOUT_CLASSIFICATION	6.938872509063446E-7	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9999994104698259	WITHOUT_CLASSIFICATION	5.895301741166898E-7	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9999997413976441	WITHOUT_CLASSIFICATION	2.58602355870651E-7	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9999997261463976	WITHOUT_CLASSIFICATION	2.738536022799475E-7	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9999996807537376	WITHOUT_CLASSIFICATION	3.1924626253832035E-7	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.999999621458207	WITHOUT_CLASSIFICATION	3.7854179312367564E-7	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9999997350820174	WITHOUT_CLASSIFICATION	2.6491798254305183E-7	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9999995419470377	WITHOUT_CLASSIFICATION	4.58052962378542E-7	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.999999169196111	WITHOUT_CLASSIFICATION	8.30803888895612E-7	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.999999589782728	WITHOUT_CLASSIFICATION	4.1021727201897897E-7	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.999998624183502	WITHOUT_CLASSIFICATION	1.3758164978802742E-6	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9999992412223588	WITHOUT_CLASSIFICATION	7.5877764113662E-7	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999997477398284	WITHOUT_CLASSIFICATION	2.52260171632896E-7	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999994608400915	WITHOUT_CLASSIFICATION	5.391599085254108E-7	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999993398145729	WITHOUT_CLASSIFICATION	6.601854270177648E-7	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.999999424900736	WITHOUT_CLASSIFICATION	5.750992639400456E-7	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999992890254423	WITHOUT_CLASSIFICATION	7.10974557769493E-7	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.999999816252121	WITHOUT_CLASSIFICATION	1.8374787907189194E-7	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999994432513799	WITHOUT_CLASSIFICATION	5.56748620032269E-7	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.999999710376407	WITHOUT_CLASSIFICATION	2.8962359296334346E-7	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999996820544743	WITHOUT_CLASSIFICATION	3.1794552569825376E-7	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.999999601119378	WITHOUT_CLASSIFICATION	3.9888062198296587E-7	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999994822114491	WITHOUT_CLASSIFICATION	5.177885509047371E-7	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.999999828680191	WITHOUT_CLASSIFICATION	1.713198090026121E-7	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9999995200867857	WITHOUT_CLASSIFICATION	4.79913214208652E-7	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9999995267783628	WITHOUT_CLASSIFICATION	4.7322163719976775E-7	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.999999783163557	WITHOUT_CLASSIFICATION	2.1683644307145008E-7	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9999986656574009	WITHOUT_CLASSIFICATION	1.3343425991404513E-6	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9999995471351927	WITHOUT_CLASSIFICATION	4.5286480734056655E-7	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9999996577929128	WITHOUT_CLASSIFICATION	3.4220708720513715E-7	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9999994098891298	WITHOUT_CLASSIFICATION	5.901108702659539E-7	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9999992697350578	WITHOUT_CLASSIFICATION	7.302649422848551E-7	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.9999992633873818	WITHOUT_CLASSIFICATION	7.366126183271925E-7	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9999995552330514	WITHOUT_CLASSIFICATION	4.4476694864015894E-7	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9999993529789158	WITHOUT_CLASSIFICATION	6.470210842108076E-7	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9999994309119612	WITHOUT_CLASSIFICATION	5.690880388005618E-7	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9999996864756528	WITHOUT_CLASSIFICATION	3.135243471041266E-7	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9999998609349793	WITHOUT_CLASSIFICATION	1.3906502074176793E-7	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9999996335103991	WITHOUT_CLASSIFICATION	3.6648960096676304E-7	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9999996952562012	WITHOUT_CLASSIFICATION	3.047437987119427E-7	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9999991143532655	WITHOUT_CLASSIFICATION	8.856467344607757E-7	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9999997727551558	WITHOUT_CLASSIFICATION	2.2724484416307048E-7	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9999995147355369	WITHOUT_CLASSIFICATION	4.852644631216944E-7	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9999986108584399	WITHOUT_CLASSIFICATION	1.389141560193489E-6	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9999995432171113	WITHOUT_CLASSIFICATION	4.567828888141847E-7	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9999988812826016	WITHOUT_CLASSIFICATION	1.118717398316404E-6	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9999995105448239	WITHOUT_CLASSIFICATION	4.894551759835135E-7	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9999994991447716	WITHOUT_CLASSIFICATION	5.008552283947613E-7	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9999993836484034	WITHOUT_CLASSIFICATION	6.163515967296183E-7	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.999999511330527	WITHOUT_CLASSIFICATION	4.886694729559746E-7	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9999994119310338	WITHOUT_CLASSIFICATION	5.880689662398347E-7	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9999996464556469	WITHOUT_CLASSIFICATION	3.535443531879137E-7	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9999997217237958	WITHOUT_CLASSIFICATION	2.782762041426649E-7	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9999996587901043	WITHOUT_CLASSIFICATION	3.412098957190278E-7	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9999991524078228	WITHOUT_CLASSIFICATION	8.47592177281214E-7	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9999996021571301	WITHOUT_CLASSIFICATION	3.978428699398139E-7	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9999996456794855	WITHOUT_CLASSIFICATION	3.5432051452154034E-7	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9999996880992732	WITHOUT_CLASSIFICATION	3.1190072678152847E-7	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.999999511809947	WITHOUT_CLASSIFICATION	4.881900531175947E-7	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.999999418161631	WITHOUT_CLASSIFICATION	5.818383691364485E-7	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9999997328058715	WITHOUT_CLASSIFICATION	2.671941283996779E-7	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999997142759379	WITHOUT_CLASSIFICATION	2.8572406203083704E-7	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999982469584819	WITHOUT_CLASSIFICATION	1.7530415180041386E-6	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999996860923306	WITHOUT_CLASSIFICATION	3.139076693834237E-7	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999996804042871	WITHOUT_CLASSIFICATION	3.19595712906495E-7	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.999999581442938	WITHOUT_CLASSIFICATION	4.185570619530565E-7	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999990270753596	WITHOUT_CLASSIFICATION	9.729246403876404E-7	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999997448477664	WITHOUT_CLASSIFICATION	2.551522335404048E-7	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999998087005532	WITHOUT_CLASSIFICATION	1.9129944682339652E-7	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999994709521128	WITHOUT_CLASSIFICATION	5.290478871642832E-7	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999990851309865	WITHOUT_CLASSIFICATION	9.148690135915624E-7	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999987830564847	WITHOUT_CLASSIFICATION	1.2169435153634884E-6	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9999996063407124	WITHOUT_CLASSIFICATION	3.936592875466166E-7	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9999994093588114	WITHOUT_CLASSIFICATION	5.906411884867311E-7	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9999994805049974	WITHOUT_CLASSIFICATION	5.194950024773922E-7	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9999995837336858	WITHOUT_CLASSIFICATION	4.162663142315106E-7	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9999995573545079	WITHOUT_CLASSIFICATION	4.426454921795478E-7	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.999999075642743	WITHOUT_CLASSIFICATION	9.243572569696116E-7	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9999989741158547	WITHOUT_CLASSIFICATION	1.0258841453663472E-6	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9999984062617538	WITHOUT_CLASSIFICATION	1.593738246130497E-6	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9999994814320317	WITHOUT_CLASSIFICATION	5.185679683642241E-7	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9999994355757659	WITHOUT_CLASSIFICATION	5.644242341212774E-7	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9999990062039504	WITHOUT_CLASSIFICATION	9.937960495115608E-7	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9999990784709308	WITHOUT_CLASSIFICATION	9.215290690160589E-7	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9999990332693083	WITHOUT_CLASSIFICATION	9.667306917792333E-7	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9999991740534513	WITHOUT_CLASSIFICATION	8.259465485826673E-7	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9999996175829287	WITHOUT_CLASSIFICATION	3.824170713403135E-7	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9999994096397293	WITHOUT_CLASSIFICATION	5.903602706321874E-7	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9999992583105669	WITHOUT_CLASSIFICATION	7.416894331394149E-7	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9999993989555022	WITHOUT_CLASSIFICATION	6.010444978490947E-7	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9999995293184034	WITHOUT_CLASSIFICATION	4.706815966063919E-7	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9999989391435361	WITHOUT_CLASSIFICATION	1.0608564639258975E-6	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9999994353803917	WITHOUT_CLASSIFICATION	5.646196083076268E-7	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9999994799308844	WITHOUT_CLASSIFICATION	5.200691155692707E-7	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9999991294748389	WITHOUT_CLASSIFICATION	8.705251611192578E-7	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9999994909121301	WITHOUT_CLASSIFICATION	5.090878698797577E-7	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9999993555433584	WITHOUT_CLASSIFICATION	6.444566415261129E-7	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9999995034704626	WITHOUT_CLASSIFICATION	4.965295372929057E-7	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9999993366046236	WITHOUT_CLASSIFICATION	6.633953764870158E-7	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9999993587712438	WITHOUT_CLASSIFICATION	6.412287562024824E-7	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9999997981790805	WITHOUT_CLASSIFICATION	2.0182091954461875E-7	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9999995731706312	WITHOUT_CLASSIFICATION	4.268293688464137E-7	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9999994549573149	WITHOUT_CLASSIFICATION	5.450426850819872E-7	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9999994610476022	WITHOUT_CLASSIFICATION	5.389523977603799E-7	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.999999523042444	WITHOUT_CLASSIFICATION	4.769575558954207E-7	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9999991608629363	WITHOUT_CLASSIFICATION	8.391370637858726E-7	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9999996077852638	WITHOUT_CLASSIFICATION	3.922147362601932E-7	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9999994411819522	WITHOUT_CLASSIFICATION	5.588180479140319E-7	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9999991934166796	WITHOUT_CLASSIFICATION	8.065833203566398E-7	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9999995627340253	WITHOUT_CLASSIFICATION	4.3726597470914853E-7	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999988781117137	WITHOUT_CLASSIFICATION	1.1218882862802373E-6	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.999998973362455	WITHOUT_CLASSIFICATION	1.026637545000933E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999996022510378	WITHOUT_CLASSIFICATION	3.977489621689831E-7	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999985535270114	WITHOUT_CLASSIFICATION	1.446472988580478E-6	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999995473762713	WITHOUT_CLASSIFICATION	4.5262372876243586E-7	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999996497227074	WITHOUT_CLASSIFICATION	3.5027729252426623E-7	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999987530473895	WITHOUT_CLASSIFICATION	1.246952610540876E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999997690989739	WITHOUT_CLASSIFICATION	2.3090102616699977E-7	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999989496478476	WITHOUT_CLASSIFICATION	1.0503521523787917E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999988292200406	WITHOUT_CLASSIFICATION	1.1707799594544282E-6	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9999993045976863	WITHOUT_CLASSIFICATION	6.954023138215032E-7	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9999985617264464	WITHOUT_CLASSIFICATION	1.438273553614783E-6	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9999992066602523	WITHOUT_CLASSIFICATION	7.933397477685682E-7	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9999993423843507	WITHOUT_CLASSIFICATION	6.576156492467857E-7	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9999992942046343	WITHOUT_CLASSIFICATION	7.057953657313916E-7	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9999993039760916	WITHOUT_CLASSIFICATION	6.960239084515304E-7	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9999991514960515	WITHOUT_CLASSIFICATION	8.485039486395535E-7	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9999996498898529	WITHOUT_CLASSIFICATION	3.501101470387094E-7	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9999992584374429	WITHOUT_CLASSIFICATION	7.415625570842643E-7	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9999992661956868	WITHOUT_CLASSIFICATION	7.338043131418855E-7	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9999991933331965	WITHOUT_CLASSIFICATION	8.066668034052914E-7	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.99999893075509	WITHOUT_CLASSIFICATION	1.0692449098766037E-6	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.999998921512774	WITHOUT_CLASSIFICATION	1.078487226001002E-6	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9999991952216796	WITHOUT_CLASSIFICATION	8.047783203619288E-7	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9999991571263382	WITHOUT_CLASSIFICATION	8.428736618862264E-7	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9999987207234177	WITHOUT_CLASSIFICATION	1.279276582310001E-6	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9999989328428447	WITHOUT_CLASSIFICATION	1.0671571552480896E-6	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9999990009032169	WITHOUT_CLASSIFICATION	9.990967830446005E-7	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9999992341393381	WITHOUT_CLASSIFICATION	7.658606619693529E-7	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9999990975433899	WITHOUT_CLASSIFICATION	9.024566101586576E-7	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9999991939057962	WITHOUT_CLASSIFICATION	8.060942037447789E-7	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.9999993585622035	WITHOUT_CLASSIFICATION	6.41437796592168E-7	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9999996266050502	WITHOUT_CLASSIFICATION	3.733949498615622E-7	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9999990179436367	WITHOUT_CLASSIFICATION	9.820563633445316E-7	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9999990103099805	WITHOUT_CLASSIFICATION	9.89690019572166E-7	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9999995485793978	WITHOUT_CLASSIFICATION	4.5142060225615247E-7	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9999990351713712	WITHOUT_CLASSIFICATION	9.648286287685409E-7	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9999988573551958	WITHOUT_CLASSIFICATION	1.1426448041890501E-6	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9999988120531493	WITHOUT_CLASSIFICATION	1.1879468506783838E-6	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9999985435012769	WITHOUT_CLASSIFICATION	1.456498723111719E-6	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9999990045977248	WITHOUT_CLASSIFICATION	9.954022750637182E-7	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9999995946483848	WITHOUT_CLASSIFICATION	4.053516151844323E-7	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9999989857530335	WITHOUT_CLASSIFICATION	1.0142469665012073E-6	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9999997144568107	WITHOUT_CLASSIFICATION	2.8554318923474E-7	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9999990816476445	WITHOUT_CLASSIFICATION	9.183523553976777E-7	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9999996436226298	WITHOUT_CLASSIFICATION	3.563773701323733E-7	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9999991845040119	WITHOUT_CLASSIFICATION	8.154959880363619E-7	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9999993696095857	WITHOUT_CLASSIFICATION	6.303904142342806E-7	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9999982021266898	WITHOUT_CLASSIFICATION	1.7978733102244634E-6	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999989408876774	WITHOUT_CLASSIFICATION	1.0591123226458183E-6	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999991388748587	WITHOUT_CLASSIFICATION	8.611251414093753E-7	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999996059986306	WITHOUT_CLASSIFICATION	3.9400136931777034E-7	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999996726077025	WITHOUT_CLASSIFICATION	3.273922974748297E-7	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999991046179322	WITHOUT_CLASSIFICATION	8.953820679686483E-7	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999994856902521	WITHOUT_CLASSIFICATION	5.143097479263598E-7	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999996746019703	WITHOUT_CLASSIFICATION	3.2539802973168997E-7	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999991174589375	WITHOUT_CLASSIFICATION	8.82541062406658E-7	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999978665626439	WITHOUT_CLASSIFICATION	2.133437356076646E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999991979224344	WITHOUT_CLASSIFICATION	8.020775656861548E-7	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.999999417109073	WITHOUT_CLASSIFICATION	5.828909269746561E-7	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9999996336362517	WITHOUT_CLASSIFICATION	3.6636374828996595E-7	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9999995134597374	WITHOUT_CLASSIFICATION	4.865402626441066E-7	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9999993016944071	WITHOUT_CLASSIFICATION	6.9830559285212E-7	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9999989406710046	WITHOUT_CLASSIFICATION	1.0593289954105761E-6	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9999989297474623	WITHOUT_CLASSIFICATION	1.0702525377147387E-6	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.999999029902749	WITHOUT_CLASSIFICATION	9.700972508778823E-7	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9999982774380043	WITHOUT_CLASSIFICATION	1.7225619956819948E-6	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9999991771630434	WITHOUT_CLASSIFICATION	8.228369566490372E-7	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9999993869530087	WITHOUT_CLASSIFICATION	6.130469912940255E-7	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9999989430178399	WITHOUT_CLASSIFICATION	1.0569821601940143E-6	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9999988160956143	WITHOUT_CLASSIFICATION	1.1839043856818578E-6	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.9999998184678427	WITHOUT_CLASSIFICATION	1.8153215733229402E-7	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9999988538126346	WITHOUT_CLASSIFICATION	1.1461873653328365E-6	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9999990896550633	WITHOUT_CLASSIFICATION	9.103449367590422E-7	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.999999641613316	WITHOUT_CLASSIFICATION	3.583866840544139E-7	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9999986973305313	WITHOUT_CLASSIFICATION	1.3026694687475172E-6	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9999993543351003	WITHOUT_CLASSIFICATION	6.45664899541234E-7	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9999990993638519	WITHOUT_CLASSIFICATION	9.006361479941295E-7	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.999999127591649	WITHOUT_CLASSIFICATION	8.724083510355132E-7	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9999992651763124	WITHOUT_CLASSIFICATION	7.34823687497389E-7	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9999991174140617	WITHOUT_CLASSIFICATION	8.825859382694932E-7	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.999998352495709	WITHOUT_CLASSIFICATION	1.647504290961446E-6	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9999990065333513	WITHOUT_CLASSIFICATION	9.934666486937414E-7	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9999990446043938	WITHOUT_CLASSIFICATION	9.553956061994612E-7	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9999995826647617	WITHOUT_CLASSIFICATION	4.1733523821926955E-7	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.999999088150574	WITHOUT_CLASSIFICATION	9.11849425932066E-7	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9999989106928716	WITHOUT_CLASSIFICATION	1.0893071284094713E-6	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9999983328044879	WITHOUT_CLASSIFICATION	1.6671955121087994E-6	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.999999017150005	WITHOUT_CLASSIFICATION	9.82849994965707E-7	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9999992055685968	WITHOUT_CLASSIFICATION	7.944314031310466E-7	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9999989814127762	WITHOUT_CLASSIFICATION	1.0185872237912863E-6	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9999986544919596	WITHOUT_CLASSIFICATION	1.3455080404398464E-6	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9999987108483928	WITHOUT_CLASSIFICATION	1.289151607276165E-6	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9999982483545359	WITHOUT_CLASSIFICATION	1.75164546406693E-6	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9999988484480232	WITHOUT_CLASSIFICATION	1.151551976768842E-6	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9999986001595362	WITHOUT_CLASSIFICATION	1.3998404637076141E-6	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.9999969707910544	WITHOUT_CLASSIFICATION	3.029208945626534E-6	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9999983920118631	WITHOUT_CLASSIFICATION	1.6079881368571063E-6	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9996233068470655	WITHOUT_CLASSIFICATION	3.766931529345727E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9997799320788918	WITHOUT_CLASSIFICATION	2.2006792110825128E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999997795286212	WITHOUT_CLASSIFICATION	2.2047137882015954E-7	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999982582540272	WITHOUT_CLASSIFICATION	1.7417459728296178E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9975552836800945	WITHOUT_CLASSIFICATION	0.0024447163199055335	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999313911941399	WITHOUT_CLASSIFICATION	6.860880586005561E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9996947602252864	WITHOUT_CLASSIFICATION	3.0523977471362627E-4	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999979292524084	WITHOUT_CLASSIFICATION	2.0707475917046775E-6	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.9999984543439648	WITHOUT_CLASSIFICATION	1.545656035089278E-6	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9999977873118533	WITHOUT_CLASSIFICATION	2.2126881467676333E-6	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9999993608204854	WITHOUT_CLASSIFICATION	6.391795147137303E-7	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9999982655129749	WITHOUT_CLASSIFICATION	1.7344870251062926E-6	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9999978355228043	WITHOUT_CLASSIFICATION	2.164477195625455E-6	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9999980391753521	WITHOUT_CLASSIFICATION	1.960824647853507E-6	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.999999687927547	WITHOUT_CLASSIFICATION	3.1207245301481367E-7	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9999993893078892	WITHOUT_CLASSIFICATION	6.106921106756422E-7	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9999981194504701	WITHOUT_CLASSIFICATION	1.8805495298264742E-6	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.999997830934201	WITHOUT_CLASSIFICATION	2.1690657990136095E-6	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9999991349227664	WITHOUT_CLASSIFICATION	8.650772335861003E-7	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9999986872433513	WITHOUT_CLASSIFICATION	1.3127566486755473E-6	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.999999505827268	WITHOUT_CLASSIFICATION	4.941727319852309E-7	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9999984421638077	WITHOUT_CLASSIFICATION	1.5578361923551803E-6	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9999993568542858	WITHOUT_CLASSIFICATION	6.43145714182987E-7	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9999988911168963	WITHOUT_CLASSIFICATION	1.1088831036191026E-6	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9999983482740298	WITHOUT_CLASSIFICATION	1.6517259702028326E-6	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9999996005270326	WITHOUT_CLASSIFICATION	3.9947296727976067E-7	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9999993999833651	WITHOUT_CLASSIFICATION	6.000166349712101E-7	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9999989136750937	WITHOUT_CLASSIFICATION	1.0863249063128713E-6	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9999998889192634	WITHOUT_CLASSIFICATION	1.1108073663703127E-7	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.999999841743052	WITHOUT_CLASSIFICATION	1.5825694802036284E-7	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9999998727322784	WITHOUT_CLASSIFICATION	1.2726772153568263E-7	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999937480008622	WITHOUT_CLASSIFICATION	6.25199913794351E-6	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999919864900885	WITHOUT_CLASSIFICATION	8.013509911535799E-6	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999999200997431	WITHOUT_CLASSIFICATION	7.990025691572734E-8	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999944863352818	WITHOUT_CLASSIFICATION	5.513664718206112E-6	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999998670982568	WITHOUT_CLASSIFICATION	1.3290174307610957E-7	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.999992865152463	WITHOUT_CLASSIFICATION	7.134847537064505E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999998565102264	WITHOUT_CLASSIFICATION	1.4348977374173645E-7	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999992949740935	WITHOUT_CLASSIFICATION	7.050259065003071E-7	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999999992737258	WITHOUT_CLASSIFICATION	7.262742058674225E-9	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999999992737258	WITHOUT_CLASSIFICATION	7.262742058674225E-9	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9998702792312408	WITHOUT_CLASSIFICATION	1.2972076875925466E-4	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999999118362226	WITHOUT_CLASSIFICATION	8.816377738463466E-8	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999999998118455	WITHOUT_CLASSIFICATION	1.8815446505516352E-10	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999997223952692	WITHOUT_CLASSIFICATION	2.776047307644352E-7	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999999992402019	WITHOUT_CLASSIFICATION	7.597981687839076E-10	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999887094836983	WITHOUT_CLASSIFICATION	1.1290516301723802E-5	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999999934707436	WITHOUT_CLASSIFICATION	6.529256319250625E-9	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999997198958454	WITHOUT_CLASSIFICATION	2.8010415463407214E-7	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.999996419309458	WITHOUT_CLASSIFICATION	3.580690542026361E-6	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999999989708203	WITHOUT_CLASSIFICATION	1.029179737184747E-9	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.999999234148622	WITHOUT_CLASSIFICATION	7.658513779001779E-7	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999995237517331	WITHOUT_CLASSIFICATION	4.7624826688489257E-7	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999995197997505	WITHOUT_CLASSIFICATION	4.802002495703598E-7	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999998981302647	WITHOUT_CLASSIFICATION	1.0186973523483017E-7	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999946712755754	WITHOUT_CLASSIFICATION	5.3287244245601674E-6	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999946712755754	WITHOUT_CLASSIFICATION	5.3287244245601674E-6	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999996923951231	WITHOUT_CLASSIFICATION	3.076048769304226E-7	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.999999291581105	WITHOUT_CLASSIFICATION	7.084188950561956E-7	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999999946996803	WITHOUT_CLASSIFICATION	5.300319718056235E-9	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999983220043287	WITHOUT_CLASSIFICATION	1.6779956713138555E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999999991441909	WITHOUT_CLASSIFICATION	8.558091040297523E-9	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999999713294168	WITHOUT_CLASSIFICATION	2.867058320647408E-8	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999868421894756	WITHOUT_CLASSIFICATION	1.3157810524313308E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999999713294168	WITHOUT_CLASSIFICATION	2.867058320647408E-8	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999935629346791	WITHOUT_CLASSIFICATION	6.437065320800513E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999971899280994	WITHOUT_CLASSIFICATION	2.810071900617494E-6	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9979476546049608	WITHOUT_CLASSIFICATION	0.002052345395039093	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9998738923038324	WITHOUT_CLASSIFICATION	1.2610769616755086E-4	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999891847828897	WITHOUT_CLASSIFICATION	1.0815217110366202E-5	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.999998641021317	WITHOUT_CLASSIFICATION	1.3589786830831989E-6	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.999944280338142	WITHOUT_CLASSIFICATION	5.5719661857969336E-5	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999943927494416	WITHOUT_CLASSIFICATION	5.607250558488981E-6	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999999227594012	WITHOUT_CLASSIFICATION	7.724059887263049E-8	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999980233533006	WITHOUT_CLASSIFICATION	1.9766466995043827E-6	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999986876258617	WITHOUT_CLASSIFICATION	1.3123741383045157E-6	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999999942347718	WITHOUT_CLASSIFICATION	5.765228205260807E-9	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.999999842321883	WITHOUT_CLASSIFICATION	1.576781169593221E-7	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999778848661881	WITHOUT_CLASSIFICATION	2.211513381191667E-5	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999969841171	WITHOUT_CLASSIFICATION	3.0158828063596857E-9	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999969841171	WITHOUT_CLASSIFICATION	3.0158828063596857E-9	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999993868042663	WITHOUT_CLASSIFICATION	6.131957337578823E-7	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.999995629335941	WITHOUT_CLASSIFICATION	4.370664059002226E-6	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999994573254457	WITHOUT_CLASSIFICATION	5.426745543390165E-7	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999930319951166	WITHOUT_CLASSIFICATION	6.9680048835160346E-6	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.99999865493125	WITHOUT_CLASSIFICATION	1.345068749993766E-6	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999999713294168	WITHOUT_CLASSIFICATION	2.867058320647408E-8	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999999959943278	WITHOUT_CLASSIFICATION	4.005672276967689E-9	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999998865899092	WITHOUT_CLASSIFICATION	1.1341009087020047E-7	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999999984468038	WITHOUT_CLASSIFICATION	1.5531961984634332E-9	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999999938927883	WITHOUT_CLASSIFICATION	6.107211720931551E-9	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999999975336	WITHOUT_CLASSIFICATION	2.4664613402581796E-12	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999935685937634	WITHOUT_CLASSIFICATION	6.431406236618651E-6	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999976092402536	WITHOUT_CLASSIFICATION	2.390759746480158E-6	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999999864217394	WITHOUT_CLASSIFICATION	1.3578260727234145E-8	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999999337031793	WITHOUT_CLASSIFICATION	6.629682073669958E-8	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999998643332345	WITHOUT_CLASSIFICATION	1.3566676560682628E-7	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999999286621111	WITHOUT_CLASSIFICATION	7.133788892859448E-8	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.999999999226729	WITHOUT_CLASSIFICATION	7.732710672123379E-10	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999999117698022	WITHOUT_CLASSIFICATION	8.823019782101549E-8	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999996738146479	WITHOUT_CLASSIFICATION	3.261853520680204E-7	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9979198978825582	WITHOUT_CLASSIFICATION	0.002080102117441806	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999977295799888	WITHOUT_CLASSIFICATION	2.270420011247016E-6	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999993184695831	WITHOUT_CLASSIFICATION	6.815304169666463E-7	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9999988596862338	WITHOUT_CLASSIFICATION	1.1403137661345002E-6	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9999999104323014	WITHOUT_CLASSIFICATION	8.956769855105167E-8	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9999991351794858	WITHOUT_CLASSIFICATION	8.648205142854074E-7	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999998815257697	WITHOUT_CLASSIFICATION	1.1847423019938518E-7	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999999224541288	WITHOUT_CLASSIFICATION	7.754587109685732E-8	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999953782888633	WITHOUT_CLASSIFICATION	4.621711136762252E-6	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999999690287287	WITHOUT_CLASSIFICATION	3.09712713121787E-8	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999999861194355	WITHOUT_CLASSIFICATION	1.3880564407929848E-8	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999997763161694	WITHOUT_CLASSIFICATION	2.2368383054317634E-7	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999996099928419	WITHOUT_CLASSIFICATION	3.9000715807589314E-7	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999993752911673	WITHOUT_CLASSIFICATION	6.247088326428114E-7	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999998417085014	WITHOUT_CLASSIFICATION	1.5829149855183668E-7	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999999867739793	WITHOUT_CLASSIFICATION	1.3226020740805932E-8	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999996595936178	WITHOUT_CLASSIFICATION	3.4040638219005426E-7	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9999998661549157	WITHOUT_CLASSIFICATION	1.3384508431628756E-7	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999999396323094	WITHOUT_CLASSIFICATION	6.036769061846362E-8	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999987594398343	WITHOUT_CLASSIFICATION	1.2405601656974082E-6	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999933880172619	WITHOUT_CLASSIFICATION	6.611982738166845E-6	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999598615962824	WITHOUT_CLASSIFICATION	4.013840371761989E-5	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999999393532928	WITHOUT_CLASSIFICATION	6.064670714363418E-8	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9999951253529267	WITHOUT_CLASSIFICATION	4.874647073327008E-6	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.999999720541465	WITHOUT_CLASSIFICATION	2.79458534989954E-7	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999999878524095	WITHOUT_CLASSIFICATION	1.2147590458553129E-8	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999979292524084	WITHOUT_CLASSIFICATION	2.0707475917046775E-6	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.6253362813684044	WITHOUT_CLASSIFICATION	0.3746637186315957	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999990628841482	WITHOUT_CLASSIFICATION	9.371158517635529E-7	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.999998597408498	WITHOUT_CLASSIFICATION	1.4025915020002274E-6	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999938221901	WITHOUT_CLASSIFICATION	6.177809938849848E-9	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999971899280994	WITHOUT_CLASSIFICATION	2.810071900617494E-6	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9998957992802383	WITHOUT_CLASSIFICATION	1.0420071976163553E-4	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999999840689671	WITHOUT_CLASSIFICATION	1.5931032920288425E-8	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999999947346608	WITHOUT_CLASSIFICATION	5.265339257356683E-9	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.99999997530421	WITHOUT_CLASSIFICATION	2.469579004630166E-8	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.99999997530421	WITHOUT_CLASSIFICATION	2.469579004630166E-8	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999963401652	WITHOUT_CLASSIFICATION	3.6598347086322356E-9	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999963401652	WITHOUT_CLASSIFICATION	3.6598347086322356E-9	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999963401652	WITHOUT_CLASSIFICATION	3.6598347086322356E-9	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999976225473024	WITHOUT_CLASSIFICATION	2.3774526976440707E-6	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999976225473024	WITHOUT_CLASSIFICATION	2.3774526976440707E-6	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999997437695319	WITHOUT_CLASSIFICATION	2.562304680713223E-7	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999997437695319	WITHOUT_CLASSIFICATION	2.562304680713223E-7	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.999999999682072	WITHOUT_CLASSIFICATION	3.179279900487537E-10	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999999582152208	WITHOUT_CLASSIFICATION	4.178477923716276E-8	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999996188457492	WITHOUT_CLASSIFICATION	3.811542508625701E-7	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999996188457492	WITHOUT_CLASSIFICATION	3.811542508625701E-7	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999999927427871	WITHOUT_CLASSIFICATION	7.257212899275647E-9	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999991538316272	WITHOUT_CLASSIFICATION	8.461683728652042E-7	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999999121027993	WITHOUT_CLASSIFICATION	8.789720082225625E-8	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999999889125957	WITHOUT_CLASSIFICATION	1.1087404325175015E-8	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999999188681634	WITHOUT_CLASSIFICATION	8.11318366029883E-8	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999997267116619	WITHOUT_CLASSIFICATION	2.7328833803895334E-7	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999999660967206	WITHOUT_CLASSIFICATION	3.3903279418575395E-8	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999998733622175	WITHOUT_CLASSIFICATION	1.2663778244503212E-7	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9999996816269155	WITHOUT_CLASSIFICATION	3.18373084433852E-7	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9999972141151933	WITHOUT_CLASSIFICATION	2.785884806640107E-6	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999997056359822	WITHOUT_CLASSIFICATION	2.9436401777625896E-7	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9999996154088533	WITHOUT_CLASSIFICATION	3.845911466772632E-7	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9999981936087325	WITHOUT_CLASSIFICATION	1.8063912674363337E-6	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9999883913690079	WITHOUT_CLASSIFICATION	1.1608630992205763E-5	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999999131369067	WITHOUT_CLASSIFICATION	8.686309326611448E-8	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999950373800438	WITHOUT_CLASSIFICATION	4.962619956189457E-6	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999407413991471	WITHOUT_CLASSIFICATION	5.925860085285251E-5	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999965882693765	WITHOUT_CLASSIFICATION	3.411730623483317E-6	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999992102850751	WITHOUT_CLASSIFICATION	7.897149250193481E-7	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999928896560722	WITHOUT_CLASSIFICATION	7.110343927758397E-6	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999999699916018	WITHOUT_CLASSIFICATION	3.0008398081313655E-8	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999999904427278	WITHOUT_CLASSIFICATION	9.55727210016323E-9	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9999997556319888	WITHOUT_CLASSIFICATION	2.443680111805317E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999056848693	WITHOUT_CLASSIFICATION	9.43151307222975E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999350503876	WITHOUT_CLASSIFICATION	6.4949612331908E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999996943323883	WITHOUT_CLASSIFICATION	3.056676115984704E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999965201668	WITHOUT_CLASSIFICATION	3.479833209267827E-9	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999942351088	WITHOUT_CLASSIFICATION	5.7648911636393884E-9	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999806917422	WITHOUT_CLASSIFICATION	1.9308257685130936E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999867034716	WITHOUT_CLASSIFICATION	1.3296528484482244E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999374235082	WITHOUT_CLASSIFICATION	6.25764917840988E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999692129342	WITHOUT_CLASSIFICATION	3.0787065880060926E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999787986514	WITHOUT_CLASSIFICATION	2.1201348488639445E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999221818384	WITHOUT_CLASSIFICATION	7.781816162600882E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999787986514	WITHOUT_CLASSIFICATION	2.1201348488639445E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999787986514	WITHOUT_CLASSIFICATION	2.1201348488639445E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999787986514	WITHOUT_CLASSIFICATION	2.1201348488639445E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999787986514	WITHOUT_CLASSIFICATION	2.1201348488639445E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999787986514	WITHOUT_CLASSIFICATION	2.1201348488639445E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999787986514	WITHOUT_CLASSIFICATION	2.1201348488639445E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999221818384	WITHOUT_CLASSIFICATION	7.781816162600882E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999221818384	WITHOUT_CLASSIFICATION	7.781816162600882E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999221818384	WITHOUT_CLASSIFICATION	7.781816162600882E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999221818384	WITHOUT_CLASSIFICATION	7.781816162600882E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999221818384	WITHOUT_CLASSIFICATION	7.781816162600882E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999221818384	WITHOUT_CLASSIFICATION	7.781816162600882E-8	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999890718681058	WITHOUT_CLASSIFICATION	1.0928131894236965E-5	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999990829928127	WITHOUT_CLASSIFICATION	9.170071872158928E-7	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999692136030471	WITHOUT_CLASSIFICATION	3.078639695292168E-5	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999999242808247	WITHOUT_CLASSIFICATION	7.571917528576497E-7	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999999997446195	WITHOUT_CLASSIFICATION	2.553804283930552E-10	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999996363719683	WITHOUT_CLASSIFICATION	3.636280317249288E-7	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999990221899451	WITHOUT_CLASSIFICATION	9.778100549518937E-7	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999999944909342	WITHOUT_CLASSIFICATION	5.509065800112113E-9	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999994457866606	WITHOUT_CLASSIFICATION	5.542133394216707E-7	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999877907626916	WITHOUT_CLASSIFICATION	1.2209237308341366E-5	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.8113324449465611	IMPLEMENTATION	0.18866755505343896	WITHOUT_CLASSIFICATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999991117808	WITHOUT_CLASSIFICATION	8.882192264467197E-10	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999966866074184	WITHOUT_CLASSIFICATION	3.313392581542527E-6	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.999999999810539	WITHOUT_CLASSIFICATION	1.894609840033553E-10	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.999999999517436	WITHOUT_CLASSIFICATION	4.825641131956317E-10	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999981555527504	WITHOUT_CLASSIFICATION	1.8444472496271053E-6	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999949952548091	WITHOUT_CLASSIFICATION	5.0047451909557805E-6	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.999999878960082	WITHOUT_CLASSIFICATION	1.210399179776346E-7	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999997993976488	WITHOUT_CLASSIFICATION	2.0060235121050938E-7	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999999838310156	WITHOUT_CLASSIFICATION	1.616898433539557E-8	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999999728329254	WITHOUT_CLASSIFICATION	2.7167074549301606E-8	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999999861666146	WITHOUT_CLASSIFICATION	1.3833385371079029E-8	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999868421894756	WITHOUT_CLASSIFICATION	1.3157810524313308E-5	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999942267335947	WITHOUT_CLASSIFICATION	5.7732664052584275E-6	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999999153722053	WITHOUT_CLASSIFICATION	8.462779465274107E-8	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999999522164226	WITHOUT_CLASSIFICATION	4.7783577418354424E-8	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999783635546	WITHOUT_CLASSIFICATION	2.1636445388039722E-8	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999176063826659	WITHOUT_CLASSIFICATION	8.239361733409603E-5	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.9999880053594691	WITHOUT_CLASSIFICATION	1.1994640530994194E-5	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999999257480503	WITHOUT_CLASSIFICATION	7.425194969855487E-8	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.9999140275199478	WITHOUT_CLASSIFICATION	8.59724800521148E-5	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.999994661425166	WITHOUT_CLASSIFICATION	5.3385748339359355E-6	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999999417713886	WITHOUT_CLASSIFICATION	5.82286115122896E-8	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9999999612023137	WITHOUT_CLASSIFICATION	3.879768626527089E-8	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999995423141048	WITHOUT_CLASSIFICATION	4.576858952277578E-7	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9998662117602243	WITHOUT_CLASSIFICATION	1.337882397756512E-4	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999752927551981	WITHOUT_CLASSIFICATION	2.4707244801903343E-5	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999999664058542	WITHOUT_CLASSIFICATION	3.359414577870764E-8	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999943473360563	WITHOUT_CLASSIFICATION	5.652663943756371E-6	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999999711271313	WITHOUT_CLASSIFICATION	2.887286867466928E-8	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999988814622264	WITHOUT_CLASSIFICATION	1.1185377736079796E-6	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999998923643153	WITHOUT_CLASSIFICATION	1.0763568472934142E-7	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.99999999926149	WITHOUT_CLASSIFICATION	7.385098973668234E-10	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999999963905691	WITHOUT_CLASSIFICATION	3.60943074015533E-9	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999999963905691	WITHOUT_CLASSIFICATION	3.60943074015533E-9	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999999348055335	WITHOUT_CLASSIFICATION	6.519446656130507E-8	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999999348055335	WITHOUT_CLASSIFICATION	6.519446656130507E-8	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999999585775684	WITHOUT_CLASSIFICATION	4.142243154165517E-8	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999999585775684	WITHOUT_CLASSIFICATION	4.142243154165517E-8	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999701238016628	WITHOUT_CLASSIFICATION	2.987619833718902E-5	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999964182694742	WITHOUT_CLASSIFICATION	3.5817305257840527E-6	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999999996304539	WITHOUT_CLASSIFICATION	3.6954598510214E-10	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999999940772617	WITHOUT_CLASSIFICATION	5.922738298840572E-9	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999973759623068	WITHOUT_CLASSIFICATION	2.6240376931461484E-6	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999995904642719	WITHOUT_CLASSIFICATION	4.0953572817545145E-7	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9999998733489266	WITHOUT_CLASSIFICATION	1.2665107339764842E-7	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999978302012	WITHOUT_CLASSIFICATION	2.1697987498214408E-9	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999999999548954	WITHOUT_CLASSIFICATION	4.510461661659964E-11	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.999999999899988	WITHOUT_CLASSIFICATION	1.0001206925019446E-10	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999999974629133	WITHOUT_CLASSIFICATION	2.5370866431049067E-9	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999999866267236	WITHOUT_CLASSIFICATION	1.3373276440530201E-8	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999999945767798	WITHOUT_CLASSIFICATION	5.423220169439214E-9	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999999481333086	WITHOUT_CLASSIFICATION	5.1866691288881217E-8	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999984518374386	WITHOUT_CLASSIFICATION	1.5481625614127777E-6	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9999999578498538	WITHOUT_CLASSIFICATION	4.215014616769725E-8	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999950775327099	WITHOUT_CLASSIFICATION	4.922467290018553E-6	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999999687707337	WITHOUT_CLASSIFICATION	3.122926625802639E-8	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999909529604883	WITHOUT_CLASSIFICATION	9.04703951165368E-6	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9999998511063092	WITHOUT_CLASSIFICATION	1.4889369088114516E-7	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9999996008282921	WITHOUT_CLASSIFICATION	3.991717078522516E-7	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999980037990422	WITHOUT_CLASSIFICATION	1.9962009577011663E-6	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999990080230764	WITHOUT_CLASSIFICATION	9.919769236643214E-7	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999999597124977	WITHOUT_CLASSIFICATION	4.028750223943616E-8	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999999964389495	WITHOUT_CLASSIFICATION	3.561050507976177E-9	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999999978169556	WITHOUT_CLASSIFICATION	2.1830444122917617E-9	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9999999801799918	WITHOUT_CLASSIFICATION	1.9820008247913905E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999996709858685	WITHOUT_CLASSIFICATION	3.290141314683278E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999996709858685	WITHOUT_CLASSIFICATION	3.290141314683278E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999996709858685	WITHOUT_CLASSIFICATION	3.290141314683278E-7	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999037009313066	WITHOUT_CLASSIFICATION	9.629906869343054E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999037009313066	WITHOUT_CLASSIFICATION	9.629906869343054E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999996738146479	WITHOUT_CLASSIFICATION	3.261853520680204E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999996738146479	WITHOUT_CLASSIFICATION	3.261853520680204E-7	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999999999561322	WITHOUT_CLASSIFICATION	4.386781577130269E-11	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9967467306474378	WITHOUT_CLASSIFICATION	0.0032532693525622446	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999998844221469	WITHOUT_CLASSIFICATION	1.1557785305471969E-7	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999999966010175	WITHOUT_CLASSIFICATION	3.3989825686864288E-9	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999996709858685	WITHOUT_CLASSIFICATION	3.290141314683278E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999996709858685	WITHOUT_CLASSIFICATION	3.290141314683278E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999996709858685	WITHOUT_CLASSIFICATION	3.290141314683278E-7	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999037009313066	WITHOUT_CLASSIFICATION	9.629906869343054E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999037009313066	WITHOUT_CLASSIFICATION	9.629906869343054E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999037009313066	WITHOUT_CLASSIFICATION	9.629906869343054E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999996738146479	WITHOUT_CLASSIFICATION	3.261853520680204E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999996738146479	WITHOUT_CLASSIFICATION	3.261853520680204E-7	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.999999999889441	WITHOUT_CLASSIFICATION	1.1055901903672785E-10	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999999998412047	WITHOUT_CLASSIFICATION	1.5879526835732364E-10	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999855125	WITHOUT_CLASSIFICATION	1.4487551091587014E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999855125	WITHOUT_CLASSIFICATION	1.4487551091587014E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999855125	WITHOUT_CLASSIFICATION	1.4487551091587014E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999855125	WITHOUT_CLASSIFICATION	1.4487551091587014E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999855125	WITHOUT_CLASSIFICATION	1.4487551091587014E-11	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999992457729941	WITHOUT_CLASSIFICATION	7.542270058629926E-7	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999999377733769	WITHOUT_CLASSIFICATION	6.222662307679508E-8	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999855745930154	WITHOUT_CLASSIFICATION	1.4425406984693803E-5	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.999999753901185	WITHOUT_CLASSIFICATION	2.4609881495822757E-7	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999981020538596	WITHOUT_CLASSIFICATION	1.8979461403993112E-6	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999999694437308	WITHOUT_CLASSIFICATION	3.055626915272079E-8	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9998413163435643	WITHOUT_CLASSIFICATION	1.5868365643566883E-4	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999998725594643	WITHOUT_CLASSIFICATION	1.2744053572018814E-7	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999997302927811	WITHOUT_CLASSIFICATION	2.697072187975858E-7	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999999764859828	WITHOUT_CLASSIFICATION	2.3514017241516225E-8	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999967394431323	WITHOUT_CLASSIFICATION	3.260556867683713E-6	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999999995010168	WITHOUT_CLASSIFICATION	4.989831398217557E-10	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999979162471025	WITHOUT_CLASSIFICATION	2.0837528974267534E-6	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999997161795166	WITHOUT_CLASSIFICATION	2.8382048343612775E-7	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999999986128144	WITHOUT_CLASSIFICATION	1.387185674991456E-9	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999978234821503	WITHOUT_CLASSIFICATION	2.1765178497532762E-6	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999978234821503	WITHOUT_CLASSIFICATION	2.1765178497532762E-6	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999978234821503	WITHOUT_CLASSIFICATION	2.1765178497532762E-6	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999999903577783	WITHOUT_CLASSIFICATION	9.642221752175493E-9	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999999903581319	WITHOUT_CLASSIFICATION	9.641868037096821E-9	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999984133494846	WITHOUT_CLASSIFICATION	1.5866505153391867E-6	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999999998761	WITHOUT_CLASSIFICATION	1.2391613006469555E-13	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999999758887386	WITHOUT_CLASSIFICATION	2.4111261430287765E-8	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999995492607033	WITHOUT_CLASSIFICATION	4.507392966801117E-7	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999999604131351	WITHOUT_CLASSIFICATION	3.958686486399862E-8	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9999999165836438	WITHOUT_CLASSIFICATION	8.341635616539088E-8	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.999999880263981	WITHOUT_CLASSIFICATION	1.1973601893366432E-7	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999999962136149	WITHOUT_CLASSIFICATION	3.786385089233775E-9	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999999994141126	WITHOUT_CLASSIFICATION	5.858875035898435E-10	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999999983608823	WITHOUT_CLASSIFICATION	1.6391178328989383E-9	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999998679273934	WITHOUT_CLASSIFICATION	1.3207260671072506E-7	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9999999797531	WITHOUT_CLASSIFICATION	2.024690005004459E-8	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9999999755485567	WITHOUT_CLASSIFICATION	2.445144330678414E-8	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999998020103134	WITHOUT_CLASSIFICATION	1.9798968667120877E-7	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999999702317289	WITHOUT_CLASSIFICATION	2.9768271008740863E-8	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999999915303064	WITHOUT_CLASSIFICATION	8.469693677817933E-9	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9999998165393361	WITHOUT_CLASSIFICATION	1.834606637735406E-7	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999990003493573	WITHOUT_CLASSIFICATION	9.996506426954046E-7	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999993936726469	WITHOUT_CLASSIFICATION	6.063273529945803E-7	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999991137845488	WITHOUT_CLASSIFICATION	8.862154512103242E-7	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.99987848146038	WITHOUT_CLASSIFICATION	1.2151853961986897E-4	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999999649680653	WITHOUT_CLASSIFICATION	3.5031934622731335E-8	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9999997628505037	WITHOUT_CLASSIFICATION	2.3714949619691743E-7	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9999998446702321	WITHOUT_CLASSIFICATION	1.5532976793495182E-7	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.999999942027168	WITHOUT_CLASSIFICATION	5.7972831902297666E-8	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9999989377672688	WITHOUT_CLASSIFICATION	1.0622327311594391E-6	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999929663866431	WITHOUT_CLASSIFICATION	7.033613356776979E-6	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9999997050002821	WITHOUT_CLASSIFICATION	2.949997178676917E-7	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9999996078120698	WITHOUT_CLASSIFICATION	3.921879303330209E-7	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9999998088900405	WITHOUT_CLASSIFICATION	1.9110995941569408E-7	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.9999997955950006	WITHOUT_CLASSIFICATION	2.044049993196062E-7	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9999998352644318	WITHOUT_CLASSIFICATION	1.6473556826721051E-7	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9999997569194243	WITHOUT_CLASSIFICATION	2.430805756952597E-7	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9999997990864417	WITHOUT_CLASSIFICATION	2.009135582993699E-7	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999998244567524	WITHOUT_CLASSIFICATION	1.7554324762976695E-7	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999999816563571	WITHOUT_CLASSIFICATION	1.8343642991757417E-8	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999981832836774	WITHOUT_CLASSIFICATION	1.8167163226095463E-6	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999253330070463	WITHOUT_CLASSIFICATION	7.466699295363248E-5	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999999999323359	WITHOUT_CLASSIFICATION	6.766413020092479E-11	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999990096964676	WITHOUT_CLASSIFICATION	9.903035323745435E-7	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999644699707824	WITHOUT_CLASSIFICATION	3.553002921767566E-5	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999891186654009	WITHOUT_CLASSIFICATION	1.0881334599190167E-5	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999999855631447	WITHOUT_CLASSIFICATION	1.4436855172544998E-8	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999917532603008	WITHOUT_CLASSIFICATION	8.24673969920089E-6	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999909462378351	WITHOUT_CLASSIFICATION	9.05376216493815E-6	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999909462378351	WITHOUT_CLASSIFICATION	9.05376216493815E-6	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999997341223968	WITHOUT_CLASSIFICATION	2.6587760322156734E-7	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999995353538295	WITHOUT_CLASSIFICATION	4.6464617053246624E-7	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999939401088848	WITHOUT_CLASSIFICATION	6.059891115155165E-6	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999999982945036	WITHOUT_CLASSIFICATION	1.7054964587123758E-9	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999991724656848	WITHOUT_CLASSIFICATION	8.275343152168357E-7	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999999384235138	WITHOUT_CLASSIFICATION	6.157648626823499E-8	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999999901200829	WITHOUT_CLASSIFICATION	9.879917039966665E-9	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999999822891	WITHOUT_CLASSIFICATION	1.7710884478828732E-11	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999999191095206	WITHOUT_CLASSIFICATION	8.089047942810395E-8	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999950811441549	WITHOUT_CLASSIFICATION	4.918855845118962E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999547227982	WITHOUT_CLASSIFICATION	4.527720179187374E-8	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999547227982	WITHOUT_CLASSIFICATION	4.527720179187374E-8	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999547227982	WITHOUT_CLASSIFICATION	4.527720179187374E-8	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999547227982	WITHOUT_CLASSIFICATION	4.527720179187374E-8	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9999983361807585	WITHOUT_CLASSIFICATION	1.6638192414466825E-6	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9999999161021852	WITHOUT_CLASSIFICATION	8.38978148223205E-8	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9999962129973129	WITHOUT_CLASSIFICATION	3.787002687182749E-6	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9999963301798741	WITHOUT_CLASSIFICATION	3.6698201258482083E-6	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999840197904123	WITHOUT_CLASSIFICATION	1.598020958768762E-5	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.999999794887732	WITHOUT_CLASSIFICATION	2.0511226794737361E-7	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999995911668226	WITHOUT_CLASSIFICATION	4.0883317741998315E-7	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999995665302316	WITHOUT_CLASSIFICATION	4.334697685086045E-7	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999995665302316	WITHOUT_CLASSIFICATION	4.334697685086045E-7	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999999920947441	WITHOUT_CLASSIFICATION	7.905255923367352E-9	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999987667896045	WITHOUT_CLASSIFICATION	1.233210395470938E-6	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999915855667	WITHOUT_CLASSIFICATION	8.414433276772528E-9	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999986708852	WITHOUT_CLASSIFICATION	1.3291148726281385E-9	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999986708852	WITHOUT_CLASSIFICATION	1.3291148726281385E-9	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999999997178394	WITHOUT_CLASSIFICATION	2.821605920290951E-10	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999969934280629	WITHOUT_CLASSIFICATION	3.0065719371045335E-6	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999969934280629	WITHOUT_CLASSIFICATION	3.0065719371045335E-6	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999999934935182	WITHOUT_CLASSIFICATION	6.5064818579811806E-9	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999999998931609	WITHOUT_CLASSIFICATION	1.0683905421045456E-10	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999231381489	WITHOUT_CLASSIFICATION	7.686185102084844E-8	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999997830683882	WITHOUT_CLASSIFICATION	2.1693161179580362E-7	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9988943179156318	WITHOUT_CLASSIFICATION	0.001105682084368177	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.999999968945302	WITHOUT_CLASSIFICATION	3.1054698062780354E-8	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999845371028981	WITHOUT_CLASSIFICATION	1.5462897101894234E-5	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9999924749869111	WITHOUT_CLASSIFICATION	7.525013088853224E-6	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999995623519461	WITHOUT_CLASSIFICATION	4.3764805388743375E-7	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999999932152686	WITHOUT_CLASSIFICATION	6.7847314064968656E-9	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999999212729807	WITHOUT_CLASSIFICATION	7.872701929147017E-8	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999992188908132	WITHOUT_CLASSIFICATION	7.811091869086506E-7	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999985240976949	WITHOUT_CLASSIFICATION	1.4759023052316831E-6	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999973268678597	WITHOUT_CLASSIFICATION	2.6731321403735432E-6	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999997393095047	WITHOUT_CLASSIFICATION	2.60690495241757E-7	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999989228863347	WITHOUT_CLASSIFICATION	1.0771136652787176E-6	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.999999794663545	WITHOUT_CLASSIFICATION	2.053364550797765E-7	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9999999447288744	WITHOUT_CLASSIFICATION	5.527112549266372E-8	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.99999999704727	WITHOUT_CLASSIFICATION	2.9527299557300095E-9	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999997979825378	WITHOUT_CLASSIFICATION	2.0201746214858478E-7	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999964820531073	WITHOUT_CLASSIFICATION	3.517946892797517E-6	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999997767397415	WITHOUT_CLASSIFICATION	2.2326025857000477E-7	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999999692976133	WITHOUT_CLASSIFICATION	3.070238687211244E-8	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999999637661484	WITHOUT_CLASSIFICATION	3.623385152400084E-8	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999999141030559	WITHOUT_CLASSIFICATION	8.589694408947529E-8	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999999912382866	WITHOUT_CLASSIFICATION	8.761713357730453E-9	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999997608479249	WITHOUT_CLASSIFICATION	2.3915207512675533E-7	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.999999996227578	WITHOUT_CLASSIFICATION	3.772421938186514E-9	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999998047278	WITHOUT_CLASSIFICATION	1.9527229552337785E-10	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999997191271799	WITHOUT_CLASSIFICATION	2.808728201819794E-7	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9999998482251681	WITHOUT_CLASSIFICATION	1.5177483198506283E-7	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999999834477105	WITHOUT_CLASSIFICATION	1.655228950817754E-8	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.7778218870104427	WITHOUT_CLASSIFICATION	0.22217811298955734	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999988857407356	WITHOUT_CLASSIFICATION	1.1142592643818675E-6	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999999196746517	WITHOUT_CLASSIFICATION	8.032534830070514E-8	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999999986310452	WITHOUT_CLASSIFICATION	1.3689548521259015E-9	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999995189305843	WITHOUT_CLASSIFICATION	4.810694157072377E-7	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999999876364646	WITHOUT_CLASSIFICATION	1.2363535424264127E-8	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999998809625456	WITHOUT_CLASSIFICATION	1.1903745445418465E-7	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999999986310452	WITHOUT_CLASSIFICATION	1.3689548521259015E-9	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999995189305843	WITHOUT_CLASSIFICATION	4.810694157072377E-7	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999989832533145	WITHOUT_CLASSIFICATION	1.0167466854655257E-6	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999997798855229	WITHOUT_CLASSIFICATION	2.2011447710492146E-7	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999997798855229	WITHOUT_CLASSIFICATION	2.2011447710492146E-7	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999467071694992	WITHOUT_CLASSIFICATION	5.329283050071554E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999984103385	WITHOUT_CLASSIFICATION	1.5896614428287018E-9	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999903760296	WITHOUT_CLASSIFICATION	9.623970384181715E-9	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.999999956713928	WITHOUT_CLASSIFICATION	4.328607198255705E-8	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998488965946648	WITHOUT_CLASSIFICATION	1.5110340533531946E-4	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999998649437091	WITHOUT_CLASSIFICATION	1.3505629087558045E-7	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999577324322753	WITHOUT_CLASSIFICATION	4.226756772479025E-5	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999913708223089	WITHOUT_CLASSIFICATION	8.629177691020674E-6	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999940873362688	WITHOUT_CLASSIFICATION	5.912663731229561E-6	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999997994301003	WITHOUT_CLASSIFICATION	2.00569899672166E-7	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999998037229518	WITHOUT_CLASSIFICATION	1.962770482776191E-7	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999999583194098	WITHOUT_CLASSIFICATION	4.1680590229439324E-8	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.999999999044488	WITHOUT_CLASSIFICATION	9.55511963299929E-10	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999992049837	WITHOUT_CLASSIFICATION	7.950162809823039E-10	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999992049837	WITHOUT_CLASSIFICATION	7.950162809823039E-10	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999751400015668	WITHOUT_CLASSIFICATION	2.4859998433154753E-5	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999751400015668	WITHOUT_CLASSIFICATION	2.4859998433154753E-5	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999999847990729	WITHOUT_CLASSIFICATION	1.5200927175776037E-8	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999997098195843	WITHOUT_CLASSIFICATION	2.901804156797943E-7	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999931962722156	WITHOUT_CLASSIFICATION	6.8037277843613194E-6	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999999980251958	WITHOUT_CLASSIFICATION	1.974804204080533E-9	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999993544504482	WITHOUT_CLASSIFICATION	6.455495517716175E-7	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999999504186782	WITHOUT_CLASSIFICATION	4.958132182121144E-8	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999903760296	WITHOUT_CLASSIFICATION	9.623970384181715E-9	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.999999956713928	WITHOUT_CLASSIFICATION	4.328607198255705E-8	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999940873362688	WITHOUT_CLASSIFICATION	5.912663731229561E-6	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999997994301003	WITHOUT_CLASSIFICATION	2.00569899672166E-7	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999917462267216	WITHOUT_CLASSIFICATION	8.253773278353495E-6	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999961229829857	WITHOUT_CLASSIFICATION	3.8770170143599445E-6	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999997504333046	WITHOUT_CLASSIFICATION	2.4956669544007926E-7	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999999913670682	WITHOUT_CLASSIFICATION	8.632931867675307E-9	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999998335282102	WITHOUT_CLASSIFICATION	1.6647178980707815E-7	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999999997282047	WITHOUT_CLASSIFICATION	2.717952985257117E-10	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999995442998256	WITHOUT_CLASSIFICATION	4.557001743662114E-7	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.999999868100598	WITHOUT_CLASSIFICATION	1.3189940192607484E-7	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999987109736784	WITHOUT_CLASSIFICATION	1.2890263215539294E-6	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999994862454602	WITHOUT_CLASSIFICATION	5.137545397338492E-7	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999996996991	WITHOUT_CLASSIFICATION	3.00300798984684E-10	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999999988455206	WITHOUT_CLASSIFICATION	1.1544793624190795E-9	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.9999994739296486	WITHOUT_CLASSIFICATION	5.260703513869723E-7	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.99999986538366	WITHOUT_CLASSIFICATION	1.3461634002261142E-7	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999973503841465	WITHOUT_CLASSIFICATION	2.6496158535055904E-6	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.999999971052798	WITHOUT_CLASSIFICATION	2.8947202000491755E-8	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999979790071594	WITHOUT_CLASSIFICATION	2.020992840755269E-6	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999999890274575	WITHOUT_CLASSIFICATION	1.0972542642395711E-8	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999999992917556	WITHOUT_CLASSIFICATION	7.082443216597832E-10	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999999997123884	WITHOUT_CLASSIFICATION	2.8761160677943012E-9	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999999922975481	WITHOUT_CLASSIFICATION	7.702451886268264E-9	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999999922975481	WITHOUT_CLASSIFICATION	7.702451886268264E-9	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999996553571686	WITHOUT_CLASSIFICATION	3.446428314051072E-7	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999998415267339	WITHOUT_CLASSIFICATION	1.5847326610090582E-7	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999999998990761	WITHOUT_CLASSIFICATION	1.0092405446639391E-10	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999999791896335	WITHOUT_CLASSIFICATION	2.0810366613010684E-8	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999999791896335	WITHOUT_CLASSIFICATION	2.0810366613010684E-8	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999997504333046	WITHOUT_CLASSIFICATION	2.4956669544007926E-7	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999998974177794	WITHOUT_CLASSIFICATION	1.0258222060111336E-7	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999999884665508	WITHOUT_CLASSIFICATION	1.1533449179194357E-8	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999712438323	WITHOUT_CLASSIFICATION	2.8756167717305262E-8	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.999999958682143	WITHOUT_CLASSIFICATION	4.131785704333486E-8	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999981962856	WITHOUT_CLASSIFICATION	1.8037144140496808E-9	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999986798179094	WITHOUT_CLASSIFICATION	1.3201820905565232E-6	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999999915486492	WITHOUT_CLASSIFICATION	8.451350806312655E-9	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9999957104891459	WITHOUT_CLASSIFICATION	4.289510854124695E-6	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999989578948875	WITHOUT_CLASSIFICATION	1.0421051125518668E-6	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.999999949668328	WITHOUT_CLASSIFICATION	5.033167211154994E-8	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999983965214104	WITHOUT_CLASSIFICATION	1.6034785895018197E-6	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999997451565825	WITHOUT_CLASSIFICATION	2.54843417468733E-7	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999982368733377	WITHOUT_CLASSIFICATION	1.763126662344222E-6	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999997208649178	WITHOUT_CLASSIFICATION	2.791350821170052E-7	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9999994547891464	WITHOUT_CLASSIFICATION	5.452108535105658E-7	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999999801394186	WITHOUT_CLASSIFICATION	1.9860581433457478E-8	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9999999159174996	WITHOUT_CLASSIFICATION	8.408250040228301E-8	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999999808256487	WITHOUT_CLASSIFICATION	1.9174351394794807E-8	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999991391622	WITHOUT_CLASSIFICATION	8.608378015317625E-10	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.999999999981371	WITHOUT_CLASSIFICATION	1.862905740853432E-11	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999998617716344	WITHOUT_CLASSIFICATION	1.382283656142886E-7	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999960119313839	WITHOUT_CLASSIFICATION	3.9880686161649805E-6	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999998835214544	WITHOUT_CLASSIFICATION	1.1647854563314081E-7	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999978858584	WITHOUT_CLASSIFICATION	2.114141561849337E-9	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999637054037	WITHOUT_CLASSIFICATION	3.6294596266130227E-8	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999999114215722	WITHOUT_CLASSIFICATION	8.857842772434508E-8	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.999999463299635	WITHOUT_CLASSIFICATION	5.367003650587149E-7	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999998553958918	WITHOUT_CLASSIFICATION	1.4460410826798845E-7	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999990076474187	WITHOUT_CLASSIFICATION	9.923525813010646E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999891446167	WITHOUT_CLASSIFICATION	1.0855383293473844E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999891446167	WITHOUT_CLASSIFICATION	1.0855383293473844E-8	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.999999999646614	WITHOUT_CLASSIFICATION	3.533859588152666E-10	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999996271445888	WITHOUT_CLASSIFICATION	3.728554111898732E-7	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999996271445888	WITHOUT_CLASSIFICATION	3.728554111898732E-7	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999805150066	WITHOUT_CLASSIFICATION	1.9484993435805886E-8	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999805150066	WITHOUT_CLASSIFICATION	1.9484993435805886E-8	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999997613560148	WITHOUT_CLASSIFICATION	2.386439852614984E-7	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999999743216418	WITHOUT_CLASSIFICATION	2.5678358218698946E-8	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999084837974	WITHOUT_CLASSIFICATION	9.15162026144562E-8	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999999198271065	WITHOUT_CLASSIFICATION	8.017289345510925E-8	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999988518699	WITHOUT_CLASSIFICATION	1.148130087944331E-9	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998942343551	WITHOUT_CLASSIFICATION	1.0576564496196545E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998942343551	WITHOUT_CLASSIFICATION	1.0576564496196545E-7	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999978858584	WITHOUT_CLASSIFICATION	2.114141561849337E-9	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999978858584	WITHOUT_CLASSIFICATION	2.114141561849337E-9	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999978858584	WITHOUT_CLASSIFICATION	2.114141561849337E-9	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999637054037	WITHOUT_CLASSIFICATION	3.6294596266130227E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999891446167	WITHOUT_CLASSIFICATION	1.0855383293473844E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999891446167	WITHOUT_CLASSIFICATION	1.0855383293473844E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999891446167	WITHOUT_CLASSIFICATION	1.0855383293473844E-8	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999997613560148	WITHOUT_CLASSIFICATION	2.386439852614984E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999997613560148	WITHOUT_CLASSIFICATION	2.386439852614984E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999997613560148	WITHOUT_CLASSIFICATION	2.386439852614984E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999999198271065	WITHOUT_CLASSIFICATION	8.017289345510925E-8	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999999198271065	WITHOUT_CLASSIFICATION	8.017289345510925E-8	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999995905771056	WITHOUT_CLASSIFICATION	4.0942289425150477E-7	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999999460485504	WITHOUT_CLASSIFICATION	5.395144967579968E-8	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999999622182639	WITHOUT_CLASSIFICATION	3.7781736171613794E-8	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9999578863254414	WITHOUT_CLASSIFICATION	4.2113674558735416E-5	IMPLEMENTATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9999532391996098	WITHOUT_CLASSIFICATION	4.676080039018682E-5	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9999992115603384	WITHOUT_CLASSIFICATION	7.884396615098104E-7	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9999992115603384	WITHOUT_CLASSIFICATION	7.884396615098104E-7	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999999861771581	WITHOUT_CLASSIFICATION	1.3822841776076512E-8	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999986798179094	WITHOUT_CLASSIFICATION	1.3201820905565232E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999986798179094	WITHOUT_CLASSIFICATION	1.3201820905565232E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999986798179094	WITHOUT_CLASSIFICATION	1.3201820905565232E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999986798179094	WITHOUT_CLASSIFICATION	1.3201820905565232E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999986798179094	WITHOUT_CLASSIFICATION	1.3201820905565232E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999939562216	WITHOUT_CLASSIFICATION	6.0437784254518634E-9	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999939562216	WITHOUT_CLASSIFICATION	6.0437784254518634E-9	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999939562216	WITHOUT_CLASSIFICATION	6.0437784254518634E-9	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999999993701675	WITHOUT_CLASSIFICATION	6.298324775375842E-10	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999996848499015	WITHOUT_CLASSIFICATION	3.1515009849554667E-7	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999637054037	WITHOUT_CLASSIFICATION	3.6294596266130227E-8	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999997613560148	WITHOUT_CLASSIFICATION	2.386439852614984E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999997613560148	WITHOUT_CLASSIFICATION	2.386439852614984E-7	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999986798179094	WITHOUT_CLASSIFICATION	1.3201820905565232E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999986798179094	WITHOUT_CLASSIFICATION	1.3201820905565232E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999939562216	WITHOUT_CLASSIFICATION	6.0437784254518634E-9	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999999861771581	WITHOUT_CLASSIFICATION	1.3822841776076512E-8	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999955326504	WITHOUT_CLASSIFICATION	4.467349569143304E-9	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.9999999091146871	WITHOUT_CLASSIFICATION	9.088531300584557E-8	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999999141113128	WITHOUT_CLASSIFICATION	8.588868719509921E-8	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999999562452722	WITHOUT_CLASSIFICATION	4.375472788746757E-8	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999998453858819	WITHOUT_CLASSIFICATION	1.546141180890175E-7	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999999713754176	WITHOUT_CLASSIFICATION	2.8624582477255634E-8	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999932277300085	WITHOUT_CLASSIFICATION	6.772269991485953E-6	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999985294118858	WITHOUT_CLASSIFICATION	1.470588114209654E-6	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999978550452303	WITHOUT_CLASSIFICATION	2.1449547697924056E-6	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999999956872542	WITHOUT_CLASSIFICATION	4.312745848797046E-9	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999717042071733	WITHOUT_CLASSIFICATION	2.829579282671378E-5	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999999943168856	WITHOUT_CLASSIFICATION	5.6831143798891776E-9	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999965018326922	WITHOUT_CLASSIFICATION	3.4981673079443633E-6	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.998231355618825	WITHOUT_CLASSIFICATION	0.0017686443811749683	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999998616577405	WITHOUT_CLASSIFICATION	1.3834225943846586E-7	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9997229628912003	WITHOUT_CLASSIFICATION	2.770371087997156E-4	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999936035036284	WITHOUT_CLASSIFICATION	6.396496371666304E-6	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999999882509523	WITHOUT_CLASSIFICATION	1.1749047740805314E-8	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999357944459593	WITHOUT_CLASSIFICATION	6.420555404083188E-5	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999999940281926	WITHOUT_CLASSIFICATION	5.971807324151483E-9	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.999995674231309	WITHOUT_CLASSIFICATION	4.325768690958995E-6	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999999538091	WITHOUT_CLASSIFICATION	4.6190966264644E-11	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999999890967	WITHOUT_CLASSIFICATION	1.0903272565180528E-11	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999999661369755	WITHOUT_CLASSIFICATION	3.386302453509827E-8	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999998494434273	WITHOUT_CLASSIFICATION	1.5055657255115266E-7	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999997868697389	WITHOUT_CLASSIFICATION	2.1313026117301847E-7	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9999996334728042	WITHOUT_CLASSIFICATION	3.665271958599736E-7	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.999999991215793	WITHOUT_CLASSIFICATION	8.784207056620605E-9	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999997057850113	WITHOUT_CLASSIFICATION	2.9421498869963924E-7	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999988646319169	WITHOUT_CLASSIFICATION	1.135368083084663E-6	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999999995274949	WITHOUT_CLASSIFICATION	4.7250509421411E-10	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999712098845	WITHOUT_CLASSIFICATION	2.8790115515288836E-8	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999999999326463	WITHOUT_CLASSIFICATION	6.73537181336182E-11	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999863261079	WITHOUT_CLASSIFICATION	1.3673892108795849E-8	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999955326504	WITHOUT_CLASSIFICATION	4.467349569143304E-9	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999999915179825	WITHOUT_CLASSIFICATION	8.482017526804925E-9	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999999889363832	WITHOUT_CLASSIFICATION	1.1063616857357912E-8	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999999603554948	WITHOUT_CLASSIFICATION	3.9644505154793094E-8	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999999383277395	WITHOUT_CLASSIFICATION	6.167226055023745E-8	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999999383277395	WITHOUT_CLASSIFICATION	6.167226055023745E-8	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9999536722649711	WITHOUT_CLASSIFICATION	4.632773502886798E-5	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9999536722649711	WITHOUT_CLASSIFICATION	4.632773502886798E-5	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999999998529242	WITHOUT_CLASSIFICATION	1.4707580422000205E-10	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999999940077384	WITHOUT_CLASSIFICATION	5.992261563040893E-9	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999999687171999	WITHOUT_CLASSIFICATION	3.128280025184099E-8	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999998670781942	WITHOUT_CLASSIFICATION	1.3292180574295776E-7	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999999506152876	WITHOUT_CLASSIFICATION	4.93847124792524E-8	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.999998391154397	WITHOUT_CLASSIFICATION	1.6088456029563387E-6	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999999881146767	WITHOUT_CLASSIFICATION	1.1885323260902566E-8	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999993181149235	WITHOUT_CLASSIFICATION	6.818850765155023E-7	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.999899772541213	WITHOUT_CLASSIFICATION	1.0022745878697118E-4	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999995497341	WITHOUT_CLASSIFICATION	4.502659795201595E-10	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999999498699	WITHOUT_CLASSIFICATION	5.0130121652299055E-11	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999998628074112	WITHOUT_CLASSIFICATION	1.371925888418632E-7	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999998628074112	WITHOUT_CLASSIFICATION	1.371925888418632E-7	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999999999686852	WITHOUT_CLASSIFICATION	3.131473190348497E-11	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999999947795652	WITHOUT_CLASSIFICATION	5.220434725613325E-9	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999989433085866	WITHOUT_CLASSIFICATION	1.0566914134259907E-6	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999989433085866	WITHOUT_CLASSIFICATION	1.0566914134259907E-6	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.999999998967332	WITHOUT_CLASSIFICATION	1.0326679362116913E-9	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999951362586	WITHOUT_CLASSIFICATION	4.863741427558604E-9	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999982162886397	WITHOUT_CLASSIFICATION	1.7837113601733411E-6	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999999861240499	WITHOUT_CLASSIFICATION	1.3875950020982427E-8	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999999894129027	WITHOUT_CLASSIFICATION	1.058709729858853E-8	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999992526356126	WITHOUT_CLASSIFICATION	7.473643874721112E-7	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9999904134589286	WITHOUT_CLASSIFICATION	9.586541071353297E-6	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999803640672463	WITHOUT_CLASSIFICATION	1.963593275368609E-5	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.999987300841536	WITHOUT_CLASSIFICATION	1.26991584640949E-5	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9999999284455767	WITHOUT_CLASSIFICATION	7.155442337199071E-8	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999991804865995	WITHOUT_CLASSIFICATION	8.195134004314649E-7	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999999136245866	WITHOUT_CLASSIFICATION	8.637541333274732E-8	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999980262751975	WITHOUT_CLASSIFICATION	1.9737248024698308E-6	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.999999529706755	WITHOUT_CLASSIFICATION	4.7029324498550237E-7	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999975565995	WITHOUT_CLASSIFICATION	2.4434004277785507E-9	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999994761513913	WITHOUT_CLASSIFICATION	5.238486087025196E-7	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999993919375012	WITHOUT_CLASSIFICATION	6.0806249886148E-7	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999997455606996	WITHOUT_CLASSIFICATION	2.544393004248007E-7	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999999999960404	WITHOUT_CLASSIFICATION	3.959607476160942E-12	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999997107319726	WITHOUT_CLASSIFICATION	2.8926802743643795E-7	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.5844183462555662	IMPLEMENTATION	0.41558165374443384	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999998847964502	WITHOUT_CLASSIFICATION	1.1520354980377988E-7	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999998251982676	WITHOUT_CLASSIFICATION	1.7480173240376656E-7	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999964873972534	WITHOUT_CLASSIFICATION	3.5126027464556466E-6	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999998399947161	WITHOUT_CLASSIFICATION	1.6000528394862174E-7	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999964838966011	WITHOUT_CLASSIFICATION	3.5161033989942718E-6	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9999999191958759	WITHOUT_CLASSIFICATION	8.080412408673833E-8	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999977148105712	WITHOUT_CLASSIFICATION	2.2851894287771717E-6	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999999988883984	WITHOUT_CLASSIFICATION	1.1116016301166492E-9	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.99999999956285	WITHOUT_CLASSIFICATION	4.3714991935358124E-10	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999999977413154	WITHOUT_CLASSIFICATION	2.2586846131528113E-9	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999999955213642	WITHOUT_CLASSIFICATION	4.4786358301217726E-9	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999999981287899	WITHOUT_CLASSIFICATION	1.8712101492702135E-9	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999922676773	WITHOUT_CLASSIFICATION	7.732322727412002E-9	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999922676773	WITHOUT_CLASSIFICATION	7.732322727412002E-9	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999999822839709	WITHOUT_CLASSIFICATION	1.7716029099925867E-8	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999954487376344	WITHOUT_CLASSIFICATION	4.551262365642117E-6	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999999997984214	WITHOUT_CLASSIFICATION	2.015787595271679E-10	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9999994248774448	WITHOUT_CLASSIFICATION	5.75122555226777E-7	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9999996256551237	WITHOUT_CLASSIFICATION	3.7434487637845406E-7	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999998264687882	WITHOUT_CLASSIFICATION	1.735312119091984E-7	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999985103022554	WITHOUT_CLASSIFICATION	1.489697744629151E-6	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999991578103457	WITHOUT_CLASSIFICATION	8.421896542444899E-7	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999999824084287	WITHOUT_CLASSIFICATION	1.7591571269843887E-8	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9999995687942747	WITHOUT_CLASSIFICATION	4.312057253127072E-7	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999999978961277	WITHOUT_CLASSIFICATION	2.103872312973377E-9	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999715361601084	WITHOUT_CLASSIFICATION	2.846383989157545E-5	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.999985796809985	WITHOUT_CLASSIFICATION	1.4203190014886319E-5	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999994445479795	WITHOUT_CLASSIFICATION	5.55452020589522E-7	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.999999337063554	WITHOUT_CLASSIFICATION	6.629364459100331E-7	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999999793202445	WITHOUT_CLASSIFICATION	2.0679755444453846E-8	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999990121631968	WITHOUT_CLASSIFICATION	9.878368032767867E-7	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999996339524349	WITHOUT_CLASSIFICATION	3.660475650666557E-7	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9957863810680505	WITHOUT_CLASSIFICATION	0.004213618931949408	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.99999459465552	WITHOUT_CLASSIFICATION	5.405344479989018E-6	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.999999988239394	WITHOUT_CLASSIFICATION	1.1760606031289556E-8	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999999960910704	WITHOUT_CLASSIFICATION	3.908929634522452E-9	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999978279170378	WITHOUT_CLASSIFICATION	2.1720829621298202E-6	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999977212458583	WITHOUT_CLASSIFICATION	2.27875414174396E-6	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999839646376001	WITHOUT_CLASSIFICATION	1.6035362399879137E-5	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999106802203902	WITHOUT_CLASSIFICATION	8.931977960973514E-5	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999999872446	WITHOUT_CLASSIFICATION	1.2755420346751832E-11	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.999999999237676	WITHOUT_CLASSIFICATION	7.623239662588069E-10	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9999977209392275	WITHOUT_CLASSIFICATION	2.2790607726307278E-6	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999990198916083	WITHOUT_CLASSIFICATION	9.801083916161343E-7	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999997412849806	WITHOUT_CLASSIFICATION	2.587150194808435E-7	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999695767603125	WITHOUT_CLASSIFICATION	3.0423239687498083E-5	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999999640740648	WITHOUT_CLASSIFICATION	3.592593531764322E-8	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999999976530248	WITHOUT_CLASSIFICATION	2.3469752724739482E-9	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999998052785902	WITHOUT_CLASSIFICATION	1.9472140973611972E-7	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999999809560061	WITHOUT_CLASSIFICATION	1.9043993856695366E-8	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999999359664248	WITHOUT_CLASSIFICATION	6.4033575180568E-8	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9999999656516813	WITHOUT_CLASSIFICATION	3.4348318740106936E-8	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9999937454417458	WITHOUT_CLASSIFICATION	6.254558254173459E-6	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999999731193338	WITHOUT_CLASSIFICATION	2.688066619250145E-8	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999980657683848	WITHOUT_CLASSIFICATION	1.934231615276214E-6	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999999063383771	WITHOUT_CLASSIFICATION	9.366162296964962E-8	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999999063383771	WITHOUT_CLASSIFICATION	9.366162296964962E-8	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999996106090423	WITHOUT_CLASSIFICATION	3.8939095768288807E-7	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999999937993413	WITHOUT_CLASSIFICATION	6.200658724242822E-9	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999997783312544	WITHOUT_CLASSIFICATION	2.216687456588463E-7	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999976022360387	WITHOUT_CLASSIFICATION	2.3977639613140537E-6	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.999999773794922	WITHOUT_CLASSIFICATION	2.2620507793146868E-7	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999999999985175	WITHOUT_CLASSIFICATION	1.4824610313450827E-12	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999655422	WITHOUT_CLASSIFICATION	3.445782873174486E-11	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999999583897486	WITHOUT_CLASSIFICATION	4.1610251323674454E-8	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.999999953980747	WITHOUT_CLASSIFICATION	4.601925292297696E-8	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999987947116658	WITHOUT_CLASSIFICATION	1.2052883342526493E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999999992256356	WITHOUT_CLASSIFICATION	7.743643057533063E-10	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999993031429243	WITHOUT_CLASSIFICATION	6.968570756481921E-7	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999981288985014	WITHOUT_CLASSIFICATION	1.8711014986624832E-6	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999992447556006	WITHOUT_CLASSIFICATION	7.552443992806206E-7	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999999567885993	WITHOUT_CLASSIFICATION	4.32114006695278E-8	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9822953991311979	WITHOUT_CLASSIFICATION	0.017704600868802062	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999997798236525	WITHOUT_CLASSIFICATION	2.2017634743102385E-7	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999999952241826	WITHOUT_CLASSIFICATION	4.775817354481329E-9	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999999788696009	WITHOUT_CLASSIFICATION	2.1130399112892087E-8	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9907811284861018	WITHOUT_CLASSIFICATION	0.009218871513898197	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999998869313922	WITHOUT_CLASSIFICATION	1.1306860783806349E-7	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999973012836342	WITHOUT_CLASSIFICATION	2.698716365820747E-6	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999826199293	WITHOUT_CLASSIFICATION	1.738007066446851E-8	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999956058192342	WITHOUT_CLASSIFICATION	4.3941807658575326E-6	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999747204822	WITHOUT_CLASSIFICATION	2.527951785407676E-8	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999981228923371	WITHOUT_CLASSIFICATION	1.8771076628959439E-6	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999999999989989	WITHOUT_CLASSIFICATION	1.0010905706219952E-12	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999909708051339	WITHOUT_CLASSIFICATION	9.029194866138909E-6	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.999999997863952	WITHOUT_CLASSIFICATION	2.1360478855013214E-9	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999998221716528	WITHOUT_CLASSIFICATION	1.778283471553462E-7	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999977929586	WITHOUT_CLASSIFICATION	2.2070413967971855E-9	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999926349165	WITHOUT_CLASSIFICATION	7.36508357874113E-9	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999998221716528	WITHOUT_CLASSIFICATION	1.778283471553462E-7	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999999959739156	WITHOUT_CLASSIFICATION	4.0260844033778445E-9	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999999141030559	WITHOUT_CLASSIFICATION	8.589694408947529E-8	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9789189192282047	WITHOUT_CLASSIFICATION	0.02108108077179525	IMPLEMENTATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.8685278712745267	IMPLEMENTATION	0.1314721287254733	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999998165139022	WITHOUT_CLASSIFICATION	1.834860979021213E-7	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999855125	WITHOUT_CLASSIFICATION	1.4487551091587014E-11	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999999995290927	WITHOUT_CLASSIFICATION	4.709073817808366E-10	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999999396704714	WITHOUT_CLASSIFICATION	6.032952849221989E-8	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999984103385	WITHOUT_CLASSIFICATION	1.5896614428287018E-9	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999997107319726	WITHOUT_CLASSIFICATION	2.8926802743643795E-7	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999999622182639	WITHOUT_CLASSIFICATION	3.7781736171613794E-8	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999997136139	WITHOUT_CLASSIFICATION	2.8638606694530347E-10	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.999998210356146	WITHOUT_CLASSIFICATION	1.7896438540104804E-6	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999998768692826	WITHOUT_CLASSIFICATION	1.2313071747264827E-7	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999974847498737	WITHOUT_CLASSIFICATION	2.515250126327341E-6	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9999999593529753	WITHOUT_CLASSIFICATION	4.0647024751470704E-8	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9999974015635179	WITHOUT_CLASSIFICATION	2.598436482048693E-6	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999940899005572	WITHOUT_CLASSIFICATION	5.910099442786376E-6	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999999931643873	WITHOUT_CLASSIFICATION	6.835612837077592E-9	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.999999705541459	WITHOUT_CLASSIFICATION	2.944585410668306E-7	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9999976325030074	WITHOUT_CLASSIFICATION	2.3674969924573583E-6	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9999964048714292	WITHOUT_CLASSIFICATION	3.59512857086953E-6	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9999948831580088	WITHOUT_CLASSIFICATION	5.116841991174531E-6	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999982877645415	WITHOUT_CLASSIFICATION	1.7122354584872104E-6	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9998522103206242	WITHOUT_CLASSIFICATION	1.4778967937584112E-4	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999997415299747	WITHOUT_CLASSIFICATION	2.5847002535031546E-7	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999993713408851	WITHOUT_CLASSIFICATION	6.286591148691236E-7	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999999979321073	WITHOUT_CLASSIFICATION	2.0678927001953366E-9	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999998276756	WITHOUT_CLASSIFICATION	1.7232425429396013E-10	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999999957254601	WITHOUT_CLASSIFICATION	4.27453996070067E-9	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999999957254601	WITHOUT_CLASSIFICATION	4.27453996070067E-9	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999966944928	WITHOUT_CLASSIFICATION	3.3055072410063812E-9	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999994251026	WITHOUT_CLASSIFICATION	5.748972800987315E-10	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999428129977251	WITHOUT_CLASSIFICATION	5.7187002274910674E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5887280554955185	WITHOUT_CLASSIFICATION	0.4112719445044815	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5887280554955185	WITHOUT_CLASSIFICATION	0.4112719445044815	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5887280554955185	WITHOUT_CLASSIFICATION	0.4112719445044815	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5887280554955185	WITHOUT_CLASSIFICATION	0.4112719445044815	IMPLEMENTATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999999965139666	WITHOUT_CLASSIFICATION	3.4860334780844714E-9	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999967292151896	WITHOUT_CLASSIFICATION	3.2707848104895933E-6	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9999999762421863	WITHOUT_CLASSIFICATION	2.375781377626991E-8	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9745836573069708	WITHOUT_CLASSIFICATION	0.025416342693029167	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999761480744581	WITHOUT_CLASSIFICATION	2.385192554182966E-5	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999997801865181	WITHOUT_CLASSIFICATION	2.19813481902507E-7	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999985700873516	WITHOUT_CLASSIFICATION	1.4299126484254388E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999985700873516	WITHOUT_CLASSIFICATION	1.4299126484254388E-6	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999999970286407	WITHOUT_CLASSIFICATION	2.971359287036224E-9	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9999997948157532	WITHOUT_CLASSIFICATION	2.051842467445771E-7	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999995085628761	WITHOUT_CLASSIFICATION	4.914371239510936E-7	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9995983042057036	WITHOUT_CLASSIFICATION	4.0169579429644533E-4	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999972839732797	WITHOUT_CLASSIFICATION	2.7160267204438887E-6	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999996345197129	WITHOUT_CLASSIFICATION	3.654802871285977E-7	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999999988697708	WITHOUT_CLASSIFICATION	1.1302292286648033E-9	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999996445816567	WITHOUT_CLASSIFICATION	3.554183433122474E-7	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999997924004356	WITHOUT_CLASSIFICATION	2.0759956439058595E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999997924004356	WITHOUT_CLASSIFICATION	2.0759956439058595E-6	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999926349165	WITHOUT_CLASSIFICATION	7.36508357874113E-9	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.999999485339137	WITHOUT_CLASSIFICATION	5.146608630259309E-7	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9999995844620402	WITHOUT_CLASSIFICATION	4.1553795978630125E-7	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999992772106816	WITHOUT_CLASSIFICATION	7.227893184229E-7	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999999772077	WITHOUT_CLASSIFICATION	2.2792220476580144E-11	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9999995355422697	WITHOUT_CLASSIFICATION	4.644577303195849E-7	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999980954482991	WITHOUT_CLASSIFICATION	1.9045517009577364E-6	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999987038910594	WITHOUT_CLASSIFICATION	1.2961089405288884E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999997673019914	WITHOUT_CLASSIFICATION	2.3269800851457303E-7	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999997673019914	WITHOUT_CLASSIFICATION	2.3269800851457303E-7	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999990045661019	WITHOUT_CLASSIFICATION	9.954338980544557E-7	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999999603998079	WITHOUT_CLASSIFICATION	3.960019222787447E-8	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.999999962958506	WITHOUT_CLASSIFICATION	3.704149394325244E-8	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999984263232378	WITHOUT_CLASSIFICATION	1.573676762178617E-6	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.99999030980973	WITHOUT_CLASSIFICATION	9.69019026995434E-6	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9999991672922519	WITHOUT_CLASSIFICATION	8.327077480341568E-7	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9986978664860355	WITHOUT_CLASSIFICATION	0.0013021335139644205	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998376703666	WITHOUT_CLASSIFICATION	1.623296333200664E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998376703666	WITHOUT_CLASSIFICATION	1.623296333200664E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998376703666	WITHOUT_CLASSIFICATION	1.623296333200664E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998376703666	WITHOUT_CLASSIFICATION	1.623296333200664E-7	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.999999971799776	WITHOUT_CLASSIFICATION	2.820022402614213E-8	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999999635311	WITHOUT_CLASSIFICATION	3.64689316457737E-11	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999992535552391	WITHOUT_CLASSIFICATION	7.464447608583611E-7	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999999121871869	WITHOUT_CLASSIFICATION	8.781281317915786E-8	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999999956689842	WITHOUT_CLASSIFICATION	4.331015852054628E-9	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9999997731046023	WITHOUT_CLASSIFICATION	2.2689539772179723E-7	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999780317512	WITHOUT_CLASSIFICATION	2.196824871691376E-8	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999998986354	WITHOUT_CLASSIFICATION	1.0136459342336888E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999998986354	WITHOUT_CLASSIFICATION	1.0136459342336888E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.999999998986354	WITHOUT_CLASSIFICATION	1.0136459342336888E-9	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999999642021341	WITHOUT_CLASSIFICATION	3.5797865852514316E-8	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.999999872410595	WITHOUT_CLASSIFICATION	1.2758940504374224E-7	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999997707469231	WITHOUT_CLASSIFICATION	2.2925307674655473E-7	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999997707469231	WITHOUT_CLASSIFICATION	2.2925307674655473E-7	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999990156602803	WITHOUT_CLASSIFICATION	9.843397196945876E-7	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998436137443087	WITHOUT_CLASSIFICATION	1.563862556913169E-4	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999920106097759	WITHOUT_CLASSIFICATION	7.989390224113277E-6	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9999997660534097	WITHOUT_CLASSIFICATION	2.3394659023440376E-7	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999995664313	WITHOUT_CLASSIFICATION	4.3356878350894553E-10	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999996852115138	WITHOUT_CLASSIFICATION	3.1478848608232804E-7	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.999999997155115	WITHOUT_CLASSIFICATION	2.8448850038533677E-9	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.999999997155115	WITHOUT_CLASSIFICATION	2.8448850038533677E-9	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999999997298734	WITHOUT_CLASSIFICATION	2.701265947770072E-9	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999997401897	WITHOUT_CLASSIFICATION	2.5981024801593527E-10	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999996096946745	WITHOUT_CLASSIFICATION	3.9030532544042435E-7	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999983992406577	WITHOUT_CLASSIFICATION	1.6007593424086552E-6	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9984199028856097	WITHOUT_CLASSIFICATION	0.0015800971143902574	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999997286273707	WITHOUT_CLASSIFICATION	2.7137262928346565E-7	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9999996281078445	WITHOUT_CLASSIFICATION	3.718921554468695E-7	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998775564287818	WITHOUT_CLASSIFICATION	1.2244357121809387E-4	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999999904934321	WITHOUT_CLASSIFICATION	9.506567839960218E-9	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999999837537333	WITHOUT_CLASSIFICATION	1.6246266660572783E-8	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999998727821573	WITHOUT_CLASSIFICATION	1.2721784261515347E-7	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999934732481	WITHOUT_CLASSIFICATION	6.526751844888198E-9	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9998219527709119	WITHOUT_CLASSIFICATION	1.7804722908819936E-4	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999996103703255	WITHOUT_CLASSIFICATION	3.896296744610705E-7	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999996336502007	WITHOUT_CLASSIFICATION	3.663497992993983E-7	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999427271693709	WITHOUT_CLASSIFICATION	5.727283062911634E-5	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999837835314916	WITHOUT_CLASSIFICATION	1.6216468508353138E-5	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999999967360528	WITHOUT_CLASSIFICATION	3.263947333823304E-9	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999902427888723	WITHOUT_CLASSIFICATION	9.75721112780333E-6	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999999649731649	WITHOUT_CLASSIFICATION	3.5026835088419854E-8	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999986847254	WITHOUT_CLASSIFICATION	1.3152745660560473E-9	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9861931998556931	WITHOUT_CLASSIFICATION	0.013806800144306925	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999990986316467	WITHOUT_CLASSIFICATION	9.013683532268602E-7	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999990986316467	WITHOUT_CLASSIFICATION	9.013683532268602E-7	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999990986316467	WITHOUT_CLASSIFICATION	9.013683532268602E-7	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999990986316467	WITHOUT_CLASSIFICATION	9.013683532268602E-7	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999990986316467	WITHOUT_CLASSIFICATION	9.013683532268602E-7	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999990986316467	WITHOUT_CLASSIFICATION	9.013683532268602E-7	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999990986316467	WITHOUT_CLASSIFICATION	9.013683532268602E-7	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999990986316467	WITHOUT_CLASSIFICATION	9.013683532268602E-7	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999993651078604	WITHOUT_CLASSIFICATION	6.348921396811402E-7	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9999991165423491	WITHOUT_CLASSIFICATION	8.834576509550256E-7	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999997799140538	WITHOUT_CLASSIFICATION	2.2008594636194524E-7	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999998613951301	WITHOUT_CLASSIFICATION	1.3860486991492144E-7	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999655422	WITHOUT_CLASSIFICATION	3.445782873174486E-11	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999655422	WITHOUT_CLASSIFICATION	3.445782873174486E-11	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999999844087669	WITHOUT_CLASSIFICATION	1.5591233029120806E-8	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999999182041361	WITHOUT_CLASSIFICATION	8.179586390770569E-8	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999999980078119	WITHOUT_CLASSIFICATION	1.992188126449912E-9	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999999938108585	WITHOUT_CLASSIFICATION	6.189141491594654E-9	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999983676744383	WITHOUT_CLASSIFICATION	1.6323255617050672E-6	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9999996949068939	WITHOUT_CLASSIFICATION	3.0509310607767364E-7	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9999997050356113	WITHOUT_CLASSIFICATION	2.949643887812503E-7	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999511234395893	WITHOUT_CLASSIFICATION	4.887656041068363E-5	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999928926015257	WITHOUT_CLASSIFICATION	7.10739847425544E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999999583043847	WITHOUT_CLASSIFICATION	4.1695615298164963E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999999583043847	WITHOUT_CLASSIFICATION	4.1695615298164963E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999999583043847	WITHOUT_CLASSIFICATION	4.1695615298164963E-7	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998617677757762	WITHOUT_CLASSIFICATION	1.3823222422383062E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998617677757762	WITHOUT_CLASSIFICATION	1.3823222422383062E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998617677757762	WITHOUT_CLASSIFICATION	1.3823222422383062E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998617677757762	WITHOUT_CLASSIFICATION	1.3823222422383062E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998617677757762	WITHOUT_CLASSIFICATION	1.3823222422383062E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998617677757762	WITHOUT_CLASSIFICATION	1.3823222422383062E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998617677757762	WITHOUT_CLASSIFICATION	1.3823222422383062E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998617677757762	WITHOUT_CLASSIFICATION	1.3823222422383062E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998617677757762	WITHOUT_CLASSIFICATION	1.3823222422383062E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999903678306	WITHOUT_CLASSIFICATION	9.632169408566629E-9	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999557960524289	WITHOUT_CLASSIFICATION	4.4203947571116546E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999999615910445	WITHOUT_CLASSIFICATION	3.840895548011299E-8	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999999952042448	WITHOUT_CLASSIFICATION	4.795755253054128E-9	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998617677757762	WITHOUT_CLASSIFICATION	1.3823222422383062E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998617677757762	WITHOUT_CLASSIFICATION	1.3823222422383062E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998617677757762	WITHOUT_CLASSIFICATION	1.3823222422383062E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999880233594	WITHOUT_CLASSIFICATION	1.1976640488361575E-8	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.999999967606328	WITHOUT_CLASSIFICATION	3.239367199567475E-8	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999873932916314	WITHOUT_CLASSIFICATION	1.2606708368519108E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9997383352142946	WITHOUT_CLASSIFICATION	2.61664785705446E-4	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9997383352142946	WITHOUT_CLASSIFICATION	2.61664785705446E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999998745889437	WITHOUT_CLASSIFICATION	1.2541105623110026E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9998814694557498	WITHOUT_CLASSIFICATION	1.1853054425018598E-4	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999999946616663	WITHOUT_CLASSIFICATION	5.3383337252058584E-9	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999999894234496	WITHOUT_CLASSIFICATION	1.0576550400975494E-8	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.999996828475044	WITHOUT_CLASSIFICATION	3.1715249560727664E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.999996828475044	WITHOUT_CLASSIFICATION	3.1715249560727664E-6	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999894941936539	WITHOUT_CLASSIFICATION	1.050580634607756E-5	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.999999997880006	WITHOUT_CLASSIFICATION	2.1199939460939996E-9	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999997391163632	WITHOUT_CLASSIFICATION	2.6088363681050555E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.999995520633678	WITHOUT_CLASSIFICATION	4.479366321974889E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.999995520633678	WITHOUT_CLASSIFICATION	4.479366321974889E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.999995520633678	WITHOUT_CLASSIFICATION	4.479366321974889E-6	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.999999540130879	WITHOUT_CLASSIFICATION	4.5986912103040916E-7	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999947096416	WITHOUT_CLASSIFICATION	5.290358348693292E-9	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999947096416	WITHOUT_CLASSIFICATION	5.290358348693292E-9	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999996024813868	WITHOUT_CLASSIFICATION	3.9751861329794095E-7	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999996024813868	WITHOUT_CLASSIFICATION	3.9751861329794095E-7	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999999192945297	WITHOUT_CLASSIFICATION	8.070547030728971E-8	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999930655186869	WITHOUT_CLASSIFICATION	6.9344813130340665E-6	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.999999873686577	WITHOUT_CLASSIFICATION	1.263134230988423E-7	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999997112628034	WITHOUT_CLASSIFICATION	2.887371966255088E-7	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999994288114656	WITHOUT_CLASSIFICATION	5.71188534262665E-7	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.999999971961105	WITHOUT_CLASSIFICATION	2.8038894902185436E-8	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999992790578565	WITHOUT_CLASSIFICATION	7.20942143534184E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998942343551	WITHOUT_CLASSIFICATION	1.0576564496196545E-7	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999999844359387	WITHOUT_CLASSIFICATION	1.5564061272191307E-8	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999999985215	WITHOUT_CLASSIFICATION	1.4784495530333836E-12	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.8887951038359365	WITHOUT_CLASSIFICATION	0.1112048961640635	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999984540286383	WITHOUT_CLASSIFICATION	1.5459713616598921E-6	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999994146147881	WITHOUT_CLASSIFICATION	5.85385211829401E-7	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999985413665337	WITHOUT_CLASSIFICATION	1.4586334662579905E-6	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999895490038299	WITHOUT_CLASSIFICATION	1.0450996170143938E-5	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999999994858527	WITHOUT_CLASSIFICATION	5.141472641613172E-10	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999998842182342	WITHOUT_CLASSIFICATION	1.1578176582088781E-7	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.999999908960532	WITHOUT_CLASSIFICATION	9.103946796327322E-8	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.999999996304267	WITHOUT_CLASSIFICATION	3.6957331413735975E-9	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999993488492226	WITHOUT_CLASSIFICATION	6.511507774294677E-7	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999997136139	WITHOUT_CLASSIFICATION	2.8638606694530347E-10	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999914337512458	WITHOUT_CLASSIFICATION	8.566248754271441E-6	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999999793858422	WITHOUT_CLASSIFICATION	2.061415787655997E-8	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999960478630029	WITHOUT_CLASSIFICATION	3.952136997123144E-6	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999994640380052	WITHOUT_CLASSIFICATION	5.359619948286095E-7	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999998797878948	WITHOUT_CLASSIFICATION	1.2021210504764243E-7	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999995510750721	WITHOUT_CLASSIFICATION	4.489249279009196E-7	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999999992706997	WITHOUT_CLASSIFICATION	7.293001826975354E-10	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999999580168254	WITHOUT_CLASSIFICATION	4.198317454375525E-8	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999998658698708	WITHOUT_CLASSIFICATION	1.341301291756098E-7	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999995763206355	WITHOUT_CLASSIFICATION	4.2367936439016663E-7	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999999975403636	WITHOUT_CLASSIFICATION	2.4596364744944133E-9	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999992717653285	WITHOUT_CLASSIFICATION	7.282346715221651E-7	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999999979631063	WITHOUT_CLASSIFICATION	2.0368936336064126E-9	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999983650373724	WITHOUT_CLASSIFICATION	1.6349626276393266E-6	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999999996211637	WITHOUT_CLASSIFICATION	3.7883630194778707E-10	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.999999995851205	WITHOUT_CLASSIFICATION	4.148794975878538E-9	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999999762674924	WITHOUT_CLASSIFICATION	2.373250761133579E-8	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999999894549806	WITHOUT_CLASSIFICATION	1.0545019504479432E-8	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999956401089	WITHOUT_CLASSIFICATION	4.359891131408088E-9	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999999858475045	WITHOUT_CLASSIFICATION	1.4152495548760326E-8	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999999936232301	WITHOUT_CLASSIFICATION	6.376769923078786E-9	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999999987774613	WITHOUT_CLASSIFICATION	1.2225386779029556E-9	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999999990112942	WITHOUT_CLASSIFICATION	9.887057973640336E-10	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999996304420512	WITHOUT_CLASSIFICATION	3.695579487478797E-7	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999766677057526	WITHOUT_CLASSIFICATION	2.3332294247450227E-5	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9999999515065253	WITHOUT_CLASSIFICATION	4.849347468398385E-8	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999953090009	WITHOUT_CLASSIFICATION	4.690999214111948E-9	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999930321469	WITHOUT_CLASSIFICATION	6.96785308446677E-9	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999996409145108	WITHOUT_CLASSIFICATION	3.590854892420647E-7	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999997100023981	WITHOUT_CLASSIFICATION	2.8999760200365237E-7	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999970341877081	WITHOUT_CLASSIFICATION	2.965812291782409E-6	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999970341877081	WITHOUT_CLASSIFICATION	2.965812291782409E-6	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999995652696	WITHOUT_CLASSIFICATION	4.3473038065923766E-10	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999995652696	WITHOUT_CLASSIFICATION	4.3473038065923766E-10	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998616296034104	WITHOUT_CLASSIFICATION	1.383703965896438E-4	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998616296034104	WITHOUT_CLASSIFICATION	1.383703965896438E-4	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999995088726933	WITHOUT_CLASSIFICATION	4.911273066376644E-7	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999995088726933	WITHOUT_CLASSIFICATION	4.911273066376644E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998369718345	WITHOUT_CLASSIFICATION	1.6302816540531052E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998369718345	WITHOUT_CLASSIFICATION	1.6302816540531052E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998369718345	WITHOUT_CLASSIFICATION	1.6302816540531052E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998369718345	WITHOUT_CLASSIFICATION	1.6302816540531052E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998369718345	WITHOUT_CLASSIFICATION	1.6302816540531052E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998369718345	WITHOUT_CLASSIFICATION	1.6302816540531052E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998369718345	WITHOUT_CLASSIFICATION	1.6302816540531052E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998369718345	WITHOUT_CLASSIFICATION	1.6302816540531052E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999998369718345	WITHOUT_CLASSIFICATION	1.6302816540531052E-7	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999727066196	WITHOUT_CLASSIFICATION	2.7293380389607545E-8	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999727066196	WITHOUT_CLASSIFICATION	2.7293380389607545E-8	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999727066196	WITHOUT_CLASSIFICATION	2.7293380389607545E-8	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999971824822345	WITHOUT_CLASSIFICATION	2.817517765553474E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992425594818	WITHOUT_CLASSIFICATION	7.57440518165033E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992425594818	WITHOUT_CLASSIFICATION	7.57440518165033E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992425594818	WITHOUT_CLASSIFICATION	7.57440518165033E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999302466432	WITHOUT_CLASSIFICATION	6.975335680860948E-8	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999302466432	WITHOUT_CLASSIFICATION	6.975335680860948E-8	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999302466432	WITHOUT_CLASSIFICATION	6.975335680860948E-8	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999992838795522	WITHOUT_CLASSIFICATION	7.161204478322164E-7	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9999992410578429	WITHOUT_CLASSIFICATION	7.589421572632281E-7	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.999952405896629	WITHOUT_CLASSIFICATION	4.759410337094955E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998938913798068	WITHOUT_CLASSIFICATION	1.0610862019328209E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998938913798068	WITHOUT_CLASSIFICATION	1.0610862019328209E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998938913798068	WITHOUT_CLASSIFICATION	1.0610862019328209E-4	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999999818558764	WITHOUT_CLASSIFICATION	1.814412372204722E-8	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.999999508811832	WITHOUT_CLASSIFICATION	4.91188167942068E-7	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.999999508811832	WITHOUT_CLASSIFICATION	4.91188167942068E-7	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999999408297172	WITHOUT_CLASSIFICATION	5.9170282812043343E-8	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999999475928772	WITHOUT_CLASSIFICATION	5.2407122751181415E-8	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999999475928772	WITHOUT_CLASSIFICATION	5.2407122751181415E-8	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9981272909680534	IMPLEMENTATION	0.001872709031946591	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.6253362813684044	WITHOUT_CLASSIFICATION	0.3746637186315957	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999991398437962	WITHOUT_CLASSIFICATION	8.601562037408135E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999907917041	WITHOUT_CLASSIFICATION	9.20829584999134E-9	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999907917041	WITHOUT_CLASSIFICATION	9.20829584999134E-9	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.99999756104989	WITHOUT_CLASSIFICATION	2.438950109894264E-6	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999999999677556	WITHOUT_CLASSIFICATION	3.224441514252738E-11	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999999366227805	WITHOUT_CLASSIFICATION	6.337721951295248E-8	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999986059336853	WITHOUT_CLASSIFICATION	1.3940663148240018E-6	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999994652957498	WITHOUT_CLASSIFICATION	5.347042502035405E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999907917041	WITHOUT_CLASSIFICATION	9.20829584999134E-9	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999907917041	WITHOUT_CLASSIFICATION	9.20829584999134E-9	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999907917041	WITHOUT_CLASSIFICATION	9.20829584999134E-9	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999907917041	WITHOUT_CLASSIFICATION	9.20829584999134E-9	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999907917041	WITHOUT_CLASSIFICATION	9.20829584999134E-9	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.999999326507801	WITHOUT_CLASSIFICATION	6.734921989005734E-7	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999970930219613	WITHOUT_CLASSIFICATION	2.906978038688218E-6	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999991539387	WITHOUT_CLASSIFICATION	8.460613339847856E-10	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999999285664372	WITHOUT_CLASSIFICATION	7.143356288404314E-8	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.999999997757933	WITHOUT_CLASSIFICATION	2.242066911339169E-9	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9981212780285542	WITHOUT_CLASSIFICATION	0.001878721971445709	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999999994078088	WITHOUT_CLASSIFICATION	5.921911090437097E-10	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.999999979168456	WITHOUT_CLASSIFICATION	2.0831544052360282E-8	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999870953207	WITHOUT_CLASSIFICATION	1.2904679338663543E-8	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999999617974694	WITHOUT_CLASSIFICATION	3.8202530540456245E-8	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999881266874	WITHOUT_CLASSIFICATION	1.1873312538587337E-8	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999973012836342	WITHOUT_CLASSIFICATION	2.698716365820747E-6	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999999772745479	WITHOUT_CLASSIFICATION	2.272545206166069E-8	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999985123450025	WITHOUT_CLASSIFICATION	1.4876549975039728E-6	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999996662502532	WITHOUT_CLASSIFICATION	3.3374974685622205E-7	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.992941224448242	WITHOUT_CLASSIFICATION	0.007058775551758077	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999984245139325	WITHOUT_CLASSIFICATION	1.5754860673969761E-6	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999971286777167	WITHOUT_CLASSIFICATION	2.871322283291833E-6	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999999319316901	WITHOUT_CLASSIFICATION	6.806830986563164E-8	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999968175693	WITHOUT_CLASSIFICATION	3.1824306442792507E-9	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999999809708969	WITHOUT_CLASSIFICATION	1.9029103091046553E-8	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999999948413729	WITHOUT_CLASSIFICATION	5.158627087636641E-9	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999987947116658	WITHOUT_CLASSIFICATION	1.2052883342526493E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999998035972425	WITHOUT_CLASSIFICATION	1.9640275759899513E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999998035972425	WITHOUT_CLASSIFICATION	1.9640275759899513E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999998035972425	WITHOUT_CLASSIFICATION	1.9640275759899513E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999998035972425	WITHOUT_CLASSIFICATION	1.9640275759899513E-7	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999998116858456	WITHOUT_CLASSIFICATION	1.883141543382573E-7	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999918554961017	WITHOUT_CLASSIFICATION	8.144503898370272E-6	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999999607544076	WITHOUT_CLASSIFICATION	3.9245592443989354E-8	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999999607544076	WITHOUT_CLASSIFICATION	3.9245592443989354E-8	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999937147998	WITHOUT_CLASSIFICATION	6.285200209396867E-9	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999966441977	WITHOUT_CLASSIFICATION	3.355802281117718E-9	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999962717774	WITHOUT_CLASSIFICATION	3.728222621130771E-9	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999993942807	WITHOUT_CLASSIFICATION	6.057191931906793E-10	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999999718771871	WITHOUT_CLASSIFICATION	2.8122812765495047E-8	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999797047681078	WITHOUT_CLASSIFICATION	2.0295231892186708E-5	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999983394778975	WITHOUT_CLASSIFICATION	1.6605221025404506E-6	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999996197695108	WITHOUT_CLASSIFICATION	3.8023048919298887E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999996197695108	WITHOUT_CLASSIFICATION	3.8023048919298887E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999996197695108	WITHOUT_CLASSIFICATION	3.8023048919298887E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999996197695108	WITHOUT_CLASSIFICATION	3.8023048919298887E-7	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.999999964043483	WITHOUT_CLASSIFICATION	3.5956516954820815E-8	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999999205654	WITHOUT_CLASSIFICATION	7.943457956093116E-11	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999999205654	WITHOUT_CLASSIFICATION	7.943457956093116E-11	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999999205654	WITHOUT_CLASSIFICATION	7.943457956093116E-11	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999999398945879	WITHOUT_CLASSIFICATION	6.010541206638692E-8	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999999385531828	WITHOUT_CLASSIFICATION	6.144681721728914E-8	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.99998740027181	WITHOUT_CLASSIFICATION	1.259972818994445E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5887280554955185	WITHOUT_CLASSIFICATION	0.4112719445044815	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5887280554955185	WITHOUT_CLASSIFICATION	0.4112719445044815	IMPLEMENTATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999998269130524	WITHOUT_CLASSIFICATION	1.730869475710173E-7	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.999999818940517	WITHOUT_CLASSIFICATION	1.8105948301929542E-7	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999993223598206	WITHOUT_CLASSIFICATION	6.776401794455047E-7	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999993223598206	WITHOUT_CLASSIFICATION	6.776401794455047E-7	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999997020135228	WITHOUT_CLASSIFICATION	2.9798647715607685E-7	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999997020135228	WITHOUT_CLASSIFICATION	2.9798647715607685E-7	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999999966278936	WITHOUT_CLASSIFICATION	3.3721064004101744E-9	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9997130162218097	WITHOUT_CLASSIFICATION	2.869837781902398E-4	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999999981579241	WITHOUT_CLASSIFICATION	1.8420758971066139E-9	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999998108731897	WITHOUT_CLASSIFICATION	1.8912681043258478E-7	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999374861706	WITHOUT_CLASSIFICATION	6.251382951343475E-8	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999995948220373	WITHOUT_CLASSIFICATION	4.051779627594447E-7	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999983752715	WITHOUT_CLASSIFICATION	1.6247284069985917E-9	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999999962238565	WITHOUT_CLASSIFICATION	3.776143536395119E-9	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999999975677218	WITHOUT_CLASSIFICATION	2.4322781705723425E-9	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999820988056	WITHOUT_CLASSIFICATION	1.7901194411168316E-8	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999820988056	WITHOUT_CLASSIFICATION	1.7901194411168316E-8	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999997346273485	WITHOUT_CLASSIFICATION	2.653726514726553E-7	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999997346273485	WITHOUT_CLASSIFICATION	2.653726514726553E-7	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999991133106922	WITHOUT_CLASSIFICATION	8.866893078628601E-7	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999995266919043	WITHOUT_CLASSIFICATION	4.733080957561654E-7	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999983410244984	WITHOUT_CLASSIFICATION	1.6589755017257402E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999996115836448	WITHOUT_CLASSIFICATION	3.8841635517383884E-7	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999996115836448	WITHOUT_CLASSIFICATION	3.8841635517383884E-7	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999996115836448	WITHOUT_CLASSIFICATION	3.8841635517383884E-7	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9999993128382186	WITHOUT_CLASSIFICATION	6.871617813566416E-7	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9999996023531861	WITHOUT_CLASSIFICATION	3.976468138708347E-7	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9999995200034483	WITHOUT_CLASSIFICATION	4.79996551744123E-7	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9999998920023728	WITHOUT_CLASSIFICATION	1.0799762713370907E-7	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9999996730332946	WITHOUT_CLASSIFICATION	3.2696670548601965E-7	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999997402293068	WITHOUT_CLASSIFICATION	2.5977069315196504E-7	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9999989810339084	WITHOUT_CLASSIFICATION	1.0189660916027775E-6	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9999986690254128	WITHOUT_CLASSIFICATION	1.330974587159759E-6	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999771433953079	WITHOUT_CLASSIFICATION	2.285660469214413E-5	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999972496500951	WITHOUT_CLASSIFICATION	2.750349905016244E-6	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999880990684902	WITHOUT_CLASSIFICATION	1.1900931509850129E-5	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999998388375212	WITHOUT_CLASSIFICATION	1.6116247880626854E-7	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999999996776571	WITHOUT_CLASSIFICATION	3.2234292651456806E-10	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5887280554955185	WITHOUT_CLASSIFICATION	0.4112719445044815	IMPLEMENTATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999992288682822	WITHOUT_CLASSIFICATION	7.711317178369511E-7	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999997731596203	WITHOUT_CLASSIFICATION	2.2684037968257121E-7	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999999957254601	WITHOUT_CLASSIFICATION	4.27453996070067E-9	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999980678053574	WITHOUT_CLASSIFICATION	1.932194642585893E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999980678053574	WITHOUT_CLASSIFICATION	1.932194642585893E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999980678053574	WITHOUT_CLASSIFICATION	1.932194642585893E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999980678053574	WITHOUT_CLASSIFICATION	1.932194642585893E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999980678053574	WITHOUT_CLASSIFICATION	1.932194642585893E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999994020666815	WITHOUT_CLASSIFICATION	5.979333184697464E-7	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999980678053574	WITHOUT_CLASSIFICATION	1.932194642585893E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999980678053574	WITHOUT_CLASSIFICATION	1.932194642585893E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999980678053574	WITHOUT_CLASSIFICATION	1.932194642585893E-6	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999973709430374	WITHOUT_CLASSIFICATION	2.62905696256805E-6	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.999965509631245	WITHOUT_CLASSIFICATION	3.449036875506621E-5	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999995870455125	WITHOUT_CLASSIFICATION	4.12954487552567E-7	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999999949639774	WITHOUT_CLASSIFICATION	5.036022572983338E-9	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999999047955391	WITHOUT_CLASSIFICATION	9.520446095083573E-8	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999981339617524	WITHOUT_CLASSIFICATION	1.866038247533205E-6	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999999934591537	WITHOUT_CLASSIFICATION	6.540846319527157E-9	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9999998724729715	WITHOUT_CLASSIFICATION	1.2752702854351655E-7	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999992776868136	WITHOUT_CLASSIFICATION	7.223131863885715E-7	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999992776868136	WITHOUT_CLASSIFICATION	7.223131863885715E-7	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9999996881081323	WITHOUT_CLASSIFICATION	3.118918677422644E-7	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9999994457829334	WITHOUT_CLASSIFICATION	5.542170664936669E-7	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999985346533373	WITHOUT_CLASSIFICATION	1.465346662707014E-6	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9999997645840172	WITHOUT_CLASSIFICATION	2.35415982828455E-7	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999998643097103	WITHOUT_CLASSIFICATION	1.3569028969079622E-7	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9999996627812927	WITHOUT_CLASSIFICATION	3.372187073402952E-7	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9999995368688002	WITHOUT_CLASSIFICATION	4.6313119988614607E-7	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999995574443605	WITHOUT_CLASSIFICATION	4.425556395385661E-7	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999995797661845	WITHOUT_CLASSIFICATION	4.2023381552910397E-7	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.999999734476498	WITHOUT_CLASSIFICATION	2.65523502063586E-7	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9999996640887026	WITHOUT_CLASSIFICATION	3.359112974569559E-7	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.999999624156637	WITHOUT_CLASSIFICATION	3.7584336300436363E-7	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999994109889457	WITHOUT_CLASSIFICATION	5.890110541455335E-7	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999994608400915	WITHOUT_CLASSIFICATION	5.391599085254108E-7	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9999993363465014	WITHOUT_CLASSIFICATION	6.636534986200747E-7	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9999992795305827	WITHOUT_CLASSIFICATION	7.204694173717205E-7	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.999999279591001	WITHOUT_CLASSIFICATION	7.204089990039785E-7	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.999998807758633	WITHOUT_CLASSIFICATION	1.1922413669935806E-6	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9999996018721619	WITHOUT_CLASSIFICATION	3.9812783808299904E-7	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.9999998255207417	WITHOUT_CLASSIFICATION	1.7447925822182662E-7	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9999998222696862	WITHOUT_CLASSIFICATION	1.7773031384468258E-7	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999998199816744	WITHOUT_CLASSIFICATION	1.8001832553230711E-7	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9999984843425052	WITHOUT_CLASSIFICATION	1.5156574948593991E-6	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9999995100579641	WITHOUT_CLASSIFICATION	4.899420359150819E-7	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9999996308930849	WITHOUT_CLASSIFICATION	3.6910691512585515E-7	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999994822114491	WITHOUT_CLASSIFICATION	5.177885509047371E-7	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9999995384977277	WITHOUT_CLASSIFICATION	4.615022722920753E-7	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.99999947419536	WITHOUT_CLASSIFICATION	5.258046400254957E-7	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.999999561880063	WITHOUT_CLASSIFICATION	4.3811993700950603E-7	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999997142759379	WITHOUT_CLASSIFICATION	2.8572406203083704E-7	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999996860923306	WITHOUT_CLASSIFICATION	3.139076693834237E-7	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999991656934889	WITHOUT_CLASSIFICATION	8.343065111550887E-7	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9999992381309682	WITHOUT_CLASSIFICATION	7.618690316399894E-7	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9999989641344507	WITHOUT_CLASSIFICATION	1.035865549309982E-6	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9999996015347334	WITHOUT_CLASSIFICATION	3.984652665324088E-7	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999998055654584	WITHOUT_CLASSIFICATION	1.9443454153385158E-7	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.999999304983816	WITHOUT_CLASSIFICATION	6.950161840538035E-7	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999987830564847	WITHOUT_CLASSIFICATION	1.2169435153634884E-6	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.9999993192906622	WITHOUT_CLASSIFICATION	6.807093378183507E-7	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9999994372443085	WITHOUT_CLASSIFICATION	5.62755691476255E-7	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9999996093818269	WITHOUT_CLASSIFICATION	3.906181731102368E-7	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999997481271271	WITHOUT_CLASSIFICATION	2.518728728893065E-7	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9999994362192058	WITHOUT_CLASSIFICATION	5.637807941392504E-7	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9999989323055565	WITHOUT_CLASSIFICATION	1.0676944434849217E-6	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9999987627813828	WITHOUT_CLASSIFICATION	1.2372186172878566E-6	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999985535270114	WITHOUT_CLASSIFICATION	1.446472988580478E-6	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999990487279848	WITHOUT_CLASSIFICATION	9.51272015079948E-7	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9999992558385085	WITHOUT_CLASSIFICATION	7.44161491654136E-7	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.999999541229111	WITHOUT_CLASSIFICATION	4.58770888945585E-7	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999991956706042	WITHOUT_CLASSIFICATION	8.043293958118916E-7	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9999994922906112	WITHOUT_CLASSIFICATION	5.077093887522746E-7	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9999996130889524	WITHOUT_CLASSIFICATION	3.8691104767222287E-7	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.9999995339772358	WITHOUT_CLASSIFICATION	4.6602276415354093E-7	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.99999933838456	WITHOUT_CLASSIFICATION	6.616154400693845E-7	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.99999933838456	WITHOUT_CLASSIFICATION	6.616154400693845E-7	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999989408876774	WITHOUT_CLASSIFICATION	1.0591123226458183E-6	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9999996879249746	WITHOUT_CLASSIFICATION	3.1207502540441623E-7	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9999991648594865	WITHOUT_CLASSIFICATION	8.35140513544639E-7	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9999996218171953	WITHOUT_CLASSIFICATION	3.7818280477439677E-7	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.999997247083988	WITHOUT_CLASSIFICATION	2.7529160121376954E-6	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999994351111513	WITHOUT_CLASSIFICATION	5.648888486927944E-7	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999991046179322	WITHOUT_CLASSIFICATION	8.953820679686483E-7	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9999992507448477	WITHOUT_CLASSIFICATION	7.492551522822635E-7	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999996415770221	WITHOUT_CLASSIFICATION	3.5842297788876774E-7	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.999998899253263	WITHOUT_CLASSIFICATION	1.1007467369932902E-6	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999902040534657	WITHOUT_CLASSIFICATION	9.79594653427665E-6	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999902040534657	WITHOUT_CLASSIFICATION	9.79594653427665E-6	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999995123110361	WITHOUT_CLASSIFICATION	4.876889638414076E-7	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999958166516537	WITHOUT_CLASSIFICATION	4.183348346295295E-6	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999540989951609	WITHOUT_CLASSIFICATION	4.590100483914993E-5	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999998793487	WITHOUT_CLASSIFICATION	1.2065121075395239E-10	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999998565102264	WITHOUT_CLASSIFICATION	1.4348977374173645E-7	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999998565102264	WITHOUT_CLASSIFICATION	1.4348977374173645E-7	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999998565102264	WITHOUT_CLASSIFICATION	1.4348977374173645E-7	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999998565102264	WITHOUT_CLASSIFICATION	1.4348977374173645E-7	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9872463719109573	WITHOUT_CLASSIFICATION	0.012753628089042707	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.999999940705104	WITHOUT_CLASSIFICATION	5.929489604349899E-8	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9999993276479429	WITHOUT_CLASSIFICATION	6.723520572040058E-7	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9999995179069096	WITHOUT_CLASSIFICATION	4.82093090428367E-7	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.999998833532038	WITHOUT_CLASSIFICATION	1.1664679620260624E-6	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9999994201334499	WITHOUT_CLASSIFICATION	5.798665500890921E-7	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9999990678770982	WITHOUT_CLASSIFICATION	9.321229017598463E-7	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9999998507589497	WITHOUT_CLASSIFICATION	1.492410503722198E-7	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9999998383705565	WITHOUT_CLASSIFICATION	1.616294434018186E-7	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9999993856425319	WITHOUT_CLASSIFICATION	6.143574681362278E-7	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.999999553868262	WITHOUT_CLASSIFICATION	4.4613173804783967E-7	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9999998023358562	WITHOUT_CLASSIFICATION	1.976641439569496E-7	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9999991572167134	WITHOUT_CLASSIFICATION	8.427832867219596E-7	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9999995269629408	WITHOUT_CLASSIFICATION	4.7303705925218477E-7	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9999994104061197	WITHOUT_CLASSIFICATION	5.895938802834683E-7	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9999998146998222	WITHOUT_CLASSIFICATION	1.8530017778113622E-7	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.999999536724436	WITHOUT_CLASSIFICATION	4.632755640862316E-7	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.999999079408776	WITHOUT_CLASSIFICATION	9.205912240537654E-7	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9999996381849656	WITHOUT_CLASSIFICATION	3.618150344430231E-7	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9999994855437173	WITHOUT_CLASSIFICATION	5.144562826931916E-7	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9999997872555659	WITHOUT_CLASSIFICATION	2.1274443393825535E-7	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9999997278647177	WITHOUT_CLASSIFICATION	2.721352822940596E-7	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9999996738474167	WITHOUT_CLASSIFICATION	3.261525832877085E-7	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9999994234457056	WITHOUT_CLASSIFICATION	5.765542944775126E-7	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9999997727157143	WITHOUT_CLASSIFICATION	2.272842857214858E-7	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9999996076591531	WITHOUT_CLASSIFICATION	3.923408469215483E-7	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9999998683414757	WITHOUT_CLASSIFICATION	1.3165852433199578E-7	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9999988808533502	WITHOUT_CLASSIFICATION	1.1191466498248504E-6	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9999995455883623	WITHOUT_CLASSIFICATION	4.5441163761405374E-7	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9999991592524299	WITHOUT_CLASSIFICATION	8.407475700555575E-7	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.999998764044259	WITHOUT_CLASSIFICATION	1.2359557409215194E-6	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9999996098819175	WITHOUT_CLASSIFICATION	3.9011808254087313E-7	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9999988616629343	WITHOUT_CLASSIFICATION	1.1383370657928826E-6	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9999994354374196	WITHOUT_CLASSIFICATION	5.645625802869819E-7	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9999991382011119	WITHOUT_CLASSIFICATION	8.617988880242267E-7	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9999991832969595	WITHOUT_CLASSIFICATION	8.167030405134963E-7	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9999990376551136	WITHOUT_CLASSIFICATION	9.62344886440115E-7	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9999989383341944	WITHOUT_CLASSIFICATION	1.061665805634259E-6	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9999996024055705	WITHOUT_CLASSIFICATION	3.9759442943959785E-7	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9999991428285627	WITHOUT_CLASSIFICATION	8.571714373007844E-7	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.9999997089452088	WITHOUT_CLASSIFICATION	2.910547911054888E-7	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9999990120946812	WITHOUT_CLASSIFICATION	9.879053187990052E-7	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9999990543714268	WITHOUT_CLASSIFICATION	9.456285732005207E-7	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9999992220467688	WITHOUT_CLASSIFICATION	7.779532312096037E-7	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9999987781263112	WITHOUT_CLASSIFICATION	1.2218736887472903E-6	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9999979509519943	WITHOUT_CLASSIFICATION	2.0490480057539395E-6	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9999990161990897	WITHOUT_CLASSIFICATION	9.838009103982888E-7	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9999986808729411	WITHOUT_CLASSIFICATION	1.3191270589110078E-6	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9999992344513787	WITHOUT_CLASSIFICATION	7.655486212192669E-7	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9999994536810115	WITHOUT_CLASSIFICATION	5.463189884934905E-7	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9999990553747617	WITHOUT_CLASSIFICATION	9.446252382296542E-7	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9999991331667902	WITHOUT_CLASSIFICATION	8.668332098555461E-7	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9999992829174378	WITHOUT_CLASSIFICATION	7.170825621577348E-7	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9999986037184124	WITHOUT_CLASSIFICATION	1.3962815875552067E-6	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9999982843073447	WITHOUT_CLASSIFICATION	1.7156926552739341E-6	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9999992759298687	WITHOUT_CLASSIFICATION	7.240701312427792E-7	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9999995335556232	WITHOUT_CLASSIFICATION	4.6644437687759356E-7	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.99999949589237	WITHOUT_CLASSIFICATION	5.041076298942459E-7	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9999997585033108	WITHOUT_CLASSIFICATION	2.414966892217638E-7	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999999350415276	WITHOUT_CLASSIFICATION	6.495847240795558E-8	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.999999291581105	WITHOUT_CLASSIFICATION	7.084188950561956E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999999991441909	WITHOUT_CLASSIFICATION	8.558091040297523E-9	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999999991441909	WITHOUT_CLASSIFICATION	8.558091040297523E-9	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999999991441909	WITHOUT_CLASSIFICATION	8.558091040297523E-9	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999999991441909	WITHOUT_CLASSIFICATION	8.558091040297523E-9	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999999991441909	WITHOUT_CLASSIFICATION	8.558091040297523E-9	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999999991441909	WITHOUT_CLASSIFICATION	8.558091040297523E-9	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999999991441909	WITHOUT_CLASSIFICATION	8.558091040297523E-9	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999971899280994	WITHOUT_CLASSIFICATION	2.810071900617494E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999971899280994	WITHOUT_CLASSIFICATION	2.810071900617494E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999971899280994	WITHOUT_CLASSIFICATION	2.810071900617494E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999971899280994	WITHOUT_CLASSIFICATION	2.810071900617494E-6	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999778848661881	WITHOUT_CLASSIFICATION	2.211513381191667E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999778848661881	WITHOUT_CLASSIFICATION	2.211513381191667E-5	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999999949744478	WITHOUT_CLASSIFICATION	5.0255521128181795E-9	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.99999997530421	WITHOUT_CLASSIFICATION	2.469579004630166E-8	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.99999997530421	WITHOUT_CLASSIFICATION	2.469579004630166E-8	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999999344599848	WITHOUT_CLASSIFICATION	6.554001513088535E-8	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999969256224177	WITHOUT_CLASSIFICATION	3.0743775823134085E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999692129342	WITHOUT_CLASSIFICATION	3.0787065880060926E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999692129342	WITHOUT_CLASSIFICATION	3.0787065880060926E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999692129342	WITHOUT_CLASSIFICATION	3.0787065880060926E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999692129342	WITHOUT_CLASSIFICATION	3.0787065880060926E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999692129342	WITHOUT_CLASSIFICATION	3.0787065880060926E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999692129342	WITHOUT_CLASSIFICATION	3.0787065880060926E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999692129342	WITHOUT_CLASSIFICATION	3.0787065880060926E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999787986514	WITHOUT_CLASSIFICATION	2.1201348488639445E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999221818384	WITHOUT_CLASSIFICATION	7.781816162600882E-8	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999176063826659	WITHOUT_CLASSIFICATION	8.239361733409603E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999176063826659	WITHOUT_CLASSIFICATION	8.239361733409603E-5	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999751108506	WITHOUT_CLASSIFICATION	2.4889149403804975E-8	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999988814622264	WITHOUT_CLASSIFICATION	1.1185377736079796E-6	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999988814622264	WITHOUT_CLASSIFICATION	1.1185377736079796E-6	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999998256894996	WITHOUT_CLASSIFICATION	1.7431050039254465E-7	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.6943220311147525	IMPLEMENTATION	0.3056779688852475	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999973804052487	WITHOUT_CLASSIFICATION	2.619594751369653E-6	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999916684984372	WITHOUT_CLASSIFICATION	8.331501562732252E-6	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999999976472066	WITHOUT_CLASSIFICATION	2.352793383511591E-9	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999996539502429	WITHOUT_CLASSIFICATION	3.460497570988179E-7	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999912715966776	WITHOUT_CLASSIFICATION	8.728403322381796E-6	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999999695588043	WITHOUT_CLASSIFICATION	3.044119568896821E-8	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999915855667	WITHOUT_CLASSIFICATION	8.414433276772528E-9	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999977057160938	WITHOUT_CLASSIFICATION	2.2942839061110397E-6	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999999982945036	WITHOUT_CLASSIFICATION	1.7054964587123758E-9	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999908806729135	WITHOUT_CLASSIFICATION	9.119327086444281E-6	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999999822891	WITHOUT_CLASSIFICATION	1.7710884478828732E-11	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999177034182312	WITHOUT_CLASSIFICATION	8.229658176885175E-5	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999467071694992	WITHOUT_CLASSIFICATION	5.329283050071554E-5	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999770124195709	WITHOUT_CLASSIFICATION	2.2987580429072253E-5	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999997913848	WITHOUT_CLASSIFICATION	2.0861531321687383E-10	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998488965946648	WITHOUT_CLASSIFICATION	1.5110340533531946E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999940873362688	WITHOUT_CLASSIFICATION	5.912663731229561E-6	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999940873362688	WITHOUT_CLASSIFICATION	5.912663731229561E-6	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.999997559429365	WITHOUT_CLASSIFICATION	2.4405706349088638E-6	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999891446167	WITHOUT_CLASSIFICATION	1.0855383293473844E-8	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.999999815413367	WITHOUT_CLASSIFICATION	1.8458663298958915E-7	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999986798179094	WITHOUT_CLASSIFICATION	1.3201820905565232E-6	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999932277300085	WITHOUT_CLASSIFICATION	6.772269991485953E-6	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999932277300085	WITHOUT_CLASSIFICATION	6.772269991485953E-6	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999932277300085	WITHOUT_CLASSIFICATION	6.772269991485953E-6	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999717042071733	WITHOUT_CLASSIFICATION	2.829579282671378E-5	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.999995674231309	WITHOUT_CLASSIFICATION	4.325768690958995E-6	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9980547490720739	WITHOUT_CLASSIFICATION	0.0019452509279260584	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999754307382541	WITHOUT_CLASSIFICATION	2.4569261745949962E-5	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999999999497152	WITHOUT_CLASSIFICATION	5.0284791105358905E-11	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999996433200328	WITHOUT_CLASSIFICATION	3.5667996713734737E-7	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999997415181517	WITHOUT_CLASSIFICATION	2.5848184819162135E-7	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999995497341	WITHOUT_CLASSIFICATION	4.502659795201595E-10	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.999899772541213	WITHOUT_CLASSIFICATION	1.0022745878697118E-4	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999998982720333	WITHOUT_CLASSIFICATION	1.0172796678672681E-7	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9999998031330344	WITHOUT_CLASSIFICATION	1.9686696562567634E-7	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.999999223155427	WITHOUT_CLASSIFICATION	7.768445730792817E-7	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.5844183462555662	IMPLEMENTATION	0.41558165374443384	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999988865532158	WITHOUT_CLASSIFICATION	1.1134467842495493E-6	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999999997715516	WITHOUT_CLASSIFICATION	2.2844835031088639E-10	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999999999955992	WITHOUT_CLASSIFICATION	4.4008534348668775E-12	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999994649886685	WITHOUT_CLASSIFICATION	5.350113314891004E-7	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999997412849806	WITHOUT_CLASSIFICATION	2.587150194808435E-7	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9997744827934327	WITHOUT_CLASSIFICATION	2.255172065672948E-4	IMPLEMENTATION
