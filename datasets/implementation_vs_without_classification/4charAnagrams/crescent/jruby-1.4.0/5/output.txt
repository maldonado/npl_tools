// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.579292843359445	WITHOUT_CLASSIFICATION	0.42070715664055514	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.9273570523577052	IMPLEMENTATION	0.0726429476422948	WITHOUT_CLASSIFICATION
// TODO: Someday, enable.	IMPLEMENTATION	0.9051411281141815	IMPLEMENTATION	0.09485887188581861	WITHOUT_CLASSIFICATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.7316840036636564	WITHOUT_CLASSIFICATION	0.26831599633634357	IMPLEMENTATION
// TODO: non-strict option	IMPLEMENTATION	0.8619420892873221	IMPLEMENTATION	0.13805791071267795	WITHOUT_CLASSIFICATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.9005474209027955	IMPLEMENTATION	0.09945257909720455	WITHOUT_CLASSIFICATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.7239288439114714	WITHOUT_CLASSIFICATION	0.27607115608852856	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.5784785606350299	WITHOUT_CLASSIFICATION	0.4215214393649702	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.5784785606350299	WITHOUT_CLASSIFICATION	0.4215214393649702	IMPLEMENTATION
// TODO: pass this in?	IMPLEMENTATION	0.9742276481354336	IMPLEMENTATION	0.025772351864566403	WITHOUT_CLASSIFICATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9604255575024803	WITHOUT_CLASSIFICATION	0.039574442497519687	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.9984090159575852	IMPLEMENTATION	0.0015909840424147975	WITHOUT_CLASSIFICATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.7081232153830926	WITHOUT_CLASSIFICATION	0.29187678461690747	IMPLEMENTATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.877419383441045	WITHOUT_CLASSIFICATION	0.12258061655895498	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.5726426834962548	IMPLEMENTATION	0.4273573165037451	WITHOUT_CLASSIFICATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9329641064061436	WITHOUT_CLASSIFICATION	0.06703589359385641	IMPLEMENTATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9542824623755669	WITHOUT_CLASSIFICATION	0.045717537624433154	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.8531383146489369	IMPLEMENTATION	0.14686168535106311	WITHOUT_CLASSIFICATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.998783939802678	WITHOUT_CLASSIFICATION	0.0012160601973219768	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.5382744580194377	WITHOUT_CLASSIFICATION	0.46172554198056226	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.9553817797491749	IMPLEMENTATION	0.04461822025082509	WITHOUT_CLASSIFICATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.8180995635270635	WITHOUT_CLASSIFICATION	0.18190043647293655	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.9898373934203003	IMPLEMENTATION	0.010162606579699742	WITHOUT_CLASSIFICATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.7373560389810762	IMPLEMENTATION	0.26264396101892384	WITHOUT_CLASSIFICATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.7973845884591328	WITHOUT_CLASSIFICATION	0.20261541154086718	IMPLEMENTATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.6190990323438522	IMPLEMENTATION	0.38090096765614795	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.9964501358161116	IMPLEMENTATION	0.0035498641838883297	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9986921679816986	IMPLEMENTATION	0.0013078320183014245	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.9964501358161116	IMPLEMENTATION	0.0035498641838883297	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9986921679816986	IMPLEMENTATION	0.0013078320183014245	WITHOUT_CLASSIFICATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.997069549268772	IMPLEMENTATION	0.0029304507312279673	WITHOUT_CLASSIFICATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.6005622278922138	WITHOUT_CLASSIFICATION	0.39943777210778614	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.9769431236479512	IMPLEMENTATION	0.023056876352048748	WITHOUT_CLASSIFICATION
// TODO: make threadsafe	IMPLEMENTATION	0.9398485418166744	IMPLEMENTATION	0.06015145818332559	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.8746170435530504	IMPLEMENTATION	0.12538295644694963	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.8746170435530504	IMPLEMENTATION	0.12538295644694963	WITHOUT_CLASSIFICATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.9998388288145525	WITHOUT_CLASSIFICATION	1.6117118544737495E-4	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.9383055931850227	WITHOUT_CLASSIFICATION	0.06169440681497736	IMPLEMENTATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.9380252454767771	IMPLEMENTATION	0.061974754523222826	WITHOUT_CLASSIFICATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.5355774363865707	WITHOUT_CLASSIFICATION	0.4644225636134294	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.5673251204349861	IMPLEMENTATION	0.432674879565014	WITHOUT_CLASSIFICATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.9683963203359769	IMPLEMENTATION	0.031603679664023	WITHOUT_CLASSIFICATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.9730387610300978	WITHOUT_CLASSIFICATION	0.02696123896990224	IMPLEMENTATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.9989295256841964	WITHOUT_CLASSIFICATION	0.0010704743158036845	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.5050923884348095	IMPLEMENTATION	0.49490761156519053	WITHOUT_CLASSIFICATION
// TODO: add trace call?	IMPLEMENTATION	0.9087877564838902	IMPLEMENTATION	0.09121224351610978	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9865121778816697	WITHOUT_CLASSIFICATION	0.01348782211833023	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.995938322568503	WITHOUT_CLASSIFICATION	0.004061677431496945	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.9893966088079664	WITHOUT_CLASSIFICATION	0.010603391192033589	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.7653413061641419	WITHOUT_CLASSIFICATION	0.23465869383585816	IMPLEMENTATION
// FIXME: missing arity check	IMPLEMENTATION	0.9865121778816697	WITHOUT_CLASSIFICATION	0.01348782211833023	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.9930607630707031	WITHOUT_CLASSIFICATION	0.006939236929296892	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.8046961388634336	IMPLEMENTATION	0.19530386113656648	WITHOUT_CLASSIFICATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.77917450217517	WITHOUT_CLASSIFICATION	0.22082549782482985	IMPLEMENTATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.7556033608965379	WITHOUT_CLASSIFICATION	0.24439663910346215	IMPLEMENTATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.5472668517244232	WITHOUT_CLASSIFICATION	0.4527331482755767	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.9583927850129317	WITHOUT_CLASSIFICATION	0.04160721498706823	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.9844009491875348	WITHOUT_CLASSIFICATION	0.01559905081246512	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9680100606185162	WITHOUT_CLASSIFICATION	0.031989939381483715	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9997962438161503	WITHOUT_CLASSIFICATION	2.037561838498227E-4	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.9968470807762495	WITHOUT_CLASSIFICATION	0.003152919223750617	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9973738641064038	IMPLEMENTATION	0.0026261358935962117	WITHOUT_CLASSIFICATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9973738641064038	IMPLEMENTATION	0.0026261358935962117	WITHOUT_CLASSIFICATION
// TODO: validate port as numeric	IMPLEMENTATION	0.7943061631126672	IMPLEMENTATION	0.2056938368873328	WITHOUT_CLASSIFICATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9999963993184131	IMPLEMENTATION	3.6006815869363683E-6	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.6005537684666999	WITHOUT_CLASSIFICATION	0.39944623153330017	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.6806040833341841	IMPLEMENTATION	0.31939591666581585	WITHOUT_CLASSIFICATION
// TODO: deal with varargs	IMPLEMENTATION	0.6806040833341841	IMPLEMENTATION	0.31939591666581585	WITHOUT_CLASSIFICATION
// TODO: other reserved names?	IMPLEMENTATION	0.910912417524499	IMPLEMENTATION	0.08908758247550103	WITHOUT_CLASSIFICATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.5291604836927952	WITHOUT_CLASSIFICATION	0.4708395163072049	IMPLEMENTATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.9558302639783149	IMPLEMENTATION	0.044169736021685106	WITHOUT_CLASSIFICATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.9493453416725907	WITHOUT_CLASSIFICATION	0.050654658327409306	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.9196607600501001	WITHOUT_CLASSIFICATION	0.08033923994989992	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.9196607600501001	WITHOUT_CLASSIFICATION	0.08033923994989992	IMPLEMENTATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.9821295630458396	IMPLEMENTATION	0.017870436954160282	WITHOUT_CLASSIFICATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.8073258900916174	IMPLEMENTATION	0.19267410990838266	WITHOUT_CLASSIFICATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9996819858605425	WITHOUT_CLASSIFICATION	3.180141394575633E-4	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.999739800179346	IMPLEMENTATION	2.601998206538961E-4	WITHOUT_CLASSIFICATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.9856754242424663	IMPLEMENTATION	0.014324575757533677	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.9052030117034844	WITHOUT_CLASSIFICATION	0.09479698829651556	IMPLEMENTATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.9921871142658961	IMPLEMENTATION	0.007812885734103972	WITHOUT_CLASSIFICATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.9995303110141394	WITHOUT_CLASSIFICATION	4.6968898586062497E-4	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9743429259921537	WITHOUT_CLASSIFICATION	0.025657074007846368	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9743429259921537	WITHOUT_CLASSIFICATION	0.025657074007846368	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.9656652637659292	WITHOUT_CLASSIFICATION	0.034334736234070844	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.9144779486712025	WITHOUT_CLASSIFICATION	0.08552205132879759	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9980243246215212	WITHOUT_CLASSIFICATION	0.001975675378478708	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9980243246215212	WITHOUT_CLASSIFICATION	0.001975675378478708	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.7084947233556227	IMPLEMENTATION	0.2915052766443774	WITHOUT_CLASSIFICATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.524597088463214	WITHOUT_CLASSIFICATION	0.4754029115367861	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.524597088463214	WITHOUT_CLASSIFICATION	0.4754029115367861	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.524597088463214	WITHOUT_CLASSIFICATION	0.4754029115367861	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.9934167984728659	IMPLEMENTATION	0.006583201527134077	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.9934167984728659	IMPLEMENTATION	0.006583201527134077	WITHOUT_CLASSIFICATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.9899229407510858	IMPLEMENTATION	0.010077059248914258	WITHOUT_CLASSIFICATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9998920824179919	WITHOUT_CLASSIFICATION	1.0791758200802694E-4	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.9878340470391346	WITHOUT_CLASSIFICATION	0.012165952960865437	IMPLEMENTATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9992981399724905	IMPLEMENTATION	7.018600275094108E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9913366324762815	IMPLEMENTATION	0.008663367523718598	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9913366324762815	IMPLEMENTATION	0.008663367523718598	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9913366324762815	IMPLEMENTATION	0.008663367523718598	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.5673251204349861	IMPLEMENTATION	0.432674879565014	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.5673251204349861	IMPLEMENTATION	0.432674879565014	WITHOUT_CLASSIFICATION
// TODO: check for ascii string	IMPLEMENTATION	0.8989187764087488	IMPLEMENTATION	0.10108122359125125	WITHOUT_CLASSIFICATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.995833038286603	IMPLEMENTATION	0.004166961713396996	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.8746170435530504	IMPLEMENTATION	0.12538295644694963	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.8746170435530504	IMPLEMENTATION	0.12538295644694963	WITHOUT_CLASSIFICATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.8994798966468645	IMPLEMENTATION	0.10052010335313553	WITHOUT_CLASSIFICATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.8568413969685437	WITHOUT_CLASSIFICATION	0.14315860303145633	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9329641064061436	WITHOUT_CLASSIFICATION	0.06703589359385641	IMPLEMENTATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9998574121917706	WITHOUT_CLASSIFICATION	1.4258780822948516E-4	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.996935111517959	IMPLEMENTATION	0.003064888482040997	WITHOUT_CLASSIFICATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.8022532374174142	WITHOUT_CLASSIFICATION	0.1977467625825859	IMPLEMENTATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.9969114346556024	WITHOUT_CLASSIFICATION	0.0030885653443976195	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999343439072276	WITHOUT_CLASSIFICATION	6.565609277241132E-5	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9999949684382032	WITHOUT_CLASSIFICATION	5.031561796741662E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999856451842866	WITHOUT_CLASSIFICATION	1.4354815713410782E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999856451842866	WITHOUT_CLASSIFICATION	1.4354815713410782E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999634469378388	WITHOUT_CLASSIFICATION	3.655306216117009E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999634469378388	WITHOUT_CLASSIFICATION	3.655306216117009E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999584260848702	WITHOUT_CLASSIFICATION	4.1573915129902314E-5	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999999805635246	WITHOUT_CLASSIFICATION	1.943647543563779E-8	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9999954905270253	WITHOUT_CLASSIFICATION	4.509472974751028E-6	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.999995638707032	WITHOUT_CLASSIFICATION	4.361292967940264E-6	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999899639773011	WITHOUT_CLASSIFICATION	1.0036022698906418E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999899639773011	WITHOUT_CLASSIFICATION	1.0036022698906418E-5	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9999960557469847	WITHOUT_CLASSIFICATION	3.944253015280377E-6	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999839123873697	WITHOUT_CLASSIFICATION	1.6087612630318325E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999839123873697	WITHOUT_CLASSIFICATION	1.6087612630318325E-5	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9999582078017738	WITHOUT_CLASSIFICATION	4.1792198226261674E-5	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.999982630827675	WITHOUT_CLASSIFICATION	1.7369172324963123E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999836459963984	WITHOUT_CLASSIFICATION	1.6354003601603475E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999836459963984	WITHOUT_CLASSIFICATION	1.6354003601603475E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999836459963984	WITHOUT_CLASSIFICATION	1.6354003601603475E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999836459963984	WITHOUT_CLASSIFICATION	1.6354003601603475E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999836459963984	WITHOUT_CLASSIFICATION	1.6354003601603475E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999836459963984	WITHOUT_CLASSIFICATION	1.6354003601603475E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999836459963984	WITHOUT_CLASSIFICATION	1.6354003601603475E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999643392179246	WITHOUT_CLASSIFICATION	3.566078207533407E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999643392179246	WITHOUT_CLASSIFICATION	3.566078207533407E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999643392179246	WITHOUT_CLASSIFICATION	3.566078207533407E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999643392179246	WITHOUT_CLASSIFICATION	3.566078207533407E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999643392179246	WITHOUT_CLASSIFICATION	3.566078207533407E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999643392179246	WITHOUT_CLASSIFICATION	3.566078207533407E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999643392179246	WITHOUT_CLASSIFICATION	3.566078207533407E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999530680329957	WITHOUT_CLASSIFICATION	4.6931967004333055E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999530680329957	WITHOUT_CLASSIFICATION	4.6931967004333055E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999530680329957	WITHOUT_CLASSIFICATION	4.6931967004333055E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999530680329957	WITHOUT_CLASSIFICATION	4.6931967004333055E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999530680329957	WITHOUT_CLASSIFICATION	4.6931967004333055E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999530680329957	WITHOUT_CLASSIFICATION	4.6931967004333055E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999902083156802	WITHOUT_CLASSIFICATION	9.791684319772147E-6	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999902083156802	WITHOUT_CLASSIFICATION	9.791684319772147E-6	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999902083156802	WITHOUT_CLASSIFICATION	9.791684319772147E-6	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999902083156802	WITHOUT_CLASSIFICATION	9.791684319772147E-6	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999902083156802	WITHOUT_CLASSIFICATION	9.791684319772147E-6	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999902083156802	WITHOUT_CLASSIFICATION	9.791684319772147E-6	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999843040562711	WITHOUT_CLASSIFICATION	1.5695943728867437E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999843040562711	WITHOUT_CLASSIFICATION	1.5695943728867437E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999843040562711	WITHOUT_CLASSIFICATION	1.5695943728867437E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999843040562711	WITHOUT_CLASSIFICATION	1.5695943728867437E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999843040562711	WITHOUT_CLASSIFICATION	1.5695943728867437E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999843040562711	WITHOUT_CLASSIFICATION	1.5695943728867437E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999843040562711	WITHOUT_CLASSIFICATION	1.5695943728867437E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999906967842582	WITHOUT_CLASSIFICATION	9.303215741749356E-6	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999906967842582	WITHOUT_CLASSIFICATION	9.303215741749356E-6	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999906967842582	WITHOUT_CLASSIFICATION	9.303215741749356E-6	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999906967842582	WITHOUT_CLASSIFICATION	9.303215741749356E-6	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999179042012847	WITHOUT_CLASSIFICATION	8.209579871529118E-5	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999179042012847	WITHOUT_CLASSIFICATION	8.209579871529118E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999980771202435	WITHOUT_CLASSIFICATION	1.922879756491831E-6	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9999979664431695	WITHOUT_CLASSIFICATION	2.033556830551667E-6	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.999961756559109	WITHOUT_CLASSIFICATION	3.824344089101943E-5	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999999641199436	WITHOUT_CLASSIFICATION	3.588005637812528E-8	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.999999629736846	WITHOUT_CLASSIFICATION	3.702631541233912E-7	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999980796476553	WITHOUT_CLASSIFICATION	1.920352344587127E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999980796476553	WITHOUT_CLASSIFICATION	1.920352344587127E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999980796476553	WITHOUT_CLASSIFICATION	1.920352344587127E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999980796476553	WITHOUT_CLASSIFICATION	1.920352344587127E-6	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999980140873688	WITHOUT_CLASSIFICATION	1.9859126312296803E-6	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999993293407314	WITHOUT_CLASSIFICATION	6.706592685617492E-7	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999978991893396	WITHOUT_CLASSIFICATION	2.1008106604201643E-6	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999950793705454	WITHOUT_CLASSIFICATION	4.920629454569437E-6	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.999982894041493	WITHOUT_CLASSIFICATION	1.710595850697275E-5	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999999241986836	WITHOUT_CLASSIFICATION	7.580131646448657E-8	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999990060715769	WITHOUT_CLASSIFICATION	9.939284231371304E-7	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999999648767682	WITHOUT_CLASSIFICATION	3.512323180482792E-8	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999690742043	WITHOUT_CLASSIFICATION	3.0925795694768444E-8	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999943484341698	WITHOUT_CLASSIFICATION	5.651565830179125E-6	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999977190320556	WITHOUT_CLASSIFICATION	2.2809679444673373E-6	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999998774575084	WITHOUT_CLASSIFICATION	1.2254249161391804E-7	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999970474843111	WITHOUT_CLASSIFICATION	2.9525156889177223E-6	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999987266707453	WITHOUT_CLASSIFICATION	1.273329254641768E-6	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999994352223804	WITHOUT_CLASSIFICATION	5.647776195977166E-7	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999963795282981	WITHOUT_CLASSIFICATION	3.6204717018705195E-6	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999868959731352	WITHOUT_CLASSIFICATION	1.3104026864946376E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999980796476553	WITHOUT_CLASSIFICATION	1.920352344587127E-6	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999994495328323	WITHOUT_CLASSIFICATION	5.50467167786714E-7	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999997562681558	WITHOUT_CLASSIFICATION	2.4373184418446577E-7	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999996326660666	WITHOUT_CLASSIFICATION	3.6733393343690173E-7	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999719912757722	WITHOUT_CLASSIFICATION	2.8008724227891864E-5	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999982106430071	WITHOUT_CLASSIFICATION	1.7893569929163554E-6	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.999997674156195	WITHOUT_CLASSIFICATION	2.3258438049211813E-6	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.999994430382567	WITHOUT_CLASSIFICATION	5.5696174329531794E-6	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999940998273824	WITHOUT_CLASSIFICATION	5.900172617644526E-6	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999371189894997	WITHOUT_CLASSIFICATION	6.288101050039051E-5	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999999927253701	WITHOUT_CLASSIFICATION	7.274629815388874E-9	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999985913185531	WITHOUT_CLASSIFICATION	1.40868144691684E-6	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999983430481216	WITHOUT_CLASSIFICATION	1.6569518783662245E-6	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999861673906282	WITHOUT_CLASSIFICATION	1.3832609371909699E-5	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999772502314481	WITHOUT_CLASSIFICATION	2.274976855190919E-5	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999867432036551	WITHOUT_CLASSIFICATION	1.3256796344943723E-5	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999958514631533	WITHOUT_CLASSIFICATION	4.1485368466703955E-6	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9999964154593032	WITHOUT_CLASSIFICATION	3.5845406968412235E-6	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999997781264012	WITHOUT_CLASSIFICATION	2.218735988975896E-7	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999995481448207	WITHOUT_CLASSIFICATION	4.5185517931575737E-7	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999999530152658	WITHOUT_CLASSIFICATION	4.6984734300616845E-8	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999998765427561	WITHOUT_CLASSIFICATION	1.2345724386834864E-7	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999926690360933	WITHOUT_CLASSIFICATION	7.330963906782438E-6	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999996422083388	WITHOUT_CLASSIFICATION	3.5779166113865884E-7	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9999535372544333	WITHOUT_CLASSIFICATION	4.6462745566698E-5	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999901337554287	WITHOUT_CLASSIFICATION	9.866244571368925E-6	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9999880280887835	WITHOUT_CLASSIFICATION	1.197191121648395E-5	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999943919289457	WITHOUT_CLASSIFICATION	5.608071054321849E-6	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999998781438342	WITHOUT_CLASSIFICATION	1.2185616583819375E-7	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999996870784005	WITHOUT_CLASSIFICATION	3.1292159962273894E-7	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.999997681932014	WITHOUT_CLASSIFICATION	2.3180679860274384E-6	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999994622016601	WITHOUT_CLASSIFICATION	5.377983398505949E-7	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999955723771793	WITHOUT_CLASSIFICATION	4.4276228206885395E-6	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999981113432435	WITHOUT_CLASSIFICATION	1.8886567566064727E-6	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999962200231648	WITHOUT_CLASSIFICATION	3.7799768352563157E-6	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999992542547619	WITHOUT_CLASSIFICATION	7.457452380796656E-7	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999858322097059	WITHOUT_CLASSIFICATION	1.4167790294163705E-5	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999999776182846	WITHOUT_CLASSIFICATION	2.2381715473450707E-8	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999998922571944	WITHOUT_CLASSIFICATION	1.0774280558243985E-7	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999715980545474	WITHOUT_CLASSIFICATION	2.8401945452545878E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999996975611427	WITHOUT_CLASSIFICATION	3.024388573089648E-6	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.999998466596655	WITHOUT_CLASSIFICATION	1.5334033450402544E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999972981883981	WITHOUT_CLASSIFICATION	2.7018116018270296E-6	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999904575262214	WITHOUT_CLASSIFICATION	9.542473778534489E-6	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.8530965792765753	WITHOUT_CLASSIFICATION	0.14690342072342466	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.8530965792765753	WITHOUT_CLASSIFICATION	0.14690342072342466	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9992864487893505	WITHOUT_CLASSIFICATION	7.135512106494952E-4	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999999806804485	WITHOUT_CLASSIFICATION	1.931955145519435E-8	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999938977768444	WITHOUT_CLASSIFICATION	6.1022231555716575E-6	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999978762298142	WITHOUT_CLASSIFICATION	2.1237701857717496E-6	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999783696948991	WITHOUT_CLASSIFICATION	2.16303051008463E-5	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999621754552152	WITHOUT_CLASSIFICATION	3.7824544784879625E-5	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9999956770599974	WITHOUT_CLASSIFICATION	4.322940002616508E-6	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9999868123984618	WITHOUT_CLASSIFICATION	1.3187601538305513E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999972981883981	WITHOUT_CLASSIFICATION	2.7018116018270296E-6	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999757244291392	WITHOUT_CLASSIFICATION	2.4275570860807437E-5	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999911501756934	WITHOUT_CLASSIFICATION	8.849824306694447E-6	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999999015850396	WITHOUT_CLASSIFICATION	9.841496045444833E-8	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999981807914419	WITHOUT_CLASSIFICATION	1.8192085581874268E-6	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999993218632437	WITHOUT_CLASSIFICATION	6.781367562222057E-7	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999972343893982	WITHOUT_CLASSIFICATION	2.7656106018007867E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999972343893982	WITHOUT_CLASSIFICATION	2.7656106018007867E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999972343893982	WITHOUT_CLASSIFICATION	2.7656106018007867E-6	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999880145213309	WITHOUT_CLASSIFICATION	1.198547866907201E-5	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999999889392862	WITHOUT_CLASSIFICATION	1.1060713793686169E-8	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999993787674851	WITHOUT_CLASSIFICATION	6.212325149974059E-7	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999999581190561	WITHOUT_CLASSIFICATION	4.188094389182425E-8	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999998718852788	WITHOUT_CLASSIFICATION	1.2811472116048664E-7	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.999999896062519	WITHOUT_CLASSIFICATION	1.0393748088272303E-7	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999915240092832	WITHOUT_CLASSIFICATION	8.475990716832683E-6	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999356513676	WITHOUT_CLASSIFICATION	6.434863239168728E-8	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999991147968503	WITHOUT_CLASSIFICATION	8.852031496799141E-7	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999991147968503	WITHOUT_CLASSIFICATION	8.852031496799141E-7	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999977819595828	WITHOUT_CLASSIFICATION	2.2180404172722874E-6	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999368744517	WITHOUT_CLASSIFICATION	6.312554835575915E-8	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999985157509391	WITHOUT_CLASSIFICATION	1.4842490608557993E-6	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999985157509391	WITHOUT_CLASSIFICATION	1.4842490608557993E-6	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999994218690271	WITHOUT_CLASSIFICATION	5.781309727422737E-7	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999970804476724	WITHOUT_CLASSIFICATION	2.919552327691203E-6	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999937927332907	WITHOUT_CLASSIFICATION	6.2072667094047124E-6	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999990960956657	WITHOUT_CLASSIFICATION	9.03904334277508E-7	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999967803047176	WITHOUT_CLASSIFICATION	3.219695282397128E-6	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.99999939300284	WITHOUT_CLASSIFICATION	6.069971598987349E-7	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999832558983754	WITHOUT_CLASSIFICATION	1.6744101624497396E-5	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9999872886795408	WITHOUT_CLASSIFICATION	1.2711320459138049E-5	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9999945511835481	WITHOUT_CLASSIFICATION	5.448816451940666E-6	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999988907589026	WITHOUT_CLASSIFICATION	1.1092410974333344E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999972981883981	WITHOUT_CLASSIFICATION	2.7018116018270296E-6	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999913921938659	WITHOUT_CLASSIFICATION	8.607806134040213E-6	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.999999567076034	WITHOUT_CLASSIFICATION	4.3292396599166904E-7	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999980708534099	WITHOUT_CLASSIFICATION	1.929146590123528E-6	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999705257885486	WITHOUT_CLASSIFICATION	2.9474211451452426E-5	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999998399468518	WITHOUT_CLASSIFICATION	1.6005314810061094E-7	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999955836510266	WITHOUT_CLASSIFICATION	4.4163489733829665E-6	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999962516815797	WITHOUT_CLASSIFICATION	3.748318420217877E-6	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999915714764593	WITHOUT_CLASSIFICATION	8.42852354064147E-6	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.999992683303419	WITHOUT_CLASSIFICATION	7.3166965810140954E-6	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999750723378165	WITHOUT_CLASSIFICATION	2.4927662183501853E-5	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999990058768529	WITHOUT_CLASSIFICATION	9.94123147161901E-7	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999998899735085	WITHOUT_CLASSIFICATION	1.1002649145398014E-7	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999972677654136	WITHOUT_CLASSIFICATION	2.732234586296367E-6	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999979899277672	WITHOUT_CLASSIFICATION	2.010072232674646E-6	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999992261877628	WITHOUT_CLASSIFICATION	7.738122372068842E-7	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9999707123218351	WITHOUT_CLASSIFICATION	2.9287678164826927E-5	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999977742673891	WITHOUT_CLASSIFICATION	2.2257326109693014E-6	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9999984164084377	WITHOUT_CLASSIFICATION	1.58359156228481E-6	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999844385041757	WITHOUT_CLASSIFICATION	1.556149582434632E-5	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999863253372746	WITHOUT_CLASSIFICATION	1.3674662725389857E-5	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.999997823441822	WITHOUT_CLASSIFICATION	2.176558178017717E-6	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999991489266423	WITHOUT_CLASSIFICATION	8.510733577291503E-7	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999998025392318	WITHOUT_CLASSIFICATION	1.974607681722129E-7	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999999118321578	WITHOUT_CLASSIFICATION	8.816784223536767E-8	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999999906397753	WITHOUT_CLASSIFICATION	9.360224732439275E-9	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999995875633548	WITHOUT_CLASSIFICATION	4.124366451775749E-7	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999986950816347	WITHOUT_CLASSIFICATION	1.304918365274139E-6	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999996186407524	WITHOUT_CLASSIFICATION	3.813592477254182E-7	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999999660004567	WITHOUT_CLASSIFICATION	3.3999543278955276E-8	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999947252298202	WITHOUT_CLASSIFICATION	5.274770179707316E-6	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999999909167768	WITHOUT_CLASSIFICATION	9.083223237704515E-9	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9999999312286076	WITHOUT_CLASSIFICATION	6.877139231195208E-8	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999330349967128	WITHOUT_CLASSIFICATION	6.696500328724285E-5	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999984809123623	WITHOUT_CLASSIFICATION	1.51908763768499E-6	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999792652423353	WITHOUT_CLASSIFICATION	2.0734757664841096E-5	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999994221272158	WITHOUT_CLASSIFICATION	5.778727842348436E-7	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999987048788463	WITHOUT_CLASSIFICATION	1.2951211536488802E-6	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999677658942906	WITHOUT_CLASSIFICATION	3.2234105709361576E-5	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999988039857453	WITHOUT_CLASSIFICATION	1.1960142547534884E-6	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999992746753265	WITHOUT_CLASSIFICATION	7.253246734614634E-7	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999998269851471	WITHOUT_CLASSIFICATION	1.7301485279625574E-7	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9999991950559636	WITHOUT_CLASSIFICATION	8.049440364689602E-7	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.999992303461008	WITHOUT_CLASSIFICATION	7.696538992031448E-6	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999868887518316	WITHOUT_CLASSIFICATION	1.3111248168329964E-5	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9999977341586709	WITHOUT_CLASSIFICATION	2.2658413290930168E-6	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9999991876467372	WITHOUT_CLASSIFICATION	8.123532627653929E-7	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9999836496785556	WITHOUT_CLASSIFICATION	1.6350321444459254E-5	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999984151228907	WITHOUT_CLASSIFICATION	1.5848771093623547E-6	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.999994486601437	WITHOUT_CLASSIFICATION	5.513398563054059E-6	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.999997490814186	WITHOUT_CLASSIFICATION	2.5091858140470193E-6	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999954557217814	WITHOUT_CLASSIFICATION	4.5442782185981165E-6	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.999995187200708	WITHOUT_CLASSIFICATION	4.812799291935532E-6	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999865847877609	WITHOUT_CLASSIFICATION	1.3415212239025096E-5	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999998335475105	WITHOUT_CLASSIFICATION	1.6645248934062153E-7	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999979516642583	WITHOUT_CLASSIFICATION	2.0483357416847807E-6	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999835376589894	WITHOUT_CLASSIFICATION	1.6462341010596903E-5	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999813138457776	WITHOUT_CLASSIFICATION	1.8686154222397836E-5	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.999999765969093	WITHOUT_CLASSIFICATION	2.340309070328264E-7	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999967570853001	WITHOUT_CLASSIFICATION	3.2429146998990124E-6	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9999761670636665	WITHOUT_CLASSIFICATION	2.3832936333434928E-5	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999872921387596	WITHOUT_CLASSIFICATION	1.2707861240346282E-5	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999872921387596	WITHOUT_CLASSIFICATION	1.2707861240346282E-5	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999921441701455	WITHOUT_CLASSIFICATION	7.855829854510493E-6	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999921441701455	WITHOUT_CLASSIFICATION	7.855829854510493E-6	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999976867278596	WITHOUT_CLASSIFICATION	2.3132721403175756E-6	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999976867278596	WITHOUT_CLASSIFICATION	2.3132721403175756E-6	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999894817076875	WITHOUT_CLASSIFICATION	1.0518292312547806E-5	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999894817076875	WITHOUT_CLASSIFICATION	1.0518292312547806E-5	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9999503005111855	WITHOUT_CLASSIFICATION	4.969948881451777E-5	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9999090279966126	WITHOUT_CLASSIFICATION	9.097200338738751E-5	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999998694130803	WITHOUT_CLASSIFICATION	1.3058691969801574E-6	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999997389960072	WITHOUT_CLASSIFICATION	2.610039927347179E-7	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999997615416643	WITHOUT_CLASSIFICATION	2.3845833570351923E-7	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999996358099209	WITHOUT_CLASSIFICATION	3.641900790858276E-7	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999893593559332	WITHOUT_CLASSIFICATION	1.0640644066664539E-5	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999986483913211	WITHOUT_CLASSIFICATION	1.3516086788796666E-6	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999963292231326	WITHOUT_CLASSIFICATION	3.6707768674475156E-6	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999995010671479	WITHOUT_CLASSIFICATION	4.989328521904045E-7	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999901821407579	WITHOUT_CLASSIFICATION	9.817859242167146E-6	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999956038034175	WITHOUT_CLASSIFICATION	4.396196582598225E-6	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999985159194401	WITHOUT_CLASSIFICATION	1.4840805599596737E-6	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.999990788653362	WITHOUT_CLASSIFICATION	9.211346638011147E-6	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999997143865951	WITHOUT_CLASSIFICATION	2.8561340494829313E-7	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999968326167403	WITHOUT_CLASSIFICATION	3.1673832595889415E-6	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999997665414116	WITHOUT_CLASSIFICATION	2.334585882855782E-7	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999994466737397	WITHOUT_CLASSIFICATION	5.533262602020565E-7	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999989144562397	WITHOUT_CLASSIFICATION	1.0855437603734904E-6	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999508573338274	WITHOUT_CLASSIFICATION	4.914266617267691E-5	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999942599738499	WITHOUT_CLASSIFICATION	5.740026150007763E-6	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999977526100686	WITHOUT_CLASSIFICATION	2.247389931496998E-6	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999788684105617	WITHOUT_CLASSIFICATION	2.1131589438338404E-5	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999971442389687	WITHOUT_CLASSIFICATION	2.855761031439259E-6	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999791849922814	WITHOUT_CLASSIFICATION	2.0815007718602077E-5	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999724879765887	WITHOUT_CLASSIFICATION	2.7512023411311752E-5	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999909322311904	WITHOUT_CLASSIFICATION	9.06776880951196E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9998396639966542	WITHOUT_CLASSIFICATION	1.6033600334570128E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9998396639966542	WITHOUT_CLASSIFICATION	1.6033600334570128E-4	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999991622788313	WITHOUT_CLASSIFICATION	8.377211685097219E-7	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9999964578143756	WITHOUT_CLASSIFICATION	3.5421856244517507E-6	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9999938577218017	WITHOUT_CLASSIFICATION	6.142278198280803E-6	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999847211739744	WITHOUT_CLASSIFICATION	1.5278826025659245E-5	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999873655092388	WITHOUT_CLASSIFICATION	1.2634490761122942E-5	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999973689244419	WITHOUT_CLASSIFICATION	2.631075558070156E-6	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9998591990125736	WITHOUT_CLASSIFICATION	1.4080098742641224E-4	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9998591990125736	WITHOUT_CLASSIFICATION	1.4080098742641224E-4	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999962403438583	WITHOUT_CLASSIFICATION	3.7596561417468254E-6	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.677799908146149	WITHOUT_CLASSIFICATION	0.32220009185385096	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999991121147256	WITHOUT_CLASSIFICATION	8.878852743360566E-7	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999991121147256	WITHOUT_CLASSIFICATION	8.878852743360566E-7	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.999999052416767	WITHOUT_CLASSIFICATION	9.475832329208001E-7	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999992487832925	WITHOUT_CLASSIFICATION	7.512167075509265E-7	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999992487832925	WITHOUT_CLASSIFICATION	7.512167075509265E-7	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999713086552359	WITHOUT_CLASSIFICATION	2.8691344764104588E-5	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999713086552359	WITHOUT_CLASSIFICATION	2.8691344764104588E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999950068487178	WITHOUT_CLASSIFICATION	4.9931512821725465E-6	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999950068487178	WITHOUT_CLASSIFICATION	4.9931512821725465E-6	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9999895871660465	WITHOUT_CLASSIFICATION	1.041283395346533E-5	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999989041264569	WITHOUT_CLASSIFICATION	1.0958735430719146E-6	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999999654474476	WITHOUT_CLASSIFICATION	3.455255249486314E-8	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999976021762788	WITHOUT_CLASSIFICATION	2.3978237212869067E-6	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999999698635635	WITHOUT_CLASSIFICATION	3.013643643189868E-8	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999999011566025	WITHOUT_CLASSIFICATION	9.884339741932376E-8	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999979736236889	WITHOUT_CLASSIFICATION	2.026376310961214E-6	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999979938907129	WITHOUT_CLASSIFICATION	2.0061092871642406E-6	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999979736236889	WITHOUT_CLASSIFICATION	2.026376310961214E-6	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9999294686027008	WITHOUT_CLASSIFICATION	7.053139729922007E-5	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999766947204344	WITHOUT_CLASSIFICATION	2.3305279565674096E-5	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999989591252352	WITHOUT_CLASSIFICATION	1.0408747647545209E-6	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999993420452505	WITHOUT_CLASSIFICATION	6.579547495648144E-7	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.999999785126486	WITHOUT_CLASSIFICATION	2.1487351395253646E-7	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999845272585813	WITHOUT_CLASSIFICATION	1.5472741418689972E-5	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999966148562507	WITHOUT_CLASSIFICATION	3.3851437492860034E-6	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999906022081646	WITHOUT_CLASSIFICATION	9.397791835468998E-6	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999995601517664	WITHOUT_CLASSIFICATION	4.3984823363041704E-7	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999991883471042	WITHOUT_CLASSIFICATION	8.116528957561081E-7	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999985380899439	WITHOUT_CLASSIFICATION	1.4619100562108494E-6	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999995246127881	WITHOUT_CLASSIFICATION	4.753872119623168E-7	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.999944989102818	WITHOUT_CLASSIFICATION	5.5010897182064545E-5	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9999987447784104	WITHOUT_CLASSIFICATION	1.2552215894959644E-6	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999984375854375	WITHOUT_CLASSIFICATION	1.5624145624875642E-6	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999999779255606	WITHOUT_CLASSIFICATION	2.207443939456991E-8	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.999969987581089	WITHOUT_CLASSIFICATION	3.001241891094476E-5	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999778957083942	WITHOUT_CLASSIFICATION	2.2104291605816968E-5	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999106753512678	WITHOUT_CLASSIFICATION	8.932464873231171E-5	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999975798849562	WITHOUT_CLASSIFICATION	2.420115043802308E-6	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999996031276709	WITHOUT_CLASSIFICATION	3.968723291335036E-7	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999934498916866	WITHOUT_CLASSIFICATION	6.55010831345575E-6	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999863789755534	WITHOUT_CLASSIFICATION	1.3621024446614125E-5	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.999800073426357	WITHOUT_CLASSIFICATION	1.999265736429639E-4	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999950009510606	WITHOUT_CLASSIFICATION	4.9990489393989E-6	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999993334464723	WITHOUT_CLASSIFICATION	6.665535275927691E-7	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999999889865758	WITHOUT_CLASSIFICATION	1.1013424145254597E-8	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999525165782455	WITHOUT_CLASSIFICATION	4.748342175444129E-5	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999999545912545	WITHOUT_CLASSIFICATION	4.540874549227768E-8	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.999999697365227	WITHOUT_CLASSIFICATION	3.026347729363331E-7	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999999503057535	WITHOUT_CLASSIFICATION	4.969424644409193E-8	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999989540278	WITHOUT_CLASSIFICATION	1.0459722630775079E-9	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999999561990085	WITHOUT_CLASSIFICATION	4.3800991594898784E-8	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999963240601552	WITHOUT_CLASSIFICATION	3.675939844815477E-6	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999999989378642	WITHOUT_CLASSIFICATION	1.0621357956593866E-9	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999999977407708	WITHOUT_CLASSIFICATION	2.2592293276020183E-9	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999999266650028	WITHOUT_CLASSIFICATION	7.333499722902722E-8	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999999952388725	WITHOUT_CLASSIFICATION	4.761127489116515E-9	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999997357167137	WITHOUT_CLASSIFICATION	2.6428328626258407E-7	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.999999951918511	WITHOUT_CLASSIFICATION	4.8081489002048807E-8	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999999715903302	WITHOUT_CLASSIFICATION	2.8409669817454512E-8	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999828820045	WITHOUT_CLASSIFICATION	1.711799536323646E-8	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.99999996717544	WITHOUT_CLASSIFICATION	3.2824559835522954E-8	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999999293018523	WITHOUT_CLASSIFICATION	7.069814760353025E-8	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999914930265	WITHOUT_CLASSIFICATION	8.5069734227495E-9	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999999650832221	WITHOUT_CLASSIFICATION	3.4916777859915974E-8	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999999506275175	WITHOUT_CLASSIFICATION	4.9372482587428415E-8	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.999999943264065	WITHOUT_CLASSIFICATION	5.673593493811315E-8	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999021186287	WITHOUT_CLASSIFICATION	9.788137132929954E-8	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999993348114832	WITHOUT_CLASSIFICATION	6.65188516908984E-7	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999850896358617	WITHOUT_CLASSIFICATION	1.4910364138337203E-5	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999997957041332	WITHOUT_CLASSIFICATION	2.0429586679246948E-7	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999967456223346	WITHOUT_CLASSIFICATION	3.2543776654018116E-6	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9996739491869648	WITHOUT_CLASSIFICATION	3.2605081303512743E-4	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999999413500787	WITHOUT_CLASSIFICATION	5.864992111887634E-8	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999999413500787	WITHOUT_CLASSIFICATION	5.864992111887634E-8	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999723171392	WITHOUT_CLASSIFICATION	2.768286075514466E-8	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999609769342	WITHOUT_CLASSIFICATION	3.9023065798952084E-8	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999999610320655	WITHOUT_CLASSIFICATION	3.896793463171459E-8	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999992859538679	WITHOUT_CLASSIFICATION	7.140461321503628E-7	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999981945899248	WITHOUT_CLASSIFICATION	1.8054100752406079E-6	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999997732551575	WITHOUT_CLASSIFICATION	2.2674484237267143E-7	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999996753676772	WITHOUT_CLASSIFICATION	3.246323227836847E-7	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999999217515926	WITHOUT_CLASSIFICATION	7.824840748199832E-8	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9989546347807495	WITHOUT_CLASSIFICATION	0.0010453652192505176	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999998588259593	WITHOUT_CLASSIFICATION	1.4117404061612618E-7	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999999633727371	WITHOUT_CLASSIFICATION	3.662726280221256E-8	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999999633727371	WITHOUT_CLASSIFICATION	3.662726280221256E-8	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9997457547982344	WITHOUT_CLASSIFICATION	2.5424520176561556E-4	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999938491199271	WITHOUT_CLASSIFICATION	6.150880072858067E-6	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999827572311942	WITHOUT_CLASSIFICATION	1.724276880577419E-5	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999993636391066	WITHOUT_CLASSIFICATION	6.363608934871282E-7	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999990603154301	WITHOUT_CLASSIFICATION	9.396845699545528E-7	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999748377113873	WITHOUT_CLASSIFICATION	2.516228861270737E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999969580864108	WITHOUT_CLASSIFICATION	3.041913589188489E-6	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999988088106309	WITHOUT_CLASSIFICATION	1.1911893691041044E-6	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999998384213312	WITHOUT_CLASSIFICATION	1.615786687813179E-7	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9996117961433237	WITHOUT_CLASSIFICATION	3.8820385667626264E-4	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999998943830577	WITHOUT_CLASSIFICATION	1.0561694226202813E-7	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999974304707439	WITHOUT_CLASSIFICATION	2.5695292560119385E-6	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999521105170077	WITHOUT_CLASSIFICATION	4.788948299228689E-5	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999521105170077	WITHOUT_CLASSIFICATION	4.788948299228689E-5	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999999365911443	WITHOUT_CLASSIFICATION	6.340885571617896E-8	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999825886983824	WITHOUT_CLASSIFICATION	1.7411301617611027E-5	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999990471020004	WITHOUT_CLASSIFICATION	9.528979996083921E-7	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999877840735855	WITHOUT_CLASSIFICATION	1.2215926414550962E-5	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999897726725857	WITHOUT_CLASSIFICATION	1.0227327414267924E-5	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999936348186199	WITHOUT_CLASSIFICATION	6.3651813800933865E-6	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999983488607962	WITHOUT_CLASSIFICATION	1.6511392038837594E-6	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999945557676237	WITHOUT_CLASSIFICATION	5.444232376309822E-6	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9987194840780772	WITHOUT_CLASSIFICATION	0.0012805159219227557	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999897164485493	WITHOUT_CLASSIFICATION	1.028355145073351E-5	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999827572311942	WITHOUT_CLASSIFICATION	1.724276880577419E-5	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999884323373267	WITHOUT_CLASSIFICATION	1.1567662673416005E-5	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999999453604749	WITHOUT_CLASSIFICATION	5.46395250612837E-8	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999996625767695	WITHOUT_CLASSIFICATION	3.3742323048091754E-7	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999990693244976	WITHOUT_CLASSIFICATION	9.306755024559472E-7	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999881805480573	WITHOUT_CLASSIFICATION	1.181945194275544E-5	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999994910992677	WITHOUT_CLASSIFICATION	5.08900732337707E-7	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999027409134098	WITHOUT_CLASSIFICATION	9.72590865902068E-5	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.999993566582249	WITHOUT_CLASSIFICATION	6.4334177509159945E-6	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.999999684116158	WITHOUT_CLASSIFICATION	3.1588384205441684E-7	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999794980042418	WITHOUT_CLASSIFICATION	2.0501995758257725E-5	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999423699463551	WITHOUT_CLASSIFICATION	5.76300536448986E-5	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999999943617838	WITHOUT_CLASSIFICATION	5.638216215932699E-9	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999996131288298	WITHOUT_CLASSIFICATION	3.8687117017955233E-7	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999910913475153	WITHOUT_CLASSIFICATION	8.90865248464573E-6	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999964988678982	WITHOUT_CLASSIFICATION	3.5011321017674336E-6	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999995505051954	WITHOUT_CLASSIFICATION	4.494948047255871E-7	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999980160807426	WITHOUT_CLASSIFICATION	1.983919257468104E-6	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999814349746775	WITHOUT_CLASSIFICATION	1.856502532252682E-5	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999870811907786	WITHOUT_CLASSIFICATION	1.2918809221434387E-5	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.9999996815813232	WITHOUT_CLASSIFICATION	3.184186768325943E-7	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999999981040582	WITHOUT_CLASSIFICATION	1.8959418948993183E-9	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999980504115673	WITHOUT_CLASSIFICATION	1.9495884326668067E-6	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999993134933922	WITHOUT_CLASSIFICATION	6.865066078496547E-7	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9994828787327382	WITHOUT_CLASSIFICATION	5.171212672617427E-4	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.999996546398488	WITHOUT_CLASSIFICATION	3.4536015120041397E-6	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999999043919434	WITHOUT_CLASSIFICATION	9.560805662425477E-8	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9999945200343708	WITHOUT_CLASSIFICATION	5.479965629199229E-6	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999557453762673	WITHOUT_CLASSIFICATION	4.425462373267099E-5	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9999974766682453	WITHOUT_CLASSIFICATION	2.5233317546678065E-6	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.999999961068639	WITHOUT_CLASSIFICATION	3.8931361009058275E-8	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999882263312975	WITHOUT_CLASSIFICATION	1.1773668702504403E-5	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999882263312975	WITHOUT_CLASSIFICATION	1.1773668702504403E-5	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9983911583235852	WITHOUT_CLASSIFICATION	0.0016088416764148592	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9988023113754314	WITHOUT_CLASSIFICATION	0.0011976886245685585	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.9999989630476146	WITHOUT_CLASSIFICATION	1.036952385359478E-6	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9989402141409968	WITHOUT_CLASSIFICATION	0.0010597858590032482	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999992024769683	WITHOUT_CLASSIFICATION	7.975230318244441E-7	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999947814024345	WITHOUT_CLASSIFICATION	5.218597565469716E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999972981883981	WITHOUT_CLASSIFICATION	2.7018116018270296E-6	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999943913896151	WITHOUT_CLASSIFICATION	5.608610384801384E-6	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999980201052856	WITHOUT_CLASSIFICATION	1.9798947142958233E-6	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999996280171279	WITHOUT_CLASSIFICATION	3.719828720561817E-7	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999993809155516	WITHOUT_CLASSIFICATION	6.190844483806919E-7	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9999990327720247	WITHOUT_CLASSIFICATION	9.67227975324522E-7	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.999999959731837	WITHOUT_CLASSIFICATION	4.026816297250109E-8	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999992746753265	WITHOUT_CLASSIFICATION	7.253246734614634E-7	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999999364361432	WITHOUT_CLASSIFICATION	6.356385680926733E-8	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999989357551771	WITHOUT_CLASSIFICATION	1.0642448228868684E-6	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999992183803	WITHOUT_CLASSIFICATION	7.816196820315705E-10	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999993765691334	WITHOUT_CLASSIFICATION	6.234308666046377E-7	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.9999978180237934	WITHOUT_CLASSIFICATION	2.1819762066076253E-6	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999962680070162	WITHOUT_CLASSIFICATION	3.7319929836856665E-6	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999803964770961	WITHOUT_CLASSIFICATION	1.9603522903859188E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999803964770961	WITHOUT_CLASSIFICATION	1.9603522903859188E-5	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9999992886676158	WITHOUT_CLASSIFICATION	7.11332384252451E-7	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999968246834647	WITHOUT_CLASSIFICATION	3.1753165353047183E-6	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999928174670182	WITHOUT_CLASSIFICATION	7.182532981853512E-6	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999984716524052	WITHOUT_CLASSIFICATION	1.5283475948666141E-6	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999779623104869	WITHOUT_CLASSIFICATION	2.203768951319947E-5	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9985727157659169	WITHOUT_CLASSIFICATION	0.001427284234083078	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999998936673822	WITHOUT_CLASSIFICATION	1.0633261775694333E-7	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999988668806913	WITHOUT_CLASSIFICATION	1.1331193086969232E-6	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999995202044744	WITHOUT_CLASSIFICATION	4.797955255839134E-7	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999882485044369	WITHOUT_CLASSIFICATION	1.1751495563179881E-5	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9999985862485264	WITHOUT_CLASSIFICATION	1.4137514734711678E-6	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999995213511468	WITHOUT_CLASSIFICATION	4.786488532330551E-7	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999968314387682	WITHOUT_CLASSIFICATION	3.1685612318490685E-6	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999998552200103	WITHOUT_CLASSIFICATION	1.4477998958196298E-7	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999960408622521	WITHOUT_CLASSIFICATION	3.959137747792444E-6	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999936047089355	WITHOUT_CLASSIFICATION	6.39529106458051E-6	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999985825732858	WITHOUT_CLASSIFICATION	1.4174267142015255E-6	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9999993195186926	WITHOUT_CLASSIFICATION	6.804813074516366E-7	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999508351048	WITHOUT_CLASSIFICATION	4.916489512778602E-8	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999999620745509	WITHOUT_CLASSIFICATION	3.792544919580007E-8	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.999967647446924	WITHOUT_CLASSIFICATION	3.2352553075979266E-5	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999991020383645	WITHOUT_CLASSIFICATION	8.979616355606129E-7	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999996710192864	WITHOUT_CLASSIFICATION	3.289807136282523E-7	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999626182716249	WITHOUT_CLASSIFICATION	3.7381728375028755E-5	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999996981273951	WITHOUT_CLASSIFICATION	3.0187260492866915E-7	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.999993279291396	WITHOUT_CLASSIFICATION	6.720708603922086E-6	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.9999985898455649	WITHOUT_CLASSIFICATION	1.4101544350577753E-6	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999972210417303	WITHOUT_CLASSIFICATION	2.778958269732453E-6	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999959976637043	WITHOUT_CLASSIFICATION	4.002336295678459E-6	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.999987798333251	WITHOUT_CLASSIFICATION	1.220166674902248E-5	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999991566829171	WITHOUT_CLASSIFICATION	8.433170828731895E-7	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999985336407683	WITHOUT_CLASSIFICATION	1.4663592317900989E-6	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999981600163371	WITHOUT_CLASSIFICATION	1.8399836629025053E-6	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.9999880235362029	WITHOUT_CLASSIFICATION	1.1976463797167852E-5	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999959127876659	WITHOUT_CLASSIFICATION	4.087212334185839E-6	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999999964096025	WITHOUT_CLASSIFICATION	3.590397555256537E-9	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999999320346111	WITHOUT_CLASSIFICATION	6.7965388903234E-8	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9999852005681849	WITHOUT_CLASSIFICATION	1.4799431815189634E-5	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999990333355187	WITHOUT_CLASSIFICATION	9.6666448138039E-7	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999927256819485	WITHOUT_CLASSIFICATION	7.274318051458189E-6	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999999721307798	WITHOUT_CLASSIFICATION	2.786922010988781E-8	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999989357411594	WITHOUT_CLASSIFICATION	1.0642588405663992E-6	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999996324564169	WITHOUT_CLASSIFICATION	3.675435831000902E-7	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999945488119882	WITHOUT_CLASSIFICATION	5.451188011694112E-6	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999953383660193	WITHOUT_CLASSIFICATION	4.661633980706412E-6	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999945488119882	WITHOUT_CLASSIFICATION	5.451188011694112E-6	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9992132083586581	WITHOUT_CLASSIFICATION	7.867916413418816E-4	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9759632847029299	WITHOUT_CLASSIFICATION	0.024036715297070143	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999996248970796	WITHOUT_CLASSIFICATION	3.7510292041235964E-7	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.6844956326630193	IMPLEMENTATION	0.31550436733698056	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999970371582028	WITHOUT_CLASSIFICATION	2.9628417971734157E-6	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999234379710311	WITHOUT_CLASSIFICATION	7.656202896886473E-5	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.999999536141279	WITHOUT_CLASSIFICATION	4.6385872095327247E-7	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999998786367932	WITHOUT_CLASSIFICATION	1.2136320680941635E-7	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999998684853797	WITHOUT_CLASSIFICATION	1.3151462033956288E-7	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.8409316370586297	WITHOUT_CLASSIFICATION	0.1590683629413703	IMPLEMENTATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9997998473704013	WITHOUT_CLASSIFICATION	2.001526295987084E-4	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999907596869626	WITHOUT_CLASSIFICATION	9.24031303749196E-6	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.999980939400416	WITHOUT_CLASSIFICATION	1.906059958401065E-5	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999998280943829	WITHOUT_CLASSIFICATION	1.7190561694579433E-7	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9802752530051552	WITHOUT_CLASSIFICATION	0.019724746994844826	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.7069335881895534	WITHOUT_CLASSIFICATION	0.2930664118104465	IMPLEMENTATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999999937758484	WITHOUT_CLASSIFICATION	6.224151615641625E-9	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999750149452401	WITHOUT_CLASSIFICATION	2.4985054759913044E-5	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999977440764712	WITHOUT_CLASSIFICATION	2.255923528825395E-6	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.999995922481904	WITHOUT_CLASSIFICATION	4.077518095952536E-6	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999976903558364	WITHOUT_CLASSIFICATION	2.3096441636223847E-6	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999984578513064	WITHOUT_CLASSIFICATION	1.5421486936144523E-6	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.999993968129363	WITHOUT_CLASSIFICATION	6.0318706369111445E-6	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999965643903439	WITHOUT_CLASSIFICATION	3.4356096560340156E-6	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999798038818969	WITHOUT_CLASSIFICATION	2.0196118103136477E-5	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.999997956586262	WITHOUT_CLASSIFICATION	2.0434137379527015E-6	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999996739479742	WITHOUT_CLASSIFICATION	3.260520258604462E-7	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999970511260786	WITHOUT_CLASSIFICATION	2.9488739214272176E-6	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999977190320556	WITHOUT_CLASSIFICATION	2.2809679444673373E-6	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999999964476534	WITHOUT_CLASSIFICATION	3.552346561294313E-9	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999912959470492	WITHOUT_CLASSIFICATION	8.704052950857671E-6	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999875368747031	WITHOUT_CLASSIFICATION	1.2463125296931695E-5	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999829056906188	WITHOUT_CLASSIFICATION	1.709430938124463E-5	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9999995770613075	WITHOUT_CLASSIFICATION	4.229386925169154E-7	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999996168731133	WITHOUT_CLASSIFICATION	3.8312688656320433E-7	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9999999379994309	WITHOUT_CLASSIFICATION	6.200056912495415E-8	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999997457163382	WITHOUT_CLASSIFICATION	2.542836618126086E-7	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999040301831	WITHOUT_CLASSIFICATION	9.596981680935098E-8	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.999994349900781	WITHOUT_CLASSIFICATION	5.650099219047147E-6	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999801390710664	WITHOUT_CLASSIFICATION	1.986092893352191E-5	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.999999611811175	WITHOUT_CLASSIFICATION	3.881888249745807E-7	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999998068131118	WITHOUT_CLASSIFICATION	1.9318688807135558E-7	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.999999922761663	WITHOUT_CLASSIFICATION	7.723833695594587E-8	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999906993525796	WITHOUT_CLASSIFICATION	9.30064742042038E-6	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999906993525796	WITHOUT_CLASSIFICATION	9.30064742042038E-6	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999994214370848	WITHOUT_CLASSIFICATION	5.785629152300923E-7	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999917348570566	WITHOUT_CLASSIFICATION	8.26514294339205E-6	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999997047420446	WITHOUT_CLASSIFICATION	2.9525795544954215E-7	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999993403979641	WITHOUT_CLASSIFICATION	6.596020359652315E-7	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999942784312	WITHOUT_CLASSIFICATION	5.721568769110986E-9	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999992894890558	WITHOUT_CLASSIFICATION	7.105109441338975E-7	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999992598619063	WITHOUT_CLASSIFICATION	7.401380936669775E-7	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999937535677741	WITHOUT_CLASSIFICATION	6.24643222583851E-6	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999987500059307	WITHOUT_CLASSIFICATION	1.2499940692652463E-6	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999999672074045	WITHOUT_CLASSIFICATION	3.2792595507014495E-8	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999998709419448	WITHOUT_CLASSIFICATION	1.2905805526540457E-7	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999999259957821	WITHOUT_CLASSIFICATION	7.40042179179344E-8	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999999974581135	WITHOUT_CLASSIFICATION	2.541886417465077E-9	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999971793379949	WITHOUT_CLASSIFICATION	2.8206620050400914E-6	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999999765979983	WITHOUT_CLASSIFICATION	2.3402001567858333E-8	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9986079715940075	WITHOUT_CLASSIFICATION	0.001392028405992522	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999932466523013	WITHOUT_CLASSIFICATION	6.753347698785729E-6	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.999998866911334	WITHOUT_CLASSIFICATION	1.133088665996885E-6	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999997437589392	WITHOUT_CLASSIFICATION	2.562410608464905E-7	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999986201065545	WITHOUT_CLASSIFICATION	1.3798934454285095E-6	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.9999590267290274	WITHOUT_CLASSIFICATION	4.097327097269795E-5	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9999385490896591	WITHOUT_CLASSIFICATION	6.1450910340896E-5	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999624807297536	WITHOUT_CLASSIFICATION	3.751927024651173E-5	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999998603354151	WITHOUT_CLASSIFICATION	1.3966458487387894E-7	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999999494003987	WITHOUT_CLASSIFICATION	5.0599601329169515E-8	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999990887117856	WITHOUT_CLASSIFICATION	9.112882145355523E-7	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999526148389	WITHOUT_CLASSIFICATION	4.738516104808254E-8	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999986499507668	WITHOUT_CLASSIFICATION	1.350049233236471E-6	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999977831985353	WITHOUT_CLASSIFICATION	2.216801464668938E-6	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999996558161125	WITHOUT_CLASSIFICATION	3.441838875415408E-7	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999981641304393	WITHOUT_CLASSIFICATION	1.835869560821888E-6	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.999999283026946	WITHOUT_CLASSIFICATION	7.169730540486166E-7	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999997026801126	WITHOUT_CLASSIFICATION	2.973198873529146E-7	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999989593493099	WITHOUT_CLASSIFICATION	1.040650690115467E-6	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999992765283879	WITHOUT_CLASSIFICATION	7.234716119863278E-7	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999311193174202	WITHOUT_CLASSIFICATION	6.888068257977113E-5	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999911151191321	WITHOUT_CLASSIFICATION	8.884880867918734E-6	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999917772518312	WITHOUT_CLASSIFICATION	8.222748168752537E-6	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999866555850163	WITHOUT_CLASSIFICATION	1.334441498378545E-5	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999927110339331	WITHOUT_CLASSIFICATION	7.288966066923373E-6	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999982062122447	WITHOUT_CLASSIFICATION	1.793787755234242E-6	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999961214112026	WITHOUT_CLASSIFICATION	3.878588797387641E-6	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999994154738224	WITHOUT_CLASSIFICATION	5.845261774966649E-7	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.999999806267172	WITHOUT_CLASSIFICATION	1.9373282803606602E-7	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999440606341575	WITHOUT_CLASSIFICATION	5.5939365842568975E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999989356970787	WITHOUT_CLASSIFICATION	1.0643029213642903E-6	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999990049008961	WITHOUT_CLASSIFICATION	9.950991039034865E-7	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999999846381202	WITHOUT_CLASSIFICATION	1.536187982987108E-8	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.999977902436843	WITHOUT_CLASSIFICATION	2.2097563156918426E-5	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999951020785977	WITHOUT_CLASSIFICATION	4.897921402454568E-6	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999998863690185	WITHOUT_CLASSIFICATION	1.1363098154899092E-7	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999984720619743	WITHOUT_CLASSIFICATION	1.527938025772398E-6	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999993956333932	WITHOUT_CLASSIFICATION	6.043666066615043E-7	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999970742447691	WITHOUT_CLASSIFICATION	2.92575523087894E-6	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999922086281747	WITHOUT_CLASSIFICATION	7.791371825255258E-6	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999961495418582	WITHOUT_CLASSIFICATION	3.850458141779659E-6	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999976233378174	WITHOUT_CLASSIFICATION	2.3766621826647738E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999943751233688	WITHOUT_CLASSIFICATION	5.62487663126754E-6	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999953459285011	WITHOUT_CLASSIFICATION	4.654071498814456E-6	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999988739694334	WITHOUT_CLASSIFICATION	1.1260305665834943E-6	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999941889053545	WITHOUT_CLASSIFICATION	5.811094645529174E-6	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999985696084287	WITHOUT_CLASSIFICATION	1.4303915712090847E-6	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999996503807349	WITHOUT_CLASSIFICATION	3.496192650856538E-7	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999994550136276	WITHOUT_CLASSIFICATION	5.449863723963348E-7	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9999560935412583	WITHOUT_CLASSIFICATION	4.390645874168811E-5	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999920918979076	WITHOUT_CLASSIFICATION	7.908102092432459E-6	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999990870403097	WITHOUT_CLASSIFICATION	9.129596902967804E-6	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999986066223762	WITHOUT_CLASSIFICATION	1.3933776238205832E-6	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.9999772714389276	WITHOUT_CLASSIFICATION	2.2728561072473827E-5	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999905315632821	WITHOUT_CLASSIFICATION	9.468436717948517E-6	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999970016852741	WITHOUT_CLASSIFICATION	2.998314725973061E-6	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999974211268168	WITHOUT_CLASSIFICATION	2.5788731832330736E-6	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999917165267732	WITHOUT_CLASSIFICATION	8.2834732268529E-6	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999901784513892	WITHOUT_CLASSIFICATION	9.821548610896234E-6	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9999886081525531	WITHOUT_CLASSIFICATION	1.1391847446798145E-5	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9999880678219109	WITHOUT_CLASSIFICATION	1.1932178089084104E-5	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9999855645836923	WITHOUT_CLASSIFICATION	1.443541630775607E-5	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9999831650045787	WITHOUT_CLASSIFICATION	1.683499542129422E-5	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9999843081674965	WITHOUT_CLASSIFICATION	1.5691832503545382E-5	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9999835893846688	WITHOUT_CLASSIFICATION	1.6410615331174527E-5	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9999829225283552	WITHOUT_CLASSIFICATION	1.7077471644758225E-5	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9999831301337119	WITHOUT_CLASSIFICATION	1.6869866288163454E-5	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9999836819402883	WITHOUT_CLASSIFICATION	1.6318059711726796E-5	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9999822630138107	WITHOUT_CLASSIFICATION	1.7736986189379845E-5	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9999880980024742	WITHOUT_CLASSIFICATION	1.1901997525807792E-5	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9999897793452108	WITHOUT_CLASSIFICATION	1.0220654789155656E-5	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9999886225578172	WITHOUT_CLASSIFICATION	1.1377442182788885E-5	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9999883239703258	WITHOUT_CLASSIFICATION	1.1676029674230417E-5	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9999879848437899	WITHOUT_CLASSIFICATION	1.2015156210139414E-5	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9999881113151754	WITHOUT_CLASSIFICATION	1.1888684824630028E-5	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9999880162108923	WITHOUT_CLASSIFICATION	1.1983789107753477E-5	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9999886946250373	WITHOUT_CLASSIFICATION	1.1305374962662249E-5	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9999888813054891	WITHOUT_CLASSIFICATION	1.1118694510985732E-5	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9999700464306708	WITHOUT_CLASSIFICATION	2.995356932920114E-5	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999733027435052	WITHOUT_CLASSIFICATION	2.669725649485877E-5	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999834484264334	WITHOUT_CLASSIFICATION	1.6551573566654513E-5	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999929528062712	WITHOUT_CLASSIFICATION	7.0471937288252135E-6	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999957922117945	WITHOUT_CLASSIFICATION	4.20778820552445E-6	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999995099085834	WITHOUT_CLASSIFICATION	4.900914165718933E-7	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999985841125503	WITHOUT_CLASSIFICATION	1.4158874497389274E-6	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999718991937316	WITHOUT_CLASSIFICATION	2.8100806268281725E-5	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.999999214457305	WITHOUT_CLASSIFICATION	7.855426950555436E-7	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999847050626121	WITHOUT_CLASSIFICATION	1.5294937387878724E-5	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.5435559839475164	IMPLEMENTATION	0.45644401605248364	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9999979680166562	WITHOUT_CLASSIFICATION	2.0319833437016525E-6	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999999074810543	WITHOUT_CLASSIFICATION	9.2518945649081E-8	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999996510087411	WITHOUT_CLASSIFICATION	3.489912588955017E-7	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999996510087411	WITHOUT_CLASSIFICATION	3.489912588955017E-7	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999995046438084	WITHOUT_CLASSIFICATION	4.95356191685696E-7	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999880801304216	WITHOUT_CLASSIFICATION	1.1919869578420437E-5	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999993291	WITHOUT_CLASSIFICATION	6.708999586542647E-10	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.999996926820127	WITHOUT_CLASSIFICATION	3.073179872990765E-6	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999997494037378	WITHOUT_CLASSIFICATION	2.5059626210305397E-7	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999979442480291	WITHOUT_CLASSIFICATION	2.0557519708868476E-6	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9999896047570467	WITHOUT_CLASSIFICATION	1.0395242953282244E-5	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999949190456399	WITHOUT_CLASSIFICATION	5.080954360145838E-6	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9999135118393104	WITHOUT_CLASSIFICATION	8.648816068960334E-5	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9999979006490703	WITHOUT_CLASSIFICATION	2.0993509295671965E-6	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999975474815613	WITHOUT_CLASSIFICATION	2.452518438680875E-6	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999988153095983	WITHOUT_CLASSIFICATION	1.1846904016852557E-6	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9999957246858936	WITHOUT_CLASSIFICATION	4.275314106373958E-6	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999858783747082	WITHOUT_CLASSIFICATION	1.4121625291808758E-5	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999972893192763	WITHOUT_CLASSIFICATION	2.7106807237187127E-6	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.999998779981508	WITHOUT_CLASSIFICATION	1.2200184920561207E-6	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.999997674156195	WITHOUT_CLASSIFICATION	2.3258438049211813E-6	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999989473281051	WITHOUT_CLASSIFICATION	1.052671894808325E-6	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999979285371299	WITHOUT_CLASSIFICATION	2.07146287017786E-6	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999954323391947	WITHOUT_CLASSIFICATION	4.567660805290394E-6	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999997206249933	WITHOUT_CLASSIFICATION	2.7937500669669264E-7	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999999572963535	WITHOUT_CLASSIFICATION	4.2703646573573035E-8	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999967548320573	WITHOUT_CLASSIFICATION	3.245167942789511E-6	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999996338315621	WITHOUT_CLASSIFICATION	3.6616843793537684E-7	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999996757014208	WITHOUT_CLASSIFICATION	3.2429857929367616E-7	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999960774666288	WITHOUT_CLASSIFICATION	3.922533371226872E-6	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999990206250303	WITHOUT_CLASSIFICATION	9.793749697407824E-7	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999856143896058	WITHOUT_CLASSIFICATION	1.4385610394216454E-5	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.999996405650355	WITHOUT_CLASSIFICATION	3.5943496449152366E-6	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999956003180361	WITHOUT_CLASSIFICATION	4.399681963878185E-6	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999970546569351	WITHOUT_CLASSIFICATION	2.945343064832992E-6	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999987990643245	WITHOUT_CLASSIFICATION	1.200935675534114E-6	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999930815070993	WITHOUT_CLASSIFICATION	6.918492900665765E-6	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999974301370106	WITHOUT_CLASSIFICATION	2.5698629894657792E-6	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999966143885962	WITHOUT_CLASSIFICATION	3.3856114038701085E-6	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999931286042033	WITHOUT_CLASSIFICATION	6.8713957966531416E-6	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999983819689587	WITHOUT_CLASSIFICATION	1.618031041237286E-6	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999997393887973	WITHOUT_CLASSIFICATION	2.606112026890302E-7	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999965928316921	WITHOUT_CLASSIFICATION	3.4071683079786916E-6	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999978979431181	WITHOUT_CLASSIFICATION	2.1020568818263424E-6	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999994815456372	WITHOUT_CLASSIFICATION	5.18454362804901E-7	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999999376590325	WITHOUT_CLASSIFICATION	6.234096757810719E-8	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999961341302908	WITHOUT_CLASSIFICATION	3.865869709274768E-6	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999956660414009	WITHOUT_CLASSIFICATION	4.333958599190311E-6	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999956660414009	WITHOUT_CLASSIFICATION	4.333958599190311E-6	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999988054250423	WITHOUT_CLASSIFICATION	1.19457495772549E-6	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999984069069014	WITHOUT_CLASSIFICATION	1.5930930985737483E-6	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.999999084153276	WITHOUT_CLASSIFICATION	9.1584672408086E-7	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9999737267020806	WITHOUT_CLASSIFICATION	2.627329791931349E-5	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999992003011401	WITHOUT_CLASSIFICATION	7.996988597589656E-7	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9999993020472674	WITHOUT_CLASSIFICATION	6.97952732592251E-7	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.999998423262576	WITHOUT_CLASSIFICATION	1.5767374238970426E-6	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999549078585128	WITHOUT_CLASSIFICATION	4.509214148723874E-5	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999833563836004	WITHOUT_CLASSIFICATION	1.6643616399530108E-5	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999977116258115	WITHOUT_CLASSIFICATION	2.2883741883659605E-6	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.999999100522435	WITHOUT_CLASSIFICATION	8.994775650184149E-7	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999956146663089	WITHOUT_CLASSIFICATION	4.385333691010507E-6	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999949054138286	WITHOUT_CLASSIFICATION	5.094586171316848E-6	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.999999622193739	WITHOUT_CLASSIFICATION	3.778062611726281E-7	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.6258693087166732	WITHOUT_CLASSIFICATION	0.37413069128332677	IMPLEMENTATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999868670063281	WITHOUT_CLASSIFICATION	1.3132993671883698E-5	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999960707801443	WITHOUT_CLASSIFICATION	3.929219855693637E-6	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999978041119919	WITHOUT_CLASSIFICATION	2.1958880080453905E-6	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999999984536897	WITHOUT_CLASSIFICATION	1.546310218531252E-9	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999677658942906	WITHOUT_CLASSIFICATION	3.2234105709361576E-5	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999995365327756	WITHOUT_CLASSIFICATION	4.634672243327738E-7	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999995365327756	WITHOUT_CLASSIFICATION	4.634672243327738E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999986789548718	WITHOUT_CLASSIFICATION	1.321045128162767E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999986789548718	WITHOUT_CLASSIFICATION	1.321045128162767E-6	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999986065078215	WITHOUT_CLASSIFICATION	1.3934921785967022E-6	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999945474383201	WITHOUT_CLASSIFICATION	5.452561679917933E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999563468083481	WITHOUT_CLASSIFICATION	4.365319165184014E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999993307270039	WITHOUT_CLASSIFICATION	6.692729961252688E-7	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999999654474476	WITHOUT_CLASSIFICATION	3.455255249486314E-8	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999998900151108	WITHOUT_CLASSIFICATION	1.099848891436352E-7	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9999733252952923	WITHOUT_CLASSIFICATION	2.6674704707707173E-5	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9999977859201241	WITHOUT_CLASSIFICATION	2.214079875751143E-6	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999908708806076	WITHOUT_CLASSIFICATION	9.12911939239255E-6	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999996276667	WITHOUT_CLASSIFICATION	3.723333000174566E-7	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.999997111805481	WITHOUT_CLASSIFICATION	2.888194518870556E-6	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999961644475748	WITHOUT_CLASSIFICATION	3.835552425141269E-6	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999999811031837	WITHOUT_CLASSIFICATION	1.8896816337685108E-8	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999994684741461	WITHOUT_CLASSIFICATION	5.31525853890119E-7	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999999061324607	WITHOUT_CLASSIFICATION	9.386753930711685E-8	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.999999528267689	WITHOUT_CLASSIFICATION	4.717323110548435E-7	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999650472450432	WITHOUT_CLASSIFICATION	3.4952754956885215E-5	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999995567122216	WITHOUT_CLASSIFICATION	4.432877784325887E-7	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9999950245641077	WITHOUT_CLASSIFICATION	4.975435892308902E-6	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999888796675018	WITHOUT_CLASSIFICATION	1.1120332498078905E-5	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999988024235008	WITHOUT_CLASSIFICATION	1.1975764991686256E-6	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999913403298814	WITHOUT_CLASSIFICATION	8.659670118730625E-6	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999990871467874	WITHOUT_CLASSIFICATION	9.128532126372542E-7	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999996739479742	WITHOUT_CLASSIFICATION	3.260520258604462E-7	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999992894890558	WITHOUT_CLASSIFICATION	7.105109441338975E-7	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999946296212096	WITHOUT_CLASSIFICATION	5.370378790382371E-6	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999999746329675	WITHOUT_CLASSIFICATION	2.5367032382581418E-8	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999978111670715	WITHOUT_CLASSIFICATION	2.1888329284183476E-6	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999892341804761	WITHOUT_CLASSIFICATION	1.076581952386627E-5	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999990744041163	WITHOUT_CLASSIFICATION	9.255958837858204E-7	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999990744041163	WITHOUT_CLASSIFICATION	9.255958837858204E-7	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999952546207365	WITHOUT_CLASSIFICATION	4.745379263537947E-6	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.999991730392042	WITHOUT_CLASSIFICATION	8.26960795788039E-6	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999725866975159	WITHOUT_CLASSIFICATION	2.7413302484118224E-5	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999970488637048	WITHOUT_CLASSIFICATION	2.951136295181439E-6	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999977409924697	WITHOUT_CLASSIFICATION	2.2590075301989425E-6	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.999983234214686	WITHOUT_CLASSIFICATION	1.6765785313849367E-5	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999878284250006	WITHOUT_CLASSIFICATION	1.21715749994508E-5	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9996737556132885	WITHOUT_CLASSIFICATION	3.262443867114955E-4	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999740467710628	WITHOUT_CLASSIFICATION	2.59532289372531E-5	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999977771400814	WITHOUT_CLASSIFICATION	2.2228599185273483E-6	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9999994636277719	WITHOUT_CLASSIFICATION	5.363722279815001E-7	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999986761687591	WITHOUT_CLASSIFICATION	1.3238312407903499E-6	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.999969143247744	WITHOUT_CLASSIFICATION	3.0856752256018284E-5	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999996390547969	WITHOUT_CLASSIFICATION	3.60945203040714E-7	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999982380479264	WITHOUT_CLASSIFICATION	1.7619520735033982E-6	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999998694130803	WITHOUT_CLASSIFICATION	1.3058691969801574E-6	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999712370270352	WITHOUT_CLASSIFICATION	2.8762972964865895E-5	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999999387701312	WITHOUT_CLASSIFICATION	6.122986888021434E-8	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.999998538868578	WITHOUT_CLASSIFICATION	1.4611314220059954E-6	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999971909271311	WITHOUT_CLASSIFICATION	2.809072868898003E-6	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999982481732387	WITHOUT_CLASSIFICATION	1.7518267613291258E-6	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999997621602141	WITHOUT_CLASSIFICATION	2.3783978595168334E-7	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999987568432902	WITHOUT_CLASSIFICATION	1.2431567097821847E-6	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.99999233473068	WITHOUT_CLASSIFICATION	7.665269319947339E-6	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999990624839667	WITHOUT_CLASSIFICATION	9.375160331983203E-7	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999910148636022	WITHOUT_CLASSIFICATION	8.985136397753306E-6	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999911564320794	WITHOUT_CLASSIFICATION	8.843567920680552E-6	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999930147413287	WITHOUT_CLASSIFICATION	6.9852586713468544E-6	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999986266124733	WITHOUT_CLASSIFICATION	1.3733875267211657E-6	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999985882822376	WITHOUT_CLASSIFICATION	1.4117177624119486E-6	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999806896808434	WITHOUT_CLASSIFICATION	1.9310319156549624E-5	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999974601540675	WITHOUT_CLASSIFICATION	2.5398459325457793E-6	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999998662570032	WITHOUT_CLASSIFICATION	1.3374299681440581E-7	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9999820711718251	WITHOUT_CLASSIFICATION	1.79288281748696E-5	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999994252851887	WITHOUT_CLASSIFICATION	5.747148113555977E-7	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999980133139591	WITHOUT_CLASSIFICATION	1.986686040914512E-6	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999921585513398	WITHOUT_CLASSIFICATION	7.841448660198366E-6	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999869383505456	WITHOUT_CLASSIFICATION	1.3061649454320234E-5	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.999998627914213	WITHOUT_CLASSIFICATION	1.3720857869353722E-6	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999882272008154	WITHOUT_CLASSIFICATION	1.1772799184607128E-5	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999465412516	WITHOUT_CLASSIFICATION	5.345874853656561E-8	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999975058909021	WITHOUT_CLASSIFICATION	2.4941090980055317E-6	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9999994037112974	WITHOUT_CLASSIFICATION	5.962887025453748E-7	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9999973602847146	WITHOUT_CLASSIFICATION	2.6397152853215936E-6	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.999954331688556	WITHOUT_CLASSIFICATION	4.5668311444057315E-5	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999999748966597	WITHOUT_CLASSIFICATION	2.5103340225000845E-8	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999836275563854	WITHOUT_CLASSIFICATION	1.6372443614596516E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.999999981703269	WITHOUT_CLASSIFICATION	1.8296731069413065E-8	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999924367947681	WITHOUT_CLASSIFICATION	7.563205231938453E-6	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9999908828824756	WITHOUT_CLASSIFICATION	9.117117524348466E-6	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999860438184243	WITHOUT_CLASSIFICATION	1.3956181575647433E-5	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999888634742078	WITHOUT_CLASSIFICATION	1.113652579224083E-5	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999835133293594	WITHOUT_CLASSIFICATION	1.648667064066602E-5	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999893668637675	WITHOUT_CLASSIFICATION	1.0633136232383037E-5	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999917044946588	WITHOUT_CLASSIFICATION	8.295505341268205E-6	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999921118962194	WITHOUT_CLASSIFICATION	7.888103780604497E-6	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999910556972286	WITHOUT_CLASSIFICATION	8.94430277147821E-6	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999999761056098	WITHOUT_CLASSIFICATION	2.389439033696876E-8	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999965784684668	WITHOUT_CLASSIFICATION	3.421531533180692E-6	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999982281405665	WITHOUT_CLASSIFICATION	1.7718594334723376E-6	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999769638790889	WITHOUT_CLASSIFICATION	2.3036120911172223E-5	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999860438184243	WITHOUT_CLASSIFICATION	1.3956181575647433E-5	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999835133293594	WITHOUT_CLASSIFICATION	1.648667064066602E-5	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999888634742078	WITHOUT_CLASSIFICATION	1.113652579224083E-5	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999915253855479	WITHOUT_CLASSIFICATION	8.474614452155342E-6	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999897104106352	WITHOUT_CLASSIFICATION	1.0289589364838954E-5	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999948616597575	WITHOUT_CLASSIFICATION	5.13834024250522E-6	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9999993180718499	WITHOUT_CLASSIFICATION	6.819281501368636E-7	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9994771295573296	WITHOUT_CLASSIFICATION	5.228704426704779E-4	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999985974016102	WITHOUT_CLASSIFICATION	1.4025983898163794E-6	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999991777111633	WITHOUT_CLASSIFICATION	8.222888366621482E-7	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999991185496161	WITHOUT_CLASSIFICATION	8.814503838797515E-7	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999937263265541	WITHOUT_CLASSIFICATION	6.273673445836658E-6	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999985135928852	WITHOUT_CLASSIFICATION	1.4864071149046704E-6	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999985723092626	WITHOUT_CLASSIFICATION	1.4276907374508622E-6	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999920573100275	WITHOUT_CLASSIFICATION	7.942689972499272E-6	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999979983186007	WITHOUT_CLASSIFICATION	2.0016813992588014E-6	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9999855487637134	WITHOUT_CLASSIFICATION	1.445123628650182E-5	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999999547015763	WITHOUT_CLASSIFICATION	4.5298423682774656E-8	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9999631609015306	WITHOUT_CLASSIFICATION	3.6839098469413576E-5	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.999939699741065	WITHOUT_CLASSIFICATION	6.030025893507378E-5	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999982430866244	WITHOUT_CLASSIFICATION	1.75691337548412E-6	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999982430866244	WITHOUT_CLASSIFICATION	1.75691337548412E-6	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9998931461184003	WITHOUT_CLASSIFICATION	1.0685388159968875E-4	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.9999932982358158	WITHOUT_CLASSIFICATION	6.7017641840965444E-6	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999820250117228	WITHOUT_CLASSIFICATION	1.7974988277111915E-5	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999097325384904	WITHOUT_CLASSIFICATION	9.026746150970241E-5	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999584484479811	WITHOUT_CLASSIFICATION	4.155155201893561E-5	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999951414579389	WITHOUT_CLASSIFICATION	4.858542061134416E-6	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999995807157241	WITHOUT_CLASSIFICATION	4.192842758367632E-7	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999983001383189	WITHOUT_CLASSIFICATION	1.6998616809785364E-6	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999994186007048	WITHOUT_CLASSIFICATION	5.813992951109856E-7	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999996882375147	WITHOUT_CLASSIFICATION	3.117624852792322E-7	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.999999060970734	WITHOUT_CLASSIFICATION	9.390292660171583E-7	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9999936722410092	WITHOUT_CLASSIFICATION	6.327758990831476E-6	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999686685744963	WITHOUT_CLASSIFICATION	3.1331425503810235E-5	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.999999691083742	WITHOUT_CLASSIFICATION	3.089162581123744E-7	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999994707903105	WITHOUT_CLASSIFICATION	5.292096894685623E-7	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.999999861490615	WITHOUT_CLASSIFICATION	1.3850938497264733E-7	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999915866894722	WITHOUT_CLASSIFICATION	8.413310527884279E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999999999075575	WITHOUT_CLASSIFICATION	9.244250952910853E-10	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999999999075575	WITHOUT_CLASSIFICATION	9.244250952910853E-10	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9999700569668316	WITHOUT_CLASSIFICATION	2.9943033168393092E-5	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9999911157894702	WITHOUT_CLASSIFICATION	8.884210529834917E-6	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999999480632361	WITHOUT_CLASSIFICATION	5.193676395121277E-8	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.99999061790923	WITHOUT_CLASSIFICATION	9.382090769984778E-6	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999779431494227	WITHOUT_CLASSIFICATION	2.2056850577313332E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999999999075575	WITHOUT_CLASSIFICATION	9.244250952910853E-10	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999999999075575	WITHOUT_CLASSIFICATION	9.244250952910853E-10	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999959156089954	WITHOUT_CLASSIFICATION	4.084391004601169E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999959156089954	WITHOUT_CLASSIFICATION	4.084391004601169E-6	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999762885956738	WITHOUT_CLASSIFICATION	2.371140432618955E-5	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999913464472543	WITHOUT_CLASSIFICATION	8.653552745761903E-6	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999999643909745	WITHOUT_CLASSIFICATION	3.5609025415723284E-8	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.999971036413964	WITHOUT_CLASSIFICATION	2.8963586035970216E-5	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999958335113401	WITHOUT_CLASSIFICATION	4.1664886598197774E-6	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999958335113401	WITHOUT_CLASSIFICATION	4.1664886598197774E-6	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999983955061529	WITHOUT_CLASSIFICATION	1.6044938471069412E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999999783967734	WITHOUT_CLASSIFICATION	2.1603226608656123E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999992677119469	WITHOUT_CLASSIFICATION	7.322880531428815E-7	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999813332432128	WITHOUT_CLASSIFICATION	1.8666756787202577E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999960079619679	WITHOUT_CLASSIFICATION	3.992038032129848E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9997783502752418	WITHOUT_CLASSIFICATION	2.216497247581931E-4	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999984981536411	WITHOUT_CLASSIFICATION	1.5018463590058815E-6	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999997369403895	WITHOUT_CLASSIFICATION	2.630596105693255E-7	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999989428268548	WITHOUT_CLASSIFICATION	1.0571731452195663E-6	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999873461656601	WITHOUT_CLASSIFICATION	1.2653834339880895E-5	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999939688214532	WITHOUT_CLASSIFICATION	6.031178546785843E-6	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999995321661251	WITHOUT_CLASSIFICATION	4.6783387486306987E-7	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999821742783871	WITHOUT_CLASSIFICATION	1.782572161281668E-5	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999993368446343	WITHOUT_CLASSIFICATION	6.631553657722915E-7	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.999999861490615	WITHOUT_CLASSIFICATION	1.3850938497264733E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999999999075575	WITHOUT_CLASSIFICATION	9.244250952910853E-10	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999959156089954	WITHOUT_CLASSIFICATION	4.084391004601169E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9997783502752418	WITHOUT_CLASSIFICATION	2.216497247581931E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999998346642887	WITHOUT_CLASSIFICATION	1.6533571135863846E-7	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999998346642887	WITHOUT_CLASSIFICATION	1.6533571135863846E-7	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999968053734011	WITHOUT_CLASSIFICATION	3.1946265989138783E-6	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999994595554453	WITHOUT_CLASSIFICATION	5.404445547171853E-7	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999998514438104	WITHOUT_CLASSIFICATION	1.485561895094156E-7	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999975310026377	WITHOUT_CLASSIFICATION	2.4689973623751004E-6	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999974813998147	WITHOUT_CLASSIFICATION	2.5186001852421892E-6	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999999960674898	WITHOUT_CLASSIFICATION	3.932510147297301E-9	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.999999335605333	WITHOUT_CLASSIFICATION	6.64394666945177E-7	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999940432974578	WITHOUT_CLASSIFICATION	5.956702542264912E-6	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999990001848327	WITHOUT_CLASSIFICATION	9.99815167332252E-7	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999973527495859	WITHOUT_CLASSIFICATION	2.6472504140810657E-6	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999347653237168	WITHOUT_CLASSIFICATION	6.523467628319883E-5	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999320147748	WITHOUT_CLASSIFICATION	6.798522517664435E-8	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999998987397587	WITHOUT_CLASSIFICATION	1.0126024128810125E-7	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999915866894722	WITHOUT_CLASSIFICATION	8.413310527884279E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999959156089954	WITHOUT_CLASSIFICATION	4.084391004601169E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999999783967734	WITHOUT_CLASSIFICATION	2.1603226608656123E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999992677119469	WITHOUT_CLASSIFICATION	7.322880531428815E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999992677119469	WITHOUT_CLASSIFICATION	7.322880531428815E-7	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999960079619679	WITHOUT_CLASSIFICATION	3.992038032129848E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9997783502752418	WITHOUT_CLASSIFICATION	2.216497247581931E-4	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9997783502752418	WITHOUT_CLASSIFICATION	2.216497247581931E-4	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999998346642887	WITHOUT_CLASSIFICATION	1.6533571135863846E-7	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999932574859758	WITHOUT_CLASSIFICATION	6.742514024148342E-6	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999941547421931	WITHOUT_CLASSIFICATION	5.845257806835441E-6	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999778729415	WITHOUT_CLASSIFICATION	2.212705848893722E-8	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999995208409574	WITHOUT_CLASSIFICATION	4.791590424560993E-7	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9998916708297498	WITHOUT_CLASSIFICATION	1.0832917025020805E-4	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999970602334515	WITHOUT_CLASSIFICATION	2.9397665484734203E-6	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999940348431036	WITHOUT_CLASSIFICATION	5.965156896417222E-6	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999992981906334	WITHOUT_CLASSIFICATION	7.018093665214809E-7	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999929045124677	WITHOUT_CLASSIFICATION	7.095487532358936E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999999783967734	WITHOUT_CLASSIFICATION	2.1603226608656123E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999992677119469	WITHOUT_CLASSIFICATION	7.322880531428815E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999992677119469	WITHOUT_CLASSIFICATION	7.322880531428815E-7	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999960079619679	WITHOUT_CLASSIFICATION	3.992038032129848E-6	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999940432974578	WITHOUT_CLASSIFICATION	5.956702542264912E-6	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999973527495859	WITHOUT_CLASSIFICATION	2.6472504140810657E-6	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999999748440279	WITHOUT_CLASSIFICATION	2.515597210802318E-8	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.999995377651715	WITHOUT_CLASSIFICATION	4.622348285082419E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999867891981242	WITHOUT_CLASSIFICATION	1.3210801875758203E-5	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999867891981242	WITHOUT_CLASSIFICATION	1.3210801875758203E-5	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999978789559488	WITHOUT_CLASSIFICATION	2.12104405117063E-6	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999999625351603	WITHOUT_CLASSIFICATION	3.7464839618132236E-8	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999964442024867	WITHOUT_CLASSIFICATION	3.5557975133943625E-6	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999637327377073	WITHOUT_CLASSIFICATION	3.6267262292612214E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999990814855315	WITHOUT_CLASSIFICATION	9.185144686135561E-7	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999990814855315	WITHOUT_CLASSIFICATION	9.185144686135561E-7	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9969075794129056	WITHOUT_CLASSIFICATION	0.0030924205870943283	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9969075794129056	WITHOUT_CLASSIFICATION	0.0030924205870943283	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999883949855882	WITHOUT_CLASSIFICATION	1.1605014411770998E-5	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999883949855882	WITHOUT_CLASSIFICATION	1.1605014411770998E-5	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999934206306916	WITHOUT_CLASSIFICATION	6.57936930843767E-6	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999925232378599	WITHOUT_CLASSIFICATION	7.476762139985047E-6	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9998760835572256	WITHOUT_CLASSIFICATION	1.2391644277438227E-4	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999952768160666	WITHOUT_CLASSIFICATION	4.7231839334559265E-6	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.99999941417449	WITHOUT_CLASSIFICATION	5.858255099447035E-7	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.9999958265341162	WITHOUT_CLASSIFICATION	4.173465883720846E-6	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999996071887147	WITHOUT_CLASSIFICATION	3.9281128526241344E-7	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.999998009628327	WITHOUT_CLASSIFICATION	1.9903716730476868E-6	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999868763446623	WITHOUT_CLASSIFICATION	1.3123655337684756E-5	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999961429492766	WITHOUT_CLASSIFICATION	3.857050723428918E-6	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999989886223485	WITHOUT_CLASSIFICATION	1.0113776514642692E-6	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999994442038407	WITHOUT_CLASSIFICATION	5.557961594144602E-7	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999982369956285	WITHOUT_CLASSIFICATION	1.7630043714941505E-6	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999911491693508	WITHOUT_CLASSIFICATION	8.850830649100216E-6	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999911491693508	WITHOUT_CLASSIFICATION	8.850830649100216E-6	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999962200978089	WITHOUT_CLASSIFICATION	3.779902191241701E-6	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999998900151108	WITHOUT_CLASSIFICATION	1.099848891436352E-7	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999945564796512	WITHOUT_CLASSIFICATION	5.443520348800833E-6	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999874504767	WITHOUT_CLASSIFICATION	1.254952328290724E-8	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.999999627617767	WITHOUT_CLASSIFICATION	3.723822329677053E-7	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999995665560871	WITHOUT_CLASSIFICATION	4.3344391284914804E-7	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999998768060124	WITHOUT_CLASSIFICATION	1.2319398747268207E-7	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999999359471152	WITHOUT_CLASSIFICATION	6.405288475085054E-8	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999983895256267	WITHOUT_CLASSIFICATION	1.6104743733166463E-6	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999998813888419	WITHOUT_CLASSIFICATION	1.1861115812288932E-7	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999946509154234	WITHOUT_CLASSIFICATION	5.3490845766575205E-6	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999985852679943	WITHOUT_CLASSIFICATION	1.4147320055747342E-6	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999999109398708	WITHOUT_CLASSIFICATION	8.906012911641218E-8	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9934940260624646	WITHOUT_CLASSIFICATION	0.006505973937535426	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999993853644685	WITHOUT_CLASSIFICATION	6.146355314917714E-7	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.999999546568677	WITHOUT_CLASSIFICATION	4.534313230285715E-7	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9999989011207858	WITHOUT_CLASSIFICATION	1.0988792140998255E-6	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999943397878688	WITHOUT_CLASSIFICATION	5.660212131288248E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999981659111552	WITHOUT_CLASSIFICATION	1.8340888448200163E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999981659111552	WITHOUT_CLASSIFICATION	1.8340888448200163E-6	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.99999995118596	WITHOUT_CLASSIFICATION	4.881404000219849E-8	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.99999655975543	WITHOUT_CLASSIFICATION	3.4402445700425153E-6	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.999876584794304	WITHOUT_CLASSIFICATION	1.2341520569596545E-4	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.999876584794304	WITHOUT_CLASSIFICATION	1.2341520569596545E-4	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.99999933290148	WITHOUT_CLASSIFICATION	6.670985199612546E-7	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999958196001665	WITHOUT_CLASSIFICATION	4.180399833612516E-6	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9998718697949723	WITHOUT_CLASSIFICATION	1.2813020502767573E-4	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999848943205231	WITHOUT_CLASSIFICATION	1.5105679476914357E-5	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999998821613639	WITHOUT_CLASSIFICATION	1.1783863600078061E-7	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999995894088549	WITHOUT_CLASSIFICATION	4.105911449728622E-7	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999995894088549	WITHOUT_CLASSIFICATION	4.105911449728622E-7	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999998091649877	WITHOUT_CLASSIFICATION	1.9083501231672128E-7	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999998944458262	WITHOUT_CLASSIFICATION	1.0555417383151806E-7	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999905604961017	WITHOUT_CLASSIFICATION	9.439503898335175E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.999997304472468	WITHOUT_CLASSIFICATION	2.6955275319510057E-6	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.99999655975543	WITHOUT_CLASSIFICATION	3.4402445700425153E-6	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999831090798332	WITHOUT_CLASSIFICATION	1.689092016678888E-5	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999986634754495	WITHOUT_CLASSIFICATION	1.3365245504887932E-6	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999986634754495	WITHOUT_CLASSIFICATION	1.3365245504887932E-6	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999787338637613	WITHOUT_CLASSIFICATION	2.1266136238667343E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997826844637	WITHOUT_CLASSIFICATION	2.173155362594415E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997826844637	WITHOUT_CLASSIFICATION	2.173155362594415E-7	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997683509044101	WITHOUT_CLASSIFICATION	2.316490955899565E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997683509044101	WITHOUT_CLASSIFICATION	2.316490955899565E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9997683509044101	WITHOUT_CLASSIFICATION	2.316490955899565E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997826844637	WITHOUT_CLASSIFICATION	2.173155362594415E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997826844637	WITHOUT_CLASSIFICATION	2.173155362594415E-7	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999787338637613	WITHOUT_CLASSIFICATION	2.1266136238667343E-5	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999998396053359	WITHOUT_CLASSIFICATION	1.6039466421736115E-7	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9999933009502158	WITHOUT_CLASSIFICATION	6.699049784255928E-6	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999954024279927	WITHOUT_CLASSIFICATION	4.597572007313264E-6	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9999361420402404	WITHOUT_CLASSIFICATION	6.385795975955283E-5	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999966686924991	WITHOUT_CLASSIFICATION	3.3313075009563716E-6	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999821153493533	WITHOUT_CLASSIFICATION	1.788465064662351E-5	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999884073243656	WITHOUT_CLASSIFICATION	1.1592675634357884E-5	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999995547735845	WITHOUT_CLASSIFICATION	4.452264154833408E-7	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999946509154234	WITHOUT_CLASSIFICATION	5.3490845766575205E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997826844637	WITHOUT_CLASSIFICATION	2.173155362594415E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997826844637	WITHOUT_CLASSIFICATION	2.173155362594415E-7	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999220385516	WITHOUT_CLASSIFICATION	7.796144838095058E-8	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999985377614713	WITHOUT_CLASSIFICATION	1.4622385287285628E-6	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999988317932147	WITHOUT_CLASSIFICATION	1.1682067852945526E-6	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999997860730035	WITHOUT_CLASSIFICATION	2.1392699658254812E-7	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9998971897350356	WITHOUT_CLASSIFICATION	1.0281026496445661E-4	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9998779746791088	WITHOUT_CLASSIFICATION	1.220253208911366E-4	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999063258659	WITHOUT_CLASSIFICATION	9.367413404876819E-8	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999937192842411	WITHOUT_CLASSIFICATION	6.28071575890948E-6	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999955496410887	WITHOUT_CLASSIFICATION	4.4503589113374955E-6	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999108475998	WITHOUT_CLASSIFICATION	8.915240019404062E-8	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999872455924909	WITHOUT_CLASSIFICATION	1.2754407509031409E-5	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999977561343734	WITHOUT_CLASSIFICATION	2.243865626663761E-6	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999996690240202	WITHOUT_CLASSIFICATION	3.3097597987022655E-7	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9997390571333433	WITHOUT_CLASSIFICATION	2.609428666566627E-4	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.999993363034394	WITHOUT_CLASSIFICATION	6.636965606029417E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999978352768103	WITHOUT_CLASSIFICATION	2.1647231897923146E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999978352768103	WITHOUT_CLASSIFICATION	2.1647231897923146E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999978352768103	WITHOUT_CLASSIFICATION	2.1647231897923146E-6	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999921575454713	WITHOUT_CLASSIFICATION	7.842454528592506E-6	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999972610880132	WITHOUT_CLASSIFICATION	2.7389119867307995E-6	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999579672981185	WITHOUT_CLASSIFICATION	4.203270188158258E-5	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999946584335675	WITHOUT_CLASSIFICATION	5.341566432540465E-6	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9997584163189726	WITHOUT_CLASSIFICATION	2.4158368102750766E-4	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.999998915727445	WITHOUT_CLASSIFICATION	1.0842725549092633E-6	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999999141006507	WITHOUT_CLASSIFICATION	8.589934929579738E-8	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999999416833633	WITHOUT_CLASSIFICATION	5.83166367937013E-8	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999988854181793	WITHOUT_CLASSIFICATION	1.1145818207594163E-6	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999993671958366	WITHOUT_CLASSIFICATION	6.328041634205378E-7	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999982498200886	WITHOUT_CLASSIFICATION	1.7501799114211379E-6	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999968937675902	WITHOUT_CLASSIFICATION	3.106232409767993E-6	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999998091649877	WITHOUT_CLASSIFICATION	1.9083501231672128E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997826844637	WITHOUT_CLASSIFICATION	2.173155362594415E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997826844637	WITHOUT_CLASSIFICATION	2.173155362594415E-7	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999787338637613	WITHOUT_CLASSIFICATION	2.1266136238667343E-5	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999821153493533	WITHOUT_CLASSIFICATION	1.788465064662351E-5	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999985377614713	WITHOUT_CLASSIFICATION	1.4622385287285628E-6	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999997860730035	WITHOUT_CLASSIFICATION	2.1392699658254812E-7	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9998779746791088	WITHOUT_CLASSIFICATION	1.220253208911366E-4	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999988317932147	WITHOUT_CLASSIFICATION	1.1682067852945526E-6	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999063258659	WITHOUT_CLASSIFICATION	9.367413404876819E-8	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999108475998	WITHOUT_CLASSIFICATION	8.915240019404062E-8	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999955496410887	WITHOUT_CLASSIFICATION	4.4503589113374955E-6	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999977561343734	WITHOUT_CLASSIFICATION	2.243865626663761E-6	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.999998755200221	WITHOUT_CLASSIFICATION	1.2447997790647788E-6	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9953831083892646	WITHOUT_CLASSIFICATION	0.004616891610735382	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999957190730171	WITHOUT_CLASSIFICATION	4.280926982901527E-6	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999999576318461	WITHOUT_CLASSIFICATION	4.2368153828058554E-8	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.999997149740603	WITHOUT_CLASSIFICATION	2.850259396850748E-6	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.999862500032232	WITHOUT_CLASSIFICATION	1.3749996776803183E-4	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999997175471055	WITHOUT_CLASSIFICATION	2.8245289459651925E-7	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9986282412353461	WITHOUT_CLASSIFICATION	0.0013717587646539652	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999992869278839	WITHOUT_CLASSIFICATION	7.130721160617107E-7	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999874057736126	WITHOUT_CLASSIFICATION	1.2594226387571306E-5	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9998913525984532	WITHOUT_CLASSIFICATION	1.0864740154678507E-4	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999994652754012	WITHOUT_CLASSIFICATION	5.347245989128771E-7	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999977263090802	WITHOUT_CLASSIFICATION	2.2736909196880785E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999984892541323	WITHOUT_CLASSIFICATION	1.510745867687118E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999927169644508	WITHOUT_CLASSIFICATION	7.283035549153805E-6	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999972909367028	WITHOUT_CLASSIFICATION	2.7090632973141783E-6	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999239977969	WITHOUT_CLASSIFICATION	7.600220312655766E-8	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.999994141131117	WITHOUT_CLASSIFICATION	5.858868883029924E-6	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999962615066686	WITHOUT_CLASSIFICATION	3.738493331218193E-6	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.999985455408138	WITHOUT_CLASSIFICATION	1.4544591862027709E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999944690798922	WITHOUT_CLASSIFICATION	5.5309201078286575E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999864953079	WITHOUT_CLASSIFICATION	1.3504692129552786E-8	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999864953079	WITHOUT_CLASSIFICATION	1.3504692129552786E-8	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999996435971796	WITHOUT_CLASSIFICATION	3.564028203461145E-7	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999998849227829	WITHOUT_CLASSIFICATION	1.1507721703166014E-7	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998979913320748	WITHOUT_CLASSIFICATION	1.0200866792515674E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998979913320748	WITHOUT_CLASSIFICATION	1.0200866792515674E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998979913320748	WITHOUT_CLASSIFICATION	1.0200866792515674E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999014699146664	WITHOUT_CLASSIFICATION	9.85300853334953E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999014699146664	WITHOUT_CLASSIFICATION	9.85300853334953E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999014699146664	WITHOUT_CLASSIFICATION	9.85300853334953E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999014699146664	WITHOUT_CLASSIFICATION	9.85300853334953E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999322641798597	WITHOUT_CLASSIFICATION	6.773582014031505E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999322641798597	WITHOUT_CLASSIFICATION	6.773582014031505E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999322641798597	WITHOUT_CLASSIFICATION	6.773582014031505E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999258165723877	WITHOUT_CLASSIFICATION	7.418342761235966E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999258165723877	WITHOUT_CLASSIFICATION	7.418342761235966E-5	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999153782582232	WITHOUT_CLASSIFICATION	8.462174177675503E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999215821652218	WITHOUT_CLASSIFICATION	7.84178347781908E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999998849227829	WITHOUT_CLASSIFICATION	1.1507721703166014E-7	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999998706056039	WITHOUT_CLASSIFICATION	1.2939439602503883E-7	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998979913320748	WITHOUT_CLASSIFICATION	1.0200866792515674E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998979913320748	WITHOUT_CLASSIFICATION	1.0200866792515674E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999014699146664	WITHOUT_CLASSIFICATION	9.85300853334953E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999014699146664	WITHOUT_CLASSIFICATION	9.85300853334953E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999014699146664	WITHOUT_CLASSIFICATION	9.85300853334953E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999322641798597	WITHOUT_CLASSIFICATION	6.773582014031505E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999322641798597	WITHOUT_CLASSIFICATION	6.773582014031505E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999258165723877	WITHOUT_CLASSIFICATION	7.418342761235966E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999215821652218	WITHOUT_CLASSIFICATION	7.84178347781908E-5	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.999997281685228	WITHOUT_CLASSIFICATION	2.718314772108242E-6	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.999997281685228	WITHOUT_CLASSIFICATION	2.718314772108242E-6	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999976178295245	WITHOUT_CLASSIFICATION	2.382170475616716E-6	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999976178295245	WITHOUT_CLASSIFICATION	2.382170475616716E-6	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.999982592136882	WITHOUT_CLASSIFICATION	1.7407863117918254E-5	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.999982592136882	WITHOUT_CLASSIFICATION	1.7407863117918254E-5	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999976902119652	WITHOUT_CLASSIFICATION	2.3097880347946845E-6	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999929916795682	WITHOUT_CLASSIFICATION	7.008320431808898E-6	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999929916795682	WITHOUT_CLASSIFICATION	7.008320431808898E-6	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999937202988568	WITHOUT_CLASSIFICATION	6.279701143192929E-6	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999937202988568	WITHOUT_CLASSIFICATION	6.279701143192929E-6	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999974160257002	WITHOUT_CLASSIFICATION	2.583974299734833E-6	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999991720748418	WITHOUT_CLASSIFICATION	8.279251582248555E-7	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999991720748418	WITHOUT_CLASSIFICATION	8.279251582248555E-7	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999997651647493	WITHOUT_CLASSIFICATION	2.3483525078848379E-7	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999949437880344	WITHOUT_CLASSIFICATION	5.056211965511894E-6	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.999998817946468	WITHOUT_CLASSIFICATION	1.182053531913478E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999014699146664	WITHOUT_CLASSIFICATION	9.85300853334953E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999014699146664	WITHOUT_CLASSIFICATION	9.85300853334953E-5	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999997651647493	WITHOUT_CLASSIFICATION	2.3483525078848379E-7	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999987454731885	WITHOUT_CLASSIFICATION	1.2545268116305188E-6	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999986777960411	WITHOUT_CLASSIFICATION	1.3222039588535875E-6	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999986777960411	WITHOUT_CLASSIFICATION	1.3222039588535875E-6	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999986777960411	WITHOUT_CLASSIFICATION	1.3222039588535875E-6	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9998948991186613	WITHOUT_CLASSIFICATION	1.0510088133876006E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999953265795712	WITHOUT_CLASSIFICATION	4.6734204287732615E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999370538847031	WITHOUT_CLASSIFICATION	6.29461152969791E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999370538847031	WITHOUT_CLASSIFICATION	6.29461152969791E-5	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999227839921375	WITHOUT_CLASSIFICATION	7.721600786254852E-5	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.999942509642718	WITHOUT_CLASSIFICATION	5.749035728193192E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999961492972416	WITHOUT_CLASSIFICATION	3.8507027584237785E-6	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.999995033623622	WITHOUT_CLASSIFICATION	4.966376378022035E-6	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999873968569184	WITHOUT_CLASSIFICATION	1.2603143081535267E-5	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.99999847473358	WITHOUT_CLASSIFICATION	1.5252664199971785E-6	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.99999847473358	WITHOUT_CLASSIFICATION	1.5252664199971785E-6	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999928705362658	WITHOUT_CLASSIFICATION	7.12946373418472E-6	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999033882756229	WITHOUT_CLASSIFICATION	9.661172437714613E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999033882756229	WITHOUT_CLASSIFICATION	9.661172437714613E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999014699146664	WITHOUT_CLASSIFICATION	9.85300853334953E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999986777960411	WITHOUT_CLASSIFICATION	1.3222039588535875E-6	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999953265795712	WITHOUT_CLASSIFICATION	4.6734204287732615E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999370538847031	WITHOUT_CLASSIFICATION	6.29461152969791E-5	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999227839921375	WITHOUT_CLASSIFICATION	7.721600786254852E-5	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.999942509642718	WITHOUT_CLASSIFICATION	5.749035728193192E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999961492972416	WITHOUT_CLASSIFICATION	3.8507027584237785E-6	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.999995033623622	WITHOUT_CLASSIFICATION	4.966376378022035E-6	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999033882756229	WITHOUT_CLASSIFICATION	9.661172437714613E-5	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999993418297737	WITHOUT_CLASSIFICATION	6.581702263892655E-7	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999998603336155	WITHOUT_CLASSIFICATION	1.396663844271271E-7	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999999115068129	WITHOUT_CLASSIFICATION	8.84931871936777E-8	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999864559305686	WITHOUT_CLASSIFICATION	1.3544069431453753E-5	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999980815622266	WITHOUT_CLASSIFICATION	1.9184377733393263E-6	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999992103470946	WITHOUT_CLASSIFICATION	7.896529054059894E-7	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999990858957327	WITHOUT_CLASSIFICATION	9.141042674187122E-7	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999990858957327	WITHOUT_CLASSIFICATION	9.141042674187122E-7	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999980497427334	WITHOUT_CLASSIFICATION	1.9502572666457554E-6	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999930898060853	WITHOUT_CLASSIFICATION	6.91019391481358E-6	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999934288685954	WITHOUT_CLASSIFICATION	6.571131404608832E-6	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.999984023562933	WITHOUT_CLASSIFICATION	1.5976437066907508E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999859546653623	WITHOUT_CLASSIFICATION	1.4045334637634663E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999859546653623	WITHOUT_CLASSIFICATION	1.4045334637634663E-5	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999888429686646	WITHOUT_CLASSIFICATION	1.115703133540657E-5	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999974681925209	WITHOUT_CLASSIFICATION	2.5318074790820463E-6	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999262972257814	WITHOUT_CLASSIFICATION	7.370277421860282E-5	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999262972257814	WITHOUT_CLASSIFICATION	7.370277421860282E-5	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999917436971544	WITHOUT_CLASSIFICATION	8.256302845609124E-6	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999949487353389	WITHOUT_CLASSIFICATION	5.051264661103007E-6	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999873968569184	WITHOUT_CLASSIFICATION	1.2603143081535267E-5	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999986062050623	WITHOUT_CLASSIFICATION	1.3937949376762877E-6	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999631667981	WITHOUT_CLASSIFICATION	3.68332020017787E-8	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999997013814017	WITHOUT_CLASSIFICATION	2.9861859820181805E-7	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999998938874045	WITHOUT_CLASSIFICATION	1.0611259542842738E-7	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.999999673437406	WITHOUT_CLASSIFICATION	3.265625940263769E-7	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999992509163825	WITHOUT_CLASSIFICATION	7.490836173777192E-7	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999820022258024	WITHOUT_CLASSIFICATION	1.799777419770129E-5	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999862076789814	WITHOUT_CLASSIFICATION	1.3792321018586336E-5	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999987204806229	WITHOUT_CLASSIFICATION	1.2795193771434485E-6	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999987204806229	WITHOUT_CLASSIFICATION	1.2795193771434485E-6	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999767880880829	WITHOUT_CLASSIFICATION	2.3211911917058137E-5	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999767880880829	WITHOUT_CLASSIFICATION	2.3211911917058137E-5	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999998748488406	WITHOUT_CLASSIFICATION	1.2515115950472144E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999998313554749	WITHOUT_CLASSIFICATION	1.6864452518978227E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999998313554749	WITHOUT_CLASSIFICATION	1.6864452518978227E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999998313554749	WITHOUT_CLASSIFICATION	1.6864452518978227E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999992411875304	WITHOUT_CLASSIFICATION	7.588124696087703E-7	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999966180204438	WITHOUT_CLASSIFICATION	3.3819795562156287E-6	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999966180204438	WITHOUT_CLASSIFICATION	3.3819795562156287E-6	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.999999923985963	WITHOUT_CLASSIFICATION	7.601403686694504E-8	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999379202817922	WITHOUT_CLASSIFICATION	6.207971820777872E-5	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.999993766241391	WITHOUT_CLASSIFICATION	6.233758608877297E-6	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9999489961115386	WITHOUT_CLASSIFICATION	5.1003888461364666E-5	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999917770962982	WITHOUT_CLASSIFICATION	8.222903701823557E-6	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.999978377901073	WITHOUT_CLASSIFICATION	2.1622098927045308E-5	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999393002969886	WITHOUT_CLASSIFICATION	6.0699703011395635E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999977263090802	WITHOUT_CLASSIFICATION	2.2736909196880785E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999977263090802	WITHOUT_CLASSIFICATION	2.2736909196880785E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999992411875304	WITHOUT_CLASSIFICATION	7.588124696087703E-7	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.999999923985963	WITHOUT_CLASSIFICATION	7.601403686694504E-8	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999025525251	WITHOUT_CLASSIFICATION	9.744747484895607E-8	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999379202817922	WITHOUT_CLASSIFICATION	6.207971820777872E-5	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.999993766241391	WITHOUT_CLASSIFICATION	6.233758608877297E-6	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999781241407638	WITHOUT_CLASSIFICATION	2.1875859236191888E-5	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9999982828975048	WITHOUT_CLASSIFICATION	1.7171024951237973E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999972388410044	WITHOUT_CLASSIFICATION	2.761158995582748E-6	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.999965930409815	WITHOUT_CLASSIFICATION	3.406959018511119E-5	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.999998713433708	WITHOUT_CLASSIFICATION	1.2865662918709384E-6	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999998234751035	WITHOUT_CLASSIFICATION	1.7652489641329516E-7	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.999999213973357	WITHOUT_CLASSIFICATION	7.860266429694642E-7	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999781241407638	WITHOUT_CLASSIFICATION	2.1875859236191888E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999811136990507	WITHOUT_CLASSIFICATION	1.8886300949254353E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999811136990507	WITHOUT_CLASSIFICATION	1.8886300949254353E-5	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999991325912926	WITHOUT_CLASSIFICATION	8.674087073588778E-7	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999777344693322	WITHOUT_CLASSIFICATION	2.2265530667816142E-5	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999898105249221	WITHOUT_CLASSIFICATION	1.0189475077882016E-5	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999415054341135	WITHOUT_CLASSIFICATION	5.8494565886408E-5	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999965126811712	WITHOUT_CLASSIFICATION	3.4873188288523465E-6	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9993188538105104	WITHOUT_CLASSIFICATION	6.811461894895405E-4	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999991086018635	WITHOUT_CLASSIFICATION	8.91398136563227E-7	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9998765665081316	WITHOUT_CLASSIFICATION	1.2343349186835347E-4	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999994947937493	WITHOUT_CLASSIFICATION	5.052062506229388E-7	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9999993996969679	WITHOUT_CLASSIFICATION	6.003030320899362E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999979834736067	WITHOUT_CLASSIFICATION	2.016526393359296E-6	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999415054341135	WITHOUT_CLASSIFICATION	5.8494565886408E-5	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999965126811712	WITHOUT_CLASSIFICATION	3.4873188288523465E-6	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999627367380798	WITHOUT_CLASSIFICATION	3.726326192012806E-5	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.99999853621594	WITHOUT_CLASSIFICATION	1.463784060004253E-6	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999999159199762	WITHOUT_CLASSIFICATION	8.408002383322319E-8	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999946740097471	WITHOUT_CLASSIFICATION	5.325990252886649E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999997547343153	WITHOUT_CLASSIFICATION	2.45265684693605E-7	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999992600977166	WITHOUT_CLASSIFICATION	7.399022835252212E-7	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.999888191200261	WITHOUT_CLASSIFICATION	1.118087997390575E-4	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.999997677975676	WITHOUT_CLASSIFICATION	2.3220243240281966E-6	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999992248955072	WITHOUT_CLASSIFICATION	7.751044927352719E-7	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999984443440035	WITHOUT_CLASSIFICATION	1.5556559964748226E-6	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999991504086506	WITHOUT_CLASSIFICATION	8.495913492858126E-7	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9999630462913159	WITHOUT_CLASSIFICATION	3.695370868411361E-5	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999752830512456	WITHOUT_CLASSIFICATION	2.471694875433418E-5	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999986702130149	WITHOUT_CLASSIFICATION	1.3297869850700294E-6	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999999889470828	WITHOUT_CLASSIFICATION	1.1052917277425412E-8	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999996621870594	WITHOUT_CLASSIFICATION	3.3781294061562725E-7	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999871044316594	WITHOUT_CLASSIFICATION	1.2895568340533813E-5	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999784062636304	WITHOUT_CLASSIFICATION	2.1593736369673135E-5	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999993211127057	WITHOUT_CLASSIFICATION	6.788872942918544E-7	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999629617757718	WITHOUT_CLASSIFICATION	3.7038224228211235E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999871044316594	WITHOUT_CLASSIFICATION	1.2895568340533813E-5	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999784062636304	WITHOUT_CLASSIFICATION	2.1593736369673135E-5	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999993211127057	WITHOUT_CLASSIFICATION	6.788872942918544E-7	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9999971772392361	WITHOUT_CLASSIFICATION	2.8227607639388343E-6	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999999009668133	WITHOUT_CLASSIFICATION	9.903318663565373E-8	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999986794866519	WITHOUT_CLASSIFICATION	1.3205133481281307E-6	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.999993963923561	WITHOUT_CLASSIFICATION	6.036076438956662E-6	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999875894712847	WITHOUT_CLASSIFICATION	1.2410528715354942E-5	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999307388601386	WITHOUT_CLASSIFICATION	6.926113986144584E-5	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999999215681954	WITHOUT_CLASSIFICATION	7.843180457856005E-8	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999972105334402	WITHOUT_CLASSIFICATION	2.7894665598099707E-6	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9999993244932391	WITHOUT_CLASSIFICATION	6.755067608265664E-7	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9999982229382817	WITHOUT_CLASSIFICATION	1.7770617183488051E-6	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.979374550615441	WITHOUT_CLASSIFICATION	0.020625449384559062	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999999048490008	WITHOUT_CLASSIFICATION	9.515099916001253E-8	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999999228939401	WITHOUT_CLASSIFICATION	7.710605986357311E-8	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9998150732263102	WITHOUT_CLASSIFICATION	1.8492677368984057E-4	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999986529650344	WITHOUT_CLASSIFICATION	1.3470349656259352E-6	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999995755143952	WITHOUT_CLASSIFICATION	4.2448560470938745E-7	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999996391380641	WITHOUT_CLASSIFICATION	3.608619358391141E-7	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999998525775833	WITHOUT_CLASSIFICATION	1.4742241676315308E-7	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999849815331595	WITHOUT_CLASSIFICATION	1.5018466840515246E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999749837537425	WITHOUT_CLASSIFICATION	2.5016246257461745E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999989573046499	WITHOUT_CLASSIFICATION	1.0426953500648885E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999980683262798	WITHOUT_CLASSIFICATION	1.931673720119594E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999980683262798	WITHOUT_CLASSIFICATION	1.931673720119594E-6	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999959196411312	WITHOUT_CLASSIFICATION	4.08035886878336E-6	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999959196411312	WITHOUT_CLASSIFICATION	4.08035886878336E-6	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999972495900373	WITHOUT_CLASSIFICATION	2.7504099626671484E-6	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999972495900373	WITHOUT_CLASSIFICATION	2.7504099626671484E-6	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999614276388399	WITHOUT_CLASSIFICATION	3.857236115999514E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999998210828867	WITHOUT_CLASSIFICATION	1.7891711336757823E-7	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999996621284863	WITHOUT_CLASSIFICATION	3.3787151362111537E-7	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999980165284302	WITHOUT_CLASSIFICATION	1.983471569728733E-6	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999927894909613	WITHOUT_CLASSIFICATION	7.210509038777977E-6	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.999972822717327	WITHOUT_CLASSIFICATION	2.7177282672974692E-5	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999949582288569	WITHOUT_CLASSIFICATION	5.041771143051071E-6	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9999928965797695	WITHOUT_CLASSIFICATION	7.103420230494315E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999977263090802	WITHOUT_CLASSIFICATION	2.2736909196880785E-6	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999614276388399	WITHOUT_CLASSIFICATION	3.857236115999514E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999998210828867	WITHOUT_CLASSIFICATION	1.7891711336757823E-7	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999996621284863	WITHOUT_CLASSIFICATION	3.3787151362111537E-7	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999927894909613	WITHOUT_CLASSIFICATION	7.210509038777977E-6	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.999972822717327	WITHOUT_CLASSIFICATION	2.7177282672974692E-5	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.999994191181539	WITHOUT_CLASSIFICATION	5.808818460934259E-6	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9999990975529865	WITHOUT_CLASSIFICATION	9.02447013425741E-7	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999956842683208	WITHOUT_CLASSIFICATION	4.315731679231441E-6	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999956842683208	WITHOUT_CLASSIFICATION	4.315731679231441E-6	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999823396874673	WITHOUT_CLASSIFICATION	1.7660312532728982E-5	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999997806693075	WITHOUT_CLASSIFICATION	2.193306923385246E-7	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999967727372877	WITHOUT_CLASSIFICATION	3.22726271223788E-6	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999998286833751	WITHOUT_CLASSIFICATION	1.7131662483425682E-7	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999998286833751	WITHOUT_CLASSIFICATION	1.7131662483425682E-7	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999996730909176	WITHOUT_CLASSIFICATION	3.26909082331814E-7	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999903424063	WITHOUT_CLASSIFICATION	9.657593826201833E-9	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999976779173205	WITHOUT_CLASSIFICATION	2.3220826795317827E-6	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999987377612263	WITHOUT_CLASSIFICATION	1.2622387738214963E-6	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999991880067632	WITHOUT_CLASSIFICATION	8.119932367280212E-7	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999984892541323	WITHOUT_CLASSIFICATION	1.510745867687118E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999927169644508	WITHOUT_CLASSIFICATION	7.283035549153805E-6	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999972909367028	WITHOUT_CLASSIFICATION	2.7090632973141783E-6	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999239977969	WITHOUT_CLASSIFICATION	7.600220312655766E-8	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.999985455408138	WITHOUT_CLASSIFICATION	1.4544591862027709E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999944690798922	WITHOUT_CLASSIFICATION	5.5309201078286575E-6	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999996730909176	WITHOUT_CLASSIFICATION	3.26909082331814E-7	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999903424063	WITHOUT_CLASSIFICATION	9.657593826201833E-9	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999987377612263	WITHOUT_CLASSIFICATION	1.2622387738214963E-6	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999981882190171	WITHOUT_CLASSIFICATION	1.811780982929188E-6	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999967727372877	WITHOUT_CLASSIFICATION	3.22726271223788E-6	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999967727372877	WITHOUT_CLASSIFICATION	3.22726271223788E-6	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999979834736067	WITHOUT_CLASSIFICATION	2.016526393359296E-6	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999979834736067	WITHOUT_CLASSIFICATION	2.016526393359296E-6	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999850637855	WITHOUT_CLASSIFICATION	1.493621442913536E-8	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999850637855	WITHOUT_CLASSIFICATION	1.493621442913536E-8	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999997694909544	WITHOUT_CLASSIFICATION	2.3050904550725634E-7	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999997359976452	WITHOUT_CLASSIFICATION	2.640023548066534E-7	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999997954316668	WITHOUT_CLASSIFICATION	2.0456833318484781E-7	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999986719265647	WITHOUT_CLASSIFICATION	1.3280734354032323E-6	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999993353147109	WITHOUT_CLASSIFICATION	6.646852891928332E-7	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999971331012047	WITHOUT_CLASSIFICATION	2.8668987952586297E-6	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999999806218238	WITHOUT_CLASSIFICATION	1.9378176126372862E-8	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999819106178331	WITHOUT_CLASSIFICATION	1.8089382166869266E-5	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999999372434617	WITHOUT_CLASSIFICATION	6.275653832783958E-8	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999995315181638	WITHOUT_CLASSIFICATION	4.684818361207696E-7	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999965344917605	WITHOUT_CLASSIFICATION	3.465508239591559E-6	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9999998398755973	WITHOUT_CLASSIFICATION	1.6012440267622376E-7	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999998458808944	WITHOUT_CLASSIFICATION	1.5411910571102539E-7	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999809359256091	WITHOUT_CLASSIFICATION	1.9064074390954062E-5	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999638513963501	WITHOUT_CLASSIFICATION	3.6148603649928295E-5	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9999923587293125	WITHOUT_CLASSIFICATION	7.64127068745535E-6	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9999995295538948	WITHOUT_CLASSIFICATION	4.704461050769523E-7	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999870184100239	WITHOUT_CLASSIFICATION	1.298158997597798E-5	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999669156251562	WITHOUT_CLASSIFICATION	3.308437484377385E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999927169644508	WITHOUT_CLASSIFICATION	7.283035549153805E-6	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999239977969	WITHOUT_CLASSIFICATION	7.600220312655766E-8	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999864953079	WITHOUT_CLASSIFICATION	1.3504692129552786E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999370538847031	WITHOUT_CLASSIFICATION	6.29461152969791E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999370538847031	WITHOUT_CLASSIFICATION	6.29461152969791E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999981882190171	WITHOUT_CLASSIFICATION	1.811780982929188E-6	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999967727372877	WITHOUT_CLASSIFICATION	3.22726271223788E-6	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999979834736067	WITHOUT_CLASSIFICATION	2.016526393359296E-6	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999850637855	WITHOUT_CLASSIFICATION	1.493621442913536E-8	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999917567083368	WITHOUT_CLASSIFICATION	8.243291663105751E-6	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9996635059802101	WITHOUT_CLASSIFICATION	3.3649401978988886E-4	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9997566770986555	WITHOUT_CLASSIFICATION	2.4332290134456463E-4	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999998932444099	WITHOUT_CLASSIFICATION	1.067555901327451E-7	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999995401347174	WITHOUT_CLASSIFICATION	4.598652826795935E-7	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999995401347174	WITHOUT_CLASSIFICATION	4.598652826795935E-7	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999999469073452	WITHOUT_CLASSIFICATION	5.309265490762253E-8	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999889019256858	WITHOUT_CLASSIFICATION	1.1098074314294044E-5	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999746111090522	WITHOUT_CLASSIFICATION	2.538889094783909E-5	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.999994682264561	WITHOUT_CLASSIFICATION	5.3177354390305705E-6	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999983670458051	WITHOUT_CLASSIFICATION	1.6329541948954065E-6	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999983670458051	WITHOUT_CLASSIFICATION	1.6329541948954065E-6	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.999698441948158	WITHOUT_CLASSIFICATION	3.015580518419608E-4	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9999889482091988	WITHOUT_CLASSIFICATION	1.1051790801181923E-5	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999935516440251	WITHOUT_CLASSIFICATION	6.448355974831639E-6	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999292085772333	WITHOUT_CLASSIFICATION	7.079142276668561E-5	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999780644204384	WITHOUT_CLASSIFICATION	2.1935579561689804E-5	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999987596735053	WITHOUT_CLASSIFICATION	1.240326494623548E-6	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999935213858013	WITHOUT_CLASSIFICATION	6.478614198728605E-6	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999996450487839	WITHOUT_CLASSIFICATION	3.54951216122012E-7	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.999933166950318	WITHOUT_CLASSIFICATION	6.683304968192111E-5	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9999968719678545	WITHOUT_CLASSIFICATION	3.1280321456456915E-6	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999999645750015	WITHOUT_CLASSIFICATION	3.542499852094337E-8	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999875644170677	WITHOUT_CLASSIFICATION	1.2435582932313284E-5	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999857774354238	WITHOUT_CLASSIFICATION	1.4222564576167044E-5	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999988191111483	WITHOUT_CLASSIFICATION	1.1808888517917097E-6	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999900238246777	WITHOUT_CLASSIFICATION	9.97617532226576E-6	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999998601615102	WITHOUT_CLASSIFICATION	1.3983848977830817E-7	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999995433306867	WITHOUT_CLASSIFICATION	4.566693132585347E-7	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999993181010856	WITHOUT_CLASSIFICATION	6.818989144073127E-7	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999857728106963	WITHOUT_CLASSIFICATION	1.4227189303658355E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999981960282338	WITHOUT_CLASSIFICATION	1.8039717662641217E-6	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999996943367525	WITHOUT_CLASSIFICATION	3.0566324741477464E-7	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999991744062704	WITHOUT_CLASSIFICATION	8.255937296112125E-7	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999991744062704	WITHOUT_CLASSIFICATION	8.255937296112125E-7	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999968749541592	WITHOUT_CLASSIFICATION	3.125045840776241E-6	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.999999752827979	WITHOUT_CLASSIFICATION	2.471720209604107E-7	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999999359471152	WITHOUT_CLASSIFICATION	6.405288475085054E-8	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999999359471152	WITHOUT_CLASSIFICATION	6.405288475085054E-8	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9980030494327131	WITHOUT_CLASSIFICATION	0.00199695056728697	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999993105887879	WITHOUT_CLASSIFICATION	6.894112120336235E-7	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999973184918715	WITHOUT_CLASSIFICATION	2.6815081285072596E-6	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999890012786767	WITHOUT_CLASSIFICATION	1.0998721323259605E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999890012786767	WITHOUT_CLASSIFICATION	1.0998721323259605E-5	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999891584726798	WITHOUT_CLASSIFICATION	1.0841527320281187E-5	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999162455588	WITHOUT_CLASSIFICATION	8.375444122541596E-8	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999974664883838	WITHOUT_CLASSIFICATION	2.5335116160220396E-6	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999913596630208	WITHOUT_CLASSIFICATION	8.640336979229489E-6	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999997244130945	WITHOUT_CLASSIFICATION	2.7558690551005226E-7	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999995881841323	WITHOUT_CLASSIFICATION	4.118158676881558E-7	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999994605466344	WITHOUT_CLASSIFICATION	5.39453365611452E-7	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999888377562585	WITHOUT_CLASSIFICATION	1.1162243741529743E-5	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9999989784957933	WITHOUT_CLASSIFICATION	1.0215042066849673E-6	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999937982329115	WITHOUT_CLASSIFICATION	6.201767088616147E-6	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999975925011281	WITHOUT_CLASSIFICATION	2.4074988718868685E-6	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.999882489339388	WITHOUT_CLASSIFICATION	1.1751066061208612E-4	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9999894947889629	WITHOUT_CLASSIFICATION	1.0505211036976751E-5	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.999999796867991	WITHOUT_CLASSIFICATION	2.0313200899907266E-7	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999989214671487	WITHOUT_CLASSIFICATION	1.0785328511952445E-6	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999991967232057	WITHOUT_CLASSIFICATION	8.032767942435583E-7	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999995950190347	WITHOUT_CLASSIFICATION	4.0498096533185954E-7	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.999978076284943	WITHOUT_CLASSIFICATION	2.1923715057068065E-5	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999973875483686	WITHOUT_CLASSIFICATION	2.6124516313240273E-6	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999999448165836	WITHOUT_CLASSIFICATION	5.518341640762573E-8	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9999955179028881	WITHOUT_CLASSIFICATION	4.4820971118330375E-6	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9999974990623683	WITHOUT_CLASSIFICATION	2.5009376316816967E-6	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999983534505874	WITHOUT_CLASSIFICATION	1.6465494127075219E-6	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999985341202927	WITHOUT_CLASSIFICATION	1.4658797073410603E-6	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999937198642571	WITHOUT_CLASSIFICATION	6.2801357428912655E-6	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999996109255217	WITHOUT_CLASSIFICATION	3.890744782972538E-7	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999340952480403	WITHOUT_CLASSIFICATION	6.590475195960408E-5	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999985527731167	WITHOUT_CLASSIFICATION	1.447226883264999E-6	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.999995984300701	WITHOUT_CLASSIFICATION	4.0156992989265695E-6	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999991659658654	WITHOUT_CLASSIFICATION	8.340341346043587E-7	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999982466701063	WITHOUT_CLASSIFICATION	1.7533298937021894E-6	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.999999796867991	WITHOUT_CLASSIFICATION	2.0313200899907266E-7	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999985527731167	WITHOUT_CLASSIFICATION	1.447226883264999E-6	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.999995984300701	WITHOUT_CLASSIFICATION	4.0156992989265695E-6	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999982466701063	WITHOUT_CLASSIFICATION	1.7533298937021894E-6	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999982667680093	WITHOUT_CLASSIFICATION	1.733231990655675E-6	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9999869199439124	WITHOUT_CLASSIFICATION	1.3080056087519083E-5	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999988397393188	WITHOUT_CLASSIFICATION	1.1602606812454493E-6	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999902880323854	WITHOUT_CLASSIFICATION	9.711967614599147E-6	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999979322590729	WITHOUT_CLASSIFICATION	2.0677409271721027E-6	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999999115705712	WITHOUT_CLASSIFICATION	8.842942878882901E-8	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9999978706277268	WITHOUT_CLASSIFICATION	2.129372273185241E-6	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9999990582972801	WITHOUT_CLASSIFICATION	9.417027198576775E-7	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9999994466136518	WITHOUT_CLASSIFICATION	5.533863482903736E-7	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999684854928158	WITHOUT_CLASSIFICATION	3.15145071842084E-5	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999864282109693	WITHOUT_CLASSIFICATION	1.3571789030751644E-5	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999864282109693	WITHOUT_CLASSIFICATION	1.3571789030751644E-5	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999999831554262	WITHOUT_CLASSIFICATION	1.6844573846353305E-8	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999938726451018	WITHOUT_CLASSIFICATION	6.127354898307412E-6	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999996211888302	WITHOUT_CLASSIFICATION	3.788111696743144E-7	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.999996632127144	WITHOUT_CLASSIFICATION	3.3678728561795237E-6	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999997138503416	WITHOUT_CLASSIFICATION	2.8614965839271236E-7	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999994308006455	WITHOUT_CLASSIFICATION	5.691993545189824E-7	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999696765579633	WITHOUT_CLASSIFICATION	3.0323442036706024E-5	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999572975601	WITHOUT_CLASSIFICATION	4.2702439940685236E-8	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999996680585208	WITHOUT_CLASSIFICATION	3.3194147919995776E-7	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999995790844024	WITHOUT_CLASSIFICATION	4.2091559750752594E-7	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999998718349589	WITHOUT_CLASSIFICATION	1.2816504118997543E-7	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999998109416662	WITHOUT_CLASSIFICATION	1.8905833381533474E-7	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999969287496928	WITHOUT_CLASSIFICATION	3.0712503071978076E-6	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9997399230788975	WITHOUT_CLASSIFICATION	2.600769211024291E-4	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9999709553078815	WITHOUT_CLASSIFICATION	2.9044692118551536E-5	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9998872343001346	WITHOUT_CLASSIFICATION	1.1276569986538119E-4	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9999888721519473	WITHOUT_CLASSIFICATION	1.1127848052593633E-5	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9999979487684335	WITHOUT_CLASSIFICATION	2.05123156651213E-6	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9999952192245148	WITHOUT_CLASSIFICATION	4.780775485219987E-6	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9999461045643084	WITHOUT_CLASSIFICATION	5.3895435691522694E-5	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9999921437295325	WITHOUT_CLASSIFICATION	7.856270467593142E-6	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9999961521880382	WITHOUT_CLASSIFICATION	3.84781196186315E-6	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999858443242056	WITHOUT_CLASSIFICATION	1.4155675794485145E-5	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9999768569945345	WITHOUT_CLASSIFICATION	2.314300546537524E-5	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.999999809044747	WITHOUT_CLASSIFICATION	1.909552530233311E-7	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9999943736159066	WITHOUT_CLASSIFICATION	5.6263840934828645E-6	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999999991536351	WITHOUT_CLASSIFICATION	8.46364878646695E-10	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999997930483986	WITHOUT_CLASSIFICATION	2.0695160140510417E-7	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.9999984272577621	WITHOUT_CLASSIFICATION	1.5727422379718532E-6	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999984088275533	WITHOUT_CLASSIFICATION	1.5911724466694763E-6	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999988544806037	WITHOUT_CLASSIFICATION	1.1455193963769362E-6	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9999995114195439	WITHOUT_CLASSIFICATION	4.885804560175127E-7	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999994808452586	WITHOUT_CLASSIFICATION	5.191547414819651E-7	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999916841873214	WITHOUT_CLASSIFICATION	8.315812678635938E-6	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999993421207718	WITHOUT_CLASSIFICATION	6.578792281943252E-7	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999985775159869	WITHOUT_CLASSIFICATION	1.4224840131314636E-6	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999992718171801	WITHOUT_CLASSIFICATION	7.281828199168977E-7	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.999998989632465	WITHOUT_CLASSIFICATION	1.0103675350019297E-6	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.999998307873975	WITHOUT_CLASSIFICATION	1.6921260249583306E-6	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999996084281436	WITHOUT_CLASSIFICATION	3.9157185641790966E-7	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999991345464001	WITHOUT_CLASSIFICATION	8.654536000214279E-7	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998415900699821	WITHOUT_CLASSIFICATION	1.5840993001794228E-4	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.9999944565823194	WITHOUT_CLASSIFICATION	5.543417680476642E-6	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999999522622268	WITHOUT_CLASSIFICATION	4.7737773078221565E-8	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999980681122727	WITHOUT_CLASSIFICATION	1.9318877274517093E-6	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999979965067668	WITHOUT_CLASSIFICATION	2.003493233127641E-6	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999999207303827	WITHOUT_CLASSIFICATION	7.926961734438223E-8	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999999805531549	WITHOUT_CLASSIFICATION	1.94468451480677E-8	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999999877788528	WITHOUT_CLASSIFICATION	1.2221147218204081E-8	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999993752265548	WITHOUT_CLASSIFICATION	6.247734452773688E-7	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9998443033178808	WITHOUT_CLASSIFICATION	1.5569668211932766E-4	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999977336600119	WITHOUT_CLASSIFICATION	2.266339988070691E-6	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.999999718261437	WITHOUT_CLASSIFICATION	2.8173856303956804E-7	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.999999677699952	WITHOUT_CLASSIFICATION	3.223000479897128E-7	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999956348002246	WITHOUT_CLASSIFICATION	4.365199775425674E-6	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999973099769631	WITHOUT_CLASSIFICATION	2.6900230369144104E-6	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999534432824859	WITHOUT_CLASSIFICATION	4.6556717514089335E-5	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9997164444671108	WITHOUT_CLASSIFICATION	2.8355553288922055E-4	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9959897113593476	WITHOUT_CLASSIFICATION	0.004010288640652363	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9998493546812507	WITHOUT_CLASSIFICATION	1.5064531874939773E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9998493546812507	WITHOUT_CLASSIFICATION	1.5064531874939773E-4	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999986488149925	WITHOUT_CLASSIFICATION	1.3511850075367663E-6	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999995389012644	WITHOUT_CLASSIFICATION	4.6109873574067074E-7	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999992002409154	WITHOUT_CLASSIFICATION	7.997590845748763E-7	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999984319713497	WITHOUT_CLASSIFICATION	1.568028650304888E-6	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999971290405145	WITHOUT_CLASSIFICATION	2.870959485525123E-6	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999998196351106	WITHOUT_CLASSIFICATION	1.8036488935785928E-7	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999657667992404	WITHOUT_CLASSIFICATION	3.423320075958592E-5	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999445510650335	WITHOUT_CLASSIFICATION	5.54489349664162E-5	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999977201060708	WITHOUT_CLASSIFICATION	2.279893929165776E-6	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999927090803802	WITHOUT_CLASSIFICATION	7.290919619778962E-6	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999990635950305	WITHOUT_CLASSIFICATION	9.36404969397347E-7	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9999984073258688	WITHOUT_CLASSIFICATION	1.5926741312617106E-6	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999904255988028	WITHOUT_CLASSIFICATION	9.5744011970808E-6	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9994866798976554	WITHOUT_CLASSIFICATION	5.133201023446811E-4	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.999998387046707	WITHOUT_CLASSIFICATION	1.6129532930419238E-6	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999975580036287	WITHOUT_CLASSIFICATION	2.4419963713384423E-6	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9999816604634061	WITHOUT_CLASSIFICATION	1.833953659395371E-5	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999998537990702	WITHOUT_CLASSIFICATION	1.4620092987001283E-7	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999980358132003	WITHOUT_CLASSIFICATION	1.9641867996376653E-6	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999939473499384	WITHOUT_CLASSIFICATION	6.052650061493956E-6	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999997539584649	WITHOUT_CLASSIFICATION	2.460415352019944E-7	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999945980467747	WITHOUT_CLASSIFICATION	5.401953225247956E-6	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999401932403771	WITHOUT_CLASSIFICATION	5.980675962300301E-5	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999872785209036	WITHOUT_CLASSIFICATION	1.2721479096345662E-5	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999997024641689	WITHOUT_CLASSIFICATION	2.975358311369428E-7	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999507019123991	WITHOUT_CLASSIFICATION	4.929808760091959E-5	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999953837270547	WITHOUT_CLASSIFICATION	4.616272945391603E-6	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999998275366591	WITHOUT_CLASSIFICATION	1.7246334084958923E-7	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999986260716514	WITHOUT_CLASSIFICATION	1.3739283486424127E-6	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999999991613792	WITHOUT_CLASSIFICATION	8.386209065874115E-10	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999856476518908	WITHOUT_CLASSIFICATION	1.4352348109148074E-5	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999985995927172	WITHOUT_CLASSIFICATION	1.4004072828223618E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999999301033531	WITHOUT_CLASSIFICATION	6.989664689899899E-7	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.999958367030817	WITHOUT_CLASSIFICATION	4.163296918293869E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999999301033531	WITHOUT_CLASSIFICATION	6.989664689899899E-7	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999992920729928	WITHOUT_CLASSIFICATION	7.079270071458319E-7	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999991087765435	WITHOUT_CLASSIFICATION	8.9122345652321E-7	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999991087765435	WITHOUT_CLASSIFICATION	8.9122345652321E-7	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999991087765435	WITHOUT_CLASSIFICATION	8.9122345652321E-7	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999993712346971	WITHOUT_CLASSIFICATION	6.287653028479248E-7	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999993712346971	WITHOUT_CLASSIFICATION	6.287653028479248E-7	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.999972413164319	WITHOUT_CLASSIFICATION	2.758683568113278E-5	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999998724510512	WITHOUT_CLASSIFICATION	1.2754894882684704E-7	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999932929535527	WITHOUT_CLASSIFICATION	6.707046447314065E-6	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9992806010205944	WITHOUT_CLASSIFICATION	7.193989794055954E-4	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999990504628763	WITHOUT_CLASSIFICATION	9.495371236726209E-7	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999767858648719	WITHOUT_CLASSIFICATION	2.3214135128181687E-5	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999975718901093	WITHOUT_CLASSIFICATION	2.428109890751741E-6	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999917801689902	WITHOUT_CLASSIFICATION	8.219831009850197E-6	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999997829212504	WITHOUT_CLASSIFICATION	2.1707874965190908E-7	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999977903946873	WITHOUT_CLASSIFICATION	2.209605312770262E-6	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999953612270562	WITHOUT_CLASSIFICATION	4.638772943756397E-6	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999950800112254	WITHOUT_CLASSIFICATION	4.919988774630258E-6	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999985369556161	WITHOUT_CLASSIFICATION	1.4630443839104547E-6	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9999983112381987	WITHOUT_CLASSIFICATION	1.6887618014090513E-6	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999993446694109	WITHOUT_CLASSIFICATION	6.553305892087714E-7	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9999995021925345	WITHOUT_CLASSIFICATION	4.978074654553693E-7	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999999207433666	WITHOUT_CLASSIFICATION	7.925663340232387E-8	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999965463551682	WITHOUT_CLASSIFICATION	3.4536448317079543E-6	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999965463551682	WITHOUT_CLASSIFICATION	3.4536448317079543E-6	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9999971496859279	WITHOUT_CLASSIFICATION	2.850314072047396E-6	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999978719084146	WITHOUT_CLASSIFICATION	2.1280915853916137E-6	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999978719084146	WITHOUT_CLASSIFICATION	2.1280915853916137E-6	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999988525205632	WITHOUT_CLASSIFICATION	1.1474794367888816E-6	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9999985631375891	WITHOUT_CLASSIFICATION	1.4368624108642434E-6	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9996421749456806	WITHOUT_CLASSIFICATION	3.578250543194421E-4	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9999975998214484	WITHOUT_CLASSIFICATION	2.4001785515912507E-6	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9999962860586136	WITHOUT_CLASSIFICATION	3.7139413863597448E-6	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999995789347493	WITHOUT_CLASSIFICATION	4.2106525075782944E-7	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9999991099597847	WITHOUT_CLASSIFICATION	8.900402153774971E-7	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999951699812887	WITHOUT_CLASSIFICATION	4.8300187112313375E-6	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999983785448507	WITHOUT_CLASSIFICATION	1.621455149233953E-6	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999769476844764	WITHOUT_CLASSIFICATION	2.305231552350799E-5	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999765959488645	WITHOUT_CLASSIFICATION	2.3404051135654696E-5	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999644141573439	WITHOUT_CLASSIFICATION	3.55858426560809E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999946296212096	WITHOUT_CLASSIFICATION	5.370378790382371E-6	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999998194719405	WITHOUT_CLASSIFICATION	1.8052805953704545E-7	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999917801689902	WITHOUT_CLASSIFICATION	8.219831009850197E-6	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999041539256622	WITHOUT_CLASSIFICATION	9.584607433784299E-5	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999979335934475	WITHOUT_CLASSIFICATION	2.066406552501478E-6	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999205498173738	WITHOUT_CLASSIFICATION	7.94501826261556E-5	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999205498173738	WITHOUT_CLASSIFICATION	7.94501826261556E-5	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999995212562606	WITHOUT_CLASSIFICATION	4.787437394793112E-7	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.999999612832447	WITHOUT_CLASSIFICATION	3.871675529883331E-7	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999990271352968	WITHOUT_CLASSIFICATION	9.728647032296071E-7	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9999979330281008	WITHOUT_CLASSIFICATION	2.06697189911267E-6	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999999880926005	WITHOUT_CLASSIFICATION	1.190739948675309E-8	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999987463273793	WITHOUT_CLASSIFICATION	1.2536726207310167E-6	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999993264684807	WITHOUT_CLASSIFICATION	6.735315194091543E-7	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999996982441048	WITHOUT_CLASSIFICATION	3.017558951680826E-7	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999998332675543	WITHOUT_CLASSIFICATION	1.667324456677949E-7	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999999584206285	WITHOUT_CLASSIFICATION	4.157937150173213E-8	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.999894134119892	WITHOUT_CLASSIFICATION	1.0586588010800465E-4	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999868670638195	WITHOUT_CLASSIFICATION	1.3132936180467321E-5	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9840540373715728	WITHOUT_CLASSIFICATION	0.015945962628427207	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999939432138825	WITHOUT_CLASSIFICATION	6.056786117574116E-6	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999999361606807	WITHOUT_CLASSIFICATION	6.38393193214926E-8	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999985967423509	WITHOUT_CLASSIFICATION	1.4032576491056504E-6	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999556983508592	WITHOUT_CLASSIFICATION	4.430164914087209E-5	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999871516136087	WITHOUT_CLASSIFICATION	1.2848386391284626E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999858911581143	WITHOUT_CLASSIFICATION	1.4108841885603389E-5	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999147173757	WITHOUT_CLASSIFICATION	8.528262428558351E-8	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999960960276285	WITHOUT_CLASSIFICATION	3.903972371461844E-6	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999888553842232	WITHOUT_CLASSIFICATION	1.1144615776700013E-5	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999993133426648	WITHOUT_CLASSIFICATION	6.866573352701429E-7	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999709008297	WITHOUT_CLASSIFICATION	2.9099170315831474E-8	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999995633527377	WITHOUT_CLASSIFICATION	4.3664726237187367E-7	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.99999812505374	WITHOUT_CLASSIFICATION	1.8749462599788436E-6	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999996785806753	WITHOUT_CLASSIFICATION	3.214193247129225E-7	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999978894376509	WITHOUT_CLASSIFICATION	2.1105623490168973E-6	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999999141495063	WITHOUT_CLASSIFICATION	8.585049368114208E-8	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999999992750341	WITHOUT_CLASSIFICATION	7.249657733868254E-10	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999994340215558	WITHOUT_CLASSIFICATION	5.65978444233742E-7	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9996700665534727	WITHOUT_CLASSIFICATION	3.29933446527328E-4	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999988154094583	WITHOUT_CLASSIFICATION	1.184590541673176E-6	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999998226714211	WITHOUT_CLASSIFICATION	1.7732857892385372E-7	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999995405790436	WITHOUT_CLASSIFICATION	4.594209563833371E-7	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.999991277752727	WITHOUT_CLASSIFICATION	8.722247272928277E-6	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999978894376509	WITHOUT_CLASSIFICATION	2.1105623490168973E-6	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999943481869	WITHOUT_CLASSIFICATION	5.651813166835829E-9	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999995405790436	WITHOUT_CLASSIFICATION	4.594209563833371E-7	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999999097725544	WITHOUT_CLASSIFICATION	9.022744561685704E-8	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999981498505466	WITHOUT_CLASSIFICATION	1.8501494534274541E-6	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999944218993906	WITHOUT_CLASSIFICATION	5.57810060942041E-6	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999983224166648	WITHOUT_CLASSIFICATION	1.6775833351899768E-6	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999986677195839	WITHOUT_CLASSIFICATION	1.3322804161792386E-6	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999972001235433	WITHOUT_CLASSIFICATION	2.7998764566405486E-6	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999972001235433	WITHOUT_CLASSIFICATION	2.7998764566405486E-6	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.999988409613806	WITHOUT_CLASSIFICATION	1.1590386194023876E-5	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.999998147535657	WITHOUT_CLASSIFICATION	1.852464342974285E-6	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9998543198105363	WITHOUT_CLASSIFICATION	1.456801894636953E-4	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9998543198105363	WITHOUT_CLASSIFICATION	1.456801894636953E-4	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999993326613074	WITHOUT_CLASSIFICATION	6.673386925964269E-7	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.999466941964707	WITHOUT_CLASSIFICATION	5.330580352930223E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9997694507514199	WITHOUT_CLASSIFICATION	2.305492485801241E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9997694507514199	WITHOUT_CLASSIFICATION	2.305492485801241E-4	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.999991654986194	WITHOUT_CLASSIFICATION	8.34501380606239E-6	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999965892955716	WITHOUT_CLASSIFICATION	3.4107044285170753E-6	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999995302277833	WITHOUT_CLASSIFICATION	4.697722167680015E-7	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999997207198552	WITHOUT_CLASSIFICATION	2.7928014475629596E-7	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.99995779827002	WITHOUT_CLASSIFICATION	4.220172998005988E-5	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999455905895231	WITHOUT_CLASSIFICATION	5.440941047681403E-5	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999997242213258	WITHOUT_CLASSIFICATION	2.7577867424606445E-7	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999913792613866	WITHOUT_CLASSIFICATION	8.620738613445561E-6	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999964070309507	WITHOUT_CLASSIFICATION	3.5929690493873863E-6	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999902197637502	WITHOUT_CLASSIFICATION	9.780236249815012E-6	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9999623436679078	WITHOUT_CLASSIFICATION	3.765633209220561E-5	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999953199525272	WITHOUT_CLASSIFICATION	4.680047472708884E-6	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999998236137474	WITHOUT_CLASSIFICATION	1.7638625259358056E-7	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999909458083585	WITHOUT_CLASSIFICATION	9.054191641495298E-6	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999939233222114	WITHOUT_CLASSIFICATION	6.07667778869647E-6	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999974691412158	WITHOUT_CLASSIFICATION	2.53085878418362E-6	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999993236191025	WITHOUT_CLASSIFICATION	6.763808975875962E-7	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999978826763852	WITHOUT_CLASSIFICATION	2.117323614807952E-6	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999998513648836	WITHOUT_CLASSIFICATION	1.486351165186102E-7	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.8205386995577707	WITHOUT_CLASSIFICATION	0.17946130044222922	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999979009393438	WITHOUT_CLASSIFICATION	2.0990606562829394E-6	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999990426384423	WITHOUT_CLASSIFICATION	9.573615576955321E-7	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999987102361488	WITHOUT_CLASSIFICATION	1.289763851126434E-6	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999828856334755	WITHOUT_CLASSIFICATION	1.7114366524503367E-5	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999924298625094	WITHOUT_CLASSIFICATION	7.57013749059028E-6	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999957350579154	WITHOUT_CLASSIFICATION	4.264942084587944E-6	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999999360619226	WITHOUT_CLASSIFICATION	6.393807744159946E-8	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9999956383220484	WITHOUT_CLASSIFICATION	4.361677951652836E-6	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999988739694334	WITHOUT_CLASSIFICATION	1.1260305665834943E-6	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999988739694334	WITHOUT_CLASSIFICATION	1.1260305665834943E-6	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999999979195834	WITHOUT_CLASSIFICATION	2.080416533682773E-9	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999999897230605	WITHOUT_CLASSIFICATION	1.0276939547465695E-8	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999990412337332	WITHOUT_CLASSIFICATION	9.587662668518541E-7	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999554566424271	WITHOUT_CLASSIFICATION	4.454335757280972E-5	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.999992507067949	WITHOUT_CLASSIFICATION	7.492932051049747E-6	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9999959088051803	WITHOUT_CLASSIFICATION	4.0911948198016776E-6	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999754267878675	WITHOUT_CLASSIFICATION	2.457321213249787E-5	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999996847334034	WITHOUT_CLASSIFICATION	3.152665966048923E-7	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.999999945463218	WITHOUT_CLASSIFICATION	5.453678195012479E-8	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999997115263183	WITHOUT_CLASSIFICATION	2.8847368168933934E-7	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999760907854673	WITHOUT_CLASSIFICATION	2.3909214532616543E-5	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999979418542668	WITHOUT_CLASSIFICATION	2.0581457331541062E-6	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999957498940526	WITHOUT_CLASSIFICATION	4.250105947439316E-6	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.999980746078522	WITHOUT_CLASSIFICATION	1.925392147792684E-5	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999998706845568	WITHOUT_CLASSIFICATION	1.293154432878473E-7	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999997043788909	WITHOUT_CLASSIFICATION	2.9562110922631767E-7	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999996073718779	WITHOUT_CLASSIFICATION	3.9262812214927527E-7	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.999998795412	WITHOUT_CLASSIFICATION	1.2045880000068188E-6	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9999942610843721	WITHOUT_CLASSIFICATION	5.738915627970358E-6	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999992935898636	WITHOUT_CLASSIFICATION	7.064101364276618E-7	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.999999493160736	WITHOUT_CLASSIFICATION	5.068392640428052E-7	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999411826715872	WITHOUT_CLASSIFICATION	5.881732841286765E-5	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.999998885069114	WITHOUT_CLASSIFICATION	1.1149308859379802E-6	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999989650376971	WITHOUT_CLASSIFICATION	1.0349623028788374E-6	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999990495189783	WITHOUT_CLASSIFICATION	9.504810217764726E-7	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998701195506621	WITHOUT_CLASSIFICATION	1.2988044933787593E-4	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.999999978165219	WITHOUT_CLASSIFICATION	2.183478100337327E-8	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999947524295366	WITHOUT_CLASSIFICATION	5.2475704633045325E-6	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9999979849946833	WITHOUT_CLASSIFICATION	2.0150053166661846E-6	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9999768823696353	WITHOUT_CLASSIFICATION	2.3117630364645565E-5	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999997089933529	WITHOUT_CLASSIFICATION	2.910066470539704E-7	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999970840388288	WITHOUT_CLASSIFICATION	2.9159611711707097E-6	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999920317240206	WITHOUT_CLASSIFICATION	7.96827597941222E-6	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9999991817728583	WITHOUT_CLASSIFICATION	8.182271416406496E-7	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999970762424544	WITHOUT_CLASSIFICATION	2.923757545587944E-6	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999927837959394	WITHOUT_CLASSIFICATION	7.216204060615625E-6	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999726015112824	WITHOUT_CLASSIFICATION	2.7398488717516506E-5	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999625785237034	WITHOUT_CLASSIFICATION	3.742147629663907E-5	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999996338236892	WITHOUT_CLASSIFICATION	3.661763108109224E-7	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999999979400844	WITHOUT_CLASSIFICATION	2.0599155998116633E-9	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999999163050695	WITHOUT_CLASSIFICATION	8.369493055366424E-8	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999928684358211	WITHOUT_CLASSIFICATION	7.1315641789419725E-6	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999861571652274	WITHOUT_CLASSIFICATION	1.3842834772523318E-5	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999861571652274	WITHOUT_CLASSIFICATION	1.3842834772523318E-5	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999764553752643	WITHOUT_CLASSIFICATION	2.354462473568714E-5	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999999868938088	WITHOUT_CLASSIFICATION	1.3106191205941294E-8	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9984840379459621	WITHOUT_CLASSIFICATION	0.0015159620540378645	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.999997524935207	WITHOUT_CLASSIFICATION	2.475064793074632E-6	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999849815331595	WITHOUT_CLASSIFICATION	1.5018466840515246E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999749837537425	WITHOUT_CLASSIFICATION	2.5016246257461745E-5	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999844737430476	WITHOUT_CLASSIFICATION	1.5526256952395173E-5	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999540342988097	WITHOUT_CLASSIFICATION	4.5965701190362295E-5	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999956599773404	WITHOUT_CLASSIFICATION	4.340022659546998E-6	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9999941278648283	WITHOUT_CLASSIFICATION	5.872135171656583E-6	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9999971571467363	WITHOUT_CLASSIFICATION	2.8428532636643257E-6	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.9999344137004602	WITHOUT_CLASSIFICATION	6.558629953978826E-5	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9999963680387703	WITHOUT_CLASSIFICATION	3.631961229641514E-6	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999993213585918	WITHOUT_CLASSIFICATION	6.786414081623335E-7	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999911656188091	WITHOUT_CLASSIFICATION	8.834381190905972E-6	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9999823809129307	WITHOUT_CLASSIFICATION	1.7619087069349366E-5	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999976583665995	WITHOUT_CLASSIFICATION	2.3416334004080486E-6	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9999898725271227	WITHOUT_CLASSIFICATION	1.0127472877295238E-5	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999931456807386	WITHOUT_CLASSIFICATION	6.8543192613736746E-6	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9999913601307585	WITHOUT_CLASSIFICATION	8.639869241566651E-6	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999950495880701	WITHOUT_CLASSIFICATION	4.950411929984365E-6	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999202223789587	WITHOUT_CLASSIFICATION	7.977762104131112E-5	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.999996999142832	WITHOUT_CLASSIFICATION	3.0008571679270446E-6	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999973992163651	WITHOUT_CLASSIFICATION	2.6007836349151135E-6	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999990030761352	WITHOUT_CLASSIFICATION	9.969238648044898E-7	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999968447162243	WITHOUT_CLASSIFICATION	3.1552837755660118E-6	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999973369241557	WITHOUT_CLASSIFICATION	2.6630758442724147E-6	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999875364676144	WITHOUT_CLASSIFICATION	1.2463532385721858E-5	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999997075317527	WITHOUT_CLASSIFICATION	2.9246824735204046E-7	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9999850518042218	WITHOUT_CLASSIFICATION	1.4948195778252776E-5	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999997242696047	WITHOUT_CLASSIFICATION	2.757303953136127E-7	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999991376863386	WITHOUT_CLASSIFICATION	8.623136614286665E-7	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999786629541387	WITHOUT_CLASSIFICATION	2.1337045861342514E-5	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9990645284259705	WITHOUT_CLASSIFICATION	9.35471574029494E-4	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999625785237034	WITHOUT_CLASSIFICATION	3.742147629663907E-5	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999996763190432	WITHOUT_CLASSIFICATION	3.2368095685316194E-7	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999997458625391	WITHOUT_CLASSIFICATION	2.5413746086440334E-7	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999997458625391	WITHOUT_CLASSIFICATION	2.5413746086440334E-7	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999999790414863	WITHOUT_CLASSIFICATION	2.0958513668423113E-8	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999991558652023	WITHOUT_CLASSIFICATION	8.441347976904704E-7	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999706126709557	WITHOUT_CLASSIFICATION	2.9387329044412165E-5	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.9999796331824762	WITHOUT_CLASSIFICATION	2.036681752383209E-5	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9975540248418292	WITHOUT_CLASSIFICATION	0.002445975158170807	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9977403554911721	WITHOUT_CLASSIFICATION	0.002259644508827913	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9986052182229186	WITHOUT_CLASSIFICATION	0.0013947817770814121	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9976139358648424	WITHOUT_CLASSIFICATION	0.0023860641351576405	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9974685995860442	WITHOUT_CLASSIFICATION	0.0025314004139559525	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9984968335538369	WITHOUT_CLASSIFICATION	0.0015031664461630705	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9973270168485324	WITHOUT_CLASSIFICATION	0.002672983151467648	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.996090831986903	WITHOUT_CLASSIFICATION	0.003909168013097147	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9988766239698652	WITHOUT_CLASSIFICATION	0.0011233760301348936	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999995896909109	WITHOUT_CLASSIFICATION	4.1030908907596774E-7	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999999962544888	WITHOUT_CLASSIFICATION	3.745511169408568E-9	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999905086371135	WITHOUT_CLASSIFICATION	9.491362886532021E-6	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9988492184481695	WITHOUT_CLASSIFICATION	0.0011507815518304297	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9974332200370764	WITHOUT_CLASSIFICATION	0.002566779962923566	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.998430784506265	WITHOUT_CLASSIFICATION	0.0015692154937349953	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.999068551859299	WITHOUT_CLASSIFICATION	9.314481407009874E-4	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9988087779392403	WITHOUT_CLASSIFICATION	0.0011912220607596133	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9983398784472122	WITHOUT_CLASSIFICATION	0.0016601215527878763	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999989650425601	WITHOUT_CLASSIFICATION	1.03495743988762E-6	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999975522716209	WITHOUT_CLASSIFICATION	2.4477283791478856E-6	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999999847780827	WITHOUT_CLASSIFICATION	1.5221917224084868E-8	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.998225754265049	WITHOUT_CLASSIFICATION	0.0017742457349510538	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999985353149218	WITHOUT_CLASSIFICATION	1.4646850782505384E-6	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999973343763509	WITHOUT_CLASSIFICATION	2.665623649088887E-6	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.999995742727578	WITHOUT_CLASSIFICATION	4.257272422032373E-6	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999974556161066	WITHOUT_CLASSIFICATION	2.544383893243025E-6	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9999998051379191	WITHOUT_CLASSIFICATION	1.9486208095893205E-7	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999977010723479	WITHOUT_CLASSIFICATION	2.298927652149303E-6	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9999993820385475	WITHOUT_CLASSIFICATION	6.179614524259519E-7	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999999785828154	WITHOUT_CLASSIFICATION	2.1417184580516252E-8	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999938960877197	WITHOUT_CLASSIFICATION	6.103912280336976E-6	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999854362523365	WITHOUT_CLASSIFICATION	1.4563747663478506E-5	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999985705203751	WITHOUT_CLASSIFICATION	1.4294796248880876E-6	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.998225754265049	WITHOUT_CLASSIFICATION	0.0017742457349510538	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999985353149218	WITHOUT_CLASSIFICATION	1.4646850782505384E-6	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999973343763509	WITHOUT_CLASSIFICATION	2.665623649088887E-6	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999974556161066	WITHOUT_CLASSIFICATION	2.544383893243025E-6	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.999977223012472	WITHOUT_CLASSIFICATION	2.2776987527914054E-5	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999997264647226	WITHOUT_CLASSIFICATION	2.735352774222587E-7	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999616420742523	WITHOUT_CLASSIFICATION	3.8357925747728074E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999927677281584	WITHOUT_CLASSIFICATION	7.232271841703191E-6	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999914908532531	WITHOUT_CLASSIFICATION	8.509146746892635E-6	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999995756139041	WITHOUT_CLASSIFICATION	4.2438609588162077E-7	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999990945862287	WITHOUT_CLASSIFICATION	9.054137712642078E-7	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999966552370338	WITHOUT_CLASSIFICATION	3.3447629662481847E-6	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999955160472317	WITHOUT_CLASSIFICATION	4.483952768228165E-6	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999971647294489	WITHOUT_CLASSIFICATION	2.835270551159796E-6	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999983207602116	WITHOUT_CLASSIFICATION	1.6792397883698204E-6	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.999990650700704	WITHOUT_CLASSIFICATION	9.349299295933836E-6	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999992495266521	WITHOUT_CLASSIFICATION	7.504733479068668E-7	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999994280875496	WITHOUT_CLASSIFICATION	5.71912450438934E-7	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9999959366161869	WITHOUT_CLASSIFICATION	4.063383813116821E-6	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9999790963154249	WITHOUT_CLASSIFICATION	2.0903684575017197E-5	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999992795290823	WITHOUT_CLASSIFICATION	7.20470917679796E-7	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9997577664501291	WITHOUT_CLASSIFICATION	2.4223354987088467E-4	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999995138157854	WITHOUT_CLASSIFICATION	4.861842145017428E-7	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999985705203751	WITHOUT_CLASSIFICATION	1.4294796248880876E-6	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999997264647226	WITHOUT_CLASSIFICATION	2.735352774222587E-7	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999616420742523	WITHOUT_CLASSIFICATION	3.8357925747728074E-5	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999914908532531	WITHOUT_CLASSIFICATION	8.509146746892635E-6	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999995756139041	WITHOUT_CLASSIFICATION	4.2438609588162077E-7	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999990945862287	WITHOUT_CLASSIFICATION	9.054137712642078E-7	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999966552370338	WITHOUT_CLASSIFICATION	3.3447629662481847E-6	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999987655887491	WITHOUT_CLASSIFICATION	1.2344112509062034E-6	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.999998872875814	WITHOUT_CLASSIFICATION	1.1271241859808283E-6	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999990774904809	WITHOUT_CLASSIFICATION	9.225095191141495E-7	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999905753224	WITHOUT_CLASSIFICATION	9.424677564460049E-9	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999975293687698	WITHOUT_CLASSIFICATION	2.47063123013064E-6	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999975293687698	WITHOUT_CLASSIFICATION	2.47063123013064E-6	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9999997164532629	WITHOUT_CLASSIFICATION	2.8354673710598176E-7	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999958158701057	WITHOUT_CLASSIFICATION	4.184129894361854E-6	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999975214387024	WITHOUT_CLASSIFICATION	2.4785612977795604E-6	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999982001941579	WITHOUT_CLASSIFICATION	1.799805842127282E-6	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999896557123334	WITHOUT_CLASSIFICATION	1.0344287666428433E-5	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999629892752306	WITHOUT_CLASSIFICATION	3.70107247692807E-5	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9999993482416075	WITHOUT_CLASSIFICATION	6.517583925918483E-7	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999991568920691	WITHOUT_CLASSIFICATION	8.431079308396789E-7	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999994714317318	WITHOUT_CLASSIFICATION	5.28568268042243E-7	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999361725722686	WITHOUT_CLASSIFICATION	6.382742773139899E-5	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9998182178176066	WITHOUT_CLASSIFICATION	1.8178218239333952E-4	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9997943709179941	WITHOUT_CLASSIFICATION	2.0562908200589627E-4	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999786057902724	WITHOUT_CLASSIFICATION	2.139420972747729E-5	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.999999272335275	WITHOUT_CLASSIFICATION	7.276647250979738E-7	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999981993064748	WITHOUT_CLASSIFICATION	1.800693525095259E-6	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999937966700985	WITHOUT_CLASSIFICATION	6.20332990145724E-6	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9999840964926896	WITHOUT_CLASSIFICATION	1.590350731039548E-5	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999833437010976	WITHOUT_CLASSIFICATION	1.6656298902351015E-5	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999917583363566	WITHOUT_CLASSIFICATION	8.241663643486242E-6	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.999997359120183	WITHOUT_CLASSIFICATION	2.6408798170635537E-6	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9687588264173841	WITHOUT_CLASSIFICATION	0.031241173582615845	IMPLEMENTATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999986582088067	WITHOUT_CLASSIFICATION	1.3417911932601494E-6	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999997174902165	WITHOUT_CLASSIFICATION	2.825097834521812E-7	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8803402668269843	IMPLEMENTATION	0.11965973317301566	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999939930269294	WITHOUT_CLASSIFICATION	6.0069730706393745E-6	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999996085769736	WITHOUT_CLASSIFICATION	3.914230264240361E-7	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999640031028	WITHOUT_CLASSIFICATION	3.599689727642771E-8	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999996919301929	WITHOUT_CLASSIFICATION	3.0806980711805084E-7	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9999954072071362	WITHOUT_CLASSIFICATION	4.592792863812621E-6	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999939930269294	WITHOUT_CLASSIFICATION	6.0069730706393745E-6	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999996085769736	WITHOUT_CLASSIFICATION	3.914230264240361E-7	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.999999272335275	WITHOUT_CLASSIFICATION	7.276647250979738E-7	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999924309726521	WITHOUT_CLASSIFICATION	7.56902734795758E-6	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999993160885382	WITHOUT_CLASSIFICATION	6.839114618584792E-7	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.999997870710925	WITHOUT_CLASSIFICATION	2.129289074924739E-6	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999238904704743	WITHOUT_CLASSIFICATION	7.610952952576744E-5	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999757566319057	WITHOUT_CLASSIFICATION	2.4243368094231614E-5	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999867169434493	WITHOUT_CLASSIFICATION	1.3283056550756578E-5	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999615905980648	WITHOUT_CLASSIFICATION	3.8409401935230925E-5	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999967976156294	WITHOUT_CLASSIFICATION	3.2023843706794435E-6	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9996773048134922	WITHOUT_CLASSIFICATION	3.2269518650784146E-4	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999998970691418	WITHOUT_CLASSIFICATION	1.0293085816825662E-7	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999959461278183	WITHOUT_CLASSIFICATION	4.053872181797092E-6	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999070129581786	WITHOUT_CLASSIFICATION	9.298704182139161E-5	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999992139007283	WITHOUT_CLASSIFICATION	7.860992716296598E-7	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999999960204295	WITHOUT_CLASSIFICATION	3.97957048489878E-9	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999999968846413	WITHOUT_CLASSIFICATION	3.1153588687397953E-9	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999949867312542	WITHOUT_CLASSIFICATION	5.013268745743504E-6	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.99993025217461	WITHOUT_CLASSIFICATION	6.974782539006044E-5	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999212635734912	WITHOUT_CLASSIFICATION	7.873642650870684E-5	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9991300746031787	WITHOUT_CLASSIFICATION	8.699253968212411E-4	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999994103143482	WITHOUT_CLASSIFICATION	5.896856517233744E-7	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999948762336663	WITHOUT_CLASSIFICATION	5.123766333642624E-6	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999991891671488	WITHOUT_CLASSIFICATION	8.108328511738808E-7	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999540554177159	WITHOUT_CLASSIFICATION	4.5944582284202835E-5	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999992073034469	WITHOUT_CLASSIFICATION	7.926965529335702E-7	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999999653438931	WITHOUT_CLASSIFICATION	3.4656106872041155E-8	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999996482858791	WITHOUT_CLASSIFICATION	3.517141208599055E-7	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9999627094400159	WITHOUT_CLASSIFICATION	3.729055998400795E-5	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999014289365984	WITHOUT_CLASSIFICATION	9.857106340157032E-5	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999933476663362	WITHOUT_CLASSIFICATION	6.652333663830805E-6	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.999999994101389	WITHOUT_CLASSIFICATION	5.898611057706379E-9	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.999998378331524	WITHOUT_CLASSIFICATION	1.6216684759050479E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996700022239127	WITHOUT_CLASSIFICATION	3.2999777608730093E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996700022239127	WITHOUT_CLASSIFICATION	3.2999777608730093E-4	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999786057902724	WITHOUT_CLASSIFICATION	2.139420972747729E-5	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999999775165671	WITHOUT_CLASSIFICATION	2.2483432835098937E-8	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9996592547117182	WITHOUT_CLASSIFICATION	3.4074528828176136E-4	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.999998703901005	WITHOUT_CLASSIFICATION	1.296098995061875E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999981693282666	WITHOUT_CLASSIFICATION	1.830671733377316E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999981693282666	WITHOUT_CLASSIFICATION	1.830671733377316E-6	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999985204925611	WITHOUT_CLASSIFICATION	1.4795074388417435E-6	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.999984476645797	WITHOUT_CLASSIFICATION	1.552335420301645E-5	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999967629680433	WITHOUT_CLASSIFICATION	3.237031956694733E-6	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999966845883994	WITHOUT_CLASSIFICATION	3.3154116005983544E-6	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999999332643442	WITHOUT_CLASSIFICATION	6.673565578461013E-8	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999999830314181	WITHOUT_CLASSIFICATION	1.6968581900898128E-8	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999999956844943	WITHOUT_CLASSIFICATION	4.315505774757437E-9	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999666816721012	WITHOUT_CLASSIFICATION	3.331832789878246E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999819881719	WITHOUT_CLASSIFICATION	1.8011828137916612E-8	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999961088299945	WITHOUT_CLASSIFICATION	3.891170005512266E-6	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999983657478095	WITHOUT_CLASSIFICATION	1.6342521904172084E-6	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999977368435695	WITHOUT_CLASSIFICATION	2.263156430525215E-6	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999911451301823	WITHOUT_CLASSIFICATION	8.854869817749984E-6	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999999543567185	WITHOUT_CLASSIFICATION	4.564328154297905E-8	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999967028736338	WITHOUT_CLASSIFICATION	3.297126366118977E-6	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.9999835610182637	WITHOUT_CLASSIFICATION	1.643898173626633E-5	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999976627044701	WITHOUT_CLASSIFICATION	2.337295529816402E-6	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999976627044701	WITHOUT_CLASSIFICATION	2.337295529816402E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999959226527311	WITHOUT_CLASSIFICATION	4.077347268926115E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999959226527311	WITHOUT_CLASSIFICATION	4.077347268926115E-6	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999998666195902	WITHOUT_CLASSIFICATION	1.3338040986260707E-7	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999999761256663	WITHOUT_CLASSIFICATION	2.3874333719300904E-8	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999999925500066	WITHOUT_CLASSIFICATION	7.449993424653462E-9	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9975849288652373	WITHOUT_CLASSIFICATION	0.0024150711347627374	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.999999463341036	WITHOUT_CLASSIFICATION	5.366589640938654E-7	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999967412969557	WITHOUT_CLASSIFICATION	3.2587030442145834E-6	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999913262136273	WITHOUT_CLASSIFICATION	8.673786372713069E-6	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999977368435695	WITHOUT_CLASSIFICATION	2.263156430525215E-6	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999911451301823	WITHOUT_CLASSIFICATION	8.854869817749984E-6	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999967028736338	WITHOUT_CLASSIFICATION	3.297126366118977E-6	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999968398791373	WITHOUT_CLASSIFICATION	3.1601208626023917E-6	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999992108888943	WITHOUT_CLASSIFICATION	7.891111056773819E-7	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999997832225747	WITHOUT_CLASSIFICATION	2.1677742538819908E-7	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999228824103429	WITHOUT_CLASSIFICATION	7.711758965712814E-5	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.999999971738445	WITHOUT_CLASSIFICATION	2.826155497899047E-8	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999999998759517	WITHOUT_CLASSIFICATION	1.240482404496746E-10	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999990059226997	WITHOUT_CLASSIFICATION	9.940773002758422E-7	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999902824931083	WITHOUT_CLASSIFICATION	9.717506891696186E-6	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999922769688231	WITHOUT_CLASSIFICATION	7.723031176880561E-6	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999993479187	WITHOUT_CLASSIFICATION	6.520811787602874E-10	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999994660931416	WITHOUT_CLASSIFICATION	5.339068584744242E-7	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999955748939469	WITHOUT_CLASSIFICATION	4.42510605320982E-6	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999987808308654	WITHOUT_CLASSIFICATION	1.2191691346363047E-6	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999997655146406	WITHOUT_CLASSIFICATION	2.3448535930978232E-7	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9997351669398239	WITHOUT_CLASSIFICATION	2.6483306017603697E-4	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999998026671316	WITHOUT_CLASSIFICATION	1.9733286837996017E-7	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.999999353678605	WITHOUT_CLASSIFICATION	6.463213949531945E-7	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9981180854635057	WITHOUT_CLASSIFICATION	0.0018819145364943595	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999873910617029	WITHOUT_CLASSIFICATION	1.2608938297193518E-5	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999999183721938	WITHOUT_CLASSIFICATION	8.162780621850916E-8	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999999850662844	WITHOUT_CLASSIFICATION	1.493371562021228E-8	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999943403025026	WITHOUT_CLASSIFICATION	5.6596974974401775E-6	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999982557688027	WITHOUT_CLASSIFICATION	1.7442311971636454E-6	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999998347782553	WITHOUT_CLASSIFICATION	1.6522174471078597E-7	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999580614070143	WITHOUT_CLASSIFICATION	4.193859298582329E-5	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.999999004293889	WITHOUT_CLASSIFICATION	9.95706111027344E-7	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999635826436746	WITHOUT_CLASSIFICATION	3.64173563253191E-5	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999940678807225	WITHOUT_CLASSIFICATION	5.9321192774584675E-6	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.999999988653855	WITHOUT_CLASSIFICATION	1.1346145061362047E-8	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999743201768468	WITHOUT_CLASSIFICATION	2.5679823153052603E-5	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999995135763964	WITHOUT_CLASSIFICATION	4.86423603606634E-7	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999952873694363	WITHOUT_CLASSIFICATION	4.712630563757605E-6	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999966761337984	WITHOUT_CLASSIFICATION	3.3238662015753198E-6	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999994939355132	WITHOUT_CLASSIFICATION	5.060644867927851E-7	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999987930056793	WITHOUT_CLASSIFICATION	1.2069943207030672E-6	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999907691585984	WITHOUT_CLASSIFICATION	9.230841401538403E-6	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999907404369093	WITHOUT_CLASSIFICATION	9.259563090710328E-6	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.999991781825513	WITHOUT_CLASSIFICATION	8.218174486946782E-6	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999956907815529	WITHOUT_CLASSIFICATION	4.309218447083189E-6	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999998324867133	WITHOUT_CLASSIFICATION	1.6751328670629962E-7	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.999999164601121	WITHOUT_CLASSIFICATION	8.353988790149328E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9996592547117182	WITHOUT_CLASSIFICATION	3.4074528828176136E-4	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999907404369093	WITHOUT_CLASSIFICATION	9.259563090710328E-6	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999996029171424	WITHOUT_CLASSIFICATION	3.97082857595179E-7	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999974481257429	WITHOUT_CLASSIFICATION	2.5518742572018596E-6	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999787385990917	WITHOUT_CLASSIFICATION	2.1261400908381056E-5	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999897137301782	WITHOUT_CLASSIFICATION	1.0286269821845798E-5	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999897137301782	WITHOUT_CLASSIFICATION	1.0286269821845798E-5	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9998629871139934	WITHOUT_CLASSIFICATION	1.3701288600661237E-4	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999947421959688	WITHOUT_CLASSIFICATION	5.257804031140117E-6	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999039779358168	WITHOUT_CLASSIFICATION	9.602206418324618E-5	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999999452049623	WITHOUT_CLASSIFICATION	5.4795037736466286E-8	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9981809963859701	WITHOUT_CLASSIFICATION	0.0018190036140298153	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999364336492386	WITHOUT_CLASSIFICATION	6.356635076147219E-5	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.999999576102891	WITHOUT_CLASSIFICATION	4.238971090434227E-7	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999903261782248	WITHOUT_CLASSIFICATION	9.673821775205232E-6	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999269029024	WITHOUT_CLASSIFICATION	7.309709751780886E-8	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999269029024	WITHOUT_CLASSIFICATION	7.309709751780886E-8	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999831353758315	WITHOUT_CLASSIFICATION	1.686462416853753E-5	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999973861713137	WITHOUT_CLASSIFICATION	2.6138286862521473E-6	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999979909430208	WITHOUT_CLASSIFICATION	2.0090569792232943E-6	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9999954981626098	WITHOUT_CLASSIFICATION	4.5018373902005115E-6	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999928058912985	WITHOUT_CLASSIFICATION	7.194108701506131E-6	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999975401065118	WITHOUT_CLASSIFICATION	2.4598934881896334E-6	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999999799042529	WITHOUT_CLASSIFICATION	2.0095747041786057E-8	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999999841684108	WITHOUT_CLASSIFICATION	1.5831589142051684E-8	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9999797805408498	WITHOUT_CLASSIFICATION	2.0219459150282117E-5	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999996291839774	WITHOUT_CLASSIFICATION	3.708160225725247E-7	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999900400152393	WITHOUT_CLASSIFICATION	9.959984760679233E-6	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999990457344773	WITHOUT_CLASSIFICATION	9.542655227148433E-7	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9998952093011284	WITHOUT_CLASSIFICATION	1.0479069887161995E-4	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999964180800467	WITHOUT_CLASSIFICATION	3.5819199533004754E-6	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999964180800467	WITHOUT_CLASSIFICATION	3.5819199533004754E-6	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999999625351603	WITHOUT_CLASSIFICATION	3.7464839618132236E-8	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999966552370338	WITHOUT_CLASSIFICATION	3.3447629662481847E-6	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999999127875421	WITHOUT_CLASSIFICATION	8.721245789423485E-8	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999999536441012	WITHOUT_CLASSIFICATION	4.6355898760451247E-8	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.999999997845	WITHOUT_CLASSIFICATION	2.15499994579448E-9	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999863980163879	WITHOUT_CLASSIFICATION	1.3601983612174392E-5	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999694112003885	WITHOUT_CLASSIFICATION	3.05887996114809E-5	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999960983535199	WITHOUT_CLASSIFICATION	3.901646480181147E-6	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999875123786395	WITHOUT_CLASSIFICATION	1.2487621360639774E-5	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9999820911066963	WITHOUT_CLASSIFICATION	1.790889330370301E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9998762451389602	WITHOUT_CLASSIFICATION	1.237548610397065E-4	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999997667864787	WITHOUT_CLASSIFICATION	2.3321352132590572E-7	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9997263835610786	WITHOUT_CLASSIFICATION	2.736164389214032E-4	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999999975426406	WITHOUT_CLASSIFICATION	2.4573594270365403E-9	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999994850132784	WITHOUT_CLASSIFICATION	5.149867216383295E-7	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999996292746692	WITHOUT_CLASSIFICATION	3.707253308092809E-7	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999996681345737	WITHOUT_CLASSIFICATION	3.318654262653702E-7	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999981406060987	WITHOUT_CLASSIFICATION	1.8593939012852523E-6	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.999999744093138	WITHOUT_CLASSIFICATION	2.5590686212932956E-7	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999902370226883	WITHOUT_CLASSIFICATION	9.762977311745125E-6	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9998079677820934	WITHOUT_CLASSIFICATION	1.9203221790663124E-4	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9999983889698332	WITHOUT_CLASSIFICATION	1.6110301668900079E-6	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.999448408681123	WITHOUT_CLASSIFICATION	5.515913188769923E-4	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999870812330253	WITHOUT_CLASSIFICATION	1.2918766974657932E-5	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9683214161533487	IMPLEMENTATION	0.03167858384665136	WITHOUT_CLASSIFICATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999655507655878	WITHOUT_CLASSIFICATION	3.4449234412124174E-5	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9999970377919002	WITHOUT_CLASSIFICATION	2.9622080997466693E-6	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9999770226030493	WITHOUT_CLASSIFICATION	2.2977396950662133E-5	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9999970902294432	WITHOUT_CLASSIFICATION	2.909770556903404E-6	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9978256154282468	WITHOUT_CLASSIFICATION	0.0021743845717533527	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999959037189661	WITHOUT_CLASSIFICATION	4.096281033975373E-6	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9999988283409903	WITHOUT_CLASSIFICATION	1.1716590096478839E-6	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999992011398846	WITHOUT_CLASSIFICATION	7.988601154707616E-7	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999279816856953	WITHOUT_CLASSIFICATION	7.201831430477714E-5	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999991652298059	WITHOUT_CLASSIFICATION	8.34770194158867E-7	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999993528989352	WITHOUT_CLASSIFICATION	6.471010648914112E-7	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999962412847497	WITHOUT_CLASSIFICATION	3.7587152503088504E-6	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999992369503394	WITHOUT_CLASSIFICATION	7.630496605938902E-7	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999999095924409	WITHOUT_CLASSIFICATION	9.040755917898873E-8	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999988669187655	WITHOUT_CLASSIFICATION	1.133081234505351E-6	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999666673410285	WITHOUT_CLASSIFICATION	3.333265897145028E-5	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9995784495615289	WITHOUT_CLASSIFICATION	4.215504384711006E-4	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999373988354475	WITHOUT_CLASSIFICATION	6.260116455250829E-5	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.999991354952731	WITHOUT_CLASSIFICATION	8.64504726903727E-6	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.99998679662543	WITHOUT_CLASSIFICATION	1.3203374569891763E-5	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999563468083481	WITHOUT_CLASSIFICATION	4.365319165184014E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999993307270039	WITHOUT_CLASSIFICATION	6.692729961252688E-7	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999990001848327	WITHOUT_CLASSIFICATION	9.99815167332252E-7	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999995208409574	WITHOUT_CLASSIFICATION	4.791590424560993E-7	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999939930269294	WITHOUT_CLASSIFICATION	6.0069730706393745E-6	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999939930269294	WITHOUT_CLASSIFICATION	6.0069730706393745E-6	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999923615409835	WITHOUT_CLASSIFICATION	7.638459016489476E-6	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999970243034046	WITHOUT_CLASSIFICATION	2.975696595468406E-6	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999989986939691	WITHOUT_CLASSIFICATION	1.0013060308192718E-6	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999999695373821	WITHOUT_CLASSIFICATION	3.04626178165631E-8	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999998787022956	WITHOUT_CLASSIFICATION	1.2129770445458584E-7	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999999919234852	WITHOUT_CLASSIFICATION	8.07651483205426E-9	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999999986143479	WITHOUT_CLASSIFICATION	1.3856522036903143E-9	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999814479008	WITHOUT_CLASSIFICATION	1.8552099096823183E-8	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999974942885	WITHOUT_CLASSIFICATION	2.505711518417206E-9	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999998488308943	WITHOUT_CLASSIFICATION	1.5116910565862974E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999992757328602	WITHOUT_CLASSIFICATION	7.242671397627368E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999992757328602	WITHOUT_CLASSIFICATION	7.242671397627368E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999992757328602	WITHOUT_CLASSIFICATION	7.242671397627368E-7	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999996760431199	WITHOUT_CLASSIFICATION	3.239568800970112E-7	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999999906056198	WITHOUT_CLASSIFICATION	9.394380183006842E-9	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9999962154065418	WITHOUT_CLASSIFICATION	3.784593458229011E-6	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.999998713119474	WITHOUT_CLASSIFICATION	1.2868805260967214E-6	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.999998713119474	WITHOUT_CLASSIFICATION	1.2868805260967214E-6	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999998114965049	WITHOUT_CLASSIFICATION	1.885034950218812E-7	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999958445746473	WITHOUT_CLASSIFICATION	4.1554253526758795E-6	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999993987476976	WITHOUT_CLASSIFICATION	6.012523023153061E-7	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999994994708459	WITHOUT_CLASSIFICATION	5.005291540879255E-7	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999954963653114	WITHOUT_CLASSIFICATION	4.503634688642688E-6	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.999918109044195	WITHOUT_CLASSIFICATION	8.18909558050329E-5	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999995489748891	WITHOUT_CLASSIFICATION	4.510251108972945E-7	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999626797348785	WITHOUT_CLASSIFICATION	3.732026512144087E-5	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999999582438546	WITHOUT_CLASSIFICATION	4.175614554859695E-8	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999996949965732	WITHOUT_CLASSIFICATION	3.0500342688222153E-7	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999996949965732	WITHOUT_CLASSIFICATION	3.0500342688222153E-7	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999944086435842	WITHOUT_CLASSIFICATION	5.591356415799241E-6	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999991169958696	WITHOUT_CLASSIFICATION	8.830041304230309E-7	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999962357197537	WITHOUT_CLASSIFICATION	3.764280246186122E-6	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999977549981389	WITHOUT_CLASSIFICATION	2.245001861129001E-6	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.99999980871372	WITHOUT_CLASSIFICATION	1.912862800152736E-7	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999816515153067	WITHOUT_CLASSIFICATION	1.8348484693366163E-5	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999830755462411	WITHOUT_CLASSIFICATION	1.692445375880069E-5	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9998675342010223	WITHOUT_CLASSIFICATION	1.3246579897768977E-4	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999968332797515	WITHOUT_CLASSIFICATION	3.1667202484015566E-6	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9999934850326946	WITHOUT_CLASSIFICATION	6.514967305417954E-6	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999589840517681	WITHOUT_CLASSIFICATION	4.10159482318357E-5	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999936723967904	WITHOUT_CLASSIFICATION	6.327603209549222E-6	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9999955537210831	WITHOUT_CLASSIFICATION	4.4462789169551875E-6	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999442208972843	WITHOUT_CLASSIFICATION	5.57791027157106E-5	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9956279212415898	WITHOUT_CLASSIFICATION	0.004372078758410221	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9998199055632497	WITHOUT_CLASSIFICATION	1.8009443675036328E-4	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999953071912595	WITHOUT_CLASSIFICATION	4.6928087405117275E-6	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999887749184152	WITHOUT_CLASSIFICATION	1.1225081584890745E-5	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999995325699476	WITHOUT_CLASSIFICATION	4.674300524099838E-7	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999999306387097	WITHOUT_CLASSIFICATION	6.936129022229927E-8	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9994624936354466	WITHOUT_CLASSIFICATION	5.375063645534086E-4	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999970002816192	WITHOUT_CLASSIFICATION	2.9997183808508425E-6	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999992349342254	WITHOUT_CLASSIFICATION	7.650657747243516E-7	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999997463210302	WITHOUT_CLASSIFICATION	2.5367896983622015E-7	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999956848487701	WITHOUT_CLASSIFICATION	4.3151512298873236E-6	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.999992989923266	WITHOUT_CLASSIFICATION	7.010076734103669E-6	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999900316555874	WITHOUT_CLASSIFICATION	9.968344412639859E-6	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999985299731917	WITHOUT_CLASSIFICATION	1.4700268083551702E-6	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999996230440337	WITHOUT_CLASSIFICATION	3.769559663163215E-7	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999943072792965	WITHOUT_CLASSIFICATION	5.692720703522626E-6	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999867275478589	WITHOUT_CLASSIFICATION	1.3272452140983336E-5	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999859500359873	WITHOUT_CLASSIFICATION	1.4049964012537728E-5	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999980863461062	WITHOUT_CLASSIFICATION	1.9136538937589804E-6	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999867275478589	WITHOUT_CLASSIFICATION	1.3272452140983336E-5	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999239751141912	WITHOUT_CLASSIFICATION	7.602488580875523E-5	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999979320210937	WITHOUT_CLASSIFICATION	2.0679789064023935E-6	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9998878646086572	WITHOUT_CLASSIFICATION	1.121353913427749E-4	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.999986147231696	WITHOUT_CLASSIFICATION	1.3852768304030004E-5	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999994723841898	WITHOUT_CLASSIFICATION	5.276158102012188E-7	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999998978575025	WITHOUT_CLASSIFICATION	1.0214249746823376E-7	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999946413891063	WITHOUT_CLASSIFICATION	5.358610893781871E-6	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999779274095701	WITHOUT_CLASSIFICATION	2.2072590429908217E-5	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999759803713235	WITHOUT_CLASSIFICATION	2.4019628676476188E-5	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999585452575387	WITHOUT_CLASSIFICATION	4.145474246134032E-5	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9998974162293918	WITHOUT_CLASSIFICATION	1.0258377060827222E-4	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999032782364995	WITHOUT_CLASSIFICATION	9.672176350055814E-5	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9997795408464429	WITHOUT_CLASSIFICATION	2.204591535571398E-4	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9997562410547568	WITHOUT_CLASSIFICATION	2.4375894524319465E-4	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999492187527662	WITHOUT_CLASSIFICATION	5.078124723386845E-5	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999338845724725	WITHOUT_CLASSIFICATION	6.611542752761E-5	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999044852506382	WITHOUT_CLASSIFICATION	9.55147493617676E-5	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999974774099939	WITHOUT_CLASSIFICATION	2.522590006090799E-6	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999910282352638	WITHOUT_CLASSIFICATION	8.971764736211689E-6	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9997852866104878	WITHOUT_CLASSIFICATION	2.1471338951220307E-4	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999803791264001	WITHOUT_CLASSIFICATION	1.9620873599787797E-5	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999953001408995	WITHOUT_CLASSIFICATION	4.699859100556463E-6	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999513584408772	WITHOUT_CLASSIFICATION	4.8641559122649686E-5	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.999958409232926	WITHOUT_CLASSIFICATION	4.159076707395422E-5	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999597794534858	WITHOUT_CLASSIFICATION	4.022054651421461E-5	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.999999964939648	WITHOUT_CLASSIFICATION	3.506035200456478E-8	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999959638212501	WITHOUT_CLASSIFICATION	4.0361787498919844E-6	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999980747971023	WITHOUT_CLASSIFICATION	1.9252028976734696E-6	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9999602280743574	WITHOUT_CLASSIFICATION	3.977192564262425E-5	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9999475583387456	WITHOUT_CLASSIFICATION	5.244166125438193E-5	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.999996129172075	WITHOUT_CLASSIFICATION	3.870827925007561E-6	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9999620798980383	WITHOUT_CLASSIFICATION	3.792010196169271E-5	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9827262010665786	WITHOUT_CLASSIFICATION	0.017273798933421403	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999996670189465	WITHOUT_CLASSIFICATION	3.3298105341651703E-7	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999824949719728	WITHOUT_CLASSIFICATION	1.750502802723426E-5	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9999989152142563	WITHOUT_CLASSIFICATION	1.08478574367545E-6	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9999981325298387	WITHOUT_CLASSIFICATION	1.8674701612722582E-6	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9999867448739861	WITHOUT_CLASSIFICATION	1.3255126013839437E-5	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999959894385184	WITHOUT_CLASSIFICATION	4.010561481641478E-6	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9999926008568915	WITHOUT_CLASSIFICATION	7.399143108640445E-6	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9999734141825561	WITHOUT_CLASSIFICATION	2.658581744381289E-5	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999972628549896	WITHOUT_CLASSIFICATION	2.7371450104112303E-6	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9999406505590109	WITHOUT_CLASSIFICATION	5.9349440988982876E-5	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.999999632209919	WITHOUT_CLASSIFICATION	3.677900809712285E-7	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999965580166371	WITHOUT_CLASSIFICATION	3.441983363001344E-6	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9999991052619828	WITHOUT_CLASSIFICATION	8.947380170983522E-7	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9999673343183232	WITHOUT_CLASSIFICATION	3.266568167683631E-5	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.999998832261086	WITHOUT_CLASSIFICATION	1.1677389139457776E-6	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999993563739573	WITHOUT_CLASSIFICATION	6.436260427035866E-7	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.9999981054056039	WITHOUT_CLASSIFICATION	1.8945943962041593E-6	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999816826243305	WITHOUT_CLASSIFICATION	1.831737566947586E-5	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999999830095126	WITHOUT_CLASSIFICATION	1.699048744181841E-8	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999159562171415	WITHOUT_CLASSIFICATION	8.404378285844111E-5	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999993563739573	WITHOUT_CLASSIFICATION	6.436260427035866E-7	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.77391996911593	WITHOUT_CLASSIFICATION	0.22608003088406997	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.77391996911593	WITHOUT_CLASSIFICATION	0.22608003088406997	IMPLEMENTATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999985715645204	WITHOUT_CLASSIFICATION	1.428435479462396E-6	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999995834385224	WITHOUT_CLASSIFICATION	4.165614776583622E-7	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.999999685816717	WITHOUT_CLASSIFICATION	3.141832830221144E-7	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999998858654504	WITHOUT_CLASSIFICATION	1.1413454959844557E-7	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999996517920595	WITHOUT_CLASSIFICATION	3.4820794051243165E-7	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999985082175246	WITHOUT_CLASSIFICATION	1.4917824754361454E-6	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.999998297187304	WITHOUT_CLASSIFICATION	1.7028126959584424E-6	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9999368434987616	IMPLEMENTATION	6.315650123844343E-5	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999981646781663	WITHOUT_CLASSIFICATION	1.8353218337759842E-6	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999996976895061	WITHOUT_CLASSIFICATION	3.02310493861849E-7	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999999999135847	WITHOUT_CLASSIFICATION	8.641535979763121E-11	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999997620812784	WITHOUT_CLASSIFICATION	2.3791872156312918E-7	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999979855733014	WITHOUT_CLASSIFICATION	2.0144266984663317E-6	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999990609776161	WITHOUT_CLASSIFICATION	9.390223837280992E-7	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999957562006713	WITHOUT_CLASSIFICATION	4.2437993286892434E-6	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999958150332418	WITHOUT_CLASSIFICATION	4.184966758201154E-6	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999997949402308	WITHOUT_CLASSIFICATION	2.050597691099373E-7	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999856278976896	WITHOUT_CLASSIFICATION	1.4372102310320925E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999856278976896	WITHOUT_CLASSIFICATION	1.4372102310320925E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999856278976896	WITHOUT_CLASSIFICATION	1.4372102310320925E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999856278976896	WITHOUT_CLASSIFICATION	1.4372102310320925E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999856278976896	WITHOUT_CLASSIFICATION	1.4372102310320925E-5	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.999995508784662	WITHOUT_CLASSIFICATION	4.491215337953665E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.999996492717967	WITHOUT_CLASSIFICATION	3.507282033129093E-6	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999917586516797	WITHOUT_CLASSIFICATION	8.241348320338641E-6	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999784997924	WITHOUT_CLASSIFICATION	2.1500207596539603E-8	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.999992905065557	WITHOUT_CLASSIFICATION	7.094934442902162E-6	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999998753727481	WITHOUT_CLASSIFICATION	1.2462725186089163E-7	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999867251545569	WITHOUT_CLASSIFICATION	1.3274845443159735E-5	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999988057101371	WITHOUT_CLASSIFICATION	1.1942898628437249E-6	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999900844375613	WITHOUT_CLASSIFICATION	9.915562438748846E-6	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9999966959078654	WITHOUT_CLASSIFICATION	3.304092134456582E-6	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9999959702828559	WITHOUT_CLASSIFICATION	4.02971714411181E-6	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9999963099066558	WITHOUT_CLASSIFICATION	3.6900933442312443E-6	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9999961246181263	WITHOUT_CLASSIFICATION	3.875381873819066E-6	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9999963280338988	WITHOUT_CLASSIFICATION	3.671966101056565E-6	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9999960814092184	WITHOUT_CLASSIFICATION	3.918590781689006E-6	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9999955125326425	WITHOUT_CLASSIFICATION	4.487467357513441E-6	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9999950174462866	WITHOUT_CLASSIFICATION	4.982553713448579E-6	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9999963400937344	WITHOUT_CLASSIFICATION	3.6599062657672184E-6	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9999951868315973	WITHOUT_CLASSIFICATION	4.813168402679239E-6	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.999996188987192	WITHOUT_CLASSIFICATION	3.811012808117302E-6	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9999951590844807	WITHOUT_CLASSIFICATION	4.840915519375405E-6	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9999949321593071	WITHOUT_CLASSIFICATION	5.0678406928656344E-6	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.999995638707032	WITHOUT_CLASSIFICATION	4.361292967940264E-6	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9999951646271887	WITHOUT_CLASSIFICATION	4.835372811218927E-6	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999956369262609	WITHOUT_CLASSIFICATION	4.363073739094349E-6	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9999965880583475	WITHOUT_CLASSIFICATION	3.411941652642564E-6	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9999964191981916	WITHOUT_CLASSIFICATION	3.5808018084308843E-6	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9999964198293891	WITHOUT_CLASSIFICATION	3.5801706109346174E-6	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999963792737179	WITHOUT_CLASSIFICATION	3.6207262820867054E-6	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999969727831562	WITHOUT_CLASSIFICATION	3.0272168437935346E-6	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999956386797689	WITHOUT_CLASSIFICATION	4.361320231112033E-6	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9999956945183095	WITHOUT_CLASSIFICATION	4.305481690497457E-6	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9999954664543428	WITHOUT_CLASSIFICATION	4.533545657269756E-6	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9999950047785208	WITHOUT_CLASSIFICATION	4.995221479141073E-6	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9999959641401724	WITHOUT_CLASSIFICATION	4.0358598275640975E-6	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9999952870395608	WITHOUT_CLASSIFICATION	4.712960439235491E-6	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9999953050726961	WITHOUT_CLASSIFICATION	4.694927303869602E-6	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9999952469416532	WITHOUT_CLASSIFICATION	4.753058346849665E-6	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.9999966798039678	WITHOUT_CLASSIFICATION	3.3201960322314822E-6	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9999951797255189	WITHOUT_CLASSIFICATION	4.820274481170469E-6	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9999954637335476	WITHOUT_CLASSIFICATION	4.5362664523582525E-6	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999953238374103	WITHOUT_CLASSIFICATION	4.676162589693806E-6	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9999957483681069	WITHOUT_CLASSIFICATION	4.251631893023567E-6	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9999952729263243	WITHOUT_CLASSIFICATION	4.727073675698268E-6	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9999972619319365	WITHOUT_CLASSIFICATION	2.7380680635791075E-6	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9999966028231931	WITHOUT_CLASSIFICATION	3.397176806872186E-6	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9999963815579035	WITHOUT_CLASSIFICATION	3.6184420965704472E-6	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.999997382039496	WITHOUT_CLASSIFICATION	2.617960504132928E-6	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9999961715951996	WITHOUT_CLASSIFICATION	3.828404800442905E-6	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9999955390803302	WITHOUT_CLASSIFICATION	4.46091966978247E-6	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999917586516797	WITHOUT_CLASSIFICATION	8.241348320338641E-6	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999954047188302	WITHOUT_CLASSIFICATION	4.595281169878454E-6	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999966290693115	WITHOUT_CLASSIFICATION	3.3709306884326404E-6	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999954129745866	WITHOUT_CLASSIFICATION	4.587025413404513E-6	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.999994945893809	WITHOUT_CLASSIFICATION	5.054106191012027E-6	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9999947110427377	WITHOUT_CLASSIFICATION	5.2889572622054934E-6	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9999948591646968	WITHOUT_CLASSIFICATION	5.1408353031895895E-6	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9999952344689512	WITHOUT_CLASSIFICATION	4.765531048851625E-6	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999948853630499	WITHOUT_CLASSIFICATION	5.114636950033859E-6	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.999994848323109	WITHOUT_CLASSIFICATION	5.151676890931952E-6	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9999949343990269	WITHOUT_CLASSIFICATION	5.065600973116285E-6	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9999950765026838	WITHOUT_CLASSIFICATION	4.923497316296472E-6	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.9999952174567659	WITHOUT_CLASSIFICATION	4.782543234122803E-6	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.9999949322332735	WITHOUT_CLASSIFICATION	5.067766726512585E-6	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9999964273880647	WITHOUT_CLASSIFICATION	3.572611935268901E-6	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.999996196106353	WITHOUT_CLASSIFICATION	3.8038936470029206E-6	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.999997281426844	WITHOUT_CLASSIFICATION	2.71857315611473E-6	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9999962157688531	WITHOUT_CLASSIFICATION	3.7842311468296076E-6	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9999959633617663	WITHOUT_CLASSIFICATION	4.036638233609957E-6	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9999955440538382	WITHOUT_CLASSIFICATION	4.455946161732331E-6	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9999953021794953	WITHOUT_CLASSIFICATION	4.69782050466077E-6	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9999954273187215	WITHOUT_CLASSIFICATION	4.572681278577024E-6	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9999949822312726	WITHOUT_CLASSIFICATION	5.017768727396657E-6	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9999948437113159	WITHOUT_CLASSIFICATION	5.156288684097103E-6	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9999964143857486	WITHOUT_CLASSIFICATION	3.585614251471352E-6	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9999949384619665	WITHOUT_CLASSIFICATION	5.061538033539341E-6	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9999964610972534	WITHOUT_CLASSIFICATION	3.538902746691364E-6	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999955600796925	WITHOUT_CLASSIFICATION	4.439920307565402E-6	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.999994739990969	WITHOUT_CLASSIFICATION	5.260009030928254E-6	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9999971688045143	WITHOUT_CLASSIFICATION	2.8311954857196567E-6	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.999996018581474	WITHOUT_CLASSIFICATION	3.981418526046398E-6	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9999967989337062	WITHOUT_CLASSIFICATION	3.2010662938876488E-6	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9999953892511608	WITHOUT_CLASSIFICATION	4.610748839179618E-6	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9999954902229767	WITHOUT_CLASSIFICATION	4.50977702325076E-6	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999957763945151	WITHOUT_CLASSIFICATION	4.223605484948615E-6	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9999952640181515	WITHOUT_CLASSIFICATION	4.735981848460779E-6	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9999953101913088	WITHOUT_CLASSIFICATION	4.689808691101738E-6	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9999962384667056	WITHOUT_CLASSIFICATION	3.761533294267121E-6	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9999952844668889	WITHOUT_CLASSIFICATION	4.715533111014845E-6	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9999949316699436	WITHOUT_CLASSIFICATION	5.068330056452702E-6	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9999963769175357	WITHOUT_CLASSIFICATION	3.623082464257691E-6	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9999951798084371	WITHOUT_CLASSIFICATION	4.820191562866127E-6	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9999947893907183	WITHOUT_CLASSIFICATION	5.210609281676803E-6	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.999995545331657	WITHOUT_CLASSIFICATION	4.45466834305949E-6	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.999995064138373	WITHOUT_CLASSIFICATION	4.935861626968295E-6	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999956266734213	WITHOUT_CLASSIFICATION	4.373326578675116E-6	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999950400751045	WITHOUT_CLASSIFICATION	4.9599248954308085E-6	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999960453109327	WITHOUT_CLASSIFICATION	3.954689067284045E-6	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999951759207248	WITHOUT_CLASSIFICATION	4.8240792752315005E-6	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9999948154552077	WITHOUT_CLASSIFICATION	5.184544792352016E-6	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9999965673280269	WITHOUT_CLASSIFICATION	3.432671973192916E-6	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9999962654253123	WITHOUT_CLASSIFICATION	3.734574687819659E-6	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.99999633774168	WITHOUT_CLASSIFICATION	3.6622583201334717E-6	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.999996248419062	WITHOUT_CLASSIFICATION	3.751580938122542E-6	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9999961539721536	WITHOUT_CLASSIFICATION	3.846027846432648E-6	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9999966383119027	WITHOUT_CLASSIFICATION	3.361688097326902E-6	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.999995914686153	WITHOUT_CLASSIFICATION	4.085313847063628E-6	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9999967801373999	WITHOUT_CLASSIFICATION	3.2198626000596592E-6	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9999953087780689	WITHOUT_CLASSIFICATION	4.691221931046422E-6	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9999952609005532	WITHOUT_CLASSIFICATION	4.739099446818949E-6	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999952988084557	WITHOUT_CLASSIFICATION	4.701191544194326E-6	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.999995771827294	WITHOUT_CLASSIFICATION	4.228172705957197E-6	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.999995163569729	WITHOUT_CLASSIFICATION	4.836430271090344E-6	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9999958050897048	WITHOUT_CLASSIFICATION	4.194910295249501E-6	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9999951566608583	WITHOUT_CLASSIFICATION	4.843339141851482E-6	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9999961737824267	WITHOUT_CLASSIFICATION	3.826217573326638E-6	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.999994968502858	WITHOUT_CLASSIFICATION	5.0314971420904775E-6	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9999962461249632	WITHOUT_CLASSIFICATION	3.7538750368793407E-6	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9999950114414363	WITHOUT_CLASSIFICATION	4.988558563587993E-6	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9999950661470605	WITHOUT_CLASSIFICATION	4.933852939579376E-6	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9999953482228826	WITHOUT_CLASSIFICATION	4.651777117372271E-6	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999953729767149	WITHOUT_CLASSIFICATION	4.627023284995533E-6	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.999995017738473	WITHOUT_CLASSIFICATION	4.982261526986773E-6	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999950704155672	WITHOUT_CLASSIFICATION	4.929584432813076E-6	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.999996372026898	WITHOUT_CLASSIFICATION	3.627973101963035E-6	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9999961543841401	WITHOUT_CLASSIFICATION	3.8456158598241225E-6	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9999959212447308	WITHOUT_CLASSIFICATION	4.078755269281299E-6	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9999966321099978	WITHOUT_CLASSIFICATION	3.367890002192781E-6	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9999956546543921	WITHOUT_CLASSIFICATION	4.345345607813962E-6	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9999951571783685	WITHOUT_CLASSIFICATION	4.842821631437419E-6	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999955575121225	WITHOUT_CLASSIFICATION	4.442487877541676E-6	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9999948375326508	WITHOUT_CLASSIFICATION	5.1624673491193E-6	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9999964654370762	WITHOUT_CLASSIFICATION	3.5345629237650028E-6	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999948461466497	WITHOUT_CLASSIFICATION	5.1538533503894635E-6	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9999949363221031	WITHOUT_CLASSIFICATION	5.0636778968095125E-6	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9999946207668396	WITHOUT_CLASSIFICATION	5.379233160409412E-6	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999962230854328	WITHOUT_CLASSIFICATION	3.7769145671505358E-6	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9999950006543337	WITHOUT_CLASSIFICATION	4.99934566631618E-6	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9999946684183281	WITHOUT_CLASSIFICATION	5.331581671917842E-6	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999953418879789	WITHOUT_CLASSIFICATION	4.65811202108989E-6	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9999948355435745	WITHOUT_CLASSIFICATION	5.164456425476752E-6	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999963754081355	WITHOUT_CLASSIFICATION	3.6245918644855838E-6	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9999951426630304	WITHOUT_CLASSIFICATION	4.8573369696697615E-6	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9999947265926413	WITHOUT_CLASSIFICATION	5.273407358721672E-6	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9999945312095319	WITHOUT_CLASSIFICATION	5.468790468149411E-6	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.9999976578402487	WITHOUT_CLASSIFICATION	2.3421597512951054E-6	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999977381502814	WITHOUT_CLASSIFICATION	2.261849718635154E-6	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9999976388974304	WITHOUT_CLASSIFICATION	2.361102569606558E-6	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9999976501072523	WITHOUT_CLASSIFICATION	2.3498927477446663E-6	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9999976459471829	WITHOUT_CLASSIFICATION	2.3540528171760303E-6	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9999978937178551	WITHOUT_CLASSIFICATION	2.1062821447891705E-6	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9999977835469044	WITHOUT_CLASSIFICATION	2.2164530956566247E-6	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9999975969793671	WITHOUT_CLASSIFICATION	2.403020632960717E-6	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9999975859313949	WITHOUT_CLASSIFICATION	2.4140686050548304E-6	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.999997523711945	WITHOUT_CLASSIFICATION	2.4762880550470746E-6	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9999975685741237	WITHOUT_CLASSIFICATION	2.431425876372488E-6	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9999976200365225	WITHOUT_CLASSIFICATION	2.3799634775454783E-6	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9999976058795093	WITHOUT_CLASSIFICATION	2.394120490817733E-6	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9999974070995723	WITHOUT_CLASSIFICATION	2.592900427648711E-6	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9999974363096544	WITHOUT_CLASSIFICATION	2.5636903454860586E-6	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9999977891092207	WITHOUT_CLASSIFICATION	2.2108907792785802E-6	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9999975275246782	WITHOUT_CLASSIFICATION	2.47247532185398E-6	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.999997443623966	WITHOUT_CLASSIFICATION	2.556376033964244E-6	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9999977082920777	WITHOUT_CLASSIFICATION	2.29170792232399E-6	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9999975977169432	WITHOUT_CLASSIFICATION	2.4022830567715443E-6	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9999974484145324	WITHOUT_CLASSIFICATION	2.5515854676493157E-6	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999964524078833	WITHOUT_CLASSIFICATION	3.5475921167301635E-6	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.9999966187172454	WITHOUT_CLASSIFICATION	3.381282754503121E-6	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9999964897431582	WITHOUT_CLASSIFICATION	3.5102568417435646E-6	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9999964474608696	WITHOUT_CLASSIFICATION	3.5525391304107955E-6	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999976487390912	WITHOUT_CLASSIFICATION	2.351260908719087E-6	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999965794756278	WITHOUT_CLASSIFICATION	3.420524372135521E-6	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9999966665752505	WITHOUT_CLASSIFICATION	3.333424749358911E-6	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9999966618385999	WITHOUT_CLASSIFICATION	3.3381614000372756E-6	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.999997644575528	WITHOUT_CLASSIFICATION	2.3554244719560383E-6	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9999965357644316	WITHOUT_CLASSIFICATION	3.4642355684064247E-6	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9999966398713583	WITHOUT_CLASSIFICATION	3.3601286417891656E-6	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999965942612752	WITHOUT_CLASSIFICATION	3.4057387246782224E-6	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.999996676714085	WITHOUT_CLASSIFICATION	3.323285914973111E-6	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9999965680962484	WITHOUT_CLASSIFICATION	3.43190375153928E-6	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9999965574383316	WITHOUT_CLASSIFICATION	3.4425616684143534E-6	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9999965830041275	WITHOUT_CLASSIFICATION	3.4169958724687573E-6	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9999965744473207	WITHOUT_CLASSIFICATION	3.4255526794119725E-6	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9999966226109356	WITHOUT_CLASSIFICATION	3.3773890644160416E-6	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999978196531778	WITHOUT_CLASSIFICATION	2.180346822230992E-6	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999976809952787	WITHOUT_CLASSIFICATION	2.319004721318514E-6	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999979122330088	WITHOUT_CLASSIFICATION	2.087766991278244E-6	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9999971233546362	WITHOUT_CLASSIFICATION	2.8766453637073835E-6	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9999975150275484	WITHOUT_CLASSIFICATION	2.484972451562478E-6	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9999972040398821	WITHOUT_CLASSIFICATION	2.795960117814285E-6	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.9999972564620245	WITHOUT_CLASSIFICATION	2.743537975395482E-6	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999970226381412	WITHOUT_CLASSIFICATION	2.9773618588818905E-6	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999969992315321	WITHOUT_CLASSIFICATION	3.0007684680040565E-6	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9999970594867934	WITHOUT_CLASSIFICATION	2.9405132066285254E-6	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9999968213155971	WITHOUT_CLASSIFICATION	3.1786844029412435E-6	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9999979232524076	WITHOUT_CLASSIFICATION	2.076747592408835E-6	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9999972053826894	WITHOUT_CLASSIFICATION	2.794617310439343E-6	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9999978790787906	WITHOUT_CLASSIFICATION	2.1209212094118186E-6	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9999968453073876	WITHOUT_CLASSIFICATION	3.1546926123396788E-6	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9999968786617869	WITHOUT_CLASSIFICATION	3.1213382130523086E-6	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9999977121121668	WITHOUT_CLASSIFICATION	2.2878878332079207E-6	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9999974859726305	WITHOUT_CLASSIFICATION	2.5140273695670454E-6	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9999965712004053	WITHOUT_CLASSIFICATION	3.4287995947892773E-6	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9999966420712374	WITHOUT_CLASSIFICATION	3.357928762620314E-6	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.999997851203957	WITHOUT_CLASSIFICATION	2.1487960430387837E-6	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9999970815429624	WITHOUT_CLASSIFICATION	2.918457037576914E-6	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.999996587781229	WITHOUT_CLASSIFICATION	3.4122187710129644E-6	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999968158822403	WITHOUT_CLASSIFICATION	3.1841177596536764E-6	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9999970694957868	WITHOUT_CLASSIFICATION	2.9305042132339946E-6	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9999967404956059	WITHOUT_CLASSIFICATION	3.2595043941190034E-6	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9999968587836358	WITHOUT_CLASSIFICATION	3.141216364304986E-6	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9999967186635573	WITHOUT_CLASSIFICATION	3.2813364427464585E-6	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999967195104604	WITHOUT_CLASSIFICATION	3.280489539575433E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999969713289827	WITHOUT_CLASSIFICATION	3.028671017375693E-6	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9999966451673629	WITHOUT_CLASSIFICATION	3.3548326372221956E-6	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9999967859697659	WITHOUT_CLASSIFICATION	3.2140302341010818E-6	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9999968463243084	WITHOUT_CLASSIFICATION	3.1536756915622986E-6	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9999975621741364	WITHOUT_CLASSIFICATION	2.4378258637288694E-6	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9999966787249251	WITHOUT_CLASSIFICATION	3.321275074847628E-6	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9999968538777351	WITHOUT_CLASSIFICATION	3.1461222648457447E-6	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999965625973006	WITHOUT_CLASSIFICATION	3.4374026994079413E-6	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999968923490673	WITHOUT_CLASSIFICATION	3.107650932670608E-6	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.999996569227192	WITHOUT_CLASSIFICATION	3.4307728078902295E-6	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999975700872904	WITHOUT_CLASSIFICATION	2.4299127095545928E-6	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9999964867298388	WITHOUT_CLASSIFICATION	3.513270161254019E-6	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9999976317703556	WITHOUT_CLASSIFICATION	2.3682296443350566E-6	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9999966990153617	WITHOUT_CLASSIFICATION	3.3009846383500544E-6	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9999965849816289	WITHOUT_CLASSIFICATION	3.4150183710165804E-6	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.999996388627548	WITHOUT_CLASSIFICATION	3.6113724520191263E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.999997657009349	WITHOUT_CLASSIFICATION	2.342990651135108E-6	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9999976062425089	WITHOUT_CLASSIFICATION	2.393757491148677E-6	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.999996667909124	WITHOUT_CLASSIFICATION	3.3320908760420185E-6	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.999996427891143	WITHOUT_CLASSIFICATION	3.5721088569451825E-6	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9999966687817842	WITHOUT_CLASSIFICATION	3.3312182157879423E-6	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9999974956558876	WITHOUT_CLASSIFICATION	2.504344112414457E-6	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.999996604679151	WITHOUT_CLASSIFICATION	3.395320849067337E-6	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9999962581816957	WITHOUT_CLASSIFICATION	3.7418183042813117E-6	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.9999963604406317	WITHOUT_CLASSIFICATION	3.639559368260868E-6	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9999964817654431	WITHOUT_CLASSIFICATION	3.5182345568765982E-6	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9999964366293792	WITHOUT_CLASSIFICATION	3.5633706208347186E-6	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9999966364324506	WITHOUT_CLASSIFICATION	3.3635675493310245E-6	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9999963900944384	WITHOUT_CLASSIFICATION	3.6099055615958852E-6	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.999996616583434	WITHOUT_CLASSIFICATION	3.383416566075499E-6	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999964391042643	WITHOUT_CLASSIFICATION	3.56089573577445E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999965685387645	WITHOUT_CLASSIFICATION	3.4314612355530746E-6	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9999975634723108	WITHOUT_CLASSIFICATION	2.4365276891590417E-6	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9999973185424175	WITHOUT_CLASSIFICATION	2.681457582498496E-6	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9999970635971448	WITHOUT_CLASSIFICATION	2.9364028552504035E-6	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9999967373915701	WITHOUT_CLASSIFICATION	3.262608429905714E-6	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.999996793979609	WITHOUT_CLASSIFICATION	3.206020390843131E-6	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.999997036988484	WITHOUT_CLASSIFICATION	2.963011516078088E-6	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9999967107436691	WITHOUT_CLASSIFICATION	3.2892563308351937E-6	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9999966295401771	WITHOUT_CLASSIFICATION	3.3704598229453874E-6	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9999965704632531	WITHOUT_CLASSIFICATION	3.4295367469451253E-6	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9999964825538499	WITHOUT_CLASSIFICATION	3.5174461500856942E-6	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9999963898302161	WITHOUT_CLASSIFICATION	3.6101697839027948E-6	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9999966025408877	WITHOUT_CLASSIFICATION	3.397459112311151E-6	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9999964363312484	WITHOUT_CLASSIFICATION	3.5636687516055177E-6	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9999968944502365	WITHOUT_CLASSIFICATION	3.105549763387963E-6	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9999964313345117	WITHOUT_CLASSIFICATION	3.5686654882390115E-6	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.9999965366487314	WITHOUT_CLASSIFICATION	3.4633512685384974E-6	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9999965887254503	WITHOUT_CLASSIFICATION	3.4112745497218463E-6	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999974095168453	WITHOUT_CLASSIFICATION	2.5904831547155223E-6	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.999997418430139	WITHOUT_CLASSIFICATION	2.5815698609892285E-6	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999968945542695	WITHOUT_CLASSIFICATION	3.1054457304703477E-6	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9999965857489084	WITHOUT_CLASSIFICATION	3.4142510916314434E-6	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999969283678005	WITHOUT_CLASSIFICATION	3.0716321994747505E-6	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9999966303356947	WITHOUT_CLASSIFICATION	3.3696643052239124E-6	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.999996467355474	WITHOUT_CLASSIFICATION	3.5326445258955954E-6	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9999964401427699	WITHOUT_CLASSIFICATION	3.559857230157146E-6	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9999963393955491	WITHOUT_CLASSIFICATION	3.660604450880703E-6	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999968890198131	WITHOUT_CLASSIFICATION	3.1109801868256605E-6	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9999965427079147	WITHOUT_CLASSIFICATION	3.4572920853173353E-6	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9999967680767476	WITHOUT_CLASSIFICATION	3.231923252347277E-6	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9999974048666888	WITHOUT_CLASSIFICATION	2.5951333112128587E-6	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.9999967589848838	WITHOUT_CLASSIFICATION	3.2410151161080507E-6	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999964833687902	WITHOUT_CLASSIFICATION	3.516631209867736E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999969364637931	WITHOUT_CLASSIFICATION	3.0635362069365743E-6	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999865849336066	WITHOUT_CLASSIFICATION	1.34150663934565E-5	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.999343116618262	WITHOUT_CLASSIFICATION	6.568833817379422E-4	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999706173141176	WITHOUT_CLASSIFICATION	2.9382685882275418E-5	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999692266465479	WITHOUT_CLASSIFICATION	3.0773353452159364E-5	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999229607566552	WITHOUT_CLASSIFICATION	7.70392433448516E-5	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999970299984461	WITHOUT_CLASSIFICATION	2.9700015538636098E-6	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999169524249202	WITHOUT_CLASSIFICATION	8.304757507988872E-5	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999180711673209	WITHOUT_CLASSIFICATION	8.192883267900968E-5	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999755872330167	WITHOUT_CLASSIFICATION	2.441276698332329E-5	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9996965382253471	WITHOUT_CLASSIFICATION	3.034617746528425E-4	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9999494078210661	WITHOUT_CLASSIFICATION	5.059217893380505E-5	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9999955936641352	WITHOUT_CLASSIFICATION	4.406335864882032E-6	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999988291387824	WITHOUT_CLASSIFICATION	1.1708612176420282E-6	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9995648480994241	WITHOUT_CLASSIFICATION	4.35151900575875E-4	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999903732787556	WITHOUT_CLASSIFICATION	9.626721244444825E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9997505750440925	WITHOUT_CLASSIFICATION	2.494249559076201E-4	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9998889746779029	WITHOUT_CLASSIFICATION	1.1102532209709525E-4	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999733211789106	WITHOUT_CLASSIFICATION	2.66788210894578E-5	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999572460151	WITHOUT_CLASSIFICATION	4.275398482388788E-8	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999997222940713	WITHOUT_CLASSIFICATION	2.7770592877393397E-7	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999990289330103	WITHOUT_CLASSIFICATION	9.710669896751415E-7	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.999997358518766	WITHOUT_CLASSIFICATION	2.641481233985285E-6	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999999513872297	WITHOUT_CLASSIFICATION	4.8612770270021576E-8	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999997140956925	WITHOUT_CLASSIFICATION	2.8590430745585216E-7	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999997140956925	WITHOUT_CLASSIFICATION	2.8590430745585216E-7	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999996582973949	WITHOUT_CLASSIFICATION	3.417026050634357E-7	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999609352859785	WITHOUT_CLASSIFICATION	3.906471402156325E-5	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.999998853741319	WITHOUT_CLASSIFICATION	1.1462586810198797E-6	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999992837755702	WITHOUT_CLASSIFICATION	7.162244297317316E-7	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.999975147391341	WITHOUT_CLASSIFICATION	2.4852608659016866E-5	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999999762305207	WITHOUT_CLASSIFICATION	2.3769479307050542E-8	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999760696930279	WITHOUT_CLASSIFICATION	2.393030697206243E-5	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999995931623867	WITHOUT_CLASSIFICATION	4.0683761330960545E-7	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999163097237047	WITHOUT_CLASSIFICATION	8.369027629532048E-5	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999906710889652	WITHOUT_CLASSIFICATION	9.328911034847852E-6	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9999992789871361	WITHOUT_CLASSIFICATION	7.21012863836983E-7	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999998756354541	WITHOUT_CLASSIFICATION	1.2436454590862802E-7	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999999184473871	WITHOUT_CLASSIFICATION	8.155261280911231E-8	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999911315181802	WITHOUT_CLASSIFICATION	8.868481819854766E-6	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999950345164291	WITHOUT_CLASSIFICATION	4.965483570924908E-6	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.999990767519592	WITHOUT_CLASSIFICATION	9.232480407982396E-6	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999998208695396	WITHOUT_CLASSIFICATION	1.791304604449017E-7	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9997575025882763	WITHOUT_CLASSIFICATION	2.4249741172371395E-4	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999998657578054	WITHOUT_CLASSIFICATION	1.3424219463763423E-7	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999970197493614	WITHOUT_CLASSIFICATION	2.9802506386461853E-6	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999997965837585	WITHOUT_CLASSIFICATION	2.0341624161845417E-7	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9999920755872147	WITHOUT_CLASSIFICATION	7.92441278519268E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9989430626744091	WITHOUT_CLASSIFICATION	0.0010569373255908921	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9995986854122839	WITHOUT_CLASSIFICATION	4.0131458771610137E-4	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9989430626744091	WITHOUT_CLASSIFICATION	0.0010569373255908921	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999554766325387	WITHOUT_CLASSIFICATION	4.4523367461278914E-5	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9998342231330094	WITHOUT_CLASSIFICATION	1.6577686699045325E-4	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9970279595254202	WITHOUT_CLASSIFICATION	0.002972040474579847	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999237512951515	WITHOUT_CLASSIFICATION	7.62487048485084E-5	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.999973782961074	WITHOUT_CLASSIFICATION	2.621703892607913E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999843093106953	WITHOUT_CLASSIFICATION	1.5690689304690228E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999843093106953	WITHOUT_CLASSIFICATION	1.5690689304690228E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999843093106953	WITHOUT_CLASSIFICATION	1.5690689304690228E-5	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999990008333738	WITHOUT_CLASSIFICATION	9.991666262816083E-7	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9998172114631176	WITHOUT_CLASSIFICATION	1.8278853688232245E-4	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.999996573065195	WITHOUT_CLASSIFICATION	3.4269348050391847E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999874036418591	WITHOUT_CLASSIFICATION	1.2596358140830358E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999874036418591	WITHOUT_CLASSIFICATION	1.2596358140830358E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999874036418591	WITHOUT_CLASSIFICATION	1.2596358140830358E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999874036418591	WITHOUT_CLASSIFICATION	1.2596358140830358E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999874036418591	WITHOUT_CLASSIFICATION	1.2596358140830358E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999874036418591	WITHOUT_CLASSIFICATION	1.2596358140830358E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999856451842866	WITHOUT_CLASSIFICATION	1.4354815713410782E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999856451842866	WITHOUT_CLASSIFICATION	1.4354815713410782E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999856451842866	WITHOUT_CLASSIFICATION	1.4354815713410782E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999856451842866	WITHOUT_CLASSIFICATION	1.4354815713410782E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999856451842866	WITHOUT_CLASSIFICATION	1.4354815713410782E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999634469378388	WITHOUT_CLASSIFICATION	3.655306216117009E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999634469378388	WITHOUT_CLASSIFICATION	3.655306216117009E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999634469378388	WITHOUT_CLASSIFICATION	3.655306216117009E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999634469378388	WITHOUT_CLASSIFICATION	3.655306216117009E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999634469378388	WITHOUT_CLASSIFICATION	3.655306216117009E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999584260848702	WITHOUT_CLASSIFICATION	4.1573915129902314E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999584260848702	WITHOUT_CLASSIFICATION	4.1573915129902314E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999584260848702	WITHOUT_CLASSIFICATION	4.1573915129902314E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999584260848702	WITHOUT_CLASSIFICATION	4.1573915129902314E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999584260848702	WITHOUT_CLASSIFICATION	4.1573915129902314E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999584260848702	WITHOUT_CLASSIFICATION	4.1573915129902314E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999899639773011	WITHOUT_CLASSIFICATION	1.0036022698906418E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999899639773011	WITHOUT_CLASSIFICATION	1.0036022698906418E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999899639773011	WITHOUT_CLASSIFICATION	1.0036022698906418E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999899639773011	WITHOUT_CLASSIFICATION	1.0036022698906418E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999899639773011	WITHOUT_CLASSIFICATION	1.0036022698906418E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999839123873697	WITHOUT_CLASSIFICATION	1.6087612630318325E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999839123873697	WITHOUT_CLASSIFICATION	1.6087612630318325E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999839123873697	WITHOUT_CLASSIFICATION	1.6087612630318325E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999839123873697	WITHOUT_CLASSIFICATION	1.6087612630318325E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999839123873697	WITHOUT_CLASSIFICATION	1.6087612630318325E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999917586516797	WITHOUT_CLASSIFICATION	8.241348320338641E-6	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999917586516797	WITHOUT_CLASSIFICATION	8.241348320338641E-6	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999917586516797	WITHOUT_CLASSIFICATION	8.241348320338641E-6	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999917586516797	WITHOUT_CLASSIFICATION	8.241348320338641E-6	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999917586516797	WITHOUT_CLASSIFICATION	8.241348320338641E-6	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999784997924	WITHOUT_CLASSIFICATION	2.1500207596539603E-8	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999998753727481	WITHOUT_CLASSIFICATION	1.2462725186089163E-7	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999867251545569	WITHOUT_CLASSIFICATION	1.3274845443159735E-5	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999988057101371	WITHOUT_CLASSIFICATION	1.1942898628437249E-6	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999900844375613	WITHOUT_CLASSIFICATION	9.915562438748846E-6	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999965892955716	WITHOUT_CLASSIFICATION	3.4107044285170753E-6	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.999996188987192	WITHOUT_CLASSIFICATION	3.811012808117302E-6	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999956369262609	WITHOUT_CLASSIFICATION	4.363073739094349E-6	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999963792737179	WITHOUT_CLASSIFICATION	3.6207262820867054E-6	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999969727831562	WITHOUT_CLASSIFICATION	3.0272168437935346E-6	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999960942305725	WITHOUT_CLASSIFICATION	3.9057694275039635E-6	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999956386797689	WITHOUT_CLASSIFICATION	4.361320231112033E-6	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9999970707877576	WITHOUT_CLASSIFICATION	2.929212242363935E-6	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9999960573708708	WITHOUT_CLASSIFICATION	3.942629129228925E-6	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.999995537066771	WITHOUT_CLASSIFICATION	4.462933228946531E-6	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9999958541477364	WITHOUT_CLASSIFICATION	4.145852263601039E-6	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9999955707113268	WITHOUT_CLASSIFICATION	4.429288673185334E-6	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9999960739346795	WITHOUT_CLASSIFICATION	3.9260653205928265E-6	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9999948871973137	WITHOUT_CLASSIFICATION	5.112802686412813E-6	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.999994784103678	WITHOUT_CLASSIFICATION	5.21589632201813E-6	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9999957091443984	WITHOUT_CLASSIFICATION	4.290855601587183E-6	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9999953602845044	WITHOUT_CLASSIFICATION	4.639715495561777E-6	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.999995271046215	WITHOUT_CLASSIFICATION	4.728953785063771E-6	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9999952235008264	WITHOUT_CLASSIFICATION	4.7764991736172035E-6	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9999950011285739	WITHOUT_CLASSIFICATION	4.998871426060281E-6	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9999949883292911	WITHOUT_CLASSIFICATION	5.011670708905418E-6	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9999950520199911	WITHOUT_CLASSIFICATION	4.947980008837441E-6	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9999955024980567	WITHOUT_CLASSIFICATION	4.497501943283046E-6	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9999948795730146	WITHOUT_CLASSIFICATION	5.120426985419461E-6	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9999957351379006	WITHOUT_CLASSIFICATION	4.264862099432893E-6	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9999961175426859	WITHOUT_CLASSIFICATION	3.882457314154364E-6	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9999954882716499	WITHOUT_CLASSIFICATION	4.511728350127135E-6	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9999952487959414	WITHOUT_CLASSIFICATION	4.751204058633073E-6	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9999952270092431	WITHOUT_CLASSIFICATION	4.772990756889015E-6	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.9999953353913079	WITHOUT_CLASSIFICATION	4.664608692047172E-6	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9999953855170007	WITHOUT_CLASSIFICATION	4.614482999200899E-6	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.999995180282706	WITHOUT_CLASSIFICATION	4.819717294113025E-6	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9999951436345913	WITHOUT_CLASSIFICATION	4.856365408773235E-6	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.9999953683912963	WITHOUT_CLASSIFICATION	4.63160870366728E-6	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9999964692733598	WITHOUT_CLASSIFICATION	3.5307266400833823E-6	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9999953605128018	WITHOUT_CLASSIFICATION	4.639487198165704E-6	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9999952108698953	WITHOUT_CLASSIFICATION	4.789130104740737E-6	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9999951594970512	WITHOUT_CLASSIFICATION	4.840502948751227E-6	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9999965859553073	WITHOUT_CLASSIFICATION	3.4140446926645483E-6	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9999962860245788	WITHOUT_CLASSIFICATION	3.713975421057696E-6	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9999963680136751	WITHOUT_CLASSIFICATION	3.6319863248019637E-6	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9999966703818013	WITHOUT_CLASSIFICATION	3.329618198670951E-6	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.9999966529134443	WITHOUT_CLASSIFICATION	3.347086555763954E-6	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.9999954938581125	WITHOUT_CLASSIFICATION	4.50614188746874E-6	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999966290693115	WITHOUT_CLASSIFICATION	3.3709306884326404E-6	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999954129745866	WITHOUT_CLASSIFICATION	4.587025413404513E-6	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.999994945893809	WITHOUT_CLASSIFICATION	5.054106191012027E-6	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999948853630499	WITHOUT_CLASSIFICATION	5.114636950033859E-6	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.999997281426844	WITHOUT_CLASSIFICATION	2.71857315611473E-6	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999955600796925	WITHOUT_CLASSIFICATION	4.439920307565402E-6	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999960011786293	WITHOUT_CLASSIFICATION	3.998821370712133E-6	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.999994739990969	WITHOUT_CLASSIFICATION	5.260009030928254E-6	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.999995545331657	WITHOUT_CLASSIFICATION	4.45466834305949E-6	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999956266734213	WITHOUT_CLASSIFICATION	4.373326578675116E-6	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999952087324399	WITHOUT_CLASSIFICATION	4.791267560121493E-6	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999950400751045	WITHOUT_CLASSIFICATION	4.9599248954308085E-6	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999960453109327	WITHOUT_CLASSIFICATION	3.954689067284045E-6	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9999956943116134	WITHOUT_CLASSIFICATION	4.305688386545607E-6	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9999949602781338	WITHOUT_CLASSIFICATION	5.039721866155201E-6	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9999955037883869	WITHOUT_CLASSIFICATION	4.496211613138461E-6	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9999949993416898	WITHOUT_CLASSIFICATION	5.00065831018841E-6	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9999960740619863	WITHOUT_CLASSIFICATION	3.925938013679668E-6	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9999961014036811	WITHOUT_CLASSIFICATION	3.8985963189126465E-6	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.9999952452178288	WITHOUT_CLASSIFICATION	4.754782171266182E-6	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9999948759470612	WITHOUT_CLASSIFICATION	5.124052938859888E-6	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9999950964195338	WITHOUT_CLASSIFICATION	4.903580466273646E-6	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9999952056396104	WITHOUT_CLASSIFICATION	4.794360389541258E-6	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9999956372033182	WITHOUT_CLASSIFICATION	4.362796681855266E-6	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9999949565995733	WITHOUT_CLASSIFICATION	5.043400426661221E-6	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.999995139921167	WITHOUT_CLASSIFICATION	4.860078833026092E-6	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9999958044853138	WITHOUT_CLASSIFICATION	4.195514686157467E-6	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9999954818319158	WITHOUT_CLASSIFICATION	4.518168084184101E-6	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.999996658782683	WITHOUT_CLASSIFICATION	3.3412173170414037E-6	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.999995131968959	WITHOUT_CLASSIFICATION	4.868031041009456E-6	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9999951216235994	WITHOUT_CLASSIFICATION	4.878376400573547E-6	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9999951815363249	WITHOUT_CLASSIFICATION	4.818463675095711E-6	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9999949050210751	WITHOUT_CLASSIFICATION	5.094978924866788E-6	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9999960589174032	WITHOUT_CLASSIFICATION	3.941082596791441E-6	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9999948058926567	WITHOUT_CLASSIFICATION	5.194107343316474E-6	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9999951473836292	WITHOUT_CLASSIFICATION	4.852616370827165E-6	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9999955595580112	WITHOUT_CLASSIFICATION	4.440441988745648E-6	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9999949643909899	WITHOUT_CLASSIFICATION	5.035609010094554E-6	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9999947696303527	WITHOUT_CLASSIFICATION	5.230369647252854E-6	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9999961597910519	WITHOUT_CLASSIFICATION	3.840208948031817E-6	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9999963279877081	WITHOUT_CLASSIFICATION	3.6720122919268035E-6	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9999955075082123	WITHOUT_CLASSIFICATION	4.492491787672752E-6	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9999952049234941	WITHOUT_CLASSIFICATION	4.795076505808985E-6	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9999954133631695	WITHOUT_CLASSIFICATION	4.586636830532714E-6	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9999948434679462	WITHOUT_CLASSIFICATION	5.156532053788871E-6	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9999972466834885	WITHOUT_CLASSIFICATION	2.753316511381433E-6	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9999962931408835	WITHOUT_CLASSIFICATION	3.7068591164973675E-6	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9999962319047507	WITHOUT_CLASSIFICATION	3.7680952491925242E-6	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9999961906851637	WITHOUT_CLASSIFICATION	3.8093148362904554E-6	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.999995771827294	WITHOUT_CLASSIFICATION	4.228172705957197E-6	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999953615797337	WITHOUT_CLASSIFICATION	4.638420266338502E-6	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.999995163569729	WITHOUT_CLASSIFICATION	4.836430271090344E-6	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999953729767149	WITHOUT_CLASSIFICATION	4.627023284995533E-6	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999950704155672	WITHOUT_CLASSIFICATION	4.929584432813076E-6	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999955575121225	WITHOUT_CLASSIFICATION	4.442487877541676E-6	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999948461466497	WITHOUT_CLASSIFICATION	5.1538533503894635E-6	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999962230854328	WITHOUT_CLASSIFICATION	3.7769145671505358E-6	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999963754081355	WITHOUT_CLASSIFICATION	3.6245918644855838E-6	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999977381502814	WITHOUT_CLASSIFICATION	2.261849718635154E-6	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999976577803931	WITHOUT_CLASSIFICATION	2.3422196068961693E-6	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9999968586590707	WITHOUT_CLASSIFICATION	3.1413409293765917E-6	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9999954742718233	WITHOUT_CLASSIFICATION	4.525728176668043E-6	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9999955743661046	WITHOUT_CLASSIFICATION	4.425633895328472E-6	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.9999959218355922	WITHOUT_CLASSIFICATION	4.078164407848948E-6	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.999996326919537	WITHOUT_CLASSIFICATION	3.67308046294253E-6	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9999951013051531	WITHOUT_CLASSIFICATION	4.898694846898885E-6	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9999965196645796	WITHOUT_CLASSIFICATION	3.480335420395685E-6	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9999953553751957	WITHOUT_CLASSIFICATION	4.644624804238031E-6	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9999950152767817	WITHOUT_CLASSIFICATION	4.984723218271731E-6	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.9999949791776648	WITHOUT_CLASSIFICATION	5.0208223352495695E-6	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9999952772881248	WITHOUT_CLASSIFICATION	4.722711875244078E-6	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9999953675413914	WITHOUT_CLASSIFICATION	4.632458608526725E-6	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9999950948731439	WITHOUT_CLASSIFICATION	4.905126856192589E-6	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9999966975105674	WITHOUT_CLASSIFICATION	3.3024894326488797E-6	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9999964829393495	WITHOUT_CLASSIFICATION	3.5170606505590946E-6	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9999961472273349	WITHOUT_CLASSIFICATION	3.852772665086278E-6	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9999964099287542	WITHOUT_CLASSIFICATION	3.590071245836227E-6	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9999957880997138	WITHOUT_CLASSIFICATION	4.21190028620666E-6	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9999953146975767	WITHOUT_CLASSIFICATION	4.685302423303895E-6	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9999954305545958	WITHOUT_CLASSIFICATION	4.569445404153731E-6	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9999960810384904	WITHOUT_CLASSIFICATION	3.9189615096782465E-6	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9999947865632692	WITHOUT_CLASSIFICATION	5.213436730831351E-6	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9999959970999879	WITHOUT_CLASSIFICATION	4.0029000121250024E-6	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.99999459460427	WITHOUT_CLASSIFICATION	5.405395730011658E-6	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9999947626585303	WITHOUT_CLASSIFICATION	5.237341469745847E-6	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9999945793627313	WITHOUT_CLASSIFICATION	5.4206372686709275E-6	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9999946472473384	WITHOUT_CLASSIFICATION	5.352752661465364E-6	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9999951224067272	WITHOUT_CLASSIFICATION	4.877593272845734E-6	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9999976262625868	WITHOUT_CLASSIFICATION	2.3737374131284986E-6	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9999978427608571	WITHOUT_CLASSIFICATION	2.1572391428139264E-6	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9999976347201922	WITHOUT_CLASSIFICATION	2.3652798078529712E-6	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.999997585997621	WITHOUT_CLASSIFICATION	2.4140023790547017E-6	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9999977070188026	WITHOUT_CLASSIFICATION	2.292981197431158E-6	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9999975979211689	WITHOUT_CLASSIFICATION	2.4020788311119297E-6	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9999974439582209	WITHOUT_CLASSIFICATION	2.556041779126485E-6	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9999975426651069	WITHOUT_CLASSIFICATION	2.4573348931832065E-6	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9999973728607021	WITHOUT_CLASSIFICATION	2.6271392978704627E-6	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9999975452788773	WITHOUT_CLASSIFICATION	2.454721122650175E-6	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999974877074975	WITHOUT_CLASSIFICATION	2.512292502503417E-6	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999964524078833	WITHOUT_CLASSIFICATION	3.5475921167301635E-6	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999969152995214	WITHOUT_CLASSIFICATION	3.0847004786516747E-6	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999976487390912	WITHOUT_CLASSIFICATION	2.351260908719087E-6	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.999997644575528	WITHOUT_CLASSIFICATION	2.3554244719560383E-6	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999965942612752	WITHOUT_CLASSIFICATION	3.4057387246782224E-6	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999978196531778	WITHOUT_CLASSIFICATION	2.180346822230992E-6	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999976809952787	WITHOUT_CLASSIFICATION	2.319004721318514E-6	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999970226381412	WITHOUT_CLASSIFICATION	2.9773618588818905E-6	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999969992315321	WITHOUT_CLASSIFICATION	3.0007684680040565E-6	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999968701622547	WITHOUT_CLASSIFICATION	3.1298377452918326E-6	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9999975396886517	WITHOUT_CLASSIFICATION	2.4603113482409314E-6	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9999976707796582	WITHOUT_CLASSIFICATION	2.3292203418111493E-6	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.999997533722991	WITHOUT_CLASSIFICATION	2.4662770088880577E-6	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9999976434568729	WITHOUT_CLASSIFICATION	2.356543126986478E-6	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9999975796108937	WITHOUT_CLASSIFICATION	2.420389106325958E-6	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.999996652859267	WITHOUT_CLASSIFICATION	3.3471407330171532E-6	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9999963783978458	WITHOUT_CLASSIFICATION	3.621602154170884E-6	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9999965341236086	WITHOUT_CLASSIFICATION	3.4658763915800322E-6	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9999971165364966	WITHOUT_CLASSIFICATION	2.8834635034358614E-6	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9999968056863675	WITHOUT_CLASSIFICATION	3.1943136324934064E-6	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.999996699074311	WITHOUT_CLASSIFICATION	3.3009256891445537E-6	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9999965623522441	WITHOUT_CLASSIFICATION	3.4376477559340398E-6	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9999964753031965	WITHOUT_CLASSIFICATION	3.5246968034517547E-6	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9999963805135901	WITHOUT_CLASSIFICATION	3.619486409983808E-6	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.999996841986252	WITHOUT_CLASSIFICATION	3.158013747932405E-6	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9999966520764021	WITHOUT_CLASSIFICATION	3.34792359801523E-6	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9999964138664507	WITHOUT_CLASSIFICATION	3.586133549280584E-6	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9999969356312147	WITHOUT_CLASSIFICATION	3.064368785388413E-6	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9999975601675328	WITHOUT_CLASSIFICATION	2.4398324671604E-6	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9999963634450467	WITHOUT_CLASSIFICATION	3.6365549532999505E-6	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9999970920972785	WITHOUT_CLASSIFICATION	2.9079027213794226E-6	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.999996933704253	WITHOUT_CLASSIFICATION	3.0662957468587425E-6	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9999972544191447	WITHOUT_CLASSIFICATION	2.745580855259082E-6	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9999971775452885	WITHOUT_CLASSIFICATION	2.8224547114578368E-6	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9999970608703668	WITHOUT_CLASSIFICATION	2.9391296332557436E-6	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.999997089006056	WITHOUT_CLASSIFICATION	2.9109939440062107E-6	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9999970531790108	WITHOUT_CLASSIFICATION	2.946820989312006E-6	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9999970821510346	WITHOUT_CLASSIFICATION	2.917848965487109E-6	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9999978814876489	WITHOUT_CLASSIFICATION	2.1185123511254436E-6	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9999971258884881	WITHOUT_CLASSIFICATION	2.874111511822359E-6	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9999968865474944	WITHOUT_CLASSIFICATION	3.1134525056394564E-6	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9999969206290268	WITHOUT_CLASSIFICATION	3.0793709732414905E-6	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9999969825015782	WITHOUT_CLASSIFICATION	3.0174984218373323E-6	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9999970458662235	WITHOUT_CLASSIFICATION	2.954133776419542E-6	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9999968943570712	WITHOUT_CLASSIFICATION	3.10564292874546E-6	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.999996961063427	WITHOUT_CLASSIFICATION	3.038936573075071E-6	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9999969745936592	WITHOUT_CLASSIFICATION	3.0254063407569514E-6	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9999975372912834	WITHOUT_CLASSIFICATION	2.462708716633988E-6	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999968158822403	WITHOUT_CLASSIFICATION	3.1841177596536764E-6	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999967195104604	WITHOUT_CLASSIFICATION	3.280489539575433E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999969713289827	WITHOUT_CLASSIFICATION	3.028671017375693E-6	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999965033072463	WITHOUT_CLASSIFICATION	3.4966927536973133E-6	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999968923490673	WITHOUT_CLASSIFICATION	3.107650932670608E-6	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999975700872904	WITHOUT_CLASSIFICATION	2.4299127095545928E-6	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.999996388627548	WITHOUT_CLASSIFICATION	3.6113724520191263E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.999997657009349	WITHOUT_CLASSIFICATION	2.342990651135108E-6	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999964391042643	WITHOUT_CLASSIFICATION	3.56089573577445E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999965685387645	WITHOUT_CLASSIFICATION	3.4314612355530746E-6	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9999975457301538	WITHOUT_CLASSIFICATION	2.454269846357859E-6	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9999966272418375	WITHOUT_CLASSIFICATION	3.372758162549982E-6	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9999965896369574	WITHOUT_CLASSIFICATION	3.4103630426686838E-6	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9999970569658894	WITHOUT_CLASSIFICATION	2.9430341107498896E-6	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9999969010463647	WITHOUT_CLASSIFICATION	3.0989536351229243E-6	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9999969695851629	WITHOUT_CLASSIFICATION	3.0304148370146102E-6	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9999965792485321	WITHOUT_CLASSIFICATION	3.4207514679884868E-6	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9999971108646457	WITHOUT_CLASSIFICATION	2.889135354405289E-6	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9999968759686074	WITHOUT_CLASSIFICATION	3.124031392555253E-6	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9999967838687424	WITHOUT_CLASSIFICATION	3.216131257604566E-6	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9999966556904019	WITHOUT_CLASSIFICATION	3.344309598088347E-6	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9999965375679016	WITHOUT_CLASSIFICATION	3.4624320984914352E-6	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9999965132686174	WITHOUT_CLASSIFICATION	3.4867313826598367E-6	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.999996648664462	WITHOUT_CLASSIFICATION	3.351335538007735E-6	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9999966287299298	WITHOUT_CLASSIFICATION	3.371270070254101E-6	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9999967040659281	WITHOUT_CLASSIFICATION	3.295934071921481E-6	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.999996525870621	WITHOUT_CLASSIFICATION	3.4741293788972078E-6	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9999975503396442	WITHOUT_CLASSIFICATION	2.4496603557498663E-6	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9999974208625294	WITHOUT_CLASSIFICATION	2.579137470457312E-6	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9999965796196612	WITHOUT_CLASSIFICATION	3.42038033879689E-6	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9999969629011508	WITHOUT_CLASSIFICATION	3.0370988491495065E-6	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.9999969190353606	WITHOUT_CLASSIFICATION	3.080964639429032E-6	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.999997754673156	WITHOUT_CLASSIFICATION	2.245326844118731E-6	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9999967287855547	WITHOUT_CLASSIFICATION	3.271214445315563E-6	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9999966952527424	WITHOUT_CLASSIFICATION	3.3047472577106307E-6	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9999968271237102	WITHOUT_CLASSIFICATION	3.1728762896734806E-6	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9999965192682004	WITHOUT_CLASSIFICATION	3.480731799531331E-6	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9999967120816223	WITHOUT_CLASSIFICATION	3.2879183776483304E-6	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9999965503065915	WITHOUT_CLASSIFICATION	3.4496934085810866E-6	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.999996634539868	WITHOUT_CLASSIFICATION	3.365460132015392E-6	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9999966453749364	WITHOUT_CLASSIFICATION	3.354625063485695E-6	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9999974390557317	WITHOUT_CLASSIFICATION	2.5609442684163412E-6	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9999964993024688	WITHOUT_CLASSIFICATION	3.500697531162643E-6	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9999971041120314	WITHOUT_CLASSIFICATION	2.895887968550195E-6	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9999967948011669	WITHOUT_CLASSIFICATION	3.2051988331666518E-6	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9999969006532101	WITHOUT_CLASSIFICATION	3.099346789918708E-6	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9999962853571662	WITHOUT_CLASSIFICATION	3.7146428338841845E-6	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9999966159851204	WITHOUT_CLASSIFICATION	3.384014879754427E-6	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9999965028120743	WITHOUT_CLASSIFICATION	3.4971879256311356E-6	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999964456284373	WITHOUT_CLASSIFICATION	3.554371562837227E-6	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.999996793979609	WITHOUT_CLASSIFICATION	3.206020390843131E-6	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.999997036988484	WITHOUT_CLASSIFICATION	2.963011516078088E-6	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999974095168453	WITHOUT_CLASSIFICATION	2.5904831547155223E-6	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999963618252637	WITHOUT_CLASSIFICATION	3.6381747361698763E-6	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999968945542695	WITHOUT_CLASSIFICATION	3.1054457304703477E-6	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999969283678005	WITHOUT_CLASSIFICATION	3.0716321994747505E-6	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.999996467355474	WITHOUT_CLASSIFICATION	3.5326445258955954E-6	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999964833687902	WITHOUT_CLASSIFICATION	3.516631209867736E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999969364637931	WITHOUT_CLASSIFICATION	3.0635362069365743E-6	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9999973376528506	WITHOUT_CLASSIFICATION	2.6623471493303714E-6	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.999997540375867	WITHOUT_CLASSIFICATION	2.4596241330373854E-6	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9999968329195683	WITHOUT_CLASSIFICATION	3.1670804317983662E-6	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9999968570718258	WITHOUT_CLASSIFICATION	3.1429281740790675E-6	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9999965738813165	WITHOUT_CLASSIFICATION	3.426118683599183E-6	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9999965843243026	WITHOUT_CLASSIFICATION	3.4156756973916244E-6	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9999965351772641	WITHOUT_CLASSIFICATION	3.464822736005496E-6	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9999965441862538	WITHOUT_CLASSIFICATION	3.455813746211715E-6	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9999964328850921	WITHOUT_CLASSIFICATION	3.5671149079472434E-6	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9999974906455871	WITHOUT_CLASSIFICATION	2.50935441296907E-6	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9999966519256311	WITHOUT_CLASSIFICATION	3.348074368850451E-6	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9999966057851386	WITHOUT_CLASSIFICATION	3.3942148614070756E-6	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.9999975934421655	WITHOUT_CLASSIFICATION	2.406557834408713E-6	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9999964612748231	WITHOUT_CLASSIFICATION	3.538725176829978E-6	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.999996434779417	WITHOUT_CLASSIFICATION	3.5652205830054346E-6	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9999968734366083	WITHOUT_CLASSIFICATION	3.1265633917711372E-6	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.999996645583277	WITHOUT_CLASSIFICATION	3.3544167229465296E-6	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9999968747698922	WITHOUT_CLASSIFICATION	3.12523010771857E-6	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9999967051282467	WITHOUT_CLASSIFICATION	3.2948717532592064E-6	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9999964580604137	WITHOUT_CLASSIFICATION	3.541939586406008E-6	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9999964498660052	WITHOUT_CLASSIFICATION	3.5501339949250514E-6	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9999966432712354	WITHOUT_CLASSIFICATION	3.356728764469629E-6	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.999996395618316	WITHOUT_CLASSIFICATION	3.6043816841011038E-6	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9999963811711027	WITHOUT_CLASSIFICATION	3.6188288973333643E-6	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9999963480928494	WITHOUT_CLASSIFICATION	3.6519071506302307E-6	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9999969304741553	WITHOUT_CLASSIFICATION	3.0695258446948962E-6	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9999966371316726	WITHOUT_CLASSIFICATION	3.3628683274714573E-6	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9999965187552216	WITHOUT_CLASSIFICATION	3.481244778517274E-6	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9999964094869257	WITHOUT_CLASSIFICATION	3.590513074263255E-6	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.99999635608499	WITHOUT_CLASSIFICATION	3.6439150100586973E-6	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9999976740579495	WITHOUT_CLASSIFICATION	2.3259420505895314E-6	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9999975968224386	WITHOUT_CLASSIFICATION	2.4031775612707007E-6	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9999973854632853	WITHOUT_CLASSIFICATION	2.6145367146541687E-6	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9999974360912743	WITHOUT_CLASSIFICATION	2.5639087256966765E-6	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9999966010405741	WITHOUT_CLASSIFICATION	3.3989594259146385E-6	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9999969531664505	WITHOUT_CLASSIFICATION	3.0468335494293714E-6	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9999968924874316	WITHOUT_CLASSIFICATION	3.107512568323796E-6	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.9999967706620679	WITHOUT_CLASSIFICATION	3.2293379320667683E-6	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9999966346950203	WITHOUT_CLASSIFICATION	3.3653049797795436E-6	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999169524249202	WITHOUT_CLASSIFICATION	8.304757507988872E-5	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999180711673209	WITHOUT_CLASSIFICATION	8.192883267900968E-5	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999988291387824	WITHOUT_CLASSIFICATION	1.1708612176420282E-6	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999903732787556	WITHOUT_CLASSIFICATION	9.626721244444825E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9997505750440925	WITHOUT_CLASSIFICATION	2.494249559076201E-4	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9998889746779029	WITHOUT_CLASSIFICATION	1.1102532209709525E-4	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999733211789106	WITHOUT_CLASSIFICATION	2.66788210894578E-5	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999775910836534	WITHOUT_CLASSIFICATION	2.2408916346584952E-5	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.999996772282948	WITHOUT_CLASSIFICATION	3.227717051933875E-6	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9999964799677358	WITHOUT_CLASSIFICATION	3.5200322642173663E-6	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9999970020302527	WITHOUT_CLASSIFICATION	2.9979697473471336E-6	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9999965549573637	WITHOUT_CLASSIFICATION	3.4450426362223543E-6	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9999964742891839	WITHOUT_CLASSIFICATION	3.525710815966468E-6	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9999965223177469	WITHOUT_CLASSIFICATION	3.477682253061526E-6	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9999976260342543	WITHOUT_CLASSIFICATION	2.3739657456061023E-6	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9999974439186959	WITHOUT_CLASSIFICATION	2.556081304066032E-6	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9999964353798627	WITHOUT_CLASSIFICATION	3.5646201371532073E-6	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9999964952865503	WITHOUT_CLASSIFICATION	3.5047134497306393E-6	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9999966435898648	WITHOUT_CLASSIFICATION	3.3564101351057794E-6	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9999966763390685	WITHOUT_CLASSIFICATION	3.323660931525462E-6	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.9999969033873198	WITHOUT_CLASSIFICATION	3.0966126802288174E-6	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9999965872773213	WITHOUT_CLASSIFICATION	3.412722678673206E-6	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9999974546771763	WITHOUT_CLASSIFICATION	2.5453228236338478E-6	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9999966039352753	WITHOUT_CLASSIFICATION	3.396064724761069E-6	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.999996455858927	WITHOUT_CLASSIFICATION	3.5441410728580795E-6	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9999968607097197	WITHOUT_CLASSIFICATION	3.1392902802509183E-6	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.999996890289975	WITHOUT_CLASSIFICATION	3.109710025007264E-6	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9999964483960294	WITHOUT_CLASSIFICATION	3.551603970617195E-6	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9999967435734366	WITHOUT_CLASSIFICATION	3.2564265634910154E-6	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9999964146887739	WITHOUT_CLASSIFICATION	3.5853112262326474E-6	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9999976334987725	WITHOUT_CLASSIFICATION	2.3665012274988906E-6	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999303412672883	WITHOUT_CLASSIFICATION	6.96587327117267E-5	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.99999390278755	WITHOUT_CLASSIFICATION	6.09721244999833E-6	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999987959036194	WITHOUT_CLASSIFICATION	1.2040963805452803E-6	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999974116828136	WITHOUT_CLASSIFICATION	2.58831718640176E-6	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999999457266139	WITHOUT_CLASSIFICATION	5.4273386219131635E-8	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999576707702147	WITHOUT_CLASSIFICATION	4.232922978523502E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999997222940713	WITHOUT_CLASSIFICATION	2.7770592877393397E-7	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999990289330103	WITHOUT_CLASSIFICATION	9.710669896751415E-7	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999997140956925	WITHOUT_CLASSIFICATION	2.8590430745585216E-7	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999997140956925	WITHOUT_CLASSIFICATION	2.8590430745585216E-7	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999989931542693	WITHOUT_CLASSIFICATION	1.0068457306196143E-6	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999970879181813	WITHOUT_CLASSIFICATION	2.9120818187175177E-6	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999999586942264	WITHOUT_CLASSIFICATION	4.130577352799075E-8	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999975830265815	WITHOUT_CLASSIFICATION	2.416973418559225E-6	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999999882751393	WITHOUT_CLASSIFICATION	1.1724860777855403E-8	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999871025042764	WITHOUT_CLASSIFICATION	1.289749572374024E-5	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9986313366201647	WITHOUT_CLASSIFICATION	0.0013686633798352759	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999992515472285	WITHOUT_CLASSIFICATION	7.484527715183065E-7	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999994098959876	WITHOUT_CLASSIFICATION	5.901040124977156E-7	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999962858785655	WITHOUT_CLASSIFICATION	3.7141214344343456E-6	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999854055434696	WITHOUT_CLASSIFICATION	1.4594456530404691E-5	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999782456296263	WITHOUT_CLASSIFICATION	2.17543703736588E-5	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.999992966886692	WITHOUT_CLASSIFICATION	7.033113307971479E-6	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.99999949752525	WITHOUT_CLASSIFICATION	5.024747499705983E-7	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999464021067895	WITHOUT_CLASSIFICATION	5.35978932103698E-5	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999464021067895	WITHOUT_CLASSIFICATION	5.35978932103698E-5	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999928443975584	WITHOUT_CLASSIFICATION	7.155602441645557E-6	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999993232783203	WITHOUT_CLASSIFICATION	6.767216795634396E-7	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999991062359671	WITHOUT_CLASSIFICATION	8.937640330068369E-7	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999829128776673	WITHOUT_CLASSIFICATION	1.70871223326497E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999999970426467	WITHOUT_CLASSIFICATION	2.9573532890881984E-8	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999961924116526	WITHOUT_CLASSIFICATION	3.807588347457098E-6	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999921505822474	WITHOUT_CLASSIFICATION	7.849417752553533E-6	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999961924116526	WITHOUT_CLASSIFICATION	3.807588347457098E-6	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.999998387780882	WITHOUT_CLASSIFICATION	1.6122191179690677E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999971884921776	WITHOUT_CLASSIFICATION	2.8115078224707664E-6	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9999663599135318	WITHOUT_CLASSIFICATION	3.364008646824826E-5	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9999772433958557	WITHOUT_CLASSIFICATION	2.275660414425627E-5	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999981354714488	WITHOUT_CLASSIFICATION	1.8645285511780525E-6	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999986300835825	WITHOUT_CLASSIFICATION	1.3699164175376046E-6	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.999919992171404	WITHOUT_CLASSIFICATION	8.000782859600608E-5	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999827496521824	WITHOUT_CLASSIFICATION	1.725034781767032E-5	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999978829145403	WITHOUT_CLASSIFICATION	2.1170854596849285E-6	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999997630752194	WITHOUT_CLASSIFICATION	2.3692478046632762E-7	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999998600033926	WITHOUT_CLASSIFICATION	1.3999660755139355E-7	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.999997644207867	WITHOUT_CLASSIFICATION	2.3557921330264635E-6	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999889563537518	WITHOUT_CLASSIFICATION	1.104364624820482E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998800430731314	WITHOUT_CLASSIFICATION	1.1995692686865865E-4	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999997691099153	WITHOUT_CLASSIFICATION	2.3089008479376573E-7	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999997691099153	WITHOUT_CLASSIFICATION	2.3089008479376573E-7	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999968420295741	WITHOUT_CLASSIFICATION	3.1579704260681317E-6	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999903845621898	WITHOUT_CLASSIFICATION	9.615437810234357E-6	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999827140467618	WITHOUT_CLASSIFICATION	1.7285953238163342E-5	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999999907893314	WITHOUT_CLASSIFICATION	9.210668491763135E-9	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.999999571485675	WITHOUT_CLASSIFICATION	4.285143250563809E-7	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999961924116526	WITHOUT_CLASSIFICATION	3.807588347457098E-6	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999993548636	WITHOUT_CLASSIFICATION	6.451364000040289E-7	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999999569750507	WITHOUT_CLASSIFICATION	4.3024949298412894E-8	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999992776090629	WITHOUT_CLASSIFICATION	7.223909370265642E-7	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999993096527884	WITHOUT_CLASSIFICATION	6.903472116255613E-7	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999998735844878	WITHOUT_CLASSIFICATION	1.2641551222681233E-7	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9997551950981781	WITHOUT_CLASSIFICATION	2.4480490182190133E-4	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999427809074983	WITHOUT_CLASSIFICATION	5.721909250154755E-5	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999780161292077	WITHOUT_CLASSIFICATION	2.198387079228289E-5	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999694341899223	WITHOUT_CLASSIFICATION	3.056581007771122E-5	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9998001493443237	WITHOUT_CLASSIFICATION	1.9985065567642866E-4	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999744652956057	WITHOUT_CLASSIFICATION	2.5534704394249384E-5	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999996798208269	WITHOUT_CLASSIFICATION	3.201791730462819E-7	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999999754968422	WITHOUT_CLASSIFICATION	2.450315778330119E-8	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999723359484528	WITHOUT_CLASSIFICATION	2.766405154717878E-5	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9982481210185783	WITHOUT_CLASSIFICATION	0.0017518789814216184	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999961407904475	WITHOUT_CLASSIFICATION	3.859209552495108E-6	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999996478716481	WITHOUT_CLASSIFICATION	3.5212835186184477E-7	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.999994719925024	WITHOUT_CLASSIFICATION	5.280074976018593E-6	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9999589690771382	WITHOUT_CLASSIFICATION	4.1030922861778396E-5	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9996994318964872	WITHOUT_CLASSIFICATION	3.005681035127025E-4	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999923069001336	WITHOUT_CLASSIFICATION	7.693099866382768E-6	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.999985986211714	WITHOUT_CLASSIFICATION	1.4013788286028686E-5	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999978448631072	WITHOUT_CLASSIFICATION	2.155136892780619E-6	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.999999640939869	WITHOUT_CLASSIFICATION	3.590601309743722E-7	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999984218161087	WITHOUT_CLASSIFICATION	1.5781838913123859E-6	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999997448122875	WITHOUT_CLASSIFICATION	2.5518771251076824E-7	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.999999816563742	WITHOUT_CLASSIFICATION	1.8343625791519867E-7	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999987356766837	WITHOUT_CLASSIFICATION	1.26432331632471E-6	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999156041318514	WITHOUT_CLASSIFICATION	8.439586814862057E-5	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.999999495373373	WITHOUT_CLASSIFICATION	5.046266270282725E-7	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999987108139567	WITHOUT_CLASSIFICATION	1.2891860432665957E-6	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.999997426867186	WITHOUT_CLASSIFICATION	2.5731328140539516E-6	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999982822839664	WITHOUT_CLASSIFICATION	1.717716033718762E-6	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999998517386084	WITHOUT_CLASSIFICATION	1.4826139162983977E-7	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999839600323709	WITHOUT_CLASSIFICATION	1.6039967629175455E-5	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999998317366281	WITHOUT_CLASSIFICATION	1.6826337185584537E-7	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999800399067579	WITHOUT_CLASSIFICATION	1.9960093242147858E-5	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.999994911656181	WITHOUT_CLASSIFICATION	5.088343818850785E-6	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9999988303929743	WITHOUT_CLASSIFICATION	1.169607025711193E-6	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999999683809656	WITHOUT_CLASSIFICATION	3.1619034333992494E-8	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999775910836534	WITHOUT_CLASSIFICATION	2.2408916346584952E-5	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.999995632205496	WITHOUT_CLASSIFICATION	4.367794503998332E-6	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999945474383201	WITHOUT_CLASSIFICATION	5.452561679917933E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999563468083481	WITHOUT_CLASSIFICATION	4.365319165184014E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999993307270039	WITHOUT_CLASSIFICATION	6.692729961252688E-7	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999971884921776	WITHOUT_CLASSIFICATION	2.8115078224707664E-6	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999981072121357	WITHOUT_CLASSIFICATION	1.8927878644149027E-6	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999999875899348	WITHOUT_CLASSIFICATION	1.2410065288074965E-8	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999999241249814	WITHOUT_CLASSIFICATION	7.587501856273042E-8	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999966508572905	WITHOUT_CLASSIFICATION	3.3491427095098288E-6	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999966508572905	WITHOUT_CLASSIFICATION	3.3491427095098288E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999941592277053	WITHOUT_CLASSIFICATION	5.840772294758343E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999941592277053	WITHOUT_CLASSIFICATION	5.840772294758343E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999941592277053	WITHOUT_CLASSIFICATION	5.840772294758343E-6	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999682354978076	WITHOUT_CLASSIFICATION	3.176450219244613E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999682354978076	WITHOUT_CLASSIFICATION	3.176450219244613E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999947416263864	WITHOUT_CLASSIFICATION	5.258373613694408E-6	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999947416263864	WITHOUT_CLASSIFICATION	5.258373613694408E-6	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999855840838511	WITHOUT_CLASSIFICATION	1.441591614896233E-5	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999962269182678	WITHOUT_CLASSIFICATION	3.773081732253277E-6	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999993857555165	WITHOUT_CLASSIFICATION	6.142444835169551E-7	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999993857555165	WITHOUT_CLASSIFICATION	6.142444835169551E-7	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999998395446525	WITHOUT_CLASSIFICATION	1.6045534742039424E-7	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999986806387016	WITHOUT_CLASSIFICATION	1.3193612984203187E-6	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999995748428486	WITHOUT_CLASSIFICATION	4.251571513295013E-7	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999998797753396	WITHOUT_CLASSIFICATION	1.202246603982619E-7	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999966392303095	WITHOUT_CLASSIFICATION	3.3607696906844746E-6	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999998140788235	WITHOUT_CLASSIFICATION	1.859211765241233E-7	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999988951686059	WITHOUT_CLASSIFICATION	1.1048313941556878E-6	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.999999502176505	WITHOUT_CLASSIFICATION	4.978234949124146E-7	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9999994280290811	WITHOUT_CLASSIFICATION	5.71970918916825E-7	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9999925105325156	WITHOUT_CLASSIFICATION	7.4894674843623465E-6	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999878344532829	WITHOUT_CLASSIFICATION	1.216554671706852E-5	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9999955283992897	WITHOUT_CLASSIFICATION	4.471600710261218E-6	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9999974946070461	WITHOUT_CLASSIFICATION	2.505392953852252E-6	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9999831074229901	WITHOUT_CLASSIFICATION	1.6892577009965585E-5	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999996475088054	WITHOUT_CLASSIFICATION	3.524911945954171E-7	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999662547253911	WITHOUT_CLASSIFICATION	3.374527460889631E-5	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9934981360387953	WITHOUT_CLASSIFICATION	0.006501863961204546	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999676049740414	WITHOUT_CLASSIFICATION	3.23950259586393E-5	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999906105760255	WITHOUT_CLASSIFICATION	9.3894239746264E-6	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.999981987510074	WITHOUT_CLASSIFICATION	1.8012489925965607E-5	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999979732683079	WITHOUT_CLASSIFICATION	2.026731692106418E-6	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999961385449976	WITHOUT_CLASSIFICATION	3.861455002464327E-6	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9999982545217232	WITHOUT_CLASSIFICATION	1.7454782768432107E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999822713452	WITHOUT_CLASSIFICATION	1.7728654777962627E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999377928486	WITHOUT_CLASSIFICATION	6.220715144552063E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999737918953	WITHOUT_CLASSIFICATION	2.620810471030888E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999999968688813	WITHOUT_CLASSIFICATION	3.1311186881729284E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999331237633	WITHOUT_CLASSIFICATION	6.687623666066961E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999776011553	WITHOUT_CLASSIFICATION	2.239884468932613E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999214058638	WITHOUT_CLASSIFICATION	7.859413615520325E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999668879973	WITHOUT_CLASSIFICATION	3.3112002746324594E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999490399171	WITHOUT_CLASSIFICATION	5.096008281541122E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99999982118884	WITHOUT_CLASSIFICATION	1.7881115994300739E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999298362686	WITHOUT_CLASSIFICATION	7.016373135712513E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99999982118884	WITHOUT_CLASSIFICATION	1.7881115994300739E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99999982118884	WITHOUT_CLASSIFICATION	1.7881115994300739E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99999982118884	WITHOUT_CLASSIFICATION	1.7881115994300739E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99999982118884	WITHOUT_CLASSIFICATION	1.7881115994300739E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99999982118884	WITHOUT_CLASSIFICATION	1.7881115994300739E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99999982118884	WITHOUT_CLASSIFICATION	1.7881115994300739E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999298362686	WITHOUT_CLASSIFICATION	7.016373135712513E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999298362686	WITHOUT_CLASSIFICATION	7.016373135712513E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999298362686	WITHOUT_CLASSIFICATION	7.016373135712513E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999298362686	WITHOUT_CLASSIFICATION	7.016373135712513E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999298362686	WITHOUT_CLASSIFICATION	7.016373135712513E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999298362686	WITHOUT_CLASSIFICATION	7.016373135712513E-8	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999963429449507	WITHOUT_CLASSIFICATION	3.657055049206977E-6	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999985041138358	WITHOUT_CLASSIFICATION	1.495886164102563E-6	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999903476225911	WITHOUT_CLASSIFICATION	9.652377408926246E-6	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999999806359262	WITHOUT_CLASSIFICATION	1.936407380650016E-7	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999999916149679	WITHOUT_CLASSIFICATION	8.385032021853141E-9	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998873813962	WITHOUT_CLASSIFICATION	1.1261860381336832E-7	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999942082050488	WITHOUT_CLASSIFICATION	5.791794951161866E-6	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999995442321329	WITHOUT_CLASSIFICATION	4.557678671162999E-7	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999910913800638	WITHOUT_CLASSIFICATION	8.908619936125934E-6	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9998817183167004	WITHOUT_CLASSIFICATION	1.1828168329954358E-4	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9999274556868707	WITHOUT_CLASSIFICATION	7.254431312924778E-5	IMPLEMENTATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999876689512	WITHOUT_CLASSIFICATION	1.2331048877959283E-8	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999862432433876	WITHOUT_CLASSIFICATION	1.3756756612336241E-5	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999619760168	WITHOUT_CLASSIFICATION	3.802398324566485E-8	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999990255654888	WITHOUT_CLASSIFICATION	9.744345111432592E-7	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999996715542979	WITHOUT_CLASSIFICATION	3.284457021100507E-7	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.99999802382046	WITHOUT_CLASSIFICATION	1.9761795399203727E-6	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999997521136793	WITHOUT_CLASSIFICATION	2.4788632065209787E-7	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999999096653551	WITHOUT_CLASSIFICATION	9.033464485438518E-8	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.999997671076287	WITHOUT_CLASSIFICATION	2.328923712887407E-6	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999999759547795	WITHOUT_CLASSIFICATION	2.4045220487747176E-8	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999948847362424	WITHOUT_CLASSIFICATION	5.115263757649139E-6	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999921505822474	WITHOUT_CLASSIFICATION	7.849417752553533E-6	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999999515236326	WITHOUT_CLASSIFICATION	4.8476367329954834E-8	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999997735306037	WITHOUT_CLASSIFICATION	2.2646939643221142E-7	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999999962082473	WITHOUT_CLASSIFICATION	3.791752735067767E-9	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999992026942	WITHOUT_CLASSIFICATION	7.973058237933622E-10	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999736290226083	WITHOUT_CLASSIFICATION	2.6370977391601715E-5	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.9999387037387839	WITHOUT_CLASSIFICATION	6.129626121602245E-5	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999998890789521	WITHOUT_CLASSIFICATION	1.1092104784822827E-7	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.9999875439484023	WITHOUT_CLASSIFICATION	1.2456051597715274E-5	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999995786136215	WITHOUT_CLASSIFICATION	4.213863783720351E-7	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999999790924678	WITHOUT_CLASSIFICATION	2.0907532181606915E-8	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9999998765186945	WITHOUT_CLASSIFICATION	1.2348130559405387E-7	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999981000043605	WITHOUT_CLASSIFICATION	1.8999956394718918E-6	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999879394954608	WITHOUT_CLASSIFICATION	1.2060504539153175E-5	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9998929626465547	WITHOUT_CLASSIFICATION	1.0703735344534295E-4	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999995487258326	WITHOUT_CLASSIFICATION	4.512741673770977E-7	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.999998245881448	WITHOUT_CLASSIFICATION	1.7541185520160543E-6	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999997622394076	WITHOUT_CLASSIFICATION	2.377605922771283E-7	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999975868499345	WITHOUT_CLASSIFICATION	2.4131500655760854E-6	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999972177631082	WITHOUT_CLASSIFICATION	2.782236891701337E-6	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999998774240569	WITHOUT_CLASSIFICATION	1.2257594296840925E-7	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999994723672454	WITHOUT_CLASSIFICATION	5.276327545379063E-7	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999994723672454	WITHOUT_CLASSIFICATION	5.276327545379063E-7	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999908349340048	WITHOUT_CLASSIFICATION	9.165065995147198E-6	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999908349340048	WITHOUT_CLASSIFICATION	9.165065995147198E-6	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999998228681765	WITHOUT_CLASSIFICATION	1.7713182349566806E-7	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999998228681765	WITHOUT_CLASSIFICATION	1.7713182349566806E-7	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999982335937874	WITHOUT_CLASSIFICATION	1.7664062125438636E-6	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999973356865165	WITHOUT_CLASSIFICATION	2.664313483457932E-6	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999989765384973	WITHOUT_CLASSIFICATION	1.023461502589965E-6	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.999999974680934	WITHOUT_CLASSIFICATION	2.5319065977714276E-8	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999995632091494	WITHOUT_CLASSIFICATION	4.367908505136556E-7	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999869898576047	WITHOUT_CLASSIFICATION	1.3010142395346258E-5	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9999953217529838	WITHOUT_CLASSIFICATION	4.678247016123188E-6	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999313342172	WITHOUT_CLASSIFICATION	6.866578287071967E-8	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.999999788433859	WITHOUT_CLASSIFICATION	2.115661411702345E-7	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999999565188794	WITHOUT_CLASSIFICATION	4.348112059610374E-8	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999999705671405	WITHOUT_CLASSIFICATION	2.9432859524361455E-8	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999986382467255	WITHOUT_CLASSIFICATION	1.3617532744574742E-6	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999999591148021	WITHOUT_CLASSIFICATION	4.088519790451945E-8	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999893634001424	WITHOUT_CLASSIFICATION	1.0636599857615092E-5	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999955480947318	WITHOUT_CLASSIFICATION	4.451905268141866E-6	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9999995031420883	WITHOUT_CLASSIFICATION	4.968579115761352E-7	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999996926284442	WITHOUT_CLASSIFICATION	3.073715556495366E-7	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.999998560877187	WITHOUT_CLASSIFICATION	1.4391228129643234E-6	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999998358555368	WITHOUT_CLASSIFICATION	1.6414446326122938E-7	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9999977811824167	WITHOUT_CLASSIFICATION	2.2188175832760004E-6	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9999985353999731	WITHOUT_CLASSIFICATION	1.4646000269394961E-6	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999984887210901	WITHOUT_CLASSIFICATION	1.5112789098337094E-6	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999989206572768	WITHOUT_CLASSIFICATION	1.0793427231695333E-6	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.999999369846321	WITHOUT_CLASSIFICATION	6.301536790100134E-7	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999993649159633	WITHOUT_CLASSIFICATION	6.350840366254632E-7	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999999720554525	WITHOUT_CLASSIFICATION	2.794454754000865E-8	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9999962189008996	WITHOUT_CLASSIFICATION	3.781099100358384E-6	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999675132477197	WITHOUT_CLASSIFICATION	3.2486752280296684E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999675132477197	WITHOUT_CLASSIFICATION	3.2486752280296684E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999675132477197	WITHOUT_CLASSIFICATION	3.2486752280296684E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998093204349068	WITHOUT_CLASSIFICATION	1.9067956509325091E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998093204349068	WITHOUT_CLASSIFICATION	1.9067956509325091E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999723359484528	WITHOUT_CLASSIFICATION	2.766405154717878E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999723359484528	WITHOUT_CLASSIFICATION	2.766405154717878E-5	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.999999858044376	WITHOUT_CLASSIFICATION	1.4195562413558416E-7	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9939386176280811	WITHOUT_CLASSIFICATION	0.006061382371918844	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.999997056921085	WITHOUT_CLASSIFICATION	2.943078914950535E-6	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999991959490471	WITHOUT_CLASSIFICATION	8.040509529258931E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999675132477197	WITHOUT_CLASSIFICATION	3.2486752280296684E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999675132477197	WITHOUT_CLASSIFICATION	3.2486752280296684E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999675132477197	WITHOUT_CLASSIFICATION	3.2486752280296684E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998093204349068	WITHOUT_CLASSIFICATION	1.9067956509325091E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998093204349068	WITHOUT_CLASSIFICATION	1.9067956509325091E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998093204349068	WITHOUT_CLASSIFICATION	1.9067956509325091E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999723359484528	WITHOUT_CLASSIFICATION	2.766405154717878E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999723359484528	WITHOUT_CLASSIFICATION	2.766405154717878E-5	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.999999914195582	WITHOUT_CLASSIFICATION	8.580441811416531E-8	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999906773077538	WITHOUT_CLASSIFICATION	9.322692246243933E-6	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999990930676546	WITHOUT_CLASSIFICATION	9.069323454086151E-7	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999990930676546	WITHOUT_CLASSIFICATION	9.069323454086151E-7	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999990930676546	WITHOUT_CLASSIFICATION	9.069323454086151E-7	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999990930676546	WITHOUT_CLASSIFICATION	9.069323454086151E-7	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999990930676546	WITHOUT_CLASSIFICATION	9.069323454086151E-7	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.99999835870033	WITHOUT_CLASSIFICATION	1.6412996699613977E-6	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999991936767827	WITHOUT_CLASSIFICATION	8.063232172320132E-7	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9998675045029558	WITHOUT_CLASSIFICATION	1.32495497044194E-4	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999981823431141	WITHOUT_CLASSIFICATION	1.8176568859395514E-6	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999991446805644	WITHOUT_CLASSIFICATION	8.553194355492059E-7	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9998775100354106	WITHOUT_CLASSIFICATION	1.2248996458943072E-4	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9993715902789588	WITHOUT_CLASSIFICATION	6.284097210412521E-4	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999974693493721	WITHOUT_CLASSIFICATION	2.530650627992226E-6	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999851028028944	WITHOUT_CLASSIFICATION	1.489719710551205E-5	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.999996150998001	WITHOUT_CLASSIFICATION	3.849001999084438E-6	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999932837007633	WITHOUT_CLASSIFICATION	6.716299236693317E-6	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999991074939683	WITHOUT_CLASSIFICATION	8.92506031728789E-7	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999919656524534	WITHOUT_CLASSIFICATION	8.034347546655004E-6	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999989999257605	WITHOUT_CLASSIFICATION	1.0000742395022342E-6	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999941046499671	WITHOUT_CLASSIFICATION	5.895350032845121E-6	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999599951237529	WITHOUT_CLASSIFICATION	4.000487624719744E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999599951237529	WITHOUT_CLASSIFICATION	4.000487624719744E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999599951237529	WITHOUT_CLASSIFICATION	4.000487624719744E-5	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999988108378892	WITHOUT_CLASSIFICATION	1.189162110820637E-6	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.999998810774354	WITHOUT_CLASSIFICATION	1.189225645932004E-6	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999902323290696	WITHOUT_CLASSIFICATION	9.767670930478328E-6	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999952857762754	WITHOUT_CLASSIFICATION	4.714223724595275E-6	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999972905910861	WITHOUT_CLASSIFICATION	2.7094089140058286E-6	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999994910065513	WITHOUT_CLASSIFICATION	5.089934488186666E-7	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999994481769379	WITHOUT_CLASSIFICATION	5.518230620549505E-7	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9999997152584826	WITHOUT_CLASSIFICATION	2.847415172669165E-7	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999998113500043	WITHOUT_CLASSIFICATION	1.8864999564994224E-7	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999998091557151	WITHOUT_CLASSIFICATION	1.9084428498907215E-7	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.999999750851032	WITHOUT_CLASSIFICATION	2.491489680550204E-7	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999998877809446	WITHOUT_CLASSIFICATION	1.1221905534100236E-7	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.999992518816336	WITHOUT_CLASSIFICATION	7.481183663921736E-6	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9999992107173319	WITHOUT_CLASSIFICATION	7.892826681400025E-7	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.999999534337522	WITHOUT_CLASSIFICATION	4.6566247808666893E-7	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999921167460178	WITHOUT_CLASSIFICATION	7.883253982231943E-6	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999939434881526	WITHOUT_CLASSIFICATION	6.056511847387173E-6	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999996318960915	WITHOUT_CLASSIFICATION	3.681039085703069E-7	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9999988260571334	WITHOUT_CLASSIFICATION	1.1739428665951094E-6	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999997331332146	WITHOUT_CLASSIFICATION	2.6686678545348163E-7	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999980660660377	WITHOUT_CLASSIFICATION	1.9339339623141522E-6	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.999982676967381	WITHOUT_CLASSIFICATION	1.7323032618974094E-5	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9990303851619745	WITHOUT_CLASSIFICATION	9.696148380255684E-4	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999993575860595	WITHOUT_CLASSIFICATION	6.42413940609246E-7	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9999972288503459	WITHOUT_CLASSIFICATION	2.7711496541406896E-6	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9999973369846126	WITHOUT_CLASSIFICATION	2.6630153874950096E-6	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9999991822963628	WITHOUT_CLASSIFICATION	8.177036372819695E-7	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9999966358234557	WITHOUT_CLASSIFICATION	3.3641765443770956E-6	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999849272057018	WITHOUT_CLASSIFICATION	1.5072794298165099E-5	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9999878768124126	WITHOUT_CLASSIFICATION	1.2123187587347261E-5	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9999853331405159	WITHOUT_CLASSIFICATION	1.4666859484109834E-5	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9999833410661441	WITHOUT_CLASSIFICATION	1.6658933855941837E-5	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.9999843295750891	WITHOUT_CLASSIFICATION	1.56704249108595E-5	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9999835092378859	WITHOUT_CLASSIFICATION	1.6490762114053102E-5	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9999823436712298	WITHOUT_CLASSIFICATION	1.765632877018645E-5	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9999825755725955	WITHOUT_CLASSIFICATION	1.742442740449457E-5	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999943669717055	WITHOUT_CLASSIFICATION	5.6330282944627456E-6	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999714203113437	WITHOUT_CLASSIFICATION	2.8579688656261626E-5	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999999999720762	WITHOUT_CLASSIFICATION	2.7923875325144766E-11	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999236038227919	WITHOUT_CLASSIFICATION	7.639617720812432E-5	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.999999949900788	WITHOUT_CLASSIFICATION	5.0099211894776815E-8	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999999961531031	WITHOUT_CLASSIFICATION	3.846896849167985E-9	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999777417046888	WITHOUT_CLASSIFICATION	2.225829531124357E-5	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.999988493908225	WITHOUT_CLASSIFICATION	1.1506091775083184E-5	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999974943221168	WITHOUT_CLASSIFICATION	2.5056778831463706E-6	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999887931523843	WITHOUT_CLASSIFICATION	1.1206847615698904E-5	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9984455024375471	WITHOUT_CLASSIFICATION	0.0015544975624528644	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9984455024375471	WITHOUT_CLASSIFICATION	0.0015544975624528644	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999620940026285	WITHOUT_CLASSIFICATION	3.7905997371455367E-5	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999986104321225	WITHOUT_CLASSIFICATION	1.389567877513068E-6	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999759072799139	WITHOUT_CLASSIFICATION	2.4092720086138943E-5	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.999992342687175	WITHOUT_CLASSIFICATION	7.657312824956651E-6	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999997522970847	WITHOUT_CLASSIFICATION	2.477029153408597E-7	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999973192463715	WITHOUT_CLASSIFICATION	2.680753628496448E-6	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999935724030263	WITHOUT_CLASSIFICATION	6.427596973618942E-6	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999996663218116	WITHOUT_CLASSIFICATION	3.336781883082352E-7	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.999999927116439	WITHOUT_CLASSIFICATION	7.28835609859595E-8	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999994254629851	WITHOUT_CLASSIFICATION	5.745370148219544E-7	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999986770358817	WITHOUT_CLASSIFICATION	1.3229641182843677E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999986770358817	WITHOUT_CLASSIFICATION	1.3229641182843677E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999986770358817	WITHOUT_CLASSIFICATION	1.3229641182843677E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999986770358817	WITHOUT_CLASSIFICATION	1.3229641182843677E-6	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9999981089656635	WITHOUT_CLASSIFICATION	1.8910343365028464E-6	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9999882890959676	WITHOUT_CLASSIFICATION	1.1710904032301606E-5	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9999903339401558	WITHOUT_CLASSIFICATION	9.666059844210876E-6	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9999894552095827	WITHOUT_CLASSIFICATION	1.05447904173366E-5	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9998889268314636	WITHOUT_CLASSIFICATION	1.1107316853645504E-4	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999996781814668	WITHOUT_CLASSIFICATION	3.218185330505295E-7	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999955634527363	WITHOUT_CLASSIFICATION	4.436547263741345E-6	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999990821129529	WITHOUT_CLASSIFICATION	9.178870471805382E-7	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999990821129529	WITHOUT_CLASSIFICATION	9.178870471805382E-7	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999979345277759	WITHOUT_CLASSIFICATION	2.0654722240845894E-6	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999977269299636	WITHOUT_CLASSIFICATION	2.273070036334801E-6	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999991698563765	WITHOUT_CLASSIFICATION	8.301436234571389E-7	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999986428104	WITHOUT_CLASSIFICATION	1.3571895101885606E-9	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999986428104	WITHOUT_CLASSIFICATION	1.3571895101885606E-9	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999999969244409	WITHOUT_CLASSIFICATION	3.0755591935663768E-9	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999591420052794	WITHOUT_CLASSIFICATION	4.0857994720723006E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999591420052794	WITHOUT_CLASSIFICATION	4.0857994720723006E-5	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999994039577246	WITHOUT_CLASSIFICATION	5.960422753705845E-7	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999944264791393	WITHOUT_CLASSIFICATION	5.573520860749505E-6	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999975991021993	WITHOUT_CLASSIFICATION	2.4008978006782983E-6	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999995850486595	WITHOUT_CLASSIFICATION	4.149513404938825E-7	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999870313411119	WITHOUT_CLASSIFICATION	1.2968658888147454E-5	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999874989777	WITHOUT_CLASSIFICATION	1.2501022247316013E-8	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999997668557579	WITHOUT_CLASSIFICATION	2.331442421331653E-7	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.999960010884001	WITHOUT_CLASSIFICATION	3.998911599894019E-5	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999995018526373	WITHOUT_CLASSIFICATION	4.981473626173356E-7	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999978818271291	WITHOUT_CLASSIFICATION	2.118172870943523E-6	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.999991125320528	WITHOUT_CLASSIFICATION	8.87467947192981E-6	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999969439300211	WITHOUT_CLASSIFICATION	3.0560699788378863E-6	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.999999581282074	WITHOUT_CLASSIFICATION	4.18717925932507E-7	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999990759598562	WITHOUT_CLASSIFICATION	9.240401438471305E-7	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999563245552973	WITHOUT_CLASSIFICATION	4.3675444702845455E-5	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999997958526745	WITHOUT_CLASSIFICATION	2.041473254623746E-7	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9999951106890848	WITHOUT_CLASSIFICATION	4.889310915179322E-6	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9999973472164899	WITHOUT_CLASSIFICATION	2.652783510065486E-6	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999992773896178	WITHOUT_CLASSIFICATION	7.226103821416294E-7	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999999136043086	WITHOUT_CLASSIFICATION	8.639569142104457E-8	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999996409122972	WITHOUT_CLASSIFICATION	3.590877027682019E-7	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9997311852620397	WITHOUT_CLASSIFICATION	2.6881473796023825E-4	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9994387769674823	WITHOUT_CLASSIFICATION	5.612230325176826E-4	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999996025349358	WITHOUT_CLASSIFICATION	3.9746506425364376E-7	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999999982790718	WITHOUT_CLASSIFICATION	1.7209281068968353E-9	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999993744569032	WITHOUT_CLASSIFICATION	6.25543096724466E-7	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999972609487492	WITHOUT_CLASSIFICATION	2.739051250935282E-6	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999998179706804	WITHOUT_CLASSIFICATION	1.8202931963996128E-7	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999593825003	WITHOUT_CLASSIFICATION	4.0617499711163975E-8	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999269016442898	WITHOUT_CLASSIFICATION	7.309835571021959E-5	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9999924360152993	WITHOUT_CLASSIFICATION	7.563984700652298E-6	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999991671775582	WITHOUT_CLASSIFICATION	8.328224417433602E-7	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9956536916005003	WITHOUT_CLASSIFICATION	0.004346308399499674	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999951961512636	WITHOUT_CLASSIFICATION	4.803848736308369E-6	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999967590125768	WITHOUT_CLASSIFICATION	3.240987423267103E-6	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999939397886947	WITHOUT_CLASSIFICATION	6.0602113053283284E-6	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999922433716416	WITHOUT_CLASSIFICATION	7.756628358454358E-6	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999992043611765	WITHOUT_CLASSIFICATION	7.956388233992045E-7	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999736379246279	WITHOUT_CLASSIFICATION	2.6362075372191537E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999939397886947	WITHOUT_CLASSIFICATION	6.0602113053283284E-6	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999922433716416	WITHOUT_CLASSIFICATION	7.756628358454358E-6	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999871170763187	WITHOUT_CLASSIFICATION	1.288292368120307E-5	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999993141134376	WITHOUT_CLASSIFICATION	6.858865624746022E-7	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999993141134376	WITHOUT_CLASSIFICATION	6.858865624746022E-7	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9997591862817041	WITHOUT_CLASSIFICATION	2.408137182957983E-4	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999998916796	WITHOUT_CLASSIFICATION	1.0832042164721943E-10	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999975840990787	WITHOUT_CLASSIFICATION	2.415900921307926E-6	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999980811010293	WITHOUT_CLASSIFICATION	1.9188989706806632E-6	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.99993783568043	WITHOUT_CLASSIFICATION	6.216431956993354E-5	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.999998928843463	WITHOUT_CLASSIFICATION	1.0711565369750994E-6	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999634676559549	WITHOUT_CLASSIFICATION	3.653234404508057E-5	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999650270899847	WITHOUT_CLASSIFICATION	3.497291001536054E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9997842827213402	WITHOUT_CLASSIFICATION	2.157172786596144E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999934793604119	WITHOUT_CLASSIFICATION	6.520639588074878E-6	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999967204457173	WITHOUT_CLASSIFICATION	3.279554282601424E-6	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999987564004493	WITHOUT_CLASSIFICATION	1.2435995506315337E-6	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999998884336257	WITHOUT_CLASSIFICATION	1.1156637414494468E-7	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999375756107	WITHOUT_CLASSIFICATION	6.242438936277176E-8	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999375756107	WITHOUT_CLASSIFICATION	6.242438936277176E-8	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999874358548589	WITHOUT_CLASSIFICATION	1.2564145141018267E-5	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999874358548589	WITHOUT_CLASSIFICATION	1.2564145141018267E-5	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999992117123984	WITHOUT_CLASSIFICATION	7.882876015654186E-7	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999981966046639	WITHOUT_CLASSIFICATION	1.8033953360243983E-6	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.999988519943325	WITHOUT_CLASSIFICATION	1.1480056674865174E-5	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999994358489831	WITHOUT_CLASSIFICATION	5.641510168934461E-7	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.999999253130313	WITHOUT_CLASSIFICATION	7.468696870623966E-7	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999966760978094	WITHOUT_CLASSIFICATION	3.323902190599588E-6	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999975840990787	WITHOUT_CLASSIFICATION	2.415900921307926E-6	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999980811010293	WITHOUT_CLASSIFICATION	1.9188989706806632E-6	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9997842827213402	WITHOUT_CLASSIFICATION	2.157172786596144E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999934793604119	WITHOUT_CLASSIFICATION	6.520639588074878E-6	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999993741410784	WITHOUT_CLASSIFICATION	6.258589215524463E-7	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999632745901735	WITHOUT_CLASSIFICATION	3.6725409826447435E-5	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999928098557651	WITHOUT_CLASSIFICATION	7.190144234789671E-6	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999997048325437	WITHOUT_CLASSIFICATION	2.951674562160467E-7	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999994199469803	WITHOUT_CLASSIFICATION	5.800530196158808E-7	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999979012506587	WITHOUT_CLASSIFICATION	2.0987493412972993E-6	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999997576563223	WITHOUT_CLASSIFICATION	2.423436776867862E-7	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999958645125852	WITHOUT_CLASSIFICATION	4.1354874148363814E-6	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999994405383539	WITHOUT_CLASSIFICATION	5.594616462153924E-7	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999694917096257	WITHOUT_CLASSIFICATION	3.0508290374350097E-5	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999997977681785	WITHOUT_CLASSIFICATION	2.0223182153401843E-7	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999960408401022	WITHOUT_CLASSIFICATION	3.959159897880317E-6	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.999967514606655	WITHOUT_CLASSIFICATION	3.248539334500425E-5	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999858394347109	WITHOUT_CLASSIFICATION	1.4160565289169681E-5	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999996940119753	WITHOUT_CLASSIFICATION	3.0598802464111377E-7	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999009824635218	WITHOUT_CLASSIFICATION	9.901753647825127E-5	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999738352280167	WITHOUT_CLASSIFICATION	2.6164771983218906E-5	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999988984309539	WITHOUT_CLASSIFICATION	1.1015690460640968E-6	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.999999576220184	WITHOUT_CLASSIFICATION	4.237798159356729E-7	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999980475052155	WITHOUT_CLASSIFICATION	1.9524947845773767E-6	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999973303085021	WITHOUT_CLASSIFICATION	2.669691497897727E-6	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999973303085021	WITHOUT_CLASSIFICATION	2.669691497897727E-6	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.999999332405733	WITHOUT_CLASSIFICATION	6.675942669152436E-7	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.999992994897904	WITHOUT_CLASSIFICATION	7.005102095846654E-6	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999999400181697	WITHOUT_CLASSIFICATION	5.99818302711989E-8	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999961157975478	WITHOUT_CLASSIFICATION	3.884202452302292E-6	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999961157975478	WITHOUT_CLASSIFICATION	3.884202452302292E-6	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999928098557651	WITHOUT_CLASSIFICATION	7.190144234789671E-6	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999889173980274	WITHOUT_CLASSIFICATION	1.1082601972479598E-5	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999971702048448	WITHOUT_CLASSIFICATION	2.8297951551041693E-6	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.999999376842753	WITHOUT_CLASSIFICATION	6.231572471049417E-7	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999993064563024	WITHOUT_CLASSIFICATION	6.935436976409131E-7	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999986914145045	WITHOUT_CLASSIFICATION	1.3085854955104615E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999716194556294	WITHOUT_CLASSIFICATION	2.8380544370613195E-5	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999930943742599	WITHOUT_CLASSIFICATION	6.905625740171284E-6	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.999995841784173	WITHOUT_CLASSIFICATION	4.158215826990122E-6	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999973459490334	WITHOUT_CLASSIFICATION	2.6540509664749343E-6	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999996681641394	WITHOUT_CLASSIFICATION	3.318358605793822E-7	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999782449796808	WITHOUT_CLASSIFICATION	2.1755020319168515E-5	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999998415917271	WITHOUT_CLASSIFICATION	1.5840827299845187E-7	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999921886883101	WITHOUT_CLASSIFICATION	7.811311689876019E-6	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999989977502753	WITHOUT_CLASSIFICATION	1.0022497247417415E-6	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9999991543254453	WITHOUT_CLASSIFICATION	8.456745547115747E-7	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999781111118183	WITHOUT_CLASSIFICATION	2.1888888181602868E-5	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.999990183331112	WITHOUT_CLASSIFICATION	9.816668888087114E-6	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999999808273677	WITHOUT_CLASSIFICATION	1.917263217021225E-8	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999988897765774	WITHOUT_CLASSIFICATION	1.1102234226666412E-6	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999894915269	WITHOUT_CLASSIFICATION	1.0508473049318443E-8	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.999996976890806	WITHOUT_CLASSIFICATION	3.0231091939937553E-6	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999983422224702	WITHOUT_CLASSIFICATION	1.6577775298474185E-6	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999887276752601	WITHOUT_CLASSIFICATION	1.1272324739747147E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999997666749547	WITHOUT_CLASSIFICATION	2.3332504517465108E-7	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999996944761029	WITHOUT_CLASSIFICATION	3.055238970378748E-7	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.999999315416249	WITHOUT_CLASSIFICATION	6.845837510406793E-7	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999951310400277	WITHOUT_CLASSIFICATION	4.868959972349612E-6	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.999985210117174	WITHOUT_CLASSIFICATION	1.4789882825955806E-5	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999896065226586	WITHOUT_CLASSIFICATION	1.0393477341443548E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999353249763	WITHOUT_CLASSIFICATION	6.467502370705965E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999353249763	WITHOUT_CLASSIFICATION	6.467502370705965E-8	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999997768637228	WITHOUT_CLASSIFICATION	2.2313627729808968E-7	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999994004011649	WITHOUT_CLASSIFICATION	5.995988350811464E-7	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999994004011649	WITHOUT_CLASSIFICATION	5.995988350811464E-7	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999594302516	WITHOUT_CLASSIFICATION	4.056974842058835E-8	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999594302516	WITHOUT_CLASSIFICATION	4.056974842058835E-8	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999985829902749	WITHOUT_CLASSIFICATION	1.4170097251628783E-6	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999993576896266	WITHOUT_CLASSIFICATION	6.423103733887671E-7	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999996438726295	WITHOUT_CLASSIFICATION	3.561273704754207E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999988290812877	WITHOUT_CLASSIFICATION	1.1709187122822451E-6	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999998703762334	WITHOUT_CLASSIFICATION	1.296237666502609E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999370538847031	WITHOUT_CLASSIFICATION	6.29461152969791E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999370538847031	WITHOUT_CLASSIFICATION	6.29461152969791E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999997666749547	WITHOUT_CLASSIFICATION	2.3332504517465108E-7	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999997666749547	WITHOUT_CLASSIFICATION	2.3332504517465108E-7	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999997666749547	WITHOUT_CLASSIFICATION	2.3332504517465108E-7	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999996944761029	WITHOUT_CLASSIFICATION	3.055238970378748E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999353249763	WITHOUT_CLASSIFICATION	6.467502370705965E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999353249763	WITHOUT_CLASSIFICATION	6.467502370705965E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999353249763	WITHOUT_CLASSIFICATION	6.467502370705965E-8	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999985829902749	WITHOUT_CLASSIFICATION	1.4170097251628783E-6	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999985829902749	WITHOUT_CLASSIFICATION	1.4170097251628783E-6	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999985829902749	WITHOUT_CLASSIFICATION	1.4170097251628783E-6	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999988290812877	WITHOUT_CLASSIFICATION	1.1709187122822451E-6	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999988290812877	WITHOUT_CLASSIFICATION	1.1709187122822451E-6	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.999998920740369	WITHOUT_CLASSIFICATION	1.0792596309662055E-6	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999998532022057	WITHOUT_CLASSIFICATION	1.467977941858165E-7	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999999914300763	WITHOUT_CLASSIFICATION	8.569923703718639E-8	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9774477430589171	WITHOUT_CLASSIFICATION	0.022552256941082892	IMPLEMENTATION
// no digits, error	WITHOUT_CLASSIFICATION	0.999944362713265	WITHOUT_CLASSIFICATION	5.563728673507086E-5	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.999991205481882	WITHOUT_CLASSIFICATION	8.79451811801237E-6	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.999991205481882	WITHOUT_CLASSIFICATION	8.79451811801237E-6	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999972935740379	WITHOUT_CLASSIFICATION	2.706425962069892E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999716194556294	WITHOUT_CLASSIFICATION	2.8380544370613195E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999716194556294	WITHOUT_CLASSIFICATION	2.8380544370613195E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999716194556294	WITHOUT_CLASSIFICATION	2.8380544370613195E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999716194556294	WITHOUT_CLASSIFICATION	2.8380544370613195E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999716194556294	WITHOUT_CLASSIFICATION	2.8380544370613195E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999988595061584	WITHOUT_CLASSIFICATION	1.1404938416132094E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999988595061584	WITHOUT_CLASSIFICATION	1.1404938416132094E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999988595061584	WITHOUT_CLASSIFICATION	1.1404938416132094E-6	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999996748224087	WITHOUT_CLASSIFICATION	3.2517759130405873E-7	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999768290587897	WITHOUT_CLASSIFICATION	2.317094121031056E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999996944761029	WITHOUT_CLASSIFICATION	3.055238970378748E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999985829902749	WITHOUT_CLASSIFICATION	1.4170097251628783E-6	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999985829902749	WITHOUT_CLASSIFICATION	1.4170097251628783E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999716194556294	WITHOUT_CLASSIFICATION	2.8380544370613195E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999716194556294	WITHOUT_CLASSIFICATION	2.8380544370613195E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999988595061584	WITHOUT_CLASSIFICATION	1.1404938416132094E-6	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999972935740379	WITHOUT_CLASSIFICATION	2.706425962069892E-6	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999989651566537	WITHOUT_CLASSIFICATION	1.0348433463354855E-6	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.9999988669886597	WITHOUT_CLASSIFICATION	1.1330113402855279E-6	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999995060483446	WITHOUT_CLASSIFICATION	4.939516553585782E-7	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999993244678156	WITHOUT_CLASSIFICATION	6.755321844955836E-7	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999986775076498	WITHOUT_CLASSIFICATION	1.3224923501160116E-6	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999989399387968	WITHOUT_CLASSIFICATION	1.0600612031231624E-6	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999959141150723	WITHOUT_CLASSIFICATION	4.0858849277076474E-5	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999978360896205	WITHOUT_CLASSIFICATION	2.163910379595889E-6	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999960612996669	WITHOUT_CLASSIFICATION	3.93870033313239E-6	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999998140788185	WITHOUT_CLASSIFICATION	1.859211813912359E-7	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999443993754734	WITHOUT_CLASSIFICATION	5.560062452658535E-5	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999911423479168	WITHOUT_CLASSIFICATION	8.857652083183543E-6	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999978863233435	WITHOUT_CLASSIFICATION	2.113676656496071E-6	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999970313904578	WITHOUT_CLASSIFICATION	2.9686095421416277E-6	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999998438272444	WITHOUT_CLASSIFICATION	1.561727555985402E-7	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999832651992605	WITHOUT_CLASSIFICATION	1.673480073940931E-5	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999912673997045	WITHOUT_CLASSIFICATION	8.732600295578916E-6	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999981586059034	WITHOUT_CLASSIFICATION	1.8413940967597759E-6	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.99983943103642	WITHOUT_CLASSIFICATION	1.6056896357993086E-4	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999996403936049	WITHOUT_CLASSIFICATION	3.596063950676186E-7	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999991340622144	WITHOUT_CLASSIFICATION	8.659377856324073E-7	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999856186961893	WITHOUT_CLASSIFICATION	1.4381303810649784E-5	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999988159105134	WITHOUT_CLASSIFICATION	1.184089486668536E-6	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999986189397522	WITHOUT_CLASSIFICATION	1.3810602478196891E-6	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999996086570574	WITHOUT_CLASSIFICATION	3.913429425296954E-7	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999990002088173	WITHOUT_CLASSIFICATION	9.997911827019584E-7	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9999993174689632	WITHOUT_CLASSIFICATION	6.825310366841959E-7	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.999999499331936	WITHOUT_CLASSIFICATION	5.006680640292075E-7	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999999445433723	WITHOUT_CLASSIFICATION	5.5456627742400756E-8	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999960333285923	WITHOUT_CLASSIFICATION	3.966671407731784E-6	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999999674760947	WITHOUT_CLASSIFICATION	3.252390529733281E-8	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999998956987356	WITHOUT_CLASSIFICATION	1.0430126449507295E-7	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999998894802349	WITHOUT_CLASSIFICATION	1.1051976515425629E-7	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999368830976	WITHOUT_CLASSIFICATION	6.311690243054446E-8	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999989651566537	WITHOUT_CLASSIFICATION	1.0348433463354855E-6	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999730623995644	WITHOUT_CLASSIFICATION	2.6937600435572572E-5	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999749235578519	WITHOUT_CLASSIFICATION	2.507644214813394E-5	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999998159149933	WITHOUT_CLASSIFICATION	1.8408500670109758E-7	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999964380779717	WITHOUT_CLASSIFICATION	3.5619220283957194E-6	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999964380779717	WITHOUT_CLASSIFICATION	3.5619220283957194E-6	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9999937966849056	WITHOUT_CLASSIFICATION	6.203315094294295E-6	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9999937966849056	WITHOUT_CLASSIFICATION	6.203315094294295E-6	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999999882901387	WITHOUT_CLASSIFICATION	1.17098612707945E-8	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999996295831264	WITHOUT_CLASSIFICATION	3.7041687371182964E-7	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999992211024676	WITHOUT_CLASSIFICATION	7.78897532377221E-7	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999964631073541	WITHOUT_CLASSIFICATION	3.536892645897316E-6	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999999213092126	WITHOUT_CLASSIFICATION	7.869078741036426E-8	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999991863227895	WITHOUT_CLASSIFICATION	8.136772103806685E-7	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999999330292354	WITHOUT_CLASSIFICATION	6.697076456351709E-8	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999965784043241	WITHOUT_CLASSIFICATION	3.4215956760183996E-6	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999990253597144	WITHOUT_CLASSIFICATION	9.746402856393018E-7	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.999999991231359	WITHOUT_CLASSIFICATION	8.768641067553321E-9	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999716136796	WITHOUT_CLASSIFICATION	2.838632032839189E-8	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999996144545592	WITHOUT_CLASSIFICATION	3.855454407602916E-7	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999996144545592	WITHOUT_CLASSIFICATION	3.855454407602916E-7	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999999958168049	WITHOUT_CLASSIFICATION	4.183195122665647E-9	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999999930896554	WITHOUT_CLASSIFICATION	6.910344568851399E-9	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999969528525693	WITHOUT_CLASSIFICATION	3.047147430735159E-6	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999969528525693	WITHOUT_CLASSIFICATION	3.047147430735159E-6	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999998269846215	WITHOUT_CLASSIFICATION	1.7301537851874107E-7	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999962347527	WITHOUT_CLASSIFICATION	3.765247394466003E-9	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.999997235410175	WITHOUT_CLASSIFICATION	2.7645898249434313E-6	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999998193597652	WITHOUT_CLASSIFICATION	1.8064023476986082E-7	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999991528141461	WITHOUT_CLASSIFICATION	8.471858539599625E-7	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999928815733176	WITHOUT_CLASSIFICATION	7.118426682411235E-6	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9999924523612086	WITHOUT_CLASSIFICATION	7.547638791408093E-6	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999999474985547	WITHOUT_CLASSIFICATION	5.2501445282388186E-8	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999999799772756	WITHOUT_CLASSIFICATION	2.0022724398638704E-8	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9999970522858403	WITHOUT_CLASSIFICATION	2.9477141596179465E-6	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.999976853232048	WITHOUT_CLASSIFICATION	2.3146767952062857E-5	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999905134110311	WITHOUT_CLASSIFICATION	9.486588968931472E-6	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999948960166818	WITHOUT_CLASSIFICATION	5.10398331819997E-6	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999953753394946	WITHOUT_CLASSIFICATION	4.624660505423939E-6	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999977630393	WITHOUT_CLASSIFICATION	2.2369607249944975E-9	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999998141101765	WITHOUT_CLASSIFICATION	1.8588982345026445E-7	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999986835484609	WITHOUT_CLASSIFICATION	1.3164515391417938E-6	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999978547099109	WITHOUT_CLASSIFICATION	2.145290089090001E-6	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999999494979532	WITHOUT_CLASSIFICATION	5.0502046768582753E-8	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999888737457	WITHOUT_CLASSIFICATION	1.1126254264298198E-8	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9282112008089626	IMPLEMENTATION	0.07178879919103741	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999992321736775	WITHOUT_CLASSIFICATION	7.678263224618311E-7	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999998174338127	WITHOUT_CLASSIFICATION	1.8256618720601134E-7	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999880485631094	WITHOUT_CLASSIFICATION	1.1951436890651047E-5	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999998617648463	WITHOUT_CLASSIFICATION	1.3823515366771906E-7	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999946635261693	WITHOUT_CLASSIFICATION	5.33647383077211E-6	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9999991811581441	WITHOUT_CLASSIFICATION	8.188418558888316E-7	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999957733162937	WITHOUT_CLASSIFICATION	4.226683706170372E-6	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999999374261161	WITHOUT_CLASSIFICATION	6.25738838657787E-8	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.999999698526553	WITHOUT_CLASSIFICATION	3.014734470271705E-7	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999980050553642	WITHOUT_CLASSIFICATION	1.9949446357752655E-6	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999982654304637	WITHOUT_CLASSIFICATION	1.7345695364163958E-6	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999999107350177	WITHOUT_CLASSIFICATION	8.92649823913354E-8	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999994657840983	WITHOUT_CLASSIFICATION	5.3421590176849E-7	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999994657840983	WITHOUT_CLASSIFICATION	5.3421590176849E-7	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999985225048681	WITHOUT_CLASSIFICATION	1.4774951319124985E-6	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999833675621244	WITHOUT_CLASSIFICATION	1.6632437875585738E-5	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999999893836883	WITHOUT_CLASSIFICATION	1.0616311668703721E-8	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9999913534421054	WITHOUT_CLASSIFICATION	8.646557894532958E-6	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9999699606310841	WITHOUT_CLASSIFICATION	3.003936891583861E-5	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999981668603565	WITHOUT_CLASSIFICATION	1.8331396434677119E-6	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999921397734508	WITHOUT_CLASSIFICATION	7.86022654920315E-6	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999979988630819	WITHOUT_CLASSIFICATION	2.001136918019031E-6	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999992388996868	WITHOUT_CLASSIFICATION	7.611003133343167E-7	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9999793514698168	WITHOUT_CLASSIFICATION	2.06485301831928E-5	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999999647075374	WITHOUT_CLASSIFICATION	3.529246257981316E-8	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999772480591907	WITHOUT_CLASSIFICATION	2.2751940809217203E-5	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999986624449192	WITHOUT_CLASSIFICATION	1.3375550808025097E-6	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999965578263216	WITHOUT_CLASSIFICATION	3.4421736784776574E-6	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999995057572193	WITHOUT_CLASSIFICATION	4.942427807547626E-7	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999993697484969	WITHOUT_CLASSIFICATION	6.302515030708636E-7	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.999999870609319	WITHOUT_CLASSIFICATION	1.293906810091035E-7	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999995157824899	WITHOUT_CLASSIFICATION	4.842175100739293E-7	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9997570249597311	WITHOUT_CLASSIFICATION	2.4297504026888334E-4	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999782070618681	WITHOUT_CLASSIFICATION	2.1792938131833567E-5	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.999999942360659	WITHOUT_CLASSIFICATION	5.763934087066863E-8	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999724879765887	WITHOUT_CLASSIFICATION	2.7512023411311752E-5	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999740873258115	WITHOUT_CLASSIFICATION	2.5912674188395414E-5	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999922494384995	WITHOUT_CLASSIFICATION	7.750561500481514E-6	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999896181357786	WITHOUT_CLASSIFICATION	1.038186422138748E-5	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.999991462904915	WITHOUT_CLASSIFICATION	8.537095085057285E-6	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999567995077	WITHOUT_CLASSIFICATION	4.320049227479612E-8	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999998842431695	WITHOUT_CLASSIFICATION	1.1575683045745894E-7	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9999940049696702	WITHOUT_CLASSIFICATION	5.995030329825383E-6	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.999999774315282	WITHOUT_CLASSIFICATION	2.2568471813645662E-7	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999994850825008	WITHOUT_CLASSIFICATION	5.14917499258118E-7	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999999471372653	WITHOUT_CLASSIFICATION	5.286273475241632E-8	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999877486553727	WITHOUT_CLASSIFICATION	1.2251344627437504E-5	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999995068402843	WITHOUT_CLASSIFICATION	4.931597158384162E-7	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999971978218473	WITHOUT_CLASSIFICATION	2.8021781527209906E-6	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999998449926643	WITHOUT_CLASSIFICATION	1.5500733586513002E-7	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9998729342022034	WITHOUT_CLASSIFICATION	1.2706579779670784E-4	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9999991593422567	WITHOUT_CLASSIFICATION	8.406577433331556E-7	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9999971179187472	WITHOUT_CLASSIFICATION	2.882081252826537E-6	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999989362444229	WITHOUT_CLASSIFICATION	1.063755577162394E-6	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999976806500245	WITHOUT_CLASSIFICATION	2.319349975439592E-6	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999972064799073	WITHOUT_CLASSIFICATION	2.793520092743364E-6	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999972064799073	WITHOUT_CLASSIFICATION	2.793520092743364E-6	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.999997617196969	WITHOUT_CLASSIFICATION	2.382803031008774E-6	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999955986485621	WITHOUT_CLASSIFICATION	4.401351437893129E-6	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999931715090674	WITHOUT_CLASSIFICATION	6.828490932560541E-6	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999871436439944	WITHOUT_CLASSIFICATION	1.2856356005511207E-5	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999967807291019	WITHOUT_CLASSIFICATION	3.219270898059614E-6	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999998033778745	WITHOUT_CLASSIFICATION	1.96622125428313E-7	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999864953079	WITHOUT_CLASSIFICATION	1.3504692129552786E-8	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999412533770919	WITHOUT_CLASSIFICATION	5.874662290805667E-5	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999999217830415	WITHOUT_CLASSIFICATION	7.82169584231146E-8	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.99999950957659	WITHOUT_CLASSIFICATION	4.904234101239901E-7	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.999997304472468	WITHOUT_CLASSIFICATION	2.6955275319510057E-6	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999998706056039	WITHOUT_CLASSIFICATION	1.2939439602503883E-7	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.999868388015583	WITHOUT_CLASSIFICATION	1.3161198441696698E-4	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999775547834843	WITHOUT_CLASSIFICATION	2.244521651568698E-5	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999996610525506	WITHOUT_CLASSIFICATION	3.389474494395011E-7	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9999428377611447	WITHOUT_CLASSIFICATION	5.7162238855375114E-5	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999974481257429	WITHOUT_CLASSIFICATION	2.5518742572018596E-6	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999982571938729	WITHOUT_CLASSIFICATION	1.7428061271591212E-6	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999862979539591	WITHOUT_CLASSIFICATION	1.3702046040866124E-5	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9932146871575145	WITHOUT_CLASSIFICATION	0.006785312842485514	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999995979149926	WITHOUT_CLASSIFICATION	4.0208500730262694E-7	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999862664145143	WITHOUT_CLASSIFICATION	1.3733585485744939E-5	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999993009706	WITHOUT_CLASSIFICATION	6.990294342369037E-10	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999929558931197	WITHOUT_CLASSIFICATION	7.044106880316572E-6	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999819881719	WITHOUT_CLASSIFICATION	1.8011828137916612E-8	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9997307688873368	WITHOUT_CLASSIFICATION	2.6923111266315147E-4	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999999098704313	WITHOUT_CLASSIFICATION	9.012956876697255E-8	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999978803881314	WITHOUT_CLASSIFICATION	2.119611868486359E-6	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999982583709727	WITHOUT_CLASSIFICATION	1.7416290272304964E-6	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999993067371616	WITHOUT_CLASSIFICATION	6.932628383911064E-7	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999984921695066	WITHOUT_CLASSIFICATION	1.50783049341771E-6	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999997254711177	WITHOUT_CLASSIFICATION	2.745288823463098E-7	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999993067371616	WITHOUT_CLASSIFICATION	6.932628383911064E-7	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999987722131688	WITHOUT_CLASSIFICATION	1.2277868311867675E-6	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999999982790718	WITHOUT_CLASSIFICATION	1.7209281068968353E-9	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9987483808339914	WITHOUT_CLASSIFICATION	0.001251619166008625	IMPLEMENTATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9622407327425538	IMPLEMENTATION	0.03775926725744617	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999987556491354	WITHOUT_CLASSIFICATION	1.2443508645661917E-6	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999990930676546	WITHOUT_CLASSIFICATION	9.069323454086151E-7	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999996327603666	WITHOUT_CLASSIFICATION	3.672396334462755E-7	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999999203656026	WITHOUT_CLASSIFICATION	7.963439744584056E-8	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999998916796	WITHOUT_CLASSIFICATION	1.0832042164721943E-10	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999888737457	WITHOUT_CLASSIFICATION	1.1126254264298198E-8	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999999914300763	WITHOUT_CLASSIFICATION	8.569923703718639E-8	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999998346642887	WITHOUT_CLASSIFICATION	1.6533571135863846E-7	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999944497065631	WITHOUT_CLASSIFICATION	5.550293436741171E-6	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999998907311025	WITHOUT_CLASSIFICATION	1.0926889747923501E-7	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999791629464445	WITHOUT_CLASSIFICATION	2.0837053555520052E-5	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9999994364109979	WITHOUT_CLASSIFICATION	5.635890021090469E-7	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9925954767213794	WITHOUT_CLASSIFICATION	0.007404523278620683	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999979887966549	WITHOUT_CLASSIFICATION	2.01120334497369E-6	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999999896922953	WITHOUT_CLASSIFICATION	1.0307704760329385E-8	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999999973630402	WITHOUT_CLASSIFICATION	2.63695968889763E-9	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9999864804528655	WITHOUT_CLASSIFICATION	1.3519547134421867E-5	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9999837422154335	WITHOUT_CLASSIFICATION	1.6257784566552066E-5	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9999858609814027	WITHOUT_CLASSIFICATION	1.413901859733318E-5	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999991670231835	WITHOUT_CLASSIFICATION	8.329768165757331E-7	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9925179665641989	WITHOUT_CLASSIFICATION	0.0074820334358010505	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999960942305725	WITHOUT_CLASSIFICATION	3.9057694275039635E-6	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999953238374103	WITHOUT_CLASSIFICATION	4.676162589693806E-6	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999993926347233	WITHOUT_CLASSIFICATION	6.073652767444418E-7	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999988668806913	WITHOUT_CLASSIFICATION	1.1331193086969232E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999943751233688	WITHOUT_CLASSIFICATION	5.62487663126754E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999943751233688	WITHOUT_CLASSIFICATION	5.62487663126754E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999981659111552	WITHOUT_CLASSIFICATION	1.8340888448200163E-6	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999997295399965	WITHOUT_CLASSIFICATION	2.7046000353818945E-7	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.999998147535657	WITHOUT_CLASSIFICATION	1.852464342974285E-6	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8803402668269843	IMPLEMENTATION	0.11965973317301566	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8803402668269843	IMPLEMENTATION	0.11965973317301566	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8803402668269843	IMPLEMENTATION	0.11965973317301566	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8803402668269843	IMPLEMENTATION	0.11965973317301566	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999883213364329	WITHOUT_CLASSIFICATION	1.167866356713031E-5	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9997390571333433	WITHOUT_CLASSIFICATION	2.609428666566627E-4	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9999985153268035	WITHOUT_CLASSIFICATION	1.4846731964482004E-6	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.999934170115615	WITHOUT_CLASSIFICATION	6.582988438502936E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999939930269294	WITHOUT_CLASSIFICATION	6.0069730706393745E-6	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.999988606581816	WITHOUT_CLASSIFICATION	1.1393418184036018E-5	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999330349967128	WITHOUT_CLASSIFICATION	6.696500328724285E-5	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999330349967128	WITHOUT_CLASSIFICATION	6.696500328724285E-5	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999982541400456	WITHOUT_CLASSIFICATION	1.7458599543839449E-6	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9999914560369084	WITHOUT_CLASSIFICATION	8.54396309163138E-6	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999998812011337	WITHOUT_CLASSIFICATION	1.1879886631601987E-7	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999997709948688	WITHOUT_CLASSIFICATION	2.2900513132493555E-7	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999996690240202	WITHOUT_CLASSIFICATION	3.3097597987022655E-7	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999986423288748	WITHOUT_CLASSIFICATION	1.3576711251664472E-6	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999996509030548	WITHOUT_CLASSIFICATION	3.4909694520461574E-7	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.999997891664466	WITHOUT_CLASSIFICATION	2.1083355339394127E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999856278976896	WITHOUT_CLASSIFICATION	1.4372102310320925E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999856278976896	WITHOUT_CLASSIFICATION	1.4372102310320925E-5	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999997254711177	WITHOUT_CLASSIFICATION	2.745288823463098E-7	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9999950189952567	WITHOUT_CLASSIFICATION	4.981004743284883E-6	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9999952514194543	WITHOUT_CLASSIFICATION	4.748580545716879E-6	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999973813564897	WITHOUT_CLASSIFICATION	2.6186435101262315E-6	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999998805911248	WITHOUT_CLASSIFICATION	1.194088751942753E-7	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9999885951518223	WITHOUT_CLASSIFICATION	1.1404848177700712E-5	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999975355673413	WITHOUT_CLASSIFICATION	2.464432658727447E-6	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999956675763036	WITHOUT_CLASSIFICATION	4.332423696363241E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999989573046499	WITHOUT_CLASSIFICATION	1.0426953500648885E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999989573046499	WITHOUT_CLASSIFICATION	1.0426953500648885E-6	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999994005094058	WITHOUT_CLASSIFICATION	5.994905942153678E-7	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999994997591639	WITHOUT_CLASSIFICATION	5.002408360183747E-7	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999990335637156	WITHOUT_CLASSIFICATION	9.664362844972792E-7	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999980683262798	WITHOUT_CLASSIFICATION	1.931673720119594E-6	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999854891532175	WITHOUT_CLASSIFICATION	1.4510846782455409E-5	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9999885218117074	WITHOUT_CLASSIFICATION	1.147818829247287E-5	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999994707903105	WITHOUT_CLASSIFICATION	5.292096894685623E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999994652754012	WITHOUT_CLASSIFICATION	5.347245989128771E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999994652754012	WITHOUT_CLASSIFICATION	5.347245989128771E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999994652754012	WITHOUT_CLASSIFICATION	5.347245989128771E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999994652754012	WITHOUT_CLASSIFICATION	5.347245989128771E-7	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999890012786767	WITHOUT_CLASSIFICATION	1.0998721323259605E-5	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999842055154	WITHOUT_CLASSIFICATION	1.579448461636927E-8	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999993236191025	WITHOUT_CLASSIFICATION	6.763808975875962E-7	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999955051995308	WITHOUT_CLASSIFICATION	4.494800469225311E-6	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999998032676293	WITHOUT_CLASSIFICATION	1.9673237068177558E-7	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.999985683342666	WITHOUT_CLASSIFICATION	1.4316657333837374E-5	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.999999861490615	WITHOUT_CLASSIFICATION	1.3850938497264733E-7	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999977263090802	WITHOUT_CLASSIFICATION	2.2736909196880785E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999977263090802	WITHOUT_CLASSIFICATION	2.2736909196880785E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999977263090802	WITHOUT_CLASSIFICATION	2.2736909196880785E-6	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999997806693075	WITHOUT_CLASSIFICATION	2.193306923385246E-7	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999895525633818	WITHOUT_CLASSIFICATION	1.044743661804922E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999999301033531	WITHOUT_CLASSIFICATION	6.989664689899899E-7	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999999301033531	WITHOUT_CLASSIFICATION	6.989664689899899E-7	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999828856334755	WITHOUT_CLASSIFICATION	1.7114366524503367E-5	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999981993127279	WITHOUT_CLASSIFICATION	1.8006872720590274E-6	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999444542924109	WITHOUT_CLASSIFICATION	5.554570758912969E-5	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9999949890831444	WITHOUT_CLASSIFICATION	5.01091685555954E-6	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999655143472	WITHOUT_CLASSIFICATION	3.4485652728350195E-8	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999915866894722	WITHOUT_CLASSIFICATION	8.413310527884279E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999984892541323	WITHOUT_CLASSIFICATION	1.510745867687118E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999984892541323	WITHOUT_CLASSIFICATION	1.510745867687118E-6	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999998286833751	WITHOUT_CLASSIFICATION	1.7131662483425682E-7	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999505350447506	WITHOUT_CLASSIFICATION	4.94649552494486E-5	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999995131567582	WITHOUT_CLASSIFICATION	4.868432418193875E-7	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999971113701528	WITHOUT_CLASSIFICATION	2.8886298471837567E-6	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9955341404280329	WITHOUT_CLASSIFICATION	0.0044658595719670405	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999739850116	WITHOUT_CLASSIFICATION	2.6014988332479855E-8	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9999991837010069	WITHOUT_CLASSIFICATION	8.162989931103899E-7	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999530680329957	WITHOUT_CLASSIFICATION	4.6931967004333055E-5	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.999992905065557	WITHOUT_CLASSIFICATION	7.094934442902162E-6	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.999992247340931	WITHOUT_CLASSIFICATION	7.75265906907911E-6	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999999756075681	WITHOUT_CLASSIFICATION	2.439243179934602E-8	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999927169644508	WITHOUT_CLASSIFICATION	7.283035549153805E-6	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999850637855	WITHOUT_CLASSIFICATION	1.493621442913536E-8	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999255331969594	WITHOUT_CLASSIFICATION	7.446680304056924E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999997115263183	WITHOUT_CLASSIFICATION	2.8847368168933934E-7	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.999999519949069	WITHOUT_CLASSIFICATION	4.800509310098494E-7	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9998933474973403	WITHOUT_CLASSIFICATION	1.0665250265979833E-4	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999998867175947	WITHOUT_CLASSIFICATION	1.1328240542535884E-7	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999962615066686	WITHOUT_CLASSIFICATION	3.738493331218193E-6	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999971329880176	WITHOUT_CLASSIFICATION	2.867011982420856E-6	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999991659658654	WITHOUT_CLASSIFICATION	8.340341346043587E-7	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.999977223012472	WITHOUT_CLASSIFICATION	2.2776987527914054E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996700022239127	WITHOUT_CLASSIFICATION	3.2999777608730093E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996700022239127	WITHOUT_CLASSIFICATION	3.2999777608730093E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996700022239127	WITHOUT_CLASSIFICATION	3.2999777608730093E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996700022239127	WITHOUT_CLASSIFICATION	3.2999777608730093E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996700022239127	WITHOUT_CLASSIFICATION	3.2999777608730093E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996700022239127	WITHOUT_CLASSIFICATION	3.2999777608730093E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996700022239127	WITHOUT_CLASSIFICATION	3.2999777608730093E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9996700022239127	WITHOUT_CLASSIFICATION	3.2999777608730093E-4	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999999925500066	WITHOUT_CLASSIFICATION	7.449993424653462E-9	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9999984316001467	WITHOUT_CLASSIFICATION	1.5683998533760156E-6	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999998080930892	WITHOUT_CLASSIFICATION	1.9190691075302165E-7	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9992132083586581	WITHOUT_CLASSIFICATION	7.867916413418816E-4	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999864953079	WITHOUT_CLASSIFICATION	1.3504692129552786E-8	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999864953079	WITHOUT_CLASSIFICATION	1.3504692129552786E-8	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999917284409728	WITHOUT_CLASSIFICATION	8.271559027217427E-6	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999998986583218	WITHOUT_CLASSIFICATION	1.0134167817096337E-7	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999984349567801	WITHOUT_CLASSIFICATION	1.5650432199620927E-6	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.999999855802006	WITHOUT_CLASSIFICATION	1.441979938667547E-7	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999854362523365	WITHOUT_CLASSIFICATION	1.4563747663478506E-5	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9999951221636127	WITHOUT_CLASSIFICATION	4.8778363871716776E-6	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9999974503661501	WITHOUT_CLASSIFICATION	2.54963384986308E-6	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999508573338274	WITHOUT_CLASSIFICATION	4.914266617267691E-5	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999847050626121	WITHOUT_CLASSIFICATION	1.5294937387878724E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999999999075575	WITHOUT_CLASSIFICATION	9.244250952910853E-10	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999999999075575	WITHOUT_CLASSIFICATION	9.244250952910853E-10	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999999999075575	WITHOUT_CLASSIFICATION	9.244250952910853E-10	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998979913320748	WITHOUT_CLASSIFICATION	1.0200866792515674E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998979913320748	WITHOUT_CLASSIFICATION	1.0200866792515674E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998979913320748	WITHOUT_CLASSIFICATION	1.0200866792515674E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998979913320748	WITHOUT_CLASSIFICATION	1.0200866792515674E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998979913320748	WITHOUT_CLASSIFICATION	1.0200866792515674E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998979913320748	WITHOUT_CLASSIFICATION	1.0200866792515674E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998979913320748	WITHOUT_CLASSIFICATION	1.0200866792515674E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998979913320748	WITHOUT_CLASSIFICATION	1.0200866792515674E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998979913320748	WITHOUT_CLASSIFICATION	1.0200866792515674E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999995401347174	WITHOUT_CLASSIFICATION	4.598652826795935E-7	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999644141573439	WITHOUT_CLASSIFICATION	3.55858426560809E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999791849922814	WITHOUT_CLASSIFICATION	2.0815007718602077E-5	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999234379710311	WITHOUT_CLASSIFICATION	7.656202896886473E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998979913320748	WITHOUT_CLASSIFICATION	1.0200866792515674E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998979913320748	WITHOUT_CLASSIFICATION	1.0200866792515674E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998979913320748	WITHOUT_CLASSIFICATION	1.0200866792515674E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999746111090522	WITHOUT_CLASSIFICATION	2.538889094783909E-5	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999979322590729	WITHOUT_CLASSIFICATION	2.0677409271721027E-6	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999996454446284	WITHOUT_CLASSIFICATION	3.5455537159897655E-7	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998701195506621	WITHOUT_CLASSIFICATION	1.2988044933787593E-4	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998701195506621	WITHOUT_CLASSIFICATION	1.2988044933787593E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999927677281584	WITHOUT_CLASSIFICATION	7.232271841703191E-6	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9996592547117182	WITHOUT_CLASSIFICATION	3.4074528828176136E-4	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999998117885285	WITHOUT_CLASSIFICATION	1.8821147139780143E-7	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999999978901275	WITHOUT_CLASSIFICATION	2.10987250742953E-9	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9998396639966542	WITHOUT_CLASSIFICATION	1.6033600334570128E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9998396639966542	WITHOUT_CLASSIFICATION	1.6033600334570128E-4	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.999999992723817	WITHOUT_CLASSIFICATION	7.276182901053484E-9	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999769038685	WITHOUT_CLASSIFICATION	2.3096131387010703E-8	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999999783967734	WITHOUT_CLASSIFICATION	2.1603226608656123E-7	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999014699146664	WITHOUT_CLASSIFICATION	9.85300853334953E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999014699146664	WITHOUT_CLASSIFICATION	9.85300853334953E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999014699146664	WITHOUT_CLASSIFICATION	9.85300853334953E-5	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999983670458051	WITHOUT_CLASSIFICATION	1.6329541948954065E-6	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999979335934475	WITHOUT_CLASSIFICATION	2.066406552501478E-6	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999979335934475	WITHOUT_CLASSIFICATION	2.066406552501478E-6	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999961169465149	WITHOUT_CLASSIFICATION	3.883053485165226E-6	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999961169465149	WITHOUT_CLASSIFICATION	3.883053485165226E-6	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999987655887491	WITHOUT_CLASSIFICATION	1.2344112509062034E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999981693282666	WITHOUT_CLASSIFICATION	1.830671733377316E-6	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999981251777553	WITHOUT_CLASSIFICATION	1.8748222447082176E-6	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999950068487178	WITHOUT_CLASSIFICATION	4.9931512821725465E-6	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.999993968129363	WITHOUT_CLASSIFICATION	6.0318706369111445E-6	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999993779956706	WITHOUT_CLASSIFICATION	6.220043293634169E-7	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999960079619679	WITHOUT_CLASSIFICATION	3.992038032129848E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999370538847031	WITHOUT_CLASSIFICATION	6.29461152969791E-5	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999986788091833	WITHOUT_CLASSIFICATION	1.3211908167795033E-6	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999860176534	WITHOUT_CLASSIFICATION	1.3982346573844106E-8	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9840540373715728	WITHOUT_CLASSIFICATION	0.015945962628427207	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999947524295366	WITHOUT_CLASSIFICATION	5.2475704633045325E-6	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999999595222956	WITHOUT_CLASSIFICATION	4.047770446919995E-8	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999999956844943	WITHOUT_CLASSIFICATION	4.315505774757437E-9	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999835650987561	WITHOUT_CLASSIFICATION	1.643490124389351E-5	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999999573092783	WITHOUT_CLASSIFICATION	4.2690721783841704E-8	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999945904493034	WITHOUT_CLASSIFICATION	5.409550696558662E-6	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999995601517664	WITHOUT_CLASSIFICATION	4.3984823363041704E-7	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999999534809272	WITHOUT_CLASSIFICATION	4.651907290798868E-8	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999969606460847	WITHOUT_CLASSIFICATION	3.0393539154636314E-6	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999998346642887	WITHOUT_CLASSIFICATION	1.6533571135863846E-7	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999033882756229	WITHOUT_CLASSIFICATION	9.661172437714613E-5	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999997006398732	WITHOUT_CLASSIFICATION	2.9936012676598543E-7	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999956537231877	WITHOUT_CLASSIFICATION	4.3462768122643695E-6	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.999996599965664	WITHOUT_CLASSIFICATION	3.4000343359228896E-6	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999973717817131	WITHOUT_CLASSIFICATION	2.6282182868088603E-6	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999956907815529	WITHOUT_CLASSIFICATION	4.309218447083189E-6	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.999999987746157	WITHOUT_CLASSIFICATION	1.2253842925580289E-8	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.999996542885576	WITHOUT_CLASSIFICATION	3.457114423941912E-6	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999984062265999	WITHOUT_CLASSIFICATION	1.593773400156372E-6	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999952051792117	WITHOUT_CLASSIFICATION	4.794820788282926E-6	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999986509435232	WITHOUT_CLASSIFICATION	1.3490564767352416E-6	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999998603336155	WITHOUT_CLASSIFICATION	1.396663844271271E-7	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999999469111517	WITHOUT_CLASSIFICATION	5.3088848303169765E-8	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999934498916866	WITHOUT_CLASSIFICATION	6.55010831345575E-6	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999985747811059	WITHOUT_CLASSIFICATION	1.4252188941459417E-6	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999975482249337	WITHOUT_CLASSIFICATION	2.4517750662791066E-6	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999920821049949	WITHOUT_CLASSIFICATION	7.917895004992521E-6	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999992103470946	WITHOUT_CLASSIFICATION	7.896529054059894E-7	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999572975601	WITHOUT_CLASSIFICATION	4.2702439940685236E-8	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999994860357968	WITHOUT_CLASSIFICATION	5.139642031512955E-7	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999997089933529	WITHOUT_CLASSIFICATION	2.910066470539704E-7	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999996777266033	WITHOUT_CLASSIFICATION	3.2227339667788335E-7	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999999415298357	WITHOUT_CLASSIFICATION	5.847016420753794E-8	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999994033702175	WITHOUT_CLASSIFICATION	5.966297825180622E-7	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999995208409574	WITHOUT_CLASSIFICATION	4.791590424560993E-7	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9999998149339928	WITHOUT_CLASSIFICATION	1.8506600720409754E-7	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999964932643	WITHOUT_CLASSIFICATION	3.5067356175800647E-9	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999927671105	WITHOUT_CLASSIFICATION	7.232889530846862E-9	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999912959470492	WITHOUT_CLASSIFICATION	8.704052950857671E-6	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999997497963705	WITHOUT_CLASSIFICATION	2.502036295205045E-7	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999637327377073	WITHOUT_CLASSIFICATION	3.6267262292612214E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999637327377073	WITHOUT_CLASSIFICATION	3.6267262292612214E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999631667981	WITHOUT_CLASSIFICATION	3.68332020017787E-8	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999631667981	WITHOUT_CLASSIFICATION	3.68332020017787E-8	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998415900699821	WITHOUT_CLASSIFICATION	1.5840993001794228E-4	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998415900699821	WITHOUT_CLASSIFICATION	1.5840993001794228E-4	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999996975611427	WITHOUT_CLASSIFICATION	3.024388573089648E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999996975611427	WITHOUT_CLASSIFICATION	3.024388573089648E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999986789548718	WITHOUT_CLASSIFICATION	1.321045128162767E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999986789548718	WITHOUT_CLASSIFICATION	1.321045128162767E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999986789548718	WITHOUT_CLASSIFICATION	1.321045128162767E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999986789548718	WITHOUT_CLASSIFICATION	1.321045128162767E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999986789548718	WITHOUT_CLASSIFICATION	1.321045128162767E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999986789548718	WITHOUT_CLASSIFICATION	1.321045128162767E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999986789548718	WITHOUT_CLASSIFICATION	1.321045128162767E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999986789548718	WITHOUT_CLASSIFICATION	1.321045128162767E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999986789548718	WITHOUT_CLASSIFICATION	1.321045128162767E-6	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999997013814017	WITHOUT_CLASSIFICATION	2.9861859820181805E-7	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999997013814017	WITHOUT_CLASSIFICATION	2.9861859820181805E-7	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999997013814017	WITHOUT_CLASSIFICATION	2.9861859820181805E-7	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999961088299945	WITHOUT_CLASSIFICATION	3.891170005512266E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999972981883981	WITHOUT_CLASSIFICATION	2.7018116018270296E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999972981883981	WITHOUT_CLASSIFICATION	2.7018116018270296E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999972981883981	WITHOUT_CLASSIFICATION	2.7018116018270296E-6	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999021186287	WITHOUT_CLASSIFICATION	9.788137132929954E-8	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999021186287	WITHOUT_CLASSIFICATION	9.788137132929954E-8	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999021186287	WITHOUT_CLASSIFICATION	9.788137132929954E-8	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999875368747031	WITHOUT_CLASSIFICATION	1.2463125296931695E-5	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9999956926496166	WITHOUT_CLASSIFICATION	4.3073503833803175E-6	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999902083156802	WITHOUT_CLASSIFICATION	9.791684319772147E-6	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999906967842582	WITHOUT_CLASSIFICATION	9.303215741749356E-6	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999906967842582	WITHOUT_CLASSIFICATION	9.303215741749356E-6	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999906967842582	WITHOUT_CLASSIFICATION	9.303215741749356E-6	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999963956689232	WITHOUT_CLASSIFICATION	3.6043310767823137E-6	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999993414860147	WITHOUT_CLASSIFICATION	6.58513985335915E-7	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999993414860147	WITHOUT_CLASSIFICATION	6.58513985335915E-7	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999904575262214	WITHOUT_CLASSIFICATION	9.542473778534489E-6	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999444379208483	WITHOUT_CLASSIFICATION	5.556207915169149E-5	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999444379208483	WITHOUT_CLASSIFICATION	5.556207915169149E-5	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9982399575567518	IMPLEMENTATION	0.001760042443248159	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.999995632205496	WITHOUT_CLASSIFICATION	4.367794503998332E-6	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9991026768670025	WITHOUT_CLASSIFICATION	8.973231329975251E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999992411875304	WITHOUT_CLASSIFICATION	7.588124696087703E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999992411875304	WITHOUT_CLASSIFICATION	7.588124696087703E-7	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999783696948991	WITHOUT_CLASSIFICATION	2.16303051008463E-5	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999971972792001	WITHOUT_CLASSIFICATION	2.802720799889958E-6	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999589423822911	WITHOUT_CLASSIFICATION	4.105761770890211E-5	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999928252466878	WITHOUT_CLASSIFICATION	7.1747533123166806E-6	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999220097866441	WITHOUT_CLASSIFICATION	7.7990213355843E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999992411875304	WITHOUT_CLASSIFICATION	7.588124696087703E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999992411875304	WITHOUT_CLASSIFICATION	7.588124696087703E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999992411875304	WITHOUT_CLASSIFICATION	7.588124696087703E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999992411875304	WITHOUT_CLASSIFICATION	7.588124696087703E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999992411875304	WITHOUT_CLASSIFICATION	7.588124696087703E-7	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999858911581143	WITHOUT_CLASSIFICATION	1.4108841885603389E-5	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999726015112824	WITHOUT_CLASSIFICATION	2.7398488717516506E-5	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999986601076236	WITHOUT_CLASSIFICATION	1.3398923763167289E-6	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999983657478095	WITHOUT_CLASSIFICATION	1.6342521904172084E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999999996573904	WITHOUT_CLASSIFICATION	3.426095878625099E-10	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9997121646471495	WITHOUT_CLASSIFICATION	2.878353528505457E-4	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999999578476614	WITHOUT_CLASSIFICATION	4.2152338586076814E-8	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999892341804761	WITHOUT_CLASSIFICATION	1.076581952386627E-5	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999025525251	WITHOUT_CLASSIFICATION	9.744747484895607E-8	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999981960282338	WITHOUT_CLASSIFICATION	1.8039717662641217E-6	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999147173757	WITHOUT_CLASSIFICATION	8.528262428558351E-8	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999862664145143	WITHOUT_CLASSIFICATION	1.3733585485744939E-5	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999984664220322	WITHOUT_CLASSIFICATION	1.5335779678051135E-6	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999368744517	WITHOUT_CLASSIFICATION	6.312554835575915E-8	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999992297671053	WITHOUT_CLASSIFICATION	7.702328946934368E-7	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9996009841194574	WITHOUT_CLASSIFICATION	3.9901588054262483E-4	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999680299824913	WITHOUT_CLASSIFICATION	3.197001750862571E-5	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999997184809516	WITHOUT_CLASSIFICATION	2.815190484225173E-7	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999995584151349	WITHOUT_CLASSIFICATION	4.415848651176702E-7	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999969580864108	WITHOUT_CLASSIFICATION	3.041913589188489E-6	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999999552234329	WITHOUT_CLASSIFICATION	4.4776567034979015E-8	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999977771400814	WITHOUT_CLASSIFICATION	2.2228599185273483E-6	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.99999950957659	WITHOUT_CLASSIFICATION	4.904234101239901E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999972388410044	WITHOUT_CLASSIFICATION	2.761158995582748E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999972388410044	WITHOUT_CLASSIFICATION	2.761158995582748E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999972388410044	WITHOUT_CLASSIFICATION	2.761158995582748E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999972388410044	WITHOUT_CLASSIFICATION	2.761158995582748E-6	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999982577938533	WITHOUT_CLASSIFICATION	1.742206146773066E-6	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999999663721961	WITHOUT_CLASSIFICATION	3.362780394520188E-8	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999999477215373	WITHOUT_CLASSIFICATION	5.227846277342763E-8	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999999477215373	WITHOUT_CLASSIFICATION	5.227846277342763E-8	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999996621870594	WITHOUT_CLASSIFICATION	3.3781294061562725E-7	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999995644142651	WITHOUT_CLASSIFICATION	4.355857349042401E-7	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999943481869	WITHOUT_CLASSIFICATION	5.651813166835829E-9	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999962388483712	WITHOUT_CLASSIFICATION	3.7611516288690176E-6	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999999761256663	WITHOUT_CLASSIFICATION	2.3874333719300904E-8	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999948516829195	WITHOUT_CLASSIFICATION	5.148317080546004E-6	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999726364965684	WITHOUT_CLASSIFICATION	2.7363503431528807E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999971033472781	WITHOUT_CLASSIFICATION	2.8966527218032596E-6	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999971033472781	WITHOUT_CLASSIFICATION	2.8966527218032596E-6	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999971033472781	WITHOUT_CLASSIFICATION	2.8966527218032596E-6	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999971033472781	WITHOUT_CLASSIFICATION	2.8966527218032596E-6	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999217540141929	WITHOUT_CLASSIFICATION	7.824598580708299E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999526148389	WITHOUT_CLASSIFICATION	4.738516104808254E-8	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999526148389	WITHOUT_CLASSIFICATION	4.738516104808254E-8	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999526148389	WITHOUT_CLASSIFICATION	4.738516104808254E-8	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999998768060124	WITHOUT_CLASSIFICATION	1.2319398747268207E-7	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999982483422385	WITHOUT_CLASSIFICATION	1.7516577614210318E-6	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999990235750047	WITHOUT_CLASSIFICATION	9.764249952763797E-7	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8803402668269843	IMPLEMENTATION	0.11965973317301566	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8803402668269843	IMPLEMENTATION	0.11965973317301566	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.999970249172316	WITHOUT_CLASSIFICATION	2.9750827683926928E-5	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999999995123571	WITHOUT_CLASSIFICATION	4.876428944530682E-10	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999251824050082	WITHOUT_CLASSIFICATION	7.48175949918854E-5	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999251824050082	WITHOUT_CLASSIFICATION	7.48175949918854E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999712370270352	WITHOUT_CLASSIFICATION	2.8762972964865895E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999712370270352	WITHOUT_CLASSIFICATION	2.8762972964865895E-5	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999999712529799	WITHOUT_CLASSIFICATION	2.874702001698021E-8	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.999337534942902	WITHOUT_CLASSIFICATION	6.624650570979262E-4	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999994537236055	WITHOUT_CLASSIFICATION	5.462763944711979E-7	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999986551670518	WITHOUT_CLASSIFICATION	1.3448329482873656E-6	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999918252298201	WITHOUT_CLASSIFICATION	8.174770179942778E-6	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.999999444367705	WITHOUT_CLASSIFICATION	5.556322949943369E-7	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.999999567076034	WITHOUT_CLASSIFICATION	4.3292396599166904E-7	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9997804109005828	WITHOUT_CLASSIFICATION	2.195890994172554E-4	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999998013244645	WITHOUT_CLASSIFICATION	1.9867553553059873E-7	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.999999981703269	WITHOUT_CLASSIFICATION	1.8296731069413065E-8	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.999999981703269	WITHOUT_CLASSIFICATION	1.8296731069413065E-8	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999979899277672	WITHOUT_CLASSIFICATION	2.010072232674646E-6	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999979899277672	WITHOUT_CLASSIFICATION	2.010072232674646E-6	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999999697380294	WITHOUT_CLASSIFICATION	3.026197068184134E-8	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999989356970787	WITHOUT_CLASSIFICATION	1.0643029213642903E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999893668637675	WITHOUT_CLASSIFICATION	1.0633136232383037E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.999996492717967	WITHOUT_CLASSIFICATION	3.507282033129093E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.999996492717967	WITHOUT_CLASSIFICATION	3.507282033129093E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.999996492717967	WITHOUT_CLASSIFICATION	3.507282033129093E-6	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9999957374283018	WITHOUT_CLASSIFICATION	4.2625716982183135E-6	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.999995126279225	WITHOUT_CLASSIFICATION	4.873720774948771E-6	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9999963558206814	WITHOUT_CLASSIFICATION	3.644179318607462E-6	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9999967754424544	WITHOUT_CLASSIFICATION	3.2245575456132502E-6	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9999952961224734	WITHOUT_CLASSIFICATION	4.703877526592412E-6	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999954047188302	WITHOUT_CLASSIFICATION	4.595281169878454E-6	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9999960630987339	WITHOUT_CLASSIFICATION	3.936901266081954E-6	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9999947693439921	WITHOUT_CLASSIFICATION	5.230656007812091E-6	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999988388690405	WITHOUT_CLASSIFICATION	1.161130959579455E-6	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999999009668133	WITHOUT_CLASSIFICATION	9.903318663565373E-8	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999117442440439	WITHOUT_CLASSIFICATION	8.825575595612299E-5	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.99999981682277	WITHOUT_CLASSIFICATION	1.8317722999913964E-7	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999998340791832	WITHOUT_CLASSIFICATION	1.659208167571523E-7	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.8803402668269843	IMPLEMENTATION	0.11965973317301566	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.999999405322819	WITHOUT_CLASSIFICATION	5.946771810889537E-7	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999962680070162	WITHOUT_CLASSIFICATION	3.7319929836856665E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999943751233688	WITHOUT_CLASSIFICATION	5.62487663126754E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999334976822215	WITHOUT_CLASSIFICATION	6.650231777843525E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999334976822215	WITHOUT_CLASSIFICATION	6.650231777843525E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999334976822215	WITHOUT_CLASSIFICATION	6.650231777843525E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999334976822215	WITHOUT_CLASSIFICATION	6.650231777843525E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999334976822215	WITHOUT_CLASSIFICATION	6.650231777843525E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999874036418591	WITHOUT_CLASSIFICATION	1.2596358140830358E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999334976822215	WITHOUT_CLASSIFICATION	6.650231777843525E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999334976822215	WITHOUT_CLASSIFICATION	6.650231777843525E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999334976822215	WITHOUT_CLASSIFICATION	6.650231777843525E-5	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999990690207605	WITHOUT_CLASSIFICATION	9.30979239435157E-7	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999991965032765	WITHOUT_CLASSIFICATION	8.034967234417682E-7	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999999972212466	WITHOUT_CLASSIFICATION	2.7787533659417937E-9	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999993414541992	WITHOUT_CLASSIFICATION	6.585458008193924E-7	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999958069440495	WITHOUT_CLASSIFICATION	4.193055950489126E-6	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999999830095126	WITHOUT_CLASSIFICATION	1.699048744181841E-8	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999999002331009	WITHOUT_CLASSIFICATION	9.97668989896546E-8	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9999955592225777	WITHOUT_CLASSIFICATION	4.440777422362079E-6	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999971208275513	WITHOUT_CLASSIFICATION	2.8791724486479725E-6	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999971208275513	WITHOUT_CLASSIFICATION	2.8791724486479725E-6	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9999955094035818	WITHOUT_CLASSIFICATION	4.490596418191777E-6	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9999949715405716	WITHOUT_CLASSIFICATION	5.028459428460462E-6	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999960011786293	WITHOUT_CLASSIFICATION	3.998821370712133E-6	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9999958699368995	WITHOUT_CLASSIFICATION	4.130063100479541E-6	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999957763945151	WITHOUT_CLASSIFICATION	4.223605484948615E-6	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9999952035226686	WITHOUT_CLASSIFICATION	4.79647733142302E-6	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9999948268543739	WITHOUT_CLASSIFICATION	5.1731456261273215E-6	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999952087324399	WITHOUT_CLASSIFICATION	4.791267560121493E-6	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999951759207248	WITHOUT_CLASSIFICATION	4.8240792752315005E-6	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.999996673979979	WITHOUT_CLASSIFICATION	3.3260200210340974E-6	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9999966979037881	WITHOUT_CLASSIFICATION	3.30209621201345E-6	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9999956353015786	WITHOUT_CLASSIFICATION	4.364698421314003E-6	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999952988084557	WITHOUT_CLASSIFICATION	4.701191544194326E-6	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999953615797337	WITHOUT_CLASSIFICATION	4.638420266338502E-6	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.999995391173953	WITHOUT_CLASSIFICATION	4.608826046955486E-6	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9999949707335649	WITHOUT_CLASSIFICATION	5.029266435144187E-6	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.999995017738473	WITHOUT_CLASSIFICATION	4.982261526986773E-6	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9999959041430005	WITHOUT_CLASSIFICATION	4.095856999500109E-6	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9999952777342912	WITHOUT_CLASSIFICATION	4.722265708779933E-6	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.9999954280604899	WITHOUT_CLASSIFICATION	4.57193951003582E-6	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9999962978586282	WITHOUT_CLASSIFICATION	3.702141371757176E-6	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999953418879789	WITHOUT_CLASSIFICATION	4.65811202108989E-6	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9999958623293467	WITHOUT_CLASSIFICATION	4.137670653400811E-6	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9999975353628616	WITHOUT_CLASSIFICATION	2.464637138403077E-6	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9999975906142385	WITHOUT_CLASSIFICATION	2.4093857615417852E-6	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999976577803931	WITHOUT_CLASSIFICATION	2.3422196068961693E-6	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9999974287466604	WITHOUT_CLASSIFICATION	2.571253339662754E-6	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9999975748725225	WITHOUT_CLASSIFICATION	2.4251274774554224E-6	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.999997443623966	WITHOUT_CLASSIFICATION	2.556376033964244E-6	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999974877074975	WITHOUT_CLASSIFICATION	2.512292502503417E-6	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999969152995214	WITHOUT_CLASSIFICATION	3.0847004786516747E-6	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999965794756278	WITHOUT_CLASSIFICATION	3.420524372135521E-6	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9999966380505328	WITHOUT_CLASSIFICATION	3.3619494670815146E-6	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9999963771272922	WITHOUT_CLASSIFICATION	3.6228727078144923E-6	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9999977303272933	WITHOUT_CLASSIFICATION	2.2696727066747354E-6	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999979122330088	WITHOUT_CLASSIFICATION	2.087766991278244E-6	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.999996902083893	WITHOUT_CLASSIFICATION	3.0979161070466873E-6	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999968701622547	WITHOUT_CLASSIFICATION	3.1298377452918326E-6	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.9999970531791479	WITHOUT_CLASSIFICATION	2.946820852087193E-6	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9999970702392491	WITHOUT_CLASSIFICATION	2.9297607508475056E-6	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9999974991947892	WITHOUT_CLASSIFICATION	2.500805210755395E-6	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.999997851203957	WITHOUT_CLASSIFICATION	2.1487960430387837E-6	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9999970295484695	WITHOUT_CLASSIFICATION	2.97045153056842E-6	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9999965787409557	WITHOUT_CLASSIFICATION	3.421259044272314E-6	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9999966326452157	WITHOUT_CLASSIFICATION	3.3673547844122438E-6	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999965033072463	WITHOUT_CLASSIFICATION	3.4966927536973133E-6	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999965625973006	WITHOUT_CLASSIFICATION	3.4374026994079413E-6	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9999967065735579	WITHOUT_CLASSIFICATION	3.293426442195435E-6	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9999968842775228	WITHOUT_CLASSIFICATION	3.1157224772485447E-6	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.999996667909124	WITHOUT_CLASSIFICATION	3.3320908760420185E-6	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.999997143100163	WITHOUT_CLASSIFICATION	2.8568998369927908E-6	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9999968261730622	WITHOUT_CLASSIFICATION	3.17382693771296E-6	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.999996965070339	WITHOUT_CLASSIFICATION	3.034929661068369E-6	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999974876476824	WITHOUT_CLASSIFICATION	2.512352317737982E-6	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999974876476824	WITHOUT_CLASSIFICATION	2.512352317737982E-6	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999964456284373	WITHOUT_CLASSIFICATION	3.554371562837227E-6	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9999977240982879	WITHOUT_CLASSIFICATION	2.2759017120957227E-6	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9999966783594986	WITHOUT_CLASSIFICATION	3.321640501483909E-6	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9999969453651113	WITHOUT_CLASSIFICATION	3.0546348888230127E-6	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9999965357546202	WITHOUT_CLASSIFICATION	3.4642453797983673E-6	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.999997418430139	WITHOUT_CLASSIFICATION	2.5815698609892285E-6	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999963618252637	WITHOUT_CLASSIFICATION	3.6381747361698763E-6	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.999996432599455	WITHOUT_CLASSIFICATION	3.5674005449489787E-6	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999968890198131	WITHOUT_CLASSIFICATION	3.1109801868256605E-6	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9999966180121506	WITHOUT_CLASSIFICATION	3.3819878494571393E-6	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999806633042732	WITHOUT_CLASSIFICATION	1.933669572687184E-5	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999806633042732	WITHOUT_CLASSIFICATION	1.933669572687184E-5	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999865849336066	WITHOUT_CLASSIFICATION	1.34150663934565E-5	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999229607566552	WITHOUT_CLASSIFICATION	7.70392433448516E-5	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999970299984461	WITHOUT_CLASSIFICATION	2.9700015538636098E-6	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999876865122	WITHOUT_CLASSIFICATION	1.2313487774894584E-8	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999997222940713	WITHOUT_CLASSIFICATION	2.7770592877393397E-7	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999997222940713	WITHOUT_CLASSIFICATION	2.7770592877393397E-7	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999997222940713	WITHOUT_CLASSIFICATION	2.7770592877393397E-7	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999997222940713	WITHOUT_CLASSIFICATION	2.7770592877393397E-7	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9989430626744091	WITHOUT_CLASSIFICATION	0.0010569373255908921	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999999636270572	WITHOUT_CLASSIFICATION	3.637294279009436E-8	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9999960628874808	WITHOUT_CLASSIFICATION	3.937112519192411E-6	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9999948258254436	WITHOUT_CLASSIFICATION	5.174174556401354E-6	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.9999960540099366	WITHOUT_CLASSIFICATION	3.94599006339268E-6	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9999965659298944	WITHOUT_CLASSIFICATION	3.4340701055606966E-6	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9999964661848413	WITHOUT_CLASSIFICATION	3.533815158643422E-6	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9999958224933516	WITHOUT_CLASSIFICATION	4.17750664832645E-6	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9999966863100779	WITHOUT_CLASSIFICATION	3.313689922188077E-6	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.999996092767357	WITHOUT_CLASSIFICATION	3.907232642988418E-6	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9999948153032598	WITHOUT_CLASSIFICATION	5.184696740136753E-6	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9999957100510314	WITHOUT_CLASSIFICATION	4.289948968685796E-6	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9999960256707925	WITHOUT_CLASSIFICATION	3.974329207457491E-6	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9999951067086171	WITHOUT_CLASSIFICATION	4.893291382918124E-6	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9999948296001687	WITHOUT_CLASSIFICATION	5.170399831275866E-6	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9999964699160266	WITHOUT_CLASSIFICATION	3.530083973380545E-6	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9999947862933113	WITHOUT_CLASSIFICATION	5.213706688636097E-6	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9999964227490812	WITHOUT_CLASSIFICATION	3.57725091870439E-6	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9999959478966421	WITHOUT_CLASSIFICATION	4.052103357878275E-6	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9999953963769496	WITHOUT_CLASSIFICATION	4.6036230504344185E-6	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9999957240601444	WITHOUT_CLASSIFICATION	4.275939855631972E-6	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9999962131331497	WITHOUT_CLASSIFICATION	3.7868668503179765E-6	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9999953490347011	WITHOUT_CLASSIFICATION	4.65096529896674E-6	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9999949138177585	WITHOUT_CLASSIFICATION	5.086182241410599E-6	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9999952819504156	WITHOUT_CLASSIFICATION	4.718049584387783E-6	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9999975140598895	WITHOUT_CLASSIFICATION	2.485940110490576E-6	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9999977794269311	WITHOUT_CLASSIFICATION	2.220573068782436E-6	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.999997533043828	WITHOUT_CLASSIFICATION	2.4669561719009705E-6	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9999974960401784	WITHOUT_CLASSIFICATION	2.503959821646208E-6	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9999965446038479	WITHOUT_CLASSIFICATION	3.4553961520554828E-6	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9999965024506151	WITHOUT_CLASSIFICATION	3.497549384855973E-6	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9999968638283456	WITHOUT_CLASSIFICATION	3.136171654511809E-6	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9999971088870531	WITHOUT_CLASSIFICATION	2.8911129469787177E-6	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9999968889342908	WITHOUT_CLASSIFICATION	3.111065709121815E-6	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9999969786004784	WITHOUT_CLASSIFICATION	3.021399521521152E-6	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9999975564572351	WITHOUT_CLASSIFICATION	2.4435427649199677E-6	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9999968042753679	WITHOUT_CLASSIFICATION	3.1957246321646896E-6	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9999965325177711	WITHOUT_CLASSIFICATION	3.4674822288299396E-6	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9999969627893558	WITHOUT_CLASSIFICATION	3.037210644205831E-6	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9999966165722964	WITHOUT_CLASSIFICATION	3.3834277036413127E-6	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.999997782588176	WITHOUT_CLASSIFICATION	2.2174118240679522E-6	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9999967216873459	WITHOUT_CLASSIFICATION	3.278312654068408E-6	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9999964331259744	WITHOUT_CLASSIFICATION	3.5668740255638717E-6	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9999966536407613	WITHOUT_CLASSIFICATION	3.3463592386543147E-6	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9999965581632944	WITHOUT_CLASSIFICATION	3.4418367057081275E-6	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.999996489786067	WITHOUT_CLASSIFICATION	3.510213932993492E-6	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9999968042353904	WITHOUT_CLASSIFICATION	3.1957646095589895E-6	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9999963823529827	WITHOUT_CLASSIFICATION	3.617647017321617E-6	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9999969489116807	WITHOUT_CLASSIFICATION	3.0510883194197696E-6	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9999967784714568	WITHOUT_CLASSIFICATION	3.221528543044825E-6	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9999963881405146	WITHOUT_CLASSIFICATION	3.6118594853459185E-6	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.999996610189559	WITHOUT_CLASSIFICATION	3.3898104410607994E-6	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9999970082771087	WITHOUT_CLASSIFICATION	2.99172289123879E-6	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9999967905580135	WITHOUT_CLASSIFICATION	3.2094419865062053E-6	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9999966338712725	WITHOUT_CLASSIFICATION	3.366128727442852E-6	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9999968660288384	WITHOUT_CLASSIFICATION	3.13397116158256E-6	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9999975734322756	WITHOUT_CLASSIFICATION	2.4265677244256387E-6	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9999968207861544	WITHOUT_CLASSIFICATION	3.1792138455052667E-6	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9999975814583418	WITHOUT_CLASSIFICATION	2.41854165811381E-6	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.999998806503502	WITHOUT_CLASSIFICATION	1.1934964979988278E-6	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999993232783203	WITHOUT_CLASSIFICATION	6.767216795634396E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999999970426467	WITHOUT_CLASSIFICATION	2.9573532890881984E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999999970426467	WITHOUT_CLASSIFICATION	2.9573532890881984E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999999970426467	WITHOUT_CLASSIFICATION	2.9573532890881984E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999999970426467	WITHOUT_CLASSIFICATION	2.9573532890881984E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999999970426467	WITHOUT_CLASSIFICATION	2.9573532890881984E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999999970426467	WITHOUT_CLASSIFICATION	2.9573532890881984E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.999999970426467	WITHOUT_CLASSIFICATION	2.9573532890881984E-8	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999971884921776	WITHOUT_CLASSIFICATION	2.8115078224707664E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999971884921776	WITHOUT_CLASSIFICATION	2.8115078224707664E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999971884921776	WITHOUT_CLASSIFICATION	2.8115078224707664E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999971884921776	WITHOUT_CLASSIFICATION	2.8115078224707664E-6	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998800430731314	WITHOUT_CLASSIFICATION	1.1995692686865865E-4	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998800430731314	WITHOUT_CLASSIFICATION	1.1995692686865865E-4	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999999122348977	WITHOUT_CLASSIFICATION	8.776510232262461E-8	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999966508572905	WITHOUT_CLASSIFICATION	3.3491427095098288E-6	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999966508572905	WITHOUT_CLASSIFICATION	3.3491427095098288E-6	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999990882839851	WITHOUT_CLASSIFICATION	9.117160148491992E-7	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999764198742828	WITHOUT_CLASSIFICATION	2.3580125717274964E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999490399171	WITHOUT_CLASSIFICATION	5.096008281541122E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999490399171	WITHOUT_CLASSIFICATION	5.096008281541122E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999490399171	WITHOUT_CLASSIFICATION	5.096008281541122E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999490399171	WITHOUT_CLASSIFICATION	5.096008281541122E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999490399171	WITHOUT_CLASSIFICATION	5.096008281541122E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999490399171	WITHOUT_CLASSIFICATION	5.096008281541122E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999490399171	WITHOUT_CLASSIFICATION	5.096008281541122E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99999982118884	WITHOUT_CLASSIFICATION	1.7881115994300739E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999298362686	WITHOUT_CLASSIFICATION	7.016373135712513E-8	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999736290226083	WITHOUT_CLASSIFICATION	2.6370977391601715E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999736290226083	WITHOUT_CLASSIFICATION	2.6370977391601715E-5	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999980637092338	WITHOUT_CLASSIFICATION	1.9362907661275976E-6	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999975868499345	WITHOUT_CLASSIFICATION	2.4131500655760854E-6	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999975868499345	WITHOUT_CLASSIFICATION	2.4131500655760854E-6	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.999999999665336	WITHOUT_CLASSIFICATION	3.3466389652777523E-10	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.893013702790079	WITHOUT_CLASSIFICATION	0.10698629720992109	IMPLEMENTATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.999998391703672	WITHOUT_CLASSIFICATION	1.6082963280822555E-6	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999995378585278	WITHOUT_CLASSIFICATION	4.6214147224461097E-7	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999999256514355	WITHOUT_CLASSIFICATION	7.434856452467731E-8	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999996925874051	WITHOUT_CLASSIFICATION	3.0741259499068334E-7	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999960799619675	WITHOUT_CLASSIFICATION	3.9200380325294435E-6	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999968152781231	WITHOUT_CLASSIFICATION	3.184721876894816E-6	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999991698563765	WITHOUT_CLASSIFICATION	8.301436234571389E-7	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9998484506275879	WITHOUT_CLASSIFICATION	1.515493724120915E-4	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.999992342687175	WITHOUT_CLASSIFICATION	7.657312824956651E-6	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999999598581695	WITHOUT_CLASSIFICATION	4.0141830495300056E-8	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999996663218116	WITHOUT_CLASSIFICATION	3.336781883082352E-7	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999915050221276	WITHOUT_CLASSIFICATION	8.494977872404162E-6	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9997591862817041	WITHOUT_CLASSIFICATION	2.408137182957983E-4	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999997134133485	WITHOUT_CLASSIFICATION	2.8658665153719756E-7	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999633110718	WITHOUT_CLASSIFICATION	3.668892823862578E-8	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.99993783568043	WITHOUT_CLASSIFICATION	6.216431956993354E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9997842827213402	WITHOUT_CLASSIFICATION	2.157172786596144E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9997842827213402	WITHOUT_CLASSIFICATION	2.157172786596144E-4	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999929854343178	WITHOUT_CLASSIFICATION	7.0145656821189035E-6	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999353249763	WITHOUT_CLASSIFICATION	6.467502370705965E-8	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999964305028082	WITHOUT_CLASSIFICATION	3.5694971917996245E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999716194556294	WITHOUT_CLASSIFICATION	2.8380544370613195E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999959141150723	WITHOUT_CLASSIFICATION	4.0858849277076474E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999959141150723	WITHOUT_CLASSIFICATION	4.0858849277076474E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.999959141150723	WITHOUT_CLASSIFICATION	4.0858849277076474E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999443993754734	WITHOUT_CLASSIFICATION	5.560062452658535E-5	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999991340622144	WITHOUT_CLASSIFICATION	8.659377856324073E-7	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999978582696532	WITHOUT_CLASSIFICATION	2.1417303467839632E-6	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999999979885313	WITHOUT_CLASSIFICATION	2.0114687236378803E-9	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.999999970127944	WITHOUT_CLASSIFICATION	2.987205612003858E-8	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999999946543172	WITHOUT_CLASSIFICATION	5.345682827604082E-9	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999999405956321	WITHOUT_CLASSIFICATION	5.9404367823003564E-8	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.999999991231359	WITHOUT_CLASSIFICATION	8.768641067553321E-9	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999990253597144	WITHOUT_CLASSIFICATION	9.746402856393018E-7	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999906168080304	WITHOUT_CLASSIFICATION	9.383191969693414E-6	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9999999133530592	WITHOUT_CLASSIFICATION	8.664694080160696E-8	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999999135922191	WITHOUT_CLASSIFICATION	8.640778097981604E-8	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9282112008089626	IMPLEMENTATION	0.07178879919103741	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999967115281646	WITHOUT_CLASSIFICATION	3.288471835351229E-6	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999825077475089	WITHOUT_CLASSIFICATION	1.7492252491175643E-5	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.999999992510782	WITHOUT_CLASSIFICATION	7.489218005426333E-9	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999998634915742	WITHOUT_CLASSIFICATION	1.365084258062927E-7	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999994850825008	WITHOUT_CLASSIFICATION	5.14917499258118E-7	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999820900461625	WITHOUT_CLASSIFICATION	1.7909953837627396E-5	IMPLEMENTATION
