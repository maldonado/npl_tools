// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.8411248941597966	WITHOUT_CLASSIFICATION	0.15887510584020334	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.6895155546428285	IMPLEMENTATION	0.3104844453571713	WITHOUT_CLASSIFICATION
// TODO: Someday, enable.	IMPLEMENTATION	0.7930326494424359	WITHOUT_CLASSIFICATION	0.20696735055756416	IMPLEMENTATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.9999915017361563	WITHOUT_CLASSIFICATION	8.498263843725277E-6	IMPLEMENTATION
// TODO: non-strict option	IMPLEMENTATION	0.6958281287736798	WITHOUT_CLASSIFICATION	0.3041718712263202	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.6732473954494621	IMPLEMENTATION	0.3267526045505379	WITHOUT_CLASSIFICATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.999989895046893	WITHOUT_CLASSIFICATION	1.0104953106970485E-5	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.5159879579475302	WITHOUT_CLASSIFICATION	0.48401204205246995	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.5159879579475302	WITHOUT_CLASSIFICATION	0.48401204205246995	IMPLEMENTATION
// TODO: pass this in?	IMPLEMENTATION	0.7426917939735309	IMPLEMENTATION	0.25730820602646914	WITHOUT_CLASSIFICATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9998470189555217	WITHOUT_CLASSIFICATION	1.5298104447821381E-4	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.9001536213599023	IMPLEMENTATION	0.09984637864009771	WITHOUT_CLASSIFICATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.9559851171159582	WITHOUT_CLASSIFICATION	0.04401488288404178	IMPLEMENTATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.9034126890744202	WITHOUT_CLASSIFICATION	0.09658731092557976	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.9772855995545219	WITHOUT_CLASSIFICATION	0.022714400445478143	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9999419162421642	WITHOUT_CLASSIFICATION	5.808375783583395E-5	IMPLEMENTATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9997360853623446	WITHOUT_CLASSIFICATION	2.639146376553811E-4	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.5129299382348274	IMPLEMENTATION	0.48707006176517265	WITHOUT_CLASSIFICATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.9986933687002836	WITHOUT_CLASSIFICATION	0.0013066312997164113	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.7110571276430468	WITHOUT_CLASSIFICATION	0.28894287235695326	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.8938434861073203	WITHOUT_CLASSIFICATION	0.10615651389267969	IMPLEMENTATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.9995030825329753	WITHOUT_CLASSIFICATION	4.969174670247084E-4	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.6159135240067338	IMPLEMENTATION	0.3840864759932661	WITHOUT_CLASSIFICATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.9643117627620349	WITHOUT_CLASSIFICATION	0.035688237237965034	IMPLEMENTATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.9614500356655298	WITHOUT_CLASSIFICATION	0.038549964334470166	IMPLEMENTATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.8834194717042179	WITHOUT_CLASSIFICATION	0.11658052829578218	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.8715195729713389	IMPLEMENTATION	0.1284804270286611	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.6867599655603924	IMPLEMENTATION	0.31324003443960746	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.8715195729713389	IMPLEMENTATION	0.1284804270286611	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.6867599655603924	IMPLEMENTATION	0.31324003443960746	WITHOUT_CLASSIFICATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.9375408882257756	IMPLEMENTATION	0.062459111774224335	WITHOUT_CLASSIFICATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.5422252003052124	WITHOUT_CLASSIFICATION	0.4577747996947875	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.6811703200770642	IMPLEMENTATION	0.3188296799229357	WITHOUT_CLASSIFICATION
// TODO: make threadsafe	IMPLEMENTATION	0.6587230112606222	WITHOUT_CLASSIFICATION	0.3412769887393778	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.8154166769800699	WITHOUT_CLASSIFICATION	0.1845833230199302	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.8154166769800699	WITHOUT_CLASSIFICATION	0.1845833230199302	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.9999983104672634	WITHOUT_CLASSIFICATION	1.6895327366834188E-6	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.9999863718042468	WITHOUT_CLASSIFICATION	1.3628195753295429E-5	IMPLEMENTATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.7758109188734975	IMPLEMENTATION	0.22418908112650252	WITHOUT_CLASSIFICATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.623349145498621	IMPLEMENTATION	0.376650854501379	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.7940125311142716	IMPLEMENTATION	0.20598746888572841	WITHOUT_CLASSIFICATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.8425428934201123	IMPLEMENTATION	0.15745710657988765	WITHOUT_CLASSIFICATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.9513253351600348	WITHOUT_CLASSIFICATION	0.048674664839965194	IMPLEMENTATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.9999987439108441	WITHOUT_CLASSIFICATION	1.256089155820811E-6	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.9937950428870701	WITHOUT_CLASSIFICATION	0.006204957112929936	IMPLEMENTATION
// TODO: add trace call?	IMPLEMENTATION	0.6570946937238269	IMPLEMENTATION	0.3429053062761732	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9999539159423362	WITHOUT_CLASSIFICATION	4.608405766384225E-5	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.9999863350979915	WITHOUT_CLASSIFICATION	1.366490200848287E-5	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.9999853880814142	WITHOUT_CLASSIFICATION	1.4611918585686277E-5	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.9855365755452896	WITHOUT_CLASSIFICATION	0.014463424454710244	IMPLEMENTATION
// FIXME: missing arity check	IMPLEMENTATION	0.9999539159423362	WITHOUT_CLASSIFICATION	4.608405766384225E-5	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.99996345580419	WITHOUT_CLASSIFICATION	3.654419581000793E-5	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.9997542325216895	WITHOUT_CLASSIFICATION	2.4576747831048907E-4	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.5884896014716057	WITHOUT_CLASSIFICATION	0.4115103985283944	IMPLEMENTATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.9998200568105216	WITHOUT_CLASSIFICATION	1.7994318947853132E-4	IMPLEMENTATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.999472898795548	WITHOUT_CLASSIFICATION	5.271012044520968E-4	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.9996430469160071	WITHOUT_CLASSIFICATION	3.5695308399280584E-4	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.9998694155742606	WITHOUT_CLASSIFICATION	1.305844257394519E-4	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9999854957588555	WITHOUT_CLASSIFICATION	1.450424114449837E-5	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9999957080849686	WITHOUT_CLASSIFICATION	4.291915031454954E-6	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.9999800381052362	WITHOUT_CLASSIFICATION	1.9961894763884103E-5	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.5469827435483433	WITHOUT_CLASSIFICATION	0.4530172564516567	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.5469827435483433	WITHOUT_CLASSIFICATION	0.4530172564516567	IMPLEMENTATION
// TODO: validate port as numeric	IMPLEMENTATION	0.7877524028964896	WITHOUT_CLASSIFICATION	0.21224759710351038	IMPLEMENTATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9980000572651184	IMPLEMENTATION	0.0019999427348815824	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.8436706987360175	WITHOUT_CLASSIFICATION	0.1563293012639825	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.9728217150103516	WITHOUT_CLASSIFICATION	0.02717828498964837	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.9728217150103516	WITHOUT_CLASSIFICATION	0.02717828498964837	IMPLEMENTATION
// TODO: other reserved names?	IMPLEMENTATION	0.6171600311718645	IMPLEMENTATION	0.38283996882813554	WITHOUT_CLASSIFICATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.9489876263933081	WITHOUT_CLASSIFICATION	0.05101237360669177	IMPLEMENTATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.5896103923726129	WITHOUT_CLASSIFICATION	0.4103896076273871	IMPLEMENTATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.9845128692425182	WITHOUT_CLASSIFICATION	0.015487130757481739	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.9854588858331027	WITHOUT_CLASSIFICATION	0.01454111416689736	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.9854588858331027	WITHOUT_CLASSIFICATION	0.01454111416689736	IMPLEMENTATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.8461499613378778	IMPLEMENTATION	0.15385003866212216	WITHOUT_CLASSIFICATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9920785651947271	WITHOUT_CLASSIFICATION	0.007921434805272843	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9982303886534263	WITHOUT_CLASSIFICATION	0.0017696113465737015	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.738119401334883	IMPLEMENTATION	0.2618805986651169	WITHOUT_CLASSIFICATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.7412062586504204	IMPLEMENTATION	0.2587937413495796	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.9999877358856313	WITHOUT_CLASSIFICATION	1.2264114368645325E-5	IMPLEMENTATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.7098816827330569	WITHOUT_CLASSIFICATION	0.2901183172669431	IMPLEMENTATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.9999991120096584	WITHOUT_CLASSIFICATION	8.879903417200769E-7	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9998432303151739	WITHOUT_CLASSIFICATION	1.5676968482605428E-4	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9998432303151739	WITHOUT_CLASSIFICATION	1.5676968482605428E-4	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.9999234233672786	WITHOUT_CLASSIFICATION	7.657663272144823E-5	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.999844983218768	WITHOUT_CLASSIFICATION	1.550167812319557E-4	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9999911135250287	WITHOUT_CLASSIFICATION	8.8864749713899E-6	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9999911135250287	WITHOUT_CLASSIFICATION	8.8864749713899E-6	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.940355645830693	WITHOUT_CLASSIFICATION	0.059644354169306885	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9999240123235561	WITHOUT_CLASSIFICATION	7.598767644388458E-5	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9999240123235561	WITHOUT_CLASSIFICATION	7.598767644388458E-5	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9999240123235561	WITHOUT_CLASSIFICATION	7.598767644388458E-5	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.9861313617780166	IMPLEMENTATION	0.013868638221983377	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.9861313617780166	IMPLEMENTATION	0.013868638221983377	WITHOUT_CLASSIFICATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.9609393360973367	IMPLEMENTATION	0.0390606639026633	WITHOUT_CLASSIFICATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9987329421187742	WITHOUT_CLASSIFICATION	0.0012670578812258417	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.9999380674891742	WITHOUT_CLASSIFICATION	6.1932510825728E-5	IMPLEMENTATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9973583554824714	IMPLEMENTATION	0.0026416445175286006	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.98396299567463	IMPLEMENTATION	0.016037004325370054	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.98396299567463	IMPLEMENTATION	0.016037004325370054	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.98396299567463	IMPLEMENTATION	0.016037004325370054	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.7940125311142716	IMPLEMENTATION	0.20598746888572841	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.7940125311142716	IMPLEMENTATION	0.20598746888572841	WITHOUT_CLASSIFICATION
// TODO: check for ascii string	IMPLEMENTATION	0.6830432546008067	IMPLEMENTATION	0.3169567453991932	WITHOUT_CLASSIFICATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.8197604311426449	IMPLEMENTATION	0.1802395688573551	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.8154166769800699	WITHOUT_CLASSIFICATION	0.1845833230199302	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.8154166769800699	WITHOUT_CLASSIFICATION	0.1845833230199302	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.5968517002966524	WITHOUT_CLASSIFICATION	0.40314829970334765	IMPLEMENTATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.9821082360915419	WITHOUT_CLASSIFICATION	0.01789176390845817	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9999419162421642	WITHOUT_CLASSIFICATION	5.808375783583395E-5	IMPLEMENTATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9999952810238882	WITHOUT_CLASSIFICATION	4.718976111720904E-6	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.9092720701050445	IMPLEMENTATION	0.09072792989495555	WITHOUT_CLASSIFICATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.6362281487764283	WITHOUT_CLASSIFICATION	0.36377185122357164	IMPLEMENTATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.9960749461124127	WITHOUT_CLASSIFICATION	0.003925053887587342	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999435927205749	WITHOUT_CLASSIFICATION	5.6407279425144315E-5	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9999946146980057	WITHOUT_CLASSIFICATION	5.385301994372091E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999686256875012	WITHOUT_CLASSIFICATION	3.137431249877884E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999686256875012	WITHOUT_CLASSIFICATION	3.137431249877884E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999393500468904	WITHOUT_CLASSIFICATION	6.06499531097021E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999393500468904	WITHOUT_CLASSIFICATION	6.06499531097021E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999401706062695	WITHOUT_CLASSIFICATION	5.982939373057684E-5	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999997183060566	WITHOUT_CLASSIFICATION	2.81693943412023E-7	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9999951198925258	WITHOUT_CLASSIFICATION	4.880107474278221E-6	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999951111987262	WITHOUT_CLASSIFICATION	4.88880127376175E-6	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999873727012858	WITHOUT_CLASSIFICATION	1.2627298714207673E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999873727012858	WITHOUT_CLASSIFICATION	1.2627298714207673E-5	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.999995652630492	WITHOUT_CLASSIFICATION	4.347369508089265E-6	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999984637119627	WITHOUT_CLASSIFICATION	1.5362880372959808E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999984637119627	WITHOUT_CLASSIFICATION	1.5362880372959808E-5	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9999276919994174	WITHOUT_CLASSIFICATION	7.230800058259047E-5	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999640517358125	WITHOUT_CLASSIFICATION	3.59482641875494E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999675772449418	WITHOUT_CLASSIFICATION	3.242275505825771E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999675772449418	WITHOUT_CLASSIFICATION	3.242275505825771E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999675772449418	WITHOUT_CLASSIFICATION	3.242275505825771E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999675772449418	WITHOUT_CLASSIFICATION	3.242275505825771E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999675772449418	WITHOUT_CLASSIFICATION	3.242275505825771E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999675772449418	WITHOUT_CLASSIFICATION	3.242275505825771E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999675772449418	WITHOUT_CLASSIFICATION	3.242275505825771E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999387971675352	WITHOUT_CLASSIFICATION	6.120283246483815E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999387971675352	WITHOUT_CLASSIFICATION	6.120283246483815E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999387971675352	WITHOUT_CLASSIFICATION	6.120283246483815E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999387971675352	WITHOUT_CLASSIFICATION	6.120283246483815E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999387971675352	WITHOUT_CLASSIFICATION	6.120283246483815E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999387971675352	WITHOUT_CLASSIFICATION	6.120283246483815E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999387971675352	WITHOUT_CLASSIFICATION	6.120283246483815E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999395474297077	WITHOUT_CLASSIFICATION	6.0452570292381336E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999395474297077	WITHOUT_CLASSIFICATION	6.0452570292381336E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999395474297077	WITHOUT_CLASSIFICATION	6.0452570292381336E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999395474297077	WITHOUT_CLASSIFICATION	6.0452570292381336E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999395474297077	WITHOUT_CLASSIFICATION	6.0452570292381336E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999395474297077	WITHOUT_CLASSIFICATION	6.0452570292381336E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999872575864216	WITHOUT_CLASSIFICATION	1.2742413578328805E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999872575864216	WITHOUT_CLASSIFICATION	1.2742413578328805E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999872575864216	WITHOUT_CLASSIFICATION	1.2742413578328805E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999872575864216	WITHOUT_CLASSIFICATION	1.2742413578328805E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999872575864216	WITHOUT_CLASSIFICATION	1.2742413578328805E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999872575864216	WITHOUT_CLASSIFICATION	1.2742413578328805E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999984497066632	WITHOUT_CLASSIFICATION	1.5502933368033322E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999984497066632	WITHOUT_CLASSIFICATION	1.5502933368033322E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999984497066632	WITHOUT_CLASSIFICATION	1.5502933368033322E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999984497066632	WITHOUT_CLASSIFICATION	1.5502933368033322E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999984497066632	WITHOUT_CLASSIFICATION	1.5502933368033322E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999984497066632	WITHOUT_CLASSIFICATION	1.5502933368033322E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999984497066632	WITHOUT_CLASSIFICATION	1.5502933368033322E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999880778684858	WITHOUT_CLASSIFICATION	1.1922131514275795E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999880778684858	WITHOUT_CLASSIFICATION	1.1922131514275795E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999880778684858	WITHOUT_CLASSIFICATION	1.1922131514275795E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999880778684858	WITHOUT_CLASSIFICATION	1.1922131514275795E-5	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999376219041142	WITHOUT_CLASSIFICATION	6.237809588580498E-5	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999376219041142	WITHOUT_CLASSIFICATION	6.237809588580498E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999919498294844	WITHOUT_CLASSIFICATION	8.050170515616613E-6	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9999930208886301	WITHOUT_CLASSIFICATION	6.979111369856885E-6	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9999748878923539	WITHOUT_CLASSIFICATION	2.5112107646028816E-5	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.999999510249622	WITHOUT_CLASSIFICATION	4.897503779917718E-7	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999972854358252	WITHOUT_CLASSIFICATION	2.7145641748147738E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999945300604041	WITHOUT_CLASSIFICATION	5.469939595927932E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999945300604041	WITHOUT_CLASSIFICATION	5.469939595927932E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999945300604041	WITHOUT_CLASSIFICATION	5.469939595927932E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999945300604041	WITHOUT_CLASSIFICATION	5.469939595927932E-6	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.999998773395145	WITHOUT_CLASSIFICATION	1.2266048550272592E-6	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999969330287041	WITHOUT_CLASSIFICATION	3.0669712958379208E-6	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999526019755276	WITHOUT_CLASSIFICATION	4.739802447242458E-5	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999509204086876	WITHOUT_CLASSIFICATION	4.907959131232876E-5	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9999337652278282	WITHOUT_CLASSIFICATION	6.623477217183205E-5	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999998344204596	WITHOUT_CLASSIFICATION	1.6557954041069933E-7	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999990241768726	WITHOUT_CLASSIFICATION	9.7582312742323E-7	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999993161403854	WITHOUT_CLASSIFICATION	6.838596146719731E-7	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999994656596469	WITHOUT_CLASSIFICATION	5.343403530728611E-7	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999929221137056	WITHOUT_CLASSIFICATION	7.077886294399082E-6	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999696141756393	WITHOUT_CLASSIFICATION	3.038582436056774E-5	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999980500822576	WITHOUT_CLASSIFICATION	1.949917742458457E-6	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.999976641388111	WITHOUT_CLASSIFICATION	2.335861188891922E-5	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999937670681454	WITHOUT_CLASSIFICATION	6.232931854647742E-6	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999976078117868	WITHOUT_CLASSIFICATION	2.39218821310364E-6	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.999969271715998	WITHOUT_CLASSIFICATION	3.07282840019744E-5	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999962547820748	WITHOUT_CLASSIFICATION	3.7452179251701527E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999945300604041	WITHOUT_CLASSIFICATION	5.469939595927932E-6	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999983269024714	WITHOUT_CLASSIFICATION	1.6730975286262403E-6	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999982009539794	WITHOUT_CLASSIFICATION	1.7990460205725897E-6	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999981368100689	WITHOUT_CLASSIFICATION	1.863189931107381E-6	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999647984262364	WITHOUT_CLASSIFICATION	3.520157376357286E-5	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.999996724836392	WITHOUT_CLASSIFICATION	3.275163607871422E-6	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999924459317094	WITHOUT_CLASSIFICATION	7.5540682905766534E-6	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9998731001543051	WITHOUT_CLASSIFICATION	1.268998456949042E-4	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999977131859701	WITHOUT_CLASSIFICATION	2.2868140299199932E-6	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999054486831547	WITHOUT_CLASSIFICATION	9.455131684537976E-5	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999998587567795	WITHOUT_CLASSIFICATION	1.4124322057305495E-7	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999980967815489	WITHOUT_CLASSIFICATION	1.903218451084419E-6	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999897574510256	WITHOUT_CLASSIFICATION	1.0242548974459251E-5	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999897518069967	WITHOUT_CLASSIFICATION	1.0248193003366538E-5	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999635855855031	WITHOUT_CLASSIFICATION	3.641441449688207E-5	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999858207862685	WITHOUT_CLASSIFICATION	1.4179213731420768E-5	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999948418337179	WITHOUT_CLASSIFICATION	5.158166282027028E-6	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9999957913020348	WITHOUT_CLASSIFICATION	4.2086979651699455E-6	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999996275378888	WITHOUT_CLASSIFICATION	3.7246211108426577E-7	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999982238585834	WITHOUT_CLASSIFICATION	1.7761414165800803E-6	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.999999184432281	WITHOUT_CLASSIFICATION	8.155677189205254E-7	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999983530376134	WITHOUT_CLASSIFICATION	1.6469623866575527E-6	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999905159747536	WITHOUT_CLASSIFICATION	9.484025246366542E-6	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999982716771846	WITHOUT_CLASSIFICATION	1.7283228154918622E-6	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9998926270385969	WITHOUT_CLASSIFICATION	1.0737296140312221E-4	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999710564724547	WITHOUT_CLASSIFICATION	2.8943527545382718E-5	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9999362798254466	WITHOUT_CLASSIFICATION	6.372017455336056E-5	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999941165597415	WITHOUT_CLASSIFICATION	5.883440258621491E-6	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999996218789385	WITHOUT_CLASSIFICATION	3.781210614984713E-7	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999999615392362	WITHOUT_CLASSIFICATION	3.8460763797139825E-8	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999979720587672	WITHOUT_CLASSIFICATION	2.027941232889309E-6	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999873452138709	WITHOUT_CLASSIFICATION	1.2654786129027105E-5	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999965091660579	WITHOUT_CLASSIFICATION	3.49083394217918E-6	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999960735904406	WITHOUT_CLASSIFICATION	3.926409559432291E-6	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999975888743333	WITHOUT_CLASSIFICATION	2.4111256666689144E-6	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999698207623008	WITHOUT_CLASSIFICATION	3.0179237699146723E-5	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999824655046738	WITHOUT_CLASSIFICATION	1.753449532612987E-5	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.99999943722963	WITHOUT_CLASSIFICATION	5.627703698493052E-7	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999919406462416	WITHOUT_CLASSIFICATION	8.059353758427659E-6	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999975901142539	WITHOUT_CLASSIFICATION	2.409885746133683E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999971821338449	WITHOUT_CLASSIFICATION	2.8178661550468866E-6	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999993334775186	WITHOUT_CLASSIFICATION	6.66522481294022E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999939907443013	WITHOUT_CLASSIFICATION	6.009255698758919E-6	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999933174247654	WITHOUT_CLASSIFICATION	6.68257523466781E-6	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999775861780696	WITHOUT_CLASSIFICATION	2.2413821930278925E-5	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999775861780696	WITHOUT_CLASSIFICATION	2.2413821930278925E-5	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9998954486016478	WITHOUT_CLASSIFICATION	1.0455139835228125E-4	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999999369611269	WITHOUT_CLASSIFICATION	6.303887313915448E-8	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999941703021056	WITHOUT_CLASSIFICATION	5.829697894428239E-6	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999617223186581	WITHOUT_CLASSIFICATION	3.827768134193374E-5	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999919619403858	WITHOUT_CLASSIFICATION	8.038059614241613E-6	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.999977966920003	WITHOUT_CLASSIFICATION	2.203307999707735E-5	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9999487495017441	WITHOUT_CLASSIFICATION	5.125049825594182E-5	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9999623667827873	WITHOUT_CLASSIFICATION	3.763321721268708E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999939907443013	WITHOUT_CLASSIFICATION	6.009255698758919E-6	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999666641696582	WITHOUT_CLASSIFICATION	3.3335830341794534E-5	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999918084166204	WITHOUT_CLASSIFICATION	8.19158337957993E-6	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999588087337394	WITHOUT_CLASSIFICATION	4.1191266260575815E-5	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.999999047038642	WITHOUT_CLASSIFICATION	9.529613579318931E-7	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999989670815348	WITHOUT_CLASSIFICATION	1.032918465159835E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999957525586823	WITHOUT_CLASSIFICATION	4.247441317719726E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999957525586823	WITHOUT_CLASSIFICATION	4.247441317719726E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999957525586823	WITHOUT_CLASSIFICATION	4.247441317719726E-6	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999844122068262	WITHOUT_CLASSIFICATION	1.5587793173787773E-5	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999987102035008	WITHOUT_CLASSIFICATION	1.2897964991365436E-6	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999976589078143	WITHOUT_CLASSIFICATION	2.34109218571539E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999986791283064	WITHOUT_CLASSIFICATION	1.3208716935814877E-6	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999995455004236	WITHOUT_CLASSIFICATION	4.544995764203595E-7	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.999997819698522	WITHOUT_CLASSIFICATION	2.1803014780283495E-6	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999989733921563	WITHOUT_CLASSIFICATION	1.0266078437960774E-6	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999981544058887	WITHOUT_CLASSIFICATION	1.845594111219125E-6	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999936282154082	WITHOUT_CLASSIFICATION	6.371784591916211E-6	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999936282154082	WITHOUT_CLASSIFICATION	6.371784591916211E-6	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999854240797841	WITHOUT_CLASSIFICATION	1.4575920215808367E-5	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.999997670381104	WITHOUT_CLASSIFICATION	2.3296188960177433E-6	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999935347173968	WITHOUT_CLASSIFICATION	6.465282603172058E-6	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999935347173968	WITHOUT_CLASSIFICATION	6.465282603172058E-6	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999978728054418	WITHOUT_CLASSIFICATION	2.1271945581504497E-6	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999904349454256	WITHOUT_CLASSIFICATION	9.565054574445824E-6	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999915460426742	WITHOUT_CLASSIFICATION	8.453957325858968E-6	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999893016050196	WITHOUT_CLASSIFICATION	1.0698394980426355E-5	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999974165273264	WITHOUT_CLASSIFICATION	2.58347267358465E-6	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.9999972131064666	WITHOUT_CLASSIFICATION	2.7868935333964712E-6	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999903621646139	WITHOUT_CLASSIFICATION	9.637835386069738E-6	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9999813549444602	WITHOUT_CLASSIFICATION	1.8645055539854452E-5	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9999986714447961	WITHOUT_CLASSIFICATION	1.3285552037728044E-6	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.999997819691719	WITHOUT_CLASSIFICATION	2.180308281038152E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999939907443013	WITHOUT_CLASSIFICATION	6.009255698758919E-6	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999885796997832	WITHOUT_CLASSIFICATION	1.1420300216842001E-5	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999968039924325	WITHOUT_CLASSIFICATION	3.196007567439112E-6	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999929207673002	WITHOUT_CLASSIFICATION	7.079232699795812E-6	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999972582474556	WITHOUT_CLASSIFICATION	2.741752544501274E-6	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999998066889121	WITHOUT_CLASSIFICATION	1.933110879318773E-7	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999964268463071	WITHOUT_CLASSIFICATION	3.5731536928248687E-6	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999930968289241	WITHOUT_CLASSIFICATION	6.90317107585604E-6	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999894427575668	WITHOUT_CLASSIFICATION	1.0557242433053629E-5	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999961535001634	WITHOUT_CLASSIFICATION	3.8464998366395854E-6	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999989478452979	WITHOUT_CLASSIFICATION	1.0521547021978202E-6	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999967833512138	WITHOUT_CLASSIFICATION	3.2166487861459467E-6	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999986910442054	WITHOUT_CLASSIFICATION	1.3089557945427538E-6	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999948122156964	WITHOUT_CLASSIFICATION	5.187784303496969E-6	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999888644578021	WITHOUT_CLASSIFICATION	1.1135542197881896E-5	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999900600137006	WITHOUT_CLASSIFICATION	9.939986299341376E-6	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9999305860601536	WITHOUT_CLASSIFICATION	6.94139398464043E-5	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999759639731486	WITHOUT_CLASSIFICATION	2.403602685153173E-5	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9999955916897648	WITHOUT_CLASSIFICATION	4.408310235160648E-6	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999925308160801	WITHOUT_CLASSIFICATION	7.4691839199826906E-6	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999320426729407	WITHOUT_CLASSIFICATION	6.79573270593798E-5	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999936363062623	WITHOUT_CLASSIFICATION	6.363693737681853E-6	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999977756064828	WITHOUT_CLASSIFICATION	2.2243935170610833E-6	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999970628384154	WITHOUT_CLASSIFICATION	2.9371615845832635E-6	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999988998074129	WITHOUT_CLASSIFICATION	1.1001925871069466E-6	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999982938933714	WITHOUT_CLASSIFICATION	1.7061066286977817E-6	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999996570467825	WITHOUT_CLASSIFICATION	3.429532175390663E-7	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999991917568251	WITHOUT_CLASSIFICATION	8.082431749367825E-7	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.999997660288767	WITHOUT_CLASSIFICATION	2.3397112329421407E-6	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999998652801049	WITHOUT_CLASSIFICATION	1.3471989509876144E-7	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999980473127775	WITHOUT_CLASSIFICATION	1.9526872225358216E-6	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999986801675799	WITHOUT_CLASSIFICATION	1.3198324201350257E-6	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9999977969606783	WITHOUT_CLASSIFICATION	2.2030393216936147E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998345467364261	WITHOUT_CLASSIFICATION	1.6545326357384204E-4	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999992638422688	WITHOUT_CLASSIFICATION	7.361577312348733E-7	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999894668831455	WITHOUT_CLASSIFICATION	1.0533116854509497E-5	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999916010831053	WITHOUT_CLASSIFICATION	8.398916894704806E-6	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999981301284234	WITHOUT_CLASSIFICATION	1.8698715765090089E-6	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999940627717936	WITHOUT_CLASSIFICATION	5.937228206468486E-6	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999985626961526	WITHOUT_CLASSIFICATION	1.437303847321537E-6	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999971146958732	WITHOUT_CLASSIFICATION	2.8853041268754264E-6	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.999997619697807	WITHOUT_CLASSIFICATION	2.380302193040005E-6	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9999990613529735	WITHOUT_CLASSIFICATION	9.386470265841959E-7	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999625719353176	WITHOUT_CLASSIFICATION	3.742806468244748E-5	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999362184011452	WITHOUT_CLASSIFICATION	6.378159885484244E-5	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9999953842877459	WITHOUT_CLASSIFICATION	4.615712254025721E-6	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.999980649518087	WITHOUT_CLASSIFICATION	1.935048191303599E-5	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9999393360498393	WITHOUT_CLASSIFICATION	6.066395016071913E-5	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999962874953725	WITHOUT_CLASSIFICATION	3.7125046274381553E-6	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.999993586707777	WITHOUT_CLASSIFICATION	6.413292222932695E-6	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999875222383205	WITHOUT_CLASSIFICATION	1.247776167947251E-5	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999949069285179	WITHOUT_CLASSIFICATION	5.0930714820236975E-6	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999714671990875	WITHOUT_CLASSIFICATION	2.8532800912441616E-5	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999190881018858	WITHOUT_CLASSIFICATION	8.091189811421594E-5	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999978314967103	WITHOUT_CLASSIFICATION	2.1685032897883425E-6	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999903826214511	WITHOUT_CLASSIFICATION	9.617378548836945E-6	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999951443830521	WITHOUT_CLASSIFICATION	4.855616947924376E-6	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9992900554360349	WITHOUT_CLASSIFICATION	7.099445639652113E-4	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.999998198652932	WITHOUT_CLASSIFICATION	1.801347067856402E-6	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999995191087011	WITHOUT_CLASSIFICATION	4.808912988078276E-7	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.999962669603355	WITHOUT_CLASSIFICATION	3.733039664496832E-5	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.999981602885776	WITHOUT_CLASSIFICATION	1.8397114224054057E-5	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.999981602885776	WITHOUT_CLASSIFICATION	1.8397114224054057E-5	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999935611324646	WITHOUT_CLASSIFICATION	6.438867535483909E-6	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999935611324646	WITHOUT_CLASSIFICATION	6.438867535483909E-6	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.999986854714655	WITHOUT_CLASSIFICATION	1.3145285344917794E-5	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.999986854714655	WITHOUT_CLASSIFICATION	1.3145285344917794E-5	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999732936928964	WITHOUT_CLASSIFICATION	2.6706307103606917E-5	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999732936928964	WITHOUT_CLASSIFICATION	2.6706307103606917E-5	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9999672003235819	WITHOUT_CLASSIFICATION	3.279967641804457E-5	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9999516742354252	WITHOUT_CLASSIFICATION	4.8325764574753914E-5	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999980656422095	WITHOUT_CLASSIFICATION	1.9343577905582058E-6	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999951736819149	WITHOUT_CLASSIFICATION	4.826318084973324E-6	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999966479725995	WITHOUT_CLASSIFICATION	3.3520274005960864E-6	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999979583528941	WITHOUT_CLASSIFICATION	2.0416471058491994E-6	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999527791907763	WITHOUT_CLASSIFICATION	4.722080922377406E-5	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999973855880828	WITHOUT_CLASSIFICATION	2.6144119172924164E-6	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999812276526363	WITHOUT_CLASSIFICATION	1.877234736380134E-5	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999945683384798	WITHOUT_CLASSIFICATION	5.4316615201601945E-6	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.99996113106428	WITHOUT_CLASSIFICATION	3.886893571991978E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999832119635544	WITHOUT_CLASSIFICATION	1.67880364455403E-5	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999927910772214	WITHOUT_CLASSIFICATION	7.208922778592285E-6	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999913208381415	WITHOUT_CLASSIFICATION	8.6791618585E-6	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999919358533543	WITHOUT_CLASSIFICATION	8.064146645748273E-6	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999888571628065	WITHOUT_CLASSIFICATION	1.1142837193568876E-5	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999985508287194	WITHOUT_CLASSIFICATION	1.449171280652477E-6	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999985793831888	WITHOUT_CLASSIFICATION	1.4206168111927458E-6	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999876792615975	WITHOUT_CLASSIFICATION	1.2320738402561945E-5	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9991584257735863	WITHOUT_CLASSIFICATION	8.415742264138164E-4	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999904660663093	WITHOUT_CLASSIFICATION	9.533933690813357E-6	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999771564398309	WITHOUT_CLASSIFICATION	2.2843560169119476E-5	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999968179671315	WITHOUT_CLASSIFICATION	3.182032868463162E-6	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999907375331762	WITHOUT_CLASSIFICATION	9.262466823711782E-6	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999209047545546	WITHOUT_CLASSIFICATION	7.909524544533544E-5	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999638271284914	WITHOUT_CLASSIFICATION	3.6172871508551075E-5	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999963507981874	WITHOUT_CLASSIFICATION	3.6492018126964397E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9998494951685863	WITHOUT_CLASSIFICATION	1.5050483141361467E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9998494951685863	WITHOUT_CLASSIFICATION	1.5050483141361467E-4	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999960987035806	WITHOUT_CLASSIFICATION	3.9012964193345E-6	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9999852579724163	WITHOUT_CLASSIFICATION	1.474202758375136E-5	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9999814602914612	WITHOUT_CLASSIFICATION	1.8539708538767452E-5	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999736709555501	WITHOUT_CLASSIFICATION	2.632904444985806E-5	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999798078014933	WITHOUT_CLASSIFICATION	2.0192198506709506E-5	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999896294643323	WITHOUT_CLASSIFICATION	1.0370535667675355E-5	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999780979085062	WITHOUT_CLASSIFICATION	2.1902091493762478E-5	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999780979085062	WITHOUT_CLASSIFICATION	2.1902091493762478E-5	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999971312046453	WITHOUT_CLASSIFICATION	2.8687953547545647E-6	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9558612143784437	WITHOUT_CLASSIFICATION	0.04413878562155625	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999887445246869	WITHOUT_CLASSIFICATION	1.125547531311693E-5	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999887445246869	WITHOUT_CLASSIFICATION	1.125547531311693E-5	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999592388854619	WITHOUT_CLASSIFICATION	4.076111453821438E-5	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.999999126787457	WITHOUT_CLASSIFICATION	8.732125431084153E-7	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.999999126787457	WITHOUT_CLASSIFICATION	8.732125431084153E-7	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999946388107149	WITHOUT_CLASSIFICATION	5.361189285032426E-6	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999946388107149	WITHOUT_CLASSIFICATION	5.361189285032426E-6	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999786367850593	WITHOUT_CLASSIFICATION	2.136321494077908E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999786367850593	WITHOUT_CLASSIFICATION	2.136321494077908E-5	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9999718783157054	WITHOUT_CLASSIFICATION	2.8121684294562787E-5	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999964687786934	WITHOUT_CLASSIFICATION	3.531221306535794E-6	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999991022427678	WITHOUT_CLASSIFICATION	8.977572322080377E-7	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999976414066433	WITHOUT_CLASSIFICATION	2.3585933566602463E-6	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999993556400237	WITHOUT_CLASSIFICATION	6.443599762166249E-7	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999990037163117	WITHOUT_CLASSIFICATION	9.962836882958184E-7	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999891265582798	WITHOUT_CLASSIFICATION	1.0873441720174873E-5	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999661341666455	WITHOUT_CLASSIFICATION	3.386583335453541E-5	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999891265582798	WITHOUT_CLASSIFICATION	1.0873441720174873E-5	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9999726036574647	WITHOUT_CLASSIFICATION	2.73963425353833E-5	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999923383477898	WITHOUT_CLASSIFICATION	7.66165221019401E-6	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999942148912816	WITHOUT_CLASSIFICATION	5.785108718361517E-6	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.999996993962768	WITHOUT_CLASSIFICATION	3.0060372319333864E-6	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999985073894287	WITHOUT_CLASSIFICATION	1.4926105712027346E-6	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999994708652369	WITHOUT_CLASSIFICATION	5.29134763167279E-7	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.999996871020654	WITHOUT_CLASSIFICATION	3.1289793458618577E-6	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.999978364491036	WITHOUT_CLASSIFICATION	2.1635508963888198E-5	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999955962811857	WITHOUT_CLASSIFICATION	4.4037188142704506E-6	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999993033829948	WITHOUT_CLASSIFICATION	6.966170052553769E-7	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999990351494819	WITHOUT_CLASSIFICATION	9.648505181066062E-7	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999992783278698	WITHOUT_CLASSIFICATION	7.216721302590537E-7	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.9999829571944827	WITHOUT_CLASSIFICATION	1.7042805517331626E-5	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9999951267669235	WITHOUT_CLASSIFICATION	4.873233076497646E-6	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999973991198391	WITHOUT_CLASSIFICATION	2.6008801609613968E-6	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999989366458921	WITHOUT_CLASSIFICATION	1.0633541078949643E-6	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999901172056512	WITHOUT_CLASSIFICATION	9.882794348647402E-6	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999993181162153	WITHOUT_CLASSIFICATION	6.81883784549856E-7	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.999995855314449	WITHOUT_CLASSIFICATION	4.144685551016916E-6	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999748312634714	WITHOUT_CLASSIFICATION	2.5168736528515247E-5	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999957083364942	WITHOUT_CLASSIFICATION	4.291663505761223E-6	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999889267934109	WITHOUT_CLASSIFICATION	1.1073206589200982E-5	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999930242523908	WITHOUT_CLASSIFICATION	6.975747609141814E-6	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9998005095075676	WITHOUT_CLASSIFICATION	1.9949049243233336E-4	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999523610383313	WITHOUT_CLASSIFICATION	4.76389616688088E-5	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9998862654102125	WITHOUT_CLASSIFICATION	1.1373458978744878E-4	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999956668601852	WITHOUT_CLASSIFICATION	4.333139814894716E-6	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9992486413457425	WITHOUT_CLASSIFICATION	7.513586542574477E-4	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999989847725334	WITHOUT_CLASSIFICATION	1.0152274666699062E-6	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999931166548633	WITHOUT_CLASSIFICATION	6.8833451366421484E-6	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999965542060081	WITHOUT_CLASSIFICATION	3.4457939919520117E-6	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999997503953709	WITHOUT_CLASSIFICATION	2.4960462910245543E-7	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999951422573448	WITHOUT_CLASSIFICATION	4.857742655288982E-6	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999370389167569	WITHOUT_CLASSIFICATION	6.296108324305092E-5	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999999269734087	WITHOUT_CLASSIFICATION	7.30265913517915E-8	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999988191317871	WITHOUT_CLASSIFICATION	1.180868212895484E-6	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999960956496114	WITHOUT_CLASSIFICATION	3.904350388562965E-6	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999995520014087	WITHOUT_CLASSIFICATION	4.4799859129249335E-7	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999990479273166	WITHOUT_CLASSIFICATION	9.520726833969072E-7	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.999996762703036	WITHOUT_CLASSIFICATION	3.237296964075656E-6	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999958083762278	WITHOUT_CLASSIFICATION	4.191623772214903E-6	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999998243597114	WITHOUT_CLASSIFICATION	1.7564028866127435E-7	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999978714333999	WITHOUT_CLASSIFICATION	2.128566600031334E-6	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.999997369169989	WITHOUT_CLASSIFICATION	2.63083001099893E-6	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.999993838807491	WITHOUT_CLASSIFICATION	6.161192508905226E-6	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999979670147345	WITHOUT_CLASSIFICATION	2.032985265425414E-6	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999968481388284	WITHOUT_CLASSIFICATION	3.151861171748961E-6	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999738341931684	WITHOUT_CLASSIFICATION	2.616580683156989E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999991817817424	WITHOUT_CLASSIFICATION	8.182182576763332E-7	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999965620133269	WITHOUT_CLASSIFICATION	3.437986673019474E-6	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999896172011006	WITHOUT_CLASSIFICATION	1.0382798899364026E-5	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999970698630344	WITHOUT_CLASSIFICATION	2.9301369656588017E-6	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999931091234621	WITHOUT_CLASSIFICATION	6.8908765378616615E-6	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999829453863721	WITHOUT_CLASSIFICATION	1.7054613627785943E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999954302300688	WITHOUT_CLASSIFICATION	4.569769931245836E-6	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999954302300688	WITHOUT_CLASSIFICATION	4.569769931245836E-6	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999982412821784	WITHOUT_CLASSIFICATION	1.7587178215625613E-6	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999948368388332	WITHOUT_CLASSIFICATION	5.163161166863334E-6	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.999999194338214	WITHOUT_CLASSIFICATION	8.056617858785799E-7	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999972500256671	WITHOUT_CLASSIFICATION	2.7499743328347353E-6	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999935086211489	WITHOUT_CLASSIFICATION	6.491378851084339E-6	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999989019194986	WITHOUT_CLASSIFICATION	1.0980805014499962E-6	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999949543744694	WITHOUT_CLASSIFICATION	5.045625530560181E-6	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999992713348288	WITHOUT_CLASSIFICATION	7.286651712502004E-7	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9994735167423788	WITHOUT_CLASSIFICATION	5.264832576210492E-4	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999984662568663	WITHOUT_CLASSIFICATION	1.533743133664721E-6	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999896817410135	WITHOUT_CLASSIFICATION	1.0318258986369753E-5	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999896817410135	WITHOUT_CLASSIFICATION	1.0318258986369753E-5	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999532561182519	WITHOUT_CLASSIFICATION	4.6743881748057845E-5	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999783992755439	WITHOUT_CLASSIFICATION	2.1600724456117393E-5	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999823295503858	WITHOUT_CLASSIFICATION	1.76704496142544E-5	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999953461752278	WITHOUT_CLASSIFICATION	4.653824772198311E-6	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999901897259349	WITHOUT_CLASSIFICATION	9.810274065125148E-6	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.999997304810721	WITHOUT_CLASSIFICATION	2.695189279042068E-6	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999746578515746	WITHOUT_CLASSIFICATION	2.5342148425426855E-5	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999955157351205	WITHOUT_CLASSIFICATION	4.4842648795822654E-6	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999977938140777	WITHOUT_CLASSIFICATION	2.2061859223586775E-6	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9982998959043687	WITHOUT_CLASSIFICATION	0.0017001040956312998	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999995409560822	WITHOUT_CLASSIFICATION	4.590439177853668E-7	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999700157464109	WITHOUT_CLASSIFICATION	2.9984253589126785E-5	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999510334775857	WITHOUT_CLASSIFICATION	4.896652241425265E-5	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999510334775857	WITHOUT_CLASSIFICATION	4.896652241425265E-5	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999989701312908	WITHOUT_CLASSIFICATION	1.0298687091891736E-6	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999900193693442	WITHOUT_CLASSIFICATION	9.980630655734111E-6	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999989937708146	WITHOUT_CLASSIFICATION	1.0062291853721762E-6	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.999996739382459	WITHOUT_CLASSIFICATION	3.2606175408639133E-6	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999496413586675	WITHOUT_CLASSIFICATION	5.0358641332474386E-5	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999847382400862	WITHOUT_CLASSIFICATION	1.5261759913808774E-5	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999930394544597	WITHOUT_CLASSIFICATION	6.96054554022856E-6	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999761130888456	WITHOUT_CLASSIFICATION	2.3886911154375363E-5	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999868241639721	WITHOUT_CLASSIFICATION	1.3175836027846898E-5	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999959015552881	WITHOUT_CLASSIFICATION	4.0984447119100265E-6	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999823295503858	WITHOUT_CLASSIFICATION	1.76704496142544E-5	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999969987907611	WITHOUT_CLASSIFICATION	3.0012092389112965E-6	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999993238365115	WITHOUT_CLASSIFICATION	6.761634885105901E-7	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999996289008478	WITHOUT_CLASSIFICATION	3.7109915225771367E-7	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.999997174697853	WITHOUT_CLASSIFICATION	2.8253021469532604E-6	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999932259746265	WITHOUT_CLASSIFICATION	6.774025373483718E-6	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.999999059295985	WITHOUT_CLASSIFICATION	9.407040149127376E-7	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999632374098852	WITHOUT_CLASSIFICATION	3.676259011480476E-5	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999993770232417	WITHOUT_CLASSIFICATION	6.229767582259697E-7	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999991913734958	WITHOUT_CLASSIFICATION	8.086265040752727E-7	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999959235268236	WITHOUT_CLASSIFICATION	4.076473176378479E-6	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999933085869744	WITHOUT_CLASSIFICATION	6.691413025572501E-6	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999999711010965	WITHOUT_CLASSIFICATION	2.8898903527878154E-8	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.999984099027482	WITHOUT_CLASSIFICATION	1.5900972518043554E-5	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999988940661351	WITHOUT_CLASSIFICATION	1.1059338648665214E-6	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999951721301091	WITHOUT_CLASSIFICATION	4.827869890824594E-6	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.999992666621148	WITHOUT_CLASSIFICATION	7.333378852016761E-6	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999805303648907	WITHOUT_CLASSIFICATION	1.946963510930761E-5	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.999982422264489	WITHOUT_CLASSIFICATION	1.757773551103023E-5	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999884396920412	WITHOUT_CLASSIFICATION	1.156030795880122E-5	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.9999973169315108	WITHOUT_CLASSIFICATION	2.683068489117513E-6	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999997684440518	WITHOUT_CLASSIFICATION	2.3155594815289705E-7	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999877555491927	WITHOUT_CLASSIFICATION	1.224445080732911E-5	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999990925245523	WITHOUT_CLASSIFICATION	9.074754476366792E-7	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999931146200309	WITHOUT_CLASSIFICATION	6.885379969126884E-6	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999835834951624	WITHOUT_CLASSIFICATION	1.6416504837639422E-5	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999976254199927	WITHOUT_CLASSIFICATION	2.3745800071842247E-6	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.999955517527293	WITHOUT_CLASSIFICATION	4.4482472707025336E-5	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9998883941577582	WITHOUT_CLASSIFICATION	1.1160584224181905E-4	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9999946223658256	WITHOUT_CLASSIFICATION	5.377634174419826E-6	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999988901982885	WITHOUT_CLASSIFICATION	1.1098017115634267E-6	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999581896777922	WITHOUT_CLASSIFICATION	4.181032220786051E-5	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999581896777922	WITHOUT_CLASSIFICATION	4.181032220786051E-5	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9998509233312602	WITHOUT_CLASSIFICATION	1.4907666873973635E-4	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9998473078854672	WITHOUT_CLASSIFICATION	1.5269211453287996E-4	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.9999844442476697	WITHOUT_CLASSIFICATION	1.5555752330312366E-5	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9996146381559956	WITHOUT_CLASSIFICATION	3.8536184400431313E-4	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999986282454978	WITHOUT_CLASSIFICATION	1.3717545022227835E-6	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.999998898306855	WITHOUT_CLASSIFICATION	1.1016931451263142E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999939907443013	WITHOUT_CLASSIFICATION	6.009255698758919E-6	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999718936389422	WITHOUT_CLASSIFICATION	2.8106361057779034E-5	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999956413209836	WITHOUT_CLASSIFICATION	4.358679016347387E-6	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999918595760788	WITHOUT_CLASSIFICATION	8.14042392126438E-6	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.999996650882812	WITHOUT_CLASSIFICATION	3.349117187935536E-6	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9999837239441326	WITHOUT_CLASSIFICATION	1.6276055867388523E-5	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.999999539182077	WITHOUT_CLASSIFICATION	4.608179230176797E-7	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999971146958732	WITHOUT_CLASSIFICATION	2.8853041268754264E-6	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999998332806975	WITHOUT_CLASSIFICATION	1.6671930255849105E-7	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999742522761045	WITHOUT_CLASSIFICATION	2.5747723895512025E-5	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999969149895	WITHOUT_CLASSIFICATION	3.0850104315779164E-9	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999981453907815	WITHOUT_CLASSIFICATION	1.854609218502685E-6	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.999991662813029	WITHOUT_CLASSIFICATION	8.337186971119187E-6	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999885496482741	WITHOUT_CLASSIFICATION	1.1450351725892629E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999750670728553	WITHOUT_CLASSIFICATION	2.4932927144745896E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999750670728553	WITHOUT_CLASSIFICATION	2.4932927144745896E-5	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.99999883142222	WITHOUT_CLASSIFICATION	1.1685777800292377E-6	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999912130282013	WITHOUT_CLASSIFICATION	8.786971798695635E-6	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999966501761219	WITHOUT_CLASSIFICATION	3.3498238780557438E-6	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999726669086835	WITHOUT_CLASSIFICATION	2.7333091316476103E-5	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.999992132961693	WITHOUT_CLASSIFICATION	7.867038307066557E-6	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9998894935452556	WITHOUT_CLASSIFICATION	1.1050645474448175E-4	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999982087453347	WITHOUT_CLASSIFICATION	1.7912546653107271E-6	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999932511311475	WITHOUT_CLASSIFICATION	6.748868852496473E-6	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999975903298429	WITHOUT_CLASSIFICATION	2.409670157139096E-6	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999885955916729	WITHOUT_CLASSIFICATION	1.140440832709478E-5	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9999940124962649	WITHOUT_CLASSIFICATION	5.987503735194113E-6	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999956214187179	WITHOUT_CLASSIFICATION	4.378581282099636E-6	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999861196468259	WITHOUT_CLASSIFICATION	1.388035317402422E-5	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999937933533611	WITHOUT_CLASSIFICATION	6.206646638957611E-6	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999947372225707	WITHOUT_CLASSIFICATION	5.262777429354751E-6	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999375858915552	WITHOUT_CLASSIFICATION	6.241410844470817E-5	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999945005725572	WITHOUT_CLASSIFICATION	5.499427442734985E-6	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9999989620820365	WITHOUT_CLASSIFICATION	1.037917963390792E-6	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999995101364334	WITHOUT_CLASSIFICATION	4.89863566708053E-7	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999994691883829	WITHOUT_CLASSIFICATION	5.308116171291004E-7	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999944880155635	WITHOUT_CLASSIFICATION	5.511984436541432E-6	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999854777551584	WITHOUT_CLASSIFICATION	1.4522244841583266E-5	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999976687140473	WITHOUT_CLASSIFICATION	2.331285952795923E-6	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9998890795516286	WITHOUT_CLASSIFICATION	1.1092044837138649E-4	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999986070926058	WITHOUT_CLASSIFICATION	1.3929073941569507E-6	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999903660780077	WITHOUT_CLASSIFICATION	9.633921992358272E-6	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.9999955039206845	WITHOUT_CLASSIFICATION	4.4960793155809465E-6	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999906529928344	WITHOUT_CLASSIFICATION	9.347007165683086E-6	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999774593613578	WITHOUT_CLASSIFICATION	2.2540638642138628E-5	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999887853984105	WITHOUT_CLASSIFICATION	1.1214601589544185E-5	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999969675600907	WITHOUT_CLASSIFICATION	3.0324399091784146E-6	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999986475963695	WITHOUT_CLASSIFICATION	1.3524036304597079E-6	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.999998315935375	WITHOUT_CLASSIFICATION	1.6840646249504816E-6	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.9999695025118954	WITHOUT_CLASSIFICATION	3.0497488104566036E-5	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999987651181892	WITHOUT_CLASSIFICATION	1.234881810820302E-6	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999999521007114	WITHOUT_CLASSIFICATION	4.7899288709874375E-8	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.999999764160131	WITHOUT_CLASSIFICATION	2.3583986908208101E-7	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9999926632852019	WITHOUT_CLASSIFICATION	7.336714798092268E-6	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999885745619148	WITHOUT_CLASSIFICATION	1.1425438085139084E-5	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999864579491043	WITHOUT_CLASSIFICATION	1.3542050895698312E-5	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999984118200005	WITHOUT_CLASSIFICATION	1.588179999514194E-6	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999971321983396	WITHOUT_CLASSIFICATION	2.867801660275467E-6	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999957534912819	WITHOUT_CLASSIFICATION	4.2465087180305664E-6	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999850701228126	WITHOUT_CLASSIFICATION	1.4929877187494564E-5	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999976109254859	WITHOUT_CLASSIFICATION	2.3890745141314182E-6	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999850701228126	WITHOUT_CLASSIFICATION	1.4929877187494564E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9953298967627509	WITHOUT_CLASSIFICATION	0.00467010323724912	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9625870677222133	WITHOUT_CLASSIFICATION	0.03741293227778677	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999980986476952	WITHOUT_CLASSIFICATION	1.9013523048181687E-6	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.7529835770718007	WITHOUT_CLASSIFICATION	0.24701642292819923	IMPLEMENTATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.999986610226022	WITHOUT_CLASSIFICATION	1.3389773978024622E-5	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.999817451918083	WITHOUT_CLASSIFICATION	1.8254808191700322E-4	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9999979325406075	WITHOUT_CLASSIFICATION	2.067459392502843E-6	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999935190626585	WITHOUT_CLASSIFICATION	6.4809373414065994E-6	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999998988148695	WITHOUT_CLASSIFICATION	1.0118513044022379E-7	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9998524807484702	WITHOUT_CLASSIFICATION	1.475192515297523E-4	IMPLEMENTATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9894551322344775	WITHOUT_CLASSIFICATION	0.010544867765522613	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.999935760975467	WITHOUT_CLASSIFICATION	6.42390245330078E-5	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999855432167347	WITHOUT_CLASSIFICATION	1.445678326528121E-5	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999982764122812	WITHOUT_CLASSIFICATION	1.7235877187353288E-6	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9974779082175357	WITHOUT_CLASSIFICATION	0.0025220917824643045	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9208194152689887	WITHOUT_CLASSIFICATION	0.07918058473101133	IMPLEMENTATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999998971626933	WITHOUT_CLASSIFICATION	1.0283730669092748E-7	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999925118152846	WITHOUT_CLASSIFICATION	7.488184715519958E-6	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999938702330937	WITHOUT_CLASSIFICATION	6.129766906229284E-6	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.999978965431061	WITHOUT_CLASSIFICATION	2.1034568939015775E-5	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999989221920441	WITHOUT_CLASSIFICATION	1.0778079558224589E-6	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.999992465292411	WITHOUT_CLASSIFICATION	7.5347075888707745E-6	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999902038497153	WITHOUT_CLASSIFICATION	9.796150284820127E-6	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999850589278015	WITHOUT_CLASSIFICATION	1.494107219841211E-5	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999921632162646	WITHOUT_CLASSIFICATION	7.836783735346457E-6	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999861245251536	WITHOUT_CLASSIFICATION	1.3875474846378618E-5	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999996654592829	WITHOUT_CLASSIFICATION	3.345407171333327E-7	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.999993243462024	WITHOUT_CLASSIFICATION	6.756537976049373E-6	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999696141756393	WITHOUT_CLASSIFICATION	3.038582436056774E-5	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999992352338872	WITHOUT_CLASSIFICATION	7.64766112859305E-7	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999736511506541	WITHOUT_CLASSIFICATION	2.6348849345994854E-5	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999658475707031	WITHOUT_CLASSIFICATION	3.415242929699544E-5	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999582349686504	WITHOUT_CLASSIFICATION	4.176503134962101E-5	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9999989179375673	WITHOUT_CLASSIFICATION	1.0820624327486885E-6	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.999997285401341	WITHOUT_CLASSIFICATION	2.7145986591162812E-6	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9999988651032075	WITHOUT_CLASSIFICATION	1.13489679253832E-6	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999909235319134	WITHOUT_CLASSIFICATION	9.076468086523658E-6	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999873217036924	WITHOUT_CLASSIFICATION	1.267829630758613E-5	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999988824009661	WITHOUT_CLASSIFICATION	1.1175990338838485E-6	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999376424589171	WITHOUT_CLASSIFICATION	6.23575410828051E-5	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999796456533063	WITHOUT_CLASSIFICATION	2.0354346693654134E-5	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999968116044344	WITHOUT_CLASSIFICATION	3.1883955656405015E-6	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999998667419787	WITHOUT_CLASSIFICATION	1.3325802122938762E-7	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999678236291415	WITHOUT_CLASSIFICATION	3.2176370858440405E-5	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999678236291415	WITHOUT_CLASSIFICATION	3.2176370858440405E-5	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999912156767239	WITHOUT_CLASSIFICATION	8.784323276144417E-6	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9998590673353287	WITHOUT_CLASSIFICATION	1.4093266467123523E-4	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999965703928989	WITHOUT_CLASSIFICATION	3.4296071010862923E-6	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.999999197203575	WITHOUT_CLASSIFICATION	8.027964249851443E-7	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999995222568205	WITHOUT_CLASSIFICATION	4.777431794685541E-7	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.999986192417509	WITHOUT_CLASSIFICATION	1.3807582490925543E-5	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999985361640312	WITHOUT_CLASSIFICATION	1.4638359687513808E-6	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999853479574543	WITHOUT_CLASSIFICATION	1.4652042545777919E-5	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999918193422569	WITHOUT_CLASSIFICATION	8.180657743083079E-6	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999990797675254	WITHOUT_CLASSIFICATION	9.20232474503788E-7	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999991246641587	WITHOUT_CLASSIFICATION	8.753358411539188E-7	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999994205122683	WITHOUT_CLASSIFICATION	5.794877316064201E-7	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999999870974904	WITHOUT_CLASSIFICATION	1.2902509569029104E-8	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999977205987667	WITHOUT_CLASSIFICATION	2.2794012333718782E-6	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999988900185822	WITHOUT_CLASSIFICATION	1.1099814177161848E-6	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9997795062482944	WITHOUT_CLASSIFICATION	2.204937517056154E-4	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999544596339213	WITHOUT_CLASSIFICATION	4.554036607877223E-5	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999918974347478	WITHOUT_CLASSIFICATION	8.102565252173242E-6	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999986400948414	WITHOUT_CLASSIFICATION	1.3599051586518856E-6	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999960259563568	WITHOUT_CLASSIFICATION	3.974043643117922E-6	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.9999879637093995	WITHOUT_CLASSIFICATION	1.2036290600506698E-5	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9999973515086199	WITHOUT_CLASSIFICATION	2.6484913802108093E-6	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9994587988720012	WITHOUT_CLASSIFICATION	5.412011279988301E-4	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999984775535681	WITHOUT_CLASSIFICATION	1.5224464319584517E-6	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999984255637182	WITHOUT_CLASSIFICATION	1.5744362817059193E-6	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999982047432527	WITHOUT_CLASSIFICATION	1.7952567471431595E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999686359596	WITHOUT_CLASSIFICATION	3.13640404014599E-8	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999945978136148	WITHOUT_CLASSIFICATION	5.402186385177647E-6	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999963493811207	WITHOUT_CLASSIFICATION	3.6506188792300925E-6	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999988582390191	WITHOUT_CLASSIFICATION	1.1417609808222118E-6	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.999967594478969	WITHOUT_CLASSIFICATION	3.2405521030943595E-5	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999969656446382	WITHOUT_CLASSIFICATION	3.0343553616782492E-6	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999958138087371	WITHOUT_CLASSIFICATION	4.186191262902606E-6	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999948421306772	WITHOUT_CLASSIFICATION	5.157869322697458E-6	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.999996457042918	WITHOUT_CLASSIFICATION	3.542957082023791E-6	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9984984974725217	WITHOUT_CLASSIFICATION	0.001501502527478268	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999761037547461	WITHOUT_CLASSIFICATION	2.3896245253903706E-5	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999675430918985	WITHOUT_CLASSIFICATION	3.245690810159666E-5	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999939443226376	WITHOUT_CLASSIFICATION	6.0556773624318235E-6	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999722731672436	WITHOUT_CLASSIFICATION	2.772683275639928E-5	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.999991250971187	WITHOUT_CLASSIFICATION	8.74902881290695E-6	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.999995109352128	WITHOUT_CLASSIFICATION	4.8906478720761985E-6	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999963993531474	WITHOUT_CLASSIFICATION	3.6006468527021903E-6	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999969475727921	WITHOUT_CLASSIFICATION	3.0524272078894302E-6	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999915552563717	WITHOUT_CLASSIFICATION	8.444743628257513E-6	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999879626392851	WITHOUT_CLASSIFICATION	1.203736071488802E-5	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999926007032648	WITHOUT_CLASSIFICATION	7.399296735092779E-6	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999997179920429	WITHOUT_CLASSIFICATION	2.820079570794766E-7	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.9999460379065532	WITHOUT_CLASSIFICATION	5.396209344674918E-5	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999958241112985	WITHOUT_CLASSIFICATION	4.175888701453975E-6	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.999999382284564	WITHOUT_CLASSIFICATION	6.177154360833886E-7	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999846591265534	WITHOUT_CLASSIFICATION	1.5340873446528824E-5	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.999988350046961	WITHOUT_CLASSIFICATION	1.1649953039100023E-5	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999956361934995	WITHOUT_CLASSIFICATION	4.363806500508359E-6	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999158901612528	WITHOUT_CLASSIFICATION	8.41098387471439E-5	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999993940626074	WITHOUT_CLASSIFICATION	6.059373926062225E-7	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999975025849567	WITHOUT_CLASSIFICATION	2.4974150434038264E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999820254514952	WITHOUT_CLASSIFICATION	1.7974548504787293E-5	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.999955857111372	WITHOUT_CLASSIFICATION	4.414288862809342E-5	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999859079837492	WITHOUT_CLASSIFICATION	1.4092016250798106E-5	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999908747057974	WITHOUT_CLASSIFICATION	9.125294202502737E-6	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999955189179571	WITHOUT_CLASSIFICATION	4.481082042936807E-6	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.99999810904527	WITHOUT_CLASSIFICATION	1.8909547300278988E-6	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999991735377496	WITHOUT_CLASSIFICATION	8.26462250364942E-7	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.999983115433565	WITHOUT_CLASSIFICATION	1.6884566435099064E-5	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999966750401289	WITHOUT_CLASSIFICATION	3.324959871090568E-5	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999718054932119	WITHOUT_CLASSIFICATION	2.819450678807877E-5	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999980042765777	WITHOUT_CLASSIFICATION	1.9957234222292345E-6	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.9999809309834765	WITHOUT_CLASSIFICATION	1.906901652340769E-5	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999917988430683	WITHOUT_CLASSIFICATION	8.20115693165905E-6	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999912542223008	WITHOUT_CLASSIFICATION	8.745777699280537E-6	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999992491292725	WITHOUT_CLASSIFICATION	7.508707275246399E-7	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999102784165779	WITHOUT_CLASSIFICATION	8.972158342218919E-5	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999666119037062	WITHOUT_CLASSIFICATION	3.338809629381773E-5	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9999733845680151	WITHOUT_CLASSIFICATION	2.661543198490609E-5	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9999735012768022	WITHOUT_CLASSIFICATION	2.6498723197848943E-5	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9999703417079983	WITHOUT_CLASSIFICATION	2.9658292001716385E-5	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9999703801525519	WITHOUT_CLASSIFICATION	2.961984744817509E-5	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9999685873973924	WITHOUT_CLASSIFICATION	3.141260260771765E-5	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9999662942403376	WITHOUT_CLASSIFICATION	3.3705759662407086E-5	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9999661470514093	WITHOUT_CLASSIFICATION	3.385294859074288E-5	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9999655384185249	WITHOUT_CLASSIFICATION	3.446158147513303E-5	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9999668571780567	WITHOUT_CLASSIFICATION	3.3142821943265256E-5	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9999671905343457	WITHOUT_CLASSIFICATION	3.280946565444368E-5	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9999722884065639	WITHOUT_CLASSIFICATION	2.7711593436118676E-5	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9999745920771262	WITHOUT_CLASSIFICATION	2.540792287367434E-5	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9999744512818001	WITHOUT_CLASSIFICATION	2.5548718199838526E-5	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9999719425435528	WITHOUT_CLASSIFICATION	2.8057456447258194E-5	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9999719405542644	WITHOUT_CLASSIFICATION	2.805944573565576E-5	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9999714780255691	WITHOUT_CLASSIFICATION	2.852197443090435E-5	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9999726885002845	WITHOUT_CLASSIFICATION	2.7311499715389802E-5	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9999749516558499	WITHOUT_CLASSIFICATION	2.5048344150052563E-5	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9999737270454366	WITHOUT_CLASSIFICATION	2.6272954563293388E-5	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9999426247775857	WITHOUT_CLASSIFICATION	5.737522241446924E-5	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.999964765276814	WITHOUT_CLASSIFICATION	3.523472318606594E-5	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999778342916816	WITHOUT_CLASSIFICATION	2.2165708318360744E-5	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999970933473674	WITHOUT_CLASSIFICATION	2.906652632584117E-6	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999680063136643	WITHOUT_CLASSIFICATION	3.1993686335676053E-5	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999964086175883	WITHOUT_CLASSIFICATION	3.591382411682034E-6	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999851657267683	WITHOUT_CLASSIFICATION	1.4834273231683961E-5	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999853279389428	WITHOUT_CLASSIFICATION	1.4672061057236672E-5	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999878236571478	WITHOUT_CLASSIFICATION	1.2176342852206422E-5	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999966103793153	WITHOUT_CLASSIFICATION	3.3896206845758263E-6	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.8674411872588116	WITHOUT_CLASSIFICATION	0.13255881274118844	IMPLEMENTATION
// integer division	WITHOUT_CLASSIFICATION	0.9999925921546339	WITHOUT_CLASSIFICATION	7.407845366063208E-6	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.999999680588645	WITHOUT_CLASSIFICATION	3.194113550936202E-7	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999980365411865	WITHOUT_CLASSIFICATION	1.963458813586944E-6	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999980365411865	WITHOUT_CLASSIFICATION	1.963458813586944E-6	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999956912451177	WITHOUT_CLASSIFICATION	4.308754882358447E-6	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999840733037028	WITHOUT_CLASSIFICATION	1.592669629733297E-5	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999899484151	WITHOUT_CLASSIFICATION	1.0051584941231884E-8	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.999993508948672	WITHOUT_CLASSIFICATION	6.491051327892479E-6	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.999997838233314	WITHOUT_CLASSIFICATION	2.161766686019226E-6	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.999989938837938	WITHOUT_CLASSIFICATION	1.0061162061963417E-5	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9999818185223479	WITHOUT_CLASSIFICATION	1.8181477652069865E-5	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999944357097819	WITHOUT_CLASSIFICATION	5.564290218212213E-6	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.999968847990943	WITHOUT_CLASSIFICATION	3.1152009057013165E-5	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9999862729339212	WITHOUT_CLASSIFICATION	1.3727066078802624E-5	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999949689130051	WITHOUT_CLASSIFICATION	5.031086994858823E-6	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999966978571038	WITHOUT_CLASSIFICATION	3.3021428962125776E-6	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9999833538792164	WITHOUT_CLASSIFICATION	1.6646120783624587E-5	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999721018103871	WITHOUT_CLASSIFICATION	2.789818961293608E-5	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999720133671071	WITHOUT_CLASSIFICATION	2.798663289297321E-5	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.9999678124691875	WITHOUT_CLASSIFICATION	3.2187530812451274E-5	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999924459317094	WITHOUT_CLASSIFICATION	7.5540682905766534E-6	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.999998566836624	WITHOUT_CLASSIFICATION	1.433163376000211E-6	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.99999478372017	WITHOUT_CLASSIFICATION	5.216279829959265E-6	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999534586442156	WITHOUT_CLASSIFICATION	4.6541355784488866E-5	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999987405042438	WITHOUT_CLASSIFICATION	1.2594957563242589E-6	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999998331926128	WITHOUT_CLASSIFICATION	1.6680738722450293E-7	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999822029737022	WITHOUT_CLASSIFICATION	1.7797026297760308E-5	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999877663933837	WITHOUT_CLASSIFICATION	1.2233606616278752E-5	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999954384882855	WITHOUT_CLASSIFICATION	4.561511714520285E-6	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999958216404474	WITHOUT_CLASSIFICATION	4.178359552572205E-6	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999950269916894	WITHOUT_CLASSIFICATION	4.973008310604843E-6	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999891843865013	WITHOUT_CLASSIFICATION	1.0815613498784667E-5	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999991257747654	WITHOUT_CLASSIFICATION	8.742252345123322E-7	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999564435884192	WITHOUT_CLASSIFICATION	4.355641158084017E-5	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999844231586454	WITHOUT_CLASSIFICATION	1.557684135463718E-5	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999972064862799	WITHOUT_CLASSIFICATION	2.7935137201086915E-6	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999268634283864	WITHOUT_CLASSIFICATION	7.313657161363197E-5	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999734394559759	WITHOUT_CLASSIFICATION	2.6560544024055147E-5	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999972911146111	WITHOUT_CLASSIFICATION	2.7088853888504964E-6	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999963340670255	WITHOUT_CLASSIFICATION	3.6659329744602564E-6	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999966491778999	WITHOUT_CLASSIFICATION	3.3508221001534035E-6	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999980097342313	WITHOUT_CLASSIFICATION	1.990265768751722E-6	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999835248351306	WITHOUT_CLASSIFICATION	1.6475164869252515E-5	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999986369844499	WITHOUT_CLASSIFICATION	1.3630155500816614E-6	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999989446727902	WITHOUT_CLASSIFICATION	1.0553272098291703E-6	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999973567462096	WITHOUT_CLASSIFICATION	2.643253790288039E-6	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999971223528789	WITHOUT_CLASSIFICATION	2.87764712123034E-6	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999781836624478	WITHOUT_CLASSIFICATION	2.1816337552141115E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999781836624478	WITHOUT_CLASSIFICATION	2.1816337552141115E-5	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999903768054511	WITHOUT_CLASSIFICATION	9.62319454887684E-6	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999799122722641	WITHOUT_CLASSIFICATION	2.0087727735824197E-5	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999969495489451	WITHOUT_CLASSIFICATION	3.0504510548298542E-6	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9999504136772684	WITHOUT_CLASSIFICATION	4.9586322731646796E-5	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999959081569499	WITHOUT_CLASSIFICATION	4.091843050085343E-6	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9999869780724026	WITHOUT_CLASSIFICATION	1.3021927597539488E-5	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999898076458449	WITHOUT_CLASSIFICATION	1.0192354155170187E-5	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999821320615505	WITHOUT_CLASSIFICATION	1.7867938449504748E-5	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.999987828348794	WITHOUT_CLASSIFICATION	1.2171651206032423E-5	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999943171803444	WITHOUT_CLASSIFICATION	5.682819655593214E-6	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999973198684801	WITHOUT_CLASSIFICATION	2.680131519812386E-6	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999986215533193	WITHOUT_CLASSIFICATION	1.3784466807757877E-6	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999989919822461	WITHOUT_CLASSIFICATION	1.0080177539296867E-6	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999984100621713	WITHOUT_CLASSIFICATION	1.5899378287312976E-6	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.849120809033366	WITHOUT_CLASSIFICATION	0.1508791909666341	IMPLEMENTATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9998996059056405	WITHOUT_CLASSIFICATION	1.0039409435951205E-4	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999973102876376	WITHOUT_CLASSIFICATION	2.6897123623993794E-6	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999975901847676	WITHOUT_CLASSIFICATION	2.4098152323451286E-6	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999999815066939	WITHOUT_CLASSIFICATION	1.8493306158842934E-8	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999940627717936	WITHOUT_CLASSIFICATION	5.937228206468486E-6	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999978682153063	WITHOUT_CLASSIFICATION	2.131784693743219E-6	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999978682153063	WITHOUT_CLASSIFICATION	2.131784693743219E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999888959125108	WITHOUT_CLASSIFICATION	1.1104087489158808E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999888959125108	WITHOUT_CLASSIFICATION	1.1104087489158808E-5	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999872927829453	WITHOUT_CLASSIFICATION	1.2707217054696713E-5	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999971678240228	WITHOUT_CLASSIFICATION	2.8321759771772575E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999797329236241	WITHOUT_CLASSIFICATION	2.026707637601038E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999952663482381	WITHOUT_CLASSIFICATION	4.7336517619309865E-6	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999991022427678	WITHOUT_CLASSIFICATION	8.977572322080377E-7	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999856438528123	WITHOUT_CLASSIFICATION	1.4356147187814414E-5	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9999226846113258	WITHOUT_CLASSIFICATION	7.731538867423094E-5	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9999983605736813	WITHOUT_CLASSIFICATION	1.6394263186741576E-6	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9997157395489223	WITHOUT_CLASSIFICATION	2.842604510775925E-4	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999900025942433	WITHOUT_CLASSIFICATION	9.997405756654522E-6	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999722744579168	WITHOUT_CLASSIFICATION	2.7725542083117075E-5	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999979076915199	WITHOUT_CLASSIFICATION	2.0923084802276813E-6	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999968036246472	WITHOUT_CLASSIFICATION	3.1963753528046427E-6	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999993021550676	WITHOUT_CLASSIFICATION	6.978449324882384E-7	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999993224392703	WITHOUT_CLASSIFICATION	6.775607297163473E-7	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.9999904195921825	WITHOUT_CLASSIFICATION	9.580407817462944E-6	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9994470933190566	WITHOUT_CLASSIFICATION	5.529066809435051E-4	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999934644082955	WITHOUT_CLASSIFICATION	6.535591704496423E-6	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9999919295074187	WITHOUT_CLASSIFICATION	8.07049258140702E-6	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.999966243361083	WITHOUT_CLASSIFICATION	3.375663891700019E-5	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.999996500279239	WITHOUT_CLASSIFICATION	3.499720761026964E-6	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999957338994547	WITHOUT_CLASSIFICATION	4.266100545300775E-6	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999976489674931	WITHOUT_CLASSIFICATION	2.3510325068542264E-6	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999996654592829	WITHOUT_CLASSIFICATION	3.345407171333327E-7	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.999986192417509	WITHOUT_CLASSIFICATION	1.3807582490925543E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999801742021681	WITHOUT_CLASSIFICATION	1.9825797831970453E-5	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999997603105866	WITHOUT_CLASSIFICATION	2.3968941345151847E-7	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999910753238725	WITHOUT_CLASSIFICATION	8.924676127434439E-6	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999498616252834	WITHOUT_CLASSIFICATION	5.013837471669038E-5	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999962984256385	WITHOUT_CLASSIFICATION	3.7015743614971955E-6	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999962984256385	WITHOUT_CLASSIFICATION	3.7015743614971955E-6	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999967076232651	WITHOUT_CLASSIFICATION	3.2923767349909173E-6	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999782700171029	WITHOUT_CLASSIFICATION	2.1729982897113853E-5	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.999923382128716	WITHOUT_CLASSIFICATION	7.661787128395216E-5	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999802413449848	WITHOUT_CLASSIFICATION	1.9758655015280957E-5	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999811148395302	WITHOUT_CLASSIFICATION	1.8885160469721085E-5	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9999665199504776	WITHOUT_CLASSIFICATION	3.3480049522381473E-5	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999751849706426	WITHOUT_CLASSIFICATION	2.4815029357369402E-5	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9998282848235279	WITHOUT_CLASSIFICATION	1.7171517647214822E-4	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999993433989881	WITHOUT_CLASSIFICATION	6.566010119474292E-7	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999879461392932	WITHOUT_CLASSIFICATION	1.2053860706803836E-5	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9999971372521804	WITHOUT_CLASSIFICATION	2.862747819611047E-6	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999953571771834	WITHOUT_CLASSIFICATION	4.642822816596822E-6	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999815495176312	WITHOUT_CLASSIFICATION	1.8450482368883943E-5	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.999999328787325	WITHOUT_CLASSIFICATION	6.71212675055047E-7	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999919556240126	WITHOUT_CLASSIFICATION	8.044375987371726E-6	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999980656422095	WITHOUT_CLASSIFICATION	1.9343577905582058E-6	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999766918758837	WITHOUT_CLASSIFICATION	2.3308124116275008E-5	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.999999380328094	WITHOUT_CLASSIFICATION	6.196719059637722E-7	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999966160203518	WITHOUT_CLASSIFICATION	3.3839796482675235E-6	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999890821121022	WITHOUT_CLASSIFICATION	1.0917887897842432E-5	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999975578887277	WITHOUT_CLASSIFICATION	2.442111272388971E-6	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999987166948641	WITHOUT_CLASSIFICATION	1.2833051359929163E-6	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999937394630918	WITHOUT_CLASSIFICATION	6.2605369082539516E-6	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9999692505687028	WITHOUT_CLASSIFICATION	3.074943129724585E-5	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999942960963693	WITHOUT_CLASSIFICATION	5.703903630788856E-6	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.999979961017394	WITHOUT_CLASSIFICATION	2.0038982606071308E-5	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999985882605542	WITHOUT_CLASSIFICATION	1.4117394457932144E-6	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999943521690912	WITHOUT_CLASSIFICATION	5.64783090877732E-6	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999930913415601	WITHOUT_CLASSIFICATION	6.908658439915893E-6	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999957043447236	WITHOUT_CLASSIFICATION	4.2956552763273285E-6	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999665103457779	WITHOUT_CLASSIFICATION	3.348965422208653E-5	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999936092385179	WITHOUT_CLASSIFICATION	6.390761482008115E-6	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999955949888627	WITHOUT_CLASSIFICATION	4.40501113724055E-6	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.999995299259055	WITHOUT_CLASSIFICATION	4.70074094501293E-6	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999993506447621	WITHOUT_CLASSIFICATION	6.493552379001426E-7	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999963131727215	WITHOUT_CLASSIFICATION	3.6868272784705874E-6	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999929736033969	WITHOUT_CLASSIFICATION	7.026396603145117E-6	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999234335181179	WITHOUT_CLASSIFICATION	7.656648188216537E-5	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999909575242067	WITHOUT_CLASSIFICATION	9.0424757933119E-6	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999668929659209	WITHOUT_CLASSIFICATION	3.310703407905326E-5	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999164562116	WITHOUT_CLASSIFICATION	8.354378842155931E-8	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.999998476198699	WITHOUT_CLASSIFICATION	1.5238013011079993E-6	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9999973369657899	WITHOUT_CLASSIFICATION	2.6630342101494077E-6	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9999970134497187	WITHOUT_CLASSIFICATION	2.98655028136638E-6	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9998793855826175	WITHOUT_CLASSIFICATION	1.2061441738261117E-4	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999999118466145	WITHOUT_CLASSIFICATION	8.81533854736289E-8	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999710586782332	WITHOUT_CLASSIFICATION	2.894132176674066E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999997931485725	WITHOUT_CLASSIFICATION	2.0685142758618755E-7	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999862834916547	WITHOUT_CLASSIFICATION	1.37165083452818E-5	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9999665488126291	WITHOUT_CLASSIFICATION	3.345118737085251E-5	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999690265392792	WITHOUT_CLASSIFICATION	3.0973460720771765E-5	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999589253376397	WITHOUT_CLASSIFICATION	4.107466236034883E-5	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999678220774477	WITHOUT_CLASSIFICATION	3.217792255228305E-5	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999722570281433	WITHOUT_CLASSIFICATION	2.7742971856699652E-5	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999658128885235	WITHOUT_CLASSIFICATION	3.418711147650333E-5	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999756480765885	WITHOUT_CLASSIFICATION	2.4351923411586878E-5	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999794613053002	WITHOUT_CLASSIFICATION	2.053869469975858E-5	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999998493332496	WITHOUT_CLASSIFICATION	1.5066675049524132E-7	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.999994381984531	WITHOUT_CLASSIFICATION	5.618015469133239E-6	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999994922966033	WITHOUT_CLASSIFICATION	5.077033966110173E-7	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999319526547966	WITHOUT_CLASSIFICATION	6.804734520336861E-5	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999690265392792	WITHOUT_CLASSIFICATION	3.0973460720771765E-5	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999678220774477	WITHOUT_CLASSIFICATION	3.217792255228305E-5	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999589253376397	WITHOUT_CLASSIFICATION	4.107466236034883E-5	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999581875088912	WITHOUT_CLASSIFICATION	4.1812491108760754E-5	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999723694194361	WITHOUT_CLASSIFICATION	2.763058056391749E-5	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999919685802059	WITHOUT_CLASSIFICATION	8.031419794110067E-6	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9999953587062264	WITHOUT_CLASSIFICATION	4.641293773646163E-6	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9995538816645129	WITHOUT_CLASSIFICATION	4.461183354870979E-4	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999933792499548	WITHOUT_CLASSIFICATION	6.620750045207091E-6	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999931029073448	WITHOUT_CLASSIFICATION	6.8970926552852796E-6	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999939911554118	WITHOUT_CLASSIFICATION	6.0088445883244E-6	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.999976897687924	WITHOUT_CLASSIFICATION	2.3102312076010572E-5	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999918655148394	WITHOUT_CLASSIFICATION	8.13448516051807E-6	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999946125061361	WITHOUT_CLASSIFICATION	5.387493863867401E-6	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999924103756641	WITHOUT_CLASSIFICATION	7.589624335830738E-6	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.999994111325579	WITHOUT_CLASSIFICATION	5.8886744209819534E-6	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9999688064331732	WITHOUT_CLASSIFICATION	3.119356682680825E-5	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999998387816503	WITHOUT_CLASSIFICATION	1.612183496838226E-7	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9997697230561087	WITHOUT_CLASSIFICATION	2.3027694389138046E-4	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.9999815609681123	WITHOUT_CLASSIFICATION	1.8439031887682007E-5	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999919087197915	WITHOUT_CLASSIFICATION	8.09128020843439E-6	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999919087197915	WITHOUT_CLASSIFICATION	8.09128020843439E-6	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9997157625028819	WITHOUT_CLASSIFICATION	2.842374971181467E-4	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.9999797987290019	WITHOUT_CLASSIFICATION	2.0201270998107142E-5	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999098239044263	WITHOUT_CLASSIFICATION	9.017609557374506E-5	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9996494941865677	WITHOUT_CLASSIFICATION	3.5050581343222444E-4	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999750957549347	WITHOUT_CLASSIFICATION	2.4904245065291225E-5	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999827209583934	WITHOUT_CLASSIFICATION	1.727904160660469E-5	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999989255849522	WITHOUT_CLASSIFICATION	1.0744150478217226E-6	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999970635870149	WITHOUT_CLASSIFICATION	2.9364129850680637E-6	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999923700187405	WITHOUT_CLASSIFICATION	7.62998125946335E-6	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999979384628941	WITHOUT_CLASSIFICATION	2.061537105892133E-6	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999947724154871	WITHOUT_CLASSIFICATION	5.227584512906083E-6	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9999830618192773	WITHOUT_CLASSIFICATION	1.693818072272766E-5	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999745468754129	WITHOUT_CLASSIFICATION	2.5453124587210518E-5	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999938888792207	WITHOUT_CLASSIFICATION	6.111120779354306E-6	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999998551844926	WITHOUT_CLASSIFICATION	1.4481550724770362E-7	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999978643448331	WITHOUT_CLASSIFICATION	2.1356551669993984E-6	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.999965464796587	WITHOUT_CLASSIFICATION	3.453520341305311E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999998561635854	WITHOUT_CLASSIFICATION	1.438364144658991E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999998561635854	WITHOUT_CLASSIFICATION	1.438364144658991E-7	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9999848615262025	WITHOUT_CLASSIFICATION	1.5138473797522071E-5	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9999877274190406	WITHOUT_CLASSIFICATION	1.227258095939506E-5	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999799462440324	WITHOUT_CLASSIFICATION	2.005375596758833E-5	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9999921010955923	WITHOUT_CLASSIFICATION	7.898904407625106E-6	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999882181162912	WITHOUT_CLASSIFICATION	1.1781883708752828E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999998561635854	WITHOUT_CLASSIFICATION	1.438364144658991E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999998561635854	WITHOUT_CLASSIFICATION	1.438364144658991E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999969905492139	WITHOUT_CLASSIFICATION	3.0094507861566678E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999969905492139	WITHOUT_CLASSIFICATION	3.0094507861566678E-6	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999544897903048	WITHOUT_CLASSIFICATION	4.551020969519619E-5	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999929590353454	WITHOUT_CLASSIFICATION	7.0409646546674526E-6	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999990332891393	WITHOUT_CLASSIFICATION	9.667108607465846E-7	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9997469769173898	WITHOUT_CLASSIFICATION	2.5302308261013526E-4	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999998533992109	WITHOUT_CLASSIFICATION	1.4660078910044304E-6	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999998533992109	WITHOUT_CLASSIFICATION	1.4660078910044304E-6	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999958065954311	WITHOUT_CLASSIFICATION	4.193404568841748E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999993650401812	WITHOUT_CLASSIFICATION	6.349598188595443E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999990444304722	WITHOUT_CLASSIFICATION	9.555695278448865E-7	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999667139756109	WITHOUT_CLASSIFICATION	3.328602438924008E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999970245091498	WITHOUT_CLASSIFICATION	2.975490850174441E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.999990696836617	WITHOUT_CLASSIFICATION	9.303163382931828E-6	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999994018438253	WITHOUT_CLASSIFICATION	5.981561747762604E-7	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999992383349808	WITHOUT_CLASSIFICATION	7.616650192700274E-7	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999821821397704	WITHOUT_CLASSIFICATION	1.781786022958973E-5	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999983094472668	WITHOUT_CLASSIFICATION	1.690552733318935E-6	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.999738208135529	WITHOUT_CLASSIFICATION	2.617918644709031E-4	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.999993085447036	WITHOUT_CLASSIFICATION	6.914552963934484E-6	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999000768268154	WITHOUT_CLASSIFICATION	9.992317318462627E-5	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999953662682468	WITHOUT_CLASSIFICATION	4.633731753279162E-6	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999978643448331	WITHOUT_CLASSIFICATION	2.1356551669993984E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999998561635854	WITHOUT_CLASSIFICATION	1.438364144658991E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999969905492139	WITHOUT_CLASSIFICATION	3.0094507861566678E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.999990696836617	WITHOUT_CLASSIFICATION	9.303163382931828E-6	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999966243921395	WITHOUT_CLASSIFICATION	3.3756078604170236E-6	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999966243921395	WITHOUT_CLASSIFICATION	3.3756078604170236E-6	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999815434085275	WITHOUT_CLASSIFICATION	1.845659147243907E-5	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999932429348294	WITHOUT_CLASSIFICATION	6.757065170617949E-6	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999927939329849	WITHOUT_CLASSIFICATION	7.206067015110519E-6	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999957510711626	WITHOUT_CLASSIFICATION	4.24892883738228E-6	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999933698050153	WITHOUT_CLASSIFICATION	6.630194984761286E-6	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999993719209497	WITHOUT_CLASSIFICATION	6.280790502137958E-7	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999967654982335	WITHOUT_CLASSIFICATION	3.234501766562588E-6	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999933620970571	WITHOUT_CLASSIFICATION	6.637902942879049E-6	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999926750386812	WITHOUT_CLASSIFICATION	7.324961318832184E-6	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999833968275611	WITHOUT_CLASSIFICATION	1.6603172438872738E-5	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999744752140587	WITHOUT_CLASSIFICATION	2.552478594127992E-5	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999231382134	WITHOUT_CLASSIFICATION	7.686178657147994E-8	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.999998063538967	WITHOUT_CLASSIFICATION	1.936461032963124E-6	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.999965464796587	WITHOUT_CLASSIFICATION	3.453520341305311E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999969905492139	WITHOUT_CLASSIFICATION	3.0094507861566678E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999993650401812	WITHOUT_CLASSIFICATION	6.349598188595443E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999990444304722	WITHOUT_CLASSIFICATION	9.555695278448865E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999990444304722	WITHOUT_CLASSIFICATION	9.555695278448865E-7	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999970245091498	WITHOUT_CLASSIFICATION	2.975490850174441E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.999990696836617	WITHOUT_CLASSIFICATION	9.303163382931828E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.999990696836617	WITHOUT_CLASSIFICATION	9.303163382931828E-6	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999966243921395	WITHOUT_CLASSIFICATION	3.3756078604170236E-6	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9993990580602663	WITHOUT_CLASSIFICATION	6.009419397337113E-4	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999939522624111	WITHOUT_CLASSIFICATION	6.047737588934562E-6	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999711141956	WITHOUT_CLASSIFICATION	2.8885804405155293E-8	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999953665086886	WITHOUT_CLASSIFICATION	4.6334913113991475E-6	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999972122330822	WITHOUT_CLASSIFICATION	2.7877669177688217E-6	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999971451398842	WITHOUT_CLASSIFICATION	2.8548601157992275E-6	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999078795124186	WITHOUT_CLASSIFICATION	9.212048758135094E-5	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.999992264333851	WITHOUT_CLASSIFICATION	7.735666148915958E-6	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999917528682813	WITHOUT_CLASSIFICATION	8.247131718595235E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999993650401812	WITHOUT_CLASSIFICATION	6.349598188595443E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999990444304722	WITHOUT_CLASSIFICATION	9.555695278448865E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999990444304722	WITHOUT_CLASSIFICATION	9.555695278448865E-7	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999970245091498	WITHOUT_CLASSIFICATION	2.975490850174441E-6	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999933620970571	WITHOUT_CLASSIFICATION	6.637902942879049E-6	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999833968275611	WITHOUT_CLASSIFICATION	1.6603172438872738E-5	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999997595559696	WITHOUT_CLASSIFICATION	2.4044403036915883E-7	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999916415750871	WITHOUT_CLASSIFICATION	8.358424912956934E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999908850987108	WITHOUT_CLASSIFICATION	9.114901289133317E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999908850987108	WITHOUT_CLASSIFICATION	9.114901289133317E-6	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999956549193587	WITHOUT_CLASSIFICATION	4.345080641326974E-6	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999994061379297	WITHOUT_CLASSIFICATION	5.93862070357979E-7	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9997927470153888	WITHOUT_CLASSIFICATION	2.0725298461121187E-4	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999755091679012	WITHOUT_CLASSIFICATION	2.449083209884879E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999963720838284	WITHOUT_CLASSIFICATION	3.627916171530734E-6	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999963720838284	WITHOUT_CLASSIFICATION	3.627916171530734E-6	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.999901638052616	WITHOUT_CLASSIFICATION	9.83619473840708E-5	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.999901638052616	WITHOUT_CLASSIFICATION	9.83619473840708E-5	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999954749163064	WITHOUT_CLASSIFICATION	4.525083693661614E-6	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999954749163064	WITHOUT_CLASSIFICATION	4.525083693661614E-6	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999612749424072	WITHOUT_CLASSIFICATION	3.8725057592881215E-5	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999114351021996	WITHOUT_CLASSIFICATION	8.856489780034344E-5	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999646249707234	WITHOUT_CLASSIFICATION	3.537502927662312E-5	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999988974986955	WITHOUT_CLASSIFICATION	1.102501304412472E-6	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999940348524137	WITHOUT_CLASSIFICATION	5.965147586346593E-6	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.999990265731453	WITHOUT_CLASSIFICATION	9.734268547060371E-6	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999947243438004	WITHOUT_CLASSIFICATION	5.275656199623772E-6	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999243980579204	WITHOUT_CLASSIFICATION	7.560194207946989E-5	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9998716303601138	WITHOUT_CLASSIFICATION	1.2836963988610255E-4	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999710272146285	WITHOUT_CLASSIFICATION	2.8972785371502214E-5	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999796333804399	WITHOUT_CLASSIFICATION	2.0366619560123434E-5	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999972391611591	WITHOUT_CLASSIFICATION	2.760838840972397E-6	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999967872787826	WITHOUT_CLASSIFICATION	3.21272121737816E-6	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999929330532813	WITHOUT_CLASSIFICATION	7.066946718761639E-6	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999929330532813	WITHOUT_CLASSIFICATION	7.066946718761639E-6	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.999994287437741	WITHOUT_CLASSIFICATION	5.712562258931452E-6	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999856438528123	WITHOUT_CLASSIFICATION	1.4356147187814414E-5	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.999996606384228	WITHOUT_CLASSIFICATION	3.393615771958195E-6	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999990504339881	WITHOUT_CLASSIFICATION	9.495660118357287E-7	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.99999923611176	WITHOUT_CLASSIFICATION	7.638882400354193E-7	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999988735491825	WITHOUT_CLASSIFICATION	1.126450817499716E-6	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999994497741154	WITHOUT_CLASSIFICATION	5.502258847396236E-7	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999996023072538	WITHOUT_CLASSIFICATION	3.9769274621990343E-7	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999966608768577	WITHOUT_CLASSIFICATION	3.339123142272311E-6	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999990542456789	WITHOUT_CLASSIFICATION	9.457543211997786E-7	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999968516216005	WITHOUT_CLASSIFICATION	3.1483783995551385E-6	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999962761273751	WITHOUT_CLASSIFICATION	3.723872624943834E-6	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.999999820485854	WITHOUT_CLASSIFICATION	1.7951414604307303E-7	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999133344368999	WITHOUT_CLASSIFICATION	8.666556310016933E-5	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999945766643934	WITHOUT_CLASSIFICATION	5.423335606539755E-6	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999991835548989	WITHOUT_CLASSIFICATION	8.16445101090028E-7	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9999974845137326	WITHOUT_CLASSIFICATION	2.5154862674159713E-6	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999968794617642	WITHOUT_CLASSIFICATION	3.120538235693781E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999990509650345	WITHOUT_CLASSIFICATION	9.490349655354609E-7	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999990509650345	WITHOUT_CLASSIFICATION	9.490349655354609E-7	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999977378328417	WITHOUT_CLASSIFICATION	2.2621671582965147E-6	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999941289094969	WITHOUT_CLASSIFICATION	5.871090503091852E-6	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9997239329225421	WITHOUT_CLASSIFICATION	2.7606707745779453E-4	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9997239329225421	WITHOUT_CLASSIFICATION	2.7606707745779453E-4	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999936611008088	WITHOUT_CLASSIFICATION	6.338899191217616E-6	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999754536283929	WITHOUT_CLASSIFICATION	2.4546371607179034E-5	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9997054314720567	WITHOUT_CLASSIFICATION	2.945685279432731E-4	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999295963926905	WITHOUT_CLASSIFICATION	7.040360730940646E-5	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999986722418027	WITHOUT_CLASSIFICATION	1.327758197282933E-6	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999975438116591	WITHOUT_CLASSIFICATION	2.456188341005778E-6	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999975438116591	WITHOUT_CLASSIFICATION	2.456188341005778E-6	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999970561920127	WITHOUT_CLASSIFICATION	2.9438079872504765E-6	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999986866891006	WITHOUT_CLASSIFICATION	1.3133108994408305E-6	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999923458228928	WITHOUT_CLASSIFICATION	7.654177107176194E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999948943541221	WITHOUT_CLASSIFICATION	5.1056458777774595E-6	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999941289094969	WITHOUT_CLASSIFICATION	5.871090503091852E-6	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999416039105404	WITHOUT_CLASSIFICATION	5.839608945963355E-5	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999896457655616	WITHOUT_CLASSIFICATION	1.035423443845785E-5	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999896457655616	WITHOUT_CLASSIFICATION	1.035423443845785E-5	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999946054015006	WITHOUT_CLASSIFICATION	5.394598499353952E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999984635642207	WITHOUT_CLASSIFICATION	1.5364357792528388E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999984635642207	WITHOUT_CLASSIFICATION	1.5364357792528388E-6	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999728087395022	WITHOUT_CLASSIFICATION	2.7191260497869472E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999728087395022	WITHOUT_CLASSIFICATION	2.7191260497869472E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999728087395022	WITHOUT_CLASSIFICATION	2.7191260497869472E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999984635642207	WITHOUT_CLASSIFICATION	1.5364357792528388E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999984635642207	WITHOUT_CLASSIFICATION	1.5364357792528388E-6	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999946054015006	WITHOUT_CLASSIFICATION	5.394598499353952E-6	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999972215175734	WITHOUT_CLASSIFICATION	2.7784824265295046E-6	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9999917726298578	WITHOUT_CLASSIFICATION	8.227370142149823E-6	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999788295350178	WITHOUT_CLASSIFICATION	2.11704649821331E-5	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9999736766594209	WITHOUT_CLASSIFICATION	2.6323340578962292E-5	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999978596141151	WITHOUT_CLASSIFICATION	2.1403858849487137E-6	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.99997206285048	WITHOUT_CLASSIFICATION	2.793714951996563E-5	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999953463623223	WITHOUT_CLASSIFICATION	4.653637677665785E-6	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999947093428129	WITHOUT_CLASSIFICATION	5.290657187207253E-6	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999968516216005	WITHOUT_CLASSIFICATION	3.1483783995551385E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999984635642207	WITHOUT_CLASSIFICATION	1.5364357792528388E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999984635642207	WITHOUT_CLASSIFICATION	1.5364357792528388E-6	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999987110468654	WITHOUT_CLASSIFICATION	1.2889531345331493E-6	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999897331420051	WITHOUT_CLASSIFICATION	1.0266857994816448E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999963462997571	WITHOUT_CLASSIFICATION	3.6537002429090515E-6	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999973474712358	WITHOUT_CLASSIFICATION	2.6525287642529157E-6	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999922793857872	WITHOUT_CLASSIFICATION	7.720614212788952E-6	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999305919635878	WITHOUT_CLASSIFICATION	6.94080364122621E-5	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999996254015776	WITHOUT_CLASSIFICATION	3.7459842236074575E-7	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999994917471534	WITHOUT_CLASSIFICATION	5.082528465457445E-7	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999831174089799	WITHOUT_CLASSIFICATION	1.6882591020102815E-5	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.999996758036901	WITHOUT_CLASSIFICATION	3.2419630989693756E-6	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999032185143532	WITHOUT_CLASSIFICATION	9.678148564677703E-5	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999913144834931	WITHOUT_CLASSIFICATION	8.685516506841407E-6	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999973177953899	WITHOUT_CLASSIFICATION	2.6822046100625774E-6	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999503888550255	WITHOUT_CLASSIFICATION	4.961114497441692E-5	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.999990236352834	WITHOUT_CLASSIFICATION	9.763647165901146E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999855528173434	WITHOUT_CLASSIFICATION	1.444718265662991E-5	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999855528173434	WITHOUT_CLASSIFICATION	1.444718265662991E-5	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999855528173434	WITHOUT_CLASSIFICATION	1.444718265662991E-5	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999904222820792	WITHOUT_CLASSIFICATION	9.577717920834436E-6	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999962241223344	WITHOUT_CLASSIFICATION	3.7758776656041114E-6	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999887778901877	WITHOUT_CLASSIFICATION	1.1222109812304907E-5	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999974120895337	WITHOUT_CLASSIFICATION	2.587910466234295E-6	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999320717318709	WITHOUT_CLASSIFICATION	6.792826812910326E-5	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.999997345702683	WITHOUT_CLASSIFICATION	2.654297317054804E-6	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999906093453745	WITHOUT_CLASSIFICATION	9.39065462542106E-6	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.999999537091723	WITHOUT_CLASSIFICATION	4.62908277041261E-7	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999905074434504	WITHOUT_CLASSIFICATION	9.49255654958143E-6	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999956598381605	WITHOUT_CLASSIFICATION	4.340161839411067E-6	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999943420580385	WITHOUT_CLASSIFICATION	5.65794196153623E-6	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999866079791107	WITHOUT_CLASSIFICATION	1.3392020889375599E-5	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999970561920127	WITHOUT_CLASSIFICATION	2.9438079872504765E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999984635642207	WITHOUT_CLASSIFICATION	1.5364357792528388E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999984635642207	WITHOUT_CLASSIFICATION	1.5364357792528388E-6	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999946054015006	WITHOUT_CLASSIFICATION	5.394598499353952E-6	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.99997206285048	WITHOUT_CLASSIFICATION	2.793714951996563E-5	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999897331420051	WITHOUT_CLASSIFICATION	1.0266857994816448E-5	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999973474712358	WITHOUT_CLASSIFICATION	2.6525287642529157E-6	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999305919635878	WITHOUT_CLASSIFICATION	6.94080364122621E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999963462997571	WITHOUT_CLASSIFICATION	3.6537002429090515E-6	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999996254015776	WITHOUT_CLASSIFICATION	3.7459842236074575E-7	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.999996758036901	WITHOUT_CLASSIFICATION	3.2419630989693756E-6	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999831174089799	WITHOUT_CLASSIFICATION	1.6882591020102815E-5	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999913144834931	WITHOUT_CLASSIFICATION	8.685516506841407E-6	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999992304258903	WITHOUT_CLASSIFICATION	7.695741097396945E-7	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9998042454029796	WITHOUT_CLASSIFICATION	1.9575459702043436E-4	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999969998472327	WITHOUT_CLASSIFICATION	3.000152767400314E-6	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999993312569757	WITHOUT_CLASSIFICATION	6.687430242892434E-7	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999988351175204	WITHOUT_CLASSIFICATION	1.164882479612228E-6	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9995303097237208	WITHOUT_CLASSIFICATION	4.696902762791487E-4	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999966100441975	WITHOUT_CLASSIFICATION	3.3899558025677655E-6	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9998886505301947	WITHOUT_CLASSIFICATION	1.1134946980528359E-4	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.999992589200346	WITHOUT_CLASSIFICATION	7.410799654001175E-6	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999992255229546	WITHOUT_CLASSIFICATION	7.744770453892021E-7	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999835896657872	WITHOUT_CLASSIFICATION	1.6410334212878754E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999986170803163	WITHOUT_CLASSIFICATION	1.3829196836545401E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999939291765712	WITHOUT_CLASSIFICATION	6.0708234288191455E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999881254546749	WITHOUT_CLASSIFICATION	1.1874545325073462E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999298080986118	WITHOUT_CLASSIFICATION	7.019190138828577E-5	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999985271708056	WITHOUT_CLASSIFICATION	1.4728291943122402E-6	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999991147353849	WITHOUT_CLASSIFICATION	8.852646151789988E-7	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999642263911324	WITHOUT_CLASSIFICATION	3.577360886759651E-5	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999769657586451	WITHOUT_CLASSIFICATION	2.3034241354815667E-5	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999539131507841	WITHOUT_CLASSIFICATION	4.6086849215862635E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999893324136511	WITHOUT_CLASSIFICATION	1.0667586348927165E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999995624840887	WITHOUT_CLASSIFICATION	4.37515911273122E-7	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999995624840887	WITHOUT_CLASSIFICATION	4.37515911273122E-7	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999925346503751	WITHOUT_CLASSIFICATION	7.465349624913203E-6	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999981350323319	WITHOUT_CLASSIFICATION	1.8649676680357136E-6	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998547089796855	WITHOUT_CLASSIFICATION	1.4529102031439294E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998547089796855	WITHOUT_CLASSIFICATION	1.4529102031439294E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998547089796855	WITHOUT_CLASSIFICATION	1.4529102031439294E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998647659435753	WITHOUT_CLASSIFICATION	1.3523405642463978E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998647659435753	WITHOUT_CLASSIFICATION	1.3523405642463978E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998647659435753	WITHOUT_CLASSIFICATION	1.3523405642463978E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998647659435753	WITHOUT_CLASSIFICATION	1.3523405642463978E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998034924976474	WITHOUT_CLASSIFICATION	1.9650750235253412E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998034924976474	WITHOUT_CLASSIFICATION	1.9650750235253412E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998034924976474	WITHOUT_CLASSIFICATION	1.9650750235253412E-4	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9997854102271296	WITHOUT_CLASSIFICATION	2.1458977287033446E-4	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9997854102271296	WITHOUT_CLASSIFICATION	2.1458977287033446E-4	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9997657957339815	WITHOUT_CLASSIFICATION	2.3420426601860884E-4	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9997442988684643	WITHOUT_CLASSIFICATION	2.5570113153568794E-4	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999981350323319	WITHOUT_CLASSIFICATION	1.8649676680357136E-6	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.99999573790542	WITHOUT_CLASSIFICATION	4.262094580066229E-6	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998547089796855	WITHOUT_CLASSIFICATION	1.4529102031439294E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998547089796855	WITHOUT_CLASSIFICATION	1.4529102031439294E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998647659435753	WITHOUT_CLASSIFICATION	1.3523405642463978E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998647659435753	WITHOUT_CLASSIFICATION	1.3523405642463978E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998647659435753	WITHOUT_CLASSIFICATION	1.3523405642463978E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998034924976474	WITHOUT_CLASSIFICATION	1.9650750235253412E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998034924976474	WITHOUT_CLASSIFICATION	1.9650750235253412E-4	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9997854102271296	WITHOUT_CLASSIFICATION	2.1458977287033446E-4	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9997442988684643	WITHOUT_CLASSIFICATION	2.5570113153568794E-4	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999827526443354	WITHOUT_CLASSIFICATION	1.7247355664484334E-5	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999827526443354	WITHOUT_CLASSIFICATION	1.7247355664484334E-5	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999754516665552	WITHOUT_CLASSIFICATION	2.4548333444752884E-5	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999754516665552	WITHOUT_CLASSIFICATION	2.4548333444752884E-5	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999757607147141	WITHOUT_CLASSIFICATION	2.4239285285987995E-5	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999757607147141	WITHOUT_CLASSIFICATION	2.4239285285987995E-5	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999927415096044	WITHOUT_CLASSIFICATION	7.258490395646726E-6	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999962817259772	WITHOUT_CLASSIFICATION	3.7182740227292785E-6	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999962817259772	WITHOUT_CLASSIFICATION	3.7182740227292785E-6	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999712102280832	WITHOUT_CLASSIFICATION	2.8789771916847914E-5	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999712102280832	WITHOUT_CLASSIFICATION	2.8789771916847914E-5	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999776291739296	WITHOUT_CLASSIFICATION	2.2370826070274404E-5	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999982434895586	WITHOUT_CLASSIFICATION	1.7565104414426358E-6	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999982434895586	WITHOUT_CLASSIFICATION	1.7565104414426358E-6	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.999999692794497	WITHOUT_CLASSIFICATION	3.0720550304606705E-7	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.999993710753453	WITHOUT_CLASSIFICATION	6.2892465469723014E-6	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999897493740958	WITHOUT_CLASSIFICATION	1.0250625904172167E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998647659435753	WITHOUT_CLASSIFICATION	1.3523405642463978E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998647659435753	WITHOUT_CLASSIFICATION	1.3523405642463978E-4	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.999999692794497	WITHOUT_CLASSIFICATION	3.0720550304606705E-7	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999891167960616	WITHOUT_CLASSIFICATION	1.0883203938314316E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999961768368489	WITHOUT_CLASSIFICATION	3.823163151042443E-6	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999961768368489	WITHOUT_CLASSIFICATION	3.823163151042443E-6	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999961768368489	WITHOUT_CLASSIFICATION	3.823163151042443E-6	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9998064585581639	WITHOUT_CLASSIFICATION	1.935414418362287E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999803522178841	WITHOUT_CLASSIFICATION	1.964778211590828E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9998990644438709	WITHOUT_CLASSIFICATION	1.0093555612908202E-4	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9998990644438709	WITHOUT_CLASSIFICATION	1.0093555612908202E-4	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999152633041649	WITHOUT_CLASSIFICATION	8.473669583502821E-5	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.999983844252412	WITHOUT_CLASSIFICATION	1.6155747588016896E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999904522041037	WITHOUT_CLASSIFICATION	9.54779589632359E-6	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999924846964803	WITHOUT_CLASSIFICATION	7.515303519751248E-6	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999586897417537	WITHOUT_CLASSIFICATION	4.1310258246372226E-5	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999944309002752	WITHOUT_CLASSIFICATION	5.5690997248308885E-6	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999944309002752	WITHOUT_CLASSIFICATION	5.5690997248308885E-6	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.999989221444957	WITHOUT_CLASSIFICATION	1.077855504292917E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9997436650527317	WITHOUT_CLASSIFICATION	2.5633494726827786E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9997436650527317	WITHOUT_CLASSIFICATION	2.5633494726827786E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998647659435753	WITHOUT_CLASSIFICATION	1.3523405642463978E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999961768368489	WITHOUT_CLASSIFICATION	3.823163151042443E-6	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999803522178841	WITHOUT_CLASSIFICATION	1.964778211590828E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9998990644438709	WITHOUT_CLASSIFICATION	1.0093555612908202E-4	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999152633041649	WITHOUT_CLASSIFICATION	8.473669583502821E-5	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.999983844252412	WITHOUT_CLASSIFICATION	1.6155747588016896E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999904522041037	WITHOUT_CLASSIFICATION	9.54779589632359E-6	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999924846964803	WITHOUT_CLASSIFICATION	7.515303519751248E-6	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9997436650527317	WITHOUT_CLASSIFICATION	2.5633494726827786E-4	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999932154353546	WITHOUT_CLASSIFICATION	6.784564645382368E-6	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999993889594101	WITHOUT_CLASSIFICATION	6.110405898155349E-7	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999983899361112	WITHOUT_CLASSIFICATION	1.610063888760747E-6	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999432797426082	WITHOUT_CLASSIFICATION	5.672025739178658E-5	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.999998406873626	WITHOUT_CLASSIFICATION	1.5931263740168687E-6	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999990095056553	WITHOUT_CLASSIFICATION	9.90494344719165E-7	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999973802877834	WITHOUT_CLASSIFICATION	2.619712216566426E-6	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999973802877834	WITHOUT_CLASSIFICATION	2.619712216566426E-6	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999655096441942	WITHOUT_CLASSIFICATION	3.44903558059259E-5	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999111780921436	WITHOUT_CLASSIFICATION	8.882190785645055E-5	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999132917780545	WITHOUT_CLASSIFICATION	8.67082219454502E-5	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9998568863961281	WITHOUT_CLASSIFICATION	1.431136038719875E-4	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9998234043585253	WITHOUT_CLASSIFICATION	1.7659564147455003E-4	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9998234043585253	WITHOUT_CLASSIFICATION	1.7659564147455003E-4	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9997280985524427	WITHOUT_CLASSIFICATION	2.719014475572557E-4	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999583689605782	WITHOUT_CLASSIFICATION	4.1631039421777036E-5	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9991453408442316	WITHOUT_CLASSIFICATION	8.546591557684188E-4	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9991453408442316	WITHOUT_CLASSIFICATION	8.546591557684188E-4	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999227909106787	WITHOUT_CLASSIFICATION	7.720908932136018E-5	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999378707530868	WITHOUT_CLASSIFICATION	6.21292469131813E-5	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999586897417537	WITHOUT_CLASSIFICATION	4.1310258246372226E-5	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999983113350205	WITHOUT_CLASSIFICATION	1.6886649795888555E-6	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999990121516049	WITHOUT_CLASSIFICATION	9.878483951524712E-7	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999954276114457	WITHOUT_CLASSIFICATION	4.5723885543609184E-6	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999945654359009	WITHOUT_CLASSIFICATION	5.434564099093547E-6	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.9999963718201297	WITHOUT_CLASSIFICATION	3.628179870194171E-6	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999972894561759	WITHOUT_CLASSIFICATION	2.710543824022187E-6	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999947236354623	WITHOUT_CLASSIFICATION	5.276364537720189E-6	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.999989559787826	WITHOUT_CLASSIFICATION	1.044021217410016E-5	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999904145925218	WITHOUT_CLASSIFICATION	9.585407478196523E-6	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999904145925218	WITHOUT_CLASSIFICATION	9.585407478196523E-6	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999633845307435	WITHOUT_CLASSIFICATION	3.661546925653405E-5	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999633845307435	WITHOUT_CLASSIFICATION	3.661546925653405E-5	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999998952044571	WITHOUT_CLASSIFICATION	1.0479554295700531E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999984751011067	WITHOUT_CLASSIFICATION	1.5248988932054367E-6	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999984751011067	WITHOUT_CLASSIFICATION	1.5248988932054367E-6	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999984751011067	WITHOUT_CLASSIFICATION	1.5248988932054367E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999911310930757	WITHOUT_CLASSIFICATION	8.868906924266732E-6	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999732919088132	WITHOUT_CLASSIFICATION	2.6708091186798214E-5	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999732919088132	WITHOUT_CLASSIFICATION	2.6708091186798214E-5	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999987429119938	WITHOUT_CLASSIFICATION	1.2570880061835875E-6	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999667141237484	WITHOUT_CLASSIFICATION	3.328587625174035E-5	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999745440062404	WITHOUT_CLASSIFICATION	2.5455993759587592E-5	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9999299706225927	WITHOUT_CLASSIFICATION	7.002937740732659E-5	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999951891543246	WITHOUT_CLASSIFICATION	4.810845675474887E-6	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9999881874661437	WITHOUT_CLASSIFICATION	1.1812533856329574E-5	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9996063714328629	WITHOUT_CLASSIFICATION	3.9362856713707437E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999939291765712	WITHOUT_CLASSIFICATION	6.0708234288191455E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999939291765712	WITHOUT_CLASSIFICATION	6.0708234288191455E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999911310930757	WITHOUT_CLASSIFICATION	8.868906924266732E-6	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999987429119938	WITHOUT_CLASSIFICATION	1.2570880061835875E-6	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999517326102	WITHOUT_CLASSIFICATION	4.8267389814744574E-8	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999667141237484	WITHOUT_CLASSIFICATION	3.328587625174035E-5	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999745440062404	WITHOUT_CLASSIFICATION	2.5455993759587592E-5	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.999997355202904	WITHOUT_CLASSIFICATION	2.644797096120487E-6	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9999938415912106	WITHOUT_CLASSIFICATION	6.158408789365985E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999924991238482	WITHOUT_CLASSIFICATION	7.5008761517406516E-6	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.9998905280678023	WITHOUT_CLASSIFICATION	1.0947193219776959E-4	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999984559399246	WITHOUT_CLASSIFICATION	1.5440600753273866E-6	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999953347704579	WITHOUT_CLASSIFICATION	4.665229542087995E-6	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999899299960544	WITHOUT_CLASSIFICATION	1.0070003945710022E-5	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.999997355202904	WITHOUT_CLASSIFICATION	2.644797096120487E-6	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9997098346565042	WITHOUT_CLASSIFICATION	2.901653434958431E-4	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9997098346565042	WITHOUT_CLASSIFICATION	2.901653434958431E-4	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999796960034901	WITHOUT_CLASSIFICATION	2.0303996509859946E-5	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999753274790869	WITHOUT_CLASSIFICATION	2.4672520913086846E-5	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9985832370153309	WITHOUT_CLASSIFICATION	0.0014167629846691264	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9994944130138615	WITHOUT_CLASSIFICATION	5.055869861383852E-4	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999279176169553	WITHOUT_CLASSIFICATION	7.208238304477668E-5	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9998713466172955	WITHOUT_CLASSIFICATION	1.286533827044849E-4	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999942432893228	WITHOUT_CLASSIFICATION	5.75671067711525E-6	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999099893306677	WITHOUT_CLASSIFICATION	9.001066933237818E-5	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999974344194816	WITHOUT_CLASSIFICATION	2.565580518345282E-6	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9999984206964239	WITHOUT_CLASSIFICATION	1.5793035761287195E-6	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999781156697006	WITHOUT_CLASSIFICATION	2.1884330299472546E-5	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9994944130138615	WITHOUT_CLASSIFICATION	5.055869861383852E-4	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999279176169553	WITHOUT_CLASSIFICATION	7.208238304477668E-5	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.999971920958345	WITHOUT_CLASSIFICATION	2.807904165503782E-5	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9999959848703631	WITHOUT_CLASSIFICATION	4.015129636891997E-6	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999998726841626	WITHOUT_CLASSIFICATION	1.2731583743930855E-7	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999938004276727	WITHOUT_CLASSIFICATION	6.199572327287922E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999957636476953	WITHOUT_CLASSIFICATION	4.236352304788631E-6	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999948782829458	WITHOUT_CLASSIFICATION	5.121717054308436E-6	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9997398847094875	WITHOUT_CLASSIFICATION	2.6011529051255065E-4	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9999941114568532	WITHOUT_CLASSIFICATION	5.8885431468302296E-6	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999916898926929	WITHOUT_CLASSIFICATION	8.310107306986349E-6	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999815330918244	WITHOUT_CLASSIFICATION	1.8466908175633514E-5	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999988310987282	WITHOUT_CLASSIFICATION	1.168901271698047E-6	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9999275668778853	WITHOUT_CLASSIFICATION	7.243312211475731E-5	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999651636545702	WITHOUT_CLASSIFICATION	3.483634542976382E-5	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999933547252337	WITHOUT_CLASSIFICATION	6.645274766331498E-6	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999990801355834	WITHOUT_CLASSIFICATION	9.198644166489007E-7	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999983853925356	WITHOUT_CLASSIFICATION	1.6146074644167556E-6	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999459720247479	WITHOUT_CLASSIFICATION	5.402797525218812E-5	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999568445889845	WITHOUT_CLASSIFICATION	4.3155411015524366E-5	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.999987167572201	WITHOUT_CLASSIFICATION	1.2832427798940232E-5	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999514427299676	WITHOUT_CLASSIFICATION	4.85572700324467E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999459720247479	WITHOUT_CLASSIFICATION	5.402797525218812E-5	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999568445889845	WITHOUT_CLASSIFICATION	4.3155411015524366E-5	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.999987167572201	WITHOUT_CLASSIFICATION	1.2832427798940232E-5	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9999833180885594	WITHOUT_CLASSIFICATION	1.6681911440471018E-5	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999986083935457	WITHOUT_CLASSIFICATION	1.3916064543501366E-6	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999993039703442	WITHOUT_CLASSIFICATION	6.960296558228142E-7	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999332262730294	WITHOUT_CLASSIFICATION	6.677372697057435E-5	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999699437787182	WITHOUT_CLASSIFICATION	3.0056221281888966E-5	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999236137136825	WITHOUT_CLASSIFICATION	7.638628631749479E-5	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.999998280398072	WITHOUT_CLASSIFICATION	1.7196019279642332E-6	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999982619785683	WITHOUT_CLASSIFICATION	1.7380214316865764E-6	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9999992352781578	WITHOUT_CLASSIFICATION	7.647218421842219E-7	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9999947390796141	WITHOUT_CLASSIFICATION	5.260920385896863E-6	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.8018531173113104	WITHOUT_CLASSIFICATION	0.19814688268868966	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999981713164316	WITHOUT_CLASSIFICATION	1.8286835683301005E-6	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999992238236394	WITHOUT_CLASSIFICATION	7.761763606832899E-7	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9998692268138841	WITHOUT_CLASSIFICATION	1.307731861159596E-4	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999932334744216	WITHOUT_CLASSIFICATION	6.766525578417534E-6	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999966393728931	WITHOUT_CLASSIFICATION	3.3606271069466605E-6	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999991900125946	WITHOUT_CLASSIFICATION	8.099874054535762E-7	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999962748045443	WITHOUT_CLASSIFICATION	3.725195455595558E-6	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999980980317679	WITHOUT_CLASSIFICATION	1.9019682321462808E-6	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999983561862216	WITHOUT_CLASSIFICATION	1.6438137784805784E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999963831559501	WITHOUT_CLASSIFICATION	3.6168440499397655E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.999995127072294	WITHOUT_CLASSIFICATION	4.872927706041335E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.999995127072294	WITHOUT_CLASSIFICATION	4.872927706041335E-6	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999883110061559	WITHOUT_CLASSIFICATION	1.1688993844065762E-5	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999883110061559	WITHOUT_CLASSIFICATION	1.1688993844065762E-5	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999613359379497	WITHOUT_CLASSIFICATION	3.866406205034168E-5	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999613359379497	WITHOUT_CLASSIFICATION	3.866406205034168E-5	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999343474772608	WITHOUT_CLASSIFICATION	6.565252273916956E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999984801235245	WITHOUT_CLASSIFICATION	1.5198764755288932E-6	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999967863893121	WITHOUT_CLASSIFICATION	3.2136106878960863E-6	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999940064201611	WITHOUT_CLASSIFICATION	5.993579838850526E-6	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999805042029831	WITHOUT_CLASSIFICATION	1.9495797016845902E-5	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9998523597579568	WITHOUT_CLASSIFICATION	1.476402420431305E-4	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.999995501078995	WITHOUT_CLASSIFICATION	4.498921004924052E-6	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9999792564437842	WITHOUT_CLASSIFICATION	2.0743556215851522E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999939291765712	WITHOUT_CLASSIFICATION	6.0708234288191455E-6	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999343474772608	WITHOUT_CLASSIFICATION	6.565252273916956E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999984801235245	WITHOUT_CLASSIFICATION	1.5198764755288932E-6	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999967863893121	WITHOUT_CLASSIFICATION	3.2136106878960863E-6	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999805042029831	WITHOUT_CLASSIFICATION	1.9495797016845902E-5	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9998523597579568	WITHOUT_CLASSIFICATION	1.476402420431305E-4	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999943705042411	WITHOUT_CLASSIFICATION	5.62949575894388E-6	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.999997273859367	WITHOUT_CLASSIFICATION	2.7261406330288118E-6	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.999996810462111	WITHOUT_CLASSIFICATION	3.189537888990273E-6	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.999996810462111	WITHOUT_CLASSIFICATION	3.189537888990273E-6	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999695188886685	WITHOUT_CLASSIFICATION	3.0481111331490656E-5	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.999998434256797	WITHOUT_CLASSIFICATION	1.5657432030420793E-6	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999955446224352	WITHOUT_CLASSIFICATION	4.455377564715383E-6	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999995935761875	WITHOUT_CLASSIFICATION	4.064238125133926E-6	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999995935761875	WITHOUT_CLASSIFICATION	4.064238125133926E-6	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.999997157842392	WITHOUT_CLASSIFICATION	2.84215760797942E-6	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999095779959	WITHOUT_CLASSIFICATION	9.04220041834552E-8	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999951126260777	WITHOUT_CLASSIFICATION	4.8873739222900995E-6	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999903143105038	WITHOUT_CLASSIFICATION	9.685689496150793E-6	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999972510972598	WITHOUT_CLASSIFICATION	2.7489027402855584E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999881254546749	WITHOUT_CLASSIFICATION	1.1874545325073462E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999298080986118	WITHOUT_CLASSIFICATION	7.019190138828577E-5	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999985271708056	WITHOUT_CLASSIFICATION	1.4728291943122402E-6	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999991147353849	WITHOUT_CLASSIFICATION	8.852646151789988E-7	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999539131507841	WITHOUT_CLASSIFICATION	4.6086849215862635E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999893324136511	WITHOUT_CLASSIFICATION	1.0667586348927165E-5	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.999997157842392	WITHOUT_CLASSIFICATION	2.84215760797942E-6	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999095779959	WITHOUT_CLASSIFICATION	9.04220041834552E-8	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999903143105038	WITHOUT_CLASSIFICATION	9.685689496150793E-6	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999882948967465	WITHOUT_CLASSIFICATION	1.1705103253527224E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999955446224352	WITHOUT_CLASSIFICATION	4.455377564715383E-6	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999955446224352	WITHOUT_CLASSIFICATION	4.455377564715383E-6	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999781156697006	WITHOUT_CLASSIFICATION	2.1884330299472546E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999781156697006	WITHOUT_CLASSIFICATION	2.1884330299472546E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999998369951391	WITHOUT_CLASSIFICATION	1.6300486087864752E-7	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999998369951391	WITHOUT_CLASSIFICATION	1.6300486087864752E-7	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999921304376483	WITHOUT_CLASSIFICATION	7.869562351590008E-6	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999927218931325	WITHOUT_CLASSIFICATION	7.278106867509043E-6	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999923868083311	WITHOUT_CLASSIFICATION	7.613191668824589E-6	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999963100347565	WITHOUT_CLASSIFICATION	3.6899652434213375E-6	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999915204335802	WITHOUT_CLASSIFICATION	8.479566419706726E-6	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999957468430403	WITHOUT_CLASSIFICATION	4.2531569596634805E-6	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999990519617885	WITHOUT_CLASSIFICATION	9.480382113889203E-7	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999232270163235	WITHOUT_CLASSIFICATION	7.677298367650668E-5	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999979247389761	WITHOUT_CLASSIFICATION	2.0752610238743506E-6	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999986232570798	WITHOUT_CLASSIFICATION	1.3767429202416902E-6	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999909307792132	WITHOUT_CLASSIFICATION	9.069220786837071E-6	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.999999548186944	WITHOUT_CLASSIFICATION	4.5181305601496166E-7	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999993486161598	WITHOUT_CLASSIFICATION	6.513838402308874E-7	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999973156007285	WITHOUT_CLASSIFICATION	2.6843992715107927E-6	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9995564008297632	WITHOUT_CLASSIFICATION	4.435991702368845E-4	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9999664082667771	WITHOUT_CLASSIFICATION	3.359173322297485E-5	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9999987203224001	WITHOUT_CLASSIFICATION	1.2796775998459923E-6	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999902803195705	WITHOUT_CLASSIFICATION	9.719680429512897E-6	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999486443788056	WITHOUT_CLASSIFICATION	5.1355621194375065E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999298080986118	WITHOUT_CLASSIFICATION	7.019190138828577E-5	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999991147353849	WITHOUT_CLASSIFICATION	8.852646151789988E-7	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999995624840887	WITHOUT_CLASSIFICATION	4.37515911273122E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9998990644438709	WITHOUT_CLASSIFICATION	1.0093555612908202E-4	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9998990644438709	WITHOUT_CLASSIFICATION	1.0093555612908202E-4	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999882948967465	WITHOUT_CLASSIFICATION	1.1705103253527224E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999955446224352	WITHOUT_CLASSIFICATION	4.455377564715383E-6	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999781156697006	WITHOUT_CLASSIFICATION	2.1884330299472546E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999998369951391	WITHOUT_CLASSIFICATION	1.6300486087864752E-7	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999989457050847	WITHOUT_CLASSIFICATION	1.0542949152226736E-6	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999903675647076	WITHOUT_CLASSIFICATION	9.632435292340655E-6	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999914052568937	WITHOUT_CLASSIFICATION	8.594743106328971E-6	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999986639948124	WITHOUT_CLASSIFICATION	1.3360051875693142E-6	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999983861770482	WITHOUT_CLASSIFICATION	1.61382295174719E-6	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999983861770482	WITHOUT_CLASSIFICATION	1.61382295174719E-6	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999997350287506	WITHOUT_CLASSIFICATION	2.6497124935768735E-7	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999964017146229	WITHOUT_CLASSIFICATION	3.598285377153849E-6	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999309585804813	WITHOUT_CLASSIFICATION	6.9041419518604E-5	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999983266213355	WITHOUT_CLASSIFICATION	1.6733786644528071E-6	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999954754104713	WITHOUT_CLASSIFICATION	4.52458952864717E-6	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999954754104713	WITHOUT_CLASSIFICATION	4.52458952864717E-6	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999464141670154	WITHOUT_CLASSIFICATION	5.3585832984535274E-5	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9999923167325513	WITHOUT_CLASSIFICATION	7.68326744875471E-6	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999952057241202	WITHOUT_CLASSIFICATION	4.7942758798593135E-6	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9996225524866326	WITHOUT_CLASSIFICATION	3.774475133675494E-4	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999910637284501	WITHOUT_CLASSIFICATION	8.93627154995252E-6	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999989620294177	WITHOUT_CLASSIFICATION	1.0379705822863366E-6	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999921146799549	WITHOUT_CLASSIFICATION	7.885320045204002E-6	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.999981361104324	WITHOUT_CLASSIFICATION	1.8638895676001594E-5	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999946701108997	WITHOUT_CLASSIFICATION	5.3298891002582945E-6	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9999975769124428	WITHOUT_CLASSIFICATION	2.4230875572777123E-6	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999931450546403	WITHOUT_CLASSIFICATION	6.8549453596830585E-6	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999163837153742	WITHOUT_CLASSIFICATION	8.361628462591638E-5	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999998415963814	WITHOUT_CLASSIFICATION	1.5840361864451048E-7	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999986526389142	WITHOUT_CLASSIFICATION	1.3473610858745446E-6	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999912694401241	WITHOUT_CLASSIFICATION	8.730559875997305E-6	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999962276316318	WITHOUT_CLASSIFICATION	3.772368368182141E-6	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999987515984347	WITHOUT_CLASSIFICATION	1.2484015653676473E-6	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999976447905478	WITHOUT_CLASSIFICATION	2.3552094521929337E-6	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999982930665233	WITHOUT_CLASSIFICATION	1.7069334766902882E-6	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.999993730598809	WITHOUT_CLASSIFICATION	6.269401190962103E-6	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999970613431702	WITHOUT_CLASSIFICATION	2.9386568296848404E-6	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999971621647092	WITHOUT_CLASSIFICATION	2.837835290759198E-6	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999971621647092	WITHOUT_CLASSIFICATION	2.837835290759198E-6	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999571528805573	WITHOUT_CLASSIFICATION	4.284711944268877E-5	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999990223455834	WITHOUT_CLASSIFICATION	9.776544165972944E-7	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999996023072538	WITHOUT_CLASSIFICATION	3.9769274621990343E-7	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999996023072538	WITHOUT_CLASSIFICATION	3.9769274621990343E-7	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999801878933199	WITHOUT_CLASSIFICATION	1.9812106680101913E-5	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999980911485878	WITHOUT_CLASSIFICATION	1.9088514122166193E-6	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999925887191561	WITHOUT_CLASSIFICATION	7.411280843926605E-6	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999992345153574	WITHOUT_CLASSIFICATION	7.654846426540924E-7	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999992345153574	WITHOUT_CLASSIFICATION	7.654846426540924E-7	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9997703950539499	WITHOUT_CLASSIFICATION	2.2960494605000104E-4	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999985722366257	WITHOUT_CLASSIFICATION	1.4277633743076297E-6	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999981700733566	WITHOUT_CLASSIFICATION	1.8299266433720792E-6	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.999990161486077	WITHOUT_CLASSIFICATION	9.838513923051093E-6	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999983840604019	WITHOUT_CLASSIFICATION	1.6159395981708268E-6	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999879187167171	WITHOUT_CLASSIFICATION	1.2081283283011357E-5	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999958267534819	WITHOUT_CLASSIFICATION	4.173246518218169E-6	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999684389361989	WITHOUT_CLASSIFICATION	3.1561063801033106E-5	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.999998391646582	WITHOUT_CLASSIFICATION	1.608353418001282E-6	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999911760068994	WITHOUT_CLASSIFICATION	8.823993100741623E-6	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999982702544187	WITHOUT_CLASSIFICATION	1.7297455813989381E-6	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999877443881353	WITHOUT_CLASSIFICATION	1.225561186459224E-5	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9999982719825216	WITHOUT_CLASSIFICATION	1.7280174784511032E-6	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999988202751725	WITHOUT_CLASSIFICATION	1.179724827589215E-6	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999901511627473	WITHOUT_CLASSIFICATION	9.848837252813474E-6	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999997406536371	WITHOUT_CLASSIFICATION	2.5934636296518863E-7	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999980745225452	WITHOUT_CLASSIFICATION	1.9254774547940635E-6	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999857519480262	WITHOUT_CLASSIFICATION	1.4248051973726693E-5	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999914365769149	WITHOUT_CLASSIFICATION	8.563423085150518E-6	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999997004706337	WITHOUT_CLASSIFICATION	2.9952936632294165E-7	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9999966645408812	WITHOUT_CLASSIFICATION	3.335459118702972E-6	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9999975253913455	WITHOUT_CLASSIFICATION	2.4746086546192512E-6	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999964283997002	WITHOUT_CLASSIFICATION	3.571600299797839E-6	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999974482885662	WITHOUT_CLASSIFICATION	2.5517114337906827E-6	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999659833772939	WITHOUT_CLASSIFICATION	3.401662270605861E-5	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999990811965394	WITHOUT_CLASSIFICATION	9.188034606521116E-7	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.999872126087164	WITHOUT_CLASSIFICATION	1.2787391283591807E-4	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999962369183398	WITHOUT_CLASSIFICATION	3.7630816601986123E-6	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999931263293728	WITHOUT_CLASSIFICATION	6.873670627156711E-6	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.99999857847504	WITHOUT_CLASSIFICATION	1.421524959950152E-6	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999803484984414	WITHOUT_CLASSIFICATION	1.965150155851137E-5	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999988202751725	WITHOUT_CLASSIFICATION	1.179724827589215E-6	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999962369183398	WITHOUT_CLASSIFICATION	3.7630816601986123E-6	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999931263293728	WITHOUT_CLASSIFICATION	6.873670627156711E-6	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999803484984414	WITHOUT_CLASSIFICATION	1.965150155851137E-5	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999978918350709	WITHOUT_CLASSIFICATION	2.1081649289835876E-6	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9999968619905595	WITHOUT_CLASSIFICATION	3.138009440618124E-6	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999974178173506	WITHOUT_CLASSIFICATION	2.5821826493567793E-6	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999995561638574	WITHOUT_CLASSIFICATION	4.438361426933515E-7	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.999992120736302	WITHOUT_CLASSIFICATION	7.879263698070509E-6	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999998835216947	WITHOUT_CLASSIFICATION	1.1647830533931261E-7	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9999897059743912	WITHOUT_CLASSIFICATION	1.0294025608792375E-5	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9999979005135087	WITHOUT_CLASSIFICATION	2.0994864914044805E-6	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9999937650442332	WITHOUT_CLASSIFICATION	6.234955766781205E-6	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.99974303410098	WITHOUT_CLASSIFICATION	2.569658990200477E-4	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.999973907454074	WITHOUT_CLASSIFICATION	2.609254592603632E-5	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.999973907454074	WITHOUT_CLASSIFICATION	2.609254592603632E-5	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.999997912250315	WITHOUT_CLASSIFICATION	2.087749685081503E-6	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999963613759153	WITHOUT_CLASSIFICATION	3.6386240847832513E-6	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999986878125494	WITHOUT_CLASSIFICATION	1.312187450639135E-6	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999915634581427	WITHOUT_CLASSIFICATION	8.436541857434337E-6	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.999999503229879	WITHOUT_CLASSIFICATION	4.967701209959612E-7	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999973753268705	WITHOUT_CLASSIFICATION	2.6246731295314173E-6	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999981825176602	WITHOUT_CLASSIFICATION	1.8174823398108853E-6	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999188714763879	WITHOUT_CLASSIFICATION	8.112852361211455E-5	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999999023770961	WITHOUT_CLASSIFICATION	9.762290388117669E-8	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.999997173541962	WITHOUT_CLASSIFICATION	2.8264580379171335E-6	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999987728800802	WITHOUT_CLASSIFICATION	1.2271199197953707E-6	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999930501017477	WITHOUT_CLASSIFICATION	6.9498982522830015E-6	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999890608396302	WITHOUT_CLASSIFICATION	1.0939160369852275E-5	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9996990282518762	WITHOUT_CLASSIFICATION	3.009717481238316E-4	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9999451252842008	WITHOUT_CLASSIFICATION	5.4874715799237E-5	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999353285494875	WITHOUT_CLASSIFICATION	6.467145051241537E-5	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.999987071306577	WITHOUT_CLASSIFICATION	1.2928693423053753E-5	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9999904146856444	WITHOUT_CLASSIFICATION	9.585314355547746E-6	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9999833311893167	WITHOUT_CLASSIFICATION	1.666881068323915E-5	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9997630736103718	WITHOUT_CLASSIFICATION	2.3692638962822296E-4	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9999806372848534	WITHOUT_CLASSIFICATION	1.936271514654549E-5	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9999934523835291	WITHOUT_CLASSIFICATION	6.547616470950915E-6	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999377857908216	WITHOUT_CLASSIFICATION	6.221420917837026E-5	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9999882317260101	WITHOUT_CLASSIFICATION	1.17682739897827E-5	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999907714042175	WITHOUT_CLASSIFICATION	9.228595782499512E-6	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9999728495214809	WITHOUT_CLASSIFICATION	2.7150478519103573E-5	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999994837979866	WITHOUT_CLASSIFICATION	5.16202013410694E-7	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999979262501071	WITHOUT_CLASSIFICATION	2.073749892914727E-6	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.9999946702151307	WITHOUT_CLASSIFICATION	5.329784869369789E-6	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999986010137063	WITHOUT_CLASSIFICATION	1.3989862936590863E-6	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999975606770809	WITHOUT_CLASSIFICATION	2.4393229191365874E-6	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9999984432549561	WITHOUT_CLASSIFICATION	1.5567450438277488E-6	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999988913345496	WITHOUT_CLASSIFICATION	1.1086654504768962E-6	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999976366936575	WITHOUT_CLASSIFICATION	2.3633063424254086E-6	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999954019707223	WITHOUT_CLASSIFICATION	4.598029277610584E-6	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999997884333384	WITHOUT_CLASSIFICATION	2.115666617054753E-7	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999989558808912	WITHOUT_CLASSIFICATION	1.0441191088275217E-6	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999927986596575	WITHOUT_CLASSIFICATION	7.201340342365985E-6	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.99999613179681	WITHOUT_CLASSIFICATION	3.8682031900119495E-6	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999973331125737	WITHOUT_CLASSIFICATION	2.6668874263810485E-6	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999973709516743	WITHOUT_CLASSIFICATION	2.6290483256640857E-6	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999460209351165	WITHOUT_CLASSIFICATION	5.397906488358732E-5	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.999995714073089	WITHOUT_CLASSIFICATION	4.285926911000335E-6	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999999008924215	WITHOUT_CLASSIFICATION	9.910757848712738E-8	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999646154081516	WITHOUT_CLASSIFICATION	3.538459184839646E-5	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999937743079506	WITHOUT_CLASSIFICATION	6.225692049496187E-6	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999987547880472	WITHOUT_CLASSIFICATION	1.2452119527280292E-6	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999998140251669	WITHOUT_CLASSIFICATION	1.8597483314636115E-7	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999993022478567	WITHOUT_CLASSIFICATION	6.977521432769357E-7	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999993522736595	WITHOUT_CLASSIFICATION	6.477263404541603E-7	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999895963570296	WITHOUT_CLASSIFICATION	1.0403642970366545E-5	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999900935743823	WITHOUT_CLASSIFICATION	9.906425617681095E-6	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.999992500102661	WITHOUT_CLASSIFICATION	7.4998973389720925E-6	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.999998798005032	WITHOUT_CLASSIFICATION	1.2019949680098165E-6	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999976022593325	WITHOUT_CLASSIFICATION	2.397740667472636E-6	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999953825461332	WITHOUT_CLASSIFICATION	4.617453866782761E-6	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999942944765876	WITHOUT_CLASSIFICATION	5.70552341239405E-6	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999564312411072	WITHOUT_CLASSIFICATION	4.3568758892776386E-5	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9995974254742425	WITHOUT_CLASSIFICATION	4.0257452575754053E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9998829740493034	WITHOUT_CLASSIFICATION	1.170259506967163E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9998829740493034	WITHOUT_CLASSIFICATION	1.170259506967163E-4	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999983795026766	WITHOUT_CLASSIFICATION	1.6204973234311246E-6	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999987500803966	WITHOUT_CLASSIFICATION	1.2499196033210386E-6	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999986403563521	WITHOUT_CLASSIFICATION	1.3596436479381814E-6	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999995485505617	WITHOUT_CLASSIFICATION	4.514494382994275E-6	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999974660743086	WITHOUT_CLASSIFICATION	2.5339256914925434E-6	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999925879775093	WITHOUT_CLASSIFICATION	7.412022490787697E-6	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.999955023187764	WITHOUT_CLASSIFICATION	4.4976812236004425E-5	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999821068474183	WITHOUT_CLASSIFICATION	1.789315258167131E-5	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999993178203723	WITHOUT_CLASSIFICATION	6.821796275761474E-7	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999852864090555	WITHOUT_CLASSIFICATION	1.4713590944521156E-5	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999985916166324	WITHOUT_CLASSIFICATION	1.4083833676045935E-6	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9999981301039221	WITHOUT_CLASSIFICATION	1.869896077912293E-6	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999426576690545	WITHOUT_CLASSIFICATION	5.73423309453339E-5	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.998141486119083	WITHOUT_CLASSIFICATION	0.0018585138809169323	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999856313557359	WITHOUT_CLASSIFICATION	1.4368644264144887E-5	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999973245064527	WITHOUT_CLASSIFICATION	2.6754935472415188E-6	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9999453832876214	WITHOUT_CLASSIFICATION	5.461671237850211E-5	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999992577418041	WITHOUT_CLASSIFICATION	7.422581959539632E-7	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999989232220783	WITHOUT_CLASSIFICATION	1.076777921674475E-6	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999949605909526	WITHOUT_CLASSIFICATION	5.039409047367946E-6	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999979709937754	WITHOUT_CLASSIFICATION	2.029006224591981E-6	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999994789245283	WITHOUT_CLASSIFICATION	5.210754715895475E-7	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9995417237199022	WITHOUT_CLASSIFICATION	4.5827628009779926E-4	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999181575206533	WITHOUT_CLASSIFICATION	8.184247934682817E-5	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999996980926542	WITHOUT_CLASSIFICATION	3.0190734581038907E-7	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999706801104866	WITHOUT_CLASSIFICATION	2.931988951340886E-5	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.999997938756256	WITHOUT_CLASSIFICATION	2.0612437439799873E-6	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999990129333068	WITHOUT_CLASSIFICATION	9.870666931531538E-7	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999905775590016	WITHOUT_CLASSIFICATION	9.42244099835125E-6	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999996588705347	WITHOUT_CLASSIFICATION	3.4112946525838375E-7	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999944525290919	WITHOUT_CLASSIFICATION	5.547470908052529E-6	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999964663830855	WITHOUT_CLASSIFICATION	3.5336169145042443E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999869390476204	WITHOUT_CLASSIFICATION	1.3060952379601723E-5	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999919734820885	WITHOUT_CLASSIFICATION	8.026517911581395E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999869390476204	WITHOUT_CLASSIFICATION	1.3060952379601723E-5	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999969680211203	WITHOUT_CLASSIFICATION	3.031978879686005E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999992884096182	WITHOUT_CLASSIFICATION	7.11590381869223E-7	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999992884096182	WITHOUT_CLASSIFICATION	7.11590381869223E-7	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999992884096182	WITHOUT_CLASSIFICATION	7.11590381869223E-7	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999981562716463	WITHOUT_CLASSIFICATION	1.8437283535725763E-6	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999981562716463	WITHOUT_CLASSIFICATION	1.8437283535725763E-6	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999503691884366	WITHOUT_CLASSIFICATION	4.9630811563437286E-5	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999985196854125	WITHOUT_CLASSIFICATION	1.4803145874514395E-6	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999982638953903	WITHOUT_CLASSIFICATION	1.7361046097382103E-6	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9986515290698397	WITHOUT_CLASSIFICATION	0.0013484709301603592	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.999995009644763	WITHOUT_CLASSIFICATION	4.990355237089128E-6	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999842204730408	WITHOUT_CLASSIFICATION	1.577952695917308E-5	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999895313453274	WITHOUT_CLASSIFICATION	1.0468654672556003E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999858161556756	WITHOUT_CLASSIFICATION	1.4183844324466226E-5	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999970794934652	WITHOUT_CLASSIFICATION	2.920506534824434E-6	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999237501180253	WITHOUT_CLASSIFICATION	7.624988197473896E-5	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999335544718033	WITHOUT_CLASSIFICATION	6.644552819662705E-5	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999957196539889	WITHOUT_CLASSIFICATION	4.280346011122785E-6	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9998987013381552	WITHOUT_CLASSIFICATION	1.0129866184479647E-4	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9999976690887029	WITHOUT_CLASSIFICATION	2.3309112970805776E-6	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999982168487144	WITHOUT_CLASSIFICATION	1.7831512855288278E-6	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9999958092611033	WITHOUT_CLASSIFICATION	4.190738896647018E-6	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999995227226521	WITHOUT_CLASSIFICATION	4.772773478350845E-7	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999880090390143	WITHOUT_CLASSIFICATION	1.1990960985681761E-5	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999880090390143	WITHOUT_CLASSIFICATION	1.1990960985681761E-5	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9999857972751428	WITHOUT_CLASSIFICATION	1.4202724857187537E-5	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999887355215815	WITHOUT_CLASSIFICATION	1.1264478418547094E-5	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999887355215815	WITHOUT_CLASSIFICATION	1.1264478418547094E-5	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999918702416639	WITHOUT_CLASSIFICATION	8.129758335972273E-6	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9999958260103723	WITHOUT_CLASSIFICATION	4.173989627751568E-6	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9999801348886709	WITHOUT_CLASSIFICATION	1.9865111329145183E-5	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9999874057922962	WITHOUT_CLASSIFICATION	1.2594207703789597E-5	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9999875058220324	WITHOUT_CLASSIFICATION	1.2494177967612467E-5	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999937216848317	WITHOUT_CLASSIFICATION	6.278315168308821E-6	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9999968649942622	WITHOUT_CLASSIFICATION	3.135005737748723E-6	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999866147625598	WITHOUT_CLASSIFICATION	1.3385237440231898E-5	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.999991307325682	WITHOUT_CLASSIFICATION	8.69267431802771E-6	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999794026680261	WITHOUT_CLASSIFICATION	2.059733197383537E-5	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999931130369265	WITHOUT_CLASSIFICATION	6.886963073508946E-6	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.999992197625739	WITHOUT_CLASSIFICATION	7.802374260978934E-6	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999801742021681	WITHOUT_CLASSIFICATION	1.9825797831970453E-5	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999966035742984	WITHOUT_CLASSIFICATION	3.3964257014582573E-6	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999858161556756	WITHOUT_CLASSIFICATION	1.4183844324466226E-5	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9997702193928371	WITHOUT_CLASSIFICATION	2.2978060716307092E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999846955122674	WITHOUT_CLASSIFICATION	1.5304487732640223E-5	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9998437700411497	WITHOUT_CLASSIFICATION	1.5622995885038432E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9998437700411497	WITHOUT_CLASSIFICATION	1.5622995885038432E-4	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999972641727296	WITHOUT_CLASSIFICATION	2.7358272703945913E-6	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999988561339221	WITHOUT_CLASSIFICATION	1.1438660779365273E-6	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999993432517142	WITHOUT_CLASSIFICATION	6.567482858293058E-7	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9999923895556326	WITHOUT_CLASSIFICATION	7.610444367393496E-6	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.999998174663447	WITHOUT_CLASSIFICATION	1.8253365530685619E-6	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999980674520711	WITHOUT_CLASSIFICATION	1.932547928825465E-6	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999985783893722	WITHOUT_CLASSIFICATION	1.4216106276843691E-6	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999993285947785	WITHOUT_CLASSIFICATION	6.714052215751835E-7	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999978361305565	WITHOUT_CLASSIFICATION	2.163869443476963E-6	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999998658411746	WITHOUT_CLASSIFICATION	1.3415882529907757E-7	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999962019696516	WITHOUT_CLASSIFICATION	3.79803034853388E-6	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999943083927672	WITHOUT_CLASSIFICATION	5.691607232938327E-6	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999795791424922	WITHOUT_CLASSIFICATION	2.042085750777926E-5	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999967786259126	WITHOUT_CLASSIFICATION	3.22137408734328E-6	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.999999809401728	WITHOUT_CLASSIFICATION	1.9059827213607958E-7	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999926355281958	WITHOUT_CLASSIFICATION	7.364471804203986E-6	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999711442338729	WITHOUT_CLASSIFICATION	2.885576612713702E-5	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999854123743757	WITHOUT_CLASSIFICATION	1.458762562428237E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999967793366547	WITHOUT_CLASSIFICATION	3.2206633453834373E-6	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999979159498384	WITHOUT_CLASSIFICATION	2.0840501615667735E-6	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999774330913633	WITHOUT_CLASSIFICATION	2.25669086366355E-5	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9998998634590004	WITHOUT_CLASSIFICATION	1.0013654099958024E-4	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999955733758144	WITHOUT_CLASSIFICATION	4.426624185697802E-6	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999963104650612	WITHOUT_CLASSIFICATION	3.689534938765544E-6	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999960916207955	WITHOUT_CLASSIFICATION	3.908379204486042E-6	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.999991936044755	WITHOUT_CLASSIFICATION	8.063955245032401E-6	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999984711495817	WITHOUT_CLASSIFICATION	1.528850418257346E-6	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999988883708338	WITHOUT_CLASSIFICATION	1.1116291661478687E-6	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999994416151579	WITHOUT_CLASSIFICATION	5.583848420630798E-7	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999999230365958	WITHOUT_CLASSIFICATION	7.696340414237616E-8	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999977733280799	WITHOUT_CLASSIFICATION	2.2266719200516355E-6	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9998458463906735	WITHOUT_CLASSIFICATION	1.5415360932652898E-4	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999978059975652	WITHOUT_CLASSIFICATION	2.19400243493882E-6	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999980516188174	WITHOUT_CLASSIFICATION	1.9483811826324384E-6	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999537547122777	WITHOUT_CLASSIFICATION	4.6245287722372696E-5	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.9999770376930814	WITHOUT_CLASSIFICATION	2.2962306918572664E-5	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999988883708338	WITHOUT_CLASSIFICATION	1.1116291661478687E-6	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999985035173483	WITHOUT_CLASSIFICATION	1.4964826516385712E-6	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999537547122777	WITHOUT_CLASSIFICATION	4.6245287722372696E-5	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999996435473831	WITHOUT_CLASSIFICATION	3.564526167895484E-7	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999923844493575	WITHOUT_CLASSIFICATION	7.615550642463623E-6	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999931090518542	WITHOUT_CLASSIFICATION	6.890948145708639E-6	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999957990694023	WITHOUT_CLASSIFICATION	4.200930597686009E-6	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999905152546842	WITHOUT_CLASSIFICATION	9.484745315708396E-6	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999877289517668	WITHOUT_CLASSIFICATION	1.227104823334479E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999877289517668	WITHOUT_CLASSIFICATION	1.227104823334479E-5	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999872915671844	WITHOUT_CLASSIFICATION	1.2708432815652632E-5	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999989422208069	WITHOUT_CLASSIFICATION	1.0577791931676965E-6	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9993252219204524	WITHOUT_CLASSIFICATION	6.74778079547604E-4	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9993252219204524	WITHOUT_CLASSIFICATION	6.74778079547604E-4	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999467023342462	WITHOUT_CLASSIFICATION	5.329766575379822E-5	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9989705605003731	WITHOUT_CLASSIFICATION	0.0010294394996269	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9997520685283263	WITHOUT_CLASSIFICATION	2.479314716736224E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9997520685283263	WITHOUT_CLASSIFICATION	2.479314716736224E-4	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999956414535529	WITHOUT_CLASSIFICATION	4.358546447023607E-6	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999960022242868	WITHOUT_CLASSIFICATION	3.997775713333719E-6	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999963556915792	WITHOUT_CLASSIFICATION	3.6443084207134305E-6	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999994679707956	WITHOUT_CLASSIFICATION	5.32029204392506E-7	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999248683710785	WITHOUT_CLASSIFICATION	7.513162892154455E-5	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999939830918858	WITHOUT_CLASSIFICATION	6.016908114200247E-6	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999953853991418	WITHOUT_CLASSIFICATION	4.614600858203177E-6	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999230347515426	WITHOUT_CLASSIFICATION	7.696524845728489E-5	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999950711729052	WITHOUT_CLASSIFICATION	4.92882709476436E-6	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999981896980514	WITHOUT_CLASSIFICATION	1.810301948507256E-6	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9999904441820183	WITHOUT_CLASSIFICATION	9.555817981593046E-6	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999931135004602	WITHOUT_CLASSIFICATION	6.886499539812077E-6	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999985345645758	WITHOUT_CLASSIFICATION	1.46543542431548E-6	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999957507953842	WITHOUT_CLASSIFICATION	4.249204615854142E-6	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999938890691662	WITHOUT_CLASSIFICATION	6.110930833721237E-6	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999953659696474	WITHOUT_CLASSIFICATION	4.63403035253246E-6	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999990364369076	WITHOUT_CLASSIFICATION	9.635630924346854E-7	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999948172195846	WITHOUT_CLASSIFICATION	5.182780415382201E-6	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999974927669965	WITHOUT_CLASSIFICATION	2.5072330035876552E-6	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999426360560709	WITHOUT_CLASSIFICATION	5.736394392911813E-5	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999966462356437	WITHOUT_CLASSIFICATION	3.353764356455197E-6	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999885453586749	WITHOUT_CLASSIFICATION	1.145464132513654E-5	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999984927065261	WITHOUT_CLASSIFICATION	1.507293473948763E-6	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999701665418705	WITHOUT_CLASSIFICATION	2.9833458129333478E-5	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999736104805366	WITHOUT_CLASSIFICATION	2.6389519463520292E-5	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999801008560003	WITHOUT_CLASSIFICATION	1.9899143999692985E-5	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.999999089430073	WITHOUT_CLASSIFICATION	9.105699269935453E-7	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9999952281781574	WITHOUT_CLASSIFICATION	4.7718218425081165E-6	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999859079837492	WITHOUT_CLASSIFICATION	1.4092016250798106E-5	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999859079837492	WITHOUT_CLASSIFICATION	1.4092016250798106E-5	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999997981095864	WITHOUT_CLASSIFICATION	2.0189041369335672E-7	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999998233699527	WITHOUT_CLASSIFICATION	1.7663004713657117E-7	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999965403191347	WITHOUT_CLASSIFICATION	3.459680865385714E-6	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999873588920669	WITHOUT_CLASSIFICATION	1.2641107933075126E-5	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999780609217401	WITHOUT_CLASSIFICATION	2.193907825981825E-5	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9999941527219132	WITHOUT_CLASSIFICATION	5.8472780868395115E-6	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999973011997375	WITHOUT_CLASSIFICATION	2.6988002625794813E-6	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999978488406933	WITHOUT_CLASSIFICATION	2.151159306616153E-6	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999878224971238	WITHOUT_CLASSIFICATION	1.2177502876132473E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999997144568092	WITHOUT_CLASSIFICATION	2.855431908178985E-7	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999980283160349	WITHOUT_CLASSIFICATION	1.9716839651155246E-6	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999986844375688	WITHOUT_CLASSIFICATION	1.315562431171099E-6	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.999934618753342	WITHOUT_CLASSIFICATION	6.53812466580213E-5	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9996930727229141	WITHOUT_CLASSIFICATION	3.069272770859159E-4	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.999998273503357	WITHOUT_CLASSIFICATION	1.7264966429054602E-6	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999968300504937	WITHOUT_CLASSIFICATION	3.169949506278167E-6	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999982492554143	WITHOUT_CLASSIFICATION	1.7507445857555107E-6	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999926883677781	WITHOUT_CLASSIFICATION	7.311632221885841E-6	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9999849842232907	WITHOUT_CLASSIFICATION	1.5015776709252058E-5	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999998134735769	WITHOUT_CLASSIFICATION	1.8652642309389782E-7	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999963263358094	WITHOUT_CLASSIFICATION	3.67366419074074E-6	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999174771937606	WITHOUT_CLASSIFICATION	8.2522806239462E-5	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999973706105952	WITHOUT_CLASSIFICATION	2.6293894047727264E-6	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999860628226706	WITHOUT_CLASSIFICATION	1.393717732934667E-5	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999968289280685	WITHOUT_CLASSIFICATION	3.1710719314856107E-6	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999835941447077	WITHOUT_CLASSIFICATION	1.640585529233305E-5	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999976846541904	WITHOUT_CLASSIFICATION	2.315345809573425E-6	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999855982366481	WITHOUT_CLASSIFICATION	1.4401763351767325E-5	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9999901166930089	WITHOUT_CLASSIFICATION	9.883306991233316E-6	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9999950057574143	WITHOUT_CLASSIFICATION	4.994242585678192E-6	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999912060096567	WITHOUT_CLASSIFICATION	8.793990343227381E-6	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999970469039432	WITHOUT_CLASSIFICATION	2.9530960568750988E-6	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999967058033473	WITHOUT_CLASSIFICATION	3.2941966527916076E-6	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9999985844678099	WITHOUT_CLASSIFICATION	1.4155321901313303E-6	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999874267863158	WITHOUT_CLASSIFICATION	1.257321368423171E-5	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999905895047252	WITHOUT_CLASSIFICATION	9.410495274927246E-6	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999914053043566	WITHOUT_CLASSIFICATION	8.594695643405146E-6	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9998745775948276	WITHOUT_CLASSIFICATION	1.2542240517246392E-4	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999929400809856	WITHOUT_CLASSIFICATION	7.0599190144139125E-6	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999999612016436	WITHOUT_CLASSIFICATION	3.879835655539441E-8	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999994790843916	WITHOUT_CLASSIFICATION	5.209156084894663E-7	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999976458176184	WITHOUT_CLASSIFICATION	2.3541823815437094E-6	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9998123080039939	WITHOUT_CLASSIFICATION	1.8769199600606362E-4	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9998123080039939	WITHOUT_CLASSIFICATION	1.8769199600606362E-4	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999931646863974	WITHOUT_CLASSIFICATION	6.8353136025044645E-6	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999987892004033	WITHOUT_CLASSIFICATION	1.210799596680371E-6	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999104539684168	WITHOUT_CLASSIFICATION	8.954603158311212E-5	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999898878869792	WITHOUT_CLASSIFICATION	1.0112113020786886E-5	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999980980317679	WITHOUT_CLASSIFICATION	1.9019682321462808E-6	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999983561862216	WITHOUT_CLASSIFICATION	1.6438137784805784E-6	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999978574613734	WITHOUT_CLASSIFICATION	2.142538626607029E-6	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999858118490713	WITHOUT_CLASSIFICATION	1.4188150928709665E-5	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999949862289584	WITHOUT_CLASSIFICATION	5.013771041509918E-6	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9999736555885881	WITHOUT_CLASSIFICATION	2.6344411411835647E-5	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9999957640799648	WITHOUT_CLASSIFICATION	4.235920035136484E-6	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.9999608050041351	WITHOUT_CLASSIFICATION	3.9194995864872884E-5	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9999948719085828	WITHOUT_CLASSIFICATION	5.1280914172207145E-6	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999781397276214	WITHOUT_CLASSIFICATION	2.1860272378600717E-5	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998957108230642	WITHOUT_CLASSIFICATION	1.0428917693582052E-4	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9999944889860184	WITHOUT_CLASSIFICATION	5.511013981529175E-6	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999585960084902	WITHOUT_CLASSIFICATION	4.1403991509676015E-5	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9999862296842115	WITHOUT_CLASSIFICATION	1.3770315788464666E-5	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998339108414862	WITHOUT_CLASSIFICATION	1.6608915851385454E-4	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9999845971414758	WITHOUT_CLASSIFICATION	1.5402858524212946E-5	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998213790287797	WITHOUT_CLASSIFICATION	1.7862097122025225E-4	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9998263448153217	WITHOUT_CLASSIFICATION	1.7365518467834533E-4	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999950216622032	WITHOUT_CLASSIFICATION	4.9783377968288765E-6	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999897531525049	WITHOUT_CLASSIFICATION	1.024684749516772E-5	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999943725344702	WITHOUT_CLASSIFICATION	5.627465529789423E-6	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999706184213726	WITHOUT_CLASSIFICATION	2.9381578627411395E-5	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999662420383462	WITHOUT_CLASSIFICATION	3.3757961653767314E-5	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9997283004466437	WITHOUT_CLASSIFICATION	2.7169955335621494E-4	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999622036177817	WITHOUT_CLASSIFICATION	3.7796382218367486E-5	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9998585118489914	WITHOUT_CLASSIFICATION	1.4148815100855505E-4	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.999988892686314	WITHOUT_CLASSIFICATION	1.1107313685918395E-5	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999683328221505	WITHOUT_CLASSIFICATION	3.16671778495315E-5	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999923117119331	WITHOUT_CLASSIFICATION	7.688288066897938E-6	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999451489601962	WITHOUT_CLASSIFICATION	5.48510398037507E-5	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9998745775948276	WITHOUT_CLASSIFICATION	1.2542240517246392E-4	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999995798924459	WITHOUT_CLASSIFICATION	4.201075540966094E-7	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999927001412342	WITHOUT_CLASSIFICATION	7.299858765916663E-6	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999927001412342	WITHOUT_CLASSIFICATION	7.299858765916663E-6	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999987017169841	WITHOUT_CLASSIFICATION	1.2982830158594992E-6	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999985098426296	WITHOUT_CLASSIFICATION	1.4901573703954533E-6	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.99999338721535	WITHOUT_CLASSIFICATION	6.612784649938697E-6	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.9999909272714897	WITHOUT_CLASSIFICATION	9.07272851026823E-6	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.999903500904985	WITHOUT_CLASSIFICATION	9.649909501485304E-5	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999135531088124	WITHOUT_CLASSIFICATION	8.644689118766443E-5	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.99994704738902	WITHOUT_CLASSIFICATION	5.295261098000967E-5	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9998744739244463	WITHOUT_CLASSIFICATION	1.2552607555362392E-4	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9998666498944732	WITHOUT_CLASSIFICATION	1.3335010552682685E-4	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999218595360788	WITHOUT_CLASSIFICATION	7.814046392114111E-5	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9998063717474168	WITHOUT_CLASSIFICATION	1.9362825258317532E-4	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9997221616070059	WITHOUT_CLASSIFICATION	2.7783839299407454E-4	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999249570911056	WITHOUT_CLASSIFICATION	7.504290889445581E-5	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999975086344863	WITHOUT_CLASSIFICATION	2.491365513540566E-6	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999985709540236	WITHOUT_CLASSIFICATION	1.429045976410052E-6	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999642507761001	WITHOUT_CLASSIFICATION	3.5749223899924554E-5	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9998858826575965	WITHOUT_CLASSIFICATION	1.1411734240349886E-4	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9996773990306319	WITHOUT_CLASSIFICATION	3.2260096936813885E-4	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9998611116476479	WITHOUT_CLASSIFICATION	1.388883523521419E-4	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999186140488497	WITHOUT_CLASSIFICATION	8.138595115036793E-5	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9998230032669233	WITHOUT_CLASSIFICATION	1.7699673307673415E-4	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9997827437727569	WITHOUT_CLASSIFICATION	2.1725622724315735E-4	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999995641386417	WITHOUT_CLASSIFICATION	4.358613583452219E-7	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999917291435765	WITHOUT_CLASSIFICATION	8.270856423455586E-6	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999997001188896	WITHOUT_CLASSIFICATION	2.998811104406414E-7	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999631093037804	WITHOUT_CLASSIFICATION	3.6890696219544047E-5	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999854720872603	WITHOUT_CLASSIFICATION	1.4527912739571117E-5	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.999994306342029	WITHOUT_CLASSIFICATION	5.693657970949885E-6	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999842834060013	WITHOUT_CLASSIFICATION	1.5716593998619822E-5	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999961758542419	WITHOUT_CLASSIFICATION	3.824145758018152E-6	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9999986037093066	WITHOUT_CLASSIFICATION	1.3962906933530176E-6	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.999992594014468	WITHOUT_CLASSIFICATION	7.405985531961042E-6	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9999954353304595	WITHOUT_CLASSIFICATION	4.564669540471265E-6	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999997241605593	WITHOUT_CLASSIFICATION	2.7583944064496847E-7	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999939059683025	WITHOUT_CLASSIFICATION	6.0940316974911145E-6	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999622590040432	WITHOUT_CLASSIFICATION	3.774099595676701E-5	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999869318531712	WITHOUT_CLASSIFICATION	1.306814682887809E-5	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999631093037804	WITHOUT_CLASSIFICATION	3.6890696219544047E-5	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999854720872603	WITHOUT_CLASSIFICATION	1.4527912739571117E-5	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.999994306342029	WITHOUT_CLASSIFICATION	5.693657970949885E-6	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999961758542419	WITHOUT_CLASSIFICATION	3.824145758018152E-6	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999354889106187	WITHOUT_CLASSIFICATION	6.45110893813793E-5	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999963298625666	WITHOUT_CLASSIFICATION	3.6701374334254854E-6	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999919182725637	WITHOUT_CLASSIFICATION	8.081727436320706E-6	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999392879686717	WITHOUT_CLASSIFICATION	6.071203132815087E-5	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999953697847743	WITHOUT_CLASSIFICATION	4.630215225606356E-6	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999979420531402	WITHOUT_CLASSIFICATION	2.057946859737497E-6	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999974517555545	WITHOUT_CLASSIFICATION	2.5482444453513948E-6	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.999994252734113	WITHOUT_CLASSIFICATION	5.747265886915236E-6	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999838553455969	WITHOUT_CLASSIFICATION	1.6144654403124012E-5	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999916399770118	WITHOUT_CLASSIFICATION	8.360022988231559E-6	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999944806319849	WITHOUT_CLASSIFICATION	5.519368015090091E-6	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999740603138727	WITHOUT_CLASSIFICATION	2.5939686127225606E-5	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999844161130717	WITHOUT_CLASSIFICATION	1.5583886928367334E-5	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999895938881818	WITHOUT_CLASSIFICATION	1.0406111818234973E-5	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9999912507102527	WITHOUT_CLASSIFICATION	8.749289747246331E-6	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9999935422140048	WITHOUT_CLASSIFICATION	6.457785995255503E-6	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999667176014285	WITHOUT_CLASSIFICATION	3.3282398571532994E-5	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9996745293252233	WITHOUT_CLASSIFICATION	3.254706747767585E-4	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.999997061701546	WITHOUT_CLASSIFICATION	2.9382984539362036E-6	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999869318531712	WITHOUT_CLASSIFICATION	1.306814682887809E-5	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999963298625666	WITHOUT_CLASSIFICATION	3.6701374334254854E-6	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999919182725637	WITHOUT_CLASSIFICATION	8.081727436320706E-6	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999953697847743	WITHOUT_CLASSIFICATION	4.630215225606356E-6	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999979420531402	WITHOUT_CLASSIFICATION	2.057946859737497E-6	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999974517555545	WITHOUT_CLASSIFICATION	2.5482444453513948E-6	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.999994252734113	WITHOUT_CLASSIFICATION	5.747265886915236E-6	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999974053650205	WITHOUT_CLASSIFICATION	2.5946349794440893E-6	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999939922050597	WITHOUT_CLASSIFICATION	6.007794940331755E-6	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.999997985859781	WITHOUT_CLASSIFICATION	2.014140218986537E-6	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999997898433742	WITHOUT_CLASSIFICATION	2.101566258040366E-7	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999918364292285	WITHOUT_CLASSIFICATION	8.163570771561142E-6	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999918364292285	WITHOUT_CLASSIFICATION	8.163570771561142E-6	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9999986449241195	WITHOUT_CLASSIFICATION	1.3550758805544012E-6	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999724119044314	WITHOUT_CLASSIFICATION	2.7588095568535494E-5	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999993730356421	WITHOUT_CLASSIFICATION	6.269643578736269E-7	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999986484350716	WITHOUT_CLASSIFICATION	1.3515649283223807E-6	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.99999903969421	WITHOUT_CLASSIFICATION	9.603057900333443E-7	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999822266938696	WITHOUT_CLASSIFICATION	1.777330613047697E-5	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9999955191573903	WITHOUT_CLASSIFICATION	4.480842609812589E-6	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999953294363888	WITHOUT_CLASSIFICATION	4.670563611154267E-6	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999970600767009	WITHOUT_CLASSIFICATION	2.9399232992310815E-6	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9996044185243768	WITHOUT_CLASSIFICATION	3.9558147562326304E-4	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999221925051702	WITHOUT_CLASSIFICATION	7.780749482976791E-5	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9994355084731956	WITHOUT_CLASSIFICATION	5.644915268042964E-4	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999937934026574	WITHOUT_CLASSIFICATION	6.206597342569253E-6	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.999987877144835	WITHOUT_CLASSIFICATION	1.2122855165111926E-5	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999967695959332	WITHOUT_CLASSIFICATION	3.2304040668087248E-6	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999826197383779	WITHOUT_CLASSIFICATION	1.73802616221356E-5	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9998509868295438	WITHOUT_CLASSIFICATION	1.49013170456294E-4	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9997645822420054	WITHOUT_CLASSIFICATION	2.354177579945109E-4	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999476234341834	WITHOUT_CLASSIFICATION	5.237656581648237E-5	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999959213168905	WITHOUT_CLASSIFICATION	4.07868310952281E-6	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9796923018078627	WITHOUT_CLASSIFICATION	0.02030769819213728	IMPLEMENTATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999993004728677	WITHOUT_CLASSIFICATION	6.995271323129771E-7	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999990280737295	WITHOUT_CLASSIFICATION	9.719262704865905E-7	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5731596299004394	IMPLEMENTATION	0.4268403700995605	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999625245961062	WITHOUT_CLASSIFICATION	3.747540389377389E-5	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999998026217735	WITHOUT_CLASSIFICATION	1.9737822664093475E-7	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999992605867277	WITHOUT_CLASSIFICATION	7.394132722924118E-7	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999992705940428	WITHOUT_CLASSIFICATION	7.294059571098589E-7	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.999995091515946	WITHOUT_CLASSIFICATION	4.90848405399247E-6	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999625245961062	WITHOUT_CLASSIFICATION	3.747540389377389E-5	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999998026217735	WITHOUT_CLASSIFICATION	1.9737822664093475E-7	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.999987877144835	WITHOUT_CLASSIFICATION	1.2122855165111926E-5	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999898707454287	WITHOUT_CLASSIFICATION	1.012925457130508E-5	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999957725108848	WITHOUT_CLASSIFICATION	4.227489115144843E-6	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999940020450636	WITHOUT_CLASSIFICATION	5.9979549364375484E-6	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.99997476734833	WITHOUT_CLASSIFICATION	2.523265167005225E-5	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999969774659916	WITHOUT_CLASSIFICATION	3.022534008293749E-6	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999953655002141	WITHOUT_CLASSIFICATION	4.634499785940588E-6	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999099905480204	WITHOUT_CLASSIFICATION	9.000945197959673E-5	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.999957650818516	WITHOUT_CLASSIFICATION	4.2349181484059345E-5	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9993668070900846	WITHOUT_CLASSIFICATION	6.33192909915374E-4	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999995633636306	WITHOUT_CLASSIFICATION	4.366363693128214E-7	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.999999638174382	WITHOUT_CLASSIFICATION	3.6182561801505574E-7	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999981789455413	WITHOUT_CLASSIFICATION	1.8210544586180916E-6	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999996315459407	WITHOUT_CLASSIFICATION	3.684540592378406E-7	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999996744090334	WITHOUT_CLASSIFICATION	3.2559096669540034E-7	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999999068431387	WITHOUT_CLASSIFICATION	9.315686138202356E-8	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999997144211817	WITHOUT_CLASSIFICATION	2.8557881820790577E-7	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999622323888313	WITHOUT_CLASSIFICATION	3.776761116870668E-5	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999597666111024	WITHOUT_CLASSIFICATION	4.02333888975442E-5	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9998693620319946	WITHOUT_CLASSIFICATION	1.306379680054501E-4	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999909503849569	WITHOUT_CLASSIFICATION	9.04961504318362E-6	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999992577371867	WITHOUT_CLASSIFICATION	7.422628132023267E-7	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999989997215734	WITHOUT_CLASSIFICATION	1.0002784266692971E-6	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999917513389537	WITHOUT_CLASSIFICATION	8.248661046323804E-6	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999988619620104	WITHOUT_CLASSIFICATION	1.138037989585907E-6	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999994531763875	WITHOUT_CLASSIFICATION	5.468236125128022E-7	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999973396557015	WITHOUT_CLASSIFICATION	2.660344298426804E-6	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9999121479879632	WITHOUT_CLASSIFICATION	8.785201203681023E-5	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9996466238800372	WITHOUT_CLASSIFICATION	3.5337611996276273E-4	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9994873939251743	WITHOUT_CLASSIFICATION	5.126060748256221E-4	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999997283430431	WITHOUT_CLASSIFICATION	2.716569569291324E-7	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999852182840627	WITHOUT_CLASSIFICATION	1.4781715937352974E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9992282370271109	WITHOUT_CLASSIFICATION	7.717629728890797E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9992282370271109	WITHOUT_CLASSIFICATION	7.717629728890797E-4	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999937934026574	WITHOUT_CLASSIFICATION	6.206597342569253E-6	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.999999643321096	WITHOUT_CLASSIFICATION	3.56678903880854E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9998037131888566	WITHOUT_CLASSIFICATION	1.962868111433036E-4	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999943768422517	WITHOUT_CLASSIFICATION	5.623157748369469E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999759208938922	WITHOUT_CLASSIFICATION	2.4079106107801593E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999759208938922	WITHOUT_CLASSIFICATION	2.4079106107801593E-5	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999812192443339	WITHOUT_CLASSIFICATION	1.8780755666140688E-5	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9997889179116286	WITHOUT_CLASSIFICATION	2.110820883714866E-4	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.999991516034956	WITHOUT_CLASSIFICATION	8.48396504411292E-6	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999974172302437	WITHOUT_CLASSIFICATION	2.5827697562931323E-6	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999994219315892	WITHOUT_CLASSIFICATION	5.780684108491369E-7	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999962279862609	WITHOUT_CLASSIFICATION	3.77201373919699E-6	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999994060524481	WITHOUT_CLASSIFICATION	5.939475519928823E-7	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.999333107790123	WITHOUT_CLASSIFICATION	6.668922098770797E-4	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999927626330027	WITHOUT_CLASSIFICATION	7.2373669972554075E-6	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999936150802998	WITHOUT_CLASSIFICATION	6.384919700188129E-6	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999912514523557	WITHOUT_CLASSIFICATION	8.748547644364551E-6	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999862886961363	WITHOUT_CLASSIFICATION	1.371130386381651E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999694871478174	WITHOUT_CLASSIFICATION	3.0512852182497483E-5	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999979197869443	WITHOUT_CLASSIFICATION	2.0802130555976174E-6	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999782497394704	WITHOUT_CLASSIFICATION	2.1750260529573667E-5	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.9999758523295457	WITHOUT_CLASSIFICATION	2.414767045431502E-5	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999813854347892	WITHOUT_CLASSIFICATION	1.8614565210854436E-5	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999813854347892	WITHOUT_CLASSIFICATION	1.8614565210854436E-5	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999865121570217	WITHOUT_CLASSIFICATION	1.3487842978281917E-5	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999865121570217	WITHOUT_CLASSIFICATION	1.3487842978281917E-5	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999994600118289	WITHOUT_CLASSIFICATION	5.39988171105098E-7	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999998046315154	WITHOUT_CLASSIFICATION	1.953684845213269E-7	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999999701811949	WITHOUT_CLASSIFICATION	2.981880508295549E-8	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999750279166947	WITHOUT_CLASSIFICATION	2.497208330532874E-5	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.999998628698327	WITHOUT_CLASSIFICATION	1.3713016730039967E-6	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999969004198161	WITHOUT_CLASSIFICATION	3.099580183968341E-6	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999978183229351	WITHOUT_CLASSIFICATION	2.181677064886346E-6	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999862886961363	WITHOUT_CLASSIFICATION	1.371130386381651E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999694871478174	WITHOUT_CLASSIFICATION	3.0512852182497483E-5	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999782497394704	WITHOUT_CLASSIFICATION	2.1750260529573667E-5	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999486753774341	WITHOUT_CLASSIFICATION	5.132462256585725E-5	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999881291026633	WITHOUT_CLASSIFICATION	1.1870897336685785E-5	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999992946850674	WITHOUT_CLASSIFICATION	7.053149324676439E-7	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.999955772311387	WITHOUT_CLASSIFICATION	4.4227688613071325E-5	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999997959692435	WITHOUT_CLASSIFICATION	2.040307565686456E-7	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999999607211566	WITHOUT_CLASSIFICATION	3.9278843504401863E-8	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999946543137407	WITHOUT_CLASSIFICATION	5.3456862592705615E-6	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999881374436657	WITHOUT_CLASSIFICATION	1.1862556334270098E-5	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999956321716947	WITHOUT_CLASSIFICATION	4.367828305372428E-6	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999998796879854	WITHOUT_CLASSIFICATION	1.2031201457014396E-7	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999994718539233	WITHOUT_CLASSIFICATION	5.281460766437986E-7	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999962318872011	WITHOUT_CLASSIFICATION	3.7681127990009427E-6	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999883087473057	WITHOUT_CLASSIFICATION	1.1691252694329014E-5	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999978804553311	WITHOUT_CLASSIFICATION	2.119544668775033E-6	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.999993173866005	WITHOUT_CLASSIFICATION	6.82613399500795E-6	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999987023485583	WITHOUT_CLASSIFICATION	1.2976514417483623E-6	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999979592995437	WITHOUT_CLASSIFICATION	2.0407004563639952E-6	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.999613683856749	WITHOUT_CLASSIFICATION	3.86316143251051E-4	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999998246777186	WITHOUT_CLASSIFICATION	1.7532228138257678E-7	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999995517818447	WITHOUT_CLASSIFICATION	4.482181551786823E-7	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999999010449748	WITHOUT_CLASSIFICATION	9.895502520142973E-8	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999962945338515	WITHOUT_CLASSIFICATION	3.7054661485482674E-6	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999881813828969	WITHOUT_CLASSIFICATION	1.1818617103057762E-5	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999971270713117	WITHOUT_CLASSIFICATION	2.8729286883790633E-6	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999035615762901	WITHOUT_CLASSIFICATION	9.64384237098836E-5	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999849551441663	WITHOUT_CLASSIFICATION	1.504485583363856E-5	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999429644204575	WITHOUT_CLASSIFICATION	5.703557954257218E-5	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999629837971116	WITHOUT_CLASSIFICATION	3.701620288837499E-5	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999995341316864	WITHOUT_CLASSIFICATION	4.658683135270114E-7	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999985118078905	WITHOUT_CLASSIFICATION	1.4881921095061906E-6	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999984643350673	WITHOUT_CLASSIFICATION	1.5356649327270378E-6	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.999997305630384	WITHOUT_CLASSIFICATION	2.6943696160426857E-6	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999752115040138	WITHOUT_CLASSIFICATION	2.4788495986224504E-5	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999988696100344	WITHOUT_CLASSIFICATION	1.1303899655833327E-6	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999985038155743	WITHOUT_CLASSIFICATION	1.4961844257279671E-6	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999301729775713	WITHOUT_CLASSIFICATION	6.982702242868821E-5	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999728634807553	WITHOUT_CLASSIFICATION	2.7136519244758067E-5	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999728707512736	WITHOUT_CLASSIFICATION	2.7129248726400852E-5	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999947335231356	WITHOUT_CLASSIFICATION	5.266476864382567E-6	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999980035805176	WITHOUT_CLASSIFICATION	1.9964194824536393E-6	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999992163807914	WITHOUT_CLASSIFICATION	7.836192086993358E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9998037131888566	WITHOUT_CLASSIFICATION	1.962868111433036E-4	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999728634807553	WITHOUT_CLASSIFICATION	2.7136519244758067E-5	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999921797358906	WITHOUT_CLASSIFICATION	7.820264109371727E-6	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.999414931570696	WITHOUT_CLASSIFICATION	5.850684293038233E-4	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999960188870919	WITHOUT_CLASSIFICATION	3.981112908031101E-6	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999967322920954	WITHOUT_CLASSIFICATION	3.2677079045888594E-6	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999967322920954	WITHOUT_CLASSIFICATION	3.2677079045888594E-6	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999140181536147	WITHOUT_CLASSIFICATION	8.598184638532168E-5	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999997390879944	WITHOUT_CLASSIFICATION	2.6091200553875265E-7	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999818557596624	WITHOUT_CLASSIFICATION	1.81442403376359E-5	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999996460499683	WITHOUT_CLASSIFICATION	3.539500317671297E-7	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999744761876004	WITHOUT_CLASSIFICATION	2.5523812399503947E-5	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.999952968092493	WITHOUT_CLASSIFICATION	4.703190750705004E-5	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.999853056897116	WITHOUT_CLASSIFICATION	1.4694310288392124E-4	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999937966799644	WITHOUT_CLASSIFICATION	6.20332003556722E-6	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999982835517144	WITHOUT_CLASSIFICATION	1.7164482855778689E-6	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999982835517144	WITHOUT_CLASSIFICATION	1.7164482855778689E-6	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999886178439085	WITHOUT_CLASSIFICATION	1.138215609162936E-5	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999925937082443	WITHOUT_CLASSIFICATION	7.406291755626857E-6	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999989283968375	WITHOUT_CLASSIFICATION	1.0716031625603685E-6	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9999951057353804	WITHOUT_CLASSIFICATION	4.894264619633064E-6	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999844698987347	WITHOUT_CLASSIFICATION	1.5530101265292703E-5	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999875375653918	WITHOUT_CLASSIFICATION	1.2462434608201544E-5	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999993965797738	WITHOUT_CLASSIFICATION	6.034202262164156E-7	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999995660845116	WITHOUT_CLASSIFICATION	4.33915488354515E-7	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9999854237760482	WITHOUT_CLASSIFICATION	1.4576223951794782E-5	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999970317972139	WITHOUT_CLASSIFICATION	2.9682027861845947E-6	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999872023657157	WITHOUT_CLASSIFICATION	1.2797634284351843E-5	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999939148061037	WITHOUT_CLASSIFICATION	6.0851938962849585E-6	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999849337526077	WITHOUT_CLASSIFICATION	1.5066247392321096E-5	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999844939890564	WITHOUT_CLASSIFICATION	1.5506010943577225E-5	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999844939890564	WITHOUT_CLASSIFICATION	1.5506010943577225E-5	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999994061379297	WITHOUT_CLASSIFICATION	5.93862070357979E-7	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.999994252734113	WITHOUT_CLASSIFICATION	5.747265886915236E-6	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999987914193172	WITHOUT_CLASSIFICATION	1.2085806828265006E-6	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999984698430472	WITHOUT_CLASSIFICATION	1.530156952810203E-6	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999998589300562	WITHOUT_CLASSIFICATION	1.4106994382902223E-7	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999856584416357	WITHOUT_CLASSIFICATION	1.4341558364350692E-5	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999369087954892	WITHOUT_CLASSIFICATION	6.309120451067792E-5	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999913879498776	WITHOUT_CLASSIFICATION	8.612050122430764E-6	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999110612614661	WITHOUT_CLASSIFICATION	8.893873853379562E-5	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.999975009879195	WITHOUT_CLASSIFICATION	2.4990120805071807E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9998995427923248	WITHOUT_CLASSIFICATION	1.0045720767519916E-4	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999994758033132	WITHOUT_CLASSIFICATION	5.241966867908084E-7	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9983512992560994	WITHOUT_CLASSIFICATION	0.0016487007439005233	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999999635586394	WITHOUT_CLASSIFICATION	3.64413606647981E-8	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999963289372619	WITHOUT_CLASSIFICATION	3.671062738128999E-6	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999961108294331	WITHOUT_CLASSIFICATION	3.889170567018679E-6	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999945060802007	WITHOUT_CLASSIFICATION	5.4939197993325786E-6	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999697471137916	WITHOUT_CLASSIFICATION	3.0252886208432506E-5	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.999996343908509	WITHOUT_CLASSIFICATION	3.6560914910666867E-6	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999506540396742	WITHOUT_CLASSIFICATION	4.934596032575666E-5	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9999550565463967	WITHOUT_CLASSIFICATION	4.4943453603262915E-5	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9999937848037629	WITHOUT_CLASSIFICATION	6.215196237114135E-6	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.99998142298764	WITHOUT_CLASSIFICATION	1.857701235997621E-5	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999895221663436	WITHOUT_CLASSIFICATION	1.0477833656369109E-5	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.887781774847536	IMPLEMENTATION	0.11221822515246403	WITHOUT_CLASSIFICATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9998263841468088	WITHOUT_CLASSIFICATION	1.736158531912035E-4	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9999870065438657	WITHOUT_CLASSIFICATION	1.2993456134402592E-5	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9999063506662128	WITHOUT_CLASSIFICATION	9.364933378717978E-5	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9999861412591876	WITHOUT_CLASSIFICATION	1.3858740812270759E-5	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999417817531859	WITHOUT_CLASSIFICATION	5.8218246814071714E-5	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999954091933231	WITHOUT_CLASSIFICATION	4.59080667685945E-6	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9999857509065028	WITHOUT_CLASSIFICATION	1.4249093497249233E-5	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999990983351849	WITHOUT_CLASSIFICATION	9.016648152091453E-7	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999456797511389	WITHOUT_CLASSIFICATION	5.432024886097039E-5	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999967127762637	WITHOUT_CLASSIFICATION	3.2872237362007046E-6	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999958763412128	WITHOUT_CLASSIFICATION	4.123658787178245E-6	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999924860174033	WITHOUT_CLASSIFICATION	7.513982596689976E-6	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999996257690811	WITHOUT_CLASSIFICATION	3.742309188260817E-7	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999981072298892	WITHOUT_CLASSIFICATION	1.8927701108059022E-6	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999990045832193	WITHOUT_CLASSIFICATION	9.95416780742272E-7	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9997453963883196	WITHOUT_CLASSIFICATION	2.5460361168039335E-4	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999849052751889	WITHOUT_CLASSIFICATION	1.5094724811025092E-5	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9998519010477666	WITHOUT_CLASSIFICATION	1.4809895223342998E-4	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9995887187890261	WITHOUT_CLASSIFICATION	4.1128121097389015E-4	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.999973360709241	WITHOUT_CLASSIFICATION	2.663929075884428E-5	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999797329236241	WITHOUT_CLASSIFICATION	2.026707637601038E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999952663482381	WITHOUT_CLASSIFICATION	4.7336517619309865E-6	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999926750386812	WITHOUT_CLASSIFICATION	7.324961318832184E-6	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999953665086886	WITHOUT_CLASSIFICATION	4.6334913113991475E-6	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999625245961062	WITHOUT_CLASSIFICATION	3.747540389377389E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999625245961062	WITHOUT_CLASSIFICATION	3.747540389377389E-5	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999989401863408	WITHOUT_CLASSIFICATION	1.0598136591853332E-6	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999956504747567	WITHOUT_CLASSIFICATION	4.349525243278327E-6	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999980527985194	WITHOUT_CLASSIFICATION	1.947201480698265E-6	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999997724544742	WITHOUT_CLASSIFICATION	2.275455258311688E-7	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999992418326943	WITHOUT_CLASSIFICATION	7.581673056728355E-7	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999997373075039	WITHOUT_CLASSIFICATION	2.626924960879466E-7	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999995874968878	WITHOUT_CLASSIFICATION	4.1250311213733764E-7	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999914378639316	WITHOUT_CLASSIFICATION	8.562136068423858E-6	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999849560584	WITHOUT_CLASSIFICATION	1.504394173090826E-8	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999983292939741	WITHOUT_CLASSIFICATION	1.670706025880541E-6	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999939646790658	WITHOUT_CLASSIFICATION	6.035320934238788E-6	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999939646790658	WITHOUT_CLASSIFICATION	6.035320934238788E-6	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999939646790658	WITHOUT_CLASSIFICATION	6.035320934238788E-6	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999996655824855	WITHOUT_CLASSIFICATION	3.3441751444895074E-7	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.999999508391579	WITHOUT_CLASSIFICATION	4.916084209284248E-7	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9999974893633226	WITHOUT_CLASSIFICATION	2.5106366773957263E-6	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999711037962556	WITHOUT_CLASSIFICATION	2.8896203744334347E-5	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999711037962556	WITHOUT_CLASSIFICATION	2.8896203744334347E-5	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999996057181686	WITHOUT_CLASSIFICATION	3.9428183140703097E-7	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999786435078163	WITHOUT_CLASSIFICATION	2.1356492183672385E-5	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999987453025284	WITHOUT_CLASSIFICATION	1.254697471524731E-6	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999909953207808	WITHOUT_CLASSIFICATION	9.004679219141609E-6	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999917848931449	WITHOUT_CLASSIFICATION	8.215106855083921E-6	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999967465748706	WITHOUT_CLASSIFICATION	3.2534251294829367E-6	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999939971135178	WITHOUT_CLASSIFICATION	6.002886482225454E-6	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999917195521307	WITHOUT_CLASSIFICATION	8.280447869265134E-6	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999990499147018	WITHOUT_CLASSIFICATION	9.500852980975785E-7	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999983122864976	WITHOUT_CLASSIFICATION	1.6877135023965254E-6	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999983122864976	WITHOUT_CLASSIFICATION	1.6877135023965254E-6	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999948752718657	WITHOUT_CLASSIFICATION	5.124728134332034E-6	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999879150000072	WITHOUT_CLASSIFICATION	1.2084999992859065E-5	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999980200895386	WITHOUT_CLASSIFICATION	1.9799104613181973E-6	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999937984421609	WITHOUT_CLASSIFICATION	6.20155783905022E-6	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999988422215791	WITHOUT_CLASSIFICATION	1.1577784209020452E-6	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999950664443655	WITHOUT_CLASSIFICATION	4.933555634575812E-6	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999759248020895	WITHOUT_CLASSIFICATION	2.4075197910485928E-5	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9998975602530206	WITHOUT_CLASSIFICATION	1.0243974697934002E-4	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999842045142346	WITHOUT_CLASSIFICATION	1.5795485765373676E-5	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9999688940186323	WITHOUT_CLASSIFICATION	3.110598136763012E-5	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999588059640474	WITHOUT_CLASSIFICATION	4.1194035952571235E-5	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999737148998256	WITHOUT_CLASSIFICATION	2.628510017438917E-5	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9999851818244174	WITHOUT_CLASSIFICATION	1.4818175582622144E-5	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999329083336892	WITHOUT_CLASSIFICATION	6.709166631077527E-5	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9998444634062917	WITHOUT_CLASSIFICATION	1.555365937081995E-4	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999329069847732	WITHOUT_CLASSIFICATION	6.709301522668314E-5	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999820493250898	WITHOUT_CLASSIFICATION	1.795067491026314E-5	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.999988779785088	WITHOUT_CLASSIFICATION	1.1220214912053383E-5	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999995316744702	WITHOUT_CLASSIFICATION	4.683255297628998E-7	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999993584065779	WITHOUT_CLASSIFICATION	6.415934221920796E-7	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9991635089389569	WITHOUT_CLASSIFICATION	8.36491061043113E-4	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999747687131378	WITHOUT_CLASSIFICATION	2.5231286862195574E-5	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999971595533457	WITHOUT_CLASSIFICATION	2.840446654313307E-6	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999994110723959	WITHOUT_CLASSIFICATION	5.889276040426456E-7	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999941680844031	WITHOUT_CLASSIFICATION	5.831915596944099E-6	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999926848989132	WITHOUT_CLASSIFICATION	7.315101086876417E-6	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999830948912631	WITHOUT_CLASSIFICATION	1.6905108736775746E-5	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999818914337495	WITHOUT_CLASSIFICATION	1.8108566250432228E-5	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999995837412103	WITHOUT_CLASSIFICATION	4.162587896933616E-7	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999817433605497	WITHOUT_CLASSIFICATION	1.8256639450305653E-5	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999632700600993	WITHOUT_CLASSIFICATION	3.6729939900648014E-5	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999978297629941	WITHOUT_CLASSIFICATION	2.1702370059452865E-6	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999977827830244	WITHOUT_CLASSIFICATION	2.217216975493453E-6	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999632700600993	WITHOUT_CLASSIFICATION	3.6729939900648014E-5	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999433578285337	WITHOUT_CLASSIFICATION	5.664217146619739E-5	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999998101578055	WITHOUT_CLASSIFICATION	1.8984219459796648E-7	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9997900135730323	WITHOUT_CLASSIFICATION	2.0998642696756756E-4	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999681800169836	WITHOUT_CLASSIFICATION	3.181998301628322E-5	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999757153247236	WITHOUT_CLASSIFICATION	2.4284675276321432E-5	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999992658714606	WITHOUT_CLASSIFICATION	7.341285394065712E-7	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999908209158926	WITHOUT_CLASSIFICATION	9.17908410739608E-6	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999658207249698	WITHOUT_CLASSIFICATION	3.4179275030328785E-5	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999731182794869	WITHOUT_CLASSIFICATION	2.688172051312684E-5	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999531395204839	WITHOUT_CLASSIFICATION	4.6860479515980446E-5	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999538115592027	WITHOUT_CLASSIFICATION	4.61884407973608E-5	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.999918568996887	WITHOUT_CLASSIFICATION	8.143100311295304E-5	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999419759990001	WITHOUT_CLASSIFICATION	5.802400099994247E-5	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.999958565876333	WITHOUT_CLASSIFICATION	4.143412366697893E-5	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9998614327312183	WITHOUT_CLASSIFICATION	1.385672687817278E-4	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999396215598401	WITHOUT_CLASSIFICATION	6.0378440159904297E-5	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.999930043994026	WITHOUT_CLASSIFICATION	6.995600597404242E-5	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999930988239872	WITHOUT_CLASSIFICATION	6.901176012766359E-6	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999930498547744	WITHOUT_CLASSIFICATION	6.950145225459649E-6	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999832316250212	WITHOUT_CLASSIFICATION	1.676837497872834E-5	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999799450481568	WITHOUT_CLASSIFICATION	2.005495184316266E-5	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999815934994996	WITHOUT_CLASSIFICATION	1.8406500500494642E-5	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999750369425198	WITHOUT_CLASSIFICATION	2.4963057480166163E-5	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999803360847449	WITHOUT_CLASSIFICATION	1.9663915255127555E-5	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999726965308205	WITHOUT_CLASSIFICATION	2.730346917947403E-5	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.999998863394241	WITHOUT_CLASSIFICATION	1.1366057590010447E-6	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999870549261408	WITHOUT_CLASSIFICATION	1.2945073859104499E-5	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999946455165895	WITHOUT_CLASSIFICATION	5.354483410525213E-6	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9999572875008613	WITHOUT_CLASSIFICATION	4.2712499138587315E-5	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.999941612847165	WITHOUT_CLASSIFICATION	5.838715283505806E-5	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9999734220752703	WITHOUT_CLASSIFICATION	2.6577924729631983E-5	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9999624101380622	WITHOUT_CLASSIFICATION	3.758986193770327E-5	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9999726877964954	WITHOUT_CLASSIFICATION	2.7312203504583738E-5	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999987161771734	WITHOUT_CLASSIFICATION	1.2838228265707019E-6	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999820006519065	WITHOUT_CLASSIFICATION	1.7999348093459844E-5	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9999895732789448	WITHOUT_CLASSIFICATION	1.0426721055157846E-5	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9999958530596713	WITHOUT_CLASSIFICATION	4.146940328714584E-6	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9999234317506431	WITHOUT_CLASSIFICATION	7.656824935680765E-5	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999986563711168	WITHOUT_CLASSIFICATION	1.3436288830999668E-6	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9999629462095321	WITHOUT_CLASSIFICATION	3.705379046798729E-5	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9999864593012048	WITHOUT_CLASSIFICATION	1.354069879526223E-5	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999941786732582	WITHOUT_CLASSIFICATION	5.821326741790943E-6	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9999738648087849	WITHOUT_CLASSIFICATION	2.613519121512361E-5	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.999998242012934	WITHOUT_CLASSIFICATION	1.7579870661262105E-6	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999873653447156	WITHOUT_CLASSIFICATION	1.2634655284326805E-5	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9999949158950433	WITHOUT_CLASSIFICATION	5.084104956676656E-6	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9999500755031674	WITHOUT_CLASSIFICATION	4.9924496832553145E-5	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999644569557768	WITHOUT_CLASSIFICATION	3.554304422322139E-5	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999996520861629	WITHOUT_CLASSIFICATION	3.479138370940367E-7	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.9999915430707116	WITHOUT_CLASSIFICATION	8.456929288427807E-6	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999297526075316	WITHOUT_CLASSIFICATION	7.024739246844952E-5	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999981309775846	WITHOUT_CLASSIFICATION	1.8690224154116276E-6	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999976788220983	WITHOUT_CLASSIFICATION	2.321177901591765E-6	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999996520861629	WITHOUT_CLASSIFICATION	3.479138370940367E-7	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9997233813808096	WITHOUT_CLASSIFICATION	2.7661861919038425E-4	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9997233813808096	WITHOUT_CLASSIFICATION	2.7661861919038425E-4	IMPLEMENTATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999679686013209	WITHOUT_CLASSIFICATION	3.20313986790754E-5	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999910507560276	WITHOUT_CLASSIFICATION	8.949243972421908E-6	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999991121746968	WITHOUT_CLASSIFICATION	8.878253030765575E-7	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999989792059211	WITHOUT_CLASSIFICATION	1.020794078933468E-6	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999977103569403	WITHOUT_CLASSIFICATION	2.2896430596944273E-6	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999953868043538	WITHOUT_CLASSIFICATION	4.61319564607242E-6	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999970439886636	WITHOUT_CLASSIFICATION	2.956011336287019E-6	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9907943532324546	IMPLEMENTATION	0.009205646767545438	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999868786988387	WITHOUT_CLASSIFICATION	1.312130116130327E-5	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999991100122578	WITHOUT_CLASSIFICATION	8.899877421276418E-7	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999999872587898	WITHOUT_CLASSIFICATION	1.2741210291527702E-8	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999994911932978	WITHOUT_CLASSIFICATION	5.088067022607982E-7	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999940496512979	WITHOUT_CLASSIFICATION	5.950348702104329E-6	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.999997397662268	WITHOUT_CLASSIFICATION	2.6023377319322964E-6	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999978979860479	WITHOUT_CLASSIFICATION	2.10201395216294E-6	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999985523223103	WITHOUT_CLASSIFICATION	1.4476776896764039E-6	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999966936728606	WITHOUT_CLASSIFICATION	3.306327139454634E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999568604228444	WITHOUT_CLASSIFICATION	4.3139577155659956E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999568604228444	WITHOUT_CLASSIFICATION	4.3139577155659956E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999568604228444	WITHOUT_CLASSIFICATION	4.3139577155659956E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999568604228444	WITHOUT_CLASSIFICATION	4.3139577155659956E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999568604228444	WITHOUT_CLASSIFICATION	4.3139577155659956E-5	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9999953111538868	WITHOUT_CLASSIFICATION	4.68884611313882E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.999977892682954	WITHOUT_CLASSIFICATION	2.2107317045988635E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999881986933435	WITHOUT_CLASSIFICATION	1.1801306656506094E-5	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999992165705476	WITHOUT_CLASSIFICATION	7.834294524432847E-7	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999575652547061	WITHOUT_CLASSIFICATION	4.243474529376109E-5	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999975892493091	WITHOUT_CLASSIFICATION	2.41075069087795E-6	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999764463804833	WITHOUT_CLASSIFICATION	2.3553619516690867E-5	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999930615467589	WITHOUT_CLASSIFICATION	6.938453241086127E-6	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999865978677966	WITHOUT_CLASSIFICATION	1.3402132203334856E-5	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.999995482222704	WITHOUT_CLASSIFICATION	4.517777295987716E-6	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9999948651558306	WITHOUT_CLASSIFICATION	5.134844169473601E-6	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.999995790891806	WITHOUT_CLASSIFICATION	4.209108194056846E-6	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9999956201525475	WITHOUT_CLASSIFICATION	4.3798474525917785E-6	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9999958361763661	WITHOUT_CLASSIFICATION	4.163823633897602E-6	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9999955056736817	WITHOUT_CLASSIFICATION	4.494326318335814E-6	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9999951461148066	WITHOUT_CLASSIFICATION	4.853885193413767E-6	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9999947146008246	WITHOUT_CLASSIFICATION	5.285399175427273E-6	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9999958006231101	WITHOUT_CLASSIFICATION	4.199376889786437E-6	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9999948750969057	WITHOUT_CLASSIFICATION	5.1249030943332976E-6	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999955407834089	WITHOUT_CLASSIFICATION	4.459216591092395E-6	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9999947332944348	WITHOUT_CLASSIFICATION	5.266705565215505E-6	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9999945209508231	WITHOUT_CLASSIFICATION	5.479049176897913E-6	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999951111987262	WITHOUT_CLASSIFICATION	4.88880127376175E-6	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9999946139173173	WITHOUT_CLASSIFICATION	5.386082682820957E-6	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999952102639976	WITHOUT_CLASSIFICATION	4.789736002338775E-6	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9999954151702046	WITHOUT_CLASSIFICATION	4.584829795320923E-6	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9999953215234703	WITHOUT_CLASSIFICATION	4.678476529727371E-6	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9999953185565104	WITHOUT_CLASSIFICATION	4.68144348960079E-6	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999951992391835	WITHOUT_CLASSIFICATION	4.800760816613516E-6	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999958111411906	WITHOUT_CLASSIFICATION	4.188858809379253E-6	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999946078929163	WITHOUT_CLASSIFICATION	5.392107083736795E-6	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9999948980872363	WITHOUT_CLASSIFICATION	5.101912763697877E-6	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.999994766966726	WITHOUT_CLASSIFICATION	5.233033274005049E-6	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9999940630591858	WITHOUT_CLASSIFICATION	5.936940814161493E-6	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9999947349533864	WITHOUT_CLASSIFICATION	5.2650466136040946E-6	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9999939380118227	WITHOUT_CLASSIFICATION	6.06198817732029E-6	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.999994277968559	WITHOUT_CLASSIFICATION	5.722031440955764E-6	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9999940666299448	WITHOUT_CLASSIFICATION	5.9333700551689705E-6	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.9999952614971923	WITHOUT_CLASSIFICATION	4.738502807751523E-6	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9999942377677168	WITHOUT_CLASSIFICATION	5.7622322832622016E-6	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9999943759535996	WITHOUT_CLASSIFICATION	5.624046400385497E-6	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999942939500209	WITHOUT_CLASSIFICATION	5.706049979160474E-6	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9999948621009248	WITHOUT_CLASSIFICATION	5.137899075303183E-6	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9999944067554942	WITHOUT_CLASSIFICATION	5.593244505708424E-6	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9999959429944552	WITHOUT_CLASSIFICATION	4.057005544823959E-6	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9999953929578191	WITHOUT_CLASSIFICATION	4.60704218082774E-6	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9999950317114928	WITHOUT_CLASSIFICATION	4.968288507150953E-6	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9999960045823735	WITHOUT_CLASSIFICATION	3.99541762653878E-6	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9999950746039232	WITHOUT_CLASSIFICATION	4.925396076692007E-6	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9999944357911129	WITHOUT_CLASSIFICATION	5.564208887035888E-6	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999881986933435	WITHOUT_CLASSIFICATION	1.1801306656506094E-5	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999944389999363	WITHOUT_CLASSIFICATION	5.561000063755456E-6	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999952489969225	WITHOUT_CLASSIFICATION	4.751003077556052E-6	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999946088734606	WITHOUT_CLASSIFICATION	5.391126539452946E-6	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999938837005556	WITHOUT_CLASSIFICATION	6.116299444289098E-6	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9999935685815587	WITHOUT_CLASSIFICATION	6.4314184413644955E-6	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9999939841322353	WITHOUT_CLASSIFICATION	6.015867764641733E-6	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.999994328032667	WITHOUT_CLASSIFICATION	5.671967333012597E-6	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999937783804347	WITHOUT_CLASSIFICATION	6.2216195653185805E-6	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9999938528387415	WITHOUT_CLASSIFICATION	6.147161258503538E-6	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9999936699999605	WITHOUT_CLASSIFICATION	6.3300000394033175E-6	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9999936459577693	WITHOUT_CLASSIFICATION	6.3540422306912845E-6	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.999993905559184	WITHOUT_CLASSIFICATION	6.094440816037104E-6	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.9999940499651148	WITHOUT_CLASSIFICATION	5.9500348851781454E-6	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9999953592518632	WITHOUT_CLASSIFICATION	4.640748136672824E-6	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9999949977527707	WITHOUT_CLASSIFICATION	5.002247229332255E-6	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999959985903664	WITHOUT_CLASSIFICATION	4.0014096335955125E-6	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9999953755950471	WITHOUT_CLASSIFICATION	4.624404952905852E-6	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9999949502900792	WITHOUT_CLASSIFICATION	5.0497099208526535E-6	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9999948207766872	WITHOUT_CLASSIFICATION	5.1792233128558075E-6	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9999946102771228	WITHOUT_CLASSIFICATION	5.389722877284341E-6	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9999948157004072	WITHOUT_CLASSIFICATION	5.184299592815994E-6	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9999941706956431	WITHOUT_CLASSIFICATION	5.829304356848414E-6	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.999993855021707	WITHOUT_CLASSIFICATION	6.144978292920317E-6	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9999951394313199	WITHOUT_CLASSIFICATION	4.8605686801619175E-6	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.99999387724065	WITHOUT_CLASSIFICATION	6.122759350038839E-6	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9999950063507409	WITHOUT_CLASSIFICATION	4.993649259105325E-6	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999943653948964	WITHOUT_CLASSIFICATION	5.634605103677553E-6	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.999994069053857	WITHOUT_CLASSIFICATION	5.9309461429307775E-6	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9999958587646275	WITHOUT_CLASSIFICATION	4.141235372553397E-6	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9999948390055983	WITHOUT_CLASSIFICATION	5.160994401666574E-6	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.999995523594582	WITHOUT_CLASSIFICATION	4.476405417952864E-6	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9999942397576409	WITHOUT_CLASSIFICATION	5.760242359051512E-6	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9999944975086547	WITHOUT_CLASSIFICATION	5.502491345247477E-6	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999949217854572	WITHOUT_CLASSIFICATION	5.07821454283508E-6	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9999943592097534	WITHOUT_CLASSIFICATION	5.640790246477191E-6	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9999944635731784	WITHOUT_CLASSIFICATION	5.536426821524514E-6	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9999948223212729	WITHOUT_CLASSIFICATION	5.177678727135333E-6	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9999939534301568	WITHOUT_CLASSIFICATION	6.046569843080119E-6	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9999936474320424	WITHOUT_CLASSIFICATION	6.352567957624765E-6	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9999949195822722	WITHOUT_CLASSIFICATION	5.080417727824089E-6	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9999943679295845	WITHOUT_CLASSIFICATION	5.632070415381543E-6	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9999938960781779	WITHOUT_CLASSIFICATION	6.10392182211885E-6	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999944033900571	WITHOUT_CLASSIFICATION	5.596609942880522E-6	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9999938237641591	WITHOUT_CLASSIFICATION	6.176235840849347E-6	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999943114414336	WITHOUT_CLASSIFICATION	5.688558566487153E-6	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999938175462718	WITHOUT_CLASSIFICATION	6.182453728108645E-6	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999949360506686	WITHOUT_CLASSIFICATION	5.063949331320665E-6	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.999994236730884	WITHOUT_CLASSIFICATION	5.7632691160290834E-6	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9999939534470551	WITHOUT_CLASSIFICATION	6.046552944868025E-6	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.999995645396492	WITHOUT_CLASSIFICATION	4.354603508073251E-6	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9999951219345008	WITHOUT_CLASSIFICATION	4.878065499179969E-6	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9999953347300542	WITHOUT_CLASSIFICATION	4.66526994577555E-6	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9999950160034633	WITHOUT_CLASSIFICATION	4.983996536750956E-6	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9999950610652419	WITHOUT_CLASSIFICATION	4.938934758046552E-6	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9999954536416765	WITHOUT_CLASSIFICATION	4.54635832352573E-6	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9999948476197532	WITHOUT_CLASSIFICATION	5.15238024675945E-6	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9999956659826508	WITHOUT_CLASSIFICATION	4.334017349269526E-6	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9999945408130285	WITHOUT_CLASSIFICATION	5.459186971460734E-6	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9999945420420233	WITHOUT_CLASSIFICATION	5.457957976637327E-6	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999947257283642	WITHOUT_CLASSIFICATION	5.274271635779705E-6	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999947380392404	WITHOUT_CLASSIFICATION	5.261960759591083E-6	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999942475976756	WITHOUT_CLASSIFICATION	5.75240232435251E-6	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9999945773935438	WITHOUT_CLASSIFICATION	5.422606456209801E-6	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9999940406573191	WITHOUT_CLASSIFICATION	5.959342680825082E-6	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9999949813974833	WITHOUT_CLASSIFICATION	5.0186025166234695E-6	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9999940002042419	WITHOUT_CLASSIFICATION	5.9997957580949335E-6	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9999949379771909	WITHOUT_CLASSIFICATION	5.06202280912011E-6	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9999938667818773	WITHOUT_CLASSIFICATION	6.133218122743757E-6	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9999940784255624	WITHOUT_CLASSIFICATION	5.92157443763102E-6	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9999946099570164	WITHOUT_CLASSIFICATION	5.390042983584635E-6	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999947038646849	WITHOUT_CLASSIFICATION	5.296135315191348E-6	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999941375282776	WITHOUT_CLASSIFICATION	5.862471722376675E-6	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999942036643051	WITHOUT_CLASSIFICATION	5.796335694897399E-6	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9999957312150682	WITHOUT_CLASSIFICATION	4.26878493174667E-6	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9999951994727374	WITHOUT_CLASSIFICATION	4.800527262643876E-6	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9999950679442516	WITHOUT_CLASSIFICATION	4.932055748285396E-6	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9999957463511944	WITHOUT_CLASSIFICATION	4.253648805608649E-6	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9999951446456868	WITHOUT_CLASSIFICATION	4.855354313102348E-6	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9999945435810308	WITHOUT_CLASSIFICATION	5.456418969106269E-6	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999951503488259	WITHOUT_CLASSIFICATION	4.849651174159642E-6	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9999945789866688	WITHOUT_CLASSIFICATION	5.4210133312160294E-6	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9999955088682572	WITHOUT_CLASSIFICATION	4.4911317428385595E-6	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.999994293204611	WITHOUT_CLASSIFICATION	5.706795389089939E-6	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9999943611336517	WITHOUT_CLASSIFICATION	5.6388663482562705E-6	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9999938687037186	WITHOUT_CLASSIFICATION	6.131296281348227E-6	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999951935940972	WITHOUT_CLASSIFICATION	4.8064059028743115E-6	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9999944351598069	WITHOUT_CLASSIFICATION	5.564840193053912E-6	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9999939454683119	WITHOUT_CLASSIFICATION	6.054531688015925E-6	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.999994555616379	WITHOUT_CLASSIFICATION	5.444383621126037E-6	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9999940018223198	WITHOUT_CLASSIFICATION	5.9981776801960466E-6	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999953066884751	WITHOUT_CLASSIFICATION	4.693311524909255E-6	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.999994492774321	WITHOUT_CLASSIFICATION	5.5072256790138245E-6	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9999941373196511	WITHOUT_CLASSIFICATION	5.862680348861236E-6	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9999940775229448	WITHOUT_CLASSIFICATION	5.922477055262039E-6	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.9999969317103727	WITHOUT_CLASSIFICATION	3.068289627288476E-6	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999970551311923	WITHOUT_CLASSIFICATION	2.9448688076383355E-6	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9999969091297837	WITHOUT_CLASSIFICATION	3.0908702162833053E-6	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9999966080421061	WITHOUT_CLASSIFICATION	3.3919578938763254E-6	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9999967884621007	WITHOUT_CLASSIFICATION	3.2115378993749332E-6	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9999970515552882	WITHOUT_CLASSIFICATION	2.9484447118671242E-6	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9999969164981224	WITHOUT_CLASSIFICATION	3.083501877717913E-6	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9999965041586721	WITHOUT_CLASSIFICATION	3.4958413279063953E-6	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9999965678618636	WITHOUT_CLASSIFICATION	3.4321381364104527E-6	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.999996379937715	WITHOUT_CLASSIFICATION	3.6200622850749287E-6	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9999964202715402	WITHOUT_CLASSIFICATION	3.579728459803809E-6	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9999963905700692	WITHOUT_CLASSIFICATION	3.6094299308683664E-6	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9999966588885569	WITHOUT_CLASSIFICATION	3.341111443100569E-6	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9999962772102192	WITHOUT_CLASSIFICATION	3.7227897806837122E-6	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9999964060133085	WITHOUT_CLASSIFICATION	3.5939866914977385E-6	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9999967044098864	WITHOUT_CLASSIFICATION	3.2955901137282123E-6	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9999965049471946	WITHOUT_CLASSIFICATION	3.495052805312529E-6	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999964242517728	WITHOUT_CLASSIFICATION	3.575748227164519E-6	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9999967922747908	WITHOUT_CLASSIFICATION	3.2077252092116003E-6	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.999996696975812	WITHOUT_CLASSIFICATION	3.3030241881023284E-6	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.99999627740266	WITHOUT_CLASSIFICATION	3.722597340121319E-6	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999953694021926	WITHOUT_CLASSIFICATION	4.630597807333925E-6	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.9999957781564828	WITHOUT_CLASSIFICATION	4.2218435172321965E-6	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9999953529709992	WITHOUT_CLASSIFICATION	4.647029000823844E-6	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9999954964713637	WITHOUT_CLASSIFICATION	4.503528636306473E-6	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999965912695339	WITHOUT_CLASSIFICATION	3.408730466138738E-6	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999957080088264	WITHOUT_CLASSIFICATION	4.291991173661818E-6	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9999957406714499	WITHOUT_CLASSIFICATION	4.259328550130632E-6	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9999957013162334	WITHOUT_CLASSIFICATION	4.298683766624964E-6	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.999996463732149	WITHOUT_CLASSIFICATION	3.5362678510455482E-6	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9999953409014402	WITHOUT_CLASSIFICATION	4.659098559818428E-6	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9999954387602272	WITHOUT_CLASSIFICATION	4.56123977270179E-6	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999953861327963	WITHOUT_CLASSIFICATION	4.613867203655839E-6	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.999995624331328	WITHOUT_CLASSIFICATION	4.375668671908373E-6	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9999952498281173	WITHOUT_CLASSIFICATION	4.75017188264773E-6	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9999952555085114	WITHOUT_CLASSIFICATION	4.744491488529086E-6	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9999953476533099	WITHOUT_CLASSIFICATION	4.652346690073444E-6	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9999955430349404	WITHOUT_CLASSIFICATION	4.4569650596301E-6	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.999995860948471	WITHOUT_CLASSIFICATION	4.139051528945738E-6	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999967982643868	WITHOUT_CLASSIFICATION	3.20173561327853E-6	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999965519387338	WITHOUT_CLASSIFICATION	3.4480612661599486E-6	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999966574969367	WITHOUT_CLASSIFICATION	3.3425030633045824E-6	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9999959823960515	WITHOUT_CLASSIFICATION	4.017603948520306E-6	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9999963350951234	WITHOUT_CLASSIFICATION	3.664904876597879E-6	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9999962194806864	WITHOUT_CLASSIFICATION	3.7805193136538486E-6	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.9999963310657648	WITHOUT_CLASSIFICATION	3.668934235070649E-6	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999957800942234	WITHOUT_CLASSIFICATION	4.219905776548661E-6	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.999995695632992	WITHOUT_CLASSIFICATION	4.3043670080477875E-6	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9999960678074421	WITHOUT_CLASSIFICATION	3.932192557932598E-6	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9999957383701532	WITHOUT_CLASSIFICATION	4.261629846781848E-6	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9999965986837597	WITHOUT_CLASSIFICATION	3.4013162404245054E-6	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9999961832843852	WITHOUT_CLASSIFICATION	3.816715614770519E-6	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9999966324434608	WITHOUT_CLASSIFICATION	3.367556539059607E-6	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9999957810368987	WITHOUT_CLASSIFICATION	4.218963101382112E-6	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9999958286321667	WITHOUT_CLASSIFICATION	4.171367833339795E-6	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.99999687131375	WITHOUT_CLASSIFICATION	3.1286862499757296E-6	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9999966656583613	WITHOUT_CLASSIFICATION	3.3343416386617043E-6	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9999957535732994	WITHOUT_CLASSIFICATION	4.2464267004985835E-6	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9999957385421554	WITHOUT_CLASSIFICATION	4.261457844623868E-6	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999969101176722	WITHOUT_CLASSIFICATION	3.08988232766397E-6	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9999961640552886	WITHOUT_CLASSIFICATION	3.835944711338189E-6	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9999956388234323	WITHOUT_CLASSIFICATION	4.3611765676551275E-6	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999959083649625	WITHOUT_CLASSIFICATION	4.091635037500926E-6	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9999960811777682	WITHOUT_CLASSIFICATION	3.918822231822992E-6	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9999957444980742	WITHOUT_CLASSIFICATION	4.2555019258347606E-6	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9999958716627566	WITHOUT_CLASSIFICATION	4.128337243453245E-6	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9999957875079827	WITHOUT_CLASSIFICATION	4.212492017262104E-6	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999956983068394	WITHOUT_CLASSIFICATION	4.301693160608954E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999961871432109	WITHOUT_CLASSIFICATION	3.8128567890206505E-6	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9999955859544977	WITHOUT_CLASSIFICATION	4.41404550240192E-6	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9999959760847696	WITHOUT_CLASSIFICATION	4.02391523040621E-6	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9999959640232187	WITHOUT_CLASSIFICATION	4.035976781326858E-6	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9999963561277374	WITHOUT_CLASSIFICATION	3.643872262598406E-6	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9999958590946312	WITHOUT_CLASSIFICATION	4.140905368871527E-6	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9999958647644978	WITHOUT_CLASSIFICATION	4.135235502265586E-6	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999952399920865	WITHOUT_CLASSIFICATION	4.760007913532079E-6	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999958109548177	WITHOUT_CLASSIFICATION	4.189045182244394E-6	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9999954375931082	WITHOUT_CLASSIFICATION	4.562406891874396E-6	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999962499072054	WITHOUT_CLASSIFICATION	3.7500927947228226E-6	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9999953422860947	WITHOUT_CLASSIFICATION	4.657713905362201E-6	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9999963638396818	WITHOUT_CLASSIFICATION	3.6361603180812028E-6	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9999955019552472	WITHOUT_CLASSIFICATION	4.498044752770116E-6	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.999995510832479	WITHOUT_CLASSIFICATION	4.489167520999788E-6	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999954824259729	WITHOUT_CLASSIFICATION	4.517574027013152E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999965522118642	WITHOUT_CLASSIFICATION	3.447788135699775E-6	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9999962891737829	WITHOUT_CLASSIFICATION	3.710826217177841E-6	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999957114203529	WITHOUT_CLASSIFICATION	4.2885796471290475E-6	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9999952702786238	WITHOUT_CLASSIFICATION	4.729721376153172E-6	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9999956798923834	WITHOUT_CLASSIFICATION	4.320107616615766E-6	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9999961143158158	WITHOUT_CLASSIFICATION	3.8856841842325115E-6	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.999995637418805	WITHOUT_CLASSIFICATION	4.362581194950091E-6	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9999949911698282	WITHOUT_CLASSIFICATION	5.0088301717617965E-6	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.999995140983952	WITHOUT_CLASSIFICATION	4.8590160479874505E-6	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9999951540663733	WITHOUT_CLASSIFICATION	4.8459336267083E-6	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9999950723188056	WITHOUT_CLASSIFICATION	4.927681194393481E-6	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.999995304003433	WITHOUT_CLASSIFICATION	4.695996567146936E-6	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9999950652161396	WITHOUT_CLASSIFICATION	4.9347838604315515E-6	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.999995254457439	WITHOUT_CLASSIFICATION	4.7455425610384225E-6	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999954231697785	WITHOUT_CLASSIFICATION	4.576830221449627E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999954760654842	WITHOUT_CLASSIFICATION	4.523934515828296E-6	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9999965526916069	WITHOUT_CLASSIFICATION	3.4473083930582545E-6	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9999962916739736	WITHOUT_CLASSIFICATION	3.708326026291441E-6	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.999996097203917	WITHOUT_CLASSIFICATION	3.902796082958493E-6	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9999956437128871	WITHOUT_CLASSIFICATION	4.356287112970668E-6	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999957973346423	WITHOUT_CLASSIFICATION	4.202665357729847E-6	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999961533031179	WITHOUT_CLASSIFICATION	3.846696882173242E-6	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.999995810832795	WITHOUT_CLASSIFICATION	4.189167204923264E-6	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9999955895540635	WITHOUT_CLASSIFICATION	4.410445936462958E-6	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9999954908537461	WITHOUT_CLASSIFICATION	4.509146253977618E-6	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.99999556465638	WITHOUT_CLASSIFICATION	4.435343619979687E-6	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9999952228653342	WITHOUT_CLASSIFICATION	4.777134665801942E-6	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9999953786684966	WITHOUT_CLASSIFICATION	4.621331503307962E-6	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9999953645977178	WITHOUT_CLASSIFICATION	4.635402282303746E-6	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9999956261872895	WITHOUT_CLASSIFICATION	4.373812710374185E-6	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9999951937570016	WITHOUT_CLASSIFICATION	4.806242998363889E-6	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.9999952616351968	WITHOUT_CLASSIFICATION	4.738364803245313E-6	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9999956135967303	WITHOUT_CLASSIFICATION	4.386403269804486E-6	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999961149143599	WITHOUT_CLASSIFICATION	3.8850856401140994E-6	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999961634633795	WITHOUT_CLASSIFICATION	3.836536620538101E-6	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999955853668067	WITHOUT_CLASSIFICATION	4.41463319342117E-6	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9999955886333027	WITHOUT_CLASSIFICATION	4.411366697260003E-6	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999957483803577	WITHOUT_CLASSIFICATION	4.251619642407E-6	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9999953216299292	WITHOUT_CLASSIFICATION	4.678370070778077E-6	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999954323456264	WITHOUT_CLASSIFICATION	4.567654373570343E-6	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9999950698704103	WITHOUT_CLASSIFICATION	4.930129589741375E-6	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9999952628410882	WITHOUT_CLASSIFICATION	4.73715891179242E-6	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.999995671382104	WITHOUT_CLASSIFICATION	4.328617895912919E-6	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9999952149056618	WITHOUT_CLASSIFICATION	4.785094338243439E-6	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9999954511039134	WITHOUT_CLASSIFICATION	4.548896086644422E-6	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9999962674825483	WITHOUT_CLASSIFICATION	3.732517451730125E-6	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.9999956501280021	WITHOUT_CLASSIFICATION	4.349871997976345E-6	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999953919601134	WITHOUT_CLASSIFICATION	4.608039886541803E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999958088664777	WITHOUT_CLASSIFICATION	4.191133522357452E-6	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999723249397037	WITHOUT_CLASSIFICATION	2.7675060296341266E-5	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9989006607493551	WITHOUT_CLASSIFICATION	0.0010993392506448724	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999291451438318	WITHOUT_CLASSIFICATION	7.08548561682086E-5	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999320378526539	WITHOUT_CLASSIFICATION	6.796214734608631E-5	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999100411360319	WITHOUT_CLASSIFICATION	8.995886396812012E-5	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999878559915368	WITHOUT_CLASSIFICATION	1.2144008463163187E-5	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999133986237502	WITHOUT_CLASSIFICATION	8.660137624981706E-5	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999137612723926	WITHOUT_CLASSIFICATION	8.623872760736457E-5	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999708253232305	WITHOUT_CLASSIFICATION	2.917467676959095E-5	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9997523471788947	WITHOUT_CLASSIFICATION	2.476528211052932E-4	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9999784906134358	WITHOUT_CLASSIFICATION	2.1509386564182232E-5	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9999945977475178	WITHOUT_CLASSIFICATION	5.402252482248956E-6	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.999995651903066	WITHOUT_CLASSIFICATION	4.348096933980386E-6	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9994340062046059	WITHOUT_CLASSIFICATION	5.659937953940756E-4	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999936450138386	WITHOUT_CLASSIFICATION	6.354986161466165E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999046384769356	WITHOUT_CLASSIFICATION	9.536152306447286E-5	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999221851737915	WITHOUT_CLASSIFICATION	7.781482620848568E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999741545429973	WITHOUT_CLASSIFICATION	2.5845457002625335E-5	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999987133828767	WITHOUT_CLASSIFICATION	1.2866171231925093E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999967220407272	WITHOUT_CLASSIFICATION	3.2779592728784683E-6	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999968067361169	WITHOUT_CLASSIFICATION	3.193263883119964E-6	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999959502641966	WITHOUT_CLASSIFICATION	4.0497358033167165E-6	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.999997530326812	WITHOUT_CLASSIFICATION	2.4696731878929757E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999919406835357	WITHOUT_CLASSIFICATION	8.059316464258355E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999919406835357	WITHOUT_CLASSIFICATION	8.059316464258355E-6	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999992235289464	WITHOUT_CLASSIFICATION	7.764710536208774E-7	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999712261555997	WITHOUT_CLASSIFICATION	2.8773844400197097E-5	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999843750026552	WITHOUT_CLASSIFICATION	1.5624997344687487E-5	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999976353519219	WITHOUT_CLASSIFICATION	2.3646480781666676E-6	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999728730505179	WITHOUT_CLASSIFICATION	2.71269494820902E-5	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999996361541275	WITHOUT_CLASSIFICATION	3.6384587258083593E-7	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999924155898661	WITHOUT_CLASSIFICATION	7.584410133940714E-6	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999964943673887	WITHOUT_CLASSIFICATION	3.505632611365962E-6	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999102389424369	WITHOUT_CLASSIFICATION	8.976105756309124E-5	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999890609975884	WITHOUT_CLASSIFICATION	1.0939002411614025E-5	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9999803105747345	WITHOUT_CLASSIFICATION	1.9689425265533296E-5	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999988071352223	WITHOUT_CLASSIFICATION	1.1928647777208577E-6	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.999999129046942	WITHOUT_CLASSIFICATION	8.709530579931232E-7	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999744252028427	WITHOUT_CLASSIFICATION	2.5574797157244402E-5	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999724687518111	WITHOUT_CLASSIFICATION	2.7531248188824352E-5	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999805212207791	WITHOUT_CLASSIFICATION	1.9478779220937685E-5	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999986078465533	WITHOUT_CLASSIFICATION	1.3921534467426926E-6	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999270809526524	WITHOUT_CLASSIFICATION	7.291904734759494E-5	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999998123478744	WITHOUT_CLASSIFICATION	1.8765212565956605E-7	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999929323984331	WITHOUT_CLASSIFICATION	7.067601566863954E-6	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999958958342945	WITHOUT_CLASSIFICATION	4.10416570552658E-6	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9999732412431779	WITHOUT_CLASSIFICATION	2.675875682204661E-5	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999991469027742	WITHOUT_CLASSIFICATION	8.530972258690603E-7	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999678674488207	WITHOUT_CLASSIFICATION	3.213255117927238E-5	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999991469027742	WITHOUT_CLASSIFICATION	8.530972258690603E-7	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999935927051767	WITHOUT_CLASSIFICATION	6.407294823245181E-6	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999932079058503	WITHOUT_CLASSIFICATION	6.792094149720807E-6	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999977301299159	WITHOUT_CLASSIFICATION	2.269870084185286E-6	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999707452909167	WITHOUT_CLASSIFICATION	2.9254709083300074E-5	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9998786963178466	WITHOUT_CLASSIFICATION	1.2130368215334997E-4	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999508292772705	WITHOUT_CLASSIFICATION	4.917072272938985E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999508292772705	WITHOUT_CLASSIFICATION	4.917072272938985E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999508292772705	WITHOUT_CLASSIFICATION	4.917072272938985E-5	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999934682844973	WITHOUT_CLASSIFICATION	6.53171550267704E-6	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9995392816636448	WITHOUT_CLASSIFICATION	4.6071833635528243E-4	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999748971251503	WITHOUT_CLASSIFICATION	2.5102874849708754E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999582779354284	WITHOUT_CLASSIFICATION	4.172206457177598E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999582779354284	WITHOUT_CLASSIFICATION	4.172206457177598E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999582779354284	WITHOUT_CLASSIFICATION	4.172206457177598E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999582779354284	WITHOUT_CLASSIFICATION	4.172206457177598E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999582779354284	WITHOUT_CLASSIFICATION	4.172206457177598E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999582779354284	WITHOUT_CLASSIFICATION	4.172206457177598E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999686256875012	WITHOUT_CLASSIFICATION	3.137431249877884E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999686256875012	WITHOUT_CLASSIFICATION	3.137431249877884E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999686256875012	WITHOUT_CLASSIFICATION	3.137431249877884E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999686256875012	WITHOUT_CLASSIFICATION	3.137431249877884E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999686256875012	WITHOUT_CLASSIFICATION	3.137431249877884E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999393500468904	WITHOUT_CLASSIFICATION	6.06499531097021E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999393500468904	WITHOUT_CLASSIFICATION	6.06499531097021E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999393500468904	WITHOUT_CLASSIFICATION	6.06499531097021E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999393500468904	WITHOUT_CLASSIFICATION	6.06499531097021E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999393500468904	WITHOUT_CLASSIFICATION	6.06499531097021E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999401706062695	WITHOUT_CLASSIFICATION	5.982939373057684E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999401706062695	WITHOUT_CLASSIFICATION	5.982939373057684E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999401706062695	WITHOUT_CLASSIFICATION	5.982939373057684E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999401706062695	WITHOUT_CLASSIFICATION	5.982939373057684E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999401706062695	WITHOUT_CLASSIFICATION	5.982939373057684E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999401706062695	WITHOUT_CLASSIFICATION	5.982939373057684E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999873727012858	WITHOUT_CLASSIFICATION	1.2627298714207673E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999873727012858	WITHOUT_CLASSIFICATION	1.2627298714207673E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999873727012858	WITHOUT_CLASSIFICATION	1.2627298714207673E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999873727012858	WITHOUT_CLASSIFICATION	1.2627298714207673E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999873727012858	WITHOUT_CLASSIFICATION	1.2627298714207673E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999984637119627	WITHOUT_CLASSIFICATION	1.5362880372959808E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999984637119627	WITHOUT_CLASSIFICATION	1.5362880372959808E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999984637119627	WITHOUT_CLASSIFICATION	1.5362880372959808E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999984637119627	WITHOUT_CLASSIFICATION	1.5362880372959808E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999984637119627	WITHOUT_CLASSIFICATION	1.5362880372959808E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999881986933435	WITHOUT_CLASSIFICATION	1.1801306656506094E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999881986933435	WITHOUT_CLASSIFICATION	1.1801306656506094E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999881986933435	WITHOUT_CLASSIFICATION	1.1801306656506094E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999881986933435	WITHOUT_CLASSIFICATION	1.1801306656506094E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999881986933435	WITHOUT_CLASSIFICATION	1.1801306656506094E-5	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999992165705476	WITHOUT_CLASSIFICATION	7.834294524432847E-7	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999975892493091	WITHOUT_CLASSIFICATION	2.41075069087795E-6	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999764463804833	WITHOUT_CLASSIFICATION	2.3553619516690867E-5	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999930615467589	WITHOUT_CLASSIFICATION	6.938453241086127E-6	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999865978677966	WITHOUT_CLASSIFICATION	1.3402132203334856E-5	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999960022242868	WITHOUT_CLASSIFICATION	3.997775713333719E-6	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999955407834089	WITHOUT_CLASSIFICATION	4.459216591092395E-6	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999952102639976	WITHOUT_CLASSIFICATION	4.789736002338775E-6	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999951992391835	WITHOUT_CLASSIFICATION	4.800760816613516E-6	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999958111411906	WITHOUT_CLASSIFICATION	4.188858809379253E-6	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.999995216933379	WITHOUT_CLASSIFICATION	4.783066621025827E-6	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999946078929163	WITHOUT_CLASSIFICATION	5.392107083736795E-6	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9999957587975772	WITHOUT_CLASSIFICATION	4.2412024228811335E-6	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9999952408242256	WITHOUT_CLASSIFICATION	4.759175774366344E-6	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9999947337796392	WITHOUT_CLASSIFICATION	5.266220360797025E-6	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9999954693110984	WITHOUT_CLASSIFICATION	4.530688901607344E-6	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9999951214267997	WITHOUT_CLASSIFICATION	4.878573200348125E-6	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9999955445973961	WITHOUT_CLASSIFICATION	4.455402603754432E-6	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9999946421410568	WITHOUT_CLASSIFICATION	5.357858943156165E-6	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9999945742538209	WITHOUT_CLASSIFICATION	5.425746179182032E-6	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9999953117961575	WITHOUT_CLASSIFICATION	4.6882038424111045E-6	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9999948438994198	WITHOUT_CLASSIFICATION	5.156100580193377E-6	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.99999493609961	WITHOUT_CLASSIFICATION	5.063900390014699E-6	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9999947924602441	WITHOUT_CLASSIFICATION	5.2075397558093036E-6	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9999947011129634	WITHOUT_CLASSIFICATION	5.2988870366833635E-6	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9999946278528021	WITHOUT_CLASSIFICATION	5.372147197870111E-6	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9999947951370861	WITHOUT_CLASSIFICATION	5.204862913874159E-6	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9999952821173436	WITHOUT_CLASSIFICATION	4.717882656416592E-6	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9999947014318723	WITHOUT_CLASSIFICATION	5.298568127677721E-6	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9999948491712288	WITHOUT_CLASSIFICATION	5.150828771212344E-6	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9999953535965967	WITHOUT_CLASSIFICATION	4.646403403317593E-6	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9999948061615462	WITHOUT_CLASSIFICATION	5.1938384538018825E-6	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9999941012721388	WITHOUT_CLASSIFICATION	5.8987278611788045E-6	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9999942097773076	WITHOUT_CLASSIFICATION	5.790222692442358E-6	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.9999940688610028	WITHOUT_CLASSIFICATION	5.9311389970968054E-6	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9999943795122169	WITHOUT_CLASSIFICATION	5.620487783113381E-6	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9999942625427828	WITHOUT_CLASSIFICATION	5.737457217128741E-6	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.999994331206826	WITHOUT_CLASSIFICATION	5.668793173998674E-6	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.9999940993895423	WITHOUT_CLASSIFICATION	5.900610457729587E-6	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9999952769038464	WITHOUT_CLASSIFICATION	4.7230961536078915E-6	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9999943532016736	WITHOUT_CLASSIFICATION	5.646798326441309E-6	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9999943464499592	WITHOUT_CLASSIFICATION	5.653550040740777E-6	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9999942297193765	WITHOUT_CLASSIFICATION	5.770280623499075E-6	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9999955813323135	WITHOUT_CLASSIFICATION	4.418667686535537E-6	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9999950525166887	WITHOUT_CLASSIFICATION	4.947483311253679E-6	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9999952764216323	WITHOUT_CLASSIFICATION	4.72357836766919E-6	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9999954088600573	WITHOUT_CLASSIFICATION	4.591139942689005E-6	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.999995393662049	WITHOUT_CLASSIFICATION	4.6063379509258935E-6	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.9999943443075496	WITHOUT_CLASSIFICATION	5.655692450352628E-6	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999952489969225	WITHOUT_CLASSIFICATION	4.751003077556052E-6	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999946088734606	WITHOUT_CLASSIFICATION	5.391126539452946E-6	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999938837005556	WITHOUT_CLASSIFICATION	6.116299444289098E-6	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999937783804347	WITHOUT_CLASSIFICATION	6.2216195653185805E-6	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999959985903664	WITHOUT_CLASSIFICATION	4.0014096335955125E-6	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999943653948964	WITHOUT_CLASSIFICATION	5.634605103677553E-6	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999950334597945	WITHOUT_CLASSIFICATION	4.966540205550798E-6	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.999994069053857	WITHOUT_CLASSIFICATION	5.9309461429307775E-6	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999944033900571	WITHOUT_CLASSIFICATION	5.596609942880522E-6	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999943114414336	WITHOUT_CLASSIFICATION	5.688558566487153E-6	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.999993805320624	WITHOUT_CLASSIFICATION	6.194679376022232E-6	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999938175462718	WITHOUT_CLASSIFICATION	6.182453728108645E-6	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999949360506686	WITHOUT_CLASSIFICATION	5.063949331320665E-6	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9999948074763121	WITHOUT_CLASSIFICATION	5.192523687967128E-6	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9999940668810274	WITHOUT_CLASSIFICATION	5.933118972529482E-6	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9999943645772011	WITHOUT_CLASSIFICATION	5.635422798934815E-6	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9999938819440901	WITHOUT_CLASSIFICATION	6.118055909849586E-6	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9999947321200835	WITHOUT_CLASSIFICATION	5.26787991653621E-6	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.999994693816712	WITHOUT_CLASSIFICATION	5.306183287932001E-6	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.999993969064963	WITHOUT_CLASSIFICATION	6.030935037088983E-6	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9999937949695337	WITHOUT_CLASSIFICATION	6.205030466343633E-6	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9999939545996155	WITHOUT_CLASSIFICATION	6.0454003845342E-6	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9999941625612255	WITHOUT_CLASSIFICATION	5.83743877450533E-6	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9999946630483894	WITHOUT_CLASSIFICATION	5.336951610674323E-6	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9999941036226342	WITHOUT_CLASSIFICATION	5.896377365846577E-6	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9999941717686259	WITHOUT_CLASSIFICATION	5.828231374083233E-6	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9999949737029505	WITHOUT_CLASSIFICATION	5.026297049460881E-6	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9999943681264692	WITHOUT_CLASSIFICATION	5.631873530768862E-6	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9999956070406776	WITHOUT_CLASSIFICATION	4.392959322387288E-6	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.9999944665690053	WITHOUT_CLASSIFICATION	5.533430994686377E-6	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9999946539991449	WITHOUT_CLASSIFICATION	5.346000855032894E-6	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9999942580320514	WITHOUT_CLASSIFICATION	5.741967948504726E-6	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9999936953775923	WITHOUT_CLASSIFICATION	6.3046224077594E-6	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9999949870010653	WITHOUT_CLASSIFICATION	5.012998934695668E-6	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9999940145249293	WITHOUT_CLASSIFICATION	5.985475070630491E-6	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9999937947239803	WITHOUT_CLASSIFICATION	6.205276019696053E-6	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9999944846604352	WITHOUT_CLASSIFICATION	5.515339564868345E-6	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9999940064590677	WITHOUT_CLASSIFICATION	5.993540932430849E-6	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9999940774568288	WITHOUT_CLASSIFICATION	5.922543171187225E-6	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9999949497992329	WITHOUT_CLASSIFICATION	5.050200767171889E-6	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9999950566246084	WITHOUT_CLASSIFICATION	4.943375391591121E-6	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9999943910697564	WITHOUT_CLASSIFICATION	5.60893024368151E-6	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9999944177853148	WITHOUT_CLASSIFICATION	5.582214685159338E-6	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.999994400740278	WITHOUT_CLASSIFICATION	5.599259722035931E-6	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9999939684098383	WITHOUT_CLASSIFICATION	6.0315901616713416E-6	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9999959999180824	WITHOUT_CLASSIFICATION	4.000081917589408E-6	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9999951673293701	WITHOUT_CLASSIFICATION	4.832670629861014E-6	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9999950615567519	WITHOUT_CLASSIFICATION	4.938443248138494E-6	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9999949323197282	WITHOUT_CLASSIFICATION	5.067680271779607E-6	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999947380392404	WITHOUT_CLASSIFICATION	5.261960759591083E-6	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.99999420987781	WITHOUT_CLASSIFICATION	5.790122189962116E-6	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999942475976756	WITHOUT_CLASSIFICATION	5.75240232435251E-6	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999947038646849	WITHOUT_CLASSIFICATION	5.296135315191348E-6	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999942036643051	WITHOUT_CLASSIFICATION	5.796335694897399E-6	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999951503488259	WITHOUT_CLASSIFICATION	4.849651174159642E-6	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.999994293204611	WITHOUT_CLASSIFICATION	5.706795389089939E-6	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999951935940972	WITHOUT_CLASSIFICATION	4.8064059028743115E-6	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999953066884751	WITHOUT_CLASSIFICATION	4.693311524909255E-6	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999970551311923	WITHOUT_CLASSIFICATION	2.9448688076383355E-6	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999967831520521	WITHOUT_CLASSIFICATION	3.2168479479799187E-6	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9999956620987137	WITHOUT_CLASSIFICATION	4.33790128634063E-6	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9999944179846554	WITHOUT_CLASSIFICATION	5.582015344573192E-6	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9999946677606665	WITHOUT_CLASSIFICATION	5.3322393335295834E-6	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.9999951172980408	WITHOUT_CLASSIFICATION	4.8827019591638025E-6	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9999950146768943	WITHOUT_CLASSIFICATION	4.985323105761477E-6	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9999937566031497	WITHOUT_CLASSIFICATION	6.243396850258884E-6	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9999951339981252	WITHOUT_CLASSIFICATION	4.8660018748077115E-6	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9999945964314815	WITHOUT_CLASSIFICATION	5.40356851844936E-6	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9999940727887666	WITHOUT_CLASSIFICATION	5.927211233335954E-6	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.9999941437237115	WITHOUT_CLASSIFICATION	5.856276288453344E-6	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9999939364181929	WITHOUT_CLASSIFICATION	6.063581807141863E-6	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9999943631837296	WITHOUT_CLASSIFICATION	5.636816270409308E-6	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9999939506876053	WITHOUT_CLASSIFICATION	6.049312394661433E-6	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.999995320601044	WITHOUT_CLASSIFICATION	4.679398955908565E-6	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9999957174203765	WITHOUT_CLASSIFICATION	4.2825796235419255E-6	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9999953360701085	WITHOUT_CLASSIFICATION	4.663929891430089E-6	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9999955439317695	WITHOUT_CLASSIFICATION	4.45606823055083E-6	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9999950582951118	WITHOUT_CLASSIFICATION	4.941704888165623E-6	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9999946928210283	WITHOUT_CLASSIFICATION	5.307178971754178E-6	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.999994724826329	WITHOUT_CLASSIFICATION	5.275173670952052E-6	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9999953238165192	WITHOUT_CLASSIFICATION	4.676183480734467E-6	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9999941443121461	WITHOUT_CLASSIFICATION	5.85568785399185E-6	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9999950609025047	WITHOUT_CLASSIFICATION	4.93909749534476E-6	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9999939668130345	WITHOUT_CLASSIFICATION	6.033186965526724E-6	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9999941270409289	WITHOUT_CLASSIFICATION	5.872959071042351E-6	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9999941004963282	WITHOUT_CLASSIFICATION	5.8995036718158785E-6	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9999940173414771	WITHOUT_CLASSIFICATION	5.9826585230115365E-6	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9999947338743117	WITHOUT_CLASSIFICATION	5.266125688290551E-6	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9999967389858514	WITHOUT_CLASSIFICATION	3.2610141486634405E-6	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9999970172839622	WITHOUT_CLASSIFICATION	2.9827160377880188E-6	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.999996722513291	WITHOUT_CLASSIFICATION	3.277486708978928E-6	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9999966054535984	WITHOUT_CLASSIFICATION	3.3945464017079234E-6	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9999968981350205	WITHOUT_CLASSIFICATION	3.101864979510567E-6	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9999964553547492	WITHOUT_CLASSIFICATION	3.5446452508317202E-6	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9999961987494977	WITHOUT_CLASSIFICATION	3.8012505022690534E-6	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9999963647820851	WITHOUT_CLASSIFICATION	3.6352179149661837E-6	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9999964225603618	WITHOUT_CLASSIFICATION	3.5774396382095664E-6	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9999963194787278	WITHOUT_CLASSIFICATION	3.680521272261124E-6	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999963273212061	WITHOUT_CLASSIFICATION	3.6726787938087577E-6	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999953694021926	WITHOUT_CLASSIFICATION	4.630597807333925E-6	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999958060381677	WITHOUT_CLASSIFICATION	4.193961832213005E-6	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999965912695339	WITHOUT_CLASSIFICATION	3.408730466138738E-6	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.999996463732149	WITHOUT_CLASSIFICATION	3.5362678510455482E-6	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999953861327963	WITHOUT_CLASSIFICATION	4.613867203655839E-6	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999967982643868	WITHOUT_CLASSIFICATION	3.20173561327853E-6	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999965519387338	WITHOUT_CLASSIFICATION	3.4480612661599486E-6	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999957800942234	WITHOUT_CLASSIFICATION	4.219905776548661E-6	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.999995695632992	WITHOUT_CLASSIFICATION	4.3043670080477875E-6	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.999995644337577	WITHOUT_CLASSIFICATION	4.355662422946909E-6	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9999963269807132	WITHOUT_CLASSIFICATION	3.673019286886301E-6	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9999966005050774	WITHOUT_CLASSIFICATION	3.3994949226250165E-6	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9999963518962877	WITHOUT_CLASSIFICATION	3.648103712430961E-6	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9999965479214893	WITHOUT_CLASSIFICATION	3.452078510649083E-6	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9999967994210518	WITHOUT_CLASSIFICATION	3.200578948304974E-6	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9999956086314749	WITHOUT_CLASSIFICATION	4.3913685251429005E-6	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.999995348475508	WITHOUT_CLASSIFICATION	4.651524492058224E-6	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9999954500532447	WITHOUT_CLASSIFICATION	4.5499467553471435E-6	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9999960075365599	WITHOUT_CLASSIFICATION	3.992463440011863E-6	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9999956746215781	WITHOUT_CLASSIFICATION	4.325378421814786E-6	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9999958194757839	WITHOUT_CLASSIFICATION	4.180524216199836E-6	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9999955017000584	WITHOUT_CLASSIFICATION	4.498299941697522E-6	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9999955791104188	WITHOUT_CLASSIFICATION	4.420889581150197E-6	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9999952282881417	WITHOUT_CLASSIFICATION	4.771711858334841E-6	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9999957530295149	WITHOUT_CLASSIFICATION	4.246970485086581E-6	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9999956878784213	WITHOUT_CLASSIFICATION	4.312121578794694E-6	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9999953610759409	WITHOUT_CLASSIFICATION	4.638924059090094E-6	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9999957973937412	WITHOUT_CLASSIFICATION	4.202606258698282E-6	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9999963514031261	WITHOUT_CLASSIFICATION	3.6485968738715737E-6	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9999954186429902	WITHOUT_CLASSIFICATION	4.581357009850716E-6	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9999961352002096	WITHOUT_CLASSIFICATION	3.864799790355426E-6	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.99999567337528	WITHOUT_CLASSIFICATION	4.3266247199731305E-6	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9999961634106372	WITHOUT_CLASSIFICATION	3.836589362784844E-6	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9999960812100981	WITHOUT_CLASSIFICATION	3.918789901827914E-6	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.999995893429938	WITHOUT_CLASSIFICATION	4.106570061999337E-6	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9999957850938783	WITHOUT_CLASSIFICATION	4.214906121758961E-6	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9999957431337938	WITHOUT_CLASSIFICATION	4.256866206226412E-6	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9999959002378469	WITHOUT_CLASSIFICATION	4.099762153083453E-6	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9999965146964787	WITHOUT_CLASSIFICATION	3.4853035214589964E-6	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9999960589105373	WITHOUT_CLASSIFICATION	3.941089462706586E-6	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9999956039217059	WITHOUT_CLASSIFICATION	4.396078294060704E-6	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9999957555501229	WITHOUT_CLASSIFICATION	4.244449877108174E-6	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9999957607287717	WITHOUT_CLASSIFICATION	4.239271228281294E-6	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9999958963451933	WITHOUT_CLASSIFICATION	4.103654806792227E-6	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9999958414484236	WITHOUT_CLASSIFICATION	4.158551576395577E-6	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9999958034337371	WITHOUT_CLASSIFICATION	4.196566262987586E-6	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9999958674036847	WITHOUT_CLASSIFICATION	4.132596315268978E-6	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9999965388254288	WITHOUT_CLASSIFICATION	3.4611745712260504E-6	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999959083649625	WITHOUT_CLASSIFICATION	4.091635037500926E-6	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999956983068394	WITHOUT_CLASSIFICATION	4.301693160608954E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999961871432109	WITHOUT_CLASSIFICATION	3.8128567890206505E-6	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999954181894579	WITHOUT_CLASSIFICATION	4.5818105421473E-6	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999958109548177	WITHOUT_CLASSIFICATION	4.189045182244394E-6	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999962499072054	WITHOUT_CLASSIFICATION	3.7500927947228226E-6	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999954824259729	WITHOUT_CLASSIFICATION	4.517574027013152E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999965522118642	WITHOUT_CLASSIFICATION	3.447788135699775E-6	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999954231697785	WITHOUT_CLASSIFICATION	4.576830221449627E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999954760654842	WITHOUT_CLASSIFICATION	4.523934515828296E-6	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9999965820771658	WITHOUT_CLASSIFICATION	3.4179228342187195E-6	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9999957773599973	WITHOUT_CLASSIFICATION	4.2226400026533725E-6	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9999956669901452	WITHOUT_CLASSIFICATION	4.333009854837215E-6	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9999961308030516	WITHOUT_CLASSIFICATION	3.869196948397844E-6	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.999996019991391	WITHOUT_CLASSIFICATION	3.980008609026348E-6	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9999961980833765	WITHOUT_CLASSIFICATION	3.801916623563332E-6	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9999955941841371	WITHOUT_CLASSIFICATION	4.405815862850929E-6	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9999962119283075	WITHOUT_CLASSIFICATION	3.7880716924604814E-6	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9999958338670709	WITHOUT_CLASSIFICATION	4.166132929049101E-6	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9999957923041389	WITHOUT_CLASSIFICATION	4.207695861019439E-6	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.999995829466504	WITHOUT_CLASSIFICATION	4.170533496014401E-6	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9999957181267014	WITHOUT_CLASSIFICATION	4.281873298665967E-6	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9999957693708578	WITHOUT_CLASSIFICATION	4.230629142140062E-6	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9999956729413582	WITHOUT_CLASSIFICATION	4.327058641818047E-6	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9999956617403152	WITHOUT_CLASSIFICATION	4.338259684853655E-6	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9999958118921622	WITHOUT_CLASSIFICATION	4.188107837715327E-6	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9999958102869094	WITHOUT_CLASSIFICATION	4.189713090543727E-6	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9999964579183012	WITHOUT_CLASSIFICATION	3.5420816987931712E-6	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9999963712228837	WITHOUT_CLASSIFICATION	3.628777116433328E-6	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9999954835326909	WITHOUT_CLASSIFICATION	4.516467309162448E-6	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9999958692709048	WITHOUT_CLASSIFICATION	4.13072909523331E-6	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.9999957593028622	WITHOUT_CLASSIFICATION	4.240697137720498E-6	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9999967373956283	WITHOUT_CLASSIFICATION	3.2626043715848417E-6	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9999958909006493	WITHOUT_CLASSIFICATION	4.109099350595846E-6	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9999958913033642	WITHOUT_CLASSIFICATION	4.108696635752348E-6	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9999957581035553	WITHOUT_CLASSIFICATION	4.241896444710289E-6	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9999953323290749	WITHOUT_CLASSIFICATION	4.6676709251454784E-6	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9999954759481459	WITHOUT_CLASSIFICATION	4.524051854192314E-6	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9999954643484916	WITHOUT_CLASSIFICATION	4.535651508346304E-6	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9999956189816855	WITHOUT_CLASSIFICATION	4.381018314405282E-6	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9999959188408288	WITHOUT_CLASSIFICATION	4.08115917107802E-6	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9999961357622378	WITHOUT_CLASSIFICATION	3.864237762273988E-6	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9999954253597236	WITHOUT_CLASSIFICATION	4.574640276297016E-6	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9999961360921514	WITHOUT_CLASSIFICATION	3.863907848627521E-6	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9999957992762365	WITHOUT_CLASSIFICATION	4.200723763520008E-6	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9999957013126239	WITHOUT_CLASSIFICATION	4.2986873761048305E-6	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9999949467720392	WITHOUT_CLASSIFICATION	5.053227960808348E-6	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9999955088165463	WITHOUT_CLASSIFICATION	4.491183453641786E-6	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9999954329605071	WITHOUT_CLASSIFICATION	4.567039492912058E-6	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999952807930936	WITHOUT_CLASSIFICATION	4.719206906352751E-6	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999957973346423	WITHOUT_CLASSIFICATION	4.202665357729847E-6	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999961533031179	WITHOUT_CLASSIFICATION	3.846696882173242E-6	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999961149143599	WITHOUT_CLASSIFICATION	3.8850856401140994E-6	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999951949260807	WITHOUT_CLASSIFICATION	4.805073919298339E-6	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999955853668067	WITHOUT_CLASSIFICATION	4.41463319342117E-6	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999957483803577	WITHOUT_CLASSIFICATION	4.251619642407E-6	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999954323456264	WITHOUT_CLASSIFICATION	4.567654373570343E-6	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999953919601134	WITHOUT_CLASSIFICATION	4.608039886541803E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999958088664777	WITHOUT_CLASSIFICATION	4.191133522357452E-6	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9999961063920786	WITHOUT_CLASSIFICATION	3.8936079214380995E-6	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9999962901794129	WITHOUT_CLASSIFICATION	3.7098205871275084E-6	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9999957339263098	WITHOUT_CLASSIFICATION	4.266073690171149E-6	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9999956551191294	WITHOUT_CLASSIFICATION	4.344880870658235E-6	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9999957425799834	WITHOUT_CLASSIFICATION	4.25742001666453E-6	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9999958448158187	WITHOUT_CLASSIFICATION	4.155184181300583E-6	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9999953692467112	WITHOUT_CLASSIFICATION	4.630753288836803E-6	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9999953333639657	WITHOUT_CLASSIFICATION	4.666636034272862E-6	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9999950997938039	WITHOUT_CLASSIFICATION	4.900206196205128E-6	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9999962315777252	WITHOUT_CLASSIFICATION	3.768422274846328E-6	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9999958152645722	WITHOUT_CLASSIFICATION	4.184735427888913E-6	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9999951832083894	WITHOUT_CLASSIFICATION	4.816791610525123E-6	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.999996488124402	WITHOUT_CLASSIFICATION	3.5118755980233997E-6	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9999952479926189	WITHOUT_CLASSIFICATION	4.752007381180019E-6	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.999995353861724	WITHOUT_CLASSIFICATION	4.646138275997709E-6	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9999956661597691	WITHOUT_CLASSIFICATION	4.333840230898951E-6	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9999956806327777	WITHOUT_CLASSIFICATION	4.3193672224013035E-6	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9999958710153573	WITHOUT_CLASSIFICATION	4.128984642782416E-6	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.999995703200539	WITHOUT_CLASSIFICATION	4.2967994610003114E-6	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9999952913226224	WITHOUT_CLASSIFICATION	4.708677377597593E-6	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9999950118540457	WITHOUT_CLASSIFICATION	4.988145954310918E-6	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9999952540352584	WITHOUT_CLASSIFICATION	4.745964741596109E-6	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9999951583160459	WITHOUT_CLASSIFICATION	4.841683954017188E-6	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9999951424710899	WITHOUT_CLASSIFICATION	4.857528910168457E-6	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9999951599518768	WITHOUT_CLASSIFICATION	4.840048123156224E-6	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9999955906213186	WITHOUT_CLASSIFICATION	4.409378681416953E-6	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9999951983107903	WITHOUT_CLASSIFICATION	4.801689209721633E-6	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9999952077872846	WITHOUT_CLASSIFICATION	4.79221271550491E-6	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9999953127961125	WITHOUT_CLASSIFICATION	4.687203887460825E-6	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9999953073828031	WITHOUT_CLASSIFICATION	4.692617196924724E-6	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9999966580267428	WITHOUT_CLASSIFICATION	3.341973257376804E-6	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9999966367184803	WITHOUT_CLASSIFICATION	3.3632815197255583E-6	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9999962324217417	WITHOUT_CLASSIFICATION	3.767578258287835E-6	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9999963967747525	WITHOUT_CLASSIFICATION	3.6032252474329756E-6	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9999953968833958	WITHOUT_CLASSIFICATION	4.60311660421272E-6	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9999957106173459	WITHOUT_CLASSIFICATION	4.28938265408239E-6	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9999957630058417	WITHOUT_CLASSIFICATION	4.236994158341556E-6	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.9999958608131697	WITHOUT_CLASSIFICATION	4.139186830295773E-6	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9999954256738736	WITHOUT_CLASSIFICATION	4.574326126347877E-6	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9999133986237502	WITHOUT_CLASSIFICATION	8.660137624981706E-5	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999137612723926	WITHOUT_CLASSIFICATION	8.623872760736457E-5	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.999995651903066	WITHOUT_CLASSIFICATION	4.348096933980386E-6	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999936450138386	WITHOUT_CLASSIFICATION	6.354986161466165E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999046384769356	WITHOUT_CLASSIFICATION	9.536152306447286E-5	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999221851737915	WITHOUT_CLASSIFICATION	7.781482620848568E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999741545429973	WITHOUT_CLASSIFICATION	2.5845457002625335E-5	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999550168919973	WITHOUT_CLASSIFICATION	4.4983108002730544E-5	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.9999954917558334	WITHOUT_CLASSIFICATION	4.508244166676821E-6	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.999995464376818	WITHOUT_CLASSIFICATION	4.535623181966108E-6	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.999995738005661	WITHOUT_CLASSIFICATION	4.261994338933085E-6	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9999953166305845	WITHOUT_CLASSIFICATION	4.683369415529959E-6	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9999953553362363	WITHOUT_CLASSIFICATION	4.644663763718302E-6	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9999954994078516	WITHOUT_CLASSIFICATION	4.500592148495235E-6	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9999966515383125	WITHOUT_CLASSIFICATION	3.3484616876073305E-6	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9999962956381756	WITHOUT_CLASSIFICATION	3.704361824420846E-6	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9999954502465553	WITHOUT_CLASSIFICATION	4.549753444737591E-6	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9999955063455056	WITHOUT_CLASSIFICATION	4.493654494356325E-6	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9999957983829758	WITHOUT_CLASSIFICATION	4.201617024096293E-6	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9999958761195595	WITHOUT_CLASSIFICATION	4.123880440530515E-6	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.9999959236810926	WITHOUT_CLASSIFICATION	4.076318907359283E-6	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9999955970350918	WITHOUT_CLASSIFICATION	4.402964908300133E-6	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9999962473018639	WITHOUT_CLASSIFICATION	3.7526981360442512E-6	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9999958327258142	WITHOUT_CLASSIFICATION	4.167274185852016E-6	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9999954282411471	WITHOUT_CLASSIFICATION	4.571758852968941E-6	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9999957489405895	WITHOUT_CLASSIFICATION	4.251059410517017E-6	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9999958291350628	WITHOUT_CLASSIFICATION	4.1708649372193344E-6	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9999954002705722	WITHOUT_CLASSIFICATION	4.599729427814636E-6	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9999963680788009	WITHOUT_CLASSIFICATION	3.6319211991662055E-6	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9999961889573326	WITHOUT_CLASSIFICATION	3.8110426674014986E-6	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9999966188794982	WITHOUT_CLASSIFICATION	3.3811205017728196E-6	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.999739581794286	WITHOUT_CLASSIFICATION	2.60418205714005E-4	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999941349030816	WITHOUT_CLASSIFICATION	5.865096918356145E-6	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999973499837521	WITHOUT_CLASSIFICATION	2.6500162478374524E-6	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999834484511622	WITHOUT_CLASSIFICATION	1.655154883790873E-5	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999988268077269	WITHOUT_CLASSIFICATION	1.1731922731634817E-6	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999463650303158	WITHOUT_CLASSIFICATION	5.3634969684231276E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999967220407272	WITHOUT_CLASSIFICATION	3.2779592728784683E-6	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999968067361169	WITHOUT_CLASSIFICATION	3.193263883119964E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999919406835357	WITHOUT_CLASSIFICATION	8.059316464258355E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999919406835357	WITHOUT_CLASSIFICATION	8.059316464258355E-6	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999984913754894	WITHOUT_CLASSIFICATION	1.5086245107600204E-6	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999889115623112	WITHOUT_CLASSIFICATION	1.1088437688849554E-5	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999988548699964	WITHOUT_CLASSIFICATION	1.1451300036455346E-6	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999963054823144	WITHOUT_CLASSIFICATION	3.6945176855885965E-6	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999991019682506	WITHOUT_CLASSIFICATION	8.980317494347318E-7	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.999977418902201	WITHOUT_CLASSIFICATION	2.2581097798976538E-5	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.999957495248233	WITHOUT_CLASSIFICATION	4.25047517669688E-5	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999973703510971	WITHOUT_CLASSIFICATION	2.629648902844919E-6	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.999998013352865	WITHOUT_CLASSIFICATION	1.9866471350538837E-6	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999961731480768	WITHOUT_CLASSIFICATION	3.826851923237863E-6	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999748228129111	WITHOUT_CLASSIFICATION	2.5177187088994585E-5	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999353371944196	WITHOUT_CLASSIFICATION	6.466280558032071E-5	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999938184128682	WITHOUT_CLASSIFICATION	6.181587131756092E-6	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999186275464685	WITHOUT_CLASSIFICATION	8.137245353153476E-5	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999985187280304	WITHOUT_CLASSIFICATION	1.4812719697359606E-6	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999985187280304	WITHOUT_CLASSIFICATION	1.4812719697359606E-6	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999839637711097	WITHOUT_CLASSIFICATION	1.6036228890345344E-5	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.99999827299664	WITHOUT_CLASSIFICATION	1.7270033600420834E-6	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999956625071855	WITHOUT_CLASSIFICATION	4.337492814528091E-6	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999956558530085	WITHOUT_CLASSIFICATION	4.34414699143998E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999913811515065	WITHOUT_CLASSIFICATION	8.618848493487186E-6	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999930296330302	WITHOUT_CLASSIFICATION	6.970366969913834E-6	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999884711843977	WITHOUT_CLASSIFICATION	1.1528815602364548E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999930296330302	WITHOUT_CLASSIFICATION	6.970366969913834E-6	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999631148752819	WITHOUT_CLASSIFICATION	3.688512471817084E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999845004684097	WITHOUT_CLASSIFICATION	1.5499531590309236E-5	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.99997951718702	WITHOUT_CLASSIFICATION	2.0482812979990275E-5	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.999696737976926	WITHOUT_CLASSIFICATION	3.0326202307397806E-4	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999861847241326	WITHOUT_CLASSIFICATION	1.3815275867508613E-5	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999949082961553	WITHOUT_CLASSIFICATION	5.0917038446837655E-6	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999854502749385	WITHOUT_CLASSIFICATION	1.4549725061653496E-5	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.999997795136796	WITHOUT_CLASSIFICATION	2.204863204092698E-6	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999979279824759	WITHOUT_CLASSIFICATION	2.0720175240284597E-6	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999983311402647	WITHOUT_CLASSIFICATION	1.6688597352828946E-6	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999893657668348	WITHOUT_CLASSIFICATION	1.0634233165139342E-5	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999879007939457	WITHOUT_CLASSIFICATION	1.2099206054241546E-5	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999892880259069	WITHOUT_CLASSIFICATION	1.0711974093039853E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998383274505269	WITHOUT_CLASSIFICATION	1.6167254947312758E-4	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999968992475914	WITHOUT_CLASSIFICATION	3.1007524084735437E-6	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999968992475914	WITHOUT_CLASSIFICATION	3.1007524084735437E-6	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999959735847898	WITHOUT_CLASSIFICATION	4.026415210212651E-6	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999608162823982	WITHOUT_CLASSIFICATION	3.9183717601779825E-5	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999670538106369	WITHOUT_CLASSIFICATION	3.294618936310924E-5	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999981573939941	WITHOUT_CLASSIFICATION	1.842606005940435E-6	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9999938794505991	WITHOUT_CLASSIFICATION	6.120549400830379E-6	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999930296330302	WITHOUT_CLASSIFICATION	6.970366969913834E-6	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999991386398733	WITHOUT_CLASSIFICATION	8.613601266067446E-7	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999991125791194	WITHOUT_CLASSIFICATION	8.874208806525659E-7	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999997598931893	WITHOUT_CLASSIFICATION	2.4010681058368216E-7	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.999998873280989	WITHOUT_CLASSIFICATION	1.1267190109701524E-6	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999991930675417	WITHOUT_CLASSIFICATION	8.069324582536596E-7	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999963991058004	WITHOUT_CLASSIFICATION	3.600894199578036E-6	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999991769499468	WITHOUT_CLASSIFICATION	8.23050053156535E-7	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999922244608693	WITHOUT_CLASSIFICATION	7.775539130744078E-6	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.999919568846848	WITHOUT_CLASSIFICATION	8.043115315198258E-5	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9995099995394275	WITHOUT_CLASSIFICATION	4.900004605725205E-4	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9997361511762435	WITHOUT_CLASSIFICATION	2.6384882375660455E-4	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999998584251398	WITHOUT_CLASSIFICATION	1.4157486022389714E-7	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999993510829078	WITHOUT_CLASSIFICATION	6.489170920951665E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999875055165393	WITHOUT_CLASSIFICATION	1.2494483460719239E-5	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9997216825122257	WITHOUT_CLASSIFICATION	2.783174877742366E-4	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999854073210644	WITHOUT_CLASSIFICATION	1.4592678935605151E-5	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999968103304884	WITHOUT_CLASSIFICATION	3.1896695116021652E-6	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9999802013981488	WITHOUT_CLASSIFICATION	1.9798601851250456E-5	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9999871137814161	WITHOUT_CLASSIFICATION	1.288621858376357E-5	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9998410398575192	WITHOUT_CLASSIFICATION	1.589601424809046E-4	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999918867604912	WITHOUT_CLASSIFICATION	8.113239508763095E-6	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999739447765656	WITHOUT_CLASSIFICATION	2.6055223434348904E-5	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999968711072892	WITHOUT_CLASSIFICATION	3.128892710769547E-6	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999936448513056	WITHOUT_CLASSIFICATION	6.355148694356853E-6	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999944283644856	WITHOUT_CLASSIFICATION	5.57163551441626E-6	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999944951359947	WITHOUT_CLASSIFICATION	5.5048640052590525E-6	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999992875864415	WITHOUT_CLASSIFICATION	7.12413558442391E-7	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999925130284145	WITHOUT_CLASSIFICATION	7.486971585542837E-6	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9993999989395557	WITHOUT_CLASSIFICATION	6.000010604444377E-4	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999965436710546	WITHOUT_CLASSIFICATION	3.456328945397418E-6	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999897941754868	WITHOUT_CLASSIFICATION	1.0205824513196169E-5	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9999966051739608	WITHOUT_CLASSIFICATION	3.3948260390975615E-6	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999894144362385	WITHOUT_CLASSIFICATION	1.0585563761538439E-5	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999998206967824	WITHOUT_CLASSIFICATION	1.7930321764100464E-7	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999718664706632	WITHOUT_CLASSIFICATION	2.813352933686479E-5	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999973247461271	WITHOUT_CLASSIFICATION	2.675253872828874E-6	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.999973388424871	WITHOUT_CLASSIFICATION	2.6611575129025083E-5	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9999965641990622	WITHOUT_CLASSIFICATION	3.4358009377624483E-6	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9999972112594148	WITHOUT_CLASSIFICATION	2.7887405851434813E-6	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999986405039565	WITHOUT_CLASSIFICATION	1.3594960435291502E-6	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999550168919973	WITHOUT_CLASSIFICATION	4.4983108002730544E-5	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999994275282051	WITHOUT_CLASSIFICATION	5.724717948933822E-7	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999971678240228	WITHOUT_CLASSIFICATION	2.8321759771772575E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999797329236241	WITHOUT_CLASSIFICATION	2.026707637601038E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999952663482381	WITHOUT_CLASSIFICATION	4.7336517619309865E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999845004684097	WITHOUT_CLASSIFICATION	1.5499531590309236E-5	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999977657568304	WITHOUT_CLASSIFICATION	2.2342431695435295E-6	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999993485518442	WITHOUT_CLASSIFICATION	6.514481557792244E-7	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999983720076805	WITHOUT_CLASSIFICATION	1.6279923194570013E-6	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999447028713352	WITHOUT_CLASSIFICATION	5.5297128664772E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999447028713352	WITHOUT_CLASSIFICATION	5.5297128664772E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999962784676792	WITHOUT_CLASSIFICATION	3.721532320806652E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999962784676792	WITHOUT_CLASSIFICATION	3.721532320806652E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999962784676792	WITHOUT_CLASSIFICATION	3.721532320806652E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999661734641101	WITHOUT_CLASSIFICATION	3.38265358899518E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999661734641101	WITHOUT_CLASSIFICATION	3.38265358899518E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999787361909378	WITHOUT_CLASSIFICATION	2.1263809062116652E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999787361909378	WITHOUT_CLASSIFICATION	2.1263809062116652E-5	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999948638131408	WITHOUT_CLASSIFICATION	5.136186859168785E-6	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999977445156253	WITHOUT_CLASSIFICATION	2.2554843746599718E-6	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999970220706884	WITHOUT_CLASSIFICATION	2.9779293114717563E-6	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999970220706884	WITHOUT_CLASSIFICATION	2.9779293114717563E-6	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999967391869168	WITHOUT_CLASSIFICATION	3.2608130832052317E-6	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999977887218535	WITHOUT_CLASSIFICATION	2.211278146456108E-6	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999990411200401	WITHOUT_CLASSIFICATION	9.58879959805856E-7	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999993619723867	WITHOUT_CLASSIFICATION	6.380276133094332E-7	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.999996596449521	WITHOUT_CLASSIFICATION	3.403550479073758E-6	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999995403321748	WITHOUT_CLASSIFICATION	4.5966782526308826E-7	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999987091729019	WITHOUT_CLASSIFICATION	1.2908270981703542E-6	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999981599543395	WITHOUT_CLASSIFICATION	1.8400456605548515E-6	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9999975250723181	WITHOUT_CLASSIFICATION	2.4749276819816067E-6	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9999944115247267	WITHOUT_CLASSIFICATION	5.588475273295653E-6	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9998880615808234	WITHOUT_CLASSIFICATION	1.1193841917652303E-4	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9999679669108466	WITHOUT_CLASSIFICATION	3.2033089153375224E-5	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9999847138238036	WITHOUT_CLASSIFICATION	1.528617619642206E-5	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9999882381410845	WITHOUT_CLASSIFICATION	1.1761858915462744E-5	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999978988820601	WITHOUT_CLASSIFICATION	2.101117939856861E-6	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999338748763428	WITHOUT_CLASSIFICATION	6.612512365720132E-5	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9994266837624358	WITHOUT_CLASSIFICATION	5.73316237564109E-4	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999798545054825	WITHOUT_CLASSIFICATION	2.0145494517404135E-5	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999703213929437	WITHOUT_CLASSIFICATION	2.9678607056184522E-5	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999375266486926	WITHOUT_CLASSIFICATION	6.247335130739846E-5	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999968339674195	WITHOUT_CLASSIFICATION	3.1660325804416894E-6	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999962964300113	WITHOUT_CLASSIFICATION	3.703569988751991E-6	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.999997009048247	WITHOUT_CLASSIFICATION	2.9909517530671426E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999995812527852	WITHOUT_CLASSIFICATION	4.1874721482801713E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999993953580523	WITHOUT_CLASSIFICATION	6.046419476936783E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999996878238573	WITHOUT_CLASSIFICATION	3.1217614276480237E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999997161694779	WITHOUT_CLASSIFICATION	2.8383052203453185E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999989054943837	WITHOUT_CLASSIFICATION	1.0945056161708956E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999995344837094	WITHOUT_CLASSIFICATION	4.655162905939509E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999993278267633	WITHOUT_CLASSIFICATION	6.721732367808217E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999996529574966	WITHOUT_CLASSIFICATION	3.4704250339008137E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993724299328	WITHOUT_CLASSIFICATION	6.27570067291127E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999990938324144	WITHOUT_CLASSIFICATION	9.061675855692762E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999473524081	WITHOUT_CLASSIFICATION	5.264759190111472E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999990938324144	WITHOUT_CLASSIFICATION	9.061675855692762E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999990938324144	WITHOUT_CLASSIFICATION	9.061675855692762E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999990938324144	WITHOUT_CLASSIFICATION	9.061675855692762E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999990938324144	WITHOUT_CLASSIFICATION	9.061675855692762E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999990938324144	WITHOUT_CLASSIFICATION	9.061675855692762E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999990938324144	WITHOUT_CLASSIFICATION	9.061675855692762E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999473524081	WITHOUT_CLASSIFICATION	5.264759190111472E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999473524081	WITHOUT_CLASSIFICATION	5.264759190111472E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999473524081	WITHOUT_CLASSIFICATION	5.264759190111472E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999473524081	WITHOUT_CLASSIFICATION	5.264759190111472E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999473524081	WITHOUT_CLASSIFICATION	5.264759190111472E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999473524081	WITHOUT_CLASSIFICATION	5.264759190111472E-7	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999888591714264	WITHOUT_CLASSIFICATION	1.1140828573565331E-5	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999902196546097	WITHOUT_CLASSIFICATION	9.780345390410967E-6	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999657203243352	WITHOUT_CLASSIFICATION	3.427967566480487E-5	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.999998790370139	WITHOUT_CLASSIFICATION	1.2096298609521285E-6	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999997574457262	WITHOUT_CLASSIFICATION	2.425542737234141E-7	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999994027562131	WITHOUT_CLASSIFICATION	5.972437867850665E-7	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.999991162501077	WITHOUT_CLASSIFICATION	8.837498922958012E-6	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999933908071851	WITHOUT_CLASSIFICATION	6.609192814950677E-6	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999537213626064	WITHOUT_CLASSIFICATION	4.627863739356595E-5	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9998097315620433	WITHOUT_CLASSIFICATION	1.9026843795671744E-4	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.999900657653229	WITHOUT_CLASSIFICATION	9.93423467710336E-5	IMPLEMENTATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999976397867939	WITHOUT_CLASSIFICATION	2.3602132060416445E-6	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999822007740607	WITHOUT_CLASSIFICATION	1.7799225939300865E-5	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999998008223767	WITHOUT_CLASSIFICATION	1.991776233295846E-7	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.999992900995476	WITHOUT_CLASSIFICATION	7.099004524002438E-6	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999979002177356	WITHOUT_CLASSIFICATION	2.0997822642805685E-6	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999953153524177	WITHOUT_CLASSIFICATION	4.684647582240817E-6	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999992545974007	WITHOUT_CLASSIFICATION	7.454025992797525E-7	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999988436557314	WITHOUT_CLASSIFICATION	1.15634426849156E-6	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.999998388029073	WITHOUT_CLASSIFICATION	1.6119709270354736E-6	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999976897044995	WITHOUT_CLASSIFICATION	2.3102955003618803E-6	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999927461139924	WITHOUT_CLASSIFICATION	7.25388600768192E-6	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999884711843977	WITHOUT_CLASSIFICATION	1.1528815602364548E-5	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999999645792765	WITHOUT_CLASSIFICATION	3.542072349845743E-8	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999934602358168	WITHOUT_CLASSIFICATION	6.539764183199615E-6	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999999924326838	WITHOUT_CLASSIFICATION	7.56731621580019E-9	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999998276872035	WITHOUT_CLASSIFICATION	1.723127964818381E-7	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9998013063185428	WITHOUT_CLASSIFICATION	1.9869368145711275E-4	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.9998952536934088	WITHOUT_CLASSIFICATION	1.0474630659120337E-4	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999986933849068	WITHOUT_CLASSIFICATION	1.306615093316095E-6	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.9999632540912257	WITHOUT_CLASSIFICATION	3.674590877427692E-5	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999988808485599	WITHOUT_CLASSIFICATION	1.119151440042692E-6	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999986865922342	WITHOUT_CLASSIFICATION	1.3134077657528512E-6	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9999993360550286	WITHOUT_CLASSIFICATION	6.639449715617307E-7	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.999996007333136	WITHOUT_CLASSIFICATION	3.992666863966994E-6	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999963248323203	WITHOUT_CLASSIFICATION	3.67516767963767E-6	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9998495281038529	WITHOUT_CLASSIFICATION	1.5047189614726333E-4	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999979127713104	WITHOUT_CLASSIFICATION	2.0872286896361174E-6	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999979187377546	WITHOUT_CLASSIFICATION	2.081262245458086E-6	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999988619414735	WITHOUT_CLASSIFICATION	1.1380585265917587E-6	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999906545577535	WITHOUT_CLASSIFICATION	9.345442246486297E-6	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999968312275893	WITHOUT_CLASSIFICATION	3.168772410630539E-6	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999994276256711	WITHOUT_CLASSIFICATION	5.723743289183352E-7	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999981192966663	WITHOUT_CLASSIFICATION	1.8807033337253647E-6	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999981192966663	WITHOUT_CLASSIFICATION	1.8807033337253647E-6	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999981334074689	WITHOUT_CLASSIFICATION	1.8665925310546893E-6	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999981334074689	WITHOUT_CLASSIFICATION	1.8665925310546893E-6	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999991343979214	WITHOUT_CLASSIFICATION	8.656020786697665E-7	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999991343979214	WITHOUT_CLASSIFICATION	8.656020786697665E-7	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.999999450366578	WITHOUT_CLASSIFICATION	5.496334220574917E-7	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999984543171253	WITHOUT_CLASSIFICATION	1.5456828746153339E-6	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999892616813374	WITHOUT_CLASSIFICATION	1.0738318662497881E-5	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999998096807492	WITHOUT_CLASSIFICATION	1.9031925091590078E-7	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.999999528692473	WITHOUT_CLASSIFICATION	4.7130752699483827E-7	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999956958324956	WITHOUT_CLASSIFICATION	4.304167504410686E-6	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9999826018661626	WITHOUT_CLASSIFICATION	1.7398133837388805E-5	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999937744987014	WITHOUT_CLASSIFICATION	6.225501298555533E-6	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999996804143022	WITHOUT_CLASSIFICATION	3.1958569781431506E-7	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999984596545995	WITHOUT_CLASSIFICATION	1.5403454004356628E-6	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999999967728479	WITHOUT_CLASSIFICATION	3.227152077158863E-9	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999987846538956	WITHOUT_CLASSIFICATION	1.2153461043594789E-6	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999993960811054	WITHOUT_CLASSIFICATION	6.03918894588548E-7	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999213244946094	WITHOUT_CLASSIFICATION	7.867550539060364E-5	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.999995750017917	WITHOUT_CLASSIFICATION	4.249982083105873E-6	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9999975899557382	WITHOUT_CLASSIFICATION	2.410044261822237E-6	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999997845558807	WITHOUT_CLASSIFICATION	2.1544411938206516E-7	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999996821323409	WITHOUT_CLASSIFICATION	3.1786765912499205E-7	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999983806409906	WITHOUT_CLASSIFICATION	1.6193590094995821E-6	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9999920228309899	WITHOUT_CLASSIFICATION	7.977169010102048E-6	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9999935058522589	WITHOUT_CLASSIFICATION	6.494147741187437E-6	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999981343159903	WITHOUT_CLASSIFICATION	1.8656840097033104E-6	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999955886075738	WITHOUT_CLASSIFICATION	4.411392426265563E-6	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999947416465224	WITHOUT_CLASSIFICATION	5.2583534776757096E-6	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.999999678874815	WITHOUT_CLASSIFICATION	3.2112518492121553E-7	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999996229919814	WITHOUT_CLASSIFICATION	3.77008018490505E-7	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9999830329850652	WITHOUT_CLASSIFICATION	1.696701493478699E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999552522040138	WITHOUT_CLASSIFICATION	4.474779598618369E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999552522040138	WITHOUT_CLASSIFICATION	4.474779598618369E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999552522040138	WITHOUT_CLASSIFICATION	4.474779598618369E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999280826782042	WITHOUT_CLASSIFICATION	7.191732179582651E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999280826782042	WITHOUT_CLASSIFICATION	7.191732179582651E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999875055165393	WITHOUT_CLASSIFICATION	1.2494483460719239E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999875055165393	WITHOUT_CLASSIFICATION	1.2494483460719239E-5	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999970172120063	WITHOUT_CLASSIFICATION	2.9827879937904406E-6	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9972493890842179	WITHOUT_CLASSIFICATION	0.0027506109157820063	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999846907628602	WITHOUT_CLASSIFICATION	1.5309237139709384E-5	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999965273681377	WITHOUT_CLASSIFICATION	3.4726318621504802E-6	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999552522040138	WITHOUT_CLASSIFICATION	4.474779598618369E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999552522040138	WITHOUT_CLASSIFICATION	4.474779598618369E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999552522040138	WITHOUT_CLASSIFICATION	4.474779598618369E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999280826782042	WITHOUT_CLASSIFICATION	7.191732179582651E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999280826782042	WITHOUT_CLASSIFICATION	7.191732179582651E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999280826782042	WITHOUT_CLASSIFICATION	7.191732179582651E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999875055165393	WITHOUT_CLASSIFICATION	1.2494483460719239E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999875055165393	WITHOUT_CLASSIFICATION	1.2494483460719239E-5	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.99999723312795	WITHOUT_CLASSIFICATION	2.766872049985931E-6	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999842383437677	WITHOUT_CLASSIFICATION	1.5761656232329192E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999237036006852	WITHOUT_CLASSIFICATION	7.629639931490615E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999237036006852	WITHOUT_CLASSIFICATION	7.629639931490615E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999237036006852	WITHOUT_CLASSIFICATION	7.629639931490615E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999237036006852	WITHOUT_CLASSIFICATION	7.629639931490615E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999237036006852	WITHOUT_CLASSIFICATION	7.629639931490615E-5	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999982262914574	WITHOUT_CLASSIFICATION	1.773708542580966E-6	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999970336303599	WITHOUT_CLASSIFICATION	2.9663696401440397E-6	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9997930228685118	WITHOUT_CLASSIFICATION	2.0697713148830324E-4	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.999994348367331	WITHOUT_CLASSIFICATION	5.651632668919791E-6	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999959996020422	WITHOUT_CLASSIFICATION	4.000397957757604E-6	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9994900334752825	WITHOUT_CLASSIFICATION	5.099665247174425E-4	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999895944654956	WITHOUT_CLASSIFICATION	1.0405534504366226E-5	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.999997734373944	WITHOUT_CLASSIFICATION	2.265626055874194E-6	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999849778764907	WITHOUT_CLASSIFICATION	1.5022123509382846E-5	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999992687887064	WITHOUT_CLASSIFICATION	7.312112936624442E-7	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999938839698699	WITHOUT_CLASSIFICATION	6.116030130063013E-6	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999984984602587	WITHOUT_CLASSIFICATION	1.501539741393418E-6	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999865308453588	WITHOUT_CLASSIFICATION	1.3469154641098757E-5	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999997258515342	WITHOUT_CLASSIFICATION	2.7414846579274025E-7	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9998822377077321	WITHOUT_CLASSIFICATION	1.1776229226789683E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9998606659702155	WITHOUT_CLASSIFICATION	1.393340297845226E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9998606659702155	WITHOUT_CLASSIFICATION	1.393340297845226E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9998606659702155	WITHOUT_CLASSIFICATION	1.393340297845226E-4	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.999989237510245	WITHOUT_CLASSIFICATION	1.0762489754973092E-5	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999892373068665	WITHOUT_CLASSIFICATION	1.0762693133422477E-5	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999959889447416	WITHOUT_CLASSIFICATION	4.011055258347058E-6	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999941820831477	WITHOUT_CLASSIFICATION	5.81791685225125E-6	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999866985259371	WITHOUT_CLASSIFICATION	1.3301474062935136E-5	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999987218425131	WITHOUT_CLASSIFICATION	1.2781574868268196E-6	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999981818873845	WITHOUT_CLASSIFICATION	1.8181126154590518E-6	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9999965543540645	WITHOUT_CLASSIFICATION	3.445645935530631E-6	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999979530337282	WITHOUT_CLASSIFICATION	2.0469662719272967E-6	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999993373789411	WITHOUT_CLASSIFICATION	6.626210588015668E-7	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999989332008211	WITHOUT_CLASSIFICATION	1.0667991789528103E-6	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999985759012594	WITHOUT_CLASSIFICATION	1.4240987406158136E-6	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999961975292523	WITHOUT_CLASSIFICATION	3.8024707477963477E-6	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9999876152916265	WITHOUT_CLASSIFICATION	1.2384708373485704E-5	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9999908521428432	WITHOUT_CLASSIFICATION	9.147857156843973E-6	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999976407810449	WITHOUT_CLASSIFICATION	2.359218955003224E-6	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999977511625047	WITHOUT_CLASSIFICATION	2.248837495329204E-6	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.999994555502316	WITHOUT_CLASSIFICATION	5.444497684030742E-6	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9999901096749019	WITHOUT_CLASSIFICATION	9.89032509810171E-6	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999980786711081	WITHOUT_CLASSIFICATION	1.921328891953766E-6	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999968494191027	WITHOUT_CLASSIFICATION	3.1505808972304014E-6	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999787603703799	WITHOUT_CLASSIFICATION	2.1239629620142824E-5	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9982757923347855	WITHOUT_CLASSIFICATION	0.00172420766521455	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999973336619122	WITHOUT_CLASSIFICATION	2.6663380877339227E-6	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.999994042544576	WITHOUT_CLASSIFICATION	5.95745542397889E-6	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9999940935298895	WITHOUT_CLASSIFICATION	5.906470110436934E-6	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.999996836948123	WITHOUT_CLASSIFICATION	3.1630518770319828E-6	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9999972310911878	WITHOUT_CLASSIFICATION	2.7689088122317326E-6	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999754278176968	WITHOUT_CLASSIFICATION	2.457218230326309E-5	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9999713678424559	WITHOUT_CLASSIFICATION	2.863215754413825E-5	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.999968173956462	WITHOUT_CLASSIFICATION	3.182604353800832E-5	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9999680560201268	WITHOUT_CLASSIFICATION	3.1943979873139614E-5	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.9999664834423381	WITHOUT_CLASSIFICATION	3.3516557661996167E-5	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9999631590447327	WITHOUT_CLASSIFICATION	3.68409552673495E-5	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.999962916092711	WITHOUT_CLASSIFICATION	3.7083907288982154E-5	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9999620089410313	WITHOUT_CLASSIFICATION	3.7991058968811384E-5	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999939102788808	WITHOUT_CLASSIFICATION	6.089721119245044E-6	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9998835230283063	WITHOUT_CLASSIFICATION	1.1647697169363857E-4	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999999810267218	WITHOUT_CLASSIFICATION	1.8973278218473276E-8	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9997329320711075	WITHOUT_CLASSIFICATION	2.670679288925283E-4	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999991885002991	WITHOUT_CLASSIFICATION	8.114997008096676E-7	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.999999748240882	WITHOUT_CLASSIFICATION	2.517591180612681E-7	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999883621592606	WITHOUT_CLASSIFICATION	1.1637840739369386E-5	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999745669916876	WITHOUT_CLASSIFICATION	2.543300831234146E-5	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999970672625537	WITHOUT_CLASSIFICATION	2.9327374463119868E-6	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999982720833482	WITHOUT_CLASSIFICATION	1.7279166518099672E-6	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999598573012877	WITHOUT_CLASSIFICATION	4.014269871225067E-5	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999598573012877	WITHOUT_CLASSIFICATION	4.014269871225067E-5	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999587517407026	WITHOUT_CLASSIFICATION	4.124825929741405E-5	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999952156062276	WITHOUT_CLASSIFICATION	4.7843937723869485E-6	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999976965052115	WITHOUT_CLASSIFICATION	2.3034947885768847E-6	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999857485048348	WITHOUT_CLASSIFICATION	1.4251495165201864E-5	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999981279168833	WITHOUT_CLASSIFICATION	1.8720831167333573E-6	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999969161737242	WITHOUT_CLASSIFICATION	3.083826275819904E-6	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9998726042351593	WITHOUT_CLASSIFICATION	1.273957648407511E-4	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999993442054281	WITHOUT_CLASSIFICATION	6.55794571804393E-7	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999993102188753	WITHOUT_CLASSIFICATION	6.897811247681373E-7	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999907077646284	WITHOUT_CLASSIFICATION	9.29223537151163E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999941871323054	WITHOUT_CLASSIFICATION	5.81286769459571E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999941871323054	WITHOUT_CLASSIFICATION	5.81286769459571E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999941871323054	WITHOUT_CLASSIFICATION	5.81286769459571E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999941871323054	WITHOUT_CLASSIFICATION	5.81286769459571E-6	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9999893579814911	WITHOUT_CLASSIFICATION	1.064201850880145E-5	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9999933967448854	WITHOUT_CLASSIFICATION	6.603255114554007E-6	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9999969859105637	WITHOUT_CLASSIFICATION	3.0140894362718305E-6	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9999893263299293	WITHOUT_CLASSIFICATION	1.0673670070706028E-5	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999690754766182	WITHOUT_CLASSIFICATION	3.092452338186289E-5	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999997577864252	WITHOUT_CLASSIFICATION	2.42213574797348E-7	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999986335461238	WITHOUT_CLASSIFICATION	1.3664538761218084E-6	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999985441845357	WITHOUT_CLASSIFICATION	1.455815464274297E-6	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999985441845357	WITHOUT_CLASSIFICATION	1.455815464274297E-6	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999955316980247	WITHOUT_CLASSIFICATION	4.468301975292004E-6	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999968006615404	WITHOUT_CLASSIFICATION	3.1993384595534016E-6	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999458342942587	WITHOUT_CLASSIFICATION	5.416570574138909E-5	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999997744265163	WITHOUT_CLASSIFICATION	2.2557348373489556E-7	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999997744265163	WITHOUT_CLASSIFICATION	2.2557348373489556E-7	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999998181251156	WITHOUT_CLASSIFICATION	1.8187488426848079E-7	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9998264085346688	WITHOUT_CLASSIFICATION	1.7359146533116521E-4	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9998264085346688	WITHOUT_CLASSIFICATION	1.7359146533116521E-4	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.99999956148503	WITHOUT_CLASSIFICATION	4.385149700358519E-7	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999981270852758	WITHOUT_CLASSIFICATION	1.8729147242209472E-6	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999977268448338	WITHOUT_CLASSIFICATION	2.2731551662172228E-6	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999966940647295	WITHOUT_CLASSIFICATION	3.3059352704591433E-6	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999781076196592	WITHOUT_CLASSIFICATION	2.189238034073744E-5	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.999999807701606	WITHOUT_CLASSIFICATION	1.9229839401706612E-7	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999985459418829	WITHOUT_CLASSIFICATION	1.4540581171857408E-6	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9998099574039928	WITHOUT_CLASSIFICATION	1.9004259600726909E-4	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999968176095222	WITHOUT_CLASSIFICATION	3.1823904777078717E-6	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999972319285033	WITHOUT_CLASSIFICATION	2.7680714966198275E-6	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999981084400826	WITHOUT_CLASSIFICATION	1.8915599174217218E-6	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999973218722661	WITHOUT_CLASSIFICATION	2.6781277339341566E-6	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999988547638098	WITHOUT_CLASSIFICATION	1.1452361902099698E-6	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999984684102029	WITHOUT_CLASSIFICATION	1.5315897971425137E-6	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999344912051865	WITHOUT_CLASSIFICATION	6.550879481348424E-5	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999998985333333	WITHOUT_CLASSIFICATION	1.014666666500901E-7	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9999819352708585	WITHOUT_CLASSIFICATION	1.806472914150258E-5	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9999921374328645	WITHOUT_CLASSIFICATION	7.862567135425201E-6	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999872459157193	WITHOUT_CLASSIFICATION	1.2754084280639317E-5	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999996103274928	WITHOUT_CLASSIFICATION	3.896725071779449E-7	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999962524205123	WITHOUT_CLASSIFICATION	3.7475794876899724E-6	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999868200852357	WITHOUT_CLASSIFICATION	1.3179914764400105E-5	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999638309791241	WITHOUT_CLASSIFICATION	3.616902087594542E-5	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999981211668053	WITHOUT_CLASSIFICATION	1.8788331945741107E-6	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999999456657178	WITHOUT_CLASSIFICATION	5.4334282089789806E-8	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999954651183546	WITHOUT_CLASSIFICATION	4.534881645349112E-6	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999892425879781	WITHOUT_CLASSIFICATION	1.0757412021835668E-5	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999997451101277	WITHOUT_CLASSIFICATION	2.548898722855996E-7	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999983687821983	WITHOUT_CLASSIFICATION	1.631217801651634E-6	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9997601146753827	WITHOUT_CLASSIFICATION	2.398853246173359E-4	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9999609661109253	WITHOUT_CLASSIFICATION	3.903388907474159E-5	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.999986612392235	WITHOUT_CLASSIFICATION	1.3387607765081874E-5	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9999665885617128	WITHOUT_CLASSIFICATION	3.341143828717365E-5	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999866383489378	WITHOUT_CLASSIFICATION	1.3361651062118342E-5	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999305536603992	WITHOUT_CLASSIFICATION	6.944633960076499E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999851020930728	WITHOUT_CLASSIFICATION	1.4897906927275082E-5	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999850675483074	WITHOUT_CLASSIFICATION	1.4932451692554198E-5	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999957536615598	WITHOUT_CLASSIFICATION	4.246338440211221E-6	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999852049618728	WITHOUT_CLASSIFICATION	1.4795038127108043E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999851020930728	WITHOUT_CLASSIFICATION	1.4897906927275082E-5	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999850675483074	WITHOUT_CLASSIFICATION	1.4932451692554198E-5	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999757466963052	WITHOUT_CLASSIFICATION	2.4253303694843294E-5	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999991350425024	WITHOUT_CLASSIFICATION	8.649574976089991E-7	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999991350425024	WITHOUT_CLASSIFICATION	8.649574976089991E-7	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999989704556316	WITHOUT_CLASSIFICATION	1.0295443684102473E-6	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999938086063	WITHOUT_CLASSIFICATION	6.191393723154115E-9	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999886687498213	WITHOUT_CLASSIFICATION	1.1331250178619034E-5	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999934931215266	WITHOUT_CLASSIFICATION	6.506878473310377E-6	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999980431206165	WITHOUT_CLASSIFICATION	1.956879383518661E-6	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999965991407262	WITHOUT_CLASSIFICATION	3.4008592737863997E-6	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999985720017456	WITHOUT_CLASSIFICATION	1.4279982544419299E-6	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.999998349990608	WITHOUT_CLASSIFICATION	1.6500093920051242E-6	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999054032169828	WITHOUT_CLASSIFICATION	9.45967830171403E-5	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999725934197639	WITHOUT_CLASSIFICATION	2.7406580236236288E-5	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999981862390981	WITHOUT_CLASSIFICATION	1.8137609018790796E-6	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999976107555829	WITHOUT_CLASSIFICATION	2.3892444170985154E-6	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999979203196352	WITHOUT_CLASSIFICATION	2.0796803647581026E-6	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999992504672874	WITHOUT_CLASSIFICATION	7.495327126821969E-7	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999992504672874	WITHOUT_CLASSIFICATION	7.495327126821969E-7	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.999983609669964	WITHOUT_CLASSIFICATION	1.63903300359066E-5	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.999983609669964	WITHOUT_CLASSIFICATION	1.63903300359066E-5	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999981928992762	WITHOUT_CLASSIFICATION	1.8071007239449616E-6	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999970222979752	WITHOUT_CLASSIFICATION	2.977702024838711E-6	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999910753780175	WITHOUT_CLASSIFICATION	8.924621982490226E-6	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999950577366341	WITHOUT_CLASSIFICATION	4.942263365820777E-6	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999989921215138	WITHOUT_CLASSIFICATION	1.0078784862517594E-6	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999948404697144	WITHOUT_CLASSIFICATION	5.159530285514924E-6	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999886687498213	WITHOUT_CLASSIFICATION	1.1331250178619034E-5	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999934931215266	WITHOUT_CLASSIFICATION	6.506878473310377E-6	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999054032169828	WITHOUT_CLASSIFICATION	9.45967830171403E-5	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999725934197639	WITHOUT_CLASSIFICATION	2.7406580236236288E-5	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999939946596468	WITHOUT_CLASSIFICATION	6.005340353192583E-6	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.999998336384318	WITHOUT_CLASSIFICATION	1.6636156820018082E-6	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999701152910243	WITHOUT_CLASSIFICATION	2.988470897561997E-5	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999887354549306	WITHOUT_CLASSIFICATION	1.1264545069336825E-5	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999982091970337	WITHOUT_CLASSIFICATION	1.790802966288279E-6	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999617523301924	WITHOUT_CLASSIFICATION	3.824766980753786E-5	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.999998215019693	WITHOUT_CLASSIFICATION	1.7849803069178184E-6	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999852800799678	WITHOUT_CLASSIFICATION	1.4719920032213282E-5	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999993792835409	WITHOUT_CLASSIFICATION	6.207164591046704E-7	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999343258724436	WITHOUT_CLASSIFICATION	6.567412755644149E-5	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999834851152807	WITHOUT_CLASSIFICATION	1.6514884719327443E-5	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999017787507076	WITHOUT_CLASSIFICATION	9.822124929232855E-5	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.9999506145519238	WITHOUT_CLASSIFICATION	4.938544807613159E-5	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9998786861454236	WITHOUT_CLASSIFICATION	1.2131385457641233E-4	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999987724729408	WITHOUT_CLASSIFICATION	1.2275270591947637E-6	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9995550991844607	WITHOUT_CLASSIFICATION	4.449008155392205E-4	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999406878005916	WITHOUT_CLASSIFICATION	5.9312199408365455E-5	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999974844399171	WITHOUT_CLASSIFICATION	2.515560082843942E-6	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999989107123715	WITHOUT_CLASSIFICATION	1.089287628483546E-6	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999875718763042	WITHOUT_CLASSIFICATION	1.2428123695821207E-5	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999890814398937	WITHOUT_CLASSIFICATION	1.0918560106159293E-5	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999890814398937	WITHOUT_CLASSIFICATION	1.0918560106159293E-5	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999975574755886	WITHOUT_CLASSIFICATION	2.4425244114585773E-6	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.99998117279988	WITHOUT_CLASSIFICATION	1.8827200120120065E-5	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999999440839228	WITHOUT_CLASSIFICATION	5.5916077280218845E-8	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999954389479417	WITHOUT_CLASSIFICATION	4.561052058241215E-6	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999954389479417	WITHOUT_CLASSIFICATION	4.561052058241215E-6	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999701152910243	WITHOUT_CLASSIFICATION	2.988470897561997E-5	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999843708972881	WITHOUT_CLASSIFICATION	1.562910271181772E-5	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999932469357884	WITHOUT_CLASSIFICATION	6.7530642114928695E-6	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999980171414998	WITHOUT_CLASSIFICATION	1.982858500079644E-6	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999967576944597	WITHOUT_CLASSIFICATION	3.242305540271805E-6	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.999984053825853	WITHOUT_CLASSIFICATION	1.5946174146976366E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999357461444531	WITHOUT_CLASSIFICATION	6.425385554687268E-5	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999856580656937	WITHOUT_CLASSIFICATION	1.4341934306260699E-5	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9999949154649715	WITHOUT_CLASSIFICATION	5.0845350284457085E-6	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999921380396748	WITHOUT_CLASSIFICATION	7.861960325205595E-6	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999994011456994	WITHOUT_CLASSIFICATION	5.988543006118296E-7	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999903765405043	WITHOUT_CLASSIFICATION	9.623459495688026E-6	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999985474993393	WITHOUT_CLASSIFICATION	1.4525006607002308E-6	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999974134796668	WITHOUT_CLASSIFICATION	2.5865203332666096E-6	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.999996597548299	WITHOUT_CLASSIFICATION	3.4024517010726903E-6	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9999949600046945	WITHOUT_CLASSIFICATION	5.039995305521732E-6	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999931589338581	WITHOUT_CLASSIFICATION	6.841066141864021E-6	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9999762008795975	WITHOUT_CLASSIFICATION	2.379912040255204E-5	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.999999515708103	WITHOUT_CLASSIFICATION	4.8429189699744E-7	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.999939327125007	WITHOUT_CLASSIFICATION	6.067287499315527E-5	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999977425895855	WITHOUT_CLASSIFICATION	2.2574104144415977E-6	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999929805366811	WITHOUT_CLASSIFICATION	7.0194633189366495E-6	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999988498716688	WITHOUT_CLASSIFICATION	1.1501283313027022E-6	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999922210308168	WITHOUT_CLASSIFICATION	7.778969183295795E-6	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999981270138534	WITHOUT_CLASSIFICATION	1.8729861466331572E-6	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999981470057749	WITHOUT_CLASSIFICATION	1.8529942250716096E-6	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.999996723140496	WITHOUT_CLASSIFICATION	3.2768595040118783E-6	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999912767359147	WITHOUT_CLASSIFICATION	8.723264085286733E-6	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999974005258894	WITHOUT_CLASSIFICATION	2.599474110685305E-6	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.999977339974686	WITHOUT_CLASSIFICATION	2.26600253140197E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999996977228659	WITHOUT_CLASSIFICATION	3.022771341028995E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999996977228659	WITHOUT_CLASSIFICATION	3.022771341028995E-7	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999998842809106	WITHOUT_CLASSIFICATION	1.157190893460258E-7	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999980917216924	WITHOUT_CLASSIFICATION	1.908278307543024E-6	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999980917216924	WITHOUT_CLASSIFICATION	1.908278307543024E-6	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999996403402	WITHOUT_CLASSIFICATION	3.596598000730276E-7	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999996403402	WITHOUT_CLASSIFICATION	3.596598000730276E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.99999577644219	WITHOUT_CLASSIFICATION	4.223557810036804E-6	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999965381544487	WITHOUT_CLASSIFICATION	3.461845551281486E-6	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999996802416424	WITHOUT_CLASSIFICATION	3.1975835754795236E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999963407650901	WITHOUT_CLASSIFICATION	3.6592349099258963E-6	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.999998891037381	WITHOUT_CLASSIFICATION	1.1089626189057997E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9998990644438709	WITHOUT_CLASSIFICATION	1.0093555612908202E-4	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9998990644438709	WITHOUT_CLASSIFICATION	1.0093555612908202E-4	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999981270138534	WITHOUT_CLASSIFICATION	1.8729861466331572E-6	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999981270138534	WITHOUT_CLASSIFICATION	1.8729861466331572E-6	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999981270138534	WITHOUT_CLASSIFICATION	1.8729861466331572E-6	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999981470057749	WITHOUT_CLASSIFICATION	1.8529942250716096E-6	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999996977228659	WITHOUT_CLASSIFICATION	3.022771341028995E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999996977228659	WITHOUT_CLASSIFICATION	3.022771341028995E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999996977228659	WITHOUT_CLASSIFICATION	3.022771341028995E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.99999577644219	WITHOUT_CLASSIFICATION	4.223557810036804E-6	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.99999577644219	WITHOUT_CLASSIFICATION	4.223557810036804E-6	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.99999577644219	WITHOUT_CLASSIFICATION	4.223557810036804E-6	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999963407650901	WITHOUT_CLASSIFICATION	3.6592349099258963E-6	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999963407650901	WITHOUT_CLASSIFICATION	3.6592349099258963E-6	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999981303861523	WITHOUT_CLASSIFICATION	1.869613847706074E-6	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.999995269063138	WITHOUT_CLASSIFICATION	4.730936861991847E-6	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999986591033324	WITHOUT_CLASSIFICATION	1.3408966676321496E-6	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.940349410256973	WITHOUT_CLASSIFICATION	0.05965058974302695	IMPLEMENTATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9999960039086048	WITHOUT_CLASSIFICATION	3.996091395260607E-6	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9999824367961963	WITHOUT_CLASSIFICATION	1.7563203803795073E-5	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9999824367961963	WITHOUT_CLASSIFICATION	1.7563203803795073E-5	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999977704596352	WITHOUT_CLASSIFICATION	2.2295403648391508E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999357461444531	WITHOUT_CLASSIFICATION	6.425385554687268E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999357461444531	WITHOUT_CLASSIFICATION	6.425385554687268E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999357461444531	WITHOUT_CLASSIFICATION	6.425385554687268E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999357461444531	WITHOUT_CLASSIFICATION	6.425385554687268E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999357461444531	WITHOUT_CLASSIFICATION	6.425385554687268E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999971236702118	WITHOUT_CLASSIFICATION	2.8763297883775717E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999971236702118	WITHOUT_CLASSIFICATION	2.8763297883775717E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999971236702118	WITHOUT_CLASSIFICATION	2.8763297883775717E-6	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999956020867429	WITHOUT_CLASSIFICATION	4.397913257052444E-6	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999924441911746	WITHOUT_CLASSIFICATION	7.55580882537025E-6	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999981470057749	WITHOUT_CLASSIFICATION	1.8529942250716096E-6	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.99999577644219	WITHOUT_CLASSIFICATION	4.223557810036804E-6	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.99999577644219	WITHOUT_CLASSIFICATION	4.223557810036804E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999357461444531	WITHOUT_CLASSIFICATION	6.425385554687268E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999357461444531	WITHOUT_CLASSIFICATION	6.425385554687268E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999971236702118	WITHOUT_CLASSIFICATION	2.8763297883775717E-6	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999977704596352	WITHOUT_CLASSIFICATION	2.2295403648391508E-6	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999962816129283	WITHOUT_CLASSIFICATION	3.7183870716363975E-6	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.9999990580251015	WITHOUT_CLASSIFICATION	9.41974898539783E-7	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999998942913891	WITHOUT_CLASSIFICATION	1.0570861079130194E-7	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9998967088213824	WITHOUT_CLASSIFICATION	1.032911786176302E-4	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999963886736647	WITHOUT_CLASSIFICATION	3.611326335243257E-6	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999962666055701	WITHOUT_CLASSIFICATION	3.7333944299889352E-6	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999629482369524	WITHOUT_CLASSIFICATION	3.705176304750632E-5	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999913356458845	WITHOUT_CLASSIFICATION	8.664354115484938E-6	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999934402128613	WITHOUT_CLASSIFICATION	6.5597871387223395E-6	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999976421801771	WITHOUT_CLASSIFICATION	2.3578198229595263E-6	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.999998986544424	WITHOUT_CLASSIFICATION	1.0134555760901465E-6	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999953096179748	WITHOUT_CLASSIFICATION	4.690382025221038E-6	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999970544534	WITHOUT_CLASSIFICATION	2.945546599985528E-6	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999968572848866	WITHOUT_CLASSIFICATION	3.142715113434172E-6	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999986432229928	WITHOUT_CLASSIFICATION	1.3567770071467821E-6	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.999976752897638	WITHOUT_CLASSIFICATION	2.3247102361958512E-5	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999762622250036	WITHOUT_CLASSIFICATION	2.373777499648312E-5	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9998458491425212	WITHOUT_CLASSIFICATION	1.5415085747891682E-4	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999308021121832	WITHOUT_CLASSIFICATION	6.91978878168275E-5	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999998802855938	WITHOUT_CLASSIFICATION	1.1971440619222208E-7	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999983918192548	WITHOUT_CLASSIFICATION	1.6081807452155742E-6	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999822391790358	WITHOUT_CLASSIFICATION	1.7760820964148275E-5	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999839144352147	WITHOUT_CLASSIFICATION	1.6085564785278176E-5	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999970859712595	WITHOUT_CLASSIFICATION	2.9140287406521133E-6	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999951700180272	WITHOUT_CLASSIFICATION	4.829981972823315E-6	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.999985824688973	WITHOUT_CLASSIFICATION	1.417531102694717E-5	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9999924934518432	WITHOUT_CLASSIFICATION	7.506548156786389E-6	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999907794514432	WITHOUT_CLASSIFICATION	9.220548556840637E-6	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999720143781488	WITHOUT_CLASSIFICATION	2.798562185121228E-5	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999985531385874	WITHOUT_CLASSIFICATION	1.4468614126348563E-6	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.999998132918258	WITHOUT_CLASSIFICATION	1.8670817420558471E-6	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999990252305355	WITHOUT_CLASSIFICATION	9.747694644653059E-7	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999986446144435	WITHOUT_CLASSIFICATION	1.3553855565169147E-6	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999994472206276	WITHOUT_CLASSIFICATION	5.527793723981874E-7	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999962816129283	WITHOUT_CLASSIFICATION	3.7183870716363975E-6	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.999971219696422	WITHOUT_CLASSIFICATION	2.8780303578032787E-5	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999863568376048	WITHOUT_CLASSIFICATION	1.364316239508639E-5	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999956640820811	WITHOUT_CLASSIFICATION	4.335917918958353E-6	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999938426508603	WITHOUT_CLASSIFICATION	6.157349139686729E-6	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999938426508603	WITHOUT_CLASSIFICATION	6.157349139686729E-6	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9999833804428421	WITHOUT_CLASSIFICATION	1.661955715790082E-5	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9999833804428421	WITHOUT_CLASSIFICATION	1.661955715790082E-5	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.999999949631177	WITHOUT_CLASSIFICATION	5.036882305382255E-8	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999966193728598	WITHOUT_CLASSIFICATION	3.3806271401947096E-6	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999873730730887	WITHOUT_CLASSIFICATION	1.2626926911277004E-5	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999340794334719	WITHOUT_CLASSIFICATION	6.592056652805409E-5	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999965844922621	WITHOUT_CLASSIFICATION	3.4155077379039677E-6	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.999940145856767	WITHOUT_CLASSIFICATION	5.985414323287308E-5	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999905947331941	WITHOUT_CLASSIFICATION	9.405266805995981E-6	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999980130904931	WITHOUT_CLASSIFICATION	1.98690950690253E-6	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999990315432614	WITHOUT_CLASSIFICATION	9.684567385521493E-7	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999998788498989	WITHOUT_CLASSIFICATION	1.211501011104568E-7	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999985965949811	WITHOUT_CLASSIFICATION	1.4034050188700053E-6	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999903029926702	WITHOUT_CLASSIFICATION	9.697007329819774E-6	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999903029926702	WITHOUT_CLASSIFICATION	9.697007329819774E-6	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999994912155604	WITHOUT_CLASSIFICATION	5.087844395766458E-7	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999993618957256	WITHOUT_CLASSIFICATION	6.381042744226615E-7	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.999997525800686	WITHOUT_CLASSIFICATION	2.4741993139411293E-6	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.999997525800686	WITHOUT_CLASSIFICATION	2.4741993139411293E-6	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999987396711792	WITHOUT_CLASSIFICATION	1.2603288207216693E-6	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999991601898225	WITHOUT_CLASSIFICATION	8.398101776264997E-7	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999844046361668	WITHOUT_CLASSIFICATION	1.5595363833184035E-5	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999921708100857	WITHOUT_CLASSIFICATION	7.829189914232326E-6	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.999997630321596	WITHOUT_CLASSIFICATION	2.3696784039492246E-6	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999892545897819	WITHOUT_CLASSIFICATION	1.074541021805068E-5	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9999926507293888	WITHOUT_CLASSIFICATION	7.349270611163277E-6	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999993307336124	WITHOUT_CLASSIFICATION	6.692663877280451E-7	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999997490951388	WITHOUT_CLASSIFICATION	2.509048612046857E-7	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9999949254545684	WITHOUT_CLASSIFICATION	5.074545431574294E-6	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999728570149148	WITHOUT_CLASSIFICATION	2.714298508517627E-5	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9998552129877946	WITHOUT_CLASSIFICATION	1.4478701220541182E-4	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999864020981999	WITHOUT_CLASSIFICATION	1.359790180009666E-5	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999788859918919	WITHOUT_CLASSIFICATION	2.1114008108172877E-5	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999215305959	WITHOUT_CLASSIFICATION	7.846940403775345E-8	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999939978224361	WITHOUT_CLASSIFICATION	6.00217756384965E-6	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.99999117810191	WITHOUT_CLASSIFICATION	8.821898090089969E-6	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999117442170278	WITHOUT_CLASSIFICATION	8.825578297226327E-5	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999988100826639	WITHOUT_CLASSIFICATION	1.1899173360148868E-6	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.999999814897383	WITHOUT_CLASSIFICATION	1.851026170392563E-7	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.5743697093753465	IMPLEMENTATION	0.4256302906246536	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999988597814935	WITHOUT_CLASSIFICATION	1.1402185064836847E-6	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.999999102926471	WITHOUT_CLASSIFICATION	8.970735291146835E-7	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.999969645962716	WITHOUT_CLASSIFICATION	3.035403728405609E-5	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999982422052346	WITHOUT_CLASSIFICATION	1.7577947654510324E-6	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.999998610227593	WITHOUT_CLASSIFICATION	1.3897724070720835E-6	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.999997414271685	WITHOUT_CLASSIFICATION	2.5857283150673747E-6	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999699545935864	WITHOUT_CLASSIFICATION	3.0045406413518763E-5	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999980719423597	WITHOUT_CLASSIFICATION	1.928057640388051E-6	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999945779385527	WITHOUT_CLASSIFICATION	5.422061447345372E-6	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999869214757237	WITHOUT_CLASSIFICATION	1.3078524276314881E-5	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.999980186069114	WITHOUT_CLASSIFICATION	1.9813930886103893E-5	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999961260861051	WITHOUT_CLASSIFICATION	3.873913894808349E-6	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999952979329232	WITHOUT_CLASSIFICATION	4.702067076749844E-6	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999952979329232	WITHOUT_CLASSIFICATION	4.702067076749844E-6	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.999981622661611	WITHOUT_CLASSIFICATION	1.8377338389039446E-5	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999644335833545	WITHOUT_CLASSIFICATION	3.556641664547451E-5	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999997357998439	WITHOUT_CLASSIFICATION	2.642001561335768E-7	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9999887949239035	WITHOUT_CLASSIFICATION	1.120507609661433E-5	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.999946036061791	WITHOUT_CLASSIFICATION	5.396393820894653E-5	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999944034812083	WITHOUT_CLASSIFICATION	5.5965187917817815E-6	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999760216945651	WITHOUT_CLASSIFICATION	2.397830543483464E-5	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999901020136164	WITHOUT_CLASSIFICATION	9.897986383734864E-6	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.999957689492568	WITHOUT_CLASSIFICATION	4.231050743207861E-5	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9999672185417208	WITHOUT_CLASSIFICATION	3.2781458279190716E-5	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999999471637581	WITHOUT_CLASSIFICATION	5.2836241836546856E-8	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9998777669910208	WITHOUT_CLASSIFICATION	1.2223300897912018E-4	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999913211464816	WITHOUT_CLASSIFICATION	8.678853518281236E-6	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999568702630125	WITHOUT_CLASSIFICATION	4.312973698757806E-5	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999788943785334	WITHOUT_CLASSIFICATION	2.1105621466633704E-5	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999976723346969	WITHOUT_CLASSIFICATION	2.327665303114373E-6	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999984363071566	WITHOUT_CLASSIFICATION	1.563692843377019E-6	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999954497975961	WITHOUT_CLASSIFICATION	4.55020240378412E-6	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999533342951923	WITHOUT_CLASSIFICATION	4.666570480761418E-5	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999908761807162	WITHOUT_CLASSIFICATION	9.1238192837772E-6	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999970374186288	WITHOUT_CLASSIFICATION	2.962581371260106E-6	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999638271284914	WITHOUT_CLASSIFICATION	3.6172871508551075E-5	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999031244935385	WITHOUT_CLASSIFICATION	9.687550646154266E-5	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.999881583615999	WITHOUT_CLASSIFICATION	1.1841638400094793E-4	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999823286398691	WITHOUT_CLASSIFICATION	1.7671360130927853E-5	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999969173836392	WITHOUT_CLASSIFICATION	3.0826163609227403E-6	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999965237156807	WITHOUT_CLASSIFICATION	3.4762843191514013E-6	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999986111711224	WITHOUT_CLASSIFICATION	1.3888288774997164E-6	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9999855547328858	WITHOUT_CLASSIFICATION	1.4445267114321188E-5	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999970183391695	WITHOUT_CLASSIFICATION	2.9816608305661045E-6	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999988299354033	WITHOUT_CLASSIFICATION	1.1700645966584666E-6	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999999486788951	WITHOUT_CLASSIFICATION	5.132110498817738E-8	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999960371597064	WITHOUT_CLASSIFICATION	3.962840293633256E-6	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999960561245632	WITHOUT_CLASSIFICATION	3.943875436721403E-6	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999834670069144	WITHOUT_CLASSIFICATION	1.653299308565074E-5	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999843785550087	WITHOUT_CLASSIFICATION	1.5621444991349092E-5	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9997003088771905	WITHOUT_CLASSIFICATION	2.9969112280955987E-4	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9999941967009857	WITHOUT_CLASSIFICATION	5.803299014348073E-6	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9999837605942549	WITHOUT_CLASSIFICATION	1.6239405745097773E-5	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999921167898155	WITHOUT_CLASSIFICATION	7.883210184554081E-6	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999945302305415	WITHOUT_CLASSIFICATION	5.4697694584547505E-6	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999879499227261	WITHOUT_CLASSIFICATION	1.2050077273964176E-5	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999879499227261	WITHOUT_CLASSIFICATION	1.2050077273964176E-5	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999872829009331	WITHOUT_CLASSIFICATION	1.2717099066926167E-5	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999901472135617	WITHOUT_CLASSIFICATION	9.852786438311893E-6	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999884795136499	WITHOUT_CLASSIFICATION	1.1520486350064535E-5	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999920690716168	WITHOUT_CLASSIFICATION	7.930928383185102E-6	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.999998976949507	WITHOUT_CLASSIFICATION	1.0230504930594296E-6	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999930140560628	WITHOUT_CLASSIFICATION	6.985943937198207E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999995624840887	WITHOUT_CLASSIFICATION	4.37515911273122E-7	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9998723809667556	WITHOUT_CLASSIFICATION	1.2761903324454293E-4	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999991543675878	WITHOUT_CLASSIFICATION	8.456324121301447E-7	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999997866376169	WITHOUT_CLASSIFICATION	2.133623830718636E-7	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999948943541221	WITHOUT_CLASSIFICATION	5.1056458777774595E-6	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.99999573790542	WITHOUT_CLASSIFICATION	4.262094580066229E-6	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9993689319896122	WITHOUT_CLASSIFICATION	6.3106801038784E-4	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999572243446089	WITHOUT_CLASSIFICATION	4.277565539115639E-5	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999995424710384	WITHOUT_CLASSIFICATION	4.575289615986588E-7	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9998630868907191	WITHOUT_CLASSIFICATION	1.3691310928089996E-4	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.999414931570696	WITHOUT_CLASSIFICATION	5.850684293038233E-4	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999871069117062	WITHOUT_CLASSIFICATION	1.28930882937085E-5	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999979169591618	WITHOUT_CLASSIFICATION	2.0830408381725215E-6	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999915956290034	WITHOUT_CLASSIFICATION	8.404370996667008E-6	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999953228948376	WITHOUT_CLASSIFICATION	4.67710516242062E-6	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999138176403516	WITHOUT_CLASSIFICATION	8.618235964833762E-5	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.999999998045494	WITHOUT_CLASSIFICATION	1.954506070036147E-9	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999985674809191	WITHOUT_CLASSIFICATION	1.4325190809426895E-6	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999927626330027	WITHOUT_CLASSIFICATION	7.2373669972554075E-6	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999998362430988	WITHOUT_CLASSIFICATION	1.6375690107014308E-7	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999974288253594	WITHOUT_CLASSIFICATION	2.5711746407325903E-6	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999982674859593	WITHOUT_CLASSIFICATION	1.7325140406550273E-6	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999961045821312	WITHOUT_CLASSIFICATION	3.895417868833585E-6	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999976764556906	WITHOUT_CLASSIFICATION	2.323544309282944E-6	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999963876363237	WITHOUT_CLASSIFICATION	3.612363676441902E-6	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999891769808393	WITHOUT_CLASSIFICATION	1.0823019160690522E-5	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999976764556906	WITHOUT_CLASSIFICATION	2.323544309282944E-6	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9997217822633437	WITHOUT_CLASSIFICATION	2.7821773665620634E-4	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999999456657178	WITHOUT_CLASSIFICATION	5.4334282089789806E-8	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9966233618103504	WITHOUT_CLASSIFICATION	0.003376638189649502	IMPLEMENTATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9135022056460768	WITHOUT_CLASSIFICATION	0.08649779435392319	IMPLEMENTATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999974852861512	WITHOUT_CLASSIFICATION	2.514713848771797E-6	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999237036006852	WITHOUT_CLASSIFICATION	7.629639931490615E-5	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999981563667228	WITHOUT_CLASSIFICATION	1.8436332770667175E-6	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999992327442185	WITHOUT_CLASSIFICATION	7.6725578140917E-7	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999938086063	WITHOUT_CLASSIFICATION	6.191393723154115E-9	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.999999814897383	WITHOUT_CLASSIFICATION	1.851026170392563E-7	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999986591033324	WITHOUT_CLASSIFICATION	1.3408966676321496E-6	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999966243921395	WITHOUT_CLASSIFICATION	3.3756078604170236E-6	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999940164815266	WITHOUT_CLASSIFICATION	5.983518473363588E-6	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999998624685758	WITHOUT_CLASSIFICATION	1.3753142430503374E-7	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999640049270463	WITHOUT_CLASSIFICATION	3.599507295364007E-5	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9999994003029472	WITHOUT_CLASSIFICATION	5.996970527901954E-7	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.999809655859589	WITHOUT_CLASSIFICATION	1.9034414041103087E-4	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999535614950508	WITHOUT_CLASSIFICATION	4.643850494925865E-5	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999999493717137	WITHOUT_CLASSIFICATION	5.0628286382625905E-8	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999990712026048	WITHOUT_CLASSIFICATION	9.287973953772808E-7	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9999980562198275	WITHOUT_CLASSIFICATION	1.943780172549309E-6	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9999846597785896	WITHOUT_CLASSIFICATION	1.53402214103358E-5	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9999890108146415	WITHOUT_CLASSIFICATION	1.098918535853057E-5	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999912883535781	WITHOUT_CLASSIFICATION	8.711646421836356E-6	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.999978013023032	WITHOUT_CLASSIFICATION	2.198697696804099E-5	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.999995216933379	WITHOUT_CLASSIFICATION	4.783066621025827E-6	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999942939500209	WITHOUT_CLASSIFICATION	5.706049979160474E-6	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999992384836867	WITHOUT_CLASSIFICATION	7.615163132863623E-7	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999932511311475	WITHOUT_CLASSIFICATION	6.748868852496473E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999820254514952	WITHOUT_CLASSIFICATION	1.7974548504787293E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999820254514952	WITHOUT_CLASSIFICATION	1.7974548504787293E-5	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999990509650345	WITHOUT_CLASSIFICATION	9.490349655354609E-7	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999931106919039	WITHOUT_CLASSIFICATION	6.889308096211556E-6	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999989422208069	WITHOUT_CLASSIFICATION	1.0577791931676965E-6	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5731596299004394	IMPLEMENTATION	0.4268403700995605	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5731596299004394	IMPLEMENTATION	0.4268403700995605	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5731596299004394	IMPLEMENTATION	0.4268403700995605	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5731596299004394	IMPLEMENTATION	0.4268403700995605	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999329338867688	WITHOUT_CLASSIFICATION	6.70661132310853E-5	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999503888550255	WITHOUT_CLASSIFICATION	4.961114497441692E-5	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9999941701587719	WITHOUT_CLASSIFICATION	5.829841228061071E-6	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9999891555039099	WITHOUT_CLASSIFICATION	1.0844496090174265E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999625245961062	WITHOUT_CLASSIFICATION	3.747540389377389E-5	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999845808737996	WITHOUT_CLASSIFICATION	1.5419126200361097E-5	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998345467364261	WITHOUT_CLASSIFICATION	1.6545326357384204E-4	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998345467364261	WITHOUT_CLASSIFICATION	1.6545326357384204E-4	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999749747931389	WITHOUT_CLASSIFICATION	2.502520686108522E-5	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9999783891588735	WITHOUT_CLASSIFICATION	2.1610841126425365E-5	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999997833317092	WITHOUT_CLASSIFICATION	2.1666829075488528E-7	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999989441418341	WITHOUT_CLASSIFICATION	1.0558581659177025E-6	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999973177953899	WITHOUT_CLASSIFICATION	2.6822046100625774E-6	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.999994390952592	WITHOUT_CLASSIFICATION	5.609047408006675E-6	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999996072260565	WITHOUT_CLASSIFICATION	3.927739435288554E-7	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999866229082963	WITHOUT_CLASSIFICATION	1.337709170356462E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999568604228444	WITHOUT_CLASSIFICATION	4.3139577155659956E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999568604228444	WITHOUT_CLASSIFICATION	4.3139577155659956E-5	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999891769808393	WITHOUT_CLASSIFICATION	1.0823019160690522E-5	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9999942408679766	WITHOUT_CLASSIFICATION	5.759132023360736E-6	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9999943200495934	WITHOUT_CLASSIFICATION	5.679950406612938E-6	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999925879222546	WITHOUT_CLASSIFICATION	7.412077745243906E-6	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999041927274	WITHOUT_CLASSIFICATION	9.580727261576538E-8	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9999734287098611	WITHOUT_CLASSIFICATION	2.657129013897749E-5	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999916732707071	WITHOUT_CLASSIFICATION	8.326729292919725E-6	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999728912767644	WITHOUT_CLASSIFICATION	2.7108723235674114E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999963831559501	WITHOUT_CLASSIFICATION	3.6168440499397655E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999963831559501	WITHOUT_CLASSIFICATION	3.6168440499397655E-6	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999997254351642	WITHOUT_CLASSIFICATION	2.745648358024906E-7	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.999998481269113	WITHOUT_CLASSIFICATION	1.5187308869936617E-6	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999957764523718	WITHOUT_CLASSIFICATION	4.2235476281909465E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.999995127072294	WITHOUT_CLASSIFICATION	4.872927706041335E-6	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.999987847330851	WITHOUT_CLASSIFICATION	1.2152669149038125E-5	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9999726259210917	WITHOUT_CLASSIFICATION	2.7374078908330935E-5	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999998551844926	WITHOUT_CLASSIFICATION	1.4481550724770362E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999986170803163	WITHOUT_CLASSIFICATION	1.3829196836545401E-6	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999986170803163	WITHOUT_CLASSIFICATION	1.3829196836545401E-6	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999986170803163	WITHOUT_CLASSIFICATION	1.3829196836545401E-6	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999986170803163	WITHOUT_CLASSIFICATION	1.3829196836545401E-6	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999992345153574	WITHOUT_CLASSIFICATION	7.654846426540924E-7	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999996620659801	WITHOUT_CLASSIFICATION	3.3793401982947843E-7	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999990364369076	WITHOUT_CLASSIFICATION	9.635630924346854E-7	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999438987472641	WITHOUT_CLASSIFICATION	5.610125273604187E-5	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999885676585684	WITHOUT_CLASSIFICATION	1.1432341431686165E-5	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9999686862253759	WITHOUT_CLASSIFICATION	3.1313774624010216E-5	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999978643448331	WITHOUT_CLASSIFICATION	2.1356551669993984E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999939291765712	WITHOUT_CLASSIFICATION	6.0708234288191455E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999939291765712	WITHOUT_CLASSIFICATION	6.0708234288191455E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999939291765712	WITHOUT_CLASSIFICATION	6.0708234288191455E-6	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.999998434256797	WITHOUT_CLASSIFICATION	1.5657432030420793E-6	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999813462828342	WITHOUT_CLASSIFICATION	1.865371716588193E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999869390476204	WITHOUT_CLASSIFICATION	1.3060952379601723E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999869390476204	WITHOUT_CLASSIFICATION	1.3060952379601723E-5	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999701665418705	WITHOUT_CLASSIFICATION	2.9833458129333478E-5	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999824740975842	WITHOUT_CLASSIFICATION	1.7525902415836463E-5	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999830014896333	WITHOUT_CLASSIFICATION	1.6998510366731013E-5	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9999795823303433	WITHOUT_CLASSIFICATION	2.0417669656626352E-5	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999996128475409	WITHOUT_CLASSIFICATION	3.8715245905499493E-7	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.999965464796587	WITHOUT_CLASSIFICATION	3.453520341305311E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999881254546749	WITHOUT_CLASSIFICATION	1.1874545325073462E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999881254546749	WITHOUT_CLASSIFICATION	1.1874545325073462E-5	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999995935761875	WITHOUT_CLASSIFICATION	4.064238125133926E-6	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.999881020976299	WITHOUT_CLASSIFICATION	1.1897902370094259E-4	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999571974350754	WITHOUT_CLASSIFICATION	4.280256492460907E-5	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999939286649158	WITHOUT_CLASSIFICATION	6.071335084222798E-6	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9996672873220193	WITHOUT_CLASSIFICATION	3.32712677980829E-4	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999996375313601	WITHOUT_CLASSIFICATION	3.624686398980577E-7	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9999953131680575	WITHOUT_CLASSIFICATION	4.68683194246747E-6	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999395474297077	WITHOUT_CLASSIFICATION	6.0452570292381336E-5	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999575652547061	WITHOUT_CLASSIFICATION	4.243474529376109E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999839424139098	WITHOUT_CLASSIFICATION	1.6057586090265864E-5	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999990142608959	WITHOUT_CLASSIFICATION	9.857391041467992E-7	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999298080986118	WITHOUT_CLASSIFICATION	7.019190138828577E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999998369951391	WITHOUT_CLASSIFICATION	1.6300486087864752E-7	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9997589362571503	WITHOUT_CLASSIFICATION	2.4106374284965144E-4	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999997144568092	WITHOUT_CLASSIFICATION	2.855431908178985E-7	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999987138751253	WITHOUT_CLASSIFICATION	1.2861248748151058E-6	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999843019336756	WITHOUT_CLASSIFICATION	1.5698066324418598E-5	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.999998438742583	WITHOUT_CLASSIFICATION	1.5612574170316684E-6	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999769657586451	WITHOUT_CLASSIFICATION	2.3034241354815667E-5	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999854762617383	WITHOUT_CLASSIFICATION	1.452373826162681E-5	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.99999857847504	WITHOUT_CLASSIFICATION	1.421524959950152E-6	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999354889106187	WITHOUT_CLASSIFICATION	6.45110893813793E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9992282370271109	WITHOUT_CLASSIFICATION	7.717629728890797E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9992282370271109	WITHOUT_CLASSIFICATION	7.717629728890797E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9992282370271109	WITHOUT_CLASSIFICATION	7.717629728890797E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9992282370271109	WITHOUT_CLASSIFICATION	7.717629728890797E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9992282370271109	WITHOUT_CLASSIFICATION	7.717629728890797E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9992282370271109	WITHOUT_CLASSIFICATION	7.717629728890797E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9992282370271109	WITHOUT_CLASSIFICATION	7.717629728890797E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9992282370271109	WITHOUT_CLASSIFICATION	7.717629728890797E-4	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999999701811949	WITHOUT_CLASSIFICATION	2.981880508295549E-8	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9999968306585231	WITHOUT_CLASSIFICATION	3.169341477008462E-6	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999995973319876	WITHOUT_CLASSIFICATION	4.0266801232028204E-7	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9953298967627509	WITHOUT_CLASSIFICATION	0.00467010323724912	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999995624840887	WITHOUT_CLASSIFICATION	4.37515911273122E-7	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999995624840887	WITHOUT_CLASSIFICATION	4.37515911273122E-7	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9998915812136407	WITHOUT_CLASSIFICATION	1.084187863592453E-4	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999983800887032	WITHOUT_CLASSIFICATION	1.6199112968079344E-6	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999992254888809	WITHOUT_CLASSIFICATION	7.745111190876049E-7	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999996272781836	WITHOUT_CLASSIFICATION	3.7272181642470157E-7	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999622590040432	WITHOUT_CLASSIFICATION	3.774099595676701E-5	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9999875963633319	WITHOUT_CLASSIFICATION	1.2403636668172534E-5	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9999896996736591	WITHOUT_CLASSIFICATION	1.0300326340866166E-5	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9991584257735863	WITHOUT_CLASSIFICATION	8.415742264138164E-4	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999966103793153	WITHOUT_CLASSIFICATION	3.3896206845758263E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999998561635854	WITHOUT_CLASSIFICATION	1.438364144658991E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999998561635854	WITHOUT_CLASSIFICATION	1.438364144658991E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999998561635854	WITHOUT_CLASSIFICATION	1.438364144658991E-7	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998547089796855	WITHOUT_CLASSIFICATION	1.4529102031439294E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998547089796855	WITHOUT_CLASSIFICATION	1.4529102031439294E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998547089796855	WITHOUT_CLASSIFICATION	1.4529102031439294E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998547089796855	WITHOUT_CLASSIFICATION	1.4529102031439294E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998547089796855	WITHOUT_CLASSIFICATION	1.4529102031439294E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998547089796855	WITHOUT_CLASSIFICATION	1.4529102031439294E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998547089796855	WITHOUT_CLASSIFICATION	1.4529102031439294E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998547089796855	WITHOUT_CLASSIFICATION	1.4529102031439294E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998547089796855	WITHOUT_CLASSIFICATION	1.4529102031439294E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999983861770482	WITHOUT_CLASSIFICATION	1.61382295174719E-6	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.999992197625739	WITHOUT_CLASSIFICATION	7.802374260978934E-6	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999209047545546	WITHOUT_CLASSIFICATION	7.909524544533544E-5	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.999817451918083	WITHOUT_CLASSIFICATION	1.8254808191700322E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998547089796855	WITHOUT_CLASSIFICATION	1.4529102031439294E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998547089796855	WITHOUT_CLASSIFICATION	1.4529102031439294E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998547089796855	WITHOUT_CLASSIFICATION	1.4529102031439294E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999309585804813	WITHOUT_CLASSIFICATION	6.9041419518604E-5	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.999992120736302	WITHOUT_CLASSIFICATION	7.879263698070509E-6	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999994749188437	WITHOUT_CLASSIFICATION	5.250811563777953E-7	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999835941447077	WITHOUT_CLASSIFICATION	1.640585529233305E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999835941447077	WITHOUT_CLASSIFICATION	1.640585529233305E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999392879686717	WITHOUT_CLASSIFICATION	6.071203132815087E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9998037131888566	WITHOUT_CLASSIFICATION	1.962868111433036E-4	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999861346633541	WITHOUT_CLASSIFICATION	1.3865336645989627E-5	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999958785537577	WITHOUT_CLASSIFICATION	4.121446242231573E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9998494951685863	WITHOUT_CLASSIFICATION	1.5050483141361467E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9998494951685863	WITHOUT_CLASSIFICATION	1.5050483141361467E-4	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999958101485251	WITHOUT_CLASSIFICATION	4.18985147485702E-6	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999998212443474	WITHOUT_CLASSIFICATION	1.7875565264410836E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999993650401812	WITHOUT_CLASSIFICATION	6.349598188595443E-7	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998647659435753	WITHOUT_CLASSIFICATION	1.3523405642463978E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998647659435753	WITHOUT_CLASSIFICATION	1.3523405642463978E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998647659435753	WITHOUT_CLASSIFICATION	1.3523405642463978E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999954754104713	WITHOUT_CLASSIFICATION	4.52458952864717E-6	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999846955122674	WITHOUT_CLASSIFICATION	1.5304487732640223E-5	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999846955122674	WITHOUT_CLASSIFICATION	1.5304487732640223E-5	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999846292544005	WITHOUT_CLASSIFICATION	1.537074559959505E-5	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999846292544005	WITHOUT_CLASSIFICATION	1.537074559959505E-5	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999974053650205	WITHOUT_CLASSIFICATION	2.5946349794440893E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999759208938922	WITHOUT_CLASSIFICATION	2.4079106107801593E-5	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999775459645283	WITHOUT_CLASSIFICATION	2.2454035471691254E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999786367850593	WITHOUT_CLASSIFICATION	2.136321494077908E-5	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999902038497153	WITHOUT_CLASSIFICATION	9.796150284820127E-6	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999995297531289	WITHOUT_CLASSIFICATION	4.702468709959281E-7	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999970245091498	WITHOUT_CLASSIFICATION	2.975490850174441E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9998990644438709	WITHOUT_CLASSIFICATION	1.0093555612908202E-4	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999995008865875	WITHOUT_CLASSIFICATION	4.991134125030321E-7	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999992432226332	WITHOUT_CLASSIFICATION	7.567773667587246E-7	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999795791424922	WITHOUT_CLASSIFICATION	2.042085750777926E-5	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999855982366481	WITHOUT_CLASSIFICATION	1.4401763351767325E-5	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.999999815843622	WITHOUT_CLASSIFICATION	1.8415637813867416E-7	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999994060524481	WITHOUT_CLASSIFICATION	5.939475519928823E-7	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999989394659435	WITHOUT_CLASSIFICATION	1.060534056362912E-6	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999991590394381	WITHOUT_CLASSIFICATION	8.409605617664566E-7	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999907356320576	WITHOUT_CLASSIFICATION	9.264367942378444E-6	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999955962811857	WITHOUT_CLASSIFICATION	4.4037188142704506E-6	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999998403008009	WITHOUT_CLASSIFICATION	1.5969919908545187E-7	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999985115085864	WITHOUT_CLASSIFICATION	1.4884914134814543E-6	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999966243921395	WITHOUT_CLASSIFICATION	3.3756078604170236E-6	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9997436650527317	WITHOUT_CLASSIFICATION	2.5633494726827786E-4	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999985555169052	WITHOUT_CLASSIFICATION	1.4444830948545211E-6	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999967031704943	WITHOUT_CLASSIFICATION	3.2968295056962485E-6	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999896949655481	WITHOUT_CLASSIFICATION	1.0305034451846898E-5	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999927978488686	WITHOUT_CLASSIFICATION	7.202151131437E-6	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999947335231356	WITHOUT_CLASSIFICATION	5.266476864382567E-6	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999990711697923	WITHOUT_CLASSIFICATION	9.288302077177643E-7	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999880415905685	WITHOUT_CLASSIFICATION	1.1958409431531992E-5	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999917073272089	WITHOUT_CLASSIFICATION	8.292672791191981E-6	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999929231503735	WITHOUT_CLASSIFICATION	7.076849626523399E-6	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999873875309009	WITHOUT_CLASSIFICATION	1.2612469099070896E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999993889594101	WITHOUT_CLASSIFICATION	6.110405898155349E-7	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999984725505215	WITHOUT_CLASSIFICATION	1.5274494783878065E-6	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999889267934109	WITHOUT_CLASSIFICATION	1.1073206589200982E-5	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999881663377856	WITHOUT_CLASSIFICATION	1.1833662214280624E-5	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999860793953589	WITHOUT_CLASSIFICATION	1.3920604641046753E-5	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999926079222109	WITHOUT_CLASSIFICATION	7.392077789109339E-6	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999990095056553	WITHOUT_CLASSIFICATION	9.90494344719165E-7	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999188714763879	WITHOUT_CLASSIFICATION	8.112852361211455E-5	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999963210257048	WITHOUT_CLASSIFICATION	3.6789742953174682E-6	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999912060096567	WITHOUT_CLASSIFICATION	8.793990343227381E-6	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999823026040199	WITHOUT_CLASSIFICATION	1.7697395980121394E-5	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999963498078368	WITHOUT_CLASSIFICATION	3.6501921631319235E-6	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999998611140273	WITHOUT_CLASSIFICATION	1.388859726638379E-7	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999953665086886	WITHOUT_CLASSIFICATION	4.6334913113991475E-6	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9999989867279466	WITHOUT_CLASSIFICATION	1.013272053450435E-6	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999564955134	WITHOUT_CLASSIFICATION	4.350448665598468E-8	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999998656851489	WITHOUT_CLASSIFICATION	1.3431485124489156E-7	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999736511506541	WITHOUT_CLASSIFICATION	2.6348849345994854E-5	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999936189802586	WITHOUT_CLASSIFICATION	6.381019741315956E-6	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999755091679012	WITHOUT_CLASSIFICATION	2.449083209884879E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999755091679012	WITHOUT_CLASSIFICATION	2.449083209884879E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999990121516049	WITHOUT_CLASSIFICATION	9.878483951524712E-7	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999990121516049	WITHOUT_CLASSIFICATION	9.878483951524712E-7	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999460209351165	WITHOUT_CLASSIFICATION	5.397906488358732E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999460209351165	WITHOUT_CLASSIFICATION	5.397906488358732E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999971821338449	WITHOUT_CLASSIFICATION	2.8178661550468866E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999971821338449	WITHOUT_CLASSIFICATION	2.8178661550468866E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999888959125108	WITHOUT_CLASSIFICATION	1.1104087489158808E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999888959125108	WITHOUT_CLASSIFICATION	1.1104087489158808E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999888959125108	WITHOUT_CLASSIFICATION	1.1104087489158808E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999888959125108	WITHOUT_CLASSIFICATION	1.1104087489158808E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999888959125108	WITHOUT_CLASSIFICATION	1.1104087489158808E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999888959125108	WITHOUT_CLASSIFICATION	1.1104087489158808E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999888959125108	WITHOUT_CLASSIFICATION	1.1104087489158808E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999888959125108	WITHOUT_CLASSIFICATION	1.1104087489158808E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999888959125108	WITHOUT_CLASSIFICATION	1.1104087489158808E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999954276114457	WITHOUT_CLASSIFICATION	4.5723885543609184E-6	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999954276114457	WITHOUT_CLASSIFICATION	4.5723885543609184E-6	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999954276114457	WITHOUT_CLASSIFICATION	4.5723885543609184E-6	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999936150802998	WITHOUT_CLASSIFICATION	6.384919700188129E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999939907443013	WITHOUT_CLASSIFICATION	6.009255698758919E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999939907443013	WITHOUT_CLASSIFICATION	6.009255698758919E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999939907443013	WITHOUT_CLASSIFICATION	6.009255698758919E-6	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999991817817424	WITHOUT_CLASSIFICATION	8.182182576763332E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999991817817424	WITHOUT_CLASSIFICATION	8.182182576763332E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999991817817424	WITHOUT_CLASSIFICATION	8.182182576763332E-7	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999658475707031	WITHOUT_CLASSIFICATION	3.415242929699544E-5	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9999869105599726	WITHOUT_CLASSIFICATION	1.3089440027475194E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999872575864216	WITHOUT_CLASSIFICATION	1.2742413578328805E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999880778684858	WITHOUT_CLASSIFICATION	1.1922131514275795E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999880778684858	WITHOUT_CLASSIFICATION	1.1922131514275795E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999880778684858	WITHOUT_CLASSIFICATION	1.1922131514275795E-5	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999896055787433	WITHOUT_CLASSIFICATION	1.039442125667483E-5	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999970740368028	WITHOUT_CLASSIFICATION	2.9259631971412582E-6	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999970740368028	WITHOUT_CLASSIFICATION	2.9259631971412582E-6	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999933174247654	WITHOUT_CLASSIFICATION	6.68257523466781E-6	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9996412027427224	WITHOUT_CLASSIFICATION	3.5879725727758764E-4	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9996412027427224	WITHOUT_CLASSIFICATION	3.5879725727758764E-4	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9524454778644877	IMPLEMENTATION	0.04755452213551233	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999994275282051	WITHOUT_CLASSIFICATION	5.724717948933822E-7	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999050386720348	WITHOUT_CLASSIFICATION	9.496132796515277E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999911310930757	WITHOUT_CLASSIFICATION	8.868906924266732E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999911310930757	WITHOUT_CLASSIFICATION	8.868906924266732E-6	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999919619403858	WITHOUT_CLASSIFICATION	8.038059614241613E-6	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.999999041929854	WITHOUT_CLASSIFICATION	9.580701459884248E-7	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9971923998635621	WITHOUT_CLASSIFICATION	0.0028076001364379373	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999511407950277	WITHOUT_CLASSIFICATION	4.885920497230852E-5	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9991846938884832	WITHOUT_CLASSIFICATION	8.153061115167309E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999911310930757	WITHOUT_CLASSIFICATION	8.868906924266732E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999911310930757	WITHOUT_CLASSIFICATION	8.868906924266732E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999911310930757	WITHOUT_CLASSIFICATION	8.868906924266732E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999911310930757	WITHOUT_CLASSIFICATION	8.868906924266732E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999911310930757	WITHOUT_CLASSIFICATION	8.868906924266732E-6	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999967793366547	WITHOUT_CLASSIFICATION	3.2206633453834373E-6	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999914053043566	WITHOUT_CLASSIFICATION	8.594695643405146E-6	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999946506419913	WITHOUT_CLASSIFICATION	5.3493580086622825E-6	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999912514523557	WITHOUT_CLASSIFICATION	8.748547644364551E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999999923938949	WITHOUT_CLASSIFICATION	7.606105063821647E-9	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999929729150235	WITHOUT_CLASSIFICATION	7.0270849765082085E-6	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999914672555753	WITHOUT_CLASSIFICATION	8.532744424704443E-6	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999498616252834	WITHOUT_CLASSIFICATION	5.013837471669038E-5	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999517326102	WITHOUT_CLASSIFICATION	4.8267389814744574E-8	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.999993730598809	WITHOUT_CLASSIFICATION	6.269401190962103E-6	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999979159498384	WITHOUT_CLASSIFICATION	2.0840501615667735E-6	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999138176403516	WITHOUT_CLASSIFICATION	8.618235964833762E-5	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999990924689709	WITHOUT_CLASSIFICATION	9.07531029107765E-7	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.999997670381104	WITHOUT_CLASSIFICATION	2.3296188960177433E-6	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999993842115891	WITHOUT_CLASSIFICATION	6.157884109229792E-7	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999712613882068	WITHOUT_CLASSIFICATION	2.8738611793141804E-5	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999347399280635	WITHOUT_CLASSIFICATION	6.52600719364885E-5	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999784147686415	WITHOUT_CLASSIFICATION	2.1585231358460277E-5	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999983280570625	WITHOUT_CLASSIFICATION	1.6719429376616954E-6	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999746578515746	WITHOUT_CLASSIFICATION	2.5342148425426855E-5	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999995235955459	WITHOUT_CLASSIFICATION	4.7640445411419737E-7	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999879461392932	WITHOUT_CLASSIFICATION	1.2053860706803836E-5	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999997866376169	WITHOUT_CLASSIFICATION	2.133623830718636E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999924991238482	WITHOUT_CLASSIFICATION	7.5008761517406516E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999924991238482	WITHOUT_CLASSIFICATION	7.5008761517406516E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999924991238482	WITHOUT_CLASSIFICATION	7.5008761517406516E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999924991238482	WITHOUT_CLASSIFICATION	7.5008761517406516E-6	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999991720773768	WITHOUT_CLASSIFICATION	8.279226232034195E-7	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999662848680682	WITHOUT_CLASSIFICATION	3.3715131931856036E-5	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999997081446116	WITHOUT_CLASSIFICATION	2.918553884986141E-7	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999997081446116	WITHOUT_CLASSIFICATION	2.918553884986141E-7	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999983853925356	WITHOUT_CLASSIFICATION	1.6146074644167556E-6	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999982300365313	WITHOUT_CLASSIFICATION	1.7699634687470956E-6	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999985035173483	WITHOUT_CLASSIFICATION	1.4964826516385712E-6	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999985824660374	WITHOUT_CLASSIFICATION	1.41753396261281E-5	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999998046315154	WITHOUT_CLASSIFICATION	1.953684845213269E-7	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999978951641346	WITHOUT_CLASSIFICATION	2.104835865322337E-6	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999877375821681	WITHOUT_CLASSIFICATION	1.2262417831883903E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.999994614142543	WITHOUT_CLASSIFICATION	5.385857456985034E-6	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.999994614142543	WITHOUT_CLASSIFICATION	5.385857456985034E-6	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.999994614142543	WITHOUT_CLASSIFICATION	5.385857456985034E-6	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.999994614142543	WITHOUT_CLASSIFICATION	5.385857456985034E-6	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9997787394213231	WITHOUT_CLASSIFICATION	2.2126057867696586E-4	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999686359596	WITHOUT_CLASSIFICATION	3.13640404014599E-8	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999686359596	WITHOUT_CLASSIFICATION	3.13640404014599E-8	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999686359596	WITHOUT_CLASSIFICATION	3.13640404014599E-8	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999994497741154	WITHOUT_CLASSIFICATION	5.502258847396236E-7	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999822541995118	WITHOUT_CLASSIFICATION	1.7745800488210586E-5	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999958819193882	WITHOUT_CLASSIFICATION	4.118080611847044E-6	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5731596299004394	IMPLEMENTATION	0.4268403700995605	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5731596299004394	IMPLEMENTATION	0.4268403700995605	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999994711732106	WITHOUT_CLASSIFICATION	5.288267894196096E-7	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.999999899632613	WITHOUT_CLASSIFICATION	1.003673869709954E-7	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999656792012898	WITHOUT_CLASSIFICATION	3.4320798710333166E-5	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999656792012898	WITHOUT_CLASSIFICATION	3.4320798710333166E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999766918758837	WITHOUT_CLASSIFICATION	2.3308124116275008E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999766918758837	WITHOUT_CLASSIFICATION	2.3308124116275008E-5	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999992906776699	WITHOUT_CLASSIFICATION	7.093223301401587E-7	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9916363566525161	WITHOUT_CLASSIFICATION	0.008363643347483815	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999970665285921	WITHOUT_CLASSIFICATION	2.9334714079839716E-6	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999794003352628	WITHOUT_CLASSIFICATION	2.059966473723543E-5	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999625276479129	WITHOUT_CLASSIFICATION	3.747235208699014E-5	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999933643812876	WITHOUT_CLASSIFICATION	6.635618712354044E-6	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999968039924325	WITHOUT_CLASSIFICATION	3.196007567439112E-6	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999816936206753	WITHOUT_CLASSIFICATION	1.830637932455871E-5	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999995400686202	WITHOUT_CLASSIFICATION	4.5993137969518296E-7	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999997931485725	WITHOUT_CLASSIFICATION	2.0685142758618755E-7	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999997931485725	WITHOUT_CLASSIFICATION	2.0685142758618755E-7	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999888644578021	WITHOUT_CLASSIFICATION	1.1135542197881896E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999888644578021	WITHOUT_CLASSIFICATION	1.1135542197881896E-5	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999982669794261	WITHOUT_CLASSIFICATION	1.73302057388374E-6	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999879626392851	WITHOUT_CLASSIFICATION	1.203736071488802E-5	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999722570281433	WITHOUT_CLASSIFICATION	2.7742971856699652E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.999977892682954	WITHOUT_CLASSIFICATION	2.2107317045988635E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.999977892682954	WITHOUT_CLASSIFICATION	2.2107317045988635E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.999977892682954	WITHOUT_CLASSIFICATION	2.2107317045988635E-5	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9999947016973116	WITHOUT_CLASSIFICATION	5.298302688356457E-6	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9999940318190643	WITHOUT_CLASSIFICATION	5.968180935773562E-6	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9999953825199692	WITHOUT_CLASSIFICATION	4.617480030838081E-6	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9999956020917569	WITHOUT_CLASSIFICATION	4.3979082431146715E-6	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9999944523590211	WITHOUT_CLASSIFICATION	5.54764097894476E-6	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999944389999363	WITHOUT_CLASSIFICATION	5.561000063755456E-6	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9999948190221438	WITHOUT_CLASSIFICATION	5.180977856182382E-6	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9999961121613771	WITHOUT_CLASSIFICATION	3.887838622895347E-6	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999984582166354	WITHOUT_CLASSIFICATION	1.5417833646840558E-6	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999986083935457	WITHOUT_CLASSIFICATION	1.3916064543501366E-6	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9995670190018512	WITHOUT_CLASSIFICATION	4.329809981487519E-4	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999956438370198	WITHOUT_CLASSIFICATION	4.356162980248177E-6	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999969022298631	WITHOUT_CLASSIFICATION	3.0977701367628E-6	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5731596299004394	IMPLEMENTATION	0.4268403700995605	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999932679107986	WITHOUT_CLASSIFICATION	6.732089201388741E-6	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999885496482741	WITHOUT_CLASSIFICATION	1.1450351725892629E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999820254514952	WITHOUT_CLASSIFICATION	1.7974548504787293E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9998555201248335	WITHOUT_CLASSIFICATION	1.444798751664761E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9998555201248335	WITHOUT_CLASSIFICATION	1.444798751664761E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9998555201248335	WITHOUT_CLASSIFICATION	1.444798751664761E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9998555201248335	WITHOUT_CLASSIFICATION	1.444798751664761E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9998555201248335	WITHOUT_CLASSIFICATION	1.444798751664761E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999582779354284	WITHOUT_CLASSIFICATION	4.172206457177598E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9998555201248335	WITHOUT_CLASSIFICATION	1.444798751664761E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9998555201248335	WITHOUT_CLASSIFICATION	1.444798751664761E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9998555201248335	WITHOUT_CLASSIFICATION	1.444798751664761E-4	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.999999713355683	WITHOUT_CLASSIFICATION	2.86644316929987E-7	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999832931419034	WITHOUT_CLASSIFICATION	1.6706858096632547E-5	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999997670060787	WITHOUT_CLASSIFICATION	2.3299392141180148E-7	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999960610598644	WITHOUT_CLASSIFICATION	3.9389401356346506E-6	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999776112693859	WITHOUT_CLASSIFICATION	2.2388730614078514E-5	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999981309775846	WITHOUT_CLASSIFICATION	1.8690224154116276E-6	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999963324584132	WITHOUT_CLASSIFICATION	3.667541586837049E-6	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9999942326075636	WITHOUT_CLASSIFICATION	5.76739243646542E-6	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999959147016764	WITHOUT_CLASSIFICATION	4.085298323624293E-6	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999959147016764	WITHOUT_CLASSIFICATION	4.085298323624293E-6	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9999944043555807	WITHOUT_CLASSIFICATION	5.595644419275749E-6	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9999942888636176	WITHOUT_CLASSIFICATION	5.711136382360378E-6	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999950334597945	WITHOUT_CLASSIFICATION	4.966540205550798E-6	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9999948903789049	WITHOUT_CLASSIFICATION	5.109621095123982E-6	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999949217854572	WITHOUT_CLASSIFICATION	5.07821454283508E-6	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.999993971828646	WITHOUT_CLASSIFICATION	6.028171353984262E-6	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9999938221436112	WITHOUT_CLASSIFICATION	6.177856388756029E-6	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.999993805320624	WITHOUT_CLASSIFICATION	6.194679376022232E-6	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.999994236730884	WITHOUT_CLASSIFICATION	5.7632691160290834E-6	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9999956671765043	WITHOUT_CLASSIFICATION	4.332823495743563E-6	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9999954970037094	WITHOUT_CLASSIFICATION	4.502996290672716E-6	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9999944519073731	WITHOUT_CLASSIFICATION	5.548092626889676E-6	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999947257283642	WITHOUT_CLASSIFICATION	5.274271635779705E-6	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.99999420987781	WITHOUT_CLASSIFICATION	5.790122189962116E-6	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9999943661598489	WITHOUT_CLASSIFICATION	5.633840151029177E-6	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9999939993649021	WITHOUT_CLASSIFICATION	6.000635098029131E-6	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999941375282776	WITHOUT_CLASSIFICATION	5.862471722376675E-6	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9999951128705752	WITHOUT_CLASSIFICATION	4.8871294248559626E-6	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9999946652117387	WITHOUT_CLASSIFICATION	5.334788261251351E-6	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.9999946275544217	WITHOUT_CLASSIFICATION	5.372445578294502E-6	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9999951832003391	WITHOUT_CLASSIFICATION	4.816799660867635E-6	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.999994555616379	WITHOUT_CLASSIFICATION	5.444383621126037E-6	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9999950865802877	WITHOUT_CLASSIFICATION	4.913419712265927E-6	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9999964444816802	WITHOUT_CLASSIFICATION	3.555518319790149E-6	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9999966374861072	WITHOUT_CLASSIFICATION	3.3625138927400057E-6	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999967831520521	WITHOUT_CLASSIFICATION	3.2168479479799187E-6	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9999962555918617	WITHOUT_CLASSIFICATION	3.744408138361542E-6	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9999964115867189	WITHOUT_CLASSIFICATION	3.5884132809834905E-6	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999964242517728	WITHOUT_CLASSIFICATION	3.575748227164519E-6	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999963273212061	WITHOUT_CLASSIFICATION	3.6726787938087577E-6	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999958060381677	WITHOUT_CLASSIFICATION	4.193961832213005E-6	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999957080088264	WITHOUT_CLASSIFICATION	4.291991173661818E-6	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9999954720242955	WITHOUT_CLASSIFICATION	4.527975704517968E-6	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9999954487467869	WITHOUT_CLASSIFICATION	4.551253213067164E-6	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9999966378814359	WITHOUT_CLASSIFICATION	3.3621185640647713E-6	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999966574969367	WITHOUT_CLASSIFICATION	3.3425030633045824E-6	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9999958491780937	WITHOUT_CLASSIFICATION	4.150821906250794E-6	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.999995644337577	WITHOUT_CLASSIFICATION	4.355662422946909E-6	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.999995716451689	WITHOUT_CLASSIFICATION	4.283548310981005E-6	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9999961886049119	WITHOUT_CLASSIFICATION	3.811395088158162E-6	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9999964930306556	WITHOUT_CLASSIFICATION	3.506969344293288E-6	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999969101176722	WITHOUT_CLASSIFICATION	3.08988232766397E-6	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9999960696258482	WITHOUT_CLASSIFICATION	3.930374151796919E-6	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9999957218799792	WITHOUT_CLASSIFICATION	4.2781200208035056E-6	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.99999584922894	WITHOUT_CLASSIFICATION	4.150771059934275E-6	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999954181894579	WITHOUT_CLASSIFICATION	4.5818105421473E-6	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999952399920865	WITHOUT_CLASSIFICATION	4.760007913532079E-6	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9999957609800766	WITHOUT_CLASSIFICATION	4.2390199235022075E-6	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9999959351524653	WITHOUT_CLASSIFICATION	4.0648475346964986E-6	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999957114203529	WITHOUT_CLASSIFICATION	4.2885796471290475E-6	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.999996093587895	WITHOUT_CLASSIFICATION	3.906412105075509E-6	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9999955370484592	WITHOUT_CLASSIFICATION	4.46295154081754E-6	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.9999957132070381	WITHOUT_CLASSIFICATION	4.286792961962509E-6	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999965369741725	WITHOUT_CLASSIFICATION	3.4630258275035097E-6	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999965369741725	WITHOUT_CLASSIFICATION	3.4630258275035097E-6	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999952807930936	WITHOUT_CLASSIFICATION	4.719206906352751E-6	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9999965808629264	WITHOUT_CLASSIFICATION	3.419137073537824E-6	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9999957318655385	WITHOUT_CLASSIFICATION	4.268134461498984E-6	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9999957440019109	WITHOUT_CLASSIFICATION	4.2559980890892575E-6	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9999953598912465	WITHOUT_CLASSIFICATION	4.640108753470802E-6	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999961634633795	WITHOUT_CLASSIFICATION	3.836536620538101E-6	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999951949260807	WITHOUT_CLASSIFICATION	4.805073919298339E-6	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9999950916714473	WITHOUT_CLASSIFICATION	4.908328552764951E-6	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.999995671382104	WITHOUT_CLASSIFICATION	4.328617895912919E-6	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9999953250995479	WITHOUT_CLASSIFICATION	4.674900452021547E-6	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999416617005557	WITHOUT_CLASSIFICATION	5.833829944423592E-5	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999416617005557	WITHOUT_CLASSIFICATION	5.833829944423592E-5	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999723249397037	WITHOUT_CLASSIFICATION	2.7675060296341266E-5	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999100411360319	WITHOUT_CLASSIFICATION	8.995886396812012E-5	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999878559915368	WITHOUT_CLASSIFICATION	1.2144008463163187E-5	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999702683305	WITHOUT_CLASSIFICATION	2.973166943071841E-8	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999967220407272	WITHOUT_CLASSIFICATION	3.2779592728784683E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999967220407272	WITHOUT_CLASSIFICATION	3.2779592728784683E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999967220407272	WITHOUT_CLASSIFICATION	3.2779592728784683E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999967220407272	WITHOUT_CLASSIFICATION	3.2779592728784683E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999991469027742	WITHOUT_CLASSIFICATION	8.530972258690603E-7	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999756339805413	WITHOUT_CLASSIFICATION	2.4366019458596837E-5	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9999956047826181	WITHOUT_CLASSIFICATION	4.395217381955909E-6	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9999947568560865	WITHOUT_CLASSIFICATION	5.243143913395914E-6	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.9999955140382119	WITHOUT_CLASSIFICATION	4.485961788148777E-6	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.999995710513112	WITHOUT_CLASSIFICATION	4.289486887952029E-6	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9999951595310458	WITHOUT_CLASSIFICATION	4.840468954215103E-6	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9999946441755556	WITHOUT_CLASSIFICATION	5.355824444378503E-6	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9999955978337358	WITHOUT_CLASSIFICATION	4.402166264183353E-6	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9999949365560556	WITHOUT_CLASSIFICATION	5.063443944430552E-6	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9999938070722144	WITHOUT_CLASSIFICATION	6.192927785560666E-6	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9999944947054908	WITHOUT_CLASSIFICATION	5.505294509105921E-6	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.999995070668875	WITHOUT_CLASSIFICATION	4.929331124953172E-6	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.999994522464134	WITHOUT_CLASSIFICATION	5.477535865892248E-6	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9999941502626029	WITHOUT_CLASSIFICATION	5.849737397117197E-6	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9999954895938437	WITHOUT_CLASSIFICATION	4.510406156330208E-6	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9999937528340929	WITHOUT_CLASSIFICATION	6.2471659070901304E-6	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9999952902024234	WITHOUT_CLASSIFICATION	4.7097975766402086E-6	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9999950484752193	WITHOUT_CLASSIFICATION	4.951524780714224E-6	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9999941780657104	WITHOUT_CLASSIFICATION	5.821934289663073E-6	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.999994496071675	WITHOUT_CLASSIFICATION	5.50392832493402E-6	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9999952622355062	WITHOUT_CLASSIFICATION	4.737764493802331E-6	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9999945946615322	WITHOUT_CLASSIFICATION	5.4053384677519624E-6	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9999941663860976	WITHOUT_CLASSIFICATION	5.833613902466321E-6	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9999946678246506	WITHOUT_CLASSIFICATION	5.332175349425555E-6	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9999964359838097	WITHOUT_CLASSIFICATION	3.5640161903093353E-6	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9999966597177624	WITHOUT_CLASSIFICATION	3.340282237667098E-6	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9999964273846718	WITHOUT_CLASSIFICATION	3.572615328251263E-6	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9999963719828167	WITHOUT_CLASSIFICATION	3.62801718337753E-6	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9999957089750583	WITHOUT_CLASSIFICATION	4.291024941672057E-6	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9999953929672752	WITHOUT_CLASSIFICATION	4.60703272475286E-6	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9999958792369283	WITHOUT_CLASSIFICATION	4.120763071640437E-6	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9999959808556492	WITHOUT_CLASSIFICATION	4.019144350772624E-6	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9999955394688422	WITHOUT_CLASSIFICATION	4.460531157807542E-6	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9999957509203862	WITHOUT_CLASSIFICATION	4.249079613815004E-6	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9999965850379624	WITHOUT_CLASSIFICATION	3.41496203754101E-6	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.999995985630026	WITHOUT_CLASSIFICATION	4.0143699739483655E-6	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9999956606107145	WITHOUT_CLASSIFICATION	4.339389285464771E-6	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9999960559723818	WITHOUT_CLASSIFICATION	3.944027618160622E-6	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9999957848840199	WITHOUT_CLASSIFICATION	4.215115980136527E-6	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.9999966854720306	WITHOUT_CLASSIFICATION	3.314527969475235E-6	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9999960295808002	WITHOUT_CLASSIFICATION	3.970419199761921E-6	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9999952767279089	WITHOUT_CLASSIFICATION	4.72327209114444E-6	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9999957428556251	WITHOUT_CLASSIFICATION	4.257144374853146E-6	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9999953415249376	WITHOUT_CLASSIFICATION	4.658475062328681E-6	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9999953793832188	WITHOUT_CLASSIFICATION	4.620616781161155E-6	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9999959777794616	WITHOUT_CLASSIFICATION	4.022220538415059E-6	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9999954646694534	WITHOUT_CLASSIFICATION	4.535330546585846E-6	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9999956914307916	WITHOUT_CLASSIFICATION	4.30856920837527E-6	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9999956545019961	WITHOUT_CLASSIFICATION	4.3454980039595196E-6	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9999953269713565	WITHOUT_CLASSIFICATION	4.6730286434341465E-6	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9999955272343937	WITHOUT_CLASSIFICATION	4.472765606361914E-6	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9999958411254745	WITHOUT_CLASSIFICATION	4.158874525601639E-6	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.999995774803868	WITHOUT_CLASSIFICATION	4.22519613190243E-6	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9999954842927412	WITHOUT_CLASSIFICATION	4.515707258763397E-6	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9999957811026021	WITHOUT_CLASSIFICATION	4.218897397827199E-6	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9999962857046483	WITHOUT_CLASSIFICATION	3.714295351693715E-6	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9999958392342457	WITHOUT_CLASSIFICATION	4.1607657542238455E-6	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9999966741320245	WITHOUT_CLASSIFICATION	3.325867975421691E-6	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999699012690524	WITHOUT_CLASSIFICATION	3.0098730947624004E-5	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.99999827299664	WITHOUT_CLASSIFICATION	1.7270033600420834E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999913811515065	WITHOUT_CLASSIFICATION	8.618848493487186E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999913811515065	WITHOUT_CLASSIFICATION	8.618848493487186E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999913811515065	WITHOUT_CLASSIFICATION	8.618848493487186E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999913811515065	WITHOUT_CLASSIFICATION	8.618848493487186E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999913811515065	WITHOUT_CLASSIFICATION	8.618848493487186E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999913811515065	WITHOUT_CLASSIFICATION	8.618848493487186E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999913811515065	WITHOUT_CLASSIFICATION	8.618848493487186E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999845004684097	WITHOUT_CLASSIFICATION	1.5499531590309236E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999845004684097	WITHOUT_CLASSIFICATION	1.5499531590309236E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999845004684097	WITHOUT_CLASSIFICATION	1.5499531590309236E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999845004684097	WITHOUT_CLASSIFICATION	1.5499531590309236E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998383274505269	WITHOUT_CLASSIFICATION	1.6167254947312758E-4	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998383274505269	WITHOUT_CLASSIFICATION	1.6167254947312758E-4	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999998649664041	WITHOUT_CLASSIFICATION	1.3503359581043345E-7	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999447028713352	WITHOUT_CLASSIFICATION	5.5297128664772E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999447028713352	WITHOUT_CLASSIFICATION	5.5297128664772E-5	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999981297111913	WITHOUT_CLASSIFICATION	1.8702888086352677E-6	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.99998257770498	WITHOUT_CLASSIFICATION	1.7422295019974125E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993724299328	WITHOUT_CLASSIFICATION	6.27570067291127E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993724299328	WITHOUT_CLASSIFICATION	6.27570067291127E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993724299328	WITHOUT_CLASSIFICATION	6.27570067291127E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993724299328	WITHOUT_CLASSIFICATION	6.27570067291127E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993724299328	WITHOUT_CLASSIFICATION	6.27570067291127E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993724299328	WITHOUT_CLASSIFICATION	6.27570067291127E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999993724299328	WITHOUT_CLASSIFICATION	6.27570067291127E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999990938324144	WITHOUT_CLASSIFICATION	9.061675855692762E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999473524081	WITHOUT_CLASSIFICATION	5.264759190111472E-7	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9998013063185428	WITHOUT_CLASSIFICATION	1.9869368145711275E-4	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9998013063185428	WITHOUT_CLASSIFICATION	1.9869368145711275E-4	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999874274232904	WITHOUT_CLASSIFICATION	1.2572576709595016E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999906545577535	WITHOUT_CLASSIFICATION	9.345442246486297E-6	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999906545577535	WITHOUT_CLASSIFICATION	9.345442246486297E-6	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999999994440847	WITHOUT_CLASSIFICATION	5.559152191247195E-10	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9998244745395974	WITHOUT_CLASSIFICATION	1.755254604025062E-4	IMPLEMENTATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999939630277112	WITHOUT_CLASSIFICATION	6.036972288806439E-6	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999999302713438	WITHOUT_CLASSIFICATION	6.972865611845421E-8	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999991539816475	WITHOUT_CLASSIFICATION	8.460183525395308E-7	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.999998508927993	WITHOUT_CLASSIFICATION	1.4910720069289754E-6	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999590980526097	WITHOUT_CLASSIFICATION	4.090194739026903E-5	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.999982833871697	WITHOUT_CLASSIFICATION	1.716612830302459E-5	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999458342942587	WITHOUT_CLASSIFICATION	5.416570574138909E-5	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9998354404805081	WITHOUT_CLASSIFICATION	1.6455951949181764E-4	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999857485048348	WITHOUT_CLASSIFICATION	1.4251495165201864E-5	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999998931026498	WITHOUT_CLASSIFICATION	1.06897350160161E-7	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999993442054281	WITHOUT_CLASSIFICATION	6.55794571804393E-7	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999290989925498	WITHOUT_CLASSIFICATION	7.090100745015358E-5	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999989704556316	WITHOUT_CLASSIFICATION	1.0295443684102473E-6	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999999352972004	WITHOUT_CLASSIFICATION	6.470279951720307E-8	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999992347997764	WITHOUT_CLASSIFICATION	7.652002236377378E-7	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999980431206165	WITHOUT_CLASSIFICATION	1.956879383518661E-6	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999054032169828	WITHOUT_CLASSIFICATION	9.45967830171403E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999054032169828	WITHOUT_CLASSIFICATION	9.45967830171403E-5	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999878244515278	WITHOUT_CLASSIFICATION	1.217554847216249E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999996977228659	WITHOUT_CLASSIFICATION	3.022771341028995E-7	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999562182514081	WITHOUT_CLASSIFICATION	4.3781748591881435E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999357461444531	WITHOUT_CLASSIFICATION	6.425385554687268E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999629482369524	WITHOUT_CLASSIFICATION	3.705176304750632E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999629482369524	WITHOUT_CLASSIFICATION	3.705176304750632E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999629482369524	WITHOUT_CLASSIFICATION	3.705176304750632E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.999998986544424	WITHOUT_CLASSIFICATION	1.0134555760901465E-6	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999983918192548	WITHOUT_CLASSIFICATION	1.6081807452155742E-6	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999990335619766	WITHOUT_CLASSIFICATION	9.664380234451668E-7	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999993880516346	WITHOUT_CLASSIFICATION	6.119483653767573E-7	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.999993646253984	WITHOUT_CLASSIFICATION	6.353746015980622E-6	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999996994202256	WITHOUT_CLASSIFICATION	3.005797743585663E-7	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999998474186894	WITHOUT_CLASSIFICATION	1.5258131051264522E-7	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999998788498989	WITHOUT_CLASSIFICATION	1.211501011104568E-7	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999990315432614	WITHOUT_CLASSIFICATION	9.684567385521493E-7	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999943605896516	WITHOUT_CLASSIFICATION	5.6394103483364944E-6	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9999982067043004	WITHOUT_CLASSIFICATION	1.7932956996483245E-6	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999985527419737	WITHOUT_CLASSIFICATION	1.447258026369623E-6	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.5743697093753465	IMPLEMENTATION	0.4256302906246536	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999891364165719	WITHOUT_CLASSIFICATION	1.0863583428011983E-5	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999762939489324	WITHOUT_CLASSIFICATION	2.3706051067535732E-5	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999991335796976	WITHOUT_CLASSIFICATION	8.664203023539169E-7	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999977319436846	WITHOUT_CLASSIFICATION	2.2680563153237076E-6	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999988299354033	WITHOUT_CLASSIFICATION	1.1700645966584666E-6	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9998781250108536	WITHOUT_CLASSIFICATION	1.2187498914646145E-4	IMPLEMENTATION
