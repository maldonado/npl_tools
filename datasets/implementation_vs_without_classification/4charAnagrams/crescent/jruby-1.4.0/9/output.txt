// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.993659786435342	WITHOUT_CLASSIFICATION	0.006340213564658036	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.6948439879198657	IMPLEMENTATION	0.3051560120801343	WITHOUT_CLASSIFICATION
// TODO: Someday, enable.	IMPLEMENTATION	0.681440477001093	IMPLEMENTATION	0.318559522998907	WITHOUT_CLASSIFICATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.6036171631701457	IMPLEMENTATION	0.3963828368298542	WITHOUT_CLASSIFICATION
// TODO: non-strict option	IMPLEMENTATION	0.7735692690289732	WITHOUT_CLASSIFICATION	0.22643073097102687	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.8375729602269274	IMPLEMENTATION	0.16242703977307255	WITHOUT_CLASSIFICATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.7358785978059845	WITHOUT_CLASSIFICATION	0.2641214021940155	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.8138430748708345	WITHOUT_CLASSIFICATION	0.18615692512916546	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.8138430748708345	WITHOUT_CLASSIFICATION	0.18615692512916546	IMPLEMENTATION
// TODO: pass this in?	IMPLEMENTATION	0.9355010549383771	IMPLEMENTATION	0.06449894506162293	WITHOUT_CLASSIFICATION
// FIXME: Pass block down?	IMPLEMENTATION	0.981840252368463	WITHOUT_CLASSIFICATION	0.01815974763153702	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.9982834957204405	IMPLEMENTATION	0.0017165042795595905	WITHOUT_CLASSIFICATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.9946267203007034	IMPLEMENTATION	0.005373279699296612	WITHOUT_CLASSIFICATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.998812775375405	WITHOUT_CLASSIFICATION	0.001187224624594987	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.9328863225984864	IMPLEMENTATION	0.06711367740151368	WITHOUT_CLASSIFICATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.8058709265684015	IMPLEMENTATION	0.1941290734315985	WITHOUT_CLASSIFICATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.5948291508781268	WITHOUT_CLASSIFICATION	0.4051708491218732	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.8448076542136501	IMPLEMENTATION	0.15519234578634983	WITHOUT_CLASSIFICATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.9039558877300192	WITHOUT_CLASSIFICATION	0.09604411226998077	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.9888439663094961	WITHOUT_CLASSIFICATION	0.011156033690504021	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.5261666243344769	WITHOUT_CLASSIFICATION	0.47383337566552297	IMPLEMENTATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.6050150791887102	WITHOUT_CLASSIFICATION	0.3949849208112897	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.7393841696201369	IMPLEMENTATION	0.2606158303798631	WITHOUT_CLASSIFICATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.9383867719793598	WITHOUT_CLASSIFICATION	0.0616132280206402	IMPLEMENTATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.9929040576294819	IMPLEMENTATION	0.007095942370518057	WITHOUT_CLASSIFICATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.7981577466183166	IMPLEMENTATION	0.20184225338168335	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.995259915851677	IMPLEMENTATION	0.00474008414832308	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9997143011285373	IMPLEMENTATION	2.856988714627541E-4	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.995259915851677	IMPLEMENTATION	0.00474008414832308	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9997143011285373	IMPLEMENTATION	2.856988714627541E-4	WITHOUT_CLASSIFICATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.970222851005697	IMPLEMENTATION	0.029777148994302963	WITHOUT_CLASSIFICATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.7506364455014684	WITHOUT_CLASSIFICATION	0.24936355449853165	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.9997211864377946	IMPLEMENTATION	2.7881356220545725E-4	WITHOUT_CLASSIFICATION
// TODO: make threadsafe	IMPLEMENTATION	0.9935820662648926	IMPLEMENTATION	0.006417933735107304	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9610094221087803	WITHOUT_CLASSIFICATION	0.038990577891219805	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9610094221087803	WITHOUT_CLASSIFICATION	0.038990577891219805	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.6294911971280387	WITHOUT_CLASSIFICATION	0.3705088028719613	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.8884091542433513	IMPLEMENTATION	0.11159084575664863	WITHOUT_CLASSIFICATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.8260019346087452	IMPLEMENTATION	0.1739980653912549	WITHOUT_CLASSIFICATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.9111234558391207	WITHOUT_CLASSIFICATION	0.0888765441608793	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9866565581720824	IMPLEMENTATION	0.013343441827917605	WITHOUT_CLASSIFICATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.9887649645951601	IMPLEMENTATION	0.011235035404839822	WITHOUT_CLASSIFICATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.9705007942209313	IMPLEMENTATION	0.02949920577906873	WITHOUT_CLASSIFICATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.9861504586093742	WITHOUT_CLASSIFICATION	0.013849541390625733	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.9669897220499485	WITHOUT_CLASSIFICATION	0.033010277950051486	IMPLEMENTATION
// TODO: add trace call?	IMPLEMENTATION	0.930711778131639	IMPLEMENTATION	0.06928822186836103	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9924880563636161	WITHOUT_CLASSIFICATION	0.0075119436363839266	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.6512059408709341	WITHOUT_CLASSIFICATION	0.34879405912906597	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.5070660959834924	IMPLEMENTATION	0.4929339040165076	WITHOUT_CLASSIFICATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.9490127888867341	IMPLEMENTATION	0.050987211113265894	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9924880563636161	WITHOUT_CLASSIFICATION	0.0075119436363839266	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.9996301759586582	WITHOUT_CLASSIFICATION	3.6982404134180616E-4	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.6017152995618277	WITHOUT_CLASSIFICATION	0.39828470043817243	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.9870070218512791	IMPLEMENTATION	0.01299297814872098	WITHOUT_CLASSIFICATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.983365256255223	IMPLEMENTATION	0.01663474374477701	WITHOUT_CLASSIFICATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.9722519525236236	WITHOUT_CLASSIFICATION	0.02774804747637638	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.5806090363421197	IMPLEMENTATION	0.4193909636578804	WITHOUT_CLASSIFICATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.7072930951558778	WITHOUT_CLASSIFICATION	0.2927069048441222	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9119722870852057	WITHOUT_CLASSIFICATION	0.08802771291479423	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9988328747420269	WITHOUT_CLASSIFICATION	0.0011671252579732142	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.995283190028137	WITHOUT_CLASSIFICATION	0.004716809971862997	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9724701903968789	IMPLEMENTATION	0.02752980960312118	WITHOUT_CLASSIFICATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9724701903968789	IMPLEMENTATION	0.02752980960312118	WITHOUT_CLASSIFICATION
// TODO: validate port as numeric	IMPLEMENTATION	0.7732486311840412	WITHOUT_CLASSIFICATION	0.22675136881595886	IMPLEMENTATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9999996511192483	IMPLEMENTATION	3.4888075173353557E-7	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.5855010994415882	WITHOUT_CLASSIFICATION	0.4144989005584119	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.8080817929538175	WITHOUT_CLASSIFICATION	0.19191820704618237	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.8080817929538175	WITHOUT_CLASSIFICATION	0.19191820704618237	IMPLEMENTATION
// TODO: other reserved names?	IMPLEMENTATION	0.9949888627655955	IMPLEMENTATION	0.005011137234404441	WITHOUT_CLASSIFICATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.9689976241299388	IMPLEMENTATION	0.031002375870061126	WITHOUT_CLASSIFICATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.975268383854313	IMPLEMENTATION	0.024731616145687033	WITHOUT_CLASSIFICATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.7464229914341265	IMPLEMENTATION	0.25357700856587356	WITHOUT_CLASSIFICATION
// TODO: call ruby method	IMPLEMENTATION	0.7559985975666129	WITHOUT_CLASSIFICATION	0.24400140243338708	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.7559985975666129	WITHOUT_CLASSIFICATION	0.24400140243338708	IMPLEMENTATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.9958269902666808	IMPLEMENTATION	0.004173009733319205	WITHOUT_CLASSIFICATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9054834056644457	IMPLEMENTATION	0.09451659433555429	WITHOUT_CLASSIFICATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9999871591170902	WITHOUT_CLASSIFICATION	1.2840882909847782E-5	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.9992752175361128	IMPLEMENTATION	7.247824638871667E-4	WITHOUT_CLASSIFICATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.9867219284692889	IMPLEMENTATION	0.013278071530711153	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.9876779785995192	IMPLEMENTATION	0.012322021400480835	WITHOUT_CLASSIFICATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.9675037350156958	IMPLEMENTATION	0.032496264984304135	WITHOUT_CLASSIFICATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.5565008824119886	IMPLEMENTATION	0.4434991175880114	WITHOUT_CLASSIFICATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.7635237082635618	WITHOUT_CLASSIFICATION	0.2364762917364383	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.7635237082635618	WITHOUT_CLASSIFICATION	0.2364762917364383	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.9864804208119424	WITHOUT_CLASSIFICATION	0.013519579188057488	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.9622160156558998	WITHOUT_CLASSIFICATION	0.03778398434410032	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9923751788941958	WITHOUT_CLASSIFICATION	0.007624821105804274	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9923751788941958	WITHOUT_CLASSIFICATION	0.007624821105804274	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.9498730239754463	WITHOUT_CLASSIFICATION	0.050126976024553786	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.5767948903091416	WITHOUT_CLASSIFICATION	0.42320510969085834	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.5767948903091416	WITHOUT_CLASSIFICATION	0.42320510969085834	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.5767948903091416	WITHOUT_CLASSIFICATION	0.42320510969085834	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.5691889645934796	WITHOUT_CLASSIFICATION	0.4308110354065205	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.5691889645934796	WITHOUT_CLASSIFICATION	0.4308110354065205	IMPLEMENTATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.9054439126976728	IMPLEMENTATION	0.09455608730232724	WITHOUT_CLASSIFICATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9998086627418394	WITHOUT_CLASSIFICATION	1.9133725816048103E-4	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.5301028117819064	WITHOUT_CLASSIFICATION	0.46989718821809356	IMPLEMENTATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9999801550631581	IMPLEMENTATION	1.984493684194558E-5	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9998308426459839	IMPLEMENTATION	1.6915735401610885E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9998308426459839	IMPLEMENTATION	1.6915735401610885E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9998308426459839	IMPLEMENTATION	1.6915735401610885E-4	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9866565581720824	IMPLEMENTATION	0.013343441827917605	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9866565581720824	IMPLEMENTATION	0.013343441827917605	WITHOUT_CLASSIFICATION
// TODO: check for ascii string	IMPLEMENTATION	0.8501034592140247	WITHOUT_CLASSIFICATION	0.14989654078597525	IMPLEMENTATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.92236830102257	IMPLEMENTATION	0.07763169897742998	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9610094221087803	WITHOUT_CLASSIFICATION	0.038990577891219805	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9610094221087803	WITHOUT_CLASSIFICATION	0.038990577891219805	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.7208469656161948	IMPLEMENTATION	0.27915303438380523	WITHOUT_CLASSIFICATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.8244322775377456	WITHOUT_CLASSIFICATION	0.1755677224622544	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.8058709265684015	IMPLEMENTATION	0.1941290734315985	WITHOUT_CLASSIFICATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9786638941842807	WITHOUT_CLASSIFICATION	0.021336105815719264	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.9837408611312328	IMPLEMENTATION	0.01625913886876716	WITHOUT_CLASSIFICATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.9995229306065566	IMPLEMENTATION	4.770693934433578E-4	WITHOUT_CLASSIFICATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.9543560822244098	WITHOUT_CLASSIFICATION	0.045643917775590084	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999670598918075	WITHOUT_CLASSIFICATION	3.294010819255414E-5	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9999995297727524	WITHOUT_CLASSIFICATION	4.702272475457203E-7	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999990147546307	WITHOUT_CLASSIFICATION	9.852453692247994E-7	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999990147546307	WITHOUT_CLASSIFICATION	9.852453692247994E-7	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999833270790058	WITHOUT_CLASSIFICATION	1.667292099412943E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999833270790058	WITHOUT_CLASSIFICATION	1.667292099412943E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999656807075227	WITHOUT_CLASSIFICATION	3.4319292477258376E-5	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999997225087812	WITHOUT_CLASSIFICATION	2.7749121881870727E-7	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9999997769678839	WITHOUT_CLASSIFICATION	2.2303211599740822E-7	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999998214061383	WITHOUT_CLASSIFICATION	1.7859386170432763E-7	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999777403430795	WITHOUT_CLASSIFICATION	2.2259656920465902E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999777403430795	WITHOUT_CLASSIFICATION	2.2259656920465902E-5	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9999985350356111	WITHOUT_CLASSIFICATION	1.4649643888826754E-6	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999443129417539	WITHOUT_CLASSIFICATION	5.568705824617022E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999443129417539	WITHOUT_CLASSIFICATION	5.568705824617022E-5	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9999992981438828	WITHOUT_CLASSIFICATION	7.018561171756147E-7	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999998295253977	WITHOUT_CLASSIFICATION	1.7047460233656143E-7	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999965586117306	WITHOUT_CLASSIFICATION	3.4413882694178167E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999965586117306	WITHOUT_CLASSIFICATION	3.4413882694178167E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999965586117306	WITHOUT_CLASSIFICATION	3.4413882694178167E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999965586117306	WITHOUT_CLASSIFICATION	3.4413882694178167E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999965586117306	WITHOUT_CLASSIFICATION	3.4413882694178167E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999965586117306	WITHOUT_CLASSIFICATION	3.4413882694178167E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999965586117306	WITHOUT_CLASSIFICATION	3.4413882694178167E-6	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999765636934883	WITHOUT_CLASSIFICATION	2.34363065117198E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999765636934883	WITHOUT_CLASSIFICATION	2.34363065117198E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999765636934883	WITHOUT_CLASSIFICATION	2.34363065117198E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999765636934883	WITHOUT_CLASSIFICATION	2.34363065117198E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999765636934883	WITHOUT_CLASSIFICATION	2.34363065117198E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999765636934883	WITHOUT_CLASSIFICATION	2.34363065117198E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999765636934883	WITHOUT_CLASSIFICATION	2.34363065117198E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999035667613593	WITHOUT_CLASSIFICATION	9.64332386407899E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999035667613593	WITHOUT_CLASSIFICATION	9.64332386407899E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999035667613593	WITHOUT_CLASSIFICATION	9.64332386407899E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999035667613593	WITHOUT_CLASSIFICATION	9.64332386407899E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999035667613593	WITHOUT_CLASSIFICATION	9.64332386407899E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999035667613593	WITHOUT_CLASSIFICATION	9.64332386407899E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999687027117717	WITHOUT_CLASSIFICATION	3.129728822822959E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999687027117717	WITHOUT_CLASSIFICATION	3.129728822822959E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999687027117717	WITHOUT_CLASSIFICATION	3.129728822822959E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999687027117717	WITHOUT_CLASSIFICATION	3.129728822822959E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999687027117717	WITHOUT_CLASSIFICATION	3.129728822822959E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999687027117717	WITHOUT_CLASSIFICATION	3.129728822822959E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999217045318893	WITHOUT_CLASSIFICATION	7.829546811066004E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999217045318893	WITHOUT_CLASSIFICATION	7.829546811066004E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999217045318893	WITHOUT_CLASSIFICATION	7.829546811066004E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999217045318893	WITHOUT_CLASSIFICATION	7.829546811066004E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999217045318893	WITHOUT_CLASSIFICATION	7.829546811066004E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999217045318893	WITHOUT_CLASSIFICATION	7.829546811066004E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999217045318893	WITHOUT_CLASSIFICATION	7.829546811066004E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999158231248452	WITHOUT_CLASSIFICATION	8.417687515488274E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999158231248452	WITHOUT_CLASSIFICATION	8.417687515488274E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999158231248452	WITHOUT_CLASSIFICATION	8.417687515488274E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999158231248452	WITHOUT_CLASSIFICATION	8.417687515488274E-5	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999961384873969	WITHOUT_CLASSIFICATION	3.861512603107699E-6	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999961384873969	WITHOUT_CLASSIFICATION	3.861512603107699E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653178	WITHOUT_CLASSIFICATION	5.1934682230871634E-8	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9999999128472372	WITHOUT_CLASSIFICATION	8.715276274008813E-8	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9999981039837829	WITHOUT_CLASSIFICATION	1.8960162171460905E-6	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999999460158185	WITHOUT_CLASSIFICATION	5.398418158400208E-8	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999985839431031	WITHOUT_CLASSIFICATION	1.4160568968493117E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999986022564136	WITHOUT_CLASSIFICATION	1.3977435865056993E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999986022564136	WITHOUT_CLASSIFICATION	1.3977435865056993E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999986022564136	WITHOUT_CLASSIFICATION	1.3977435865056993E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999986022564136	WITHOUT_CLASSIFICATION	1.3977435865056993E-6	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999898943866546	WITHOUT_CLASSIFICATION	1.0105613345451058E-5	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999980997205792	WITHOUT_CLASSIFICATION	1.9002794207941107E-6	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.999997390704203	WITHOUT_CLASSIFICATION	2.6092957969072156E-6	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999975902865397	WITHOUT_CLASSIFICATION	2.4097134603274465E-6	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9999987474665764	WITHOUT_CLASSIFICATION	1.252533423631986E-6	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999999757231405	WITHOUT_CLASSIFICATION	2.4276859576421962E-8	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999996367254967	WITHOUT_CLASSIFICATION	3.6327450317530885E-7	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999999974271635	WITHOUT_CLASSIFICATION	2.572836520179373E-9	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999998054196	WITHOUT_CLASSIFICATION	1.9458037058534408E-10	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999997982425133	WITHOUT_CLASSIFICATION	2.0175748681430972E-7	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999988035880233	WITHOUT_CLASSIFICATION	1.1964119767925856E-6	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999992808869758	WITHOUT_CLASSIFICATION	7.191130242325342E-7	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9998637407949644	WITHOUT_CLASSIFICATION	1.362592050355482E-4	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999999400723751	WITHOUT_CLASSIFICATION	5.992762490435767E-8	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999999152457449	WITHOUT_CLASSIFICATION	8.475425498251149E-8	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999997330762554	WITHOUT_CLASSIFICATION	2.669237445590643E-7	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9998861161279607	WITHOUT_CLASSIFICATION	1.1388387203926336E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999986022564136	WITHOUT_CLASSIFICATION	1.3977435865056993E-6	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999990347207348	WITHOUT_CLASSIFICATION	9.65279265133178E-7	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999999836580042	WITHOUT_CLASSIFICATION	1.6341995693322322E-8	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998792147228	WITHOUT_CLASSIFICATION	1.2078527720025842E-7	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9998592422338228	WITHOUT_CLASSIFICATION	1.4075776617718014E-4	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999422432076086	WITHOUT_CLASSIFICATION	5.775679239141162E-5	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999999226094893	WITHOUT_CLASSIFICATION	7.739051069677236E-8	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999999461956647	WITHOUT_CLASSIFICATION	5.380433525814315E-8	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999986504837488	WITHOUT_CLASSIFICATION	1.349516251087877E-6	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999702116658937	WITHOUT_CLASSIFICATION	2.9788334106307165E-5	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999997132604508	WITHOUT_CLASSIFICATION	2.8673954922572914E-7	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999999744183496	WITHOUT_CLASSIFICATION	2.5581650322155318E-8	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999997653380348	WITHOUT_CLASSIFICATION	2.3466196530057948E-7	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999988816829014	WITHOUT_CLASSIFICATION	1.118317098506291E-6	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999843381832788	WITHOUT_CLASSIFICATION	1.566181672114469E-5	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999964438256499	WITHOUT_CLASSIFICATION	3.5561743501173508E-6	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999997949801602	WITHOUT_CLASSIFICATION	2.0501983982135355E-7	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9999999594705236	WITHOUT_CLASSIFICATION	4.0529476507377385E-8	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999999804556992	WITHOUT_CLASSIFICATION	1.9544300875382673E-8	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999993805442168	WITHOUT_CLASSIFICATION	6.194557832667134E-7	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.999999996789775	WITHOUT_CLASSIFICATION	3.2102250061945145E-9	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999904014732028	WITHOUT_CLASSIFICATION	9.598526797171146E-6	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999996052800567	WITHOUT_CLASSIFICATION	3.9471994322887765E-7	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999999912274365	WITHOUT_CLASSIFICATION	8.772563436937818E-9	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9997158176572235	WITHOUT_CLASSIFICATION	2.8418234277639273E-4	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999995182356842	WITHOUT_CLASSIFICATION	4.817643157014615E-7	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9999996818188647	WITHOUT_CLASSIFICATION	3.181811353661604E-7	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999894031327102	WITHOUT_CLASSIFICATION	1.0596867289821159E-5	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999969552491544	WITHOUT_CLASSIFICATION	3.044750845566485E-6	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999999992890595	WITHOUT_CLASSIFICATION	7.109405591171704E-10	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999998478595098	WITHOUT_CLASSIFICATION	1.5214049019508128E-7	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.999999968256712	WITHOUT_CLASSIFICATION	3.1743287930406325E-8	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999998862027598	WITHOUT_CLASSIFICATION	1.1379724008486879E-7	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999999963906072	WITHOUT_CLASSIFICATION	3.6093927582141915E-9	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999999005322585	WITHOUT_CLASSIFICATION	9.946774149464656E-8	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999897446345917	WITHOUT_CLASSIFICATION	1.0255365408348707E-5	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999997612614989	WITHOUT_CLASSIFICATION	2.387385010288737E-7	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999998856477422	WITHOUT_CLASSIFICATION	1.1435225777607939E-7	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.999999999938592	WITHOUT_CLASSIFICATION	6.140799047448653E-11	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999983636917205	WITHOUT_CLASSIFICATION	1.6363082795775623E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999995677208493	WITHOUT_CLASSIFICATION	4.3227915075139725E-7	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999999367021601	WITHOUT_CLASSIFICATION	6.329783988875504E-8	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992881598528	WITHOUT_CLASSIFICATION	7.118401472842561E-7	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999987099338499	WITHOUT_CLASSIFICATION	1.2900661500158236E-6	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9680019839815645	WITHOUT_CLASSIFICATION	0.031998016018435604	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9680019839815645	WITHOUT_CLASSIFICATION	0.031998016018435604	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9761448642133718	WITHOUT_CLASSIFICATION	0.02385513578662828	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999998736816821	WITHOUT_CLASSIFICATION	1.263183180411742E-7	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999972753026455	WITHOUT_CLASSIFICATION	2.7246973544526284E-6	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999987561989919	WITHOUT_CLASSIFICATION	1.2438010079800815E-6	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999994543126003	WITHOUT_CLASSIFICATION	5.456873996640712E-7	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999997119630187	WITHOUT_CLASSIFICATION	2.880369813320871E-7	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.999999927142537	WITHOUT_CLASSIFICATION	7.285746294976703E-8	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9999975831140432	WITHOUT_CLASSIFICATION	2.4168859568316474E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992881598528	WITHOUT_CLASSIFICATION	7.118401472842561E-7	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999999982828452	WITHOUT_CLASSIFICATION	1.717154798412975E-9	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999950788044898	WITHOUT_CLASSIFICATION	4.921195510200201E-6	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999015334562096	WITHOUT_CLASSIFICATION	9.846654379043072E-5	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999997907894133	WITHOUT_CLASSIFICATION	2.092105867103489E-7	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999999792869484	WITHOUT_CLASSIFICATION	2.0713051643050332E-8	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999945706948	WITHOUT_CLASSIFICATION	5.429305122017767E-9	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999945706948	WITHOUT_CLASSIFICATION	5.429305122017767E-9	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999945706948	WITHOUT_CLASSIFICATION	5.429305122017767E-9	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999995698515882	WITHOUT_CLASSIFICATION	4.3014841182984583E-7	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999999976270211	WITHOUT_CLASSIFICATION	2.3729789057745548E-9	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999999976046445	WITHOUT_CLASSIFICATION	2.3953553957398698E-9	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999988308026919	WITHOUT_CLASSIFICATION	1.1691973081274631E-6	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999999562045425	WITHOUT_CLASSIFICATION	4.379545736910797E-8	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999999956061428	WITHOUT_CLASSIFICATION	4.393857135531652E-9	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999935299562696	WITHOUT_CLASSIFICATION	6.4700437305286205E-6	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999832049496	WITHOUT_CLASSIFICATION	1.679505039218897E-8	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999997820036749	WITHOUT_CLASSIFICATION	2.179963250328887E-7	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999997820036749	WITHOUT_CLASSIFICATION	2.179963250328887E-7	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999999465999501	WITHOUT_CLASSIFICATION	5.340004982559243E-8	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999986956139202	WITHOUT_CLASSIFICATION	1.3043860797964979E-6	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999999462939331	WITHOUT_CLASSIFICATION	5.3706066963091674E-8	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999999462939331	WITHOUT_CLASSIFICATION	5.3706066963091674E-8	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.999999887511243	WITHOUT_CLASSIFICATION	1.1248875692532024E-7	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999997512058503	WITHOUT_CLASSIFICATION	2.4879414964055015E-7	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999965346590857	WITHOUT_CLASSIFICATION	3.4653409143699777E-6	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999999992722819	WITHOUT_CLASSIFICATION	7.277180662936818E-10	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.999999077479416	WITHOUT_CLASSIFICATION	9.225205841528528E-7	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.9999998947638674	WITHOUT_CLASSIFICATION	1.0523613259066004E-7	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999997088672313	WITHOUT_CLASSIFICATION	2.9113276860266227E-7	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9999978838382089	WITHOUT_CLASSIFICATION	2.1161617911315465E-6	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9999963158197053	WITHOUT_CLASSIFICATION	3.684180294762232E-6	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999998837255196	WITHOUT_CLASSIFICATION	1.1627448039118407E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992881598528	WITHOUT_CLASSIFICATION	7.118401472842561E-7	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.99999989559423	WITHOUT_CLASSIFICATION	1.0440576992775689E-7	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999958204441	WITHOUT_CLASSIFICATION	4.1795559129527765E-9	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999979400296855	WITHOUT_CLASSIFICATION	2.0599703146636713E-6	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9988743574800157	WITHOUT_CLASSIFICATION	0.0011256425199842783	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999995637624858	WITHOUT_CLASSIFICATION	4.36237514245717E-7	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999941706978341	WITHOUT_CLASSIFICATION	5.829302165841824E-6	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999998167261486	WITHOUT_CLASSIFICATION	1.8327385137677144E-7	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999997265188451	WITHOUT_CLASSIFICATION	2.734811550414968E-7	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.99999991069904	WITHOUT_CLASSIFICATION	8.930095997150077E-8	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999924570953158	WITHOUT_CLASSIFICATION	7.542904684266035E-6	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999997736576278	WITHOUT_CLASSIFICATION	2.263423722526002E-7	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999999995847332	WITHOUT_CLASSIFICATION	4.1526684459948366E-10	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999996357916889	WITHOUT_CLASSIFICATION	3.642083110062781E-7	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999994082315947	WITHOUT_CLASSIFICATION	5.917684052706078E-7	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999999979480837	WITHOUT_CLASSIFICATION	2.051916403481503E-9	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9999899474479341	WITHOUT_CLASSIFICATION	1.0052552065899009E-5	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999976601488161	WITHOUT_CLASSIFICATION	2.33985118382569E-6	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9999999847032305	WITHOUT_CLASSIFICATION	1.529676958616055E-8	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999997110379512	WITHOUT_CLASSIFICATION	2.889620488518229E-7	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999989789685252	WITHOUT_CLASSIFICATION	1.0210314747371284E-6	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999986083616906	WITHOUT_CLASSIFICATION	1.391638309340506E-6	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999999708123062	WITHOUT_CLASSIFICATION	2.918769392705836E-8	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999999802831979	WITHOUT_CLASSIFICATION	1.9716802055053E-8	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999999834692803	WITHOUT_CLASSIFICATION	1.6530719663370073E-8	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.999999993635646	WITHOUT_CLASSIFICATION	6.364354046091144E-9	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999853856860668	WITHOUT_CLASSIFICATION	1.4614313933278108E-5	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999994773870832	WITHOUT_CLASSIFICATION	5.226129169113507E-7	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999999200245308	WITHOUT_CLASSIFICATION	7.997546923522965E-8	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999999746808584	WITHOUT_CLASSIFICATION	2.5319141529960327E-8	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999998813235853	WITHOUT_CLASSIFICATION	1.1867641465119494E-7	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999999943072472	WITHOUT_CLASSIFICATION	5.692752850248329E-9	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9999999330279095	WITHOUT_CLASSIFICATION	6.697209060896499E-8	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999971362351308	WITHOUT_CLASSIFICATION	2.863764869288406E-6	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999996413701511	WITHOUT_CLASSIFICATION	3.5862984890977867E-7	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999986382001941	WITHOUT_CLASSIFICATION	1.3617998059098892E-6	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999950153623716	WITHOUT_CLASSIFICATION	4.984637628429993E-6	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998287147626	WITHOUT_CLASSIFICATION	1.7128523746794502E-7	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999975746859602	WITHOUT_CLASSIFICATION	2.4253140398692524E-6	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999991101682928	WITHOUT_CLASSIFICATION	8.898317071567438E-7	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999999303095103	WITHOUT_CLASSIFICATION	6.969048972428895E-8	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999999914847294	WITHOUT_CLASSIFICATION	8.515270658046057E-9	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.99999997952261	WITHOUT_CLASSIFICATION	2.0477390041659827E-8	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999998977446877	WITHOUT_CLASSIFICATION	1.022553124549453E-7	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999998981528142	WITHOUT_CLASSIFICATION	1.018471857989753E-7	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9999984271858751	WITHOUT_CLASSIFICATION	1.5728141248219879E-6	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9999999376797347	WITHOUT_CLASSIFICATION	6.23202652537262E-8	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9999998438596102	WITHOUT_CLASSIFICATION	1.5614038981324428E-7	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999844597716356	WITHOUT_CLASSIFICATION	1.554022836435065E-5	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999998060987636	WITHOUT_CLASSIFICATION	1.939012363586025E-7	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999967549062757	WITHOUT_CLASSIFICATION	3.245093724322222E-6	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9998622394290467	WITHOUT_CLASSIFICATION	1.3776057095316797E-4	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999703396455547	WITHOUT_CLASSIFICATION	2.9660354445321252E-5	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999918624101265	WITHOUT_CLASSIFICATION	8.13758987354684E-6	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.999999942422884	WITHOUT_CLASSIFICATION	5.7577115910910025E-8	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999983897870129	WITHOUT_CLASSIFICATION	1.610212987119615E-6	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999993755956509	WITHOUT_CLASSIFICATION	6.24404349082262E-7	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.999999526416916	WITHOUT_CLASSIFICATION	4.7358308400175987E-7	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999994307070391	WITHOUT_CLASSIFICATION	5.692929608733483E-7	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999985983322222	WITHOUT_CLASSIFICATION	1.4016677778762458E-6	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9999904213333382	WITHOUT_CLASSIFICATION	9.578666661780496E-6	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999991202999081	WITHOUT_CLASSIFICATION	8.797000917595414E-7	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999991202999081	WITHOUT_CLASSIFICATION	8.797000917595414E-7	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999986116104858	WITHOUT_CLASSIFICATION	1.3883895142218108E-6	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999986116104858	WITHOUT_CLASSIFICATION	1.3883895142218108E-6	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999999018753719	WITHOUT_CLASSIFICATION	9.812462806532853E-8	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999999018753719	WITHOUT_CLASSIFICATION	9.812462806532853E-8	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999993962177987	WITHOUT_CLASSIFICATION	6.037822014678833E-7	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999993962177987	WITHOUT_CLASSIFICATION	6.037822014678833E-7	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.999999766706645	WITHOUT_CLASSIFICATION	2.3329335506999143E-7	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9999494976991984	WITHOUT_CLASSIFICATION	5.0502300801659573E-5	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999864873344	WITHOUT_CLASSIFICATION	1.3512665606441925E-7	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999999986681695	WITHOUT_CLASSIFICATION	1.3318304631360368E-9	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999998000612288	WITHOUT_CLASSIFICATION	1.9993877120982638E-7	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999999197876267	WITHOUT_CLASSIFICATION	8.021237334271949E-8	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999983162821687	WITHOUT_CLASSIFICATION	1.6837178313166007E-6	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999999798118813	WITHOUT_CLASSIFICATION	2.0188118680359286E-8	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999998462677717	WITHOUT_CLASSIFICATION	1.5373222824769885E-7	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999999926342504	WITHOUT_CLASSIFICATION	7.365749451647205E-9	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999984274210344	WITHOUT_CLASSIFICATION	1.5725789657145073E-6	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999999693746109	WITHOUT_CLASSIFICATION	3.062538918103541E-8	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999999132051328	WITHOUT_CLASSIFICATION	8.679486711662679E-8	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999995257296935	WITHOUT_CLASSIFICATION	4.7427030655073036E-7	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999999841206488	WITHOUT_CLASSIFICATION	1.5879351104338775E-8	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999999793037452	WITHOUT_CLASSIFICATION	2.0696254855415043E-8	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999971939460335	WITHOUT_CLASSIFICATION	2.806053966570578E-6	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999999885242963	WITHOUT_CLASSIFICATION	1.1475703648858256E-8	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999999832248274	WITHOUT_CLASSIFICATION	1.6775172615787783E-8	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9998298202409878	WITHOUT_CLASSIFICATION	1.7017975901220466E-4	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999998243164382	WITHOUT_CLASSIFICATION	1.7568356185537558E-7	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999995900081161	WITHOUT_CLASSIFICATION	4.099918838780554E-7	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999847188969442	WITHOUT_CLASSIFICATION	1.5281103055813257E-5	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999999852916727	WITHOUT_CLASSIFICATION	1.4708327353102372E-8	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999999186296445	WITHOUT_CLASSIFICATION	8.137035543301612E-8	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999999631471097	WITHOUT_CLASSIFICATION	3.6852890217891315E-8	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999994247947656	WITHOUT_CLASSIFICATION	5.75205234450165E-7	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999595598169916	WITHOUT_CLASSIFICATION	4.0440183008390816E-5	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999595598169916	WITHOUT_CLASSIFICATION	4.0440183008390816E-5	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999999891677922	WITHOUT_CLASSIFICATION	1.0832207720688627E-8	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9999985324070089	WITHOUT_CLASSIFICATION	1.4675929910980295E-6	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9999963442529554	WITHOUT_CLASSIFICATION	3.6557470446439597E-6	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999999987041011	WITHOUT_CLASSIFICATION	1.295898919469585E-9	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999999809605902	WITHOUT_CLASSIFICATION	1.9039409855434482E-8	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999999496009977	WITHOUT_CLASSIFICATION	5.039900239352338E-8	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.999994646339516	WITHOUT_CLASSIFICATION	5.353660484027771E-6	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.999994646339516	WITHOUT_CLASSIFICATION	5.353660484027771E-6	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999999634683673	WITHOUT_CLASSIFICATION	3.653163268831993E-8	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9929921454618836	WITHOUT_CLASSIFICATION	0.007007854538116473	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999999769840758	WITHOUT_CLASSIFICATION	2.3015924168136945E-8	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999999769840758	WITHOUT_CLASSIFICATION	2.3015924168136945E-8	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.999999979139774	WITHOUT_CLASSIFICATION	2.086022599882393E-8	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999995385924105	WITHOUT_CLASSIFICATION	4.6140758939822443E-7	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999995385924105	WITHOUT_CLASSIFICATION	4.6140758939822443E-7	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999479707679824	WITHOUT_CLASSIFICATION	5.2029232017761136E-5	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999479707679824	WITHOUT_CLASSIFICATION	5.2029232017761136E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.999999610841809	WITHOUT_CLASSIFICATION	3.891581910329111E-7	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.999999610841809	WITHOUT_CLASSIFICATION	3.891581910329111E-7	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9999998830434974	WITHOUT_CLASSIFICATION	1.1695650248571872E-7	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999998462834485	WITHOUT_CLASSIFICATION	1.5371655153112554E-7	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999999933022473	WITHOUT_CLASSIFICATION	6.697752602191045E-9	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999999978963711	WITHOUT_CLASSIFICATION	2.1036289636016023E-9	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999999995679785	WITHOUT_CLASSIFICATION	4.3202158741903377E-10	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.999999965656021	WITHOUT_CLASSIFICATION	3.434397893029071E-8	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999999712851007	WITHOUT_CLASSIFICATION	2.8714899300741543E-8	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999999579367651	WITHOUT_CLASSIFICATION	4.206323495670058E-8	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999999712851007	WITHOUT_CLASSIFICATION	2.8714899300741543E-8	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9999199493560189	WITHOUT_CLASSIFICATION	8.005064398105241E-5	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999993933352702	WITHOUT_CLASSIFICATION	6.066647298456244E-7	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999998416970896	WITHOUT_CLASSIFICATION	1.5830291044772026E-7	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.999996562169062	WITHOUT_CLASSIFICATION	3.4378309379215175E-6	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999999606970362	WITHOUT_CLASSIFICATION	3.9302963718559486E-8	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999486573764959	WITHOUT_CLASSIFICATION	5.1342623504134605E-5	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.999991999639193	WITHOUT_CLASSIFICATION	8.000360806944534E-6	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999961376537916	WITHOUT_CLASSIFICATION	3.862346208367897E-6	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999622685845	WITHOUT_CLASSIFICATION	3.773141557441995E-8	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999999166028658	WITHOUT_CLASSIFICATION	8.339713419106764E-8	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999999970405133	WITHOUT_CLASSIFICATION	2.9594867245496774E-9	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999999819753467	WITHOUT_CLASSIFICATION	1.8024653308438484E-8	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.9998898963330967	WITHOUT_CLASSIFICATION	1.1010366690336867E-4	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.999999668552753	WITHOUT_CLASSIFICATION	3.3144724693198763E-7	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999998302512952	WITHOUT_CLASSIFICATION	1.6974870471474147E-7	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999999978084848	WITHOUT_CLASSIFICATION	2.191515191186837E-9	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999963404172696	WITHOUT_CLASSIFICATION	3.659582730461866E-6	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999887136439076	WITHOUT_CLASSIFICATION	1.1286356092376418E-5	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9980015540060684	WITHOUT_CLASSIFICATION	0.001998445993931603	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999769343692806	WITHOUT_CLASSIFICATION	2.3065630719396863E-5	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999999980156761	WITHOUT_CLASSIFICATION	1.9843238884446707E-9	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.999998065644206	WITHOUT_CLASSIFICATION	1.9343557938959937E-6	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999999884641589	WITHOUT_CLASSIFICATION	1.1535841111431905E-8	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999963440044556	WITHOUT_CLASSIFICATION	3.655995544381942E-6	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999993199588035	WITHOUT_CLASSIFICATION	6.800411963984755E-7	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.999999843620893	WITHOUT_CLASSIFICATION	1.563791069146374E-7	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999999979234265	WITHOUT_CLASSIFICATION	2.0765733659233027E-9	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999993377039496	WITHOUT_CLASSIFICATION	6.622960505883456E-7	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999999994146221	WITHOUT_CLASSIFICATION	5.853778476462032E-10	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999999634312784	WITHOUT_CLASSIFICATION	3.6568721677609644E-8	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999999846289185	WITHOUT_CLASSIFICATION	1.53710815001966E-8	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999381616863	WITHOUT_CLASSIFICATION	6.183831358964829E-8	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999999977655438	WITHOUT_CLASSIFICATION	2.2344561939548485E-9	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999994573165435	WITHOUT_CLASSIFICATION	5.426834565692856E-7	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999996600510891	WITHOUT_CLASSIFICATION	3.399489108798097E-7	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999999938315547	WITHOUT_CLASSIFICATION	6.1684453576265315E-9	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999999959393407	WITHOUT_CLASSIFICATION	4.060659273144579E-9	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999995280602028	WITHOUT_CLASSIFICATION	4.719397972642879E-7	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.999999756865227	WITHOUT_CLASSIFICATION	2.4313477295708543E-7	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.999999998615588	WITHOUT_CLASSIFICATION	1.3844120935740857E-9	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999999973800886	WITHOUT_CLASSIFICATION	2.619911436430464E-9	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999395037991	WITHOUT_CLASSIFICATION	6.049620093698622E-8	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999999705429606	WITHOUT_CLASSIFICATION	2.9457039385532515E-8	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999999881519301	WITHOUT_CLASSIFICATION	1.1848069957023734E-8	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999975248054	WITHOUT_CLASSIFICATION	2.4751945967363765E-9	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.999999995091866	WITHOUT_CLASSIFICATION	4.908134034264648E-9	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999999989479257	WITHOUT_CLASSIFICATION	1.0520743451375292E-9	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999999521687327	WITHOUT_CLASSIFICATION	4.7831267159113997E-8	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999451568068	WITHOUT_CLASSIFICATION	5.484319309688227E-8	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999989186698727	WITHOUT_CLASSIFICATION	1.08133012738389E-6	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999980482118218	WITHOUT_CLASSIFICATION	1.951788178223934E-6	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999999584673299	WITHOUT_CLASSIFICATION	4.153267000684962E-8	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999978734345107	WITHOUT_CLASSIFICATION	2.1265654892528416E-6	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999993012315912	WITHOUT_CLASSIFICATION	6.987684088322608E-7	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999998813937557	WITHOUT_CLASSIFICATION	1.18606244337755E-7	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999998813937557	WITHOUT_CLASSIFICATION	1.18606244337755E-7	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999874168527	WITHOUT_CLASSIFICATION	1.258314733528814E-8	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999343673187	WITHOUT_CLASSIFICATION	6.563268132224484E-8	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999999972948111	WITHOUT_CLASSIFICATION	2.705188731888213E-9	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999951475455732	WITHOUT_CLASSIFICATION	4.852454426864041E-6	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999997357031922	WITHOUT_CLASSIFICATION	2.642968078403224E-7	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999997101173511	WITHOUT_CLASSIFICATION	2.8988264884435433E-7	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.999999970950561	WITHOUT_CLASSIFICATION	2.9049438897839232E-8	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999863952838735	WITHOUT_CLASSIFICATION	1.3604716126662545E-5	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999511404112181	WITHOUT_CLASSIFICATION	4.885958878198163E-5	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999999893068816	WITHOUT_CLASSIFICATION	1.0693118313515258E-8	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999995159031346	WITHOUT_CLASSIFICATION	4.840968653839885E-7	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999995159031346	WITHOUT_CLASSIFICATION	4.840968653839885E-7	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9746787808401867	WITHOUT_CLASSIFICATION	0.02532121915981336	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999972144480754	WITHOUT_CLASSIFICATION	2.7855519246327804E-6	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999988376363046	WITHOUT_CLASSIFICATION	1.162363695347201E-6	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999999991705917	WITHOUT_CLASSIFICATION	8.294084010204027E-10	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.999999999673489	WITHOUT_CLASSIFICATION	3.265110456053386E-10	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999997526969835	WITHOUT_CLASSIFICATION	2.473030165458662E-7	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999944994308	WITHOUT_CLASSIFICATION	5.5005693117040655E-9	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.999999993410798	WITHOUT_CLASSIFICATION	6.589202078160295E-9	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.999999465113335	WITHOUT_CLASSIFICATION	5.348866650141932E-7	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.999950916971549	WITHOUT_CLASSIFICATION	4.9083028450930763E-5	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999999996784678	WITHOUT_CLASSIFICATION	3.215322745233897E-10	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999999414662549	WITHOUT_CLASSIFICATION	5.853374518156255E-8	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999989689839399	WITHOUT_CLASSIFICATION	1.0310160601334113E-6	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999989689839399	WITHOUT_CLASSIFICATION	1.0310160601334113E-6	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999990978074621	WITHOUT_CLASSIFICATION	9.021925378443979E-7	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999964095093213	WITHOUT_CLASSIFICATION	3.5904906786537786E-6	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999999359574574	WITHOUT_CLASSIFICATION	6.40425425402947E-8	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.999995871317988	WITHOUT_CLASSIFICATION	4.128682012084487E-6	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999978374170866	WITHOUT_CLASSIFICATION	2.1625829134936534E-6	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999999888795242	WITHOUT_CLASSIFICATION	1.1120475846148993E-8	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.999999897644321	WITHOUT_CLASSIFICATION	1.023556790589337E-7	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.999999987017983	WITHOUT_CLASSIFICATION	1.2982016912165587E-8	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9998575708063377	WITHOUT_CLASSIFICATION	1.4242919366224194E-4	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999999685882629	WITHOUT_CLASSIFICATION	3.141173712010599E-8	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999988376363046	WITHOUT_CLASSIFICATION	1.162363695347201E-6	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999967248673544	WITHOUT_CLASSIFICATION	3.275132645546867E-6	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999998925702769	WITHOUT_CLASSIFICATION	1.0742972308869405E-7	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999999801420852	WITHOUT_CLASSIFICATION	1.9857914687026045E-8	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999994450032786	WITHOUT_CLASSIFICATION	5.549967212770928E-7	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999998902977953	WITHOUT_CLASSIFICATION	1.0970220458859636E-7	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999999958773561	WITHOUT_CLASSIFICATION	4.1226437929258634E-9	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999691683981455	WITHOUT_CLASSIFICATION	3.0831601854497565E-5	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999970379872137	WITHOUT_CLASSIFICATION	2.962012786301577E-6	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999999911543368	WITHOUT_CLASSIFICATION	8.84566314952165E-9	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999688640994615	WITHOUT_CLASSIFICATION	3.113590053840917E-5	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999522699043799	WITHOUT_CLASSIFICATION	4.773009561995587E-5	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999999909914025	WITHOUT_CLASSIFICATION	9.00859751425651E-9	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999978735316294	WITHOUT_CLASSIFICATION	2.126468370709823E-6	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999935250210527	WITHOUT_CLASSIFICATION	6.474978947334325E-6	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999991532296124	WITHOUT_CLASSIFICATION	8.467703875437238E-7	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999998859015133	WITHOUT_CLASSIFICATION	1.1409848664762977E-7	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999999010548869	WITHOUT_CLASSIFICATION	9.894511318528673E-8	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999998739538752	WITHOUT_CLASSIFICATION	1.2604612480512606E-7	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999972170362807	WITHOUT_CLASSIFICATION	2.782963719172497E-6	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.9999999985615902	WITHOUT_CLASSIFICATION	1.4384099075624737E-9	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999999999755617	WITHOUT_CLASSIFICATION	2.44383769637478E-11	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999945250996597	WITHOUT_CLASSIFICATION	5.474900340267583E-6	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999999335278081	WITHOUT_CLASSIFICATION	6.647219184701407E-8	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999740867867546	WITHOUT_CLASSIFICATION	2.5913213245377537E-5	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.999999684752229	WITHOUT_CLASSIFICATION	3.1524777096806366E-7	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999999996485367	WITHOUT_CLASSIFICATION	3.514633092301768E-10	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9999996190633824	WITHOUT_CLASSIFICATION	3.8093661753914354E-7	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999997157457959	WITHOUT_CLASSIFICATION	2.8425420408296447E-7	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9999986321031902	WITHOUT_CLASSIFICATION	1.3678968097579459E-6	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999998456107888	WITHOUT_CLASSIFICATION	1.5438921132043007E-7	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.999999566494712	WITHOUT_CLASSIFICATION	4.3350528801616756E-7	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.999999566494712	WITHOUT_CLASSIFICATION	4.3350528801616756E-7	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9993573827115482	WITHOUT_CLASSIFICATION	6.426172884517971E-4	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9997679145330814	WITHOUT_CLASSIFICATION	2.3208546691858603E-4	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.9999999992231756	WITHOUT_CLASSIFICATION	7.768244206507959E-10	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9995912746392013	WITHOUT_CLASSIFICATION	4.0872536079877223E-4	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.999997249236103	WITHOUT_CLASSIFICATION	2.750763897072825E-6	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999998953231846	WITHOUT_CLASSIFICATION	1.046768154375129E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999992881598528	WITHOUT_CLASSIFICATION	7.118401472842561E-7	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999999615472981	WITHOUT_CLASSIFICATION	3.8452701981052645E-8	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999998220668742	WITHOUT_CLASSIFICATION	1.7793312567280056E-7	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999998498453722	WITHOUT_CLASSIFICATION	1.5015462770795388E-7	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999999379199299	WITHOUT_CLASSIFICATION	6.208007014056146E-8	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9999999001967145	WITHOUT_CLASSIFICATION	9.980328554140416E-8	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999999817395893	WITHOUT_CLASSIFICATION	1.8260410716837546E-8	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999999303095103	WITHOUT_CLASSIFICATION	6.969048972428895E-8	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999493001539237	WITHOUT_CLASSIFICATION	5.0699846076266567E-5	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999964445026451	WITHOUT_CLASSIFICATION	3.5554973547438245E-6	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999483913495	WITHOUT_CLASSIFICATION	5.1608650476038045E-8	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999999885041818	WITHOUT_CLASSIFICATION	1.1495818119634519E-8	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.9999998014214627	WITHOUT_CLASSIFICATION	1.9857853729888668E-7	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999987922041461	WITHOUT_CLASSIFICATION	1.2077958538674996E-6	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999853175016724	WITHOUT_CLASSIFICATION	1.468249832759632E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999853175016724	WITHOUT_CLASSIFICATION	1.468249832759632E-5	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9999987394615573	WITHOUT_CLASSIFICATION	1.2605384426723959E-6	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999954495021315	WITHOUT_CLASSIFICATION	4.550497868522119E-6	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999997473407526	WITHOUT_CLASSIFICATION	2.526592473690371E-7	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999999987292708	WITHOUT_CLASSIFICATION	1.2707291132800526E-9	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999999807115789	WITHOUT_CLASSIFICATION	1.928842107785766E-8	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9980431209971987	WITHOUT_CLASSIFICATION	0.001956879002801278	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999999750544483	WITHOUT_CLASSIFICATION	2.4945551645665736E-8	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.999999999886657	WITHOUT_CLASSIFICATION	1.1334290454539747E-10	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999993485053208	WITHOUT_CLASSIFICATION	6.514946791635115E-7	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999458104487685	WITHOUT_CLASSIFICATION	5.418955123153043E-5	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9999991954246997	WITHOUT_CLASSIFICATION	8.04575300214081E-7	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999999403560517	WITHOUT_CLASSIFICATION	5.964394831450194E-8	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999966119700301	WITHOUT_CLASSIFICATION	3.3880299698752135E-6	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999999989628349	WITHOUT_CLASSIFICATION	1.0371651419851314E-9	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999989474125788	WITHOUT_CLASSIFICATION	1.0525874212423436E-6	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999995654894132	WITHOUT_CLASSIFICATION	4.3451058685666223E-7	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999983987506726	WITHOUT_CLASSIFICATION	1.6012493273675226E-6	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9999998176832553	WITHOUT_CLASSIFICATION	1.823167447794191E-7	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999925292123	WITHOUT_CLASSIFICATION	7.470787676271186E-9	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999999992329192	WITHOUT_CLASSIFICATION	7.670809333478732E-10	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999887587174652	WITHOUT_CLASSIFICATION	1.1241282534887389E-5	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999995425211565	WITHOUT_CLASSIFICATION	4.574788434472509E-7	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.999999942865312	WITHOUT_CLASSIFICATION	5.713468795865196E-8	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999995959443463	WITHOUT_CLASSIFICATION	4.0405565365335446E-7	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999997381017405	WITHOUT_CLASSIFICATION	2.6189825953878757E-7	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999992934338154	WITHOUT_CLASSIFICATION	7.065661846061115E-7	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.999997995838198	WITHOUT_CLASSIFICATION	2.0041618020193695E-6	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999999843656907	WITHOUT_CLASSIFICATION	1.5634309193223424E-8	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.999999763598577	WITHOUT_CLASSIFICATION	2.364014228710442E-7	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999996940670633	WITHOUT_CLASSIFICATION	3.059329367071566E-7	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999995529915651	WITHOUT_CLASSIFICATION	4.470084349004442E-7	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999961959233987	WITHOUT_CLASSIFICATION	3.8040766013235093E-6	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.999999621665125	WITHOUT_CLASSIFICATION	3.7833487503418146E-7	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.9999996398931577	WITHOUT_CLASSIFICATION	3.601068423708586E-7	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999999957564779	WITHOUT_CLASSIFICATION	4.243522128490621E-9	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999999999905591	WITHOUT_CLASSIFICATION	9.440833473283475E-12	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999999982120296	WITHOUT_CLASSIFICATION	1.7879704344035347E-9	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9999554680907232	WITHOUT_CLASSIFICATION	4.45319092767909E-5	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999890713780443	WITHOUT_CLASSIFICATION	1.0928621955738006E-5	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.999993459543259	WITHOUT_CLASSIFICATION	6.540456740942148E-6	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999999994294151	WITHOUT_CLASSIFICATION	5.70584881637546E-10	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999998349105066	WITHOUT_CLASSIFICATION	1.6508949336964263E-7	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999999364314196	WITHOUT_CLASSIFICATION	6.356858044789185E-8	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999998302879464	WITHOUT_CLASSIFICATION	1.6971205367724682E-7	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999999541628606	WITHOUT_CLASSIFICATION	4.5837139477483256E-8	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999998302879464	WITHOUT_CLASSIFICATION	1.6971205367724682E-7	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999998127191362	WITHOUT_CLASSIFICATION	1.8728086388178793E-7	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9946673496424965	WITHOUT_CLASSIFICATION	0.005332650357503499	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999969115691688	WITHOUT_CLASSIFICATION	3.088430831132996E-6	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.6233619008649951	IMPLEMENTATION	0.3766380991350049	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999997044384294	WITHOUT_CLASSIFICATION	2.9556157058642644E-7	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999995389283843	WITHOUT_CLASSIFICATION	4.6107161570403565E-7	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9999999938555897	WITHOUT_CLASSIFICATION	6.144410352084759E-9	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999999949174396	WITHOUT_CLASSIFICATION	5.0825604386316255E-9	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999817203831758	WITHOUT_CLASSIFICATION	1.8279616824263388E-5	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.7635628429484473	IMPLEMENTATION	0.2364371570515527	WITHOUT_CLASSIFICATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.999127486674132	WITHOUT_CLASSIFICATION	8.725133258679243E-4	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999973321541666	WITHOUT_CLASSIFICATION	2.6678458332359624E-6	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999531709043178	WITHOUT_CLASSIFICATION	4.6829095682114984E-5	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999978263580025	WITHOUT_CLASSIFICATION	2.1736419975113504E-6	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9793050902291977	WITHOUT_CLASSIFICATION	0.020694909770802346	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9905861141321478	WITHOUT_CLASSIFICATION	0.009413885867852191	IMPLEMENTATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9997351890258644	WITHOUT_CLASSIFICATION	2.6481097413551903E-4	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999999908246555	WITHOUT_CLASSIFICATION	9.175344435332995E-9	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999981259194954	WITHOUT_CLASSIFICATION	1.8740805044670885E-6	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999968043534988	WITHOUT_CLASSIFICATION	3.1956465011856454E-6	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999972858591865	WITHOUT_CLASSIFICATION	2.7141408134291096E-6	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999875945209	WITHOUT_CLASSIFICATION	1.2405479108047934E-8	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999996865381754	WITHOUT_CLASSIFICATION	3.134618246439838E-7	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999998500251672	WITHOUT_CLASSIFICATION	1.4997483274558595E-7	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999991255305967	WITHOUT_CLASSIFICATION	8.744694032645063E-7	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999985546662167	WITHOUT_CLASSIFICATION	1.4453337833734505E-6	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.999999995188465	WITHOUT_CLASSIFICATION	4.811534940410679E-9	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999999292747996	WITHOUT_CLASSIFICATION	7.072520036811201E-8	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999988035880233	WITHOUT_CLASSIFICATION	1.1964119767925856E-6	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999999581410337	WITHOUT_CLASSIFICATION	4.185896632662036E-8	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999997409367848	WITHOUT_CLASSIFICATION	2.590632151993918E-7	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999994652354113	WITHOUT_CLASSIFICATION	5.347645886844851E-7	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999993723886289	WITHOUT_CLASSIFICATION	6.27611371184653E-7	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9999993320944964	WITHOUT_CLASSIFICATION	6.679055034947225E-7	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999997857292915	WITHOUT_CLASSIFICATION	2.1427070850246214E-7	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.999999905575591	WITHOUT_CLASSIFICATION	9.442440903929334E-8	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999999999470583	WITHOUT_CLASSIFICATION	5.294166033410393E-11	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999792706344	WITHOUT_CLASSIFICATION	2.0729365538474863E-8	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999920063746213	WITHOUT_CLASSIFICATION	7.993625378687737E-6	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999999494083662	WITHOUT_CLASSIFICATION	5.059163375193163E-8	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999160344437926	WITHOUT_CLASSIFICATION	8.396555620737236E-5	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999989981724721	WITHOUT_CLASSIFICATION	1.0018275279842676E-6	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999999936269661	WITHOUT_CLASSIFICATION	6.373033858374417E-9	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999964032587211	WITHOUT_CLASSIFICATION	3.596741278926629E-6	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999964032587211	WITHOUT_CLASSIFICATION	3.596741278926629E-6	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999986024673838	WITHOUT_CLASSIFICATION	1.3975326161364228E-6	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999999768569722	WITHOUT_CLASSIFICATION	2.3143027815201373E-8	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999999741633792	WITHOUT_CLASSIFICATION	2.5836620836789433E-8	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999999999991288	WITHOUT_CLASSIFICATION	8.712100454187528E-13	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999999999994	WITHOUT_CLASSIFICATION	5.760915542557321E-16	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999878069122	WITHOUT_CLASSIFICATION	1.2193087870335222E-8	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999930228547795	WITHOUT_CLASSIFICATION	6.977145220485251E-6	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999997268869412	WITHOUT_CLASSIFICATION	2.731130588395689E-7	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.999999454421853	WITHOUT_CLASSIFICATION	5.455781471193581E-7	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999999993185289	WITHOUT_CLASSIFICATION	6.814711745175354E-10	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999999985851078	WITHOUT_CLASSIFICATION	1.4148922678985423E-9	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999999967752079	WITHOUT_CLASSIFICATION	3.224792171274622E-9	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999999608162228	WITHOUT_CLASSIFICATION	3.9183777192672117E-8	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999231524770918	WITHOUT_CLASSIFICATION	7.6847522908177E-5	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999999488495491	WITHOUT_CLASSIFICATION	5.115045084670077E-8	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9996496717580372	WITHOUT_CLASSIFICATION	3.5032824196285477E-4	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999998756222186	WITHOUT_CLASSIFICATION	1.243777814219522E-7	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.999999997101836	WITHOUT_CLASSIFICATION	2.8981640697344494E-9	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999999879533713	WITHOUT_CLASSIFICATION	1.2046628666950733E-8	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999999892784195	WITHOUT_CLASSIFICATION	1.0721580509638191E-8	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.9999479334628052	WITHOUT_CLASSIFICATION	5.206653719478204E-5	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9996827712983103	WITHOUT_CLASSIFICATION	3.172287016896196E-4	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.999964626221513	WITHOUT_CLASSIFICATION	3.5373778487013604E-5	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999998414850854	WITHOUT_CLASSIFICATION	1.5851491454289565E-7	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999999895417728	WITHOUT_CLASSIFICATION	1.0458227168862447E-8	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999801996289	WITHOUT_CLASSIFICATION	1.9800371153889152E-8	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999999999921001	WITHOUT_CLASSIFICATION	7.899901841109037E-11	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.999999975116712	WITHOUT_CLASSIFICATION	2.4883287969444594E-8	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999999857102824	WITHOUT_CLASSIFICATION	1.4289717716429652E-8	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999999984300895	WITHOUT_CLASSIFICATION	1.5699104773729427E-9	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999993590488341	WITHOUT_CLASSIFICATION	6.409511658668865E-7	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.999999943951095	WITHOUT_CLASSIFICATION	5.604890492253142E-8	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999962060457	WITHOUT_CLASSIFICATION	3.793954243379257E-9	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999972541774813	WITHOUT_CLASSIFICATION	2.74582251859383E-6	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999999987967408	WITHOUT_CLASSIFICATION	1.2032591281223317E-9	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999904579856231	WITHOUT_CLASSIFICATION	9.542014376812354E-6	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999998242228819	WITHOUT_CLASSIFICATION	1.757771181528406E-7	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999998753287727	WITHOUT_CLASSIFICATION	1.2467122737708173E-7	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999381741747353	WITHOUT_CLASSIFICATION	6.182582526472026E-5	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999445546895	WITHOUT_CLASSIFICATION	5.544531046360726E-8	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999994647397255	WITHOUT_CLASSIFICATION	5.352602744824849E-7	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9988256147389538	WITHOUT_CLASSIFICATION	0.0011743852610461667	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999870185884983	WITHOUT_CLASSIFICATION	1.2981411501893692E-5	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999999009412417	WITHOUT_CLASSIFICATION	9.905875836955E-8	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999815551122816	WITHOUT_CLASSIFICATION	1.844488771839186E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999992959704864	WITHOUT_CLASSIFICATION	7.040295134968013E-7	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999994221213377	WITHOUT_CLASSIFICATION	5.778786622355325E-7	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999999644193971	WITHOUT_CLASSIFICATION	3.558060282432804E-8	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.9999986664481026	WITHOUT_CLASSIFICATION	1.333551897397472E-6	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999659216881598	WITHOUT_CLASSIFICATION	3.4078311840266894E-5	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999996105007106	WITHOUT_CLASSIFICATION	3.8949928933430787E-7	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999992741592172	WITHOUT_CLASSIFICATION	7.258407828279846E-7	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999999645243031	WITHOUT_CLASSIFICATION	3.547569687071409E-8	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999999877287995	WITHOUT_CLASSIFICATION	1.2271200512409179E-8	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999997930003404	WITHOUT_CLASSIFICATION	2.0699965973159953E-7	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999982948952848	WITHOUT_CLASSIFICATION	1.7051047150869512E-6	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999999874158121	WITHOUT_CLASSIFICATION	1.2584187992490107E-8	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999999906537098	WITHOUT_CLASSIFICATION	9.346290116710494E-9	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999833739203001	WITHOUT_CLASSIFICATION	1.6626079699939658E-5	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999998706645998	WITHOUT_CLASSIFICATION	1.293354000395202E-7	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999999928693303	WITHOUT_CLASSIFICATION	7.1306696970994466E-9	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999999551876951	WITHOUT_CLASSIFICATION	4.481230485788814E-8	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999999249609	WITHOUT_CLASSIFICATION	7.50390859247848E-11	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.999999993554738	WITHOUT_CLASSIFICATION	6.4452619842098136E-9	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9999263743960415	WITHOUT_CLASSIFICATION	7.362560395850952E-5	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999244030425	WITHOUT_CLASSIFICATION	7.55969574140945E-8	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999998793992884	WITHOUT_CLASSIFICATION	1.2060071156792463E-7	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999999929813272	WITHOUT_CLASSIFICATION	7.0186727017102734E-9	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.9999981633683657	WITHOUT_CLASSIFICATION	1.8366316342905282E-6	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999997604443847	WITHOUT_CLASSIFICATION	2.395556154033557E-7	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999974554852877	WITHOUT_CLASSIFICATION	2.544514712347163E-6	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999975670663355	WITHOUT_CLASSIFICATION	2.43293366460273E-6	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999994741643288	WITHOUT_CLASSIFICATION	5.25835671169367E-7	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999998402872247	WITHOUT_CLASSIFICATION	1.59712775409374E-7	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9999997836952831	WITHOUT_CLASSIFICATION	2.1630471690213276E-7	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9999993413831889	WITHOUT_CLASSIFICATION	6.586168110336017E-7	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9999996925600937	WITHOUT_CLASSIFICATION	3.074399063233999E-7	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9999996115376176	WITHOUT_CLASSIFICATION	3.88462382301672E-7	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9999995887476918	WITHOUT_CLASSIFICATION	4.112523082572874E-7	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9999996516711864	WITHOUT_CLASSIFICATION	3.483288135703524E-7	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9999995416329984	WITHOUT_CLASSIFICATION	4.583670015107309E-7	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9999996372571296	WITHOUT_CLASSIFICATION	3.6274287033964016E-7	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9999994202285555	WITHOUT_CLASSIFICATION	5.797714444837047E-7	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9999995202802447	WITHOUT_CLASSIFICATION	4.797197551734582E-7	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9999996165709746	WITHOUT_CLASSIFICATION	3.8342902537843854E-7	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9999997449902698	WITHOUT_CLASSIFICATION	2.55009730268466E-7	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9999995920960862	WITHOUT_CLASSIFICATION	4.0790391385954495E-7	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9999995997604617	WITHOUT_CLASSIFICATION	4.00239538182391E-7	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9999994933018761	WITHOUT_CLASSIFICATION	5.06698123928765E-7	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9999996303684904	WITHOUT_CLASSIFICATION	3.6963150963471565E-7	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9999994760918789	WITHOUT_CLASSIFICATION	5.23908121065949E-7	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.99999990952366	WITHOUT_CLASSIFICATION	9.047633995599461E-8	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9999996751904947	WITHOUT_CLASSIFICATION	3.2480950539177117E-7	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9999986444854332	WITHOUT_CLASSIFICATION	1.3555145668250873E-6	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9968016159859945	WITHOUT_CLASSIFICATION	0.003198384014005491	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9996450479367384	WITHOUT_CLASSIFICATION	3.5495206326164144E-4	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.999996998589456	WITHOUT_CLASSIFICATION	3.001410543963149E-6	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999988138279098	WITHOUT_CLASSIFICATION	1.1861720901698193E-6	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999998811113661	WITHOUT_CLASSIFICATION	1.1888863388664908E-7	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999986864441034	WITHOUT_CLASSIFICATION	1.3135558966197885E-6	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9358871767196807	WITHOUT_CLASSIFICATION	0.06411282328031924	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999996983780328	WITHOUT_CLASSIFICATION	3.0162196715761675E-7	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999887752472443	WITHOUT_CLASSIFICATION	1.1224752755788967E-5	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.6982301245343222	IMPLEMENTATION	0.3017698754656779	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9999987138629767	WITHOUT_CLASSIFICATION	1.2861370234289684E-6	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.999999999955371	WITHOUT_CLASSIFICATION	4.4628935222918465E-11	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999999741005915	WITHOUT_CLASSIFICATION	2.5899408527258852E-8	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999999741005915	WITHOUT_CLASSIFICATION	2.5899408527258852E-8	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999998840960057	WITHOUT_CLASSIFICATION	1.1590399436499666E-7	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999843927936733	WITHOUT_CLASSIFICATION	1.560720632658019E-5	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999999967123	WITHOUT_CLASSIFICATION	3.287777513985673E-12	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999992921221149	WITHOUT_CLASSIFICATION	7.078778850235088E-7	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999992582315655	WITHOUT_CLASSIFICATION	7.417684345598492E-7	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999988228042468	WITHOUT_CLASSIFICATION	1.1771957532324795E-6	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9999998892694931	WITHOUT_CLASSIFICATION	1.1073050688823874E-7	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999975517325791	WITHOUT_CLASSIFICATION	2.4482674208710513E-6	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9999975836581361	WITHOUT_CLASSIFICATION	2.416341863962331E-6	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.999999851951524	WITHOUT_CLASSIFICATION	1.4804847603171028E-7	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999941320915009	WITHOUT_CLASSIFICATION	5.867908499172676E-6	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999999092172882	WITHOUT_CLASSIFICATION	9.078271174863873E-8	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9999998769719174	WITHOUT_CLASSIFICATION	1.23028082532361E-7	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999999028191409	WITHOUT_CLASSIFICATION	9.718085912077734E-8	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999990984034275	WITHOUT_CLASSIFICATION	9.015965725570566E-7	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.999997624065157	WITHOUT_CLASSIFICATION	2.3759348428598104E-6	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999999226094893	WITHOUT_CLASSIFICATION	7.739051069677236E-8	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.999999983123238	WITHOUT_CLASSIFICATION	1.6876761916181537E-8	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999997606771793	WITHOUT_CLASSIFICATION	2.3932282067314996E-7	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999933649336834	WITHOUT_CLASSIFICATION	6.635066316546407E-6	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999999956964942	WITHOUT_CLASSIFICATION	4.3035057667618205E-9	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999999948971692	WITHOUT_CLASSIFICATION	5.1028308283762896E-9	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999967268083729	WITHOUT_CLASSIFICATION	3.2731916270814774E-6	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999999999328606	WITHOUT_CLASSIFICATION	6.713936445794941E-11	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999991301060626	WITHOUT_CLASSIFICATION	8.698939373910171E-7	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999980297722656	WITHOUT_CLASSIFICATION	1.970227734438962E-6	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999999934378483	WITHOUT_CLASSIFICATION	6.562151727615156E-9	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999998105787217	WITHOUT_CLASSIFICATION	1.8942127842163544E-7	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999977336167843	WITHOUT_CLASSIFICATION	2.266383215760124E-6	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999981531144332	WITHOUT_CLASSIFICATION	1.846885566726914E-6	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999981441166219	WITHOUT_CLASSIFICATION	1.8558833780495639E-6	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999965048956206	WITHOUT_CLASSIFICATION	3.4951043793233346E-6	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999968611500263	WITHOUT_CLASSIFICATION	3.138849973734754E-6	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999980208030089	WITHOUT_CLASSIFICATION	1.9791969911545185E-6	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999993813385225	WITHOUT_CLASSIFICATION	6.186614774687304E-7	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.999998788235933	WITHOUT_CLASSIFICATION	1.2117640669748217E-6	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999691224435	WITHOUT_CLASSIFICATION	3.087755647992719E-8	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999999987087239	WITHOUT_CLASSIFICATION	1.2912760988905057E-9	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999465743932698	WITHOUT_CLASSIFICATION	5.342560673025192E-5	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999999018137368	WITHOUT_CLASSIFICATION	9.818626323053455E-8	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9971201894273354	WITHOUT_CLASSIFICATION	0.002879810572664581	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999937441303886	WITHOUT_CLASSIFICATION	6.255869611488327E-6	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.999981572337449	WITHOUT_CLASSIFICATION	1.8427662550962673E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999409032407817	WITHOUT_CLASSIFICATION	5.909675921819265E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999409032407817	WITHOUT_CLASSIFICATION	5.909675921819265E-5	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999999657491708	WITHOUT_CLASSIFICATION	3.4250829081871493E-8	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999988437534127	WITHOUT_CLASSIFICATION	1.1562465872463828E-6	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999999100762131	WITHOUT_CLASSIFICATION	8.992378692490341E-8	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9999980992868255	WITHOUT_CLASSIFICATION	1.9007131744540361E-6	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999995629526955	WITHOUT_CLASSIFICATION	4.370473045338924E-7	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9999997278662375	WITHOUT_CLASSIFICATION	2.7213376262211153E-7	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999972409229093	WITHOUT_CLASSIFICATION	2.759077090695679E-6	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999785767554887	WITHOUT_CLASSIFICATION	2.1423244511315676E-5	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999980360613013	WITHOUT_CLASSIFICATION	1.963938698630152E-6	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999995618502412	WITHOUT_CLASSIFICATION	4.381497587678352E-7	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999997959931501	WITHOUT_CLASSIFICATION	2.0400684983601275E-7	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999997739330307	WITHOUT_CLASSIFICATION	2.2606696932990676E-7	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999997037355666	WITHOUT_CLASSIFICATION	2.962644334971311E-7	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999999982563517	WITHOUT_CLASSIFICATION	1.7436482365777825E-9	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.949178093103794	WITHOUT_CLASSIFICATION	0.050821906896205936	IMPLEMENTATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9998445554303713	WITHOUT_CLASSIFICATION	1.5544456962864796E-4	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999952293904224	WITHOUT_CLASSIFICATION	4.7706095776166205E-6	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999999784037039	WITHOUT_CLASSIFICATION	2.1596296078504547E-8	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999974418923981	WITHOUT_CLASSIFICATION	2.5581076019086004E-6	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999975746859602	WITHOUT_CLASSIFICATION	2.4253140398692524E-6	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999993780763673	WITHOUT_CLASSIFICATION	6.219236326457262E-7	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999993780763673	WITHOUT_CLASSIFICATION	6.219236326457262E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999299204922	WITHOUT_CLASSIFICATION	7.007950774759824E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999299204922	WITHOUT_CLASSIFICATION	7.007950774759824E-8	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999999593092856	WITHOUT_CLASSIFICATION	4.0690714440954214E-8	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999989911767043	WITHOUT_CLASSIFICATION	1.0088232955941948E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999964980538086	WITHOUT_CLASSIFICATION	3.5019461913690123E-6	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999867335612	WITHOUT_CLASSIFICATION	1.3266438964292435E-8	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999999933022473	WITHOUT_CLASSIFICATION	6.697752602191045E-9	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999987749063	WITHOUT_CLASSIFICATION	1.2250936845176815E-9	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9951257266332453	WITHOUT_CLASSIFICATION	0.004874273366754684	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9999997418204042	WITHOUT_CLASSIFICATION	2.5817959577221687E-7	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999997107083552	WITHOUT_CLASSIFICATION	2.892916447447707E-7	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999997537276434	WITHOUT_CLASSIFICATION	2.4627235658847404E-7	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999999946303093	WITHOUT_CLASSIFICATION	5.369690714488988E-9	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.999999925558436	WITHOUT_CLASSIFICATION	7.444156406119222E-8	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999999996925932	WITHOUT_CLASSIFICATION	3.0740682129678245E-10	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999989528795741	WITHOUT_CLASSIFICATION	1.0471204259709054E-6	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.999999942991462	WITHOUT_CLASSIFICATION	5.7008538025261596E-8	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.9999991866762584	WITHOUT_CLASSIFICATION	8.133237415753238E-7	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9996648455385769	WITHOUT_CLASSIFICATION	3.351544614231082E-4	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999999921781494	WITHOUT_CLASSIFICATION	7.821850582533684E-9	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9999980955866343	WITHOUT_CLASSIFICATION	1.904413365650267E-6	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999803249566134	WITHOUT_CLASSIFICATION	1.967504338662984E-5	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.999999426306996	WITHOUT_CLASSIFICATION	5.736930038990684E-7	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999991284931732	WITHOUT_CLASSIFICATION	8.715068268073951E-7	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999999965282017	WITHOUT_CLASSIFICATION	3.471798366592836E-9	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.999999995188465	WITHOUT_CLASSIFICATION	4.811534940410679E-9	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999878069122	WITHOUT_CLASSIFICATION	1.2193087870335222E-8	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999983151383631	WITHOUT_CLASSIFICATION	1.684861636899063E-6	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999999921589606	WITHOUT_CLASSIFICATION	7.84103934178881E-9	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999999937320395	WITHOUT_CLASSIFICATION	6.267960541215132E-9	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999997687543168	WITHOUT_CLASSIFICATION	2.3124568307812737E-7	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999997607719668	WITHOUT_CLASSIFICATION	2.392280331458805E-7	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999997607719668	WITHOUT_CLASSIFICATION	2.392280331458805E-7	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999468064866	WITHOUT_CLASSIFICATION	5.3193513359066835E-8	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999962911958477	WITHOUT_CLASSIFICATION	3.708804152382467E-6	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999932157168082	WITHOUT_CLASSIFICATION	6.7842831917208455E-6	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999999885592837	WITHOUT_CLASSIFICATION	1.1440716317119504E-8	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999998271959649	WITHOUT_CLASSIFICATION	1.7280403514499395E-7	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9999982387465817	WITHOUT_CLASSIFICATION	1.7612534183595352E-6	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.999996780362152	WITHOUT_CLASSIFICATION	3.219637848097576E-6	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999943971740611	WITHOUT_CLASSIFICATION	5.6028259388512755E-6	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999995375688865	WITHOUT_CLASSIFICATION	4.624311135600731E-7	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999999927484715	WITHOUT_CLASSIFICATION	7.251528480946142E-9	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.999999967519519	WITHOUT_CLASSIFICATION	3.248048090557651E-8	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999997654989091	WITHOUT_CLASSIFICATION	2.345010909964476E-7	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999932657940366	WITHOUT_CLASSIFICATION	6.734205963342452E-6	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999999996416411	WITHOUT_CLASSIFICATION	3.5835891062180733E-10	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999999985187845	WITHOUT_CLASSIFICATION	1.4812154364527366E-9	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999864873344	WITHOUT_CLASSIFICATION	1.3512665606441925E-7	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999994704622466	WITHOUT_CLASSIFICATION	5.295377534530916E-7	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999999272089221	WITHOUT_CLASSIFICATION	7.27910779299505E-8	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999988074316718	WITHOUT_CLASSIFICATION	1.1925683281782339E-6	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999995151470751	WITHOUT_CLASSIFICATION	4.84852924931421E-7	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999999979633871	WITHOUT_CLASSIFICATION	2.0366129550572406E-9	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999999961537953	WITHOUT_CLASSIFICATION	3.846204691432786E-9	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999999914258275	WITHOUT_CLASSIFICATION	8.574172440696437E-9	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9999987881113059	WITHOUT_CLASSIFICATION	1.2118886940331229E-6	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999999941223772	WITHOUT_CLASSIFICATION	5.877622794092625E-9	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999999389706515	WITHOUT_CLASSIFICATION	6.102934845379536E-8	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999994827323391	WITHOUT_CLASSIFICATION	5.17267660939792E-7	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999999989665741	WITHOUT_CLASSIFICATION	1.033425917314734E-9	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.999999999791157	WITHOUT_CLASSIFICATION	2.0884300338039925E-10	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999996574953314	WITHOUT_CLASSIFICATION	3.425046686449256E-7	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999546907429807	WITHOUT_CLASSIFICATION	4.530925701930865E-5	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999985910405762	WITHOUT_CLASSIFICATION	1.4089594237428333E-6	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999999836684186	WITHOUT_CLASSIFICATION	1.6331581468717714E-8	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9999864687206526	WITHOUT_CLASSIFICATION	1.3531279347563635E-5	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999983526838738	WITHOUT_CLASSIFICATION	1.6473161261073023E-6	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999850123003444	WITHOUT_CLASSIFICATION	1.4987699655582816E-5	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999995410871769	WITHOUT_CLASSIFICATION	4.5891282310820327E-7	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999959711669124	WITHOUT_CLASSIFICATION	4.02883308752365E-6	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999996467002941	WITHOUT_CLASSIFICATION	3.5329970586620586E-7	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999837905704707	WITHOUT_CLASSIFICATION	1.620942952929023E-5	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999531575856	WITHOUT_CLASSIFICATION	4.684241437261558E-8	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999991542718857	WITHOUT_CLASSIFICATION	8.457281143596597E-7	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9999997780904892	WITHOUT_CLASSIFICATION	2.2190951078270736E-7	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.999999971323002	WITHOUT_CLASSIFICATION	2.867699795525864E-8	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999992527251119	WITHOUT_CLASSIFICATION	7.472748880627896E-7	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999999790009745	WITHOUT_CLASSIFICATION	2.0999025509910105E-8	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999999514640209	WITHOUT_CLASSIFICATION	4.853597921253671E-8	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999843167287	WITHOUT_CLASSIFICATION	1.5683271297937658E-8	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999979284497666	WITHOUT_CLASSIFICATION	2.071550233434479E-6	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9999992883368237	WITHOUT_CLASSIFICATION	7.116631763360972E-7	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999998665774157	WITHOUT_CLASSIFICATION	1.3342258439796092E-7	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999998322341459	WITHOUT_CLASSIFICATION	1.6776585415789326E-7	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999982284730122	WITHOUT_CLASSIFICATION	1.7715269877278165E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999990304782567	WITHOUT_CLASSIFICATION	9.695217433447936E-7	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.999999595596694	WITHOUT_CLASSIFICATION	4.0440330593109553E-7	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999993295267197	WITHOUT_CLASSIFICATION	6.704732802824065E-7	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999981971989232	WITHOUT_CLASSIFICATION	1.802801076751912E-6	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999999999739275	WITHOUT_CLASSIFICATION	2.607245002798185E-11	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999996653748622	WITHOUT_CLASSIFICATION	3.3462513783461E-7	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999999571159714	WITHOUT_CLASSIFICATION	4.28840285340117E-8	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999990164152246	WITHOUT_CLASSIFICATION	9.835847754276889E-7	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999998665774157	WITHOUT_CLASSIFICATION	1.3342258439796092E-7	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999982284730122	WITHOUT_CLASSIFICATION	1.7715269877278165E-6	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999998322341459	WITHOUT_CLASSIFICATION	1.6776585415789326E-7	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999998158033621	WITHOUT_CLASSIFICATION	1.8419663792358445E-7	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999996925706913	WITHOUT_CLASSIFICATION	3.0742930873887163E-7	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999998173110654	WITHOUT_CLASSIFICATION	1.8268893468626763E-7	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9999997586382926	WITHOUT_CLASSIFICATION	2.4136170737756254E-7	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9996693847175754	WITHOUT_CLASSIFICATION	3.306152824245826E-4	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999996494301838	WITHOUT_CLASSIFICATION	3.505698162507743E-7	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999996777500878	WITHOUT_CLASSIFICATION	3.222499121215684E-7	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999998129230874	WITHOUT_CLASSIFICATION	1.8707691267888545E-7	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999978435820951	WITHOUT_CLASSIFICATION	2.156417904907057E-6	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999999782766584	WITHOUT_CLASSIFICATION	2.17233416008265E-8	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999999151557761	WITHOUT_CLASSIFICATION	8.484422379954533E-8	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999864659354463	WITHOUT_CLASSIFICATION	1.3534064553644837E-5	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999994742367688	WITHOUT_CLASSIFICATION	5.257632312096413E-7	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9999977744910936	WITHOUT_CLASSIFICATION	2.225508906336763E-6	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999999801167739	WITHOUT_CLASSIFICATION	1.988322611659081E-8	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9999986177905569	WITHOUT_CLASSIFICATION	1.3822094431550135E-6	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.9999923924653605	WITHOUT_CLASSIFICATION	7.607534639504293E-6	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999984278115528	WITHOUT_CLASSIFICATION	1.5721884471680305E-6	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999984278115528	WITHOUT_CLASSIFICATION	1.5721884471680305E-6	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.999997561342422	WITHOUT_CLASSIFICATION	2.438657577893263E-6	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.9999999861839437	WITHOUT_CLASSIFICATION	1.381605637290172E-8	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999994775623109	WITHOUT_CLASSIFICATION	5.224376890993545E-7	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999585394274545	WITHOUT_CLASSIFICATION	4.14605725454424E-5	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999987967544584	WITHOUT_CLASSIFICATION	1.2032455416621137E-6	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999999134966283	WITHOUT_CLASSIFICATION	8.650337164620157E-8	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999999545221403	WITHOUT_CLASSIFICATION	4.547785975425894E-8	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999999597802443	WITHOUT_CLASSIFICATION	4.021975578445454E-8	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.999988492601051	WITHOUT_CLASSIFICATION	1.150739894890806E-5	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999998852607628	WITHOUT_CLASSIFICATION	1.1473923724390496E-7	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999999261794025	WITHOUT_CLASSIFICATION	7.382059749112761E-8	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9999980200619196	WITHOUT_CLASSIFICATION	1.9799380804606372E-6	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.999999895739879	WITHOUT_CLASSIFICATION	1.042601210320874E-7	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.999998698174635	WITHOUT_CLASSIFICATION	1.3018253649456338E-6	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9997837861323174	WITHOUT_CLASSIFICATION	2.1621386768250377E-4	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999764994394	WITHOUT_CLASSIFICATION	2.3500560583479246E-8	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999997344999846	WITHOUT_CLASSIFICATION	2.65500015403939E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997937121683	WITHOUT_CLASSIFICATION	2.0628783171092867E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997937121683	WITHOUT_CLASSIFICATION	2.0628783171092867E-7	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9999994010087861	WITHOUT_CLASSIFICATION	5.989912138355066E-7	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9999999543196139	WITHOUT_CLASSIFICATION	4.5680386116652755E-8	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999999889756224	WITHOUT_CLASSIFICATION	1.1024377573843377E-8	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9999969946626004	WITHOUT_CLASSIFICATION	3.005337399622607E-6	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999992922363499	WITHOUT_CLASSIFICATION	7.07763650063148E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997937121683	WITHOUT_CLASSIFICATION	2.0628783171092867E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997937121683	WITHOUT_CLASSIFICATION	2.0628783171092867E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999956009308894	WITHOUT_CLASSIFICATION	4.399069110673805E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999956009308894	WITHOUT_CLASSIFICATION	4.399069110673805E-6	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999933819536456	WITHOUT_CLASSIFICATION	6.618046354319233E-6	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999965876378388	WITHOUT_CLASSIFICATION	3.4123621611628577E-6	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999999662163239	WITHOUT_CLASSIFICATION	3.378367600337389E-8	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999999200163266	WITHOUT_CLASSIFICATION	7.998367336421535E-8	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999998051461245	WITHOUT_CLASSIFICATION	1.94853875447478E-7	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999998051461245	WITHOUT_CLASSIFICATION	1.94853875447478E-7	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999999902678178	WITHOUT_CLASSIFICATION	9.73218228717241E-9	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999973707640953	WITHOUT_CLASSIFICATION	2.629235904659814E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999742884192	WITHOUT_CLASSIFICATION	2.5711580809148523E-8	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.999992270264886	WITHOUT_CLASSIFICATION	7.729735113929271E-6	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999957003195525	WITHOUT_CLASSIFICATION	4.299680447500303E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999986206781563	WITHOUT_CLASSIFICATION	1.3793218437324986E-6	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9996320707611077	WITHOUT_CLASSIFICATION	3.6792923889229106E-4	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999999787498589	WITHOUT_CLASSIFICATION	2.1250141121236054E-8	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999999978945436	WITHOUT_CLASSIFICATION	2.105456257872472E-9	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999999989009596	WITHOUT_CLASSIFICATION	1.099040428909621E-9	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999711459711743	WITHOUT_CLASSIFICATION	2.8854028825793357E-5	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999999456077611	WITHOUT_CLASSIFICATION	5.4392238878783625E-8	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999994702370157	WITHOUT_CLASSIFICATION	5.297629842009257E-7	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999999864699273	WITHOUT_CLASSIFICATION	1.3530072687448015E-8	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999764994394	WITHOUT_CLASSIFICATION	2.3500560583479246E-8	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997937121683	WITHOUT_CLASSIFICATION	2.0628783171092867E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999956009308894	WITHOUT_CLASSIFICATION	4.399069110673805E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999986206781563	WITHOUT_CLASSIFICATION	1.3793218437324986E-6	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999995028519	WITHOUT_CLASSIFICATION	4.971481433750173E-10	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999995028519	WITHOUT_CLASSIFICATION	4.971481433750173E-10	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999927339795448	WITHOUT_CLASSIFICATION	7.266020455278629E-6	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999999992500374	WITHOUT_CLASSIFICATION	7.49962631459365E-10	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999999944004924	WITHOUT_CLASSIFICATION	5.599507649555793E-9	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999768874437	WITHOUT_CLASSIFICATION	2.3112556250200365E-8	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999991640567508	WITHOUT_CLASSIFICATION	8.359432491651894E-7	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999999982203418	WITHOUT_CLASSIFICATION	1.7796581488691652E-9	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999999497469811	WITHOUT_CLASSIFICATION	5.025301885879135E-8	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999997208146317	WITHOUT_CLASSIFICATION	2.791853682245439E-7	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999992926274	WITHOUT_CLASSIFICATION	7.073725730631017E-10	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999998251601988	WITHOUT_CLASSIFICATION	1.7483980126581153E-7	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999958435557996	WITHOUT_CLASSIFICATION	4.1564442003746265E-6	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999588607381	WITHOUT_CLASSIFICATION	4.113926194381247E-8	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999999895889281	WITHOUT_CLASSIFICATION	1.0411071781903772E-8	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999997344999846	WITHOUT_CLASSIFICATION	2.65500015403939E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999956009308894	WITHOUT_CLASSIFICATION	4.399069110673805E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999973707640953	WITHOUT_CLASSIFICATION	2.629235904659814E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999742884192	WITHOUT_CLASSIFICATION	2.5711580809148523E-8	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999742884192	WITHOUT_CLASSIFICATION	2.5711580809148523E-8	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999957003195525	WITHOUT_CLASSIFICATION	4.299680447500303E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999986206781563	WITHOUT_CLASSIFICATION	1.3793218437324986E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999986206781563	WITHOUT_CLASSIFICATION	1.3793218437324986E-6	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999995028519	WITHOUT_CLASSIFICATION	4.971481433750173E-10	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999107098705092	WITHOUT_CLASSIFICATION	8.929012949075164E-5	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999996436967938	WITHOUT_CLASSIFICATION	3.563032061544992E-7	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999999998633	WITHOUT_CLASSIFICATION	1.3658231463723715E-13	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999957057391855	WITHOUT_CLASSIFICATION	4.2942608144466515E-6	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999915113269243	WITHOUT_CLASSIFICATION	8.48867307569703E-6	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.999974354743215	WITHOUT_CLASSIFICATION	2.5645256784961414E-5	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999987587089831	WITHOUT_CLASSIFICATION	1.2412910167585507E-6	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999999988425903	WITHOUT_CLASSIFICATION	1.1574097199898375E-9	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999998494118794	WITHOUT_CLASSIFICATION	1.5058812062789825E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999973707640953	WITHOUT_CLASSIFICATION	2.629235904659814E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999742884192	WITHOUT_CLASSIFICATION	2.5711580809148523E-8	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999742884192	WITHOUT_CLASSIFICATION	2.5711580809148523E-8	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999957003195525	WITHOUT_CLASSIFICATION	4.299680447500303E-6	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999997208146317	WITHOUT_CLASSIFICATION	2.791853682245439E-7	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999998251601988	WITHOUT_CLASSIFICATION	1.7483980126581153E-7	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999414551393017	WITHOUT_CLASSIFICATION	5.854486069825032E-5	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999945143433844	WITHOUT_CLASSIFICATION	5.485656615675681E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999934219454545	WITHOUT_CLASSIFICATION	6.578054545530588E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999934219454545	WITHOUT_CLASSIFICATION	6.578054545530588E-6	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999998826741864	WITHOUT_CLASSIFICATION	1.173258136563283E-7	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999999971339876	WITHOUT_CLASSIFICATION	2.866012489583224E-9	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999999784037472	WITHOUT_CLASSIFICATION	2.159625285320559E-8	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999922133689146	WITHOUT_CLASSIFICATION	7.786631085379626E-6	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999998671128851	WITHOUT_CLASSIFICATION	1.328871149194037E-7	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999998671128851	WITHOUT_CLASSIFICATION	1.328871149194037E-7	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9997851837670484	WITHOUT_CLASSIFICATION	2.148162329515444E-4	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9997851837670484	WITHOUT_CLASSIFICATION	2.148162329515444E-4	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999999666310997	WITHOUT_CLASSIFICATION	3.336890031222719E-8	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999999666310997	WITHOUT_CLASSIFICATION	3.336890031222719E-8	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999998907784177	WITHOUT_CLASSIFICATION	1.0922158241471628E-7	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999997860407934	WITHOUT_CLASSIFICATION	2.1395920660295323E-7	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999694577281646	WITHOUT_CLASSIFICATION	3.054227183542505E-5	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999997442985266	WITHOUT_CLASSIFICATION	2.557014735393759E-7	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999995036895856	WITHOUT_CLASSIFICATION	4.963104143468471E-7	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.9999998935365608	WITHOUT_CLASSIFICATION	1.064634392315301E-7	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999997967690306	WITHOUT_CLASSIFICATION	2.0323096935602557E-7	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999990772329531	WITHOUT_CLASSIFICATION	9.22767046990853E-7	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999996808549089	WITHOUT_CLASSIFICATION	3.1914509110288706E-7	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999999888167582	WITHOUT_CLASSIFICATION	1.1183241756080601E-8	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9998895948221342	WITHOUT_CLASSIFICATION	1.1040517786568294E-4	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999996469373484	WITHOUT_CLASSIFICATION	3.5306265152097544E-7	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999998766998353	WITHOUT_CLASSIFICATION	1.2330016480839462E-7	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.999999051709222	WITHOUT_CLASSIFICATION	9.482907779518043E-7	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.999999051709222	WITHOUT_CLASSIFICATION	9.482907779518043E-7	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999998828635548	WITHOUT_CLASSIFICATION	1.1713644521565293E-7	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999987749063	WITHOUT_CLASSIFICATION	1.2250936845176815E-9	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999360068701302	WITHOUT_CLASSIFICATION	6.399312986977331E-5	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.999999999952878	WITHOUT_CLASSIFICATION	4.712187741925162E-11	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.999999998546238	WITHOUT_CLASSIFICATION	1.4537620496043442E-9	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999867517322849	WITHOUT_CLASSIFICATION	1.3248267715101929E-5	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999999620847854	WITHOUT_CLASSIFICATION	3.791521462900971E-8	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999985972040885	WITHOUT_CLASSIFICATION	1.4027959115254173E-6	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999998897090138	WITHOUT_CLASSIFICATION	1.1029098626938759E-7	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999999939759395	WITHOUT_CLASSIFICATION	6.024060500234364E-9	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.99999978314448	WITHOUT_CLASSIFICATION	2.1685551988958682E-7	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999848386082003	WITHOUT_CLASSIFICATION	1.5161391799644973E-5	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999999325813881	WITHOUT_CLASSIFICATION	6.741861183068407E-8	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9979179953812243	WITHOUT_CLASSIFICATION	0.0020820046187757213	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999991947092813	WITHOUT_CLASSIFICATION	8.052907186065759E-7	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999999016394647	WITHOUT_CLASSIFICATION	9.836053534271698E-8	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9999897976715107	WITHOUT_CLASSIFICATION	1.02023284893861E-5	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999988581454616	WITHOUT_CLASSIFICATION	1.1418545383068115E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999976327569	WITHOUT_CLASSIFICATION	2.36724309989287E-9	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999976327569	WITHOUT_CLASSIFICATION	2.36724309989287E-9	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999995981108165	WITHOUT_CLASSIFICATION	4.018891834764752E-7	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999999986877396	WITHOUT_CLASSIFICATION	1.3122603844905566E-9	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999968027537607	WITHOUT_CLASSIFICATION	3.197246239356457E-6	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999968027537607	WITHOUT_CLASSIFICATION	3.197246239356457E-6	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999918294592015	WITHOUT_CLASSIFICATION	8.170540798472911E-6	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999999932398121	WITHOUT_CLASSIFICATION	6.7601878513484485E-9	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.999999254853082	WITHOUT_CLASSIFICATION	7.451469178447092E-7	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999999772794402	WITHOUT_CLASSIFICATION	2.272055980840693E-8	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.999999998482422	WITHOUT_CLASSIFICATION	1.5175779286300937E-9	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.999999985436571	WITHOUT_CLASSIFICATION	1.4563429166322545E-8	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.999999985436571	WITHOUT_CLASSIFICATION	1.4563429166322545E-8	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999997664936707	WITHOUT_CLASSIFICATION	2.335063292594061E-7	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999999988599868	WITHOUT_CLASSIFICATION	1.1400131056447544E-9	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999988741887276	WITHOUT_CLASSIFICATION	1.1258112724922529E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999999981266224	WITHOUT_CLASSIFICATION	1.8733775499418753E-9	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999999986877396	WITHOUT_CLASSIFICATION	1.3122603844905566E-9	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999999423583942	WITHOUT_CLASSIFICATION	5.7641605826465304E-8	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999999979448309	WITHOUT_CLASSIFICATION	2.055169133243162E-9	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999999979448309	WITHOUT_CLASSIFICATION	2.055169133243162E-9	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999691231139882	WITHOUT_CLASSIFICATION	3.087688601178347E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999974238354	WITHOUT_CLASSIFICATION	2.5761645811367303E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999974238354	WITHOUT_CLASSIFICATION	2.5761645811367303E-9	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999920343846298	WITHOUT_CLASSIFICATION	7.965615370238797E-6	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999920343846298	WITHOUT_CLASSIFICATION	7.965615370238797E-6	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999920343846298	WITHOUT_CLASSIFICATION	7.965615370238797E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999974238354	WITHOUT_CLASSIFICATION	2.5761645811367303E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999974238354	WITHOUT_CLASSIFICATION	2.5761645811367303E-9	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999691231139882	WITHOUT_CLASSIFICATION	3.087688601178347E-5	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.999999968668812	WITHOUT_CLASSIFICATION	3.1331187985794435E-8	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9999999393138522	WITHOUT_CLASSIFICATION	6.068614785093266E-8	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999983404025521	WITHOUT_CLASSIFICATION	1.659597447954127E-6	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9999960316684154	WITHOUT_CLASSIFICATION	3.968331584556875E-6	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999993102733	WITHOUT_CLASSIFICATION	6.897266141025769E-10	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999073426470952	WITHOUT_CLASSIFICATION	9.265735290472933E-5	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999999173477166	WITHOUT_CLASSIFICATION	8.265228336795241E-8	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999999989155111	WITHOUT_CLASSIFICATION	1.0844889296083275E-9	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.99999978314448	WITHOUT_CLASSIFICATION	2.1685551988958682E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999974238354	WITHOUT_CLASSIFICATION	2.5761645811367303E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999974238354	WITHOUT_CLASSIFICATION	2.5761645811367303E-9	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999998581632	WITHOUT_CLASSIFICATION	1.4183682400345058E-10	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999849009471778	WITHOUT_CLASSIFICATION	1.5099052822276291E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999999703176328	WITHOUT_CLASSIFICATION	2.9682367169408275E-8	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999992810211	WITHOUT_CLASSIFICATION	7.189789960967883E-10	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999688355084833	WITHOUT_CLASSIFICATION	3.116449151667151E-5	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999949914622958	WITHOUT_CLASSIFICATION	5.008537704264824E-6	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999992301619	WITHOUT_CLASSIFICATION	7.698381009224096E-10	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.999999875906023	WITHOUT_CLASSIFICATION	1.2409397694620732E-7	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999995675139534	WITHOUT_CLASSIFICATION	4.3248604659932227E-7	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999815454487	WITHOUT_CLASSIFICATION	1.8454551302752582E-8	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999950054962135	WITHOUT_CLASSIFICATION	4.994503786573597E-6	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999997308645711	WITHOUT_CLASSIFICATION	2.691354289138523E-7	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999979508485494	WITHOUT_CLASSIFICATION	2.0491514507203012E-6	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999878721391734	WITHOUT_CLASSIFICATION	1.2127860826617746E-5	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999996926170247	WITHOUT_CLASSIFICATION	3.073829752703438E-7	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999999498063228	WITHOUT_CLASSIFICATION	5.0193677179858234E-8	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999999498063228	WITHOUT_CLASSIFICATION	5.0193677179858234E-8	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999999498063228	WITHOUT_CLASSIFICATION	5.0193677179858234E-8	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999997095003547	WITHOUT_CLASSIFICATION	2.9049964537054446E-7	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999473661876	WITHOUT_CLASSIFICATION	5.263381232488816E-8	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999991397416567	WITHOUT_CLASSIFICATION	8.602583434218392E-7	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999998749638052	WITHOUT_CLASSIFICATION	1.2503619476717786E-7	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999953061453389	WITHOUT_CLASSIFICATION	4.693854661087663E-6	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999996498801955	WITHOUT_CLASSIFICATION	3.5011980448636864E-7	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999999999679915	WITHOUT_CLASSIFICATION	3.200847306359652E-11	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999999932952895	WITHOUT_CLASSIFICATION	6.704710471159376E-9	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999999939681862	WITHOUT_CLASSIFICATION	6.031813786344071E-9	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999999960101388	WITHOUT_CLASSIFICATION	3.989861201504033E-9	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999403199792792	WITHOUT_CLASSIFICATION	5.968002072083106E-5	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999771081197787	WITHOUT_CLASSIFICATION	2.2891880221344687E-5	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999997664936707	WITHOUT_CLASSIFICATION	2.335063292594061E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999974238354	WITHOUT_CLASSIFICATION	2.5761645811367303E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999974238354	WITHOUT_CLASSIFICATION	2.5761645811367303E-9	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999691231139882	WITHOUT_CLASSIFICATION	3.087688601178347E-5	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999073426470952	WITHOUT_CLASSIFICATION	9.265735290472933E-5	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999849009471778	WITHOUT_CLASSIFICATION	1.5099052822276291E-5	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999992810211	WITHOUT_CLASSIFICATION	7.189789960967883E-10	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999949914622958	WITHOUT_CLASSIFICATION	5.008537704264824E-6	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999999703176328	WITHOUT_CLASSIFICATION	2.9682367169408275E-8	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999992301619	WITHOUT_CLASSIFICATION	7.698381009224096E-10	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999815454487	WITHOUT_CLASSIFICATION	1.8454551302752582E-8	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999995675139534	WITHOUT_CLASSIFICATION	4.3248604659932227E-7	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999997308645711	WITHOUT_CLASSIFICATION	2.691354289138523E-7	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999795262568785	WITHOUT_CLASSIFICATION	2.0473743121534423E-5	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999746574525417	WITHOUT_CLASSIFICATION	2.5342547458441775E-5	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.999995995865643	WITHOUT_CLASSIFICATION	4.004134356951248E-6	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999999973264347	WITHOUT_CLASSIFICATION	2.6735652013668746E-9	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999992760175594	WITHOUT_CLASSIFICATION	7.239824405735172E-7	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999991023825414	WITHOUT_CLASSIFICATION	8.97617458493846E-7	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999999041020058	WITHOUT_CLASSIFICATION	9.589799425813674E-8	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999981760879552	WITHOUT_CLASSIFICATION	1.8239120448334794E-6	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999973816119727	WITHOUT_CLASSIFICATION	2.618388027408822E-6	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999996877082384	WITHOUT_CLASSIFICATION	3.122917615196771E-7	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999851959003354	WITHOUT_CLASSIFICATION	1.4804099664720246E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998622233353	WITHOUT_CLASSIFICATION	1.377766646699381E-7	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999983109144	WITHOUT_CLASSIFICATION	1.6890857668547454E-9	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999975131083	WITHOUT_CLASSIFICATION	2.486891822615712E-9	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999878559894	WITHOUT_CLASSIFICATION	1.2144010613168842E-8	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999787663332	WITHOUT_CLASSIFICATION	2.1233666837869996E-8	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999829297902	WITHOUT_CLASSIFICATION	1.7070209869102474E-8	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999968678733097	WITHOUT_CLASSIFICATION	3.132126690315554E-6	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999987273677023	WITHOUT_CLASSIFICATION	1.2726322977061584E-5	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999995766417931	WITHOUT_CLASSIFICATION	4.233582068965842E-7	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999993095195947	WITHOUT_CLASSIFICATION	6.904804054296358E-7	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999422939	WITHOUT_CLASSIFICATION	5.7706101785098237E-11	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999422939	WITHOUT_CLASSIFICATION	5.7706101785098237E-11	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999999824378557	WITHOUT_CLASSIFICATION	1.756214431629729E-8	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999803230309827	WITHOUT_CLASSIFICATION	1.9676969017292195E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999889148904546	WITHOUT_CLASSIFICATION	1.108510954539065E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999889148904546	WITHOUT_CLASSIFICATION	1.108510954539065E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999889148904546	WITHOUT_CLASSIFICATION	1.108510954539065E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999954470186272	WITHOUT_CLASSIFICATION	4.552981372759094E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999954470186272	WITHOUT_CLASSIFICATION	4.552981372759094E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999954470186272	WITHOUT_CLASSIFICATION	4.552981372759094E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999954470186272	WITHOUT_CLASSIFICATION	4.552981372759094E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999959349569509	WITHOUT_CLASSIFICATION	4.065043049068575E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999959349569509	WITHOUT_CLASSIFICATION	4.065043049068575E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999959349569509	WITHOUT_CLASSIFICATION	4.065043049068575E-6	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999894273542935	WITHOUT_CLASSIFICATION	1.0572645706429955E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999894273542935	WITHOUT_CLASSIFICATION	1.0572645706429955E-5	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999950435158619	WITHOUT_CLASSIFICATION	4.956484138213191E-6	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999959765749277	WITHOUT_CLASSIFICATION	4.023425072315155E-6	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999803230309827	WITHOUT_CLASSIFICATION	1.9676969017292195E-5	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.999999391263468	WITHOUT_CLASSIFICATION	6.08736531965461E-7	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999889148904546	WITHOUT_CLASSIFICATION	1.108510954539065E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999889148904546	WITHOUT_CLASSIFICATION	1.108510954539065E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999954470186272	WITHOUT_CLASSIFICATION	4.552981372759094E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999954470186272	WITHOUT_CLASSIFICATION	4.552981372759094E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999954470186272	WITHOUT_CLASSIFICATION	4.552981372759094E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999959349569509	WITHOUT_CLASSIFICATION	4.065043049068575E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999959349569509	WITHOUT_CLASSIFICATION	4.065043049068575E-6	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999894273542935	WITHOUT_CLASSIFICATION	1.0572645706429955E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999959765749277	WITHOUT_CLASSIFICATION	4.023425072315155E-6	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999962881441117	WITHOUT_CLASSIFICATION	3.7118558883593834E-6	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999962881441117	WITHOUT_CLASSIFICATION	3.7118558883593834E-6	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999960063537	WITHOUT_CLASSIFICATION	3.9936463338177456E-9	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999960063537	WITHOUT_CLASSIFICATION	3.9936463338177456E-9	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.999999537436616	WITHOUT_CLASSIFICATION	4.6256338399235603E-7	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.999999537436616	WITHOUT_CLASSIFICATION	4.6256338399235603E-7	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999889770592509	WITHOUT_CLASSIFICATION	1.102294074902831E-5	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999999637334398	WITHOUT_CLASSIFICATION	3.626656014831908E-8	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999999637334398	WITHOUT_CLASSIFICATION	3.626656014831908E-8	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999720253125354	WITHOUT_CLASSIFICATION	2.7974687464544506E-5	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999720253125354	WITHOUT_CLASSIFICATION	2.7974687464544506E-5	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.999999999812239	WITHOUT_CLASSIFICATION	1.8776109232024614E-10	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999996282443775	WITHOUT_CLASSIFICATION	3.7175562243755704E-7	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999996282443775	WITHOUT_CLASSIFICATION	3.7175562243755704E-7	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999981609166702	WITHOUT_CLASSIFICATION	1.8390833298819723E-6	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999945012056021	WITHOUT_CLASSIFICATION	5.498794397853586E-6	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999999978203301	WITHOUT_CLASSIFICATION	2.1796699556881875E-9	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999954470186272	WITHOUT_CLASSIFICATION	4.552981372759094E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999954470186272	WITHOUT_CLASSIFICATION	4.552981372759094E-6	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999981609166702	WITHOUT_CLASSIFICATION	1.8390833298819723E-6	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999999988098517	WITHOUT_CLASSIFICATION	1.19014828534685E-9	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999992817896002	WITHOUT_CLASSIFICATION	7.182103996868809E-7	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999992817896002	WITHOUT_CLASSIFICATION	7.182103996868809E-7	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999992817896002	WITHOUT_CLASSIFICATION	7.182103996868809E-7	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999646242950079	WITHOUT_CLASSIFICATION	3.537570499208406E-5	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999999645386417	WITHOUT_CLASSIFICATION	3.5461358309997175E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999994075259204	WITHOUT_CLASSIFICATION	5.924740795836382E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999994075259204	WITHOUT_CLASSIFICATION	5.924740795836382E-7	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999997017513876	WITHOUT_CLASSIFICATION	2.982486124056811E-7	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999998024290779	WITHOUT_CLASSIFICATION	1.9757092218922382E-7	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.999999998646674	WITHOUT_CLASSIFICATION	1.3533259366939394E-9	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999999868767641	WITHOUT_CLASSIFICATION	1.3123236041165485E-8	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999994588338419	WITHOUT_CLASSIFICATION	5.411661581396465E-7	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999999893506885	WITHOUT_CLASSIFICATION	1.0649311555018936E-8	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999999893506885	WITHOUT_CLASSIFICATION	1.0649311555018936E-8	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999602120340455	WITHOUT_CLASSIFICATION	3.9787965954482814E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999927765002048	WITHOUT_CLASSIFICATION	7.223499795312014E-6	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999927765002048	WITHOUT_CLASSIFICATION	7.223499795312014E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999954470186272	WITHOUT_CLASSIFICATION	4.552981372759094E-6	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999992817896002	WITHOUT_CLASSIFICATION	7.182103996868809E-7	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999999645386417	WITHOUT_CLASSIFICATION	3.5461358309997175E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999994075259204	WITHOUT_CLASSIFICATION	5.924740795836382E-7	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999997017513876	WITHOUT_CLASSIFICATION	2.982486124056811E-7	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999998024290779	WITHOUT_CLASSIFICATION	1.9757092218922382E-7	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.999999998646674	WITHOUT_CLASSIFICATION	1.3533259366939394E-9	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999999868767641	WITHOUT_CLASSIFICATION	1.3123236041165485E-8	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999927765002048	WITHOUT_CLASSIFICATION	7.223499795312014E-6	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999999955863674	WITHOUT_CLASSIFICATION	4.413632540723846E-9	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999997666219391	WITHOUT_CLASSIFICATION	2.3337806092897345E-7	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999999791572045	WITHOUT_CLASSIFICATION	2.0842795506388352E-8	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999972691999209	WITHOUT_CLASSIFICATION	2.730800079049112E-6	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999999910942898	WITHOUT_CLASSIFICATION	8.905710098652611E-9	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999999903762041	WITHOUT_CLASSIFICATION	9.623795954994966E-9	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999998518156403	WITHOUT_CLASSIFICATION	1.4818435973693648E-7	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999998518156403	WITHOUT_CLASSIFICATION	1.4818435973693648E-7	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999997205721389	WITHOUT_CLASSIFICATION	2.7942786101638043E-7	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999998720685968	WITHOUT_CLASSIFICATION	1.2793140334967216E-7	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999996869574558	WITHOUT_CLASSIFICATION	3.130425441219342E-7	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999999470733949	WITHOUT_CLASSIFICATION	5.292660499003725E-8	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999994506205477	WITHOUT_CLASSIFICATION	5.493794522956418E-7	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999994506205477	WITHOUT_CLASSIFICATION	5.493794522956418E-7	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999975583119965	WITHOUT_CLASSIFICATION	2.441688003343987E-6	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999999009067824	WITHOUT_CLASSIFICATION	9.909321761345613E-8	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.999999318303669	WITHOUT_CLASSIFICATION	6.816963310390822E-7	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.999999318303669	WITHOUT_CLASSIFICATION	6.816963310390822E-7	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999997619861529	WITHOUT_CLASSIFICATION	2.3801384706378402E-7	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999581200442992	WITHOUT_CLASSIFICATION	4.187995570088762E-5	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999994588338419	WITHOUT_CLASSIFICATION	5.411661581396465E-7	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999999057857293	WITHOUT_CLASSIFICATION	9.421427075911492E-8	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999996981886	WITHOUT_CLASSIFICATION	3.01811345066774E-10	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999467258075	WITHOUT_CLASSIFICATION	5.32741923950424E-8	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999999718215972	WITHOUT_CLASSIFICATION	2.81784028691752E-8	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.9999999989736548	WITHOUT_CLASSIFICATION	1.0263451885681195E-9	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.99999881607061	WITHOUT_CLASSIFICATION	1.1839293899425656E-6	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999999975435345	WITHOUT_CLASSIFICATION	2.4564653415013405E-9	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999997909610232	WITHOUT_CLASSIFICATION	2.0903897669793243E-7	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999999395208591	WITHOUT_CLASSIFICATION	6.047914093267015E-8	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999999395208591	WITHOUT_CLASSIFICATION	6.047914093267015E-8	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999978127590868	WITHOUT_CLASSIFICATION	2.187240913066093E-6	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999978127590868	WITHOUT_CLASSIFICATION	2.187240913066093E-6	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.99999999096848	WITHOUT_CLASSIFICATION	9.031520010784154E-9	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999997722505073	WITHOUT_CLASSIFICATION	2.2774949269240732E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999997722505073	WITHOUT_CLASSIFICATION	2.2774949269240732E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999997722505073	WITHOUT_CLASSIFICATION	2.2774949269240732E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999917457439	WITHOUT_CLASSIFICATION	8.254256091676124E-9	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999938497671236	WITHOUT_CLASSIFICATION	6.150232876364859E-6	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999938497671236	WITHOUT_CLASSIFICATION	6.150232876364859E-6	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999779123145	WITHOUT_CLASSIFICATION	2.208768545589948E-8	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999945604613291	WITHOUT_CLASSIFICATION	5.439538670916265E-6	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999991592123167	WITHOUT_CLASSIFICATION	8.407876832484458E-7	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9999965900033447	WITHOUT_CLASSIFICATION	3.4099966551912675E-6	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999982086611331	WITHOUT_CLASSIFICATION	1.7913388669631115E-6	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9999732251434728	WITHOUT_CLASSIFICATION	2.677485652728554E-5	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999998924029165	WITHOUT_CLASSIFICATION	1.0759708336350366E-7	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999983109144	WITHOUT_CLASSIFICATION	1.6890857668547454E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999983109144	WITHOUT_CLASSIFICATION	1.6890857668547454E-9	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999917457439	WITHOUT_CLASSIFICATION	8.254256091676124E-9	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999779123145	WITHOUT_CLASSIFICATION	2.208768545589948E-8	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999922563587	WITHOUT_CLASSIFICATION	7.74364131498355E-9	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999945604613291	WITHOUT_CLASSIFICATION	5.439538670916265E-6	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999991592123167	WITHOUT_CLASSIFICATION	8.407876832484458E-7	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999832008722772	WITHOUT_CLASSIFICATION	1.67991277228641E-5	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9999998479157868	WITHOUT_CLASSIFICATION	1.5208421315363699E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999998356161168	WITHOUT_CLASSIFICATION	1.6438388313560317E-7	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.9999980398751794	WITHOUT_CLASSIFICATION	1.9601248205993604E-6	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999851185478481	WITHOUT_CLASSIFICATION	1.488145215182714E-5	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999999989992914	WITHOUT_CLASSIFICATION	1.0007085449796185E-9	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999998824158699	WITHOUT_CLASSIFICATION	1.1758413011484619E-7	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999832008722772	WITHOUT_CLASSIFICATION	1.67991277228641E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999999258650252	WITHOUT_CLASSIFICATION	7.413497491336174E-8	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999999258650252	WITHOUT_CLASSIFICATION	7.413497491336174E-8	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999999604167606	WITHOUT_CLASSIFICATION	3.958323933618467E-8	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999919819684945	WITHOUT_CLASSIFICATION	8.01803150558186E-6	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999994387017748	WITHOUT_CLASSIFICATION	5.612982252263009E-7	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999987396260726	WITHOUT_CLASSIFICATION	1.2603739274895895E-6	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999991114212733	WITHOUT_CLASSIFICATION	8.885787266402936E-7	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.999908848276968	WITHOUT_CLASSIFICATION	9.115172303200774E-5	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999989292501041	WITHOUT_CLASSIFICATION	1.0707498958735726E-6	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999912343405841	WITHOUT_CLASSIFICATION	8.765659415903942E-6	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999999973044699	WITHOUT_CLASSIFICATION	2.695530144861782E-9	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.999999960924399	WITHOUT_CLASSIFICATION	3.907560106792634E-8	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999999199618402	WITHOUT_CLASSIFICATION	8.003815985028183E-8	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999987396260726	WITHOUT_CLASSIFICATION	1.2603739274895895E-6	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999991114212733	WITHOUT_CLASSIFICATION	8.885787266402936E-7	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999906214983475	WITHOUT_CLASSIFICATION	9.378501652531575E-6	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9999999603436953	WITHOUT_CLASSIFICATION	3.965630468218182E-8	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999999996147213	WITHOUT_CLASSIFICATION	3.8527864524099835E-10	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999991260331041	WITHOUT_CLASSIFICATION	8.739668959248085E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999999997644672	WITHOUT_CLASSIFICATION	2.355328001542459E-10	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999999950529489	WITHOUT_CLASSIFICATION	4.947051119524469E-9	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.999998055154365	WITHOUT_CLASSIFICATION	1.944845634956461E-6	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9999996222062654	WITHOUT_CLASSIFICATION	3.777937346500097E-7	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999999732600391	WITHOUT_CLASSIFICATION	2.673996092144777E-8	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999999921705163	WITHOUT_CLASSIFICATION	7.829483831871604E-9	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999999746019139	WITHOUT_CLASSIFICATION	2.539808601034883E-8	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9999960766618247	WITHOUT_CLASSIFICATION	3.92333817533985E-6	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999995851657327	WITHOUT_CLASSIFICATION	4.148342672074618E-7	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999999858444377	WITHOUT_CLASSIFICATION	1.4155562256895667E-8	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999999999649112	WITHOUT_CLASSIFICATION	3.508877856697303E-11	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999876364963	WITHOUT_CLASSIFICATION	1.2363503633240681E-8	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999979715911278	WITHOUT_CLASSIFICATION	2.028408872199052E-6	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999989694956253	WITHOUT_CLASSIFICATION	1.0305043747028613E-6	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999980137974	WITHOUT_CLASSIFICATION	1.986202629959186E-9	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999989990172817	WITHOUT_CLASSIFICATION	1.0009827182734799E-6	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999979715911278	WITHOUT_CLASSIFICATION	2.028408872199052E-6	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999989694956253	WITHOUT_CLASSIFICATION	1.0305043747028613E-6	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999980137974	WITHOUT_CLASSIFICATION	1.986202629959186E-9	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9999999415118123	WITHOUT_CLASSIFICATION	5.848818768262402E-8	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999908339076962	WITHOUT_CLASSIFICATION	9.166092303803544E-6	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999956533886983	WITHOUT_CLASSIFICATION	4.346611301687096E-6	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999989998585416	WITHOUT_CLASSIFICATION	1.0001414583969135E-6	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999999719037971	WITHOUT_CLASSIFICATION	2.8096202993222645E-8	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999987289498196	WITHOUT_CLASSIFICATION	1.2710501803689302E-6	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999988980159074	WITHOUT_CLASSIFICATION	1.101984092670554E-6	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.999961153879369	WITHOUT_CLASSIFICATION	3.884612063089634E-5	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9999999261483151	WITHOUT_CLASSIFICATION	7.385168482723469E-8	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9999997360635304	WITHOUT_CLASSIFICATION	2.639364695512414E-7	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9728812067687478	WITHOUT_CLASSIFICATION	0.027118793231252165	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999999682957842	WITHOUT_CLASSIFICATION	3.170421580785296E-8	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999987173367216	WITHOUT_CLASSIFICATION	1.2826632784348455E-6	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.999957722725375	WITHOUT_CLASSIFICATION	4.227727462502699E-5	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999998705590811	WITHOUT_CLASSIFICATION	1.294409188094004E-7	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999998358109831	WITHOUT_CLASSIFICATION	1.6418901686923074E-7	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999986422232408	WITHOUT_CLASSIFICATION	1.3577767593178487E-6	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999994229346573	WITHOUT_CLASSIFICATION	5.770653427284292E-7	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999404267260812	WITHOUT_CLASSIFICATION	5.957327391887202E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999962729392541	WITHOUT_CLASSIFICATION	3.7270607458077404E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999999213129347	WITHOUT_CLASSIFICATION	7.868706527312804E-8	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999985591635336	WITHOUT_CLASSIFICATION	1.4408364664166614E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999985591635336	WITHOUT_CLASSIFICATION	1.4408364664166614E-6	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999983915368404	WITHOUT_CLASSIFICATION	1.6084631596640508E-6	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999983915368404	WITHOUT_CLASSIFICATION	1.6084631596640508E-6	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999999627453166	WITHOUT_CLASSIFICATION	3.725468341475122E-8	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999999627453166	WITHOUT_CLASSIFICATION	3.725468341475122E-8	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999998917290375	WITHOUT_CLASSIFICATION	1.0827096251605478E-7	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.999999997354532	WITHOUT_CLASSIFICATION	2.645468011634895E-9	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999962875825	WITHOUT_CLASSIFICATION	3.712417398429796E-9	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999996694596079	WITHOUT_CLASSIFICATION	3.3054039208824557E-7	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999995481383	WITHOUT_CLASSIFICATION	4.518616568815823E-10	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999985411419607	WITHOUT_CLASSIFICATION	1.4588580392162438E-6	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999999395559691	WITHOUT_CLASSIFICATION	6.044403094229073E-8	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9999984003143662	WITHOUT_CLASSIFICATION	1.5996856338569229E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999983109144	WITHOUT_CLASSIFICATION	1.6890857668547454E-9	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999998917290375	WITHOUT_CLASSIFICATION	1.0827096251605478E-7	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.999999997354532	WITHOUT_CLASSIFICATION	2.645468011634895E-9	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999962875825	WITHOUT_CLASSIFICATION	3.712417398429796E-9	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999995481383	WITHOUT_CLASSIFICATION	4.518616568815823E-10	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999985411419607	WITHOUT_CLASSIFICATION	1.4588580392162438E-6	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999998685783407	WITHOUT_CLASSIFICATION	1.3142165931077428E-7	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9999999326694632	WITHOUT_CLASSIFICATION	6.733053679589513E-8	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999994403499607	WITHOUT_CLASSIFICATION	5.596500393592205E-7	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999994403499607	WITHOUT_CLASSIFICATION	5.596500393592205E-7	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999977704073401	WITHOUT_CLASSIFICATION	2.2295926599286394E-6	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999999697903789	WITHOUT_CLASSIFICATION	3.02096211866053E-8	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999996935814083	WITHOUT_CLASSIFICATION	3.0641859172530974E-7	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999972635821	WITHOUT_CLASSIFICATION	2.73641790759207E-9	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999972635821	WITHOUT_CLASSIFICATION	2.73641790759207E-9	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999999967743911	WITHOUT_CLASSIFICATION	3.225608829601927E-9	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999998800497	WITHOUT_CLASSIFICATION	1.1995029839507437E-10	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999997676319058	WITHOUT_CLASSIFICATION	2.3236809418723627E-7	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999946265753287	WITHOUT_CLASSIFICATION	5.3734246712976875E-6	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999999726174915	WITHOUT_CLASSIFICATION	2.73825084631047E-8	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999975131083	WITHOUT_CLASSIFICATION	2.486891822615712E-9	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999878559894	WITHOUT_CLASSIFICATION	1.2144010613168842E-8	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999787663332	WITHOUT_CLASSIFICATION	2.1233666837869996E-8	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999829297902	WITHOUT_CLASSIFICATION	1.7070209869102474E-8	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999995766417931	WITHOUT_CLASSIFICATION	4.233582068965842E-7	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999993095195947	WITHOUT_CLASSIFICATION	6.904804054296358E-7	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999999967743911	WITHOUT_CLASSIFICATION	3.225608829601927E-9	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999998800497	WITHOUT_CLASSIFICATION	1.1995029839507437E-10	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999946265753287	WITHOUT_CLASSIFICATION	5.3734246712976875E-6	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999839786668299	WITHOUT_CLASSIFICATION	1.6021333170092776E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999996935814083	WITHOUT_CLASSIFICATION	3.0641859172530974E-7	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999996935814083	WITHOUT_CLASSIFICATION	3.0641859172530974E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999999199618402	WITHOUT_CLASSIFICATION	8.003815985028183E-8	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999999199618402	WITHOUT_CLASSIFICATION	8.003815985028183E-8	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.999950238570198	WITHOUT_CLASSIFICATION	4.9761429801923056E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.999950238570198	WITHOUT_CLASSIFICATION	4.9761429801923056E-5	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999999938973282	WITHOUT_CLASSIFICATION	6.102671820961634E-9	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.999999978209927	WITHOUT_CLASSIFICATION	2.179007302929889E-8	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999994194229926	WITHOUT_CLASSIFICATION	5.805770073102277E-7	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999999076651678	WITHOUT_CLASSIFICATION	9.233483222260302E-8	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999999974521848	WITHOUT_CLASSIFICATION	2.54781522506105E-9	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999998850633969	WITHOUT_CLASSIFICATION	1.1493660318027238E-7	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999999946640132	WITHOUT_CLASSIFICATION	5.335986802766545E-9	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999999660808326	WITHOUT_CLASSIFICATION	3.3919167344836845E-8	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999998873375835	WITHOUT_CLASSIFICATION	1.1266241643580611E-7	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999999212102859	WITHOUT_CLASSIFICATION	7.878971404513317E-8	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999999434941051	WITHOUT_CLASSIFICATION	5.6505894933265576E-8	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9999997187095988	WITHOUT_CLASSIFICATION	2.8129040121907816E-7	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999999853060569	WITHOUT_CLASSIFICATION	1.4693943023050388E-8	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999979099316293	WITHOUT_CLASSIFICATION	2.0900683706494883E-6	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999990674872464	WITHOUT_CLASSIFICATION	9.325127536060372E-7	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9998324122512194	WITHOUT_CLASSIFICATION	1.6758774878067575E-4	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9999998520825096	WITHOUT_CLASSIFICATION	1.479174903718782E-7	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.999999585903107	WITHOUT_CLASSIFICATION	4.1409689303628206E-7	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.999995593552966	WITHOUT_CLASSIFICATION	4.406447034111219E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999878559894	WITHOUT_CLASSIFICATION	1.2144010613168842E-8	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999829297902	WITHOUT_CLASSIFICATION	1.7070209869102474E-8	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999422939	WITHOUT_CLASSIFICATION	5.7706101785098237E-11	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999994075259204	WITHOUT_CLASSIFICATION	5.924740795836382E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999994075259204	WITHOUT_CLASSIFICATION	5.924740795836382E-7	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999839786668299	WITHOUT_CLASSIFICATION	1.6021333170092776E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999996935814083	WITHOUT_CLASSIFICATION	3.0641859172530974E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999999199618402	WITHOUT_CLASSIFICATION	8.003815985028183E-8	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.999950238570198	WITHOUT_CLASSIFICATION	4.9761429801923056E-5	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.999999243938166	WITHOUT_CLASSIFICATION	7.560618339898598E-7	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999967816231545	WITHOUT_CLASSIFICATION	3.218376845391238E-6	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999878457375688	WITHOUT_CLASSIFICATION	1.2154262431174974E-5	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999999377855464	WITHOUT_CLASSIFICATION	6.221445359725653E-8	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999931455679	WITHOUT_CLASSIFICATION	6.854432104203591E-9	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999931455679	WITHOUT_CLASSIFICATION	6.854432104203591E-9	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999999963048836	WITHOUT_CLASSIFICATION	3.6951164585022496E-9	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999985465870855	WITHOUT_CLASSIFICATION	1.453412914354864E-6	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999197196171	WITHOUT_CLASSIFICATION	8.028038287968873E-8	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.99999947426966	WITHOUT_CLASSIFICATION	5.257303401071045E-7	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999993543868209	WITHOUT_CLASSIFICATION	6.456131791952287E-7	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999993543868209	WITHOUT_CLASSIFICATION	6.456131791952287E-7	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999995030468929	WITHOUT_CLASSIFICATION	4.969531071461348E-7	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9999977645054693	WITHOUT_CLASSIFICATION	2.2354945306195642E-6	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999999864004557	WITHOUT_CLASSIFICATION	1.359954427352859E-8	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999753469483562	WITHOUT_CLASSIFICATION	2.4653051643748928E-5	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999954588713545	WITHOUT_CLASSIFICATION	4.541128645469984E-6	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999999882347015	WITHOUT_CLASSIFICATION	1.1765298513344321E-8	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999998928423791	WITHOUT_CLASSIFICATION	1.0715762089171573E-7	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999999694784554	WITHOUT_CLASSIFICATION	3.0521544659261506E-8	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9998884697817593	WITHOUT_CLASSIFICATION	1.1153021824076E-4	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9999097103835299	WITHOUT_CLASSIFICATION	9.028961647005726E-5	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999999996930002	WITHOUT_CLASSIFICATION	3.069997097292693E-10	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.999999908528582	WITHOUT_CLASSIFICATION	9.147141799547227E-8	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.999999972712081	WITHOUT_CLASSIFICATION	2.728791893595213E-8	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999986511007384	WITHOUT_CLASSIFICATION	1.3488992616538687E-6	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999998776631545	WITHOUT_CLASSIFICATION	1.223368455342382E-7	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999781537120425	WITHOUT_CLASSIFICATION	2.1846287957511664E-5	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999999995928269	WITHOUT_CLASSIFICATION	4.071731422686016E-10	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999951299749369	WITHOUT_CLASSIFICATION	4.870025063172433E-6	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999933667561088	WITHOUT_CLASSIFICATION	6.63324389115479E-6	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999999372270292	WITHOUT_CLASSIFICATION	6.277297086905175E-8	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999980203172689	WITHOUT_CLASSIFICATION	1.9796827311549507E-6	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999999746824518	WITHOUT_CLASSIFICATION	2.5317548218273446E-8	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999999746824518	WITHOUT_CLASSIFICATION	2.5317548218273446E-8	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999999292948168	WITHOUT_CLASSIFICATION	7.0705183094207E-8	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999999897712761	WITHOUT_CLASSIFICATION	1.0228723866148202E-8	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999985972040885	WITHOUT_CLASSIFICATION	1.4027959115254173E-6	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999985972040885	WITHOUT_CLASSIFICATION	1.4027959115254173E-6	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9762994439584941	WITHOUT_CLASSIFICATION	0.02370055604150592	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999999138581783	WITHOUT_CLASSIFICATION	8.61418216839972E-8	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999987168030336	WITHOUT_CLASSIFICATION	1.2831969663247597E-6	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999463516758	WITHOUT_CLASSIFICATION	5.364832417658416E-8	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999463516758	WITHOUT_CLASSIFICATION	5.364832417658416E-8	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999929094417859	WITHOUT_CLASSIFICATION	7.0905582140949445E-6	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999985181799	WITHOUT_CLASSIFICATION	1.4818201022906724E-9	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999999308512063	WITHOUT_CLASSIFICATION	6.914879366785019E-8	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999981125158762	WITHOUT_CLASSIFICATION	1.8874841237623513E-6	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999996844318191	WITHOUT_CLASSIFICATION	3.1556818083036977E-7	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999999830006575	WITHOUT_CLASSIFICATION	1.6999342393259208E-8	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999998007628609	WITHOUT_CLASSIFICATION	1.9923713920626597E-7	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999983853619883	WITHOUT_CLASSIFICATION	1.6146380117418928E-6	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9999996627012935	WITHOUT_CLASSIFICATION	3.372987065181668E-7	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999972263574013	WITHOUT_CLASSIFICATION	2.773642598739308E-6	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999993433724205	WITHOUT_CLASSIFICATION	6.566275795478125E-7	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999862125491812	WITHOUT_CLASSIFICATION	1.3787450818857502E-5	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9999998358424573	WITHOUT_CLASSIFICATION	1.6415754256528955E-7	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999998688726666	WITHOUT_CLASSIFICATION	1.31127333468858E-7	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9998216147538619	WITHOUT_CLASSIFICATION	1.7838524613819975E-4	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999999436592975	WITHOUT_CLASSIFICATION	5.6340702517313354E-8	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.999999999885041	WITHOUT_CLASSIFICATION	1.1495905632249347E-10	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999879365950354	WITHOUT_CLASSIFICATION	1.2063404964580349E-5	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999975357476067	WITHOUT_CLASSIFICATION	2.464252393244957E-6	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999999990496828	WITHOUT_CLASSIFICATION	9.5031712265915E-10	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9999917902813282	WITHOUT_CLASSIFICATION	8.20971867174708E-6	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9999996990554334	WITHOUT_CLASSIFICATION	3.009445666373432E-7	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999959876173855	WITHOUT_CLASSIFICATION	4.012382614462624E-6	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999993796401285	WITHOUT_CLASSIFICATION	6.203598714001188E-7	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999890098103698	WITHOUT_CLASSIFICATION	1.0990189630255939E-5	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999999516131257	WITHOUT_CLASSIFICATION	4.838687418616593E-8	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9992809600268717	WITHOUT_CLASSIFICATION	7.190399731283231E-4	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999952471658	WITHOUT_CLASSIFICATION	4.752834303406742E-9	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999991120136031	WITHOUT_CLASSIFICATION	8.879863969492594E-7	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999952642156	WITHOUT_CLASSIFICATION	4.735784419018224E-9	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999671419508	WITHOUT_CLASSIFICATION	3.2858049241129145E-8	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999998688726666	WITHOUT_CLASSIFICATION	1.31127333468858E-7	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999952471658	WITHOUT_CLASSIFICATION	4.752834303406742E-9	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999991120136031	WITHOUT_CLASSIFICATION	8.879863969492594E-7	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999671419508	WITHOUT_CLASSIFICATION	3.2858049241129145E-8	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999990833123344	WITHOUT_CLASSIFICATION	9.166876656686942E-7	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9999978918846852	WITHOUT_CLASSIFICATION	2.108115314824586E-6	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999998224150818	WITHOUT_CLASSIFICATION	1.7758491817885564E-7	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.999999925332211	WITHOUT_CLASSIFICATION	7.466778893691752E-8	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999999495808652	WITHOUT_CLASSIFICATION	5.041913464954379E-8	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999999998571244	WITHOUT_CLASSIFICATION	1.4287564127932422E-10	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9999993474058492	WITHOUT_CLASSIFICATION	6.525941508912623E-7	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9999995594221116	WITHOUT_CLASSIFICATION	4.405778884342926E-7	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9999996791536511	WITHOUT_CLASSIFICATION	3.2084634892681467E-7	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999996346320181	WITHOUT_CLASSIFICATION	3.6536798190361944E-7	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999998679543334	WITHOUT_CLASSIFICATION	1.320456665364274E-7	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999998679543334	WITHOUT_CLASSIFICATION	1.320456665364274E-7	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999999995431583	WITHOUT_CLASSIFICATION	4.568417190842093E-10	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999998645361478	WITHOUT_CLASSIFICATION	1.3546385229347603E-7	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999959207497	WITHOUT_CLASSIFICATION	4.0792502998758E-9	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999997496046189	WITHOUT_CLASSIFICATION	2.5039538114508085E-7	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999999879837288	WITHOUT_CLASSIFICATION	1.2016271288467734E-8	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999999809166495	WITHOUT_CLASSIFICATION	1.9083350450773506E-8	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.999999950661815	WITHOUT_CLASSIFICATION	4.93381849291801E-8	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999976244592	WITHOUT_CLASSIFICATION	2.375540733500636E-9	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999999661233379	WITHOUT_CLASSIFICATION	3.38766621340449E-8	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.99999950557556	WITHOUT_CLASSIFICATION	4.944244399591045E-7	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999999460805772	WITHOUT_CLASSIFICATION	5.3919422720602755E-8	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999956195424003	WITHOUT_CLASSIFICATION	4.38045759968867E-6	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999999726773794	WITHOUT_CLASSIFICATION	2.7322620594354874E-8	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999991369938896	WITHOUT_CLASSIFICATION	8.630061102860615E-7	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9999989806324822	WITHOUT_CLASSIFICATION	1.0193675178999062E-6	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999790427020233	WITHOUT_CLASSIFICATION	2.0957297976777217E-5	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9999995694056055	WITHOUT_CLASSIFICATION	4.3059439454793513E-7	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9999991707113317	WITHOUT_CLASSIFICATION	8.29288668349797E-7	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9999699302935403	WITHOUT_CLASSIFICATION	3.0069706459723647E-5	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9999977044200831	WITHOUT_CLASSIFICATION	2.2955799168561852E-6	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9999995267275252	WITHOUT_CLASSIFICATION	4.7327247479243863E-7	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9999987399800808	WITHOUT_CLASSIFICATION	1.2600199191897842E-6	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.999999936560095	WITHOUT_CLASSIFICATION	6.343990505618965E-8	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9999920765438891	WITHOUT_CLASSIFICATION	7.923456110855048E-6	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999999979191194	WITHOUT_CLASSIFICATION	2.0808805960199602E-9	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9999966818666994	WITHOUT_CLASSIFICATION	3.3181333004715535E-6	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999999978865247	WITHOUT_CLASSIFICATION	2.1134752265494104E-9	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999999185934979	WITHOUT_CLASSIFICATION	8.140650211341746E-8	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.9999999811025632	WITHOUT_CLASSIFICATION	1.8897436778165672E-8	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999999985580137	WITHOUT_CLASSIFICATION	1.4419863100870513E-9	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999999972961134	WITHOUT_CLASSIFICATION	2.7038865472880276E-9	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9999999934704307	WITHOUT_CLASSIFICATION	6.529569253351558E-9	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999999357421877	WITHOUT_CLASSIFICATION	6.425781221119972E-8	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999996555948056	WITHOUT_CLASSIFICATION	3.444051942714834E-7	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999999955762175	WITHOUT_CLASSIFICATION	4.4237824543274745E-9	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999999843338043	WITHOUT_CLASSIFICATION	1.5666195653683577E-8	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999999940648874	WITHOUT_CLASSIFICATION	5.935112527162768E-9	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999999383322387	WITHOUT_CLASSIFICATION	6.166776131157493E-8	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999988968871348	WITHOUT_CLASSIFICATION	1.1031128651244421E-6	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999973341954971	WITHOUT_CLASSIFICATION	2.6658045028745594E-6	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999999767103736	WITHOUT_CLASSIFICATION	2.328962646289575E-8	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9996604758557216	WITHOUT_CLASSIFICATION	3.3952414427835826E-4	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.9999986638341654	WITHOUT_CLASSIFICATION	1.33616583462349E-6	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999999294788282	WITHOUT_CLASSIFICATION	7.052117186935664E-8	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999981092354693	WITHOUT_CLASSIFICATION	1.8907645307626312E-6	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999999962959282	WITHOUT_CLASSIFICATION	3.7040717191941985E-9	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9998467882898817	WITHOUT_CLASSIFICATION	1.5321171011834964E-4	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999999098121789	WITHOUT_CLASSIFICATION	9.018782109210014E-8	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999989923167454	WITHOUT_CLASSIFICATION	1.00768325466492E-6	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999999911418125	WITHOUT_CLASSIFICATION	8.858187557181513E-9	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999933214747733	WITHOUT_CLASSIFICATION	6.678525226806884E-6	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999999707514869	WITHOUT_CLASSIFICATION	2.9248512989175554E-8	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999480249998214	WITHOUT_CLASSIFICATION	5.197500017865858E-5	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999999980479714	WITHOUT_CLASSIFICATION	1.9520286668909846E-9	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999997676499957	WITHOUT_CLASSIFICATION	2.323500044899825E-7	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999902807893	WITHOUT_CLASSIFICATION	9.71921053665762E-9	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999962670850407	WITHOUT_CLASSIFICATION	3.73291495924879E-6	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999081466408248	WITHOUT_CLASSIFICATION	9.185335917508148E-5	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.7396905001619386	WITHOUT_CLASSIFICATION	0.26030949983806145	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999136304086839	WITHOUT_CLASSIFICATION	8.636959131608209E-5	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999136304086839	WITHOUT_CLASSIFICATION	8.636959131608209E-5	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999999982936981	WITHOUT_CLASSIFICATION	1.706301896625433E-8	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999996204829829	WITHOUT_CLASSIFICATION	3.795170170502232E-7	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999973188561	WITHOUT_CLASSIFICATION	2.6811437935851375E-9	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999858830848	WITHOUT_CLASSIFICATION	1.41169152088811E-8	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999998628854295	WITHOUT_CLASSIFICATION	1.3711457058145537E-7	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999999113215513	WITHOUT_CLASSIFICATION	8.867844874035557E-8	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999967478773698	WITHOUT_CLASSIFICATION	3.2521226302958948E-6	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999485293259738	WITHOUT_CLASSIFICATION	5.147067402617325E-5	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999999757334823	WITHOUT_CLASSIFICATION	2.426651769458713E-8	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999984338317504	WITHOUT_CLASSIFICATION	1.566168249665201E-6	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999999939960872	WITHOUT_CLASSIFICATION	6.003912765893804E-9	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.999999986936162	WITHOUT_CLASSIFICATION	1.3063837932441024E-8	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999997048813181	WITHOUT_CLASSIFICATION	2.951186819242236E-7	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9978930517872144	WITHOUT_CLASSIFICATION	0.0021069482127855444	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999999544907067	WITHOUT_CLASSIFICATION	4.5509293410264655E-8	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999986034602683	WITHOUT_CLASSIFICATION	1.3965397316667434E-6	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9999993601848508	WITHOUT_CLASSIFICATION	6.398151491099648E-7	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999986512226	WITHOUT_CLASSIFICATION	1.3487774419104095E-9	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999967170574495	WITHOUT_CLASSIFICATION	3.282942550440617E-6	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999902942132568	WITHOUT_CLASSIFICATION	9.70578674321513E-6	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999954227492	WITHOUT_CLASSIFICATION	4.577250766064224E-9	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999999098649662	WITHOUT_CLASSIFICATION	9.013503376808473E-8	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.998279472443893	WITHOUT_CLASSIFICATION	0.0017205275561069742	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999999923071786	WITHOUT_CLASSIFICATION	7.692821415437247E-9	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999999930624924	WITHOUT_CLASSIFICATION	6.937507526750225E-9	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999737171232682	WITHOUT_CLASSIFICATION	2.6282876731803828E-5	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999999414950829	WITHOUT_CLASSIFICATION	5.850491706167445E-8	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999999993503232	WITHOUT_CLASSIFICATION	6.496767166676591E-10	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999999168682204	WITHOUT_CLASSIFICATION	8.313177958335769E-8	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999999998859811	WITHOUT_CLASSIFICATION	1.1401887370181393E-10	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999980117147841	WITHOUT_CLASSIFICATION	1.988285215978333E-6	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999984971695663	WITHOUT_CLASSIFICATION	1.502830433673601E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999999919527213	WITHOUT_CLASSIFICATION	8.047278692183763E-8	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999947439752948	WITHOUT_CLASSIFICATION	5.256024705257893E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999999919527213	WITHOUT_CLASSIFICATION	8.047278692183763E-8	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999999478642668	WITHOUT_CLASSIFICATION	5.213573310115121E-8	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999991291882353	WITHOUT_CLASSIFICATION	8.708117646236584E-7	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999991291882353	WITHOUT_CLASSIFICATION	8.708117646236584E-7	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999991291882353	WITHOUT_CLASSIFICATION	8.708117646236584E-7	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999997706009592	WITHOUT_CLASSIFICATION	2.2939904089392955E-7	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999997706009592	WITHOUT_CLASSIFICATION	2.2939904089392955E-7	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999997991720637	WITHOUT_CLASSIFICATION	2.008279362660646E-7	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999999998179322	WITHOUT_CLASSIFICATION	1.820678096698248E-10	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.999999976188631	WITHOUT_CLASSIFICATION	2.3811369054441622E-8	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9998805273744406	WITHOUT_CLASSIFICATION	1.1947262555936532E-4	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999998689116216	WITHOUT_CLASSIFICATION	1.3108837842168824E-7	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999959024987859	WITHOUT_CLASSIFICATION	4.097501214048563E-6	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999952622066596	WITHOUT_CLASSIFICATION	4.737793340383864E-6	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999987292364799	WITHOUT_CLASSIFICATION	1.2707635201741794E-6	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.999981595951041	WITHOUT_CLASSIFICATION	1.8404048959019244E-5	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.999999648063587	WITHOUT_CLASSIFICATION	3.519364129653567E-7	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999993643478042	WITHOUT_CLASSIFICATION	6.35652195812743E-7	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999998382916148	WITHOUT_CLASSIFICATION	1.6170838526419087E-7	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999985245147253	WITHOUT_CLASSIFICATION	1.475485274763316E-6	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9999998534778557	WITHOUT_CLASSIFICATION	1.4652214432695529E-7	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999998688227756	WITHOUT_CLASSIFICATION	1.3117722450099085E-7	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9999999916655572	WITHOUT_CLASSIFICATION	8.33444281684915E-9	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999999994276254	WITHOUT_CLASSIFICATION	5.723744937007071E-10	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999987029073627	WITHOUT_CLASSIFICATION	1.2970926373441473E-6	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999987029073627	WITHOUT_CLASSIFICATION	1.2970926373441473E-6	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9999993909686942	WITHOUT_CLASSIFICATION	6.090313057931463E-7	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999998133540237	WITHOUT_CLASSIFICATION	1.866459762615925E-7	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999998133540237	WITHOUT_CLASSIFICATION	1.866459762615925E-7	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999997948694996	WITHOUT_CLASSIFICATION	2.0513050050436246E-7	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9999999727950057	WITHOUT_CLASSIFICATION	2.7204994360600103E-8	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9999585456720997	WITHOUT_CLASSIFICATION	4.145432790021273E-5	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9999999314940312	WITHOUT_CLASSIFICATION	6.850596882916433E-8	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9999993480327185	WITHOUT_CLASSIFICATION	6.519672814218682E-7	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999999421482757	WITHOUT_CLASSIFICATION	5.7851724272955486E-8	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9999999742450142	WITHOUT_CLASSIFICATION	2.5754985816837083E-8	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.999981094333243	WITHOUT_CLASSIFICATION	1.8905666756996047E-5	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999999335089211	WITHOUT_CLASSIFICATION	6.64910788205408E-8	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999985991996718	WITHOUT_CLASSIFICATION	1.400800328116776E-6	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999632072867475	WITHOUT_CLASSIFICATION	3.679271325246763E-5	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999668886134565	WITHOUT_CLASSIFICATION	3.3111386543489574E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999983151383631	WITHOUT_CLASSIFICATION	1.684861636899063E-6	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999999380834793	WITHOUT_CLASSIFICATION	6.19165207205899E-8	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999987292364799	WITHOUT_CLASSIFICATION	1.2707635201741794E-6	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999980182431881	WITHOUT_CLASSIFICATION	1.9817568119173985E-6	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999886295216	WITHOUT_CLASSIFICATION	1.137047845911683E-8	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999943379373513	WITHOUT_CLASSIFICATION	5.662062648696702E-6	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999943379373513	WITHOUT_CLASSIFICATION	5.662062648696702E-6	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999999860251788	WITHOUT_CLASSIFICATION	1.3974821217832623E-8	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999888587952427	WITHOUT_CLASSIFICATION	1.1141204757243911E-5	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999999916101782	WITHOUT_CLASSIFICATION	8.389821814850635E-9	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9999993723570251	WITHOUT_CLASSIFICATION	6.276429749439249E-7	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.999999999966231	WITHOUT_CLASSIFICATION	3.376908877978875E-11	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999990409614663	WITHOUT_CLASSIFICATION	9.590385337160886E-7	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999999419375996	WITHOUT_CLASSIFICATION	5.8062400528861805E-8	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999991180452534	WITHOUT_CLASSIFICATION	8.819547464735898E-7	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999994992643434	WITHOUT_CLASSIFICATION	5.007356566376032E-7	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999989110733231	WITHOUT_CLASSIFICATION	1.0889266769627292E-6	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999617915760277	WITHOUT_CLASSIFICATION	3.8208423972273167E-5	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.99999968485279	WITHOUT_CLASSIFICATION	3.151472100170839E-7	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9345178777165007	WITHOUT_CLASSIFICATION	0.06548212228349924	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999999847572744	WITHOUT_CLASSIFICATION	1.52427256651661E-8	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999999988858241	WITHOUT_CLASSIFICATION	1.1141758750861123E-9	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999999967198214	WITHOUT_CLASSIFICATION	3.280178551044898E-9	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999996649487245	WITHOUT_CLASSIFICATION	3.350512755909437E-7	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999847156767415	WITHOUT_CLASSIFICATION	1.5284323258451292E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999988384177758	WITHOUT_CLASSIFICATION	1.1615822241745349E-6	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.999999992195494	WITHOUT_CLASSIFICATION	7.8045060678592E-9	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.999998506067765	WITHOUT_CLASSIFICATION	1.493932235068597E-6	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999780306706189	WITHOUT_CLASSIFICATION	2.1969329381212934E-5	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999984394631172	WITHOUT_CLASSIFICATION	1.5605368828375204E-6	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999979191767	WITHOUT_CLASSIFICATION	2.080823266761961E-9	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999989877272342	WITHOUT_CLASSIFICATION	1.0122727658195533E-6	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.999998509983821	WITHOUT_CLASSIFICATION	1.4900161790933787E-6	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999992493146701	WITHOUT_CLASSIFICATION	7.506853299326817E-7	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999640415985503	WITHOUT_CLASSIFICATION	3.595840144972258E-5	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999999956441996	WITHOUT_CLASSIFICATION	4.355800368449372E-9	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999999989051889	WITHOUT_CLASSIFICATION	1.0948110798070751E-9	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.999999647572416	WITHOUT_CLASSIFICATION	3.5242758392854124E-7	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.999999290914865	WITHOUT_CLASSIFICATION	7.090851350450565E-7	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.999999437816664	WITHOUT_CLASSIFICATION	5.62183335996038E-7	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.999999992171899	WITHOUT_CLASSIFICATION	7.828100951106997E-9	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999998515502754	WITHOUT_CLASSIFICATION	1.4844972454475168E-7	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.9999999217836343	WITHOUT_CLASSIFICATION	7.821636570202816E-8	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999640415985503	WITHOUT_CLASSIFICATION	3.595840144972258E-5	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999973214979	WITHOUT_CLASSIFICATION	2.6785021357071392E-9	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999998515502754	WITHOUT_CLASSIFICATION	1.4844972454475168E-7	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999997248308096	WITHOUT_CLASSIFICATION	2.751691903792524E-7	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999999413533976	WITHOUT_CLASSIFICATION	5.864660230992762E-8	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999996964092347	WITHOUT_CLASSIFICATION	3.035907652961626E-7	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999998241583742	WITHOUT_CLASSIFICATION	1.7584162578406826E-7	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.999999880857455	WITHOUT_CLASSIFICATION	1.1914254504218024E-7	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999979594273221	WITHOUT_CLASSIFICATION	2.040572677963627E-6	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999979594273221	WITHOUT_CLASSIFICATION	2.040572677963627E-6	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9113992154005004	WITHOUT_CLASSIFICATION	0.08860078459949963	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999567588957226	WITHOUT_CLASSIFICATION	4.324110427748296E-5	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999896516707674	WITHOUT_CLASSIFICATION	1.0348329232646926E-5	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999896516707674	WITHOUT_CLASSIFICATION	1.0348329232646926E-5	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.999999468221289	WITHOUT_CLASSIFICATION	5.317787108523468E-7	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9999119223390419	WITHOUT_CLASSIFICATION	8.80776609581368E-5	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999884568142487	WITHOUT_CLASSIFICATION	1.1543185751242524E-5	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999884568142487	WITHOUT_CLASSIFICATION	1.1543185751242524E-5	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999907048113457	WITHOUT_CLASSIFICATION	9.295188654244502E-6	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999990702006468	WITHOUT_CLASSIFICATION	9.297993531767718E-7	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999999996544501	WITHOUT_CLASSIFICATION	3.4554982029306067E-10	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999999222372093	WITHOUT_CLASSIFICATION	7.776279075151344E-8	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.999999920812793	WITHOUT_CLASSIFICATION	7.918720712436149E-8	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999943713122167	WITHOUT_CLASSIFICATION	5.628687783355865E-6	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999998740901431	WITHOUT_CLASSIFICATION	1.259098568645997E-7	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999998925816143	WITHOUT_CLASSIFICATION	1.074183856500165E-7	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999990792396872	WITHOUT_CLASSIFICATION	9.207603127507033E-7	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999998660872115	WITHOUT_CLASSIFICATION	1.339127885491196E-7	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9999438317556171	WITHOUT_CLASSIFICATION	5.616824438294681E-5	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999991949783211	WITHOUT_CLASSIFICATION	8.050216788088177E-7	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.999999402783619	WITHOUT_CLASSIFICATION	5.972163809013504E-7	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999956903666124	WITHOUT_CLASSIFICATION	4.309633387572089E-6	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999990266821903	WITHOUT_CLASSIFICATION	9.733178096964616E-7	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.99999993305595	WITHOUT_CLASSIFICATION	6.69440500031917E-8	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999987811037174	WITHOUT_CLASSIFICATION	1.2188962825438578E-6	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.999999789988283	WITHOUT_CLASSIFICATION	2.1001171695876548E-7	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999995780195358	WITHOUT_CLASSIFICATION	4.219804642535284E-7	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9859930003969485	WITHOUT_CLASSIFICATION	0.014006999603051476	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999999963449004	WITHOUT_CLASSIFICATION	3.6550994361936874E-9	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999992723975538	WITHOUT_CLASSIFICATION	7.276024462412257E-7	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999524337886574	WITHOUT_CLASSIFICATION	4.756621134254826E-5	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999988395078733	WITHOUT_CLASSIFICATION	1.1604921267909943E-6	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999991502007894	WITHOUT_CLASSIFICATION	8.497992105731943E-7	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999999172458741	WITHOUT_CLASSIFICATION	8.275412583639886E-8	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999999808888326	WITHOUT_CLASSIFICATION	1.9111167505166967E-8	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9999996517093517	WITHOUT_CLASSIFICATION	3.482906483232899E-7	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999998706645998	WITHOUT_CLASSIFICATION	1.293354000395202E-7	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999998706645998	WITHOUT_CLASSIFICATION	1.293354000395202E-7	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.999999999722551	WITHOUT_CLASSIFICATION	2.7744901921736543E-10	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999999968333196	WITHOUT_CLASSIFICATION	3.166680384748355E-9	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999999960596208	WITHOUT_CLASSIFICATION	3.940379276018001E-9	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999996831748101	WITHOUT_CLASSIFICATION	3.168251898781595E-7	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999999139263809	WITHOUT_CLASSIFICATION	8.607361918390037E-8	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9999993580513031	WITHOUT_CLASSIFICATION	6.419486968465412E-7	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999970962088197	WITHOUT_CLASSIFICATION	2.9037911804258266E-6	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.999999883753257	WITHOUT_CLASSIFICATION	1.16246742987725E-7	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999999992648401	WITHOUT_CLASSIFICATION	7.351598893282286E-10	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999997825049762	WITHOUT_CLASSIFICATION	2.1749502376353763E-7	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999018517597674	WITHOUT_CLASSIFICATION	9.81482402325649E-5	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.999999990805828	WITHOUT_CLASSIFICATION	9.194171922656027E-9	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.999877536471042	WITHOUT_CLASSIFICATION	1.224635289579729E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999826349699914	WITHOUT_CLASSIFICATION	1.736503000855252E-5	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999993530884229	WITHOUT_CLASSIFICATION	6.469115770127537E-7	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999983904714875	WITHOUT_CLASSIFICATION	1.6095285124587373E-6	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9997940927341501	WITHOUT_CLASSIFICATION	2.0590726584987946E-4	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999994053106988	WITHOUT_CLASSIFICATION	5.946893011582764E-7	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9999996728891224	WITHOUT_CLASSIFICATION	3.271108775601336E-7	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999987629724267	WITHOUT_CLASSIFICATION	1.2370275731738655E-6	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999981238296396	WITHOUT_CLASSIFICATION	1.8761703604975283E-6	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999569419171935	WITHOUT_CLASSIFICATION	4.305808280643688E-5	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999995948310515	WITHOUT_CLASSIFICATION	4.0516894858447774E-7	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999991161158447	WITHOUT_CLASSIFICATION	8.838841552451216E-7	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999987576458721	WITHOUT_CLASSIFICATION	1.2423541278409602E-6	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9996790646454697	WITHOUT_CLASSIFICATION	3.209353545302865E-4	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.999996914950804	WITHOUT_CLASSIFICATION	3.0850491959099204E-6	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999977666244412	WITHOUT_CLASSIFICATION	2.233375558736934E-6	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9999998399626673	WITHOUT_CLASSIFICATION	1.6003733265674486E-7	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9999997112352528	WITHOUT_CLASSIFICATION	2.887647471672964E-7	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999999950948676	WITHOUT_CLASSIFICATION	4.90513245153929E-9	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999995059103807	WITHOUT_CLASSIFICATION	4.940896192852651E-7	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999992287778559	WITHOUT_CLASSIFICATION	7.712221440866637E-7	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9999988556546819	WITHOUT_CLASSIFICATION	1.1443453180403826E-6	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999991231370641	WITHOUT_CLASSIFICATION	8.768629359736058E-7	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999470413524507	WITHOUT_CLASSIFICATION	5.295864754931527E-5	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999961919328568	WITHOUT_CLASSIFICATION	3.808067143186277E-6	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999650938662278	WITHOUT_CLASSIFICATION	3.4906133772205635E-5	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999942369682127	WITHOUT_CLASSIFICATION	5.763031787323982E-6	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.999999932262249	WITHOUT_CLASSIFICATION	6.773775093609462E-8	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999973658811142	WITHOUT_CLASSIFICATION	2.6341188858936364E-6	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999999723027703	WITHOUT_CLASSIFICATION	2.7697229650877186E-8	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999979058497004	WITHOUT_CLASSIFICATION	2.09415029966424E-6	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999979058497004	WITHOUT_CLASSIFICATION	2.09415029966424E-6	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999882484889583	WITHOUT_CLASSIFICATION	1.175151104169113E-5	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.999999975574034	WITHOUT_CLASSIFICATION	2.4425966037198877E-8	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9958480332959894	WITHOUT_CLASSIFICATION	0.0041519667040106276	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999998460888185	WITHOUT_CLASSIFICATION	1.5391118145568025E-7	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999404267260812	WITHOUT_CLASSIFICATION	5.957327391887202E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999962729392541	WITHOUT_CLASSIFICATION	3.7270607458077404E-6	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9998951805007313	WITHOUT_CLASSIFICATION	1.0481949926870697E-4	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999785869222175	WITHOUT_CLASSIFICATION	2.1413077782491507E-5	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999998634304559	WITHOUT_CLASSIFICATION	1.3656954415511296E-7	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9999995134633498	WITHOUT_CLASSIFICATION	4.865366502246775E-7	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9999999421654079	WITHOUT_CLASSIFICATION	5.7834592194310606E-8	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.999999312579356	WITHOUT_CLASSIFICATION	6.874206439204648E-7	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9999999279578375	WITHOUT_CLASSIFICATION	7.204216244382848E-8	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999999932935034	WITHOUT_CLASSIFICATION	6.706496470388085E-9	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999702917326	WITHOUT_CLASSIFICATION	2.970826739056663E-8	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9999997309468244	WITHOUT_CLASSIFICATION	2.6905317558425296E-7	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999943280763	WITHOUT_CLASSIFICATION	5.6719237542187096E-9	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9999997362302416	WITHOUT_CLASSIFICATION	2.6376975841672974E-7	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999474651567	WITHOUT_CLASSIFICATION	5.253484327316753E-8	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.999999706876991	WITHOUT_CLASSIFICATION	2.9312300898182096E-7	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999998696296538	WITHOUT_CLASSIFICATION	1.303703462345741E-7	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.999967006912346	WITHOUT_CLASSIFICATION	3.299308765410291E-5	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999990706996059	WITHOUT_CLASSIFICATION	9.293003941067327E-7	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999998073872465	WITHOUT_CLASSIFICATION	1.9261275361337926E-7	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999995995622	WITHOUT_CLASSIFICATION	4.0043772419867774E-10	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999999997578779	WITHOUT_CLASSIFICATION	2.4212209004938218E-9	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.99999999553922	WITHOUT_CLASSIFICATION	4.460779963725409E-9	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999999550059133	WITHOUT_CLASSIFICATION	4.499408656890912E-8	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999999671761586	WITHOUT_CLASSIFICATION	3.282384135832076E-8	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.999999515718226	WITHOUT_CLASSIFICATION	4.842817739568293E-7	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999999768221283	WITHOUT_CLASSIFICATION	2.3177871746081757E-8	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999999444314878	WITHOUT_CLASSIFICATION	5.5568512144397104E-8	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999809853708318	WITHOUT_CLASSIFICATION	1.9014629168289904E-5	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9954771227409094	WITHOUT_CLASSIFICATION	0.004522877259090585	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999650938662278	WITHOUT_CLASSIFICATION	3.4906133772205635E-5	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999564820333632	WITHOUT_CLASSIFICATION	4.351796663686885E-5	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.999999984131893	WITHOUT_CLASSIFICATION	1.586810710279067E-8	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.999999984131893	WITHOUT_CLASSIFICATION	1.586810710279067E-8	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999999956220383	WITHOUT_CLASSIFICATION	4.377961690203218E-9	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999999977684852	WITHOUT_CLASSIFICATION	2.2315147569777335E-9	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999902702139111	WITHOUT_CLASSIFICATION	9.729786088866172E-6	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.999794428743743	WITHOUT_CLASSIFICATION	2.055712562569577E-4	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9974127154945884	WITHOUT_CLASSIFICATION	0.002587284505411644	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9979736498173519	WITHOUT_CLASSIFICATION	0.0020263501826481194	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9977922074707075	WITHOUT_CLASSIFICATION	0.0022077925292924693	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9980658733871128	WITHOUT_CLASSIFICATION	0.0019341266128871906	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9916865642794466	WITHOUT_CLASSIFICATION	0.008313435720553446	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9947473354802404	WITHOUT_CLASSIFICATION	0.005252664519759604	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9920626508844791	WITHOUT_CLASSIFICATION	0.007937349115520886	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9835226016344686	WITHOUT_CLASSIFICATION	0.01647739836553133	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9982757434575078	WITHOUT_CLASSIFICATION	0.001724256542492185	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999980822916688	WITHOUT_CLASSIFICATION	1.9177083312873264E-6	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999997327836946	WITHOUT_CLASSIFICATION	2.6721630544525867E-7	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999985962187513	WITHOUT_CLASSIFICATION	1.4037812486833686E-6	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.997493679559293	WITHOUT_CLASSIFICATION	0.0025063204407069976	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9717005279464028	WITHOUT_CLASSIFICATION	0.02829947205359717	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9860386490004007	WITHOUT_CLASSIFICATION	0.01396135099959942	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9911602869780614	WITHOUT_CLASSIFICATION	0.008839713021938578	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9915392460016182	WITHOUT_CLASSIFICATION	0.008460753998381787	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.990907537201005	WITHOUT_CLASSIFICATION	0.00909246279899496	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.999999187637064	WITHOUT_CLASSIFICATION	8.12362935987263E-7	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999999316520511	WITHOUT_CLASSIFICATION	6.83479489025564E-8	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999999993029298	WITHOUT_CLASSIFICATION	6.970702147226643E-10	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.988664874263527	WITHOUT_CLASSIFICATION	0.011335125736472955	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999994690721532	WITHOUT_CLASSIFICATION	5.309278467962029E-7	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999998487578716	WITHOUT_CLASSIFICATION	1.5124212834685206E-7	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999990907616292	WITHOUT_CLASSIFICATION	9.092383708424827E-7	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999960682272465	WITHOUT_CLASSIFICATION	3.9317727534885635E-6	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9999999835189911	WITHOUT_CLASSIFICATION	1.6481008807137285E-8	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999999213444384	WITHOUT_CLASSIFICATION	7.865556162078075E-8	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9999998488617132	WITHOUT_CLASSIFICATION	1.5113828680124723E-7	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999999918239313	WITHOUT_CLASSIFICATION	8.176068690318604E-9	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999979079756144	WITHOUT_CLASSIFICATION	2.0920243857185434E-6	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999980480284766	WITHOUT_CLASSIFICATION	1.9519715233408302E-6	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999968674191	WITHOUT_CLASSIFICATION	3.132580765945214E-9	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.988664874263527	WITHOUT_CLASSIFICATION	0.011335125736472955	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999994690721532	WITHOUT_CLASSIFICATION	5.309278467962029E-7	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999998487578716	WITHOUT_CLASSIFICATION	1.5124212834685206E-7	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999960682272465	WITHOUT_CLASSIFICATION	3.9317727534885635E-6	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9955372775804868	WITHOUT_CLASSIFICATION	0.004462722419513203	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999961373272	WITHOUT_CLASSIFICATION	3.8626728066049614E-9	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999596493092507	WITHOUT_CLASSIFICATION	4.035069074918902E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999996644285221	WITHOUT_CLASSIFICATION	3.355714779797471E-7	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999955164109616	WITHOUT_CLASSIFICATION	4.48358903838827E-6	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999964333633	WITHOUT_CLASSIFICATION	3.5666366273783417E-9	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999987775785133	WITHOUT_CLASSIFICATION	1.22242148660726E-6	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999997951378173	WITHOUT_CLASSIFICATION	2.0486218279680918E-7	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.99999989223445	WITHOUT_CLASSIFICATION	1.0776555012174338E-7	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999949410896646	WITHOUT_CLASSIFICATION	5.058910335341275E-6	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999999634947111	WITHOUT_CLASSIFICATION	3.650528883248201E-8	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999999799032113	WITHOUT_CLASSIFICATION	2.0096788698204858E-8	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999999949148245	WITHOUT_CLASSIFICATION	5.085175568266394E-9	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999983888916868	WITHOUT_CLASSIFICATION	1.6111083131129763E-6	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9999974609806922	WITHOUT_CLASSIFICATION	2.539019307829634E-6	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9999976734919666	WITHOUT_CLASSIFICATION	2.326508033434235E-6	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999999333425718	WITHOUT_CLASSIFICATION	6.665742818198904E-8	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999994019157755	WITHOUT_CLASSIFICATION	5.980842244154323E-7	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999998302190501	WITHOUT_CLASSIFICATION	1.6978094999315188E-7	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999968674191	WITHOUT_CLASSIFICATION	3.132580765945214E-9	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999961373272	WITHOUT_CLASSIFICATION	3.8626728066049614E-9	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999596493092507	WITHOUT_CLASSIFICATION	4.035069074918902E-5	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999955164109616	WITHOUT_CLASSIFICATION	4.48358903838827E-6	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999964333633	WITHOUT_CLASSIFICATION	3.5666366273783417E-9	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999987775785133	WITHOUT_CLASSIFICATION	1.22242148660726E-6	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999997951378173	WITHOUT_CLASSIFICATION	2.0486218279680918E-7	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999998728068931	WITHOUT_CLASSIFICATION	1.271931069348189E-7	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999873234356796	WITHOUT_CLASSIFICATION	1.2676564320347003E-5	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.999999967231285	WITHOUT_CLASSIFICATION	3.2768714890824175E-8	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999995025924	WITHOUT_CLASSIFICATION	4.974074578771023E-10	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999998189261826	WITHOUT_CLASSIFICATION	1.8107381726679666E-7	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999998189261826	WITHOUT_CLASSIFICATION	1.8107381726679666E-7	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.999999992306947	WITHOUT_CLASSIFICATION	7.693053037813573E-9	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999985109148054	WITHOUT_CLASSIFICATION	1.4890851946069473E-6	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999999851410368	WITHOUT_CLASSIFICATION	1.485896324870103E-8	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999992467556978	WITHOUT_CLASSIFICATION	7.532443020887626E-7	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.999999993931771	WITHOUT_CLASSIFICATION	6.068228972254746E-9	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999977211459347	WITHOUT_CLASSIFICATION	2.2788540652965416E-6	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9999993806758439	WITHOUT_CLASSIFICATION	6.193241560482833E-7	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.999999720234231	WITHOUT_CLASSIFICATION	2.797657689580046E-7	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999997629342767	WITHOUT_CLASSIFICATION	2.3706572324380108E-7	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999404684301301	WITHOUT_CLASSIFICATION	5.953156986982774E-5	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.999978682282623	WITHOUT_CLASSIFICATION	2.1317717376958756E-5	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9992390577606581	WITHOUT_CLASSIFICATION	7.609422393418764E-4	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.999993407767098	WITHOUT_CLASSIFICATION	6.592232901982836E-6	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999992757321418	WITHOUT_CLASSIFICATION	7.242678582333178E-7	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999991890613634	WITHOUT_CLASSIFICATION	8.109386364826636E-7	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999720989923035	WITHOUT_CLASSIFICATION	2.790100769648571E-5	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9999993939498336	WITHOUT_CLASSIFICATION	6.060501663868692E-7	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999999361637542	WITHOUT_CLASSIFICATION	6.383624577873127E-8	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999999514621245	WITHOUT_CLASSIFICATION	4.8537875449958616E-8	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.999999832120468	WITHOUT_CLASSIFICATION	1.678795319361305E-7	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9650351915870403	IMPLEMENTATION	0.034964808412959715	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999999626914283	WITHOUT_CLASSIFICATION	3.73085716693148E-8	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999999948080308	WITHOUT_CLASSIFICATION	5.1919691587184054E-9	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.616086456910256	WITHOUT_CLASSIFICATION	0.38391354308974396	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999802243836987	WITHOUT_CLASSIFICATION	1.9775616301237474E-5	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999973025558868	WITHOUT_CLASSIFICATION	2.697444113292244E-6	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999983665335	WITHOUT_CLASSIFICATION	1.6334665429702212E-9	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999997676639047	WITHOUT_CLASSIFICATION	2.323360952844186E-7	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9999995967454134	WITHOUT_CLASSIFICATION	4.0325458657779693E-7	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999802243836987	WITHOUT_CLASSIFICATION	1.9775616301237474E-5	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999973025558868	WITHOUT_CLASSIFICATION	2.697444113292244E-6	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999992757321418	WITHOUT_CLASSIFICATION	7.242678582333178E-7	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999762368576511	WITHOUT_CLASSIFICATION	2.3763142348820678E-5	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999990377134831	WITHOUT_CLASSIFICATION	9.6228651694827E-7	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999884661524656	WITHOUT_CLASSIFICATION	1.1533847534324343E-5	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999999997885356	WITHOUT_CLASSIFICATION	2.114644124580324E-10	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999983640222676	WITHOUT_CLASSIFICATION	1.6359777323188723E-6	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999988167786921	WITHOUT_CLASSIFICATION	1.1832213079500847E-6	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999975670172793	WITHOUT_CLASSIFICATION	2.4329827207199215E-6	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.999998101174912	WITHOUT_CLASSIFICATION	1.8988250880524676E-6	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999979020206666	WITHOUT_CLASSIFICATION	2.0979793333804893E-6	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999999999582266	WITHOUT_CLASSIFICATION	4.177340385073748E-11	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999925791138681	WITHOUT_CLASSIFICATION	7.4208861319920045E-6	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999833968918578	WITHOUT_CLASSIFICATION	1.660310814221902E-5	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999301713445794	WITHOUT_CLASSIFICATION	6.982865542056871E-5	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999999928148968	WITHOUT_CLASSIFICATION	7.18510314622129E-9	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.999999999240259	WITHOUT_CLASSIFICATION	7.59740894904456E-10	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999995535193574	WITHOUT_CLASSIFICATION	4.4648064263047496E-7	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999836400195107	WITHOUT_CLASSIFICATION	1.6359980489279862E-5	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999863310428417	WITHOUT_CLASSIFICATION	1.3668957158198619E-5	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999300852753104	WITHOUT_CLASSIFICATION	6.991472468960842E-5	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.999999984623724	WITHOUT_CLASSIFICATION	1.537627599506068E-8	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999999587297855	WITHOUT_CLASSIFICATION	4.1270214408376144E-8	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999999133220894	WITHOUT_CLASSIFICATION	8.667791061138934E-8	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999996000680507	WITHOUT_CLASSIFICATION	3.999319493621735E-7	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999964864718	WITHOUT_CLASSIFICATION	3.5135281166801018E-9	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999999645932569	WITHOUT_CLASSIFICATION	3.5406743139202786E-8	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999999378618655	WITHOUT_CLASSIFICATION	6.213813459392363E-8	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9999854407200534	WITHOUT_CLASSIFICATION	1.4559279946639101E-5	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999923230823532	WITHOUT_CLASSIFICATION	7.67691764672024E-6	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999992395167132	WITHOUT_CLASSIFICATION	7.604832867894873E-7	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.999999997596674	WITHOUT_CLASSIFICATION	2.4033258951096724E-9	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999991824284132	WITHOUT_CLASSIFICATION	8.175715867832137E-7	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999605050684043	WITHOUT_CLASSIFICATION	3.949493159565835E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999605050684043	WITHOUT_CLASSIFICATION	3.949493159565835E-5	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.999993407767098	WITHOUT_CLASSIFICATION	6.592232901982836E-6	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999999998823372	WITHOUT_CLASSIFICATION	1.1766284820852331E-10	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999280852194371	WITHOUT_CLASSIFICATION	7.19147805628776E-5	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999998999712738	WITHOUT_CLASSIFICATION	1.0002872615761041E-7	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999968390732272	WITHOUT_CLASSIFICATION	3.1609267727584814E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999968390732272	WITHOUT_CLASSIFICATION	3.1609267727584814E-6	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999998880123712	WITHOUT_CLASSIFICATION	1.11987628788677E-7	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999675780231632	WITHOUT_CLASSIFICATION	3.2421976836860485E-5	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999944724959848	WITHOUT_CLASSIFICATION	5.527504015128476E-6	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999997466149165	WITHOUT_CLASSIFICATION	2.533850835302774E-7	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999999583417954	WITHOUT_CLASSIFICATION	4.165820462360469E-8	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999999998069651	WITHOUT_CLASSIFICATION	1.9303478708103142E-10	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999997305727558	WITHOUT_CLASSIFICATION	2.694272441657096E-7	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999443148235798	WITHOUT_CLASSIFICATION	5.568517642023078E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999368828678	WITHOUT_CLASSIFICATION	6.311713217145492E-8	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.999997617086106	WITHOUT_CLASSIFICATION	2.382913893971967E-6	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999998846749567	WITHOUT_CLASSIFICATION	1.1532504331622107E-7	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999999606620315	WITHOUT_CLASSIFICATION	3.933796854003273E-8	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999998990494953	WITHOUT_CLASSIFICATION	1.0095050470784716E-7	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999998334741605	WITHOUT_CLASSIFICATION	1.665258395401866E-7	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999995501631225	WITHOUT_CLASSIFICATION	4.4983687749615316E-7	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.9999978865461975	WITHOUT_CLASSIFICATION	2.113453802507502E-6	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999978824476	WITHOUT_CLASSIFICATION	2.1175523493340984E-9	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999978824476	WITHOUT_CLASSIFICATION	2.1175523493340984E-9	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999988702669462	WITHOUT_CLASSIFICATION	1.129733053748383E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999988702669462	WITHOUT_CLASSIFICATION	1.129733053748383E-6	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.999999999034026	WITHOUT_CLASSIFICATION	9.659740086277613E-10	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999999932285522	WITHOUT_CLASSIFICATION	6.771447762660192E-9	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999998574017905	WITHOUT_CLASSIFICATION	1.4259820943915988E-7	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9945646868345164	WITHOUT_CLASSIFICATION	0.005435313165483638	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.999999989438818	WITHOUT_CLASSIFICATION	1.0561181930482838E-8	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999982042539358	WITHOUT_CLASSIFICATION	1.7957460641712407E-6	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999998156142512	WITHOUT_CLASSIFICATION	1.843857487338129E-7	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999999606620315	WITHOUT_CLASSIFICATION	3.933796854003273E-8	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999998990494953	WITHOUT_CLASSIFICATION	1.0095050470784716E-7	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999995501631225	WITHOUT_CLASSIFICATION	4.4983687749615316E-7	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999999944963237	WITHOUT_CLASSIFICATION	5.503676239649572E-9	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999965739185352	WITHOUT_CLASSIFICATION	3.426081464739535E-6	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999999880606251	WITHOUT_CLASSIFICATION	1.1939374861543166E-8	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999990821818804	WITHOUT_CLASSIFICATION	9.178181197361776E-7	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999999998815204	WITHOUT_CLASSIFICATION	1.1847957107319722E-10	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999995874065299	WITHOUT_CLASSIFICATION	4.1259346999884386E-7	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999996488876179	WITHOUT_CLASSIFICATION	3.5111238203120764E-7	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999978599368139	WITHOUT_CLASSIFICATION	2.1400631861219953E-6	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.999993476925627	WITHOUT_CLASSIFICATION	6.523074373011306E-6	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999999981746	WITHOUT_CLASSIFICATION	1.825412427761355E-12	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999793269415992	WITHOUT_CLASSIFICATION	2.0673058400874096E-5	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999984441984976	WITHOUT_CLASSIFICATION	1.5558015023263634E-6	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999999287291801	WITHOUT_CLASSIFICATION	7.127081993301796E-8	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999999229139508	WITHOUT_CLASSIFICATION	7.708604925493143E-8	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.999772962835105	WITHOUT_CLASSIFICATION	2.2703716489502925E-4	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999999907356056	WITHOUT_CLASSIFICATION	9.264394318361174E-9	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999998002534044	WITHOUT_CLASSIFICATION	1.9974659563967386E-7	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9997987271355933	WITHOUT_CLASSIFICATION	2.012728644068811E-4	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999904312007882	WITHOUT_CLASSIFICATION	9.568799211691651E-6	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999999994552632	WITHOUT_CLASSIFICATION	5.447367980517021E-10	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999999993538377	WITHOUT_CLASSIFICATION	6.46162368244051E-10	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.999975306855522	WITHOUT_CLASSIFICATION	2.4693144477989806E-5	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999974885466518	WITHOUT_CLASSIFICATION	2.5114533481416207E-6	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999999818649689	WITHOUT_CLASSIFICATION	1.8135031226294778E-8	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999994008472296	WITHOUT_CLASSIFICATION	5.991527703640053E-7	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999994122244572	WITHOUT_CLASSIFICATION	5.877755428648574E-7	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999804416038044	WITHOUT_CLASSIFICATION	1.9558396195627045E-5	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999884941508529	WITHOUT_CLASSIFICATION	1.1505849147108893E-5	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999999968247106	WITHOUT_CLASSIFICATION	3.1752893487520755E-9	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.99999938142962	WITHOUT_CLASSIFICATION	6.185703801252056E-7	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999995875906939	WITHOUT_CLASSIFICATION	4.124093061020934E-7	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999998214585323	WITHOUT_CLASSIFICATION	1.7854146770841964E-7	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999997912695895	WITHOUT_CLASSIFICATION	2.0873041045710937E-7	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999998529605039	WITHOUT_CLASSIFICATION	1.4703949617527528E-7	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999861442786638	WITHOUT_CLASSIFICATION	1.3855721336070226E-5	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999983438082194	WITHOUT_CLASSIFICATION	1.6561917806480359E-6	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999935187662723	WITHOUT_CLASSIFICATION	6.481233727710323E-6	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999998060553102	WITHOUT_CLASSIFICATION	1.939446898175154E-7	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999997409404162	WITHOUT_CLASSIFICATION	2.590595837295954E-7	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999999989395594	WITHOUT_CLASSIFICATION	1.0604406952562622E-9	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999997067804218	WITHOUT_CLASSIFICATION	2.932195781788878E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999280852194371	WITHOUT_CLASSIFICATION	7.19147805628776E-5	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999935187662723	WITHOUT_CLASSIFICATION	6.481233727710323E-6	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999999864172585	WITHOUT_CLASSIFICATION	1.358274145575782E-8	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999993047821457	WITHOUT_CLASSIFICATION	6.952178542985884E-7	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999989743539905	WITHOUT_CLASSIFICATION	1.0256460094313485E-6	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.999999595314104	WITHOUT_CLASSIFICATION	4.046858960207604E-7	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.999999595314104	WITHOUT_CLASSIFICATION	4.046858960207604E-7	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9988352897676523	WITHOUT_CLASSIFICATION	0.0011647102323477272	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999641765199636	WITHOUT_CLASSIFICATION	3.582348003638387E-5	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999992806327137	WITHOUT_CLASSIFICATION	7.193672862887809E-7	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999999969240699	WITHOUT_CLASSIFICATION	3.07593018301662E-9	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.998335441460841	WITHOUT_CLASSIFICATION	0.001664558539158988	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999998802400126	WITHOUT_CLASSIFICATION	1.1975998743227346E-7	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999999995715817	WITHOUT_CLASSIFICATION	4.2841832183160666E-10	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999976629079337	WITHOUT_CLASSIFICATION	2.3370920662202737E-6	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999899533335	WITHOUT_CLASSIFICATION	1.0046666388764083E-8	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999899533335	WITHOUT_CLASSIFICATION	1.0046666388764083E-8	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999999165890487	WITHOUT_CLASSIFICATION	8.341095120417955E-8	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.99999471422729	WITHOUT_CLASSIFICATION	5.285772709917754E-6	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999999931216579	WITHOUT_CLASSIFICATION	6.87834218455217E-9	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9999999964429955	WITHOUT_CLASSIFICATION	3.5570044178247845E-9	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999999994244999	WITHOUT_CLASSIFICATION	5.755000939908823E-10	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999998244959202	WITHOUT_CLASSIFICATION	1.7550407983086884E-7	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999999974923723	WITHOUT_CLASSIFICATION	2.507627620142415E-9	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.999999998526777	WITHOUT_CLASSIFICATION	1.4732230678161353E-9	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9999999021207522	WITHOUT_CLASSIFICATION	9.787924784745917E-8	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999999930660781	WITHOUT_CLASSIFICATION	6.933921841477992E-9	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.999989188999829	WITHOUT_CLASSIFICATION	1.081100017101332E-5	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999999798617217	WITHOUT_CLASSIFICATION	2.0138278346341297E-8	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999994543455444	WITHOUT_CLASSIFICATION	5.456544555997141E-7	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999996540490704	WITHOUT_CLASSIFICATION	3.459509295128387E-7	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999996540490704	WITHOUT_CLASSIFICATION	3.459509295128387E-7	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999999971339876	WITHOUT_CLASSIFICATION	2.866012489583224E-9	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999997951378173	WITHOUT_CLASSIFICATION	2.0486218279680918E-7	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.999999999392614	WITHOUT_CLASSIFICATION	6.073859025152139E-10	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999997523083821	WITHOUT_CLASSIFICATION	2.4769161792503473E-7	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999999875814	WITHOUT_CLASSIFICATION	1.2418582974927574E-11	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999999908534419	WITHOUT_CLASSIFICATION	9.146558166967339E-9	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999999982412071	WITHOUT_CLASSIFICATION	1.7587929770049257E-9	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999980296193588	WITHOUT_CLASSIFICATION	1.970380641330981E-6	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999958490592928	WITHOUT_CLASSIFICATION	4.150940707224113E-6	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9999997926509959	WITHOUT_CLASSIFICATION	2.0734900394884016E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999822726213222	WITHOUT_CLASSIFICATION	1.772737867786037E-5	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999999820781289	WITHOUT_CLASSIFICATION	1.7921871098478484E-8	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999135064606467	WITHOUT_CLASSIFICATION	8.649353935321137E-5	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999999999512629	WITHOUT_CLASSIFICATION	4.87371966728403E-11	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.999999988438557	WITHOUT_CLASSIFICATION	1.1561443070053232E-8	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999999920451685	WITHOUT_CLASSIFICATION	7.954831556994159E-9	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999999405656117	WITHOUT_CLASSIFICATION	5.9434388216194346E-8	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999997202041608	WITHOUT_CLASSIFICATION	2.7979583925297745E-7	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.999999968403562	WITHOUT_CLASSIFICATION	3.159643801704062E-8	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999991015945339	WITHOUT_CLASSIFICATION	8.98405466062495E-7	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9999969083764468	WITHOUT_CLASSIFICATION	3.0916235531921142E-6	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9999999912493697	WITHOUT_CLASSIFICATION	8.750630365930258E-9	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999388068427648	WITHOUT_CLASSIFICATION	6.119315723517485E-5	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999981824684927	WITHOUT_CLASSIFICATION	1.81753150727724E-6	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.7758043232573899	WITHOUT_CLASSIFICATION	0.22419567674261	IMPLEMENTATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999990003961621	WITHOUT_CLASSIFICATION	9.996038378656687E-7	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9999992082479153	WITHOUT_CLASSIFICATION	7.917520847067899E-7	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.999998585092292	WITHOUT_CLASSIFICATION	1.4149077079415477E-6	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9999999202335614	WITHOUT_CLASSIFICATION	7.976643857891205E-8	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9985502280521762	WITHOUT_CLASSIFICATION	0.001449771947823757	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.999998902182956	WITHOUT_CLASSIFICATION	1.09781704405257E-6	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9999984742187222	WITHOUT_CLASSIFICATION	1.5257812778217738E-6	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999999486072183	WITHOUT_CLASSIFICATION	5.139278173816962E-8	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9994125552987261	WITHOUT_CLASSIFICATION	5.874447012739628E-4	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999978826463295	WITHOUT_CLASSIFICATION	2.1173536705089894E-6	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999999891984229	WITHOUT_CLASSIFICATION	1.0801577109711192E-8	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999996499916746	WITHOUT_CLASSIFICATION	3.500083254063689E-7	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999998730168622	WITHOUT_CLASSIFICATION	1.2698313777664841E-7	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999999967538952	WITHOUT_CLASSIFICATION	3.24610481029182E-9	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999997272458925	WITHOUT_CLASSIFICATION	2.727541075821678E-7	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999998283181203	WITHOUT_CLASSIFICATION	1.7168187967543373E-7	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9943996541297835	WITHOUT_CLASSIFICATION	0.005600345870216497	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999630580780187	WITHOUT_CLASSIFICATION	3.694192198122814E-5	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999960519594318	WITHOUT_CLASSIFICATION	3.948040568214727E-6	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9999998701045034	WITHOUT_CLASSIFICATION	1.2989549651571896E-7	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999964980538086	WITHOUT_CLASSIFICATION	3.5019461913690123E-6	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999867335612	WITHOUT_CLASSIFICATION	1.3266438964292435E-8	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999992926274	WITHOUT_CLASSIFICATION	7.073725730631017E-10	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999957057391855	WITHOUT_CLASSIFICATION	4.2942608144466515E-6	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999802243836987	WITHOUT_CLASSIFICATION	1.9775616301237474E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999802243836987	WITHOUT_CLASSIFICATION	1.9775616301237474E-5	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999997351564178	WITHOUT_CLASSIFICATION	2.648435821639687E-7	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999999551608323	WITHOUT_CLASSIFICATION	4.4839167686252454E-8	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999999764655705	WITHOUT_CLASSIFICATION	2.3534429454972675E-8	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999999998151974	WITHOUT_CLASSIFICATION	1.8480265492443846E-10	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999995727470636	WITHOUT_CLASSIFICATION	4.2725293646673345E-7	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999991256629708	WITHOUT_CLASSIFICATION	8.743370291128104E-7	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999999959709156	WITHOUT_CLASSIFICATION	4.029084507033064E-9	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999993026563	WITHOUT_CLASSIFICATION	6.973437190157635E-10	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.999999998551808	WITHOUT_CLASSIFICATION	1.4481920663833135E-9	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999999244012501	WITHOUT_CLASSIFICATION	7.559874995468975E-8	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999997778156811	WITHOUT_CLASSIFICATION	2.2218431905565133E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999997778156811	WITHOUT_CLASSIFICATION	2.2218431905565133E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999997778156811	WITHOUT_CLASSIFICATION	2.2218431905565133E-7	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9992038470300375	WITHOUT_CLASSIFICATION	7.961529699624121E-4	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999999482916901	WITHOUT_CLASSIFICATION	5.1708309851229074E-8	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9999996050579901	WITHOUT_CLASSIFICATION	3.94942009935613E-7	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999996112097244	WITHOUT_CLASSIFICATION	3.8879027560944827E-7	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999996112097244	WITHOUT_CLASSIFICATION	3.8879027560944827E-7	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999923974192026	WITHOUT_CLASSIFICATION	7.602580797323995E-6	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999438245004664	WITHOUT_CLASSIFICATION	5.617549953364323E-5	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999999995000172	WITHOUT_CLASSIFICATION	4.999828130961274E-10	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999999008345104	WITHOUT_CLASSIFICATION	9.916548950941799E-8	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999997958213381	WITHOUT_CLASSIFICATION	2.0417866194113532E-7	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9994016478839371	WITHOUT_CLASSIFICATION	5.983521160628926E-4	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999998819615006	WITHOUT_CLASSIFICATION	1.1803849942756636E-7	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999697770104106	WITHOUT_CLASSIFICATION	3.0222989589437717E-5	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999999968591387	WITHOUT_CLASSIFICATION	3.1408613731721913E-9	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999977707776927	WITHOUT_CLASSIFICATION	2.2292223072967744E-6	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999977707776927	WITHOUT_CLASSIFICATION	2.2292223072967744E-6	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999996387147277	WITHOUT_CLASSIFICATION	3.612852723392094E-7	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999999365464012	WITHOUT_CLASSIFICATION	6.345359879157695E-8	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999998335497183	WITHOUT_CLASSIFICATION	1.6645028154524884E-7	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999996081933538	WITHOUT_CLASSIFICATION	3.9180664617759636E-7	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999999574937798	WITHOUT_CLASSIFICATION	4.2506220275957234E-8	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999956000406938	WITHOUT_CLASSIFICATION	4.399959306254118E-6	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999987775315087	WITHOUT_CLASSIFICATION	1.2224684912567741E-6	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999816626367748	WITHOUT_CLASSIFICATION	1.833736322522268E-5	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999993303495435	WITHOUT_CLASSIFICATION	6.69650456654374E-7	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9999996601942003	WITHOUT_CLASSIFICATION	3.3980579975031754E-7	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999998731844871	WITHOUT_CLASSIFICATION	1.2681551281819867E-7	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999999174286789	WITHOUT_CLASSIFICATION	8.257132105251246E-8	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9999999548181423	WITHOUT_CLASSIFICATION	4.518185768895768E-8	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999968001382701	WITHOUT_CLASSIFICATION	3.199861729874672E-6	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9971851591311587	WITHOUT_CLASSIFICATION	0.002814840868841328	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999996654608941	WITHOUT_CLASSIFICATION	3.34539105844401E-7	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999960861371698	WITHOUT_CLASSIFICATION	3.91386283016066E-6	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999999625052789	WITHOUT_CLASSIFICATION	3.7494721006708984E-8	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999993082839559	WITHOUT_CLASSIFICATION	6.91716044204637E-7	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999999566085848	WITHOUT_CLASSIFICATION	4.3391415176428735E-8	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999189393626623	WITHOUT_CLASSIFICATION	8.10606373376458E-5	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999776346717753	WITHOUT_CLASSIFICATION	2.2365328224858215E-5	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.999998377462058	WITHOUT_CLASSIFICATION	1.6225379420829295E-6	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999994374385247	WITHOUT_CLASSIFICATION	5.625614752619167E-7	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999988732485469	WITHOUT_CLASSIFICATION	1.1267514531947288E-6	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999944988355303	WITHOUT_CLASSIFICATION	5.501164469695602E-6	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999997293531587	WITHOUT_CLASSIFICATION	2.706468412904225E-7	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999999305661954	WITHOUT_CLASSIFICATION	6.943380455230626E-8	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999999957293215	WITHOUT_CLASSIFICATION	4.270678475661312E-9	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999991925051468	WITHOUT_CLASSIFICATION	8.074948532092222E-7	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999997740765109	WITHOUT_CLASSIFICATION	2.2592348916799705E-7	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999360347611714	WITHOUT_CLASSIFICATION	6.396523882858529E-5	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999999585555355	WITHOUT_CLASSIFICATION	4.14444645234412E-8	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999997740765109	WITHOUT_CLASSIFICATION	2.2592348916799705E-7	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999924883673945	WITHOUT_CLASSIFICATION	7.511632605593752E-6	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999997679111063	WITHOUT_CLASSIFICATION	2.3208889377681896E-7	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999987623519452	WITHOUT_CLASSIFICATION	1.2376480547733094E-6	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999997393839613	WITHOUT_CLASSIFICATION	2.606160388018003E-7	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999999388526128	WITHOUT_CLASSIFICATION	6.114738713314941E-8	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999999560794764	WITHOUT_CLASSIFICATION	4.392052365003296E-8	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.999999953126955	WITHOUT_CLASSIFICATION	4.687304511714316E-8	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999998839413335	WITHOUT_CLASSIFICATION	1.1605866642322501E-7	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999994105888146	WITHOUT_CLASSIFICATION	5.894111853754936E-7	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999965637038692	WITHOUT_CLASSIFICATION	3.436296130638641E-6	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999907122014655	WITHOUT_CLASSIFICATION	9.287798534411585E-6	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999993644257198	WITHOUT_CLASSIFICATION	6.355742802924351E-7	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999956566247671	WITHOUT_CLASSIFICATION	4.343375232870756E-6	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999834039273405	WITHOUT_CLASSIFICATION	1.659607265954918E-5	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999979575131844	WITHOUT_CLASSIFICATION	2.0424868156171737E-6	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999979533191911	WITHOUT_CLASSIFICATION	2.0466808089055452E-6	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999985497007863	WITHOUT_CLASSIFICATION	1.4502992136422188E-6	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999996649605087	WITHOUT_CLASSIFICATION	3.3503949132974047E-7	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999987888928351	WITHOUT_CLASSIFICATION	1.2111071649323271E-6	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999598436871585	WITHOUT_CLASSIFICATION	4.015631284145791E-5	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999999500781256	WITHOUT_CLASSIFICATION	4.992187435683771E-8	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999999540462778	WITHOUT_CLASSIFICATION	4.59537221148057E-8	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999995202606847	WITHOUT_CLASSIFICATION	4.797393152105562E-7	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999998012620354	WITHOUT_CLASSIFICATION	1.9873796466346438E-7	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999999474525219	WITHOUT_CLASSIFICATION	5.254747829181102E-8	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999999999283273	WITHOUT_CLASSIFICATION	7.167269656755943E-11	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999998388383309	WITHOUT_CLASSIFICATION	1.6116166917978858E-7	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999998054188672	WITHOUT_CLASSIFICATION	1.945811327311676E-7	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9999939546659629	WITHOUT_CLASSIFICATION	6.045334037109587E-6	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.999984486991891	WITHOUT_CLASSIFICATION	1.5513008109011887E-5	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9999999015086609	WITHOUT_CLASSIFICATION	9.849133904573682E-8	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9987908700494678	WITHOUT_CLASSIFICATION	0.0012091299505322013	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.8596040595026757	WITHOUT_CLASSIFICATION	0.14039594049732437	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999999992530265	WITHOUT_CLASSIFICATION	7.469734581042146E-10	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999787898067689	WITHOUT_CLASSIFICATION	2.1210193230998797E-5	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9999999852593993	WITHOUT_CLASSIFICATION	1.474060085312116E-8	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9999998762742653	WITHOUT_CLASSIFICATION	1.2372573471655022E-7	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9999996828611345	WITHOUT_CLASSIFICATION	3.171388654795642E-7	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999926411200201	WITHOUT_CLASSIFICATION	7.358879979928293E-6	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9999997003620062	WITHOUT_CLASSIFICATION	2.9963799367515945E-7	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9999992472569018	WITHOUT_CLASSIFICATION	7.527430981364797E-7	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999877534658675	WITHOUT_CLASSIFICATION	1.224653413252738E-5	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9999449078517858	WITHOUT_CLASSIFICATION	5.509214821419043E-5	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9999969048141062	WITHOUT_CLASSIFICATION	3.0951858937396525E-6	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999985337982817	WITHOUT_CLASSIFICATION	1.4662017181936513E-6	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9999999925884518	WITHOUT_CLASSIFICATION	7.411548187205651E-9	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9999911251984158	WITHOUT_CLASSIFICATION	8.874801584208805E-6	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999999845000224	WITHOUT_CLASSIFICATION	1.5499977667995553E-8	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999995713012886	WITHOUT_CLASSIFICATION	4.286987115005919E-7	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.999999878590575	WITHOUT_CLASSIFICATION	1.214094250752487E-7	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999999460039815	WITHOUT_CLASSIFICATION	5.39960186041452E-8	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999995380346142	WITHOUT_CLASSIFICATION	4.61965385748454E-7	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999972097963552	WITHOUT_CLASSIFICATION	2.790203644844978E-6	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999995713012886	WITHOUT_CLASSIFICATION	4.286987115005919E-7	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.976999460697545	IMPLEMENTATION	0.023000539302454975	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.976999460697545	IMPLEMENTATION	0.023000539302454975	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999989819989896	WITHOUT_CLASSIFICATION	1.018001010316283E-6	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999999592177389	WITHOUT_CLASSIFICATION	4.078226117255404E-8	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999999385930571	WITHOUT_CLASSIFICATION	6.140694283371364E-8	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999999743045995	WITHOUT_CLASSIFICATION	2.569540046744899E-8	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.999999240618103	WITHOUT_CLASSIFICATION	7.593818969829766E-7	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999984152245026	WITHOUT_CLASSIFICATION	1.5847754973383314E-6	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999998074681862	WITHOUT_CLASSIFICATION	1.9253181378269503E-7	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9972875837091	IMPLEMENTATION	0.0027124162909001035	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999996738621639	WITHOUT_CLASSIFICATION	3.261378361188654E-7	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999975321076022	WITHOUT_CLASSIFICATION	2.467892397746768E-6	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999999999936218	WITHOUT_CLASSIFICATION	6.378256728410937E-12	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999957441817	WITHOUT_CLASSIFICATION	4.255818307192059E-9	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999983242925958	WITHOUT_CLASSIFICATION	1.6757074041367175E-6	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999997987180952	WITHOUT_CLASSIFICATION	2.0128190489181027E-7	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9998391623436843	WITHOUT_CLASSIFICATION	1.608376563158149E-4	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999582863816892	WITHOUT_CLASSIFICATION	4.171361831095511E-5	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999999997978318	WITHOUT_CLASSIFICATION	2.021680894091965E-10	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999997850200102	WITHOUT_CLASSIFICATION	2.1497998979090333E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999997850200102	WITHOUT_CLASSIFICATION	2.1497998979090333E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999997850200102	WITHOUT_CLASSIFICATION	2.1497998979090333E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999997850200102	WITHOUT_CLASSIFICATION	2.1497998979090333E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999997850200102	WITHOUT_CLASSIFICATION	2.1497998979090333E-6	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9999996170481564	WITHOUT_CLASSIFICATION	3.8295184347404055E-7	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998347959419	WITHOUT_CLASSIFICATION	1.652040580356124E-7	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999700405294093	WITHOUT_CLASSIFICATION	2.9959470590623587E-5	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999959064744	WITHOUT_CLASSIFICATION	4.0935256957747626E-9	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999999703855469	WITHOUT_CLASSIFICATION	2.961445317823553E-8	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999945351461	WITHOUT_CLASSIFICATION	5.4648539627995416E-9	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999787005518886	WITHOUT_CLASSIFICATION	2.12994481113077E-5	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999997591091143	WITHOUT_CLASSIFICATION	2.4089088570395364E-7	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999989165547336	WITHOUT_CLASSIFICATION	1.0834452663308354E-6	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9999987912179525	WITHOUT_CLASSIFICATION	1.2087820474318561E-6	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9999995183089283	WITHOUT_CLASSIFICATION	4.816910716616421E-7	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9999997118225471	WITHOUT_CLASSIFICATION	2.881774529243999E-7	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9999989217984622	WITHOUT_CLASSIFICATION	1.0782015378593205E-6	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9999992408704115	WITHOUT_CLASSIFICATION	7.591295884614838E-7	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9999993657960534	WITHOUT_CLASSIFICATION	6.342039466220591E-7	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.999999783171103	WITHOUT_CLASSIFICATION	2.1682889688194329E-7	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9999992820910956	WITHOUT_CLASSIFICATION	7.179089045314068E-7	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9999987466885133	WITHOUT_CLASSIFICATION	1.2533114866409647E-6	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9999994992600127	WITHOUT_CLASSIFICATION	5.007399873068185E-7	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999989461514519	WITHOUT_CLASSIFICATION	1.0538485480821642E-6	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9999994227407161	WITHOUT_CLASSIFICATION	5.772592839646458E-7	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9999995137823504	WITHOUT_CLASSIFICATION	4.862176496121165E-7	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999998214061383	WITHOUT_CLASSIFICATION	1.7859386170432763E-7	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9999994189618522	WITHOUT_CLASSIFICATION	5.810381477810106E-7	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999997228141351	WITHOUT_CLASSIFICATION	2.771858649152707E-7	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9999997577310324	WITHOUT_CLASSIFICATION	2.4226896755296955E-7	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9999988648847364	WITHOUT_CLASSIFICATION	1.1351152636098279E-6	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9999991880131985	WITHOUT_CLASSIFICATION	8.119868014692644E-7	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999993323128994	WITHOUT_CLASSIFICATION	6.676871005473097E-7	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999998612777451	WITHOUT_CLASSIFICATION	1.3872225482812673E-7	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999995572456221	WITHOUT_CLASSIFICATION	4.427543780034961E-7	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9999995579202416	WITHOUT_CLASSIFICATION	4.42079758330532E-7	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9999995076204543	WITHOUT_CLASSIFICATION	4.923795457267895E-7	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9999993679330804	WITHOUT_CLASSIFICATION	6.320669195726006E-7	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9999998151099656	WITHOUT_CLASSIFICATION	1.8489003452183924E-7	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9999995811354843	WITHOUT_CLASSIFICATION	4.1886451571032135E-7	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9999994022707179	WITHOUT_CLASSIFICATION	5.977292821051996E-7	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9999994763077412	WITHOUT_CLASSIFICATION	5.236922587376189E-7	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.9999998264997645	WITHOUT_CLASSIFICATION	1.7350023554500891E-7	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9999994944605818	WITHOUT_CLASSIFICATION	5.055394182731597E-7	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9999992487546686	WITHOUT_CLASSIFICATION	7.512453314686395E-7	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999991860846755	WITHOUT_CLASSIFICATION	8.139153244334362E-7	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9999997571663846	WITHOUT_CLASSIFICATION	2.428336154354842E-7	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9999991998330454	WITHOUT_CLASSIFICATION	8.001669545485992E-7	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9999994248532869	WITHOUT_CLASSIFICATION	5.751467131427281E-7	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9999997332968682	WITHOUT_CLASSIFICATION	2.667031317990773E-7	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9999997930481122	WITHOUT_CLASSIFICATION	2.0695188792745904E-7	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9999998148245192	WITHOUT_CLASSIFICATION	1.8517548085788305E-7	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9999992488311457	WITHOUT_CLASSIFICATION	7.511688544597044E-7	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9999996495323529	WITHOUT_CLASSIFICATION	3.50467647201708E-7	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999700405294093	WITHOUT_CLASSIFICATION	2.9959470590623587E-5	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999996729079372	WITHOUT_CLASSIFICATION	3.2709206271021046E-7	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999997960110825	WITHOUT_CLASSIFICATION	2.039889175071623E-7	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999995920842624	WITHOUT_CLASSIFICATION	4.079157377319768E-7	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999994763656813	WITHOUT_CLASSIFICATION	5.236343186358886E-7	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9999994805954958	WITHOUT_CLASSIFICATION	5.19404504142942E-7	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9999994878540529	WITHOUT_CLASSIFICATION	5.121459470253108E-7	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9999995665298745	WITHOUT_CLASSIFICATION	4.334701254797209E-7	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999994869669337	WITHOUT_CLASSIFICATION	5.130330661722315E-7	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9999994572951322	WITHOUT_CLASSIFICATION	5.427048677603933E-7	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9999995810578102	WITHOUT_CLASSIFICATION	4.18942189742477E-7	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9999994706818808	WITHOUT_CLASSIFICATION	5.293181192486817E-7	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.9999994500078221	WITHOUT_CLASSIFICATION	5.499921780044759E-7	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.9999994685222071	WITHOUT_CLASSIFICATION	5.314777928880229E-7	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.999999628473595	WITHOUT_CLASSIFICATION	3.7152640500916614E-7	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9999996969761413	WITHOUT_CLASSIFICATION	3.0302385871017396E-7	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999997502099057	WITHOUT_CLASSIFICATION	2.497900942672015E-7	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9999992045063498	WITHOUT_CLASSIFICATION	7.954936501314617E-7	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9999990644336886	WITHOUT_CLASSIFICATION	9.355663113702927E-7	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9999995121308048	WITHOUT_CLASSIFICATION	4.878691950381095E-7	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9999993018597931	WITHOUT_CLASSIFICATION	6.981402068827763E-7	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9999994703903541	WITHOUT_CLASSIFICATION	5.296096459709577E-7	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9999993575156848	WITHOUT_CLASSIFICATION	6.424843152121538E-7	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9999994410965387	WITHOUT_CLASSIFICATION	5.589034613299454E-7	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9999997156160216	WITHOUT_CLASSIFICATION	2.84383978267819E-7	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9999994577427959	WITHOUT_CLASSIFICATION	5.422572040953E-7	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9999998107138365	WITHOUT_CLASSIFICATION	1.8928616357698963E-7	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999997895049948	WITHOUT_CLASSIFICATION	2.1049500514086216E-7	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999993246192967	WITHOUT_CLASSIFICATION	6.753807031392824E-7	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9999995689584897	WITHOUT_CLASSIFICATION	4.310415102483962E-7	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9999993059423912	WITHOUT_CLASSIFICATION	6.940576087755743E-7	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.999999877324953	WITHOUT_CLASSIFICATION	1.2267504707319145E-7	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9999996082093457	WITHOUT_CLASSIFICATION	3.9179065425327474E-7	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9999996281790275	WITHOUT_CLASSIFICATION	3.7182097249122223E-7	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999998334594925	WITHOUT_CLASSIFICATION	1.6654050750475376E-7	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.999999638499631	WITHOUT_CLASSIFICATION	3.6150036898558685E-7	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9999994480911738	WITHOUT_CLASSIFICATION	5.519088262479307E-7	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9999989670951527	WITHOUT_CLASSIFICATION	1.0329048474133468E-6	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9999995915172593	WITHOUT_CLASSIFICATION	4.08482740723559E-7	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9999995555267132	WITHOUT_CLASSIFICATION	4.4447328692418644E-7	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9999997586408778	WITHOUT_CLASSIFICATION	2.4135912227443495E-7	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9999995474802348	WITHOUT_CLASSIFICATION	4.525197651404548E-7	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9999994334646931	WITHOUT_CLASSIFICATION	5.665353069122619E-7	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999997956469923	WITHOUT_CLASSIFICATION	2.043530077175565E-7	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9999995626722088	WITHOUT_CLASSIFICATION	4.373277911892321E-7	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999997328968597	WITHOUT_CLASSIFICATION	2.671031402650808E-7	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999993457885578	WITHOUT_CLASSIFICATION	6.542114423148902E-7	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999986206617572	WITHOUT_CLASSIFICATION	1.379338242765202E-6	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999994803958887	WITHOUT_CLASSIFICATION	5.196041111972633E-7	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9999994388580752	WITHOUT_CLASSIFICATION	5.611419247961387E-7	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.999999599228002	WITHOUT_CLASSIFICATION	4.007719980788232E-7	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9999994738852057	WITHOUT_CLASSIFICATION	5.261147942387822E-7	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9999994928533468	WITHOUT_CLASSIFICATION	5.071466531743355E-7	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9999989705976496	WITHOUT_CLASSIFICATION	1.029402350420867E-6	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9999984429301451	WITHOUT_CLASSIFICATION	1.5570698549576535E-6	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9999985764919743	WITHOUT_CLASSIFICATION	1.4235080256931186E-6	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9999994389916311	WITHOUT_CLASSIFICATION	5.610083689076991E-7	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9999997494095416	WITHOUT_CLASSIFICATION	2.505904584380747E-7	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.999999296098898	WITHOUT_CLASSIFICATION	7.039011020360377E-7	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.99999927422343	WITHOUT_CLASSIFICATION	7.257765699579206E-7	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999992777681741	WITHOUT_CLASSIFICATION	7.222318259266117E-7	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999996748130362	WITHOUT_CLASSIFICATION	3.251869637941804E-7	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999991829440116	WITHOUT_CLASSIFICATION	8.170559884846447E-7	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9999997418121411	WITHOUT_CLASSIFICATION	2.5818785892434855E-7	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9999993280250618	WITHOUT_CLASSIFICATION	6.719749382634459E-7	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9999978415974743	WITHOUT_CLASSIFICATION	2.1584025257323397E-6	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9999991453732713	WITHOUT_CLASSIFICATION	8.546267287342897E-7	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9999984047301685	WITHOUT_CLASSIFICATION	1.5952698314717863E-6	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9999992933666711	WITHOUT_CLASSIFICATION	7.066333288497041E-7	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9999992988892246	WITHOUT_CLASSIFICATION	7.011107754570342E-7	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9999993236184471	WITHOUT_CLASSIFICATION	6.763815529544494E-7	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999992913152538	WITHOUT_CLASSIFICATION	7.086847461717972E-7	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.999999112176937	WITHOUT_CLASSIFICATION	8.878230630542176E-7	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999991636948653	WITHOUT_CLASSIFICATION	8.363051347257658E-7	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.999999669008914	WITHOUT_CLASSIFICATION	3.309910859994874E-7	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9999996906872749	WITHOUT_CLASSIFICATION	3.0931272506033013E-7	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9999991266633775	WITHOUT_CLASSIFICATION	8.733366225146628E-7	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.999999842967369	WITHOUT_CLASSIFICATION	1.5703263092737186E-7	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9999996334104938	WITHOUT_CLASSIFICATION	3.6658950612253614E-7	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.999999498833668	WITHOUT_CLASSIFICATION	5.011663319942249E-7	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999997782448667	WITHOUT_CLASSIFICATION	2.2175513330083523E-7	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9999993992636836	WITHOUT_CLASSIFICATION	6.007363162818551E-7	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9999997185729647	WITHOUT_CLASSIFICATION	2.814270353456769E-7	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999993326516093	WITHOUT_CLASSIFICATION	6.673483905975629E-7	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9999991024046629	WITHOUT_CLASSIFICATION	8.975953370320337E-7	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9999994110753443	WITHOUT_CLASSIFICATION	5.889246558147793E-7	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999996832597841	WITHOUT_CLASSIFICATION	3.1674021593066787E-7	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9999993210578417	WITHOUT_CLASSIFICATION	6.789421583179642E-7	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9999993960466412	WITHOUT_CLASSIFICATION	6.039533588424715E-7	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999997776603556	WITHOUT_CLASSIFICATION	2.2233964427911676E-7	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9999992763218816	WITHOUT_CLASSIFICATION	7.236781183576125E-7	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999996269305303	WITHOUT_CLASSIFICATION	3.7306946962495507E-7	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9999991610028128	WITHOUT_CLASSIFICATION	8.38997187160724E-7	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9999990764892085	WITHOUT_CLASSIFICATION	9.235107914824333E-7	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9999992919738532	WITHOUT_CLASSIFICATION	7.080261469566536E-7	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.999999361597004	WITHOUT_CLASSIFICATION	6.384029960501058E-7	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.999999563200332	WITHOUT_CLASSIFICATION	4.3679966796427385E-7	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9999994005043333	WITHOUT_CLASSIFICATION	5.994956665987697E-7	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9999995687578972	WITHOUT_CLASSIFICATION	4.312421027532182E-7	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9999995909997522	WITHOUT_CLASSIFICATION	4.0900024777470297E-7	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9999998184474953	WITHOUT_CLASSIFICATION	1.8155250468851953E-7	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9999995798936359	WITHOUT_CLASSIFICATION	4.201063641121608E-7	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9999995273426469	WITHOUT_CLASSIFICATION	4.7265735318215955E-7	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.999999279231715	WITHOUT_CLASSIFICATION	7.207682849289915E-7	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9999992855845719	WITHOUT_CLASSIFICATION	7.144154281172941E-7	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9999994398055929	WITHOUT_CLASSIFICATION	5.601944070874204E-7	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9999998014714968	WITHOUT_CLASSIFICATION	1.9852850326515365E-7	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9999996887855919	WITHOUT_CLASSIFICATION	3.112144081291453E-7	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9999996061592893	WITHOUT_CLASSIFICATION	3.93840710630589E-7	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9999996088341518	WITHOUT_CLASSIFICATION	3.9116584817895535E-7	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9999997123637211	WITHOUT_CLASSIFICATION	2.876362788786733E-7	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9999992542483019	WITHOUT_CLASSIFICATION	7.457516981209893E-7	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999994947391313	WITHOUT_CLASSIFICATION	5.052608687470794E-7	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9999997502073465	WITHOUT_CLASSIFICATION	2.497926534599064E-7	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9999996557307997	WITHOUT_CLASSIFICATION	3.442692002582964E-7	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9999996988946158	WITHOUT_CLASSIFICATION	3.0110538417832596E-7	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999980829196983	WITHOUT_CLASSIFICATION	1.9170803016660947E-6	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.9999990510098682	WITHOUT_CLASSIFICATION	9.489901317983133E-7	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9999990276733429	WITHOUT_CLASSIFICATION	9.723266571099574E-7	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9999987911030632	WITHOUT_CLASSIFICATION	1.2088969367802843E-6	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999996498723507	WITHOUT_CLASSIFICATION	3.5012764934376797E-7	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999990209829579	WITHOUT_CLASSIFICATION	9.790170420214937E-7	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9999991912475222	WITHOUT_CLASSIFICATION	8.087524777467068E-7	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.999999182262647	WITHOUT_CLASSIFICATION	8.177373529783057E-7	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999995329040223	WITHOUT_CLASSIFICATION	4.6709597767996175E-7	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9999984314997493	WITHOUT_CLASSIFICATION	1.568500250615896E-6	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9999990895014849	WITHOUT_CLASSIFICATION	9.104985150969848E-7	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999987697093049	WITHOUT_CLASSIFICATION	1.230290695037913E-6	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9999988676811904	WITHOUT_CLASSIFICATION	1.1323188096126815E-6	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9999992538902108	WITHOUT_CLASSIFICATION	7.461097890357753E-7	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9999988660492776	WITHOUT_CLASSIFICATION	1.1339507223608558E-6	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9999983215889697	WITHOUT_CLASSIFICATION	1.6784110302302529E-6	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9999979785341152	WITHOUT_CLASSIFICATION	2.021465884788447E-6	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9999989728888439	WITHOUT_CLASSIFICATION	1.0271111560848461E-6	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999997317434807	WITHOUT_CLASSIFICATION	2.682565192552188E-7	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999997917033931	WITHOUT_CLASSIFICATION	2.082966069387736E-7	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.999999801678555	WITHOUT_CLASSIFICATION	1.9832144496454055E-7	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9999992830465725	WITHOUT_CLASSIFICATION	7.169534276414142E-7	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9999995459995511	WITHOUT_CLASSIFICATION	4.540004489580676E-7	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9999994119623095	WITHOUT_CLASSIFICATION	5.880376904516689E-7	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.9999993623235545	WITHOUT_CLASSIFICATION	6.376764454425266E-7	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999993332699435	WITHOUT_CLASSIFICATION	6.667300565028478E-7	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999989292654788	WITHOUT_CLASSIFICATION	1.0707345212444013E-6	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9999993159826255	WITHOUT_CLASSIFICATION	6.840173745817698E-7	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9999991436396806	WITHOUT_CLASSIFICATION	8.563603194628619E-7	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9999995793652393	WITHOUT_CLASSIFICATION	4.2063476061810227E-7	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.999999170562999	WITHOUT_CLASSIFICATION	8.294370009721541E-7	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9999996690407469	WITHOUT_CLASSIFICATION	3.309592530878427E-7	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9999991806668286	WITHOUT_CLASSIFICATION	8.193331715211683E-7	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.99999922821048	WITHOUT_CLASSIFICATION	7.717895199904565E-7	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9999997368122142	WITHOUT_CLASSIFICATION	2.6318778578598906E-7	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9999993134166011	WITHOUT_CLASSIFICATION	6.86583398977267E-7	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9999988111530455	WITHOUT_CLASSIFICATION	1.1888469545321582E-6	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9999989665634844	WITHOUT_CLASSIFICATION	1.033436515594861E-6	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.999999720345162	WITHOUT_CLASSIFICATION	2.7965483794450163E-7	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9999989275150213	WITHOUT_CLASSIFICATION	1.072484978713092E-6	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9999989574323954	WITHOUT_CLASSIFICATION	1.042567604551445E-6	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999985091722028	WITHOUT_CLASSIFICATION	1.4908277972077563E-6	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9999996270784273	WITHOUT_CLASSIFICATION	3.729215726720677E-7	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9999987222200161	WITHOUT_CLASSIFICATION	1.2777799839883212E-6	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9999990642793252	WITHOUT_CLASSIFICATION	9.357206749391516E-7	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9999973388529937	WITHOUT_CLASSIFICATION	2.661147006306319E-6	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999986651346567	WITHOUT_CLASSIFICATION	1.3348653432790905E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999995075450381	WITHOUT_CLASSIFICATION	4.924549618230154E-7	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9999987969257931	WITHOUT_CLASSIFICATION	1.2030742068700744E-6	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9999979880164745	WITHOUT_CLASSIFICATION	2.0119835253982993E-6	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.999998917798473	WITHOUT_CLASSIFICATION	1.082201527003811E-6	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9999993975013742	WITHOUT_CLASSIFICATION	6.02498625666359E-7	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9999987946128288	WITHOUT_CLASSIFICATION	1.2053871712458889E-6	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9999990742623447	WITHOUT_CLASSIFICATION	9.257376552606292E-7	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999987615537358	WITHOUT_CLASSIFICATION	1.238446264211239E-6	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999994108668417	WITHOUT_CLASSIFICATION	5.89133158246807E-7	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9999986978059873	WITHOUT_CLASSIFICATION	1.3021940127299485E-6	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999995753630644	WITHOUT_CLASSIFICATION	4.2463693568199114E-7	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9999987726551227	WITHOUT_CLASSIFICATION	1.2273448772762275E-6	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9999991928746382	WITHOUT_CLASSIFICATION	8.071253617466953E-7	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9999983688710624	WITHOUT_CLASSIFICATION	1.6311289376145444E-6	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9999981477275579	WITHOUT_CLASSIFICATION	1.8522724420119379E-6	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999983894594385	WITHOUT_CLASSIFICATION	1.6105405613815993E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999997220185973	WITHOUT_CLASSIFICATION	2.7798140271967197E-7	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9999996946390651	WITHOUT_CLASSIFICATION	3.053609348723586E-7	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999990275763947	WITHOUT_CLASSIFICATION	9.724236052897558E-7	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9999987896006353	WITHOUT_CLASSIFICATION	1.210399364748102E-6	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9999990502403706	WITHOUT_CLASSIFICATION	9.497596293971132E-7	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9999994970503487	WITHOUT_CLASSIFICATION	5.029496512096186E-7	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9999990662529766	WITHOUT_CLASSIFICATION	9.337470234766598E-7	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9999987413433626	WITHOUT_CLASSIFICATION	1.2586566373358569E-6	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.9999986896591492	WITHOUT_CLASSIFICATION	1.3103408508855174E-6	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.999998362329539	WITHOUT_CLASSIFICATION	1.6376704610429233E-6	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9999984046580307	WITHOUT_CLASSIFICATION	1.5953419693240946E-6	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9999990674021172	WITHOUT_CLASSIFICATION	9.325978828045047E-7	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9999989797027593	WITHOUT_CLASSIFICATION	1.0202972407098813E-6	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9999986672794648	WITHOUT_CLASSIFICATION	1.3327205351606074E-6	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.999998721071805	WITHOUT_CLASSIFICATION	1.278928195038173E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999984256027743	WITHOUT_CLASSIFICATION	1.574397225662466E-6	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9999994359401692	WITHOUT_CLASSIFICATION	5.640598308873021E-7	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9999990284262287	WITHOUT_CLASSIFICATION	9.71573771386875E-7	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9999991879270441	WITHOUT_CLASSIFICATION	8.120729559355301E-7	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9999989509232864	WITHOUT_CLASSIFICATION	1.0490767135753323E-6	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999989466886917	WITHOUT_CLASSIFICATION	1.0533113083268536E-6	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999995108310218	WITHOUT_CLASSIFICATION	4.891689783050832E-7	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.99999837929632	WITHOUT_CLASSIFICATION	1.6207036800673904E-6	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9999975127230157	WITHOUT_CLASSIFICATION	2.487276984326962E-6	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9999985423571288	WITHOUT_CLASSIFICATION	1.4576428711543584E-6	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9999984111219312	WITHOUT_CLASSIFICATION	1.5888780687288668E-6	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.999998702684411	WITHOUT_CLASSIFICATION	1.297315588987684E-6	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9999983816298789	WITHOUT_CLASSIFICATION	1.6183701212421288E-6	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9999974631800695	WITHOUT_CLASSIFICATION	2.5368199303690392E-6	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9999995118176003	WITHOUT_CLASSIFICATION	4.881823996427149E-7	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.999998736256871	WITHOUT_CLASSIFICATION	1.2637431289513493E-6	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.999998321605279	WITHOUT_CLASSIFICATION	1.6783947210862664E-6	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9999984824976	WITHOUT_CLASSIFICATION	1.5175023998880397E-6	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999996031007841	WITHOUT_CLASSIFICATION	3.9689921584956285E-7	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999992996635974	WITHOUT_CLASSIFICATION	7.003364026827476E-7	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999993144055883	WITHOUT_CLASSIFICATION	6.855944116997484E-7	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9999990632356989	WITHOUT_CLASSIFICATION	9.367643011157156E-7	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999995675581614	WITHOUT_CLASSIFICATION	4.3244183852283566E-7	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9999990615951642	WITHOUT_CLASSIFICATION	9.384048357972187E-7	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999988408324357	WITHOUT_CLASSIFICATION	1.1591675642332827E-6	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9999990479419326	WITHOUT_CLASSIFICATION	9.520580673336551E-7	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9999987872629066	WITHOUT_CLASSIFICATION	1.2127370933843218E-6	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999995642134556	WITHOUT_CLASSIFICATION	4.3578654429960426E-7	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9999990656205402	WITHOUT_CLASSIFICATION	9.343794597741907E-7	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.999998621348422	WITHOUT_CLASSIFICATION	1.3786515779411991E-6	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9999985182831543	WITHOUT_CLASSIFICATION	1.4817168456152281E-6	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.9999975402516006	WITHOUT_CLASSIFICATION	2.4597483995006967E-6	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999974518724101	WITHOUT_CLASSIFICATION	2.54812758990502E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999989817257223	WITHOUT_CLASSIFICATION	1.0182742776490996E-6	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999994242618646	WITHOUT_CLASSIFICATION	5.757381354625396E-7	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9999334796321921	WITHOUT_CLASSIFICATION	6.652036780783702E-5	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999986210994191	WITHOUT_CLASSIFICATION	1.378900581034016E-6	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999991120380579	WITHOUT_CLASSIFICATION	8.879619420327252E-7	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999964247038027	WITHOUT_CLASSIFICATION	3.5752961973486095E-6	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999760640520445	WITHOUT_CLASSIFICATION	2.3935947955465583E-5	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9994182619127026	WITHOUT_CLASSIFICATION	5.81738087297419E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9996630316781592	WITHOUT_CLASSIFICATION	3.3696832184078947E-4	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999961027742879	WITHOUT_CLASSIFICATION	3.897225712114389E-6	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9999242255214276	WITHOUT_CLASSIFICATION	7.577447857251332E-5	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9998998124936426	WITHOUT_CLASSIFICATION	1.0018750635744592E-4	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9999996687378295	WITHOUT_CLASSIFICATION	3.3126217044826836E-7	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999999061352994	WITHOUT_CLASSIFICATION	9.386470049273231E-8	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.999964522425131	WITHOUT_CLASSIFICATION	3.547757486894288E-5	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999991738842228	WITHOUT_CLASSIFICATION	8.261157771490793E-7	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9984279108557366	WITHOUT_CLASSIFICATION	0.0015720891442634142	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999596539401395	WITHOUT_CLASSIFICATION	4.0346059860409154E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9997785100993919	WITHOUT_CLASSIFICATION	2.2148990060821074E-4	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999971546595	WITHOUT_CLASSIFICATION	2.845340408054898E-9	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999212671644	WITHOUT_CLASSIFICATION	7.87328356001364E-8	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999993853164103	WITHOUT_CLASSIFICATION	6.146835897527247E-7	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999997579629096	WITHOUT_CLASSIFICATION	2.420370904185648E-7	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999999992788025	WITHOUT_CLASSIFICATION	7.211975218770328E-10	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999871340132	WITHOUT_CLASSIFICATION	1.2865986739392167E-8	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999871340132	WITHOUT_CLASSIFICATION	1.2865986739392167E-8	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999999900950087	WITHOUT_CLASSIFICATION	9.904991223858862E-9	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999787604080119	WITHOUT_CLASSIFICATION	2.123959198809921E-5	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999999844492701	WITHOUT_CLASSIFICATION	1.5550729900011736E-8	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999992488032081	WITHOUT_CLASSIFICATION	7.51196791953061E-7	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999979329978167	WITHOUT_CLASSIFICATION	2.06700218324841E-6	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999999993203667	WITHOUT_CLASSIFICATION	6.796333933647194E-10	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999995723120216	WITHOUT_CLASSIFICATION	4.276879783289245E-7	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999999861063513	WITHOUT_CLASSIFICATION	1.3893648710795972E-8	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.999739012451017	WITHOUT_CLASSIFICATION	2.609875489829241E-4	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999805631087727	WITHOUT_CLASSIFICATION	1.9436891227330327E-5	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9999998969477216	WITHOUT_CLASSIFICATION	1.0305227831273606E-7	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999998824880738	WITHOUT_CLASSIFICATION	1.1751192617961876E-7	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999993288501814	WITHOUT_CLASSIFICATION	6.711498186652729E-7	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999994368319233	WITHOUT_CLASSIFICATION	5.63168076649578E-7	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999997540744014	WITHOUT_CLASSIFICATION	2.459255985364075E-7	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999976453699726	WITHOUT_CLASSIFICATION	2.3546300274485468E-6	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999999651427744	WITHOUT_CLASSIFICATION	3.485722553635021E-8	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999960847874054	WITHOUT_CLASSIFICATION	3.915212594557568E-6	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999999104529279	WITHOUT_CLASSIFICATION	8.954707213859155E-8	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9998220758683001	WITHOUT_CLASSIFICATION	1.7792413169988162E-4	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999965547726	WITHOUT_CLASSIFICATION	3.445227477900608E-9	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9999954488216031	WITHOUT_CLASSIFICATION	4.551178396930994E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.991609517960568	WITHOUT_CLASSIFICATION	0.008390482039431952	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999984048537351	WITHOUT_CLASSIFICATION	1.5951462648170682E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.991609517960568	WITHOUT_CLASSIFICATION	0.008390482039431952	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999985428213847	WITHOUT_CLASSIFICATION	1.4571786153161057E-6	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999991434965805	WITHOUT_CLASSIFICATION	8.565034194539086E-7	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.965892984699173	WITHOUT_CLASSIFICATION	0.03410701530082706	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999911959296006	WITHOUT_CLASSIFICATION	8.804070399357524E-6	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999997588862848	WITHOUT_CLASSIFICATION	2.4111371522402136E-7	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999985815157062	WITHOUT_CLASSIFICATION	1.4184842936936289E-6	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999985815157062	WITHOUT_CLASSIFICATION	1.4184842936936289E-6	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999985815157062	WITHOUT_CLASSIFICATION	1.4184842936936289E-6	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999996088072081	WITHOUT_CLASSIFICATION	3.9119279197522674E-7	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999713797599028	WITHOUT_CLASSIFICATION	2.8620240097170014E-5	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999998538213387	WITHOUT_CLASSIFICATION	1.4617866138441343E-7	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999993627165294	WITHOUT_CLASSIFICATION	6.372834704528549E-7	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999993627165294	WITHOUT_CLASSIFICATION	6.372834704528549E-7	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999993627165294	WITHOUT_CLASSIFICATION	6.372834704528549E-7	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999993627165294	WITHOUT_CLASSIFICATION	6.372834704528549E-7	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999993627165294	WITHOUT_CLASSIFICATION	6.372834704528549E-7	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999993627165294	WITHOUT_CLASSIFICATION	6.372834704528549E-7	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999990147546307	WITHOUT_CLASSIFICATION	9.852453692247994E-7	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999990147546307	WITHOUT_CLASSIFICATION	9.852453692247994E-7	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999990147546307	WITHOUT_CLASSIFICATION	9.852453692247994E-7	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999990147546307	WITHOUT_CLASSIFICATION	9.852453692247994E-7	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999990147546307	WITHOUT_CLASSIFICATION	9.852453692247994E-7	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999833270790058	WITHOUT_CLASSIFICATION	1.667292099412943E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999833270790058	WITHOUT_CLASSIFICATION	1.667292099412943E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999833270790058	WITHOUT_CLASSIFICATION	1.667292099412943E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999833270790058	WITHOUT_CLASSIFICATION	1.667292099412943E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999833270790058	WITHOUT_CLASSIFICATION	1.667292099412943E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999656807075227	WITHOUT_CLASSIFICATION	3.4319292477258376E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999656807075227	WITHOUT_CLASSIFICATION	3.4319292477258376E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999656807075227	WITHOUT_CLASSIFICATION	3.4319292477258376E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999656807075227	WITHOUT_CLASSIFICATION	3.4319292477258376E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999656807075227	WITHOUT_CLASSIFICATION	3.4319292477258376E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999656807075227	WITHOUT_CLASSIFICATION	3.4319292477258376E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999777403430795	WITHOUT_CLASSIFICATION	2.2259656920465902E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999777403430795	WITHOUT_CLASSIFICATION	2.2259656920465902E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999777403430795	WITHOUT_CLASSIFICATION	2.2259656920465902E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999777403430795	WITHOUT_CLASSIFICATION	2.2259656920465902E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999777403430795	WITHOUT_CLASSIFICATION	2.2259656920465902E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999443129417539	WITHOUT_CLASSIFICATION	5.568705824617022E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999443129417539	WITHOUT_CLASSIFICATION	5.568705824617022E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999443129417539	WITHOUT_CLASSIFICATION	5.568705824617022E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999443129417539	WITHOUT_CLASSIFICATION	5.568705824617022E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999443129417539	WITHOUT_CLASSIFICATION	5.568705824617022E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999700405294093	WITHOUT_CLASSIFICATION	2.9959470590623587E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999700405294093	WITHOUT_CLASSIFICATION	2.9959470590623587E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999700405294093	WITHOUT_CLASSIFICATION	2.9959470590623587E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999700405294093	WITHOUT_CLASSIFICATION	2.9959470590623587E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999700405294093	WITHOUT_CLASSIFICATION	2.9959470590623587E-5	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999959064744	WITHOUT_CLASSIFICATION	4.0935256957747626E-9	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999945351461	WITHOUT_CLASSIFICATION	5.4648539627995416E-9	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999787005518886	WITHOUT_CLASSIFICATION	2.12994481113077E-5	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999997591091143	WITHOUT_CLASSIFICATION	2.4089088570395364E-7	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999989165547336	WITHOUT_CLASSIFICATION	1.0834452663308354E-6	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999990702006468	WITHOUT_CLASSIFICATION	9.297993531767718E-7	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999989461514519	WITHOUT_CLASSIFICATION	1.0538485480821642E-6	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999997228141351	WITHOUT_CLASSIFICATION	2.771858649152707E-7	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999993323128994	WITHOUT_CLASSIFICATION	6.676871005473097E-7	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999998612777451	WITHOUT_CLASSIFICATION	1.3872225482812673E-7	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999996761532783	WITHOUT_CLASSIFICATION	3.238467216717061E-7	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999995572456221	WITHOUT_CLASSIFICATION	4.427543780034961E-7	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9999996515870624	WITHOUT_CLASSIFICATION	3.4841293763171854E-7	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9999993134148446	WITHOUT_CLASSIFICATION	6.865851553817694E-7	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9999993210091195	WITHOUT_CLASSIFICATION	6.789908804962486E-7	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9999996337992265	WITHOUT_CLASSIFICATION	3.6620077349224243E-7	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9999996840280856	WITHOUT_CLASSIFICATION	3.159719144256535E-7	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9999986098609	WITHOUT_CLASSIFICATION	1.3901391000551518E-6	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9999994465952513	WITHOUT_CLASSIFICATION	5.534047488097802E-7	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.999999412989959	WITHOUT_CLASSIFICATION	5.870100410455002E-7	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9999997963991071	WITHOUT_CLASSIFICATION	2.0360089292043751E-7	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9999995640712303	WITHOUT_CLASSIFICATION	4.3592876969814557E-7	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9999993264925903	WITHOUT_CLASSIFICATION	6.735074097513375E-7	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9999995728099332	WITHOUT_CLASSIFICATION	4.2719006685912374E-7	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9999992516167218	WITHOUT_CLASSIFICATION	7.483832782717176E-7	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9999995376792019	WITHOUT_CLASSIFICATION	4.623207980713121E-7	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9999993162548644	WITHOUT_CLASSIFICATION	6.837451355981402E-7	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9999997775782915	WITHOUT_CLASSIFICATION	2.2242170853711233E-7	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9999995110397746	WITHOUT_CLASSIFICATION	4.88960225423552E-7	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9999995795370685	WITHOUT_CLASSIFICATION	4.204629314665515E-7	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9999998120661211	WITHOUT_CLASSIFICATION	1.8793387882964786E-7	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9999994908751765	WITHOUT_CLASSIFICATION	5.091248236106269E-7	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.999999484812438	WITHOUT_CLASSIFICATION	5.151875619226176E-7	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9999992146586304	WITHOUT_CLASSIFICATION	7.853413696984704E-7	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.9999995236273588	WITHOUT_CLASSIFICATION	4.7637264126056387E-7	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.999999496474504	WITHOUT_CLASSIFICATION	5.035254960703486E-7	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9999993877448808	WITHOUT_CLASSIFICATION	6.12255119175098E-7	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9999993527362855	WITHOUT_CLASSIFICATION	6.472637145560761E-7	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.9999993736734096	WITHOUT_CLASSIFICATION	6.263265902855827E-7	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9999980750365047	WITHOUT_CLASSIFICATION	1.9249634952181335E-6	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9999992448978955	WITHOUT_CLASSIFICATION	7.55102104566124E-7	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9999993875515791	WITHOUT_CLASSIFICATION	6.124484208332157E-7	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9999994664376641	WITHOUT_CLASSIFICATION	5.335623358322713E-7	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9999997630182851	WITHOUT_CLASSIFICATION	2.369817148353064E-7	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9999996889201151	WITHOUT_CLASSIFICATION	3.1107988493264956E-7	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9999997009100746	WITHOUT_CLASSIFICATION	2.99089925409535E-7	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9999997634139124	WITHOUT_CLASSIFICATION	2.365860876934341E-7	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.999999180733596	WITHOUT_CLASSIFICATION	8.192664039629383E-7	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.9999996444392055	WITHOUT_CLASSIFICATION	3.5556079449382276E-7	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999997960110825	WITHOUT_CLASSIFICATION	2.039889175071623E-7	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999995920842624	WITHOUT_CLASSIFICATION	4.079157377319768E-7	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999994763656813	WITHOUT_CLASSIFICATION	5.236343186358886E-7	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999994869669337	WITHOUT_CLASSIFICATION	5.130330661722315E-7	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999997502099057	WITHOUT_CLASSIFICATION	2.497900942672015E-7	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999997895049948	WITHOUT_CLASSIFICATION	2.1049500514086216E-7	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999982615430983	WITHOUT_CLASSIFICATION	1.7384569016617398E-6	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999993246192967	WITHOUT_CLASSIFICATION	6.753807031392824E-7	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999997956469923	WITHOUT_CLASSIFICATION	2.043530077175565E-7	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999997328968597	WITHOUT_CLASSIFICATION	2.671031402650808E-7	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.999999420202572	WITHOUT_CLASSIFICATION	5.797974279506124E-7	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999993457885578	WITHOUT_CLASSIFICATION	6.542114423148902E-7	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999986206617572	WITHOUT_CLASSIFICATION	1.379338242765202E-6	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9999996547453842	WITHOUT_CLASSIFICATION	3.452546157479736E-7	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9999994727890735	WITHOUT_CLASSIFICATION	5.272109264247943E-7	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9999998119319928	WITHOUT_CLASSIFICATION	1.8806800709920737E-7	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9999993557029447	WITHOUT_CLASSIFICATION	6.442970552348709E-7	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9999987030072561	WITHOUT_CLASSIFICATION	1.2969927438388085E-6	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9999990341161056	WITHOUT_CLASSIFICATION	9.658838944548327E-7	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.9999996151021756	WITHOUT_CLASSIFICATION	3.848978244114556E-7	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9999995754906614	WITHOUT_CLASSIFICATION	4.2450933858278187E-7	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9999993212043821	WITHOUT_CLASSIFICATION	6.787956179219127E-7	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9999993375655564	WITHOUT_CLASSIFICATION	6.624344436550176E-7	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9999998037252753	WITHOUT_CLASSIFICATION	1.9627472462553852E-7	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.999999477059295	WITHOUT_CLASSIFICATION	5.229407050417974E-7	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9999993597665393	WITHOUT_CLASSIFICATION	6.402334606295536E-7	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.999999650093841	WITHOUT_CLASSIFICATION	3.4990615905216937E-7	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9999996252068246	WITHOUT_CLASSIFICATION	3.7479317546699643E-7	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9999998029311515	WITHOUT_CLASSIFICATION	1.9706884851803858E-7	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.9999994464435232	WITHOUT_CLASSIFICATION	5.53556476736764E-7	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9999994320280146	WITHOUT_CLASSIFICATION	5.679719854905342E-7	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9999991551172591	WITHOUT_CLASSIFICATION	8.448827408844316E-7	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9999995389996966	WITHOUT_CLASSIFICATION	4.610003034265182E-7	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9999983981766217	WITHOUT_CLASSIFICATION	1.6018233783035946E-6	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9999993627726405	WITHOUT_CLASSIFICATION	6.372273594973116E-7	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9999993241302187	WITHOUT_CLASSIFICATION	6.758697812083733E-7	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9999996631673225	WITHOUT_CLASSIFICATION	3.368326775187311E-7	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9999991694174641	WITHOUT_CLASSIFICATION	8.30582535751824E-7	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9999993266834071	WITHOUT_CLASSIFICATION	6.733165928532677E-7	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9999997076628261	WITHOUT_CLASSIFICATION	2.923371738938159E-7	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9999996728671418	WITHOUT_CLASSIFICATION	3.2713285828397815E-7	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9999996262956721	WITHOUT_CLASSIFICATION	3.737043278909128E-7	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9999995549229793	WITHOUT_CLASSIFICATION	4.4507702066655855E-7	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9999996699331138	WITHOUT_CLASSIFICATION	3.3006688621396155E-7	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9999994660434695	WITHOUT_CLASSIFICATION	5.339565304988091E-7	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9999990276475096	WITHOUT_CLASSIFICATION	9.723524904673744E-7	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.999999530291824	WITHOUT_CLASSIFICATION	4.697081760937227E-7	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9999983795691331	WITHOUT_CLASSIFICATION	1.6204308668356684E-6	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9999990462152635	WITHOUT_CLASSIFICATION	9.5378473655094E-7	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999996748130362	WITHOUT_CLASSIFICATION	3.251869637941804E-7	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999992943623554	WITHOUT_CLASSIFICATION	7.056376445750339E-7	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999991829440116	WITHOUT_CLASSIFICATION	8.170559884846447E-7	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999992913152538	WITHOUT_CLASSIFICATION	7.086847461717972E-7	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999991636948653	WITHOUT_CLASSIFICATION	8.363051347257658E-7	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999997782448667	WITHOUT_CLASSIFICATION	2.2175513330083523E-7	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999993326516093	WITHOUT_CLASSIFICATION	6.673483905975629E-7	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999996832597841	WITHOUT_CLASSIFICATION	3.1674021593066787E-7	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999996269305303	WITHOUT_CLASSIFICATION	3.7306946962495507E-7	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.999999563200332	WITHOUT_CLASSIFICATION	4.3679966796427385E-7	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999993978602699	WITHOUT_CLASSIFICATION	6.021397301641018E-7	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9999998064395349	WITHOUT_CLASSIFICATION	1.9356046496246896E-7	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9999993822263366	WITHOUT_CLASSIFICATION	6.17773663484724E-7	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9999994134957133	WITHOUT_CLASSIFICATION	5.865042866980601E-7	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.999999732055893	WITHOUT_CLASSIFICATION	2.679441070344171E-7	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9999983455360874	WITHOUT_CLASSIFICATION	1.6544639126127254E-6	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9999994151200949	WITHOUT_CLASSIFICATION	5.848799049651652E-7	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9999996165516171	WITHOUT_CLASSIFICATION	3.8344838288439363E-7	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9999992786638021	WITHOUT_CLASSIFICATION	7.213361977927244E-7	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9999991462931358	WITHOUT_CLASSIFICATION	8.53706864154797E-7	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.9999990972124826	WITHOUT_CLASSIFICATION	9.027875175087975E-7	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9999994257674202	WITHOUT_CLASSIFICATION	5.74232579940761E-7	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9999992293326166	WITHOUT_CLASSIFICATION	7.706673834005973E-7	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9999993126689732	WITHOUT_CLASSIFICATION	6.873310266576003E-7	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9999996457770576	WITHOUT_CLASSIFICATION	3.5422294247404885E-7	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9999998395563832	WITHOUT_CLASSIFICATION	1.6044361680999967E-7	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9999996029024315	WITHOUT_CLASSIFICATION	3.970975684879379E-7	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9999996413757953	WITHOUT_CLASSIFICATION	3.5862420462400136E-7	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.999998939026877	WITHOUT_CLASSIFICATION	1.060973123044941E-6	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9999997390880795	WITHOUT_CLASSIFICATION	2.609119205098667E-7	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9999993982171094	WITHOUT_CLASSIFICATION	6.017828906266408E-7	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9999983296816406	WITHOUT_CLASSIFICATION	1.6703183594208766E-6	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9999994114293906	WITHOUT_CLASSIFICATION	5.88570609233433E-7	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9999986336394229	WITHOUT_CLASSIFICATION	1.3663605771024228E-6	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9999994142486389	WITHOUT_CLASSIFICATION	5.857513610357686E-7	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9999993876698653	WITHOUT_CLASSIFICATION	6.123301346687503E-7	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9999992918473529	WITHOUT_CLASSIFICATION	7.081526470356916E-7	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9999994242864337	WITHOUT_CLASSIFICATION	5.757135662319224E-7	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9999992636483166	WITHOUT_CLASSIFICATION	7.363516834151224E-7	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9999996200055045	WITHOUT_CLASSIFICATION	3.799944955088055E-7	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9999996847690686	WITHOUT_CLASSIFICATION	3.152309313100218E-7	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9999996055983741	WITHOUT_CLASSIFICATION	3.944016258758519E-7	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9999990857251106	WITHOUT_CLASSIFICATION	9.14274889471394E-7	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9999995480997169	WITHOUT_CLASSIFICATION	4.5190028297868657E-7	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9999995852012432	WITHOUT_CLASSIFICATION	4.147987567288689E-7	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9999996294487868	WITHOUT_CLASSIFICATION	3.7055121306295874E-7	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9999995017157778	WITHOUT_CLASSIFICATION	4.982842222579054E-7	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9999993552296708	WITHOUT_CLASSIFICATION	6.447703291139764E-7	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9999996799457467	WITHOUT_CLASSIFICATION	3.2005425336376754E-7	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999996705130116	WITHOUT_CLASSIFICATION	3.294869883600405E-7	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999980829196983	WITHOUT_CLASSIFICATION	1.9170803016660947E-6	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.999999645113771	WITHOUT_CLASSIFICATION	3.548862289239945E-7	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999996498723507	WITHOUT_CLASSIFICATION	3.5012764934376797E-7	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999995329040223	WITHOUT_CLASSIFICATION	4.6709597767996175E-7	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999987697093049	WITHOUT_CLASSIFICATION	1.230290695037913E-6	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999997317434807	WITHOUT_CLASSIFICATION	2.682565192552188E-7	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999997917033931	WITHOUT_CLASSIFICATION	2.082966069387736E-7	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999993332699435	WITHOUT_CLASSIFICATION	6.667300565028478E-7	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999989292654788	WITHOUT_CLASSIFICATION	1.0707345212444013E-6	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999986047916523	WITHOUT_CLASSIFICATION	1.3952083478198234E-6	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9999995163073577	WITHOUT_CLASSIFICATION	4.836926423220611E-7	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9999993056941859	WITHOUT_CLASSIFICATION	6.943058140900234E-7	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9999993807780909	WITHOUT_CLASSIFICATION	6.192219091715151E-7	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9999995645782355	WITHOUT_CLASSIFICATION	4.354217645064776E-7	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9999995029181241	WITHOUT_CLASSIFICATION	4.970818757753151E-7	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9999989223337181	WITHOUT_CLASSIFICATION	1.0776662819013731E-6	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9999988190068556	WITHOUT_CLASSIFICATION	1.1809931444393381E-6	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9999980625631129	WITHOUT_CLASSIFICATION	1.937436887226862E-6	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.999999382316584	WITHOUT_CLASSIFICATION	6.176834158972785E-7	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9999993183002522	WITHOUT_CLASSIFICATION	6.816997476779526E-7	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9999987652639836	WITHOUT_CLASSIFICATION	1.2347360165079358E-6	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.999998891427991	WITHOUT_CLASSIFICATION	1.1085720090378751E-6	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9999987919780385	WITHOUT_CLASSIFICATION	1.2080219614565061E-6	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9999990136584584	WITHOUT_CLASSIFICATION	9.86341541559585E-7	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9999995374920846	WITHOUT_CLASSIFICATION	4.6250791536923366E-7	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9999992749281809	WITHOUT_CLASSIFICATION	7.250718191858712E-7	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9999990896296046	WITHOUT_CLASSIFICATION	9.103703953936838E-7	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9999992198351176	WITHOUT_CLASSIFICATION	7.801648823402949E-7	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9999994696560025	WITHOUT_CLASSIFICATION	5.303439975475302E-7	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9999987133262811	WITHOUT_CLASSIFICATION	1.2866737189159415E-6	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9999993682246971	WITHOUT_CLASSIFICATION	6.317753029165423E-7	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9999994006038526	WITHOUT_CLASSIFICATION	5.993961474170082E-7	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9999990454864718	WITHOUT_CLASSIFICATION	9.545135281459354E-7	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9999994083772986	WITHOUT_CLASSIFICATION	5.91622701465095E-7	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9999992438785912	WITHOUT_CLASSIFICATION	7.561214087747807E-7	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9999993786146787	WITHOUT_CLASSIFICATION	6.213853212982864E-7	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9999991608614053	WITHOUT_CLASSIFICATION	8.391385948189542E-7	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9999992216126335	WITHOUT_CLASSIFICATION	7.783873664818362E-7	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9999997794421318	WITHOUT_CLASSIFICATION	2.205578682727773E-7	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9999994913291052	WITHOUT_CLASSIFICATION	5.08670894784616E-7	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9999993520722795	WITHOUT_CLASSIFICATION	6.479277205519276E-7	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9999993570421377	WITHOUT_CLASSIFICATION	6.429578622439955E-7	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9999994302541849	WITHOUT_CLASSIFICATION	5.697458151010655E-7	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9999989844117788	WITHOUT_CLASSIFICATION	1.015588221108374E-6	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9999995597093346	WITHOUT_CLASSIFICATION	4.402906652997169E-7	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9999993307032651	WITHOUT_CLASSIFICATION	6.692967348739503E-7	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9999990029399485	WITHOUT_CLASSIFICATION	9.970600514826957E-7	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9999994808533511	WITHOUT_CLASSIFICATION	5.19146648871457E-7	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999985091722028	WITHOUT_CLASSIFICATION	1.4908277972077563E-6	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999986651346567	WITHOUT_CLASSIFICATION	1.3348653432790905E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999995075450381	WITHOUT_CLASSIFICATION	4.924549618230154E-7	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.999998077418084	WITHOUT_CLASSIFICATION	1.9225819161295084E-6	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999994108668417	WITHOUT_CLASSIFICATION	5.89133158246807E-7	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999995753630644	WITHOUT_CLASSIFICATION	4.2463693568199114E-7	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999983894594385	WITHOUT_CLASSIFICATION	1.6105405613815993E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999997220185973	WITHOUT_CLASSIFICATION	2.7798140271967197E-7	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.999998721071805	WITHOUT_CLASSIFICATION	1.278928195038173E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999984256027743	WITHOUT_CLASSIFICATION	1.574397225662466E-6	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9999991618438344	WITHOUT_CLASSIFICATION	8.381561656264058E-7	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9999983732123481	WITHOUT_CLASSIFICATION	1.626787651922065E-6	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9999990431101055	WITHOUT_CLASSIFICATION	9.56889894506467E-7	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9999992288014535	WITHOUT_CLASSIFICATION	7.711985463934252E-7	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9999991071110433	WITHOUT_CLASSIFICATION	8.928889566857599E-7	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9999991520654897	WITHOUT_CLASSIFICATION	8.479345103337362E-7	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9999989461265281	WITHOUT_CLASSIFICATION	1.053873471863193E-6	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9999995493233788	WITHOUT_CLASSIFICATION	4.5067662121644173E-7	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.999999035058998	WITHOUT_CLASSIFICATION	9.649410020282163E-7	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9999990544023607	WITHOUT_CLASSIFICATION	9.455976393307646E-7	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9999989844504011	WITHOUT_CLASSIFICATION	1.0155495988429437E-6	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9999987423311913	WITHOUT_CLASSIFICATION	1.2576688086215405E-6	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9999986687191983	WITHOUT_CLASSIFICATION	1.331280801609475E-6	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9999990294565416	WITHOUT_CLASSIFICATION	9.705434583688178E-7	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9999989762863073	WITHOUT_CLASSIFICATION	1.0237136927270655E-6	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9999984502782266	WITHOUT_CLASSIFICATION	1.5497217732600218E-6	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9999987438438701	WITHOUT_CLASSIFICATION	1.2561561299611602E-6	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9999988781588026	WITHOUT_CLASSIFICATION	1.1218411974116566E-6	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.999999106811942	WITHOUT_CLASSIFICATION	8.931880580730746E-7	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9999988859861741	WITHOUT_CLASSIFICATION	1.1140138258629505E-6	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9999989999576769	WITHOUT_CLASSIFICATION	1.0000423230494263E-6	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.999999150676632	WITHOUT_CLASSIFICATION	8.49323367905725E-7	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9999995697322045	WITHOUT_CLASSIFICATION	4.3026779548255726E-7	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9999987914539925	WITHOUT_CLASSIFICATION	1.2085460074668406E-6	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9999987536737485	WITHOUT_CLASSIFICATION	1.2463262514869555E-6	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9999994187761426	WITHOUT_CLASSIFICATION	5.812238573355425E-7	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9999987387768993	WITHOUT_CLASSIFICATION	1.2612231007686223E-6	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9999984490858579	WITHOUT_CLASSIFICATION	1.5509141420799388E-6	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9999985341052015	WITHOUT_CLASSIFICATION	1.4658947985418256E-6	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9999980515482295	WITHOUT_CLASSIFICATION	1.948451770545211E-6	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9999987160825721	WITHOUT_CLASSIFICATION	1.2839174279417673E-6	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9999994988675686	WITHOUT_CLASSIFICATION	5.011324314179128E-7	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.999998761274039	WITHOUT_CLASSIFICATION	1.238725961021018E-6	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.999999638465676	WITHOUT_CLASSIFICATION	3.615343240220445E-7	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9999988044326805	WITHOUT_CLASSIFICATION	1.195567319465483E-6	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9999995234778709	WITHOUT_CLASSIFICATION	4.7652212912864263E-7	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9999989676012693	WITHOUT_CLASSIFICATION	1.0323987307548261E-6	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9999991808310087	WITHOUT_CLASSIFICATION	8.191689912436007E-7	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9999978441411926	WITHOUT_CLASSIFICATION	2.155858807357498E-6	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999987101894873	WITHOUT_CLASSIFICATION	1.2898105127981995E-6	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999989466886917	WITHOUT_CLASSIFICATION	1.0533113083268536E-6	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999995108310218	WITHOUT_CLASSIFICATION	4.891689783050832E-7	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999996031007841	WITHOUT_CLASSIFICATION	3.9689921584956285E-7	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.999998909009895	WITHOUT_CLASSIFICATION	1.0909901049984593E-6	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999993144055883	WITHOUT_CLASSIFICATION	6.855944116997484E-7	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999995675581614	WITHOUT_CLASSIFICATION	4.3244183852283566E-7	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999988408324357	WITHOUT_CLASSIFICATION	1.1591675642332827E-6	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999974518724101	WITHOUT_CLASSIFICATION	2.54812758990502E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999989817257223	WITHOUT_CLASSIFICATION	1.0182742776490996E-6	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9999992942238892	WITHOUT_CLASSIFICATION	7.057761107320613E-7	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9999996047116161	WITHOUT_CLASSIFICATION	3.9528838397334583E-7	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9999994219674821	WITHOUT_CLASSIFICATION	5.780325179163648E-7	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9999990917445639	WITHOUT_CLASSIFICATION	9.082554360741558E-7	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9999987478977526	WITHOUT_CLASSIFICATION	1.2521022474870594E-6	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9999986814762475	WITHOUT_CLASSIFICATION	1.31852375257028E-6	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9999987156803775	WITHOUT_CLASSIFICATION	1.2843196225702297E-6	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9999979367366753	WITHOUT_CLASSIFICATION	2.063263324828445E-6	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9999989299992198	WITHOUT_CLASSIFICATION	1.0700007802507946E-6	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9999993393058696	WITHOUT_CLASSIFICATION	6.606941303697742E-7	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9999987563075522	WITHOUT_CLASSIFICATION	1.2436924478620748E-6	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9999984325161119	WITHOUT_CLASSIFICATION	1.5674838880454173E-6	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.9999997801418926	WITHOUT_CLASSIFICATION	2.1985810740042974E-7	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9999986501228078	WITHOUT_CLASSIFICATION	1.349877192250721E-6	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9999988835612553	WITHOUT_CLASSIFICATION	1.11643874468793E-6	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9999995636003293	WITHOUT_CLASSIFICATION	4.363996706617062E-7	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9999984405472697	WITHOUT_CLASSIFICATION	1.5594527302638754E-6	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9999991796708684	WITHOUT_CLASSIFICATION	8.203291316106158E-7	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9999988185531153	WITHOUT_CLASSIFICATION	1.181446884666598E-6	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9999988479457633	WITHOUT_CLASSIFICATION	1.1520542366344206E-6	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9999990470470493	WITHOUT_CLASSIFICATION	9.529529507372404E-7	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9999988177605464	WITHOUT_CLASSIFICATION	1.182239453543202E-6	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9999980241584053	WITHOUT_CLASSIFICATION	1.9758415946116972E-6	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9999988048235876	WITHOUT_CLASSIFICATION	1.1951764124270776E-6	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9999988501808564	WITHOUT_CLASSIFICATION	1.1498191435070736E-6	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9999994288636268	WITHOUT_CLASSIFICATION	5.711363732359974E-7	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9999987602418975	WITHOUT_CLASSIFICATION	1.2397581025048147E-6	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9999986011254474	WITHOUT_CLASSIFICATION	1.3988745526672342E-6	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9999979893162044	WITHOUT_CLASSIFICATION	2.0106837956261114E-6	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9999988008300302	WITHOUT_CLASSIFICATION	1.1991699697481917E-6	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.999999075453612	WITHOUT_CLASSIFICATION	9.245463879985702E-7	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9999987357454282	WITHOUT_CLASSIFICATION	1.2642545717264404E-6	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9999983403459887	WITHOUT_CLASSIFICATION	1.6596540113360399E-6	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9999984001818217	WITHOUT_CLASSIFICATION	1.599818178259299E-6	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9999977806865614	WITHOUT_CLASSIFICATION	2.219313438575917E-6	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9999983979418402	WITHOUT_CLASSIFICATION	1.6020581597680374E-6	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9999982131467107	WITHOUT_CLASSIFICATION	1.7868532893282922E-6	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.999996287378532	WITHOUT_CLASSIFICATION	3.712621467998311E-6	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.99999777049702	WITHOUT_CLASSIFICATION	2.229502979943748E-6	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9994182619127026	WITHOUT_CLASSIFICATION	5.81738087297419E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9996630316781592	WITHOUT_CLASSIFICATION	3.3696832184078947E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999999061352994	WITHOUT_CLASSIFICATION	9.386470049273231E-8	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999991738842228	WITHOUT_CLASSIFICATION	8.261157771490793E-7	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9984279108557366	WITHOUT_CLASSIFICATION	0.0015720891442634142	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999596539401395	WITHOUT_CLASSIFICATION	4.0346059860409154E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9997785100993919	WITHOUT_CLASSIFICATION	2.2148990060821074E-4	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999984186266521	WITHOUT_CLASSIFICATION	1.581373347926955E-6	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.9999979294167018	WITHOUT_CLASSIFICATION	2.0705832982271335E-6	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.999997142672188	WITHOUT_CLASSIFICATION	2.857327812114735E-6	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9999991503550267	WITHOUT_CLASSIFICATION	8.496449731337725E-7	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9999978005508167	WITHOUT_CLASSIFICATION	2.199449183432696E-6	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9999973174347055	WITHOUT_CLASSIFICATION	2.682565294459833E-6	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9999974311209878	WITHOUT_CLASSIFICATION	2.56887901227866E-6	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9999996215960494	WITHOUT_CLASSIFICATION	3.784039505854296E-7	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9999992539493856	WITHOUT_CLASSIFICATION	7.460506144439864E-7	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9999978302962923	WITHOUT_CLASSIFICATION	2.169703707690105E-6	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9999972569191422	WITHOUT_CLASSIFICATION	2.7430808577701503E-6	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9999988877310323	WITHOUT_CLASSIFICATION	1.1122689677238018E-6	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9999983018853829	WITHOUT_CLASSIFICATION	1.698114617183288E-6	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.999999353988261	WITHOUT_CLASSIFICATION	6.460117389479495E-7	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9999978955696649	WITHOUT_CLASSIFICATION	2.104430335128191E-6	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9999992681711672	WITHOUT_CLASSIFICATION	7.318288326596069E-7	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9999986223933318	WITHOUT_CLASSIFICATION	1.377606668168001E-6	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9999978521562347	WITHOUT_CLASSIFICATION	2.147843765266923E-6	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9999994865452541	WITHOUT_CLASSIFICATION	5.134547459465488E-7	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9999991961065965	WITHOUT_CLASSIFICATION	8.038934036417785E-7	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.999998668109167	WITHOUT_CLASSIFICATION	1.331890833069419E-6	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9999998774056887	WITHOUT_CLASSIFICATION	1.22594311164976E-7	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9999998131082715	WITHOUT_CLASSIFICATION	1.8689172842610087E-7	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.999999859788106	WITHOUT_CLASSIFICATION	1.4021189394655367E-7	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999909943701515	WITHOUT_CLASSIFICATION	9.005629848565772E-6	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999984201702565	WITHOUT_CLASSIFICATION	1.5798297435339106E-6	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999999404418144	WITHOUT_CLASSIFICATION	5.955818553671618E-8	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999981439443385	WITHOUT_CLASSIFICATION	1.8560556615605178E-6	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999999621203758	WITHOUT_CLASSIFICATION	3.787962431284965E-8	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999975165491374	WITHOUT_CLASSIFICATION	2.483450862557844E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999212671644	WITHOUT_CLASSIFICATION	7.87328356001364E-8	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999993853164103	WITHOUT_CLASSIFICATION	6.146835897527247E-7	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999871340132	WITHOUT_CLASSIFICATION	1.2865986739392167E-8	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999871340132	WITHOUT_CLASSIFICATION	1.2865986739392167E-8	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999197765359202	WITHOUT_CLASSIFICATION	8.022346407976348E-5	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999999670182188	WITHOUT_CLASSIFICATION	3.2981781202116676E-8	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999999997037574	WITHOUT_CLASSIFICATION	2.9624250984013237E-10	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999996020845469	WITHOUT_CLASSIFICATION	3.9791545314884076E-7	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.999999999627622	WITHOUT_CLASSIFICATION	3.7237803350006775E-10	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999820550235966	WITHOUT_CLASSIFICATION	1.7944976403411418E-5	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999999346825151	WITHOUT_CLASSIFICATION	6.531748486740418E-8	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999997872147269	WITHOUT_CLASSIFICATION	2.1278527306111331E-7	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999909617442502	WITHOUT_CLASSIFICATION	9.038255749703086E-6	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999999984373102	WITHOUT_CLASSIFICATION	1.5626897222808652E-9	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999986097971045	WITHOUT_CLASSIFICATION	1.3902028954775068E-6	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.99999914553399	WITHOUT_CLASSIFICATION	8.544660099483996E-7	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999993881140311	WITHOUT_CLASSIFICATION	6.118859688658817E-7	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999993550280037	WITHOUT_CLASSIFICATION	6.449719962462942E-7	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999972596974005	WITHOUT_CLASSIFICATION	2.74030259944818E-6	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999972596974005	WITHOUT_CLASSIFICATION	2.74030259944818E-6	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999989109512175	WITHOUT_CLASSIFICATION	1.0890487824775887E-6	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999996300798659	WITHOUT_CLASSIFICATION	3.699201340317203E-7	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.999999997820394	WITHOUT_CLASSIFICATION	2.1796060928838898E-9	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999993936675449	WITHOUT_CLASSIFICATION	6.063324551625515E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999482748462	WITHOUT_CLASSIFICATION	5.172515379537336E-8	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999999888810093	WITHOUT_CLASSIFICATION	1.1118990832002062E-8	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999812570174534	WITHOUT_CLASSIFICATION	1.8742982546568034E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999999888810093	WITHOUT_CLASSIFICATION	1.1118990832002062E-8	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999928634174282	WITHOUT_CLASSIFICATION	7.136582571754064E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999888895184023	WITHOUT_CLASSIFICATION	1.1110481597843433E-5	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9991698172164026	WITHOUT_CLASSIFICATION	8.30182783597463E-4	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9999120461108814	WITHOUT_CLASSIFICATION	8.795388911864458E-5	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999876687012961	WITHOUT_CLASSIFICATION	1.233129870393738E-5	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999991007671332	WITHOUT_CLASSIFICATION	8.992328668075895E-7	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9996755941754362	WITHOUT_CLASSIFICATION	3.2440582456380113E-4	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999943593136065	WITHOUT_CLASSIFICATION	5.640686393502951E-6	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999998852067311	WITHOUT_CLASSIFICATION	1.1479326884355074E-7	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999989271726344	WITHOUT_CLASSIFICATION	1.0728273656042985E-6	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999993528549359	WITHOUT_CLASSIFICATION	6.471450640486065E-7	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999999937944195	WITHOUT_CLASSIFICATION	6.205580479078589E-9	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.99999985043748	WITHOUT_CLASSIFICATION	1.4956252010560064E-7	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999919813742034	WITHOUT_CLASSIFICATION	8.018625796654966E-6	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999988040953	WITHOUT_CLASSIFICATION	1.1959046812002005E-9	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999988040953	WITHOUT_CLASSIFICATION	1.1959046812002005E-9	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999994968055718	WITHOUT_CLASSIFICATION	5.031944282038219E-7	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999955951556571	WITHOUT_CLASSIFICATION	4.404844342963026E-6	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999993633185335	WITHOUT_CLASSIFICATION	6.366814665504199E-7	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999945835948971	WITHOUT_CLASSIFICATION	5.416405102845865E-6	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9999995245815942	WITHOUT_CLASSIFICATION	4.7541840570182703E-7	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999999888810093	WITHOUT_CLASSIFICATION	1.1118990832002062E-8	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999999953273202	WITHOUT_CLASSIFICATION	4.67267983247852E-9	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999996803129639	WITHOUT_CLASSIFICATION	3.196870360076958E-7	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999999988506553	WITHOUT_CLASSIFICATION	1.1493446754405774E-9	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999999937497429	WITHOUT_CLASSIFICATION	6.250257109374965E-9	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999999993655	WITHOUT_CLASSIFICATION	6.345836530917406E-13	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999942423416109	WITHOUT_CLASSIFICATION	5.75765838904142E-6	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.999998278125526	WITHOUT_CLASSIFICATION	1.7218744739177539E-6	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999999528607852	WITHOUT_CLASSIFICATION	4.713921464468401E-8	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999998132127249	WITHOUT_CLASSIFICATION	1.8678727509419968E-7	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999951693252861	WITHOUT_CLASSIFICATION	4.8306747138610855E-6	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999994900875477	WITHOUT_CLASSIFICATION	5.099124522295477E-7	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999999986653701	WITHOUT_CLASSIFICATION	1.3346298205706955E-9	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999998404117397	WITHOUT_CLASSIFICATION	1.5958826033488186E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999997363211364	WITHOUT_CLASSIFICATION	2.636788636593117E-7	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9934385017579487	WITHOUT_CLASSIFICATION	0.006561498242051343	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999981171168709	WITHOUT_CLASSIFICATION	1.8828831289750838E-6	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999994382417103	WITHOUT_CLASSIFICATION	5.617582896754194E-7	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9999988736842493	WITHOUT_CLASSIFICATION	1.1263157506984865E-6	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9999991562374326	WITHOUT_CLASSIFICATION	8.43762567286528E-7	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9999962127873999	WITHOUT_CLASSIFICATION	3.787212600030755E-6	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999992711945827	WITHOUT_CLASSIFICATION	7.288054172280728E-7	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999998595874733	WITHOUT_CLASSIFICATION	1.4041252682784016E-7	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999943655531919	WITHOUT_CLASSIFICATION	5.63444680810037E-6	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999999751851736	WITHOUT_CLASSIFICATION	2.4814826426623786E-8	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999999825971803	WITHOUT_CLASSIFICATION	1.7402819711527457E-8	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999999294728885	WITHOUT_CLASSIFICATION	7.052711146390431E-8	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999997139329219	WITHOUT_CLASSIFICATION	2.8606707814594553E-7	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999994733221774	WITHOUT_CLASSIFICATION	5.266778226053517E-7	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999955926612486	WITHOUT_CLASSIFICATION	4.407338751309816E-6	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999999897479757	WITHOUT_CLASSIFICATION	1.0252024396783253E-8	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.999999656014361	WITHOUT_CLASSIFICATION	3.439856389542298E-7	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9999997736997767	WITHOUT_CLASSIFICATION	2.263002232680801E-7	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999998552745019	WITHOUT_CLASSIFICATION	1.4472549821680338E-7	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999995256222827	WITHOUT_CLASSIFICATION	4.743777173551383E-7	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.99998275284284	WITHOUT_CLASSIFICATION	1.7247157160074955E-5	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999782496277146	WITHOUT_CLASSIFICATION	2.175037228544566E-5	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999998899216402	WITHOUT_CLASSIFICATION	1.10078359809746E-7	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9999937726681095	WITHOUT_CLASSIFICATION	6.227331890435617E-6	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9999997626151763	WITHOUT_CLASSIFICATION	2.3738482373108591E-7	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999999815666439	WITHOUT_CLASSIFICATION	1.84333560504909E-8	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999984186266521	WITHOUT_CLASSIFICATION	1.581373347926955E-6	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.8385087964367585	WITHOUT_CLASSIFICATION	0.16149120356324148	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999989911767043	WITHOUT_CLASSIFICATION	1.0088232955941948E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999964980538086	WITHOUT_CLASSIFICATION	3.5019461913690123E-6	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999867335612	WITHOUT_CLASSIFICATION	1.3266438964292435E-8	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999888895184023	WITHOUT_CLASSIFICATION	1.1110481597843433E-5	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.999680902641121	WITHOUT_CLASSIFICATION	3.190973588789602E-4	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999999966548038	WITHOUT_CLASSIFICATION	3.3451961656507E-9	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999999976300685	WITHOUT_CLASSIFICATION	2.3699314368246316E-9	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999998939533888	WITHOUT_CLASSIFICATION	1.0604661112610924E-7	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999998939533888	WITHOUT_CLASSIFICATION	1.0604661112610924E-7	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999999986533691	WITHOUT_CLASSIFICATION	1.3466309043682168E-8	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999999986533691	WITHOUT_CLASSIFICATION	1.3466309043682168E-8	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.999999986533691	WITHOUT_CLASSIFICATION	1.3466309043682168E-8	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999976019904057	WITHOUT_CLASSIFICATION	2.398009594318718E-6	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999976019904057	WITHOUT_CLASSIFICATION	2.398009594318718E-6	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999997954199124	WITHOUT_CLASSIFICATION	2.0458008770877906E-7	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999997954199124	WITHOUT_CLASSIFICATION	2.0458008770877906E-7	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999999995408583	WITHOUT_CLASSIFICATION	4.591416080928854E-10	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999999487419362	WITHOUT_CLASSIFICATION	5.1258063761831635E-8	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.999999596384892	WITHOUT_CLASSIFICATION	4.0361510802240466E-7	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.999999596384892	WITHOUT_CLASSIFICATION	4.0361510802240466E-7	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999999625228997	WITHOUT_CLASSIFICATION	3.747710041559349E-8	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999996566442859	WITHOUT_CLASSIFICATION	3.433557141460708E-7	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999999493136563	WITHOUT_CLASSIFICATION	5.0686343611382765E-8	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999999873175709	WITHOUT_CLASSIFICATION	1.2682428995998367E-8	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999999302340198	WITHOUT_CLASSIFICATION	6.976598028388239E-8	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999997540794565	WITHOUT_CLASSIFICATION	2.459205434590449E-7	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999999494347739	WITHOUT_CLASSIFICATION	5.056522612511211E-8	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999998468989975	WITHOUT_CLASSIFICATION	1.5310100243743248E-7	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9999998176989795	WITHOUT_CLASSIFICATION	1.8230102050932002E-7	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9999921469470175	WITHOUT_CLASSIFICATION	7.853052982473232E-6	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999995760720205	WITHOUT_CLASSIFICATION	4.239279795815714E-7	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9999995960410966	WITHOUT_CLASSIFICATION	4.0395890349225374E-7	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9999989476096632	WITHOUT_CLASSIFICATION	1.0523903366751121E-6	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9999935516702153	WITHOUT_CLASSIFICATION	6.448329784705407E-6	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999999467739972	WITHOUT_CLASSIFICATION	5.3226002886013453E-8	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999971008500003	WITHOUT_CLASSIFICATION	2.8991499998561624E-6	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9997368457425299	WITHOUT_CLASSIFICATION	2.631542574701272E-4	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.999996462045719	WITHOUT_CLASSIFICATION	3.5379542809464115E-6	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999994525294192	WITHOUT_CLASSIFICATION	5.474705807219162E-7	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999952059398118	WITHOUT_CLASSIFICATION	4.794060188161708E-6	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999999731651423	WITHOUT_CLASSIFICATION	2.6834857707275127E-8	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.999999990719593	WITHOUT_CLASSIFICATION	9.280406988794791E-9	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9999997637913679	WITHOUT_CLASSIFICATION	2.362086320862414E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999529568206	WITHOUT_CLASSIFICATION	4.704317941351285E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999540875845	WITHOUT_CLASSIFICATION	4.591241559428312E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999197290206	WITHOUT_CLASSIFICATION	8.027097940421485E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999991276428	WITHOUT_CLASSIFICATION	8.723570746354965E-10	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999958653134	WITHOUT_CLASSIFICATION	4.134686648056443E-9	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999901391715	WITHOUT_CLASSIFICATION	9.860828555829563E-9	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999903761935	WITHOUT_CLASSIFICATION	9.623806553868844E-9	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999831742158	WITHOUT_CLASSIFICATION	1.6825784238430393E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999871331982	WITHOUT_CLASSIFICATION	1.2866801773822938E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999874424739	WITHOUT_CLASSIFICATION	1.2557526027971635E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999807879868	WITHOUT_CLASSIFICATION	1.9212013168357868E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999874424739	WITHOUT_CLASSIFICATION	1.2557526027971635E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999874424739	WITHOUT_CLASSIFICATION	1.2557526027971635E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999874424739	WITHOUT_CLASSIFICATION	1.2557526027971635E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999874424739	WITHOUT_CLASSIFICATION	1.2557526027971635E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999874424739	WITHOUT_CLASSIFICATION	1.2557526027971635E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999874424739	WITHOUT_CLASSIFICATION	1.2557526027971635E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999807879868	WITHOUT_CLASSIFICATION	1.9212013168357868E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999807879868	WITHOUT_CLASSIFICATION	1.9212013168357868E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999807879868	WITHOUT_CLASSIFICATION	1.9212013168357868E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999807879868	WITHOUT_CLASSIFICATION	1.9212013168357868E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999807879868	WITHOUT_CLASSIFICATION	1.9212013168357868E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999807879868	WITHOUT_CLASSIFICATION	1.9212013168357868E-8	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999608115470985	WITHOUT_CLASSIFICATION	3.918845290147299E-5	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.99999973566155	WITHOUT_CLASSIFICATION	2.6433844996875823E-7	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999853021645843	WITHOUT_CLASSIFICATION	1.4697835415690622E-5	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998222616509	WITHOUT_CLASSIFICATION	1.777383491712891E-7	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999999996103255	WITHOUT_CLASSIFICATION	3.896744798939382E-10	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999039348879	WITHOUT_CLASSIFICATION	9.606511204408981E-8	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999985708303564	WITHOUT_CLASSIFICATION	1.4291696437270498E-6	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999999954975876	WITHOUT_CLASSIFICATION	4.502412451083655E-9	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999995756058828	WITHOUT_CLASSIFICATION	4.2439411719789126E-7	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.999985309420545	WITHOUT_CLASSIFICATION	1.4690579455032962E-5	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.8880676011611714	IMPLEMENTATION	0.11193239883882862	WITHOUT_CLASSIFICATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.99999999887989	WITHOUT_CLASSIFICATION	1.1201099140436825E-9	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999955169689196	WITHOUT_CLASSIFICATION	4.483031080305751E-6	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999999566331	WITHOUT_CLASSIFICATION	4.3366801481701136E-11	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999999967666034	WITHOUT_CLASSIFICATION	3.233396580925295E-9	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999989507082636	WITHOUT_CLASSIFICATION	1.0492917363854688E-6	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999929437907814	WITHOUT_CLASSIFICATION	7.056209218630234E-6	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999999081335978	WITHOUT_CLASSIFICATION	9.186640207803688E-8	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999998490352133	WITHOUT_CLASSIFICATION	1.5096478661752973E-7	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999999472310528	WITHOUT_CLASSIFICATION	5.276894725163361E-8	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999999146703155	WITHOUT_CLASSIFICATION	8.53296845518999E-8	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999999670157966	WITHOUT_CLASSIFICATION	3.298420340820692E-8	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999812570174534	WITHOUT_CLASSIFICATION	1.8742982546568034E-5	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999972135653288	WITHOUT_CLASSIFICATION	2.786434671243729E-6	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.999999617593246	WITHOUT_CLASSIFICATION	3.8240675400499794E-7	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999999864763065	WITHOUT_CLASSIFICATION	1.3523693581134805E-8	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999936125638	WITHOUT_CLASSIFICATION	6.387436329657917E-9	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999210653915642	WITHOUT_CLASSIFICATION	7.893460843575572E-5	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.9999813397937873	WITHOUT_CLASSIFICATION	1.8660206212717333E-5	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999999581196424	WITHOUT_CLASSIFICATION	4.188035758572622E-8	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.9999019663980894	WITHOUT_CLASSIFICATION	9.80336019106467E-5	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999959331268795	WITHOUT_CLASSIFICATION	4.066873120419163E-6	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999999588785995	WITHOUT_CLASSIFICATION	4.1121400467282305E-8	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.999999971343796	WITHOUT_CLASSIFICATION	2.8656203900143955E-8	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999996123660917	WITHOUT_CLASSIFICATION	3.8763390824258386E-7	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999353864005848	WITHOUT_CLASSIFICATION	6.461359941519746E-5	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.999991821018507	WITHOUT_CLASSIFICATION	8.178981492988697E-6	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999999563870763	WITHOUT_CLASSIFICATION	4.361292368007286E-8	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999978263697795	WITHOUT_CLASSIFICATION	2.1736302205525604E-6	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999999502815552	WITHOUT_CLASSIFICATION	4.9718444816592295E-8	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999996237559606	WITHOUT_CLASSIFICATION	3.762440393518562E-7	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999998438368379	WITHOUT_CLASSIFICATION	1.5616316201677377E-7	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999999987191129	WITHOUT_CLASSIFICATION	1.2808870472158294E-9	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999999975044536	WITHOUT_CLASSIFICATION	2.4955463129290114E-9	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999999975044536	WITHOUT_CLASSIFICATION	2.4955463129290114E-9	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999999441779152	WITHOUT_CLASSIFICATION	5.5822084859998205E-8	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999999441779152	WITHOUT_CLASSIFICATION	5.5822084859998205E-8	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.999999938600865	WITHOUT_CLASSIFICATION	6.139913500707764E-8	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.999999938600865	WITHOUT_CLASSIFICATION	6.139913500707764E-8	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999858553644502	WITHOUT_CLASSIFICATION	1.4144635549821169E-5	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999937840743753	WITHOUT_CLASSIFICATION	6.215925624769026E-6	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999999987123944	WITHOUT_CLASSIFICATION	1.2876055838990672E-9	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999999951369509	WITHOUT_CLASSIFICATION	4.863049119857148E-9	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999986264659902	WITHOUT_CLASSIFICATION	1.373534009794079E-6	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999994413051034	WITHOUT_CLASSIFICATION	5.586948964701955E-7	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9999996656402536	WITHOUT_CLASSIFICATION	3.3435974645227543E-7	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999908664703	WITHOUT_CLASSIFICATION	9.13352966254743E-9	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999999999777089	WITHOUT_CLASSIFICATION	2.229105539481956E-11	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999999999103217	WITHOUT_CLASSIFICATION	8.967816207279445E-11	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999999994467416	WITHOUT_CLASSIFICATION	5.532583886236064E-10	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999999888023956	WITHOUT_CLASSIFICATION	1.1197604382354727E-8	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999999983307063	WITHOUT_CLASSIFICATION	1.669293782183242E-9	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999992305181682	WITHOUT_CLASSIFICATION	7.694818318792312E-7	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999987112052358	WITHOUT_CLASSIFICATION	1.2887947642024063E-6	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9999999706926419	WITHOUT_CLASSIFICATION	2.9307358078451577E-8	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999948023436123	WITHOUT_CLASSIFICATION	5.197656387793621E-6	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999999910909619	WITHOUT_CLASSIFICATION	8.909038145469423E-9	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999950351997948	WITHOUT_CLASSIFICATION	4.964800205225588E-6	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9999998990887022	WITHOUT_CLASSIFICATION	1.009112977805264E-7	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9999996959024472	WITHOUT_CLASSIFICATION	3.0409755276527044E-7	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999971428875604	WITHOUT_CLASSIFICATION	2.8571124397383926E-6	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999985834186416	WITHOUT_CLASSIFICATION	1.4165813584509642E-6	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999999788302204	WITHOUT_CLASSIFICATION	2.116977956257244E-8	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999999973986358	WITHOUT_CLASSIFICATION	2.6013642200651566E-9	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999999978590002	WITHOUT_CLASSIFICATION	2.1409997679831103E-9	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9999999626982645	WITHOUT_CLASSIFICATION	3.730173555479016E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999990993669668	WITHOUT_CLASSIFICATION	9.006330331356489E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999990993669668	WITHOUT_CLASSIFICATION	9.006330331356489E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999990993669668	WITHOUT_CLASSIFICATION	9.006330331356489E-7	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998618201780639	WITHOUT_CLASSIFICATION	1.381798219360191E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998618201780639	WITHOUT_CLASSIFICATION	1.381798219360191E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999997363211364	WITHOUT_CLASSIFICATION	2.636788636593117E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999997363211364	WITHOUT_CLASSIFICATION	2.636788636593117E-7	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999999999511744	WITHOUT_CLASSIFICATION	4.882555723789511E-11	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9974256824595559	WITHOUT_CLASSIFICATION	0.002574317540444166	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999997936401313	WITHOUT_CLASSIFICATION	2.0635986863101035E-7	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999999964100336	WITHOUT_CLASSIFICATION	3.589966441754819E-9	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999990993669668	WITHOUT_CLASSIFICATION	9.006330331356489E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999990993669668	WITHOUT_CLASSIFICATION	9.006330331356489E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999990993669668	WITHOUT_CLASSIFICATION	9.006330331356489E-7	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998618201780639	WITHOUT_CLASSIFICATION	1.381798219360191E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998618201780639	WITHOUT_CLASSIFICATION	1.381798219360191E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998618201780639	WITHOUT_CLASSIFICATION	1.381798219360191E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999997363211364	WITHOUT_CLASSIFICATION	2.636788636593117E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999997363211364	WITHOUT_CLASSIFICATION	2.636788636593117E-7	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999999998782877	WITHOUT_CLASSIFICATION	1.217122581770674E-10	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999999995967793	WITHOUT_CLASSIFICATION	4.032207345164093E-10	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999997950167	WITHOUT_CLASSIFICATION	2.0498318932684496E-10	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999997950167	WITHOUT_CLASSIFICATION	2.0498318932684496E-10	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999997950167	WITHOUT_CLASSIFICATION	2.0498318932684496E-10	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999997950167	WITHOUT_CLASSIFICATION	2.0498318932684496E-10	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999997950167	WITHOUT_CLASSIFICATION	2.0498318932684496E-10	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999993660500323	WITHOUT_CLASSIFICATION	6.339499677745918E-7	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999999584489538	WITHOUT_CLASSIFICATION	4.155104608169576E-8	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9998318985798701	WITHOUT_CLASSIFICATION	1.6810142012978977E-4	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999996382001669	WITHOUT_CLASSIFICATION	3.6179983317785484E-7	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999983520796154	WITHOUT_CLASSIFICATION	1.6479203845845133E-6	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999993911611261	WITHOUT_CLASSIFICATION	6.088388739685832E-7	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.998769059578853	WITHOUT_CLASSIFICATION	0.0012309404211470816	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.999999532584368	WITHOUT_CLASSIFICATION	4.6741563191248124E-7	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999969251142455	WITHOUT_CLASSIFICATION	3.0748857545073628E-6	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999999839701069	WITHOUT_CLASSIFICATION	1.6029893125258697E-8	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999978825275162	WITHOUT_CLASSIFICATION	2.1174724837457548E-6	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999999994324499	WITHOUT_CLASSIFICATION	5.675500211331055E-10	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999981544792468	WITHOUT_CLASSIFICATION	1.8455207533084455E-6	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999997854472121	WITHOUT_CLASSIFICATION	2.1455278780182513E-7	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999999969130716	WITHOUT_CLASSIFICATION	3.0869283085692504E-9	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999966178176721	WITHOUT_CLASSIFICATION	3.3821823278836226E-6	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999966178176721	WITHOUT_CLASSIFICATION	3.3821823278836226E-6	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999966178176721	WITHOUT_CLASSIFICATION	3.3821823278836226E-6	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999999944182187	WITHOUT_CLASSIFICATION	5.5817813117541246E-9	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999999944182959	WITHOUT_CLASSIFICATION	5.5817041888884505E-9	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999986292275983	WITHOUT_CLASSIFICATION	1.3707724017165719E-6	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999999998542	WITHOUT_CLASSIFICATION	1.4577296879418011E-13	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999999217098176	WITHOUT_CLASSIFICATION	7.829018241013266E-8	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999992031260365	WITHOUT_CLASSIFICATION	7.968739634539015E-7	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999999138294322	WITHOUT_CLASSIFICATION	8.617056779133025E-8	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9999997923400326	WITHOUT_CLASSIFICATION	2.0765996754591054E-7	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999997018917851	WITHOUT_CLASSIFICATION	2.981082148812354E-7	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999999961989786	WITHOUT_CLASSIFICATION	3.8010213719722636E-9	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999999992988529	WITHOUT_CLASSIFICATION	7.011472482857845E-10	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999999979662717	WITHOUT_CLASSIFICATION	2.0337282194691553E-9	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999998266794293	WITHOUT_CLASSIFICATION	1.7332057066571477E-7	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.999999950986251	WITHOUT_CLASSIFICATION	4.901374888073425E-8	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9999999594374572	WITHOUT_CLASSIFICATION	4.0562542848144185E-8	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999998854344478	WITHOUT_CLASSIFICATION	1.145655520739629E-7	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.999999975999598	WITHOUT_CLASSIFICATION	2.4000401923552546E-8	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.999999992791006	WITHOUT_CLASSIFICATION	7.2089939400693195E-9	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9999997185003756	WITHOUT_CLASSIFICATION	2.8149962443288644E-7	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999986633371556	WITHOUT_CLASSIFICATION	1.3366628444917896E-6	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.999999449607258	WITHOUT_CLASSIFICATION	5.50392742063824E-7	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999979540309254	WITHOUT_CLASSIFICATION	2.0459690746739255E-6	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9991469131775034	WITHOUT_CLASSIFICATION	8.530868224966938E-4	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999999462692564	WITHOUT_CLASSIFICATION	5.373074353849222E-8	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.999999748176649	WITHOUT_CLASSIFICATION	2.5182335093465725E-7	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9999997461118479	WITHOUT_CLASSIFICATION	2.538881520489149E-7	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9999999297964226	WITHOUT_CLASSIFICATION	7.020357742275998E-8	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9999989572128972	WITHOUT_CLASSIFICATION	1.0427871027319532E-6	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999946966451595	WITHOUT_CLASSIFICATION	5.3033548405989205E-6	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9999997129740925	WITHOUT_CLASSIFICATION	2.870259075213374E-7	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9999996256552194	WITHOUT_CLASSIFICATION	3.7434478059108906E-7	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9999998122662405	WITHOUT_CLASSIFICATION	1.8773375951756676E-7	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.9999997977520015	WITHOUT_CLASSIFICATION	2.0224799854945054E-7	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9999998424508841	WITHOUT_CLASSIFICATION	1.5754911588926317E-7	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9999997709654319	WITHOUT_CLASSIFICATION	2.290345681372189E-7	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9999998069631643	WITHOUT_CLASSIFICATION	1.9303683566696234E-7	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999976509519484	WITHOUT_CLASSIFICATION	2.349048051506865E-6	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.999999721622122	WITHOUT_CLASSIFICATION	2.7837787796564007E-7	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999994013332862	WITHOUT_CLASSIFICATION	5.986667137119036E-7	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999346743884103	WITHOUT_CLASSIFICATION	6.53256115896387E-5	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999999998507748	WITHOUT_CLASSIFICATION	1.4922512027995632E-10	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.999998578373672	WITHOUT_CLASSIFICATION	1.4216263279943915E-6	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999689347937591	WITHOUT_CLASSIFICATION	3.106520624084742E-5	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999947546427039	WITHOUT_CLASSIFICATION	5.245357296106903E-6	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999999845916582	WITHOUT_CLASSIFICATION	1.5408341742629682E-8	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999909350437758	WITHOUT_CLASSIFICATION	9.064956224188176E-6	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999653684997655	WITHOUT_CLASSIFICATION	3.463150023445568E-5	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999653684997655	WITHOUT_CLASSIFICATION	3.463150023445568E-5	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999997687471257	WITHOUT_CLASSIFICATION	2.3125287429434078E-7	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999989592908672	WITHOUT_CLASSIFICATION	1.0407091328008217E-6	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999914628616473	WITHOUT_CLASSIFICATION	8.53713835263118E-6	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999999971238669	WITHOUT_CLASSIFICATION	2.8761329714783213E-9	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999997697530252	WITHOUT_CLASSIFICATION	2.3024697485598388E-7	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999997744522322	WITHOUT_CLASSIFICATION	2.255477678627272E-7	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999998224474942	WITHOUT_CLASSIFICATION	1.775525058120837E-7	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999999736504	WITHOUT_CLASSIFICATION	2.6349578553295606E-11	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999999229038692	WITHOUT_CLASSIFICATION	7.709613080196123E-8	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999978971010108	WITHOUT_CLASSIFICATION	2.1028989892739574E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999583304054	WITHOUT_CLASSIFICATION	4.166959464144207E-8	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999583304054	WITHOUT_CLASSIFICATION	4.166959464144207E-8	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999583304054	WITHOUT_CLASSIFICATION	4.166959464144207E-8	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999583304054	WITHOUT_CLASSIFICATION	4.166959464144207E-8	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9999982591385532	WITHOUT_CLASSIFICATION	1.7408614467419029E-6	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9999997512183839	WITHOUT_CLASSIFICATION	2.487816161376661E-7	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9999955398852974	WITHOUT_CLASSIFICATION	4.460114702572007E-6	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.999995604668626	WITHOUT_CLASSIFICATION	4.395331373970791E-6	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999861772953155	WITHOUT_CLASSIFICATION	1.3822704684525973E-5	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999997221858533	WITHOUT_CLASSIFICATION	2.7781414662223684E-7	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999994993323655	WITHOUT_CLASSIFICATION	5.006676343494427E-7	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999997337796396	WITHOUT_CLASSIFICATION	2.662203604713297E-7	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999997337796396	WITHOUT_CLASSIFICATION	2.662203604713297E-7	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999999792723273	WITHOUT_CLASSIFICATION	2.0727672677498515E-8	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999972753120532	WITHOUT_CLASSIFICATION	2.724687946745483E-6	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999998673842554	WITHOUT_CLASSIFICATION	1.3261574456367708E-7	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999997359129	WITHOUT_CLASSIFICATION	2.640870855131336E-10	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999997359129	WITHOUT_CLASSIFICATION	2.640870855131336E-10	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999999999255625	WITHOUT_CLASSIFICATION	7.443754835247004E-11	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999961699346687	WITHOUT_CLASSIFICATION	3.830065331329646E-6	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999961699346687	WITHOUT_CLASSIFICATION	3.830065331329646E-6	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999999853078758	WITHOUT_CLASSIFICATION	1.4692124117073258E-8	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.999999999678657	WITHOUT_CLASSIFICATION	3.2134294684048326E-10	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.999999947140437	WITHOUT_CLASSIFICATION	5.285956287982698E-8	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999988646521157	WITHOUT_CLASSIFICATION	1.13534788424818E-6	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9971652944010163	WITHOUT_CLASSIFICATION	0.0028347055989836186	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.999999995581295	WITHOUT_CLASSIFICATION	4.418704994038609E-9	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.99997475927352	WITHOUT_CLASSIFICATION	2.5240726479967596E-5	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9999894940244135	WITHOUT_CLASSIFICATION	1.0505975586427371E-5	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999997239315073	WITHOUT_CLASSIFICATION	2.7606849272672424E-7	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999999950441738	WITHOUT_CLASSIFICATION	4.9558261493505224E-9	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999999663298414	WITHOUT_CLASSIFICATION	3.367015852658847E-8	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999992707030172	WITHOUT_CLASSIFICATION	7.292969827231957E-7	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999983881098211	WITHOUT_CLASSIFICATION	1.611890178941202E-6	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999968938443985	WITHOUT_CLASSIFICATION	3.106155601472945E-6	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999977317811062	WITHOUT_CLASSIFICATION	2.268218893798329E-6	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999997258048462	WITHOUT_CLASSIFICATION	2.7419515389325157E-7	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9999997728214931	WITHOUT_CLASSIFICATION	2.2717850696171417E-7	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9999998222379344	WITHOUT_CLASSIFICATION	1.7776206566901717E-7	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999698431228	WITHOUT_CLASSIFICATION	3.015687717746381E-8	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999995211065202	WITHOUT_CLASSIFICATION	4.788934797916108E-7	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999968023654913	WITHOUT_CLASSIFICATION	3.1976345086140205E-6	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999988047319626	WITHOUT_CLASSIFICATION	1.1952680374725012E-6	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999992033411808	WITHOUT_CLASSIFICATION	7.966588191449572E-7	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.99999998174317	WITHOUT_CLASSIFICATION	1.8256830061372654E-8	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999999738742252	WITHOUT_CLASSIFICATION	2.6125774756522083E-8	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999999866569191	WITHOUT_CLASSIFICATION	1.3343080904664756E-8	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999996047689858	WITHOUT_CLASSIFICATION	3.952310142113748E-7	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999999972833955	WITHOUT_CLASSIFICATION	2.7166044726277267E-9	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999996043444	WITHOUT_CLASSIFICATION	3.9565557548141585E-10	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999667082681654	WITHOUT_CLASSIFICATION	3.3291731834606394E-5	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9999997967172615	WITHOUT_CLASSIFICATION	2.0328273867779514E-7	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999999232944464	WITHOUT_CLASSIFICATION	7.670555357877935E-8	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.5417264481296861	WITHOUT_CLASSIFICATION	0.458273551870314	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999990275594175	WITHOUT_CLASSIFICATION	9.724405825084271E-7	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999998389159117	WITHOUT_CLASSIFICATION	1.6108408839828743E-7	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999999981099734	WITHOUT_CLASSIFICATION	1.8900266039233335E-9	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999995142133479	WITHOUT_CLASSIFICATION	4.857866521132554E-7	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999999882840136	WITHOUT_CLASSIFICATION	1.1715986432770586E-8	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.999999780173141	WITHOUT_CLASSIFICATION	2.1982685905484622E-7	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999999981099734	WITHOUT_CLASSIFICATION	1.8900266039233335E-9	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999995142133479	WITHOUT_CLASSIFICATION	4.857866521132554E-7	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999953785827334	WITHOUT_CLASSIFICATION	4.621417266553978E-6	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999998618769643	WITHOUT_CLASSIFICATION	1.3812303558504247E-7	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999998618769643	WITHOUT_CLASSIFICATION	1.3812303558504247E-7	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999751754934574	WITHOUT_CLASSIFICATION	2.482450654257712E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.999999999657682	WITHOUT_CLASSIFICATION	3.423180060407504E-10	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999916571312	WITHOUT_CLASSIFICATION	8.34286873796722E-9	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999999582195951	WITHOUT_CLASSIFICATION	4.178040497757832E-8	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998932130406488	WITHOUT_CLASSIFICATION	1.0678695935116812E-4	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.999999722426677	WITHOUT_CLASSIFICATION	2.7757332294601033E-7	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.999971972897812	WITHOUT_CLASSIFICATION	2.802710218797002E-5	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999898876963585	WITHOUT_CLASSIFICATION	1.0112303641425433E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999847865557501	WITHOUT_CLASSIFICATION	1.5213444249933908E-5	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999997378626613	WITHOUT_CLASSIFICATION	2.6213733866690697E-7	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.999999234884452	WITHOUT_CLASSIFICATION	7.651155481056253E-7	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.999999974655319	WITHOUT_CLASSIFICATION	2.534468104630417E-8	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999999987471803	WITHOUT_CLASSIFICATION	1.2528197356372576E-9	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999987869628	WITHOUT_CLASSIFICATION	1.213037208439708E-9	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999987869628	WITHOUT_CLASSIFICATION	1.213037208439708E-9	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999860258141948	WITHOUT_CLASSIFICATION	1.3974185805224365E-5	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999860258141948	WITHOUT_CLASSIFICATION	1.3974185805224365E-5	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999999934925466	WITHOUT_CLASSIFICATION	6.507453471449441E-9	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999996925760282	WITHOUT_CLASSIFICATION	3.0742397186265386E-7	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999922365978662	WITHOUT_CLASSIFICATION	7.7634021337137E-6	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999999977827246	WITHOUT_CLASSIFICATION	2.2172752910791025E-9	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999992812598835	WITHOUT_CLASSIFICATION	7.187401164472862E-7	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999999460464865	WITHOUT_CLASSIFICATION	5.3953513548735023E-8	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999916571312	WITHOUT_CLASSIFICATION	8.34286873796722E-9	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999999582195951	WITHOUT_CLASSIFICATION	4.178040497757832E-8	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999847865557501	WITHOUT_CLASSIFICATION	1.5213444249933908E-5	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999997378626613	WITHOUT_CLASSIFICATION	2.6213733866690697E-7	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999951081584288	WITHOUT_CLASSIFICATION	4.891841571163257E-6	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999936537575771	WITHOUT_CLASSIFICATION	6.3462424228672544E-6	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999997177920696	WITHOUT_CLASSIFICATION	2.8220793032605034E-7	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999999820805524	WITHOUT_CLASSIFICATION	1.79194476358548E-8	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999997335961254	WITHOUT_CLASSIFICATION	2.6640387467975233E-7	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999999990781911	WITHOUT_CLASSIFICATION	9.218088492166317E-10	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999996619689383	WITHOUT_CLASSIFICATION	3.380310616859407E-7	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.999999838242407	WITHOUT_CLASSIFICATION	1.6175759298600603E-7	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999985567893266	WITHOUT_CLASSIFICATION	1.443210673404441E-6	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999985977670404	WITHOUT_CLASSIFICATION	1.4022329596862599E-6	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999982351356	WITHOUT_CLASSIFICATION	1.7648644546855543E-9	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999999894641539	WITHOUT_CLASSIFICATION	1.0535846037605966E-8	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.999999527414076	WITHOUT_CLASSIFICATION	4.7258592395933274E-7	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999993690583049	WITHOUT_CLASSIFICATION	6.309416950903429E-7	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999992021983104	WITHOUT_CLASSIFICATION	7.978016897333536E-7	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999987778835313	WITHOUT_CLASSIFICATION	1.2221164687510215E-6	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.999998965430719	WITHOUT_CLASSIFICATION	1.0345692810188677E-6	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999999864393283	WITHOUT_CLASSIFICATION	1.356067169646298E-8	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.999999999395095	WITHOUT_CLASSIFICATION	6.049049798849339E-10	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999999914120373	WITHOUT_CLASSIFICATION	8.587962649958367E-9	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999999758510744	WITHOUT_CLASSIFICATION	2.414892561491807E-8	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999999758510744	WITHOUT_CLASSIFICATION	2.414892561491807E-8	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999997860291002	WITHOUT_CLASSIFICATION	2.139708998046172E-7	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999998321578086	WITHOUT_CLASSIFICATION	1.6784219143425088E-7	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999999998810783	WITHOUT_CLASSIFICATION	1.1892159991714505E-10	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999999499336819	WITHOUT_CLASSIFICATION	5.0066318030237013E-8	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999999499336819	WITHOUT_CLASSIFICATION	5.0066318030237013E-8	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999997177920696	WITHOUT_CLASSIFICATION	2.8220793032605034E-7	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.999999876993305	WITHOUT_CLASSIFICATION	1.2300669503766876E-7	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999999816393924	WITHOUT_CLASSIFICATION	1.8360607624625463E-8	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999739125643	WITHOUT_CLASSIFICATION	2.6087435664601394E-8	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999640317705	WITHOUT_CLASSIFICATION	3.5968229545174544E-8	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.99999998445696	WITHOUT_CLASSIFICATION	1.5543039893323895E-8	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999988264686459	WITHOUT_CLASSIFICATION	1.173531354099931E-6	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999999851103842	WITHOUT_CLASSIFICATION	1.4889615917650396E-8	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9999970256991663	WITHOUT_CLASSIFICATION	2.9743008337873247E-6	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999974358410052	WITHOUT_CLASSIFICATION	2.5641589947476146E-6	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999999776365771	WITHOUT_CLASSIFICATION	2.2363422824431156E-8	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999995587624577	WITHOUT_CLASSIFICATION	4.4123754238359213E-7	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999998776352118	WITHOUT_CLASSIFICATION	1.2236478824113138E-7	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999989816294202	WITHOUT_CLASSIFICATION	1.0183705797411112E-6	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999998265519693	WITHOUT_CLASSIFICATION	1.7344803069229986E-7	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9999997862951302	WITHOUT_CLASSIFICATION	2.137048697906854E-7	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999999760262456	WITHOUT_CLASSIFICATION	2.397375443617316E-8	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9999997294060217	WITHOUT_CLASSIFICATION	2.705939783139883E-7	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999999878500803	WITHOUT_CLASSIFICATION	1.2149919717073144E-8	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999772139115	WITHOUT_CLASSIFICATION	2.2786088392001208E-8	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999997579518	WITHOUT_CLASSIFICATION	2.420481178409536E-10	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999999092923283	WITHOUT_CLASSIFICATION	9.070767176767613E-8	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999959151801305	WITHOUT_CLASSIFICATION	4.08481986952571E-6	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999998265765008	WITHOUT_CLASSIFICATION	1.734234991209427E-7	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999999997500915	WITHOUT_CLASSIFICATION	2.4990850167030207E-9	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999343958957	WITHOUT_CLASSIFICATION	6.560410424468119E-8	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999997730633217	WITHOUT_CLASSIFICATION	2.2693667835098225E-7	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999994096520887	WITHOUT_CLASSIFICATION	5.903479113656277E-7	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999994450002155	WITHOUT_CLASSIFICATION	5.549997844725394E-7	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999997007622242	WITHOUT_CLASSIFICATION	2.9923777571577953E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999952264305	WITHOUT_CLASSIFICATION	4.773569496805499E-9	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999952264305	WITHOUT_CLASSIFICATION	4.773569496805499E-9	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999999995835325	WITHOUT_CLASSIFICATION	4.164675488751105E-10	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999996663758405	WITHOUT_CLASSIFICATION	3.336241594958424E-7	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999996663758405	WITHOUT_CLASSIFICATION	3.336241594958424E-7	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999749871299	WITHOUT_CLASSIFICATION	2.5012870106003995E-8	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999749871299	WITHOUT_CLASSIFICATION	2.5012870106003995E-8	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996832406687	WITHOUT_CLASSIFICATION	3.1675933125323463E-7	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999999831471702	WITHOUT_CLASSIFICATION	1.685282983910387E-8	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999998299866105	WITHOUT_CLASSIFICATION	1.7001338960697866E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999999104009945	WITHOUT_CLASSIFICATION	8.959900557668274E-8	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999981941615	WITHOUT_CLASSIFICATION	1.8058385351095099E-9	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999994075259204	WITHOUT_CLASSIFICATION	5.924740795836382E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999994075259204	WITHOUT_CLASSIFICATION	5.924740795836382E-7	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999999997500915	WITHOUT_CLASSIFICATION	2.4990850167030207E-9	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999999997500915	WITHOUT_CLASSIFICATION	2.4990850167030207E-9	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999999997500915	WITHOUT_CLASSIFICATION	2.4990850167030207E-9	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999343958957	WITHOUT_CLASSIFICATION	6.560410424468119E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999952264305	WITHOUT_CLASSIFICATION	4.773569496805499E-9	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999952264305	WITHOUT_CLASSIFICATION	4.773569496805499E-9	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999952264305	WITHOUT_CLASSIFICATION	4.773569496805499E-9	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996832406687	WITHOUT_CLASSIFICATION	3.1675933125323463E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996832406687	WITHOUT_CLASSIFICATION	3.1675933125323463E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996832406687	WITHOUT_CLASSIFICATION	3.1675933125323463E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999999104009945	WITHOUT_CLASSIFICATION	8.959900557668274E-8	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999999104009945	WITHOUT_CLASSIFICATION	8.959900557668274E-8	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999995831197184	WITHOUT_CLASSIFICATION	4.16880281674231E-7	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999999195273314	WITHOUT_CLASSIFICATION	8.047266859047389E-8	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999999480466418	WITHOUT_CLASSIFICATION	5.1953358146751195E-8	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9997570127376044	WITHOUT_CLASSIFICATION	2.4298726239549664E-4	IMPLEMENTATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9999628808159521	WITHOUT_CLASSIFICATION	3.711918404791913E-5	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.999998735153572	WITHOUT_CLASSIFICATION	1.2648464280866267E-6	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.999998735153572	WITHOUT_CLASSIFICATION	1.2648464280866267E-6	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999999901144576	WITHOUT_CLASSIFICATION	9.885542413009618E-9	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999988264686459	WITHOUT_CLASSIFICATION	1.173531354099931E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999988264686459	WITHOUT_CLASSIFICATION	1.173531354099931E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999988264686459	WITHOUT_CLASSIFICATION	1.173531354099931E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999988264686459	WITHOUT_CLASSIFICATION	1.173531354099931E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999988264686459	WITHOUT_CLASSIFICATION	1.173531354099931E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.999999992980295	WITHOUT_CLASSIFICATION	7.019705103507583E-9	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.999999992980295	WITHOUT_CLASSIFICATION	7.019705103507583E-9	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.999999992980295	WITHOUT_CLASSIFICATION	7.019705103507583E-9	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.999999999454536	WITHOUT_CLASSIFICATION	5.454640067643889E-10	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999997782942266	WITHOUT_CLASSIFICATION	2.2170577333486617E-7	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999999343958957	WITHOUT_CLASSIFICATION	6.560410424468119E-8	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996832406687	WITHOUT_CLASSIFICATION	3.1675933125323463E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996832406687	WITHOUT_CLASSIFICATION	3.1675933125323463E-7	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999988264686459	WITHOUT_CLASSIFICATION	1.173531354099931E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999988264686459	WITHOUT_CLASSIFICATION	1.173531354099931E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.999999992980295	WITHOUT_CLASSIFICATION	7.019705103507583E-9	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999999901144576	WITHOUT_CLASSIFICATION	9.885542413009618E-9	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999757481319	WITHOUT_CLASSIFICATION	2.4251868160822773E-8	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.9999999328438389	WITHOUT_CLASSIFICATION	6.715616108127037E-8	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999999673269504	WITHOUT_CLASSIFICATION	3.2673049625005677E-8	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999998748391695	WITHOUT_CLASSIFICATION	1.251608305548977E-7	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.999999900909131	WITHOUT_CLASSIFICATION	9.9090869045505E-8	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999999763671641	WITHOUT_CLASSIFICATION	2.363283586848131E-8	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999846802186265	WITHOUT_CLASSIFICATION	1.5319781373485832E-5	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999995173605071	WITHOUT_CLASSIFICATION	4.826394929761716E-7	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999978373911214	WITHOUT_CLASSIFICATION	2.162608878639154E-6	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999999925400187	WITHOUT_CLASSIFICATION	7.459981329089199E-9	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999622379915428	WITHOUT_CLASSIFICATION	3.7762008457129984E-5	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999999907786973	WITHOUT_CLASSIFICATION	9.221302787137453E-9	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999983908217153	WITHOUT_CLASSIFICATION	1.609178284699739E-6	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9972615759867293	WITHOUT_CLASSIFICATION	0.002738424013270793	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999999288679752	WITHOUT_CLASSIFICATION	7.113202489587453E-8	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999299776179217	WITHOUT_CLASSIFICATION	7.002238207839118E-5	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999957422086615	WITHOUT_CLASSIFICATION	4.25779133856316E-6	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999999699529333	WITHOUT_CLASSIFICATION	3.0047066648211324E-8	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999626141901523	WITHOUT_CLASSIFICATION	3.738580984766798E-5	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999999912659723	WITHOUT_CLASSIFICATION	8.734027740707571E-9	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999972560646194	WITHOUT_CLASSIFICATION	2.7439353805358035E-6	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999997453932	WITHOUT_CLASSIFICATION	2.54606775562367E-10	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999999342645	WITHOUT_CLASSIFICATION	6.573557781330335E-11	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999999353426607	WITHOUT_CLASSIFICATION	6.46573392273075E-8	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999998123994933	WITHOUT_CLASSIFICATION	1.876005067188829E-7	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999998446363833	WITHOUT_CLASSIFICATION	1.5536361673576058E-7	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.999999587758876	WITHOUT_CLASSIFICATION	4.1224112391122633E-7	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999999958899324	WITHOUT_CLASSIFICATION	4.110067529445647E-9	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999996960762767	WITHOUT_CLASSIFICATION	3.03923723375955E-7	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999990819031642	WITHOUT_CLASSIFICATION	9.180968358527786E-7	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999999998317344	WITHOUT_CLASSIFICATION	1.6826568625241818E-10	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999768076349	WITHOUT_CLASSIFICATION	2.3192365250690204E-8	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999999997999355	WITHOUT_CLASSIFICATION	2.0006438964492015E-10	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999951269734	WITHOUT_CLASSIFICATION	4.873026644265426E-9	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999757481319	WITHOUT_CLASSIFICATION	2.4251868160822773E-8	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999997694967612	WITHOUT_CLASSIFICATION	2.3050323880336768E-7	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999999835848972	WITHOUT_CLASSIFICATION	1.6415102744992527E-8	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999999116302286	WITHOUT_CLASSIFICATION	8.836977143183133E-8	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.999999914966414	WITHOUT_CLASSIFICATION	8.503358603939047E-8	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.999999914966414	WITHOUT_CLASSIFICATION	8.503358603939047E-8	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9999642973988987	WITHOUT_CLASSIFICATION	3.5702601101265664E-5	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9999642973988987	WITHOUT_CLASSIFICATION	3.5702601101265664E-5	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999999999300967	WITHOUT_CLASSIFICATION	6.990328642063089E-11	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999999902725266	WITHOUT_CLASSIFICATION	9.727473437239165E-9	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999999385362465	WITHOUT_CLASSIFICATION	6.146375353542545E-8	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999993648023234	WITHOUT_CLASSIFICATION	6.351976765104451E-7	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.999999904644129	WITHOUT_CLASSIFICATION	9.535587098450338E-8	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999973932697952	WITHOUT_CLASSIFICATION	2.606730204831552E-6	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999999948519142	WITHOUT_CLASSIFICATION	5.148085803566505E-9	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999994593699346	WITHOUT_CLASSIFICATION	5.406300652966333E-7	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999659153132494	WITHOUT_CLASSIFICATION	3.408468675061336E-5	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999996189195	WITHOUT_CLASSIFICATION	3.810805258079006E-10	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999999718246	WITHOUT_CLASSIFICATION	2.8175438989321325E-11	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999997927539124	WITHOUT_CLASSIFICATION	2.0724608756635069E-7	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999997927539124	WITHOUT_CLASSIFICATION	2.0724608756635069E-7	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999999999871134	WITHOUT_CLASSIFICATION	1.2886701939276401E-11	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999999969937304	WITHOUT_CLASSIFICATION	3.0062695056560117E-9	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999990228749218	WITHOUT_CLASSIFICATION	9.771250782130178E-7	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999990228749218	WITHOUT_CLASSIFICATION	9.771250782130178E-7	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999999996756342	WITHOUT_CLASSIFICATION	3.243656869944274E-10	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999987878543	WITHOUT_CLASSIFICATION	1.2121456101698773E-9	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.999997680393302	WITHOUT_CLASSIFICATION	2.319606697976421E-6	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.999999938751122	WITHOUT_CLASSIFICATION	6.124887796982787E-8	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999999933271595	WITHOUT_CLASSIFICATION	6.672840496151597E-9	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999993790081553	WITHOUT_CLASSIFICATION	6.209918446576439E-7	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9999784194572716	WITHOUT_CLASSIFICATION	2.1580542728454134E-5	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999935890178736	WITHOUT_CLASSIFICATION	6.410982126404563E-6	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999974694668066	WITHOUT_CLASSIFICATION	2.53053319347448E-6	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9999999571528497	WITHOUT_CLASSIFICATION	4.284715025209616E-8	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.999995889016536	WITHOUT_CLASSIFICATION	4.11098346400323E-6	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999986146673606	WITHOUT_CLASSIFICATION	1.3853326394193351E-6	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999975144627886	WITHOUT_CLASSIFICATION	2.4855372113487537E-6	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999994398693423	WITHOUT_CLASSIFICATION	5.60130657719932E-7	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999969496357	WITHOUT_CLASSIFICATION	3.05036435928407E-9	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999996175917191	WITHOUT_CLASSIFICATION	3.824082809168062E-7	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999992710249566	WITHOUT_CLASSIFICATION	7.289750434668992E-7	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.999999290157916	WITHOUT_CLASSIFICATION	7.098420839768127E-7	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999999999929734	WITHOUT_CLASSIFICATION	7.026635968397429E-12	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999168166612	WITHOUT_CLASSIFICATION	8.318333869750137E-8	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.6745709921504384	IMPLEMENTATION	0.32542900784956175	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999998415231747	WITHOUT_CLASSIFICATION	1.58476825235164E-7	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999997935673401	WITHOUT_CLASSIFICATION	2.0643265987615607E-7	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999967269006421	WITHOUT_CLASSIFICATION	3.273099357992435E-6	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999998274264252	WITHOUT_CLASSIFICATION	1.725735747183547E-7	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999940727625185	WITHOUT_CLASSIFICATION	5.9272374815648165E-6	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9999999457434577	WITHOUT_CLASSIFICATION	5.425654214533105E-8	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999981864731142	WITHOUT_CLASSIFICATION	1.813526885658541E-6	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999999987991858	WITHOUT_CLASSIFICATION	1.2008142898730127E-9	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999999992594357	WITHOUT_CLASSIFICATION	7.405642010148493E-10	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999999944565522	WITHOUT_CLASSIFICATION	5.543447816711133E-9	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999999884289694	WITHOUT_CLASSIFICATION	1.1571030611224061E-8	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999999991065427	WITHOUT_CLASSIFICATION	8.934573604343483E-10	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999948019079	WITHOUT_CLASSIFICATION	5.1980919790234714E-9	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999948019079	WITHOUT_CLASSIFICATION	5.1980919790234714E-9	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999999637907518	WITHOUT_CLASSIFICATION	3.620924817558762E-8	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999968755032618	WITHOUT_CLASSIFICATION	3.1244967383136742E-6	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.999999999771501	WITHOUT_CLASSIFICATION	2.2849906960531365E-10	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9999993289610161	WITHOUT_CLASSIFICATION	6.710389839403667E-7	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9999994726730436	WITHOUT_CLASSIFICATION	5.273269563616823E-7	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999998433891197	WITHOUT_CLASSIFICATION	1.5661088032496044E-7	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999966798233938	WITHOUT_CLASSIFICATION	3.320176606347535E-6	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999984563668333	WITHOUT_CLASSIFICATION	1.5436331667410312E-6	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999999835536295	WITHOUT_CLASSIFICATION	1.6446370531810247E-8	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9999994748729514	WITHOUT_CLASSIFICATION	5.251270486051714E-7	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999999957067934	WITHOUT_CLASSIFICATION	4.293206664401269E-9	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999870952424608	WITHOUT_CLASSIFICATION	1.2904757539111273E-5	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999824487668724	WITHOUT_CLASSIFICATION	1.755123312768928E-5	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999998138320993	WITHOUT_CLASSIFICATION	1.8616790059464046E-7	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999993973894397	WITHOUT_CLASSIFICATION	6.026105602387409E-7	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999999899928185	WITHOUT_CLASSIFICATION	1.0007181601760361E-8	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999995594662969	WITHOUT_CLASSIFICATION	4.405337031495384E-7	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999998058965442	WITHOUT_CLASSIFICATION	1.9410345576795314E-7	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9951780931828119	WITHOUT_CLASSIFICATION	0.00482190681718811	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999961827945397	WITHOUT_CLASSIFICATION	3.817205460266179E-6	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999999955256214	WITHOUT_CLASSIFICATION	4.474378732113053E-9	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999999631471097	WITHOUT_CLASSIFICATION	3.6852890217891315E-8	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999876356571346	WITHOUT_CLASSIFICATION	1.2364342865429139E-5	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999983132528032	WITHOUT_CLASSIFICATION	1.6867471967673561E-6	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999909290826294	WITHOUT_CLASSIFICATION	9.070917370595842E-6	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999548753113762	WITHOUT_CLASSIFICATION	4.512468862385258E-5	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999998417651	WITHOUT_CLASSIFICATION	1.5823489527440106E-10	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999999990592512	WITHOUT_CLASSIFICATION	9.407487758270846E-10	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9999994049376586	WITHOUT_CLASSIFICATION	5.950623413919802E-7	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999982829676651	WITHOUT_CLASSIFICATION	1.7170323349300483E-6	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999999941819501	WITHOUT_CLASSIFICATION	5.81804989665179E-8	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999800993556611	WITHOUT_CLASSIFICATION	1.990064433880892E-5	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999999766203399	WITHOUT_CLASSIFICATION	2.3379660144243112E-8	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999999686956174	WITHOUT_CLASSIFICATION	3.130438259053025E-8	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999998101088463	WITHOUT_CLASSIFICATION	1.8989115367244761E-7	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999999931146157	WITHOUT_CLASSIFICATION	6.8853843237023445E-9	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999998809528967	WITHOUT_CLASSIFICATION	1.1904710322437553E-7	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9999999632307416	WITHOUT_CLASSIFICATION	3.6769258403111516E-8	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9999914169713233	WITHOUT_CLASSIFICATION	8.583028676698852E-6	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999999613767564	WITHOUT_CLASSIFICATION	3.862324359361123E-8	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999981561376181	WITHOUT_CLASSIFICATION	1.8438623818645596E-6	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999998791644451	WITHOUT_CLASSIFICATION	1.2083555495951504E-7	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999998791644451	WITHOUT_CLASSIFICATION	1.2083555495951504E-7	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999996541196889	WITHOUT_CLASSIFICATION	3.4588031106567733E-7	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999999901977359	WITHOUT_CLASSIFICATION	9.802264190453087E-9	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.999999649991943	WITHOUT_CLASSIFICATION	3.500080568702024E-7	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999859328529414	WITHOUT_CLASSIFICATION	1.4067147058646342E-5	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999998711458474	WITHOUT_CLASSIFICATION	1.2885415252635114E-7	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999999999899567	WITHOUT_CLASSIFICATION	1.0043384985898659E-11	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999422939	WITHOUT_CLASSIFICATION	5.7706101785098237E-11	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999998661022639	WITHOUT_CLASSIFICATION	1.3389773602776772E-7	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999999944213482	WITHOUT_CLASSIFICATION	5.578651761929487E-9	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999994680231473	WITHOUT_CLASSIFICATION	5.319768526909071E-7	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999999981266224	WITHOUT_CLASSIFICATION	1.8733775499418753E-9	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.999999391263468	WITHOUT_CLASSIFICATION	6.08736531965461E-7	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999977268860923	WITHOUT_CLASSIFICATION	2.2731139076511723E-6	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999759177645773	WITHOUT_CLASSIFICATION	2.4082235422725637E-5	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999999839065364	WITHOUT_CLASSIFICATION	1.609346355908658E-8	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9929431670454643	WITHOUT_CLASSIFICATION	0.007056832954535646	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999993047821457	WITHOUT_CLASSIFICATION	6.952178542985884E-7	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.999999995708969	WITHOUT_CLASSIFICATION	4.291031013275488E-9	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999999641864848	WITHOUT_CLASSIFICATION	3.5813515191922545E-8	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9949729080474631	WITHOUT_CLASSIFICATION	0.0050270919525368905	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999998432647058	WITHOUT_CLASSIFICATION	1.5673529427793252E-7	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999985275223175	WITHOUT_CLASSIFICATION	1.472477682403044E-6	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999972793554	WITHOUT_CLASSIFICATION	2.720644574740498E-9	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999985054971304	WITHOUT_CLASSIFICATION	1.4945028695428539E-6	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999368828678	WITHOUT_CLASSIFICATION	6.311713217145492E-8	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999854354036026	WITHOUT_CLASSIFICATION	1.456459639742222E-5	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.999999999998874	WITHOUT_CLASSIFICATION	1.1260823983889296E-12	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999947235265054	WITHOUT_CLASSIFICATION	5.276473494509562E-6	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999948970454	WITHOUT_CLASSIFICATION	5.102954602150211E-9	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999998955503687	WITHOUT_CLASSIFICATION	1.0444963125760097E-7	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999947617614	WITHOUT_CLASSIFICATION	5.238238560099707E-9	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.999999992916659	WITHOUT_CLASSIFICATION	7.0833410283746524E-9	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999998955503687	WITHOUT_CLASSIFICATION	1.0444963125760097E-7	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999999689651211	WITHOUT_CLASSIFICATION	3.103487881477053E-8	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999999738742252	WITHOUT_CLASSIFICATION	2.6125774756522083E-8	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9509783889848046	WITHOUT_CLASSIFICATION	0.04902161101519539	IMPLEMENTATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.8588529324058883	IMPLEMENTATION	0.14114706759411164	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999998814440642	WITHOUT_CLASSIFICATION	1.1855593584940045E-7	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999997950167	WITHOUT_CLASSIFICATION	2.0498318932684496E-10	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999999995970656	WITHOUT_CLASSIFICATION	4.0293445849702786E-10	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.999999927956587	WITHOUT_CLASSIFICATION	7.204341303511928E-8	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.999999999657682	WITHOUT_CLASSIFICATION	3.423180060407504E-10	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999168166612	WITHOUT_CLASSIFICATION	8.318333869750137E-8	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999999480466418	WITHOUT_CLASSIFICATION	5.1953358146751195E-8	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999995028519	WITHOUT_CLASSIFICATION	4.971481433750173E-10	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999942644196991	WITHOUT_CLASSIFICATION	5.735580300985138E-6	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999998523468838	WITHOUT_CLASSIFICATION	1.4765311614036032E-7	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999980102991536	WITHOUT_CLASSIFICATION	1.9897008463634873E-6	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9999999734592092	WITHOUT_CLASSIFICATION	2.6540790738849203E-8	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9998289621376919	WITHOUT_CLASSIFICATION	1.7103786230803682E-4	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999974101968228	WITHOUT_CLASSIFICATION	2.589803177268511E-6	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999999986945488	WITHOUT_CLASSIFICATION	1.3054511595108044E-9	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999998332577036	WITHOUT_CLASSIFICATION	1.667422964506177E-7	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9999985315206639	WITHOUT_CLASSIFICATION	1.4684793360856734E-6	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9999970259666636	WITHOUT_CLASSIFICATION	2.974033336281762E-6	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9999955793083332	WITHOUT_CLASSIFICATION	4.420691666798738E-6	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999989101614972	WITHOUT_CLASSIFICATION	1.0898385027873176E-6	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9998495374419517	WITHOUT_CLASSIFICATION	1.5046255804836096E-4	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999996761532783	WITHOUT_CLASSIFICATION	3.238467216717061E-7	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999991860846755	WITHOUT_CLASSIFICATION	8.139153244334362E-7	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999999988466988	WITHOUT_CLASSIFICATION	1.153301240498089E-9	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.999999999886657	WITHOUT_CLASSIFICATION	1.1334290454539747E-10	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999999906537098	WITHOUT_CLASSIFICATION	9.346290116710494E-9	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999999906537098	WITHOUT_CLASSIFICATION	9.346290116710494E-9	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999976327569	WITHOUT_CLASSIFICATION	2.36724309989287E-9	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999992220908	WITHOUT_CLASSIFICATION	7.779092165263802E-10	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999567588957226	WITHOUT_CLASSIFICATION	4.324110427748296E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.616086456910256	WITHOUT_CLASSIFICATION	0.38391354308974396	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.616086456910256	WITHOUT_CLASSIFICATION	0.38391354308974396	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.616086456910256	WITHOUT_CLASSIFICATION	0.38391354308974396	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.616086456910256	WITHOUT_CLASSIFICATION	0.38391354308974396	IMPLEMENTATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999999423122341	WITHOUT_CLASSIFICATION	5.768776584202015E-8	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999878721391734	WITHOUT_CLASSIFICATION	1.2127860826617746E-5	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9999999665989596	WITHOUT_CLASSIFICATION	3.340104039780047E-8	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9802479119211934	WITHOUT_CLASSIFICATION	0.019752088078806653	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999802243836987	WITHOUT_CLASSIFICATION	1.9775616301237474E-5	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999997341282412	WITHOUT_CLASSIFICATION	2.6587175884521935E-7	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999971362351308	WITHOUT_CLASSIFICATION	2.863764869288406E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999971362351308	WITHOUT_CLASSIFICATION	2.863764869288406E-6	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999999928478551	WITHOUT_CLASSIFICATION	7.152144789905628E-9	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.999999813000075	WITHOUT_CLASSIFICATION	1.8699992488779517E-7	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999995595634937	WITHOUT_CLASSIFICATION	4.4043650622801044E-7	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999115190322353	WITHOUT_CLASSIFICATION	8.848096776473943E-5	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999979508485494	WITHOUT_CLASSIFICATION	2.0491514507203012E-6	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999998235901596	WITHOUT_CLASSIFICATION	1.7640984041813393E-7	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.999999999403214	WITHOUT_CLASSIFICATION	5.967859549389898E-10	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999995989174534	WITHOUT_CLASSIFICATION	4.0108254654853045E-7	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999997850200102	WITHOUT_CLASSIFICATION	2.1497998979090333E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.999997850200102	WITHOUT_CLASSIFICATION	2.1497998979090333E-6	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.999999992916659	WITHOUT_CLASSIFICATION	7.0833410283746524E-9	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9999993638121161	WITHOUT_CLASSIFICATION	6.361878839392647E-7	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.99999946249186	WITHOUT_CLASSIFICATION	5.375081399161749E-7	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999992774435725	WITHOUT_CLASSIFICATION	7.225564275392343E-7	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999999885559	WITHOUT_CLASSIFICATION	1.1443955675014835E-11	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9999995260991342	WITHOUT_CLASSIFICATION	4.739008657936888E-7	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999986774470697	WITHOUT_CLASSIFICATION	1.3225529303344639E-6	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.999997947639727	WITHOUT_CLASSIFICATION	2.0523602729528294E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999999213129347	WITHOUT_CLASSIFICATION	7.868706527312804E-8	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999999213129347	WITHOUT_CLASSIFICATION	7.868706527312804E-8	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999971720116881	WITHOUT_CLASSIFICATION	2.8279883119287686E-6	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.999999930818786	WITHOUT_CLASSIFICATION	6.918121405486073E-8	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999997922600903	WITHOUT_CLASSIFICATION	2.077399097953127E-7	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999985591635336	WITHOUT_CLASSIFICATION	1.4408364664166614E-6	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999932594939174	WITHOUT_CLASSIFICATION	6.740506082558006E-6	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9999991270440377	WITHOUT_CLASSIFICATION	8.72955962220762E-7	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9997837861323174	WITHOUT_CLASSIFICATION	2.1621386768250377E-4	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998622233353	WITHOUT_CLASSIFICATION	1.377766646699381E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998622233353	WITHOUT_CLASSIFICATION	1.377766646699381E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998622233353	WITHOUT_CLASSIFICATION	1.377766646699381E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998622233353	WITHOUT_CLASSIFICATION	1.377766646699381E-7	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999463516758	WITHOUT_CLASSIFICATION	5.364832417658416E-8	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999999749303	WITHOUT_CLASSIFICATION	2.506965882667993E-11	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999987811037174	WITHOUT_CLASSIFICATION	1.2188962825438578E-6	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999998539121426	WITHOUT_CLASSIFICATION	1.460878572355837E-7	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999999626170731	WITHOUT_CLASSIFICATION	3.738292690884342E-8	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9999997791656432	WITHOUT_CLASSIFICATION	2.2083435687426196E-7	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999764994394	WITHOUT_CLASSIFICATION	2.3500560583479246E-8	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999983109144	WITHOUT_CLASSIFICATION	1.6890857668547454E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999983109144	WITHOUT_CLASSIFICATION	1.6890857668547454E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999983109144	WITHOUT_CLASSIFICATION	1.6890857668547454E-9	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999999697903789	WITHOUT_CLASSIFICATION	3.02096211866053E-8	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999998997952975	WITHOUT_CLASSIFICATION	1.0020470258432412E-7	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999999919527213	WITHOUT_CLASSIFICATION	8.047278692183763E-8	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.999999919527213	WITHOUT_CLASSIFICATION	8.047278692183763E-8	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999988395078733	WITHOUT_CLASSIFICATION	1.1604921267909943E-6	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9998761343075202	WITHOUT_CLASSIFICATION	1.2386569247969966E-4	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999951672956731	WITHOUT_CLASSIFICATION	4.832704326932223E-6	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.999999768287738	WITHOUT_CLASSIFICATION	2.3171226195550745E-7	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999999339013	WITHOUT_CLASSIFICATION	6.609867340876421E-11	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999997344999846	WITHOUT_CLASSIFICATION	2.65500015403939E-7	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999975131083	WITHOUT_CLASSIFICATION	2.486891822615712E-9	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999975131083	WITHOUT_CLASSIFICATION	2.486891822615712E-9	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999972635821	WITHOUT_CLASSIFICATION	2.73641790759207E-9	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999968178046	WITHOUT_CLASSIFICATION	3.1821953467886013E-9	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999996836701134	WITHOUT_CLASSIFICATION	3.1632988662642696E-7	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999990334199294	WITHOUT_CLASSIFICATION	9.665800707133022E-7	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9895797935553713	WITHOUT_CLASSIFICATION	0.010420206444628757	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.999999953695054	WITHOUT_CLASSIFICATION	4.630494600764797E-8	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9999997350989299	WITHOUT_CLASSIFICATION	2.6490107005437556E-7	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999035667613593	WITHOUT_CLASSIFICATION	9.64332386407899E-5	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999999703855469	WITHOUT_CLASSIFICATION	2.961445317823553E-8	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999998660960684	WITHOUT_CLASSIFICATION	1.3390393153730682E-7	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999999680712107	WITHOUT_CLASSIFICATION	3.1928789216535294E-8	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999878559894	WITHOUT_CLASSIFICATION	1.2144010613168842E-8	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.999950238570198	WITHOUT_CLASSIFICATION	4.9761429801923056E-5	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999917577549371	WITHOUT_CLASSIFICATION	8.242245062873797E-6	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999997825049762	WITHOUT_CLASSIFICATION	2.1749502376353763E-7	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999823472741177	WITHOUT_CLASSIFICATION	1.7652725882266973E-5	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999681823206242	WITHOUT_CLASSIFICATION	3.181767937571155E-5	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999999878465448	WITHOUT_CLASSIFICATION	1.2153455199772561E-8	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.999987273677023	WITHOUT_CLASSIFICATION	1.2726322977061584E-5	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999999462237422	WITHOUT_CLASSIFICATION	5.377625770275188E-8	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999952642156	WITHOUT_CLASSIFICATION	4.735784419018224E-9	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9955372775804868	WITHOUT_CLASSIFICATION	0.004462722419513203	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999605050684043	WITHOUT_CLASSIFICATION	3.949493159565835E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999605050684043	WITHOUT_CLASSIFICATION	3.949493159565835E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999605050684043	WITHOUT_CLASSIFICATION	3.949493159565835E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999605050684043	WITHOUT_CLASSIFICATION	3.949493159565835E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999605050684043	WITHOUT_CLASSIFICATION	3.949493159565835E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999605050684043	WITHOUT_CLASSIFICATION	3.949493159565835E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999605050684043	WITHOUT_CLASSIFICATION	3.949493159565835E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999605050684043	WITHOUT_CLASSIFICATION	3.949493159565835E-5	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999998574017905	WITHOUT_CLASSIFICATION	1.4259820943915988E-7	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.999999660244955	WITHOUT_CLASSIFICATION	3.3975504501550795E-7	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999998608497456	WITHOUT_CLASSIFICATION	1.391502544545722E-7	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999998127191362	WITHOUT_CLASSIFICATION	1.8728086388178793E-7	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999422939	WITHOUT_CLASSIFICATION	5.7706101785098237E-11	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999422939	WITHOUT_CLASSIFICATION	5.7706101785098237E-11	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999999349498606	WITHOUT_CLASSIFICATION	6.50501393950646E-8	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999999366299418	WITHOUT_CLASSIFICATION	6.337005810377239E-8	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999999981690155	WITHOUT_CLASSIFICATION	1.8309844864251805E-9	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999999947307587	WITHOUT_CLASSIFICATION	5.2692412820921054E-9	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999980480284766	WITHOUT_CLASSIFICATION	1.9519715233408302E-6	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9999995559571923	WITHOUT_CLASSIFICATION	4.44042807739814E-7	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9999996543603773	WITHOUT_CLASSIFICATION	3.456396226716381E-7	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9998298202409878	WITHOUT_CLASSIFICATION	1.7017975901220466E-4	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999887752472443	WITHOUT_CLASSIFICATION	1.1224752755788967E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997937121683	WITHOUT_CLASSIFICATION	2.0628783171092867E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997937121683	WITHOUT_CLASSIFICATION	2.0628783171092867E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997937121683	WITHOUT_CLASSIFICATION	2.0628783171092867E-7	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999889148904546	WITHOUT_CLASSIFICATION	1.108510954539065E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999889148904546	WITHOUT_CLASSIFICATION	1.108510954539065E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999889148904546	WITHOUT_CLASSIFICATION	1.108510954539065E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999889148904546	WITHOUT_CLASSIFICATION	1.108510954539065E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999889148904546	WITHOUT_CLASSIFICATION	1.108510954539065E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999889148904546	WITHOUT_CLASSIFICATION	1.108510954539065E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999889148904546	WITHOUT_CLASSIFICATION	1.108510954539065E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999889148904546	WITHOUT_CLASSIFICATION	1.108510954539065E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999889148904546	WITHOUT_CLASSIFICATION	1.108510954539065E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999931455679	WITHOUT_CLASSIFICATION	6.854432104203591E-9	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999668886134565	WITHOUT_CLASSIFICATION	3.3111386543489574E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999999186296445	WITHOUT_CLASSIFICATION	8.137035543301612E-8	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999995389283843	WITHOUT_CLASSIFICATION	4.6107161570403565E-7	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999889148904546	WITHOUT_CLASSIFICATION	1.108510954539065E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999889148904546	WITHOUT_CLASSIFICATION	1.108510954539065E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999889148904546	WITHOUT_CLASSIFICATION	1.108510954539065E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999197196171	WITHOUT_CLASSIFICATION	8.028038287968873E-8	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999999495808652	WITHOUT_CLASSIFICATION	5.041913464954379E-8	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999940951091787	WITHOUT_CLASSIFICATION	5.9048908213607145E-6	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9996790646454697	WITHOUT_CLASSIFICATION	3.209353545302865E-4	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9996790646454697	WITHOUT_CLASSIFICATION	3.209353545302865E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999996644285221	WITHOUT_CLASSIFICATION	3.355714779797471E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999280852194371	WITHOUT_CLASSIFICATION	7.19147805628776E-5	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999999890450086	WITHOUT_CLASSIFICATION	1.0954991326543902E-8	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999999931377472	WITHOUT_CLASSIFICATION	6.862252851737554E-9	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999595598169916	WITHOUT_CLASSIFICATION	4.0440183008390816E-5	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999595598169916	WITHOUT_CLASSIFICATION	4.0440183008390816E-5	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.999994045009121	WITHOUT_CLASSIFICATION	5.954990878940673E-6	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999971995706	WITHOUT_CLASSIFICATION	2.8004293765209343E-9	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999973707640953	WITHOUT_CLASSIFICATION	2.629235904659814E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999954470186272	WITHOUT_CLASSIFICATION	4.552981372759094E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999954470186272	WITHOUT_CLASSIFICATION	4.552981372759094E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999954470186272	WITHOUT_CLASSIFICATION	4.552981372759094E-6	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999993543868209	WITHOUT_CLASSIFICATION	6.456131791952287E-7	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999886295216	WITHOUT_CLASSIFICATION	1.137047845911683E-8	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999886295216	WITHOUT_CLASSIFICATION	1.137047845911683E-8	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999996093725738	WITHOUT_CLASSIFICATION	3.9062742615056337E-7	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999996093725738	WITHOUT_CLASSIFICATION	3.9062742615056337E-7	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999998728068931	WITHOUT_CLASSIFICATION	1.271931069348189E-7	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999968390732272	WITHOUT_CLASSIFICATION	3.1609267727584814E-6	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999998264284579	WITHOUT_CLASSIFICATION	1.7357154214968586E-7	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.999999610841809	WITHOUT_CLASSIFICATION	3.891581910329111E-7	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999996865381754	WITHOUT_CLASSIFICATION	3.134618246439838E-7	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999999396590097	WITHOUT_CLASSIFICATION	6.034099037237706E-8	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999957003195525	WITHOUT_CLASSIFICATION	4.299680447500303E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999994075259204	WITHOUT_CLASSIFICATION	5.924740795836382E-7	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999999886620475	WITHOUT_CLASSIFICATION	1.1337952510820427E-8	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999999923503	WITHOUT_CLASSIFICATION	7.649668144378946E-12	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9345178777165007	WITHOUT_CLASSIFICATION	0.06548212228349924	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999977666244412	WITHOUT_CLASSIFICATION	2.233375558736934E-6	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999996507848041	WITHOUT_CLASSIFICATION	3.4921519592709354E-7	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999997305727558	WITHOUT_CLASSIFICATION	2.694272441657096E-7	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999940219350898	WITHOUT_CLASSIFICATION	5.978064910226526E-6	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999999994739303	WITHOUT_CLASSIFICATION	5.260697095360304E-10	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999991511542096	WITHOUT_CLASSIFICATION	8.488457904303038E-7	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999622685845	WITHOUT_CLASSIFICATION	3.773141557441995E-8	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999999988784114	WITHOUT_CLASSIFICATION	1.121588590540473E-9	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999995122179393	WITHOUT_CLASSIFICATION	4.877820607788062E-7	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999995028519	WITHOUT_CLASSIFICATION	4.971481433750173E-10	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999927765002048	WITHOUT_CLASSIFICATION	7.223499795312014E-6	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.999999981093807	WITHOUT_CLASSIFICATION	1.8906193018602937E-8	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999973278873612	WITHOUT_CLASSIFICATION	2.672112638948829E-6	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999995519593806	WITHOUT_CLASSIFICATION	4.4804061934765795E-7	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999998705210802	WITHOUT_CLASSIFICATION	1.2947891976858845E-7	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999997409404162	WITHOUT_CLASSIFICATION	2.590595837295954E-7	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999999993420958	WITHOUT_CLASSIFICATION	6.579042473811768E-10	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999999343370224	WITHOUT_CLASSIFICATION	6.566297767795425E-8	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999989187589975	WITHOUT_CLASSIFICATION	1.0812410025414866E-6	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999992126276172	WITHOUT_CLASSIFICATION	7.873723829156033E-7	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999999827959074	WITHOUT_CLASSIFICATION	1.720409257810381E-8	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999997666219391	WITHOUT_CLASSIFICATION	2.3337806092897345E-7	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999999973712801	WITHOUT_CLASSIFICATION	2.62871985308021E-9	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.999998065644206	WITHOUT_CLASSIFICATION	1.9343557938959937E-6	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999999995790202	WITHOUT_CLASSIFICATION	4.2097978035460946E-10	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999999833333802	WITHOUT_CLASSIFICATION	1.6666619755775256E-8	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999999671157733	WITHOUT_CLASSIFICATION	3.2884226673645115E-8	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999999903762041	WITHOUT_CLASSIFICATION	9.623795954994966E-9	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999976244592	WITHOUT_CLASSIFICATION	2.375540733500636E-9	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999999773241278	WITHOUT_CLASSIFICATION	2.2675872182095818E-8	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999999950948676	WITHOUT_CLASSIFICATION	4.90513245153929E-9	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999999954845437	WITHOUT_CLASSIFICATION	4.5154562800147945E-9	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999999983174628	WITHOUT_CLASSIFICATION	1.6825372612614908E-9	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999999317749096	WITHOUT_CLASSIFICATION	6.82250903437015E-8	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999957057391855	WITHOUT_CLASSIFICATION	4.2942608144466515E-6	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9999999603104918	WITHOUT_CLASSIFICATION	3.968950834337676E-8	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999994819724	WITHOUT_CLASSIFICATION	5.180276245764375E-10	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999926978981	WITHOUT_CLASSIFICATION	7.3021019769282826E-9	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999997409367848	WITHOUT_CLASSIFICATION	2.590632151993918E-7	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999998311331383	WITHOUT_CLASSIFICATION	1.688668617164907E-7	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999922133689146	WITHOUT_CLASSIFICATION	7.786631085379626E-6	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999922133689146	WITHOUT_CLASSIFICATION	7.786631085379626E-6	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999996981886	WITHOUT_CLASSIFICATION	3.01811345066774E-10	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999996981886	WITHOUT_CLASSIFICATION	3.01811345066774E-10	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9996604758557216	WITHOUT_CLASSIFICATION	3.3952414427835826E-4	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9996604758557216	WITHOUT_CLASSIFICATION	3.3952414427835826E-4	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999995677208493	WITHOUT_CLASSIFICATION	4.3227915075139725E-7	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999995677208493	WITHOUT_CLASSIFICATION	4.3227915075139725E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999299204922	WITHOUT_CLASSIFICATION	7.007950774759824E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999299204922	WITHOUT_CLASSIFICATION	7.007950774759824E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999299204922	WITHOUT_CLASSIFICATION	7.007950774759824E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999299204922	WITHOUT_CLASSIFICATION	7.007950774759824E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999299204922	WITHOUT_CLASSIFICATION	7.007950774759824E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999299204922	WITHOUT_CLASSIFICATION	7.007950774759824E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999299204922	WITHOUT_CLASSIFICATION	7.007950774759824E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999299204922	WITHOUT_CLASSIFICATION	7.007950774759824E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999299204922	WITHOUT_CLASSIFICATION	7.007950774759824E-8	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999467258075	WITHOUT_CLASSIFICATION	5.32741923950424E-8	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999467258075	WITHOUT_CLASSIFICATION	5.32741923950424E-8	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999467258075	WITHOUT_CLASSIFICATION	5.32741923950424E-8	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.999997617086106	WITHOUT_CLASSIFICATION	2.382913893971967E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992881598528	WITHOUT_CLASSIFICATION	7.118401472842561E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992881598528	WITHOUT_CLASSIFICATION	7.118401472842561E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992881598528	WITHOUT_CLASSIFICATION	7.118401472842561E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999451568068	WITHOUT_CLASSIFICATION	5.484319309688227E-8	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999451568068	WITHOUT_CLASSIFICATION	5.484319309688227E-8	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999451568068	WITHOUT_CLASSIFICATION	5.484319309688227E-8	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999994652354113	WITHOUT_CLASSIFICATION	5.347645886844851E-7	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9999986842790932	WITHOUT_CLASSIFICATION	1.315720906811159E-6	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999687027117717	WITHOUT_CLASSIFICATION	3.129728822822959E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999158231248452	WITHOUT_CLASSIFICATION	8.417687515488274E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999158231248452	WITHOUT_CLASSIFICATION	8.417687515488274E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999158231248452	WITHOUT_CLASSIFICATION	8.417687515488274E-5	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999999865479102	WITHOUT_CLASSIFICATION	1.3452089780630912E-8	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999997698313667	WITHOUT_CLASSIFICATION	2.301686332863149E-7	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999997698313667	WITHOUT_CLASSIFICATION	2.301686332863149E-7	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999987099338499	WITHOUT_CLASSIFICATION	1.2900661500158236E-6	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999996548418794	WITHOUT_CLASSIFICATION	3.45158120611818E-7	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999996548418794	WITHOUT_CLASSIFICATION	3.45158120611818E-7	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9833445330237439	IMPLEMENTATION	0.016655466976256115	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.8385087964367585	WITHOUT_CLASSIFICATION	0.16149120356324148	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999992937509454	WITHOUT_CLASSIFICATION	7.062490545355801E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999917457439	WITHOUT_CLASSIFICATION	8.254256091676124E-9	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999917457439	WITHOUT_CLASSIFICATION	8.254256091676124E-9	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999994543126003	WITHOUT_CLASSIFICATION	5.456873996640712E-7	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.999999999948116	WITHOUT_CLASSIFICATION	5.1884083753768234E-11	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999994788964723	WITHOUT_CLASSIFICATION	5.21103527765881E-7	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999974519207965	WITHOUT_CLASSIFICATION	2.548079203473264E-6	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999980847707649	WITHOUT_CLASSIFICATION	1.9152292350529922E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999917457439	WITHOUT_CLASSIFICATION	8.254256091676124E-9	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999917457439	WITHOUT_CLASSIFICATION	8.254256091676124E-9	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999917457439	WITHOUT_CLASSIFICATION	8.254256091676124E-9	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999917457439	WITHOUT_CLASSIFICATION	8.254256091676124E-9	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999917457439	WITHOUT_CLASSIFICATION	8.254256091676124E-9	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999988384177758	WITHOUT_CLASSIFICATION	1.1615822241745349E-6	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999961919328568	WITHOUT_CLASSIFICATION	3.808067143186277E-6	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999981331781	WITHOUT_CLASSIFICATION	1.8668218657573474E-9	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999998846749567	WITHOUT_CLASSIFICATION	1.1532504331622107E-7	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999999998421947	WITHOUT_CLASSIFICATION	1.578052955914393E-10	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297352416309	WITHOUT_CLASSIFICATION	0.0019702647583692344	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999999997398138	WITHOUT_CLASSIFICATION	2.6018617441082813E-10	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999997687543168	WITHOUT_CLASSIFICATION	2.3124568307812737E-7	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999922563587	WITHOUT_CLASSIFICATION	7.74364131498355E-9	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999999372270292	WITHOUT_CLASSIFICATION	6.277297086905175E-8	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.999999992195494	WITHOUT_CLASSIFICATION	7.8045060678592E-9	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999985275223175	WITHOUT_CLASSIFICATION	1.472477682403044E-6	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999999843582486	WITHOUT_CLASSIFICATION	1.564175146175118E-8	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999986956139202	WITHOUT_CLASSIFICATION	1.3043860797964979E-6	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999998077721466	WITHOUT_CLASSIFICATION	1.9222785346030747E-7	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9930331470389674	WITHOUT_CLASSIFICATION	0.006966852961032574	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999983660268311	WITHOUT_CLASSIFICATION	1.6339731688135985E-6	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999921434005205	WITHOUT_CLASSIFICATION	7.856599479555675E-6	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999999262309734	WITHOUT_CLASSIFICATION	7.376902659498501E-8	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999944994308	WITHOUT_CLASSIFICATION	5.5005693117040655E-9	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999999921110442	WITHOUT_CLASSIFICATION	7.888955894111003E-9	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999999927484715	WITHOUT_CLASSIFICATION	7.251528480946142E-9	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999994680231473	WITHOUT_CLASSIFICATION	5.319768526909071E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999998356161168	WITHOUT_CLASSIFICATION	1.6438388313560317E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999998356161168	WITHOUT_CLASSIFICATION	1.6438388313560317E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999998356161168	WITHOUT_CLASSIFICATION	1.6438388313560317E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999998356161168	WITHOUT_CLASSIFICATION	1.6438388313560317E-7	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999998937635669	WITHOUT_CLASSIFICATION	1.0623643309327573E-7	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999939088471739	WITHOUT_CLASSIFICATION	6.091152826083503E-6	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999999884325219	WITHOUT_CLASSIFICATION	1.156747807037366E-8	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999999884325219	WITHOUT_CLASSIFICATION	1.156747807037366E-8	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999876364963	WITHOUT_CLASSIFICATION	1.2363503633240681E-8	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.999999996866829	WITHOUT_CLASSIFICATION	3.133170903082635E-9	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999973214979	WITHOUT_CLASSIFICATION	2.6785021357071392E-9	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999979025966	WITHOUT_CLASSIFICATION	2.097403238305542E-9	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999999932285522	WITHOUT_CLASSIFICATION	6.771447762660192E-9	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999886616824112	WITHOUT_CLASSIFICATION	1.13383175888285E-5	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999924078738276	WITHOUT_CLASSIFICATION	7.5921261725207256E-6	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999997380701083	WITHOUT_CLASSIFICATION	2.619298916877394E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999997380701083	WITHOUT_CLASSIFICATION	2.619298916877394E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999997380701083	WITHOUT_CLASSIFICATION	2.619298916877394E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999997380701083	WITHOUT_CLASSIFICATION	2.619298916877394E-7	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999998977300762	WITHOUT_CLASSIFICATION	1.0226992370540298E-7	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999999999921001	WITHOUT_CLASSIFICATION	7.899901841109037E-11	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999999999921001	WITHOUT_CLASSIFICATION	7.899901841109037E-11	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.999999999921001	WITHOUT_CLASSIFICATION	7.899901841109037E-11	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999999620847854	WITHOUT_CLASSIFICATION	3.791521462900971E-8	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999999849178396	WITHOUT_CLASSIFICATION	1.5082160415390305E-8	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.999979078241345	WITHOUT_CLASSIFICATION	2.09217586550418E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.616086456910256	WITHOUT_CLASSIFICATION	0.38391354308974396	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.616086456910256	WITHOUT_CLASSIFICATION	0.38391354308974396	IMPLEMENTATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999597663772	WITHOUT_CLASSIFICATION	4.023362275645652E-8	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999999693039822	WITHOUT_CLASSIFICATION	3.069601782979554E-8	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999994783825412	WITHOUT_CLASSIFICATION	5.216174587813199E-7	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999994783825412	WITHOUT_CLASSIFICATION	5.216174587813199E-7	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999994704622466	WITHOUT_CLASSIFICATION	5.295377534530916E-7	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999994704622466	WITHOUT_CLASSIFICATION	5.295377534530916E-7	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999999993158256	WITHOUT_CLASSIFICATION	6.841744245149584E-10	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9975380962327846	WITHOUT_CLASSIFICATION	0.0024619037672154267	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999999987135355	WITHOUT_CLASSIFICATION	1.286464512653788E-9	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999996084679064	WITHOUT_CLASSIFICATION	3.9153209356830287E-7	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999484630704	WITHOUT_CLASSIFICATION	5.1536929629409484E-8	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999996889208062	WITHOUT_CLASSIFICATION	3.110791938802366E-7	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999958204441	WITHOUT_CLASSIFICATION	4.1795559129527765E-9	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999999981213147	WITHOUT_CLASSIFICATION	1.8786852537663585E-9	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999999987414782	WITHOUT_CLASSIFICATION	1.2585217848193286E-9	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999843167287	WITHOUT_CLASSIFICATION	1.5683271297937658E-8	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999843167287	WITHOUT_CLASSIFICATION	1.5683271297937658E-8	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999994082315947	WITHOUT_CLASSIFICATION	5.917684052706078E-7	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999994082315947	WITHOUT_CLASSIFICATION	5.917684052706078E-7	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999996280983497	WITHOUT_CLASSIFICATION	3.7190165025999644E-7	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999992959704864	WITHOUT_CLASSIFICATION	7.040295134968013E-7	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999990304782567	WITHOUT_CLASSIFICATION	9.695217433447936E-7	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998347959419	WITHOUT_CLASSIFICATION	1.652040580356124E-7	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998347959419	WITHOUT_CLASSIFICATION	1.652040580356124E-7	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998347959419	WITHOUT_CLASSIFICATION	1.652040580356124E-7	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.999999138895189	WITHOUT_CLASSIFICATION	8.611048111464456E-7	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9999994904785162	WITHOUT_CLASSIFICATION	5.095214837007001E-7	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9999994103074905	WITHOUT_CLASSIFICATION	5.896925094847005E-7	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9999998787583679	WITHOUT_CLASSIFICATION	1.212416320614549E-7	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9999996082598896	WITHOUT_CLASSIFICATION	3.9174011043151364E-7	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999996729079372	WITHOUT_CLASSIFICATION	3.2709206271021046E-7	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9999987948625851	WITHOUT_CLASSIFICATION	1.2051374148651308E-6	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9999994789546716	WITHOUT_CLASSIFICATION	5.210453284324227E-7	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999965130204608	WITHOUT_CLASSIFICATION	3.486979539358057E-6	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999908339076962	WITHOUT_CLASSIFICATION	9.166092303803544E-6	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.999881388936764	WITHOUT_CLASSIFICATION	1.186110632360561E-4	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999999783371806	WITHOUT_CLASSIFICATION	2.166281939959964E-8	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999999994624869	WITHOUT_CLASSIFICATION	5.375132255995823E-10	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.616086456910256	WITHOUT_CLASSIFICATION	0.38391354308974396	IMPLEMENTATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999995230071111	WITHOUT_CLASSIFICATION	4.76992888893273E-7	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999987922041461	WITHOUT_CLASSIFICATION	1.2077958538674996E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999999906537098	WITHOUT_CLASSIFICATION	9.346290116710494E-9	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999984250701405	WITHOUT_CLASSIFICATION	1.5749298594588915E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999984250701405	WITHOUT_CLASSIFICATION	1.5749298594588915E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999984250701405	WITHOUT_CLASSIFICATION	1.5749298594588915E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999984250701405	WITHOUT_CLASSIFICATION	1.5749298594588915E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999984250701405	WITHOUT_CLASSIFICATION	1.5749298594588915E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999993627165294	WITHOUT_CLASSIFICATION	6.372834704528549E-7	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999984250701405	WITHOUT_CLASSIFICATION	1.5749298594588915E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999984250701405	WITHOUT_CLASSIFICATION	1.5749298594588915E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999984250701405	WITHOUT_CLASSIFICATION	1.5749298594588915E-6	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999992803667151	WITHOUT_CLASSIFICATION	7.196332848781578E-7	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999888562750585	WITHOUT_CLASSIFICATION	1.1143724941488455E-5	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999999233053878	WITHOUT_CLASSIFICATION	7.669461225086877E-8	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999999910966608	WITHOUT_CLASSIFICATION	8.903339195548337E-9	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999999458645414	WITHOUT_CLASSIFICATION	5.4135458521238534E-8	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999995380346142	WITHOUT_CLASSIFICATION	4.61965385748454E-7	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.999999988977049	WITHOUT_CLASSIFICATION	1.1022950896171098E-8	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9999998373324779	WITHOUT_CLASSIFICATION	1.6266752225036687E-7	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999991990826527	WITHOUT_CLASSIFICATION	8.009173474186227E-7	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999991990826527	WITHOUT_CLASSIFICATION	8.009173474186227E-7	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.999999608650693	WITHOUT_CLASSIFICATION	3.9134930691695297E-7	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9999993153645804	WITHOUT_CLASSIFICATION	6.846354196184281E-7	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999982615430983	WITHOUT_CLASSIFICATION	1.7384569016617398E-6	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9999997136180323	WITHOUT_CLASSIFICATION	2.8638196766642915E-7	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999998334594925	WITHOUT_CLASSIFICATION	1.6654050750475376E-7	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9999995615994755	WITHOUT_CLASSIFICATION	4.3840052456850464E-7	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9999994644433424	WITHOUT_CLASSIFICATION	5.355566575493078E-7	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.999999420202572	WITHOUT_CLASSIFICATION	5.797974279506124E-7	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999994803958887	WITHOUT_CLASSIFICATION	5.196041111972633E-7	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9999997064040971	WITHOUT_CLASSIFICATION	2.935959029837076E-7	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9999995969045655	WITHOUT_CLASSIFICATION	4.0309543450433163E-7	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9999995190118799	WITHOUT_CLASSIFICATION	4.809881201478795E-7	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999992777681741	WITHOUT_CLASSIFICATION	7.222318259266117E-7	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999992943623554	WITHOUT_CLASSIFICATION	7.056376445750339E-7	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9999991791451486	WITHOUT_CLASSIFICATION	8.208548515311277E-7	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9999991517140265	WITHOUT_CLASSIFICATION	8.482859735547215E-7	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.999999112176937	WITHOUT_CLASSIFICATION	8.878230630542176E-7	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9999986243314317	WITHOUT_CLASSIFICATION	1.3756685682797086E-6	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9999995484394175	WITHOUT_CLASSIFICATION	4.5156058249143586E-7	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.9999997866198551	WITHOUT_CLASSIFICATION	2.133801447750138E-7	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9999998008171251	WITHOUT_CLASSIFICATION	1.991828747865E-7	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999997776603556	WITHOUT_CLASSIFICATION	2.2233964427911676E-7	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9999982774526194	WITHOUT_CLASSIFICATION	1.7225473806140965E-6	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9999994882899449	WITHOUT_CLASSIFICATION	5.11710055076838E-7	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9999995693076604	WITHOUT_CLASSIFICATION	4.3069233964527347E-7	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999993978602699	WITHOUT_CLASSIFICATION	6.021397301641018E-7	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9999994783251057	WITHOUT_CLASSIFICATION	5.216748942763561E-7	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9999993756298965	WITHOUT_CLASSIFICATION	6.24370103602188E-7	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999994947391313	WITHOUT_CLASSIFICATION	5.052608687470794E-7	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999996705130116	WITHOUT_CLASSIFICATION	3.294869883600405E-7	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.999999645113771	WITHOUT_CLASSIFICATION	3.548862289239945E-7	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999990209829579	WITHOUT_CLASSIFICATION	9.790170420214937E-7	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9999990218763067	WITHOUT_CLASSIFICATION	9.781236931962707E-7	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9999987558685669	WITHOUT_CLASSIFICATION	1.2441314330934873E-6	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.999999605061031	WITHOUT_CLASSIFICATION	3.949389690395354E-7	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.999999801678555	WITHOUT_CLASSIFICATION	1.9832144496454055E-7	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9999992298105775	WITHOUT_CLASSIFICATION	7.701894225229158E-7	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999986047916523	WITHOUT_CLASSIFICATION	1.3952083478198234E-6	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.9999991571262888	WITHOUT_CLASSIFICATION	8.428737112101598E-7	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9999993459857749	WITHOUT_CLASSIFICATION	6.540142251631712E-7	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9999995285472392	WITHOUT_CLASSIFICATION	4.714527608423611E-7	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.999999720345162	WITHOUT_CLASSIFICATION	2.7965483794450163E-7	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9999992695914138	WITHOUT_CLASSIFICATION	7.304085862019765E-7	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9999987451450757	WITHOUT_CLASSIFICATION	1.2548549243028105E-6	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9999983771962613	WITHOUT_CLASSIFICATION	1.6228037387122058E-6	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.999998077418084	WITHOUT_CLASSIFICATION	1.9225819161295084E-6	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999987615537358	WITHOUT_CLASSIFICATION	1.238446264211239E-6	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9999990146052934	WITHOUT_CLASSIFICATION	9.853947066178925E-7	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9999994056040016	WITHOUT_CLASSIFICATION	5.943959985352689E-7	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999990275763947	WITHOUT_CLASSIFICATION	9.724236052897558E-7	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9999993694716071	WITHOUT_CLASSIFICATION	6.305283929915648E-7	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9999995119247639	WITHOUT_CLASSIFICATION	4.880752360930485E-7	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.999999380926743	WITHOUT_CLASSIFICATION	6.190732569471403E-7	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.999999230545281	WITHOUT_CLASSIFICATION	7.694547190916017E-7	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.999999230545281	WITHOUT_CLASSIFICATION	7.694547190916017E-7	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999987101894873	WITHOUT_CLASSIFICATION	1.2898105127981995E-6	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9999996521219843	WITHOUT_CLASSIFICATION	3.478780157284257E-7	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9999989384306207	WITHOUT_CLASSIFICATION	1.0615693793027142E-6	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9999995276615199	WITHOUT_CLASSIFICATION	4.72338480111501E-7	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9999966539797547	WITHOUT_CLASSIFICATION	3.3460202453241717E-6	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999992996635974	WITHOUT_CLASSIFICATION	7.003364026827476E-7	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.999998909009895	WITHOUT_CLASSIFICATION	1.0909901049984593E-6	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9999990521818309	WITHOUT_CLASSIFICATION	9.478181690661552E-7	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999995642134556	WITHOUT_CLASSIFICATION	4.3578654429960426E-7	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9999985386523126	WITHOUT_CLASSIFICATION	1.4613476874436957E-6	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999935084087369	WITHOUT_CLASSIFICATION	6.491591263173973E-6	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999935084087369	WITHOUT_CLASSIFICATION	6.491591263173973E-6	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999994242618646	WITHOUT_CLASSIFICATION	5.757381354625396E-7	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999964247038027	WITHOUT_CLASSIFICATION	3.5752961973486095E-6	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999760640520445	WITHOUT_CLASSIFICATION	2.3935947955465583E-5	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999998861439	WITHOUT_CLASSIFICATION	1.1385623721661261E-10	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999212671644	WITHOUT_CLASSIFICATION	7.87328356001364E-8	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999212671644	WITHOUT_CLASSIFICATION	7.87328356001364E-8	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999212671644	WITHOUT_CLASSIFICATION	7.87328356001364E-8	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999212671644	WITHOUT_CLASSIFICATION	7.87328356001364E-8	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.991609517960568	WITHOUT_CLASSIFICATION	0.008390482039431952	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999999787557416	WITHOUT_CLASSIFICATION	2.124425826408904E-8	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9999992114662792	WITHOUT_CLASSIFICATION	7.885337208206379E-7	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9999994159347432	WITHOUT_CLASSIFICATION	5.840652568073997E-7	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.9999985637126714	WITHOUT_CLASSIFICATION	1.4362873285898751E-6	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9999992962112464	WITHOUT_CLASSIFICATION	7.037887536609582E-7	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9999988151474687	WITHOUT_CLASSIFICATION	1.1848525313060946E-6	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9999998062825922	WITHOUT_CLASSIFICATION	1.937174078550139E-7	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9999998259160382	WITHOUT_CLASSIFICATION	1.7408396173400329E-7	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9999992720764341	WITHOUT_CLASSIFICATION	7.279235658620769E-7	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9999994888112403	WITHOUT_CLASSIFICATION	5.111887595927858E-7	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9999997445186014	WITHOUT_CLASSIFICATION	2.5548139856763283E-7	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9999989868749716	WITHOUT_CLASSIFICATION	1.0131250284391834E-6	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9999994606399989	WITHOUT_CLASSIFICATION	5.393600011129486E-7	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9999993293507027	WITHOUT_CLASSIFICATION	6.706492972681131E-7	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9999997879807053	WITHOUT_CLASSIFICATION	2.1201929467162512E-7	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9999994618375665	WITHOUT_CLASSIFICATION	5.381624335444586E-7	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.999998859074583	WITHOUT_CLASSIFICATION	1.1409254169748714E-6	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9999995478410941	WITHOUT_CLASSIFICATION	4.5215890583618636E-7	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9999993452795655	WITHOUT_CLASSIFICATION	6.54720434459823E-7	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.999999731341665	WITHOUT_CLASSIFICATION	2.686583350679297E-7	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9999996836737988	WITHOUT_CLASSIFICATION	3.163262013187577E-7	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9999995900114119	WITHOUT_CLASSIFICATION	4.099885881550813E-7	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9999992693762858	WITHOUT_CLASSIFICATION	7.306237141222988E-7	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9999997384364484	WITHOUT_CLASSIFICATION	2.6156355168642733E-7	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.999999527700105	WITHOUT_CLASSIFICATION	4.722998950075461E-7	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9999998450201072	WITHOUT_CLASSIFICATION	1.5497989291950557E-7	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9999987656263921	WITHOUT_CLASSIFICATION	1.2343736078901114E-6	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9999994680088231	WITHOUT_CLASSIFICATION	5.319911768329786E-7	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9999989904544373	WITHOUT_CLASSIFICATION	1.0095455627871273E-6	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9999984506325109	WITHOUT_CLASSIFICATION	1.5493674891576121E-6	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9999995250250833	WITHOUT_CLASSIFICATION	4.7497491674028574E-7	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9999987150920937	WITHOUT_CLASSIFICATION	1.2849079063289E-6	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9999993071999222	WITHOUT_CLASSIFICATION	6.928000776939634E-7	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9999989597325829	WITHOUT_CLASSIFICATION	1.0402674170088944E-6	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9999990984971968	WITHOUT_CLASSIFICATION	9.015028030908839E-7	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9999988546270824	WITHOUT_CLASSIFICATION	1.1453729176218793E-6	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9999987729682954	WITHOUT_CLASSIFICATION	1.2270317046573085E-6	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9999995062547314	WITHOUT_CLASSIFICATION	4.937452685670117E-7	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9999989106046618	WITHOUT_CLASSIFICATION	1.0893953381824764E-6	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.9999996603971489	WITHOUT_CLASSIFICATION	3.396028511035405E-7	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9999987599260427	WITHOUT_CLASSIFICATION	1.2400739572558178E-6	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9999987529508577	WITHOUT_CLASSIFICATION	1.2470491422406351E-6	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9999990546483492	WITHOUT_CLASSIFICATION	9.453516508646374E-7	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9999984740229282	WITHOUT_CLASSIFICATION	1.5259770717654904E-6	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.999997431638746	WITHOUT_CLASSIFICATION	2.5683612538768275E-6	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9999987711477596	WITHOUT_CLASSIFICATION	1.2288522403488952E-6	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9999984408941072	WITHOUT_CLASSIFICATION	1.5591058929047832E-6	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9999989931192876	WITHOUT_CLASSIFICATION	1.0068807123448048E-6	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9999992929842381	WITHOUT_CLASSIFICATION	7.070157619483257E-7	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9999988591670372	WITHOUT_CLASSIFICATION	1.140832962753245E-6	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9999988888679779	WITHOUT_CLASSIFICATION	1.1111320219976234E-6	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9999991309561688	WITHOUT_CLASSIFICATION	8.690438312225478E-7	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9999981416759408	WITHOUT_CLASSIFICATION	1.858324059231649E-6	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9999977063793652	WITHOUT_CLASSIFICATION	2.29362063478805E-6	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9999990530653536	WITHOUT_CLASSIFICATION	9.469346465057663E-7	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9999994557781916	WITHOUT_CLASSIFICATION	5.442218084333043E-7	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9999993978875358	WITHOUT_CLASSIFICATION	6.021124642459966E-7	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9999997067816652	WITHOUT_CLASSIFICATION	2.93218334811917E-7	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999999606474692	WITHOUT_CLASSIFICATION	3.935253089043421E-8	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999996300798659	WITHOUT_CLASSIFICATION	3.699201340317203E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999482748462	WITHOUT_CLASSIFICATION	5.172515379537336E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999482748462	WITHOUT_CLASSIFICATION	5.172515379537336E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999482748462	WITHOUT_CLASSIFICATION	5.172515379537336E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999482748462	WITHOUT_CLASSIFICATION	5.172515379537336E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999482748462	WITHOUT_CLASSIFICATION	5.172515379537336E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999482748462	WITHOUT_CLASSIFICATION	5.172515379537336E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999482748462	WITHOUT_CLASSIFICATION	5.172515379537336E-8	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999888895184023	WITHOUT_CLASSIFICATION	1.1110481597843433E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999888895184023	WITHOUT_CLASSIFICATION	1.1110481597843433E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999888895184023	WITHOUT_CLASSIFICATION	1.1110481597843433E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999888895184023	WITHOUT_CLASSIFICATION	1.1110481597843433E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999919813742034	WITHOUT_CLASSIFICATION	8.018625796654966E-6	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999919813742034	WITHOUT_CLASSIFICATION	8.018625796654966E-6	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999999995193968	WITHOUT_CLASSIFICATION	4.806032418292854E-10	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999998939533888	WITHOUT_CLASSIFICATION	1.0604661112610924E-7	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999998939533888	WITHOUT_CLASSIFICATION	1.0604661112610924E-7	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.999999955024407	WITHOUT_CLASSIFICATION	4.497559295237238E-8	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999980868069926	WITHOUT_CLASSIFICATION	1.913193007368288E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999871331982	WITHOUT_CLASSIFICATION	1.2866801773822938E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999871331982	WITHOUT_CLASSIFICATION	1.2866801773822938E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999871331982	WITHOUT_CLASSIFICATION	1.2866801773822938E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999871331982	WITHOUT_CLASSIFICATION	1.2866801773822938E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999871331982	WITHOUT_CLASSIFICATION	1.2866801773822938E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999871331982	WITHOUT_CLASSIFICATION	1.2866801773822938E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999871331982	WITHOUT_CLASSIFICATION	1.2866801773822938E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999874424739	WITHOUT_CLASSIFICATION	1.2557526027971635E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999807879868	WITHOUT_CLASSIFICATION	1.9212013168357868E-8	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999210653915642	WITHOUT_CLASSIFICATION	7.893460843575572E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999210653915642	WITHOUT_CLASSIFICATION	7.893460843575572E-5	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999839458646	WITHOUT_CLASSIFICATION	1.605413534400334E-8	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999996237559606	WITHOUT_CLASSIFICATION	3.762440393518562E-7	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999996237559606	WITHOUT_CLASSIFICATION	3.762440393518562E-7	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999998650992836	WITHOUT_CLASSIFICATION	1.3490071633925496E-7	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.8855479929840837	IMPLEMENTATION	0.11445200701591628	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999996991616615	WITHOUT_CLASSIFICATION	3.0083833836418197E-7	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999939963264471	WITHOUT_CLASSIFICATION	6.003673552844149E-6	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.999999997080462	WITHOUT_CLASSIFICATION	2.9195378893846454E-9	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999994995265057	WITHOUT_CLASSIFICATION	5.004734942615274E-7	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999005434809894	WITHOUT_CLASSIFICATION	9.94565190104998E-5	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999993886324047	WITHOUT_CLASSIFICATION	6.113675952682753E-7	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999998673842554	WITHOUT_CLASSIFICATION	1.3261574456367708E-7	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999940914862633	WITHOUT_CLASSIFICATION	5.908513736755829E-6	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999999971238669	WITHOUT_CLASSIFICATION	2.8761329714783213E-9	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999976033164236	WITHOUT_CLASSIFICATION	2.3966835764165894E-6	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999999736504	WITHOUT_CLASSIFICATION	2.6349578553295606E-11	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9988719371787174	WITHOUT_CLASSIFICATION	0.0011280628212826341	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999751754934574	WITHOUT_CLASSIFICATION	2.482450654257712E-5	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999850635189697	WITHOUT_CLASSIFICATION	1.4936481030354752E-5	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999996876685	WITHOUT_CLASSIFICATION	3.1233145123520605E-10	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998932130406488	WITHOUT_CLASSIFICATION	1.0678695935116812E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999847865557501	WITHOUT_CLASSIFICATION	1.5213444249933908E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999847865557501	WITHOUT_CLASSIFICATION	1.5213444249933908E-5	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999916702139517	WITHOUT_CLASSIFICATION	8.329786048281154E-6	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999952264305	WITHOUT_CLASSIFICATION	4.773569496805499E-9	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999984778954226	WITHOUT_CLASSIFICATION	1.5221045773843835E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999988264686459	WITHOUT_CLASSIFICATION	1.173531354099931E-6	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999846802186265	WITHOUT_CLASSIFICATION	1.5319781373485832E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999846802186265	WITHOUT_CLASSIFICATION	1.5319781373485832E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999846802186265	WITHOUT_CLASSIFICATION	1.5319781373485832E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999622379915428	WITHOUT_CLASSIFICATION	3.7762008457129984E-5	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999972560646194	WITHOUT_CLASSIFICATION	2.7439353805358035E-6	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9997522167089206	WITHOUT_CLASSIFICATION	2.4778329107942555E-4	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999833910197417	WITHOUT_CLASSIFICATION	1.6608980258308937E-5	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999999999372168	WITHOUT_CLASSIFICATION	6.27832250901695E-11	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999989322557366	WITHOUT_CLASSIFICATION	1.067744263367777E-6	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999999700325746	WITHOUT_CLASSIFICATION	2.9967425398563875E-8	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999996189195	WITHOUT_CLASSIFICATION	3.810805258079006E-10	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999659153132494	WITHOUT_CLASSIFICATION	3.408468675061336E-5	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999985311158056	WITHOUT_CLASSIFICATION	1.4688841943888286E-6	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9999998763276496	WITHOUT_CLASSIFICATION	1.2367235032619127E-7	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999992112095877	WITHOUT_CLASSIFICATION	7.887904123920955E-7	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.6745709921504384	IMPLEMENTATION	0.32542900784956175	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999991335634052	WITHOUT_CLASSIFICATION	8.664365948501245E-7	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999999969193488	WITHOUT_CLASSIFICATION	3.0806512729014735E-9	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.999999999993167	WITHOUT_CLASSIFICATION	6.8330538221418535E-12	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999996399474119	WITHOUT_CLASSIFICATION	3.600525880569752E-7	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.999999941819501	WITHOUT_CLASSIFICATION	5.81804989665179E-8	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.999712866964993	WITHOUT_CLASSIFICATION	2.871330350071071E-4	IMPLEMENTATION
