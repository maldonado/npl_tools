// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.9983363954329222	WITHOUT_CLASSIFICATION	0.0016636045670778388	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.9559174825106653	WITHOUT_CLASSIFICATION	0.04408251748933459	IMPLEMENTATION
// TODO: Someday, enable.	IMPLEMENTATION	0.9994919395843508	WITHOUT_CLASSIFICATION	5.08060415649176E-4	IMPLEMENTATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.9999801998569758	WITHOUT_CLASSIFICATION	1.9800143024129256E-5	IMPLEMENTATION
// TODO: non-strict option	IMPLEMENTATION	0.9996878399817071	WITHOUT_CLASSIFICATION	3.121600182928432E-4	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.9986939181871282	WITHOUT_CLASSIFICATION	0.0013060818128718557	IMPLEMENTATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.9999490803628528	WITHOUT_CLASSIFICATION	5.09196371472E-5	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.9987174799441851	WITHOUT_CLASSIFICATION	0.001282520055814786	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.9987174799441851	WITHOUT_CLASSIFICATION	0.001282520055814786	IMPLEMENTATION
// TODO: pass this in?	IMPLEMENTATION	0.9988422511613865	WITHOUT_CLASSIFICATION	0.0011577488386135364	IMPLEMENTATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9997115231675724	WITHOUT_CLASSIFICATION	2.8847683242753903E-4	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.9870472429958715	WITHOUT_CLASSIFICATION	0.012952757004128386	IMPLEMENTATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.999917676681684	WITHOUT_CLASSIFICATION	8.232331831594605E-5	IMPLEMENTATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.9982988334200761	WITHOUT_CLASSIFICATION	0.0017011665799239258	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.9999681911289725	WITHOUT_CLASSIFICATION	3.180887102750901E-5	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9998728661950784	WITHOUT_CLASSIFICATION	1.2713380492146545E-4	IMPLEMENTATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9996845261273054	WITHOUT_CLASSIFICATION	3.1547387269452746E-4	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.9952213591149496	WITHOUT_CLASSIFICATION	0.004778640885050444	IMPLEMENTATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.9999986653926216	WITHOUT_CLASSIFICATION	1.3346073783853136E-6	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.9944776769828169	WITHOUT_CLASSIFICATION	0.005522323017183228	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.9996682860995723	WITHOUT_CLASSIFICATION	3.317139004277452E-4	IMPLEMENTATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.9997582326790955	WITHOUT_CLASSIFICATION	2.4176732090446974E-4	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.9979317274406513	WITHOUT_CLASSIFICATION	0.002068272559348727	IMPLEMENTATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.9999735773892843	WITHOUT_CLASSIFICATION	2.6422610715811807E-5	IMPLEMENTATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.9997940463202816	WITHOUT_CLASSIFICATION	2.059536797184342E-4	IMPLEMENTATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.998254817559261	WITHOUT_CLASSIFICATION	0.0017451824407390343	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.9632527501079694	WITHOUT_CLASSIFICATION	0.03674724989203059	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9946413598943973	WITHOUT_CLASSIFICATION	0.0053586401056027405	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.9632527501079694	WITHOUT_CLASSIFICATION	0.03674724989203059	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9946413598943973	WITHOUT_CLASSIFICATION	0.0053586401056027405	IMPLEMENTATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.9604055486709793	WITHOUT_CLASSIFICATION	0.03959445132902076	IMPLEMENTATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.9997746219621257	WITHOUT_CLASSIFICATION	2.253780378742135E-4	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.975258855996899	WITHOUT_CLASSIFICATION	0.024741144003100984	IMPLEMENTATION
// TODO: make threadsafe	IMPLEMENTATION	0.9981281376028557	WITHOUT_CLASSIFICATION	0.0018718623971443835	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9999262898840099	WITHOUT_CLASSIFICATION	7.371011599005787E-5	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9999262898840099	WITHOUT_CLASSIFICATION	7.371011599005787E-5	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.9999819543229163	WITHOUT_CLASSIFICATION	1.8045677083736528E-5	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.9999507649818609	WITHOUT_CLASSIFICATION	4.923501813912686E-5	IMPLEMENTATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.9989359680031846	WITHOUT_CLASSIFICATION	0.0010640319968154043	IMPLEMENTATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.9977334080648002	WITHOUT_CLASSIFICATION	0.0022665919351999514	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9849347579416228	WITHOUT_CLASSIFICATION	0.015065242058377224	IMPLEMENTATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.9851478965771611	WITHOUT_CLASSIFICATION	0.014852103422838814	IMPLEMENTATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.9999356509141967	WITHOUT_CLASSIFICATION	6.434908580333578E-5	IMPLEMENTATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.9999965783633536	WITHOUT_CLASSIFICATION	3.4216366464672803E-6	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.9999483869928163	WITHOUT_CLASSIFICATION	5.1613007183646766E-5	IMPLEMENTATION
// TODO: add trace call?	IMPLEMENTATION	0.9987409942792609	WITHOUT_CLASSIFICATION	0.001259005720739059	IMPLEMENTATION
// FIXME: missing arity check	IMPLEMENTATION	0.9996600775013378	WITHOUT_CLASSIFICATION	3.3992249866221925E-4	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.9999399798118183	WITHOUT_CLASSIFICATION	6.002018818163391E-5	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.9999871500326099	WITHOUT_CLASSIFICATION	1.284996739018055E-5	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.9999724935360157	WITHOUT_CLASSIFICATION	2.7506463984314793E-5	IMPLEMENTATION
// FIXME: missing arity check	IMPLEMENTATION	0.9996600775013378	WITHOUT_CLASSIFICATION	3.3992249866221925E-4	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.9999892578186709	WITHOUT_CLASSIFICATION	1.0742181329176936E-5	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.9999099033128561	WITHOUT_CLASSIFICATION	9.009668714388923E-5	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.9996927690169048	WITHOUT_CLASSIFICATION	3.0723098309516015E-4	IMPLEMENTATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.9980544549293218	WITHOUT_CLASSIFICATION	0.001945545070678136	IMPLEMENTATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.9949889475224314	WITHOUT_CLASSIFICATION	0.005011052477568598	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.9999852082963432	WITHOUT_CLASSIFICATION	1.4791703656913796E-5	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.9983082185108112	WITHOUT_CLASSIFICATION	0.0016917814891888408	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9999524745180814	WITHOUT_CLASSIFICATION	4.752548191842286E-5	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9998271975508463	WITHOUT_CLASSIFICATION	1.7280244915382368E-4	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.9999541350381262	WITHOUT_CLASSIFICATION	4.5864961873756487E-5	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9953557663525857	WITHOUT_CLASSIFICATION	0.00464423364741424	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9953557663525857	WITHOUT_CLASSIFICATION	0.00464423364741424	IMPLEMENTATION
// TODO: validate port as numeric	IMPLEMENTATION	0.9995892610534313	WITHOUT_CLASSIFICATION	4.107389465688001E-4	IMPLEMENTATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.8780837241225804	WITHOUT_CLASSIFICATION	0.12191627587741956	IMPLEMENTATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.9998952150702419	WITHOUT_CLASSIFICATION	1.0478492975810015E-4	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.9998923646415768	WITHOUT_CLASSIFICATION	1.0763535842318784E-4	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.9998923646415768	WITHOUT_CLASSIFICATION	1.0763535842318784E-4	IMPLEMENTATION
// TODO: other reserved names?	IMPLEMENTATION	0.9993599270611707	WITHOUT_CLASSIFICATION	6.40072938829277E-4	IMPLEMENTATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.9998578402444372	WITHOUT_CLASSIFICATION	1.421597555626239E-4	IMPLEMENTATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.9904642491504903	WITHOUT_CLASSIFICATION	0.009535750849509767	IMPLEMENTATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.999967072795655	WITHOUT_CLASSIFICATION	3.2927204344953005E-5	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.9999620764062611	WITHOUT_CLASSIFICATION	3.792359373890186E-5	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.9999620764062611	WITHOUT_CLASSIFICATION	3.792359373890186E-5	IMPLEMENTATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.9654341633044848	WITHOUT_CLASSIFICATION	0.03456583669551516	IMPLEMENTATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9378495830987876	WITHOUT_CLASSIFICATION	0.062150416901212396	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9993101332844688	WITHOUT_CLASSIFICATION	6.898667155311339E-4	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.9989518619121229	WITHOUT_CLASSIFICATION	0.001048138087877023	IMPLEMENTATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.999242235004676	WITHOUT_CLASSIFICATION	7.577649953240183E-4	IMPLEMENTATION
// FIXME: \r logic needed	IMPLEMENTATION	0.9998824325081709	WITHOUT_CLASSIFICATION	1.1756749182901703E-4	IMPLEMENTATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.9996445218100449	WITHOUT_CLASSIFICATION	3.554781899551543E-4	IMPLEMENTATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.9999969042927526	WITHOUT_CLASSIFICATION	3.095707247308376E-6	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9995802860060825	WITHOUT_CLASSIFICATION	4.1971399391742617E-4	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9995802860060825	WITHOUT_CLASSIFICATION	4.1971399391742617E-4	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.9999385026087831	WITHOUT_CLASSIFICATION	6.149739121675837E-5	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.9999271801177961	WITHOUT_CLASSIFICATION	7.281988220381736E-5	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.999838367772133	WITHOUT_CLASSIFICATION	1.616322278669777E-4	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.999838367772133	WITHOUT_CLASSIFICATION	1.616322278669777E-4	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.9998711916915509	WITHOUT_CLASSIFICATION	1.288083084490077E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9999632138938769	WITHOUT_CLASSIFICATION	3.6786106123198414E-5	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9999632138938769	WITHOUT_CLASSIFICATION	3.6786106123198414E-5	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9999632138938769	WITHOUT_CLASSIFICATION	3.6786106123198414E-5	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.7665888559231114	WITHOUT_CLASSIFICATION	0.23341114407688857	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.7665888559231114	WITHOUT_CLASSIFICATION	0.23341114407688857	IMPLEMENTATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.9890006075676432	WITHOUT_CLASSIFICATION	0.010999392432356836	IMPLEMENTATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9999915137380201	WITHOUT_CLASSIFICATION	8.486261979859403E-6	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.9999782494689592	WITHOUT_CLASSIFICATION	2.175053104087035E-5	IMPLEMENTATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9998857420301849	WITHOUT_CLASSIFICATION	1.1425796981513736E-4	IMPLEMENTATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9994047194991953	WITHOUT_CLASSIFICATION	5.952805008047822E-4	IMPLEMENTATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9994047194991953	WITHOUT_CLASSIFICATION	5.952805008047822E-4	IMPLEMENTATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9994047194991953	WITHOUT_CLASSIFICATION	5.952805008047822E-4	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9849347579416228	WITHOUT_CLASSIFICATION	0.015065242058377224	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9849347579416228	WITHOUT_CLASSIFICATION	0.015065242058377224	IMPLEMENTATION
// TODO: check for ascii string	IMPLEMENTATION	0.9830303046792376	WITHOUT_CLASSIFICATION	0.01696969532076236	IMPLEMENTATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.9987954250708926	WITHOUT_CLASSIFICATION	0.0012045749291074326	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9999262898840099	WITHOUT_CLASSIFICATION	7.371011599005787E-5	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9999262898840099	WITHOUT_CLASSIFICATION	7.371011599005787E-5	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.9994196219340277	WITHOUT_CLASSIFICATION	5.803780659723891E-4	IMPLEMENTATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.9999608985116941	WITHOUT_CLASSIFICATION	3.910148830587178E-5	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9998728661950784	WITHOUT_CLASSIFICATION	1.2713380492146545E-4	IMPLEMENTATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9999907824488891	WITHOUT_CLASSIFICATION	9.217551111000861E-6	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.9944427034446952	WITHOUT_CLASSIFICATION	0.005557296555304677	IMPLEMENTATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.9992250841836844	WITHOUT_CLASSIFICATION	7.749158163156966E-4	IMPLEMENTATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.9999676465304937	WITHOUT_CLASSIFICATION	3.235346950625713E-5	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999681948971821	WITHOUT_CLASSIFICATION	3.1805102817965016E-5	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9999625008810771	WITHOUT_CLASSIFICATION	3.749911892295459E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9996308393491821	WITHOUT_CLASSIFICATION	3.6916065081796007E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9996308393491821	WITHOUT_CLASSIFICATION	3.6916065081796007E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996452590767873	WITHOUT_CLASSIFICATION	3.5474092321284166E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996452590767873	WITHOUT_CLASSIFICATION	3.5474092321284166E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996275509700966	WITHOUT_CLASSIFICATION	3.7244902990346264E-4	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999963026600164	WITHOUT_CLASSIFICATION	3.697339983569563E-6	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9999617762712505	WITHOUT_CLASSIFICATION	3.822372874959532E-5	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999615019320152	WITHOUT_CLASSIFICATION	3.8498067984749486E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.999927533155177	WITHOUT_CLASSIFICATION	7.246684482302253E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.999927533155177	WITHOUT_CLASSIFICATION	7.246684482302253E-5	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9999654720987189	WITHOUT_CLASSIFICATION	3.4527901281171714E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999173414105313	WITHOUT_CLASSIFICATION	8.265858946859384E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999173414105313	WITHOUT_CLASSIFICATION	8.265858946859384E-5	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9998123194775104	WITHOUT_CLASSIFICATION	1.8768052248955807E-4	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9998096098221186	WITHOUT_CLASSIFICATION	1.9039017788150182E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9996474800470653	WITHOUT_CLASSIFICATION	3.525199529347311E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9996474800470653	WITHOUT_CLASSIFICATION	3.525199529347311E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9996474800470653	WITHOUT_CLASSIFICATION	3.525199529347311E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9996474800470653	WITHOUT_CLASSIFICATION	3.525199529347311E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9996474800470653	WITHOUT_CLASSIFICATION	3.525199529347311E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9996474800470653	WITHOUT_CLASSIFICATION	3.525199529347311E-4	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9996474800470653	WITHOUT_CLASSIFICATION	3.525199529347311E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996702365861854	WITHOUT_CLASSIFICATION	3.297634138146487E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996702365861854	WITHOUT_CLASSIFICATION	3.297634138146487E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996702365861854	WITHOUT_CLASSIFICATION	3.297634138146487E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996702365861854	WITHOUT_CLASSIFICATION	3.297634138146487E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996702365861854	WITHOUT_CLASSIFICATION	3.297634138146487E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996702365861854	WITHOUT_CLASSIFICATION	3.297634138146487E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9996702365861854	WITHOUT_CLASSIFICATION	3.297634138146487E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996468184886934	WITHOUT_CLASSIFICATION	3.531815113065677E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996468184886934	WITHOUT_CLASSIFICATION	3.531815113065677E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996468184886934	WITHOUT_CLASSIFICATION	3.531815113065677E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996468184886934	WITHOUT_CLASSIFICATION	3.531815113065677E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996468184886934	WITHOUT_CLASSIFICATION	3.531815113065677E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996468184886934	WITHOUT_CLASSIFICATION	3.531815113065677E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999326369261018	WITHOUT_CLASSIFICATION	6.736307389816516E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999326369261018	WITHOUT_CLASSIFICATION	6.736307389816516E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999326369261018	WITHOUT_CLASSIFICATION	6.736307389816516E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999326369261018	WITHOUT_CLASSIFICATION	6.736307389816516E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999326369261018	WITHOUT_CLASSIFICATION	6.736307389816516E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999326369261018	WITHOUT_CLASSIFICATION	6.736307389816516E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999231629211764	WITHOUT_CLASSIFICATION	7.683707882359042E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999231629211764	WITHOUT_CLASSIFICATION	7.683707882359042E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999231629211764	WITHOUT_CLASSIFICATION	7.683707882359042E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999231629211764	WITHOUT_CLASSIFICATION	7.683707882359042E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999231629211764	WITHOUT_CLASSIFICATION	7.683707882359042E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999231629211764	WITHOUT_CLASSIFICATION	7.683707882359042E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999231629211764	WITHOUT_CLASSIFICATION	7.683707882359042E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999197283812623	WITHOUT_CLASSIFICATION	8.027161873760038E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999197283812623	WITHOUT_CLASSIFICATION	8.027161873760038E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999197283812623	WITHOUT_CLASSIFICATION	8.027161873760038E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999197283812623	WITHOUT_CLASSIFICATION	8.027161873760038E-5	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9997740092941736	WITHOUT_CLASSIFICATION	2.259907058263983E-4	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9997740092941736	WITHOUT_CLASSIFICATION	2.259907058263983E-4	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999915453208922	WITHOUT_CLASSIFICATION	8.454679107806705E-5	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9999777657059107	WITHOUT_CLASSIFICATION	2.2234294089301452E-5	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9998642973869665	WITHOUT_CLASSIFICATION	1.3570261303346776E-4	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999963514271336	WITHOUT_CLASSIFICATION	3.6485728662664064E-6	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999879743543907	WITHOUT_CLASSIFICATION	1.2025645609305182E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999280645099514	WITHOUT_CLASSIFICATION	7.193549004857756E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999280645099514	WITHOUT_CLASSIFICATION	7.193549004857756E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999280645099514	WITHOUT_CLASSIFICATION	7.193549004857756E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999280645099514	WITHOUT_CLASSIFICATION	7.193549004857756E-5	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999967690467734	WITHOUT_CLASSIFICATION	3.2309532267544417E-6	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999384522737796	WITHOUT_CLASSIFICATION	6.15477262203209E-5	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999192470870589	WITHOUT_CLASSIFICATION	8.075291294103791E-5	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999636746682256	WITHOUT_CLASSIFICATION	3.632533177449119E-5	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.999444975607078	WITHOUT_CLASSIFICATION	5.550243929220364E-4	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.999997643466564	WITHOUT_CLASSIFICATION	2.3565334360712193E-6	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999713282125807	WITHOUT_CLASSIFICATION	2.8671787419253164E-5	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999950732682807	WITHOUT_CLASSIFICATION	4.926731719299717E-6	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999912630003157	WITHOUT_CLASSIFICATION	8.736999684294869E-6	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999962297904307	WITHOUT_CLASSIFICATION	3.7702095693233512E-6	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999963268809369	WITHOUT_CLASSIFICATION	3.673119063000723E-6	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999692686072742	WITHOUT_CLASSIFICATION	3.0731392725860026E-5	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999304335628608	WITHOUT_CLASSIFICATION	6.956643713924912E-5	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999898969880368	WITHOUT_CLASSIFICATION	1.010301196333376E-5	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999838481839453	WITHOUT_CLASSIFICATION	1.615181605475954E-5	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999953354359479	WITHOUT_CLASSIFICATION	4.664564052158821E-6	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999973066557428	WITHOUT_CLASSIFICATION	2.693344257124744E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999280645099514	WITHOUT_CLASSIFICATION	7.193549004857756E-5	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999957012334865	WITHOUT_CLASSIFICATION	4.29876651352728E-6	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999932524502069	WITHOUT_CLASSIFICATION	6.7475497931605685E-6	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999906364049113	WITHOUT_CLASSIFICATION	9.363595088805117E-6	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9998936145306478	WITHOUT_CLASSIFICATION	1.0638546935219989E-4	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999838294283774	WITHOUT_CLASSIFICATION	1.6170571622562272E-5	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.99995768352603	WITHOUT_CLASSIFICATION	4.231647397002359E-5	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9996458645896834	WITHOUT_CLASSIFICATION	3.5413541031658696E-4	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999775041629163	WITHOUT_CLASSIFICATION	2.2495837083659937E-5	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.999997504301132	WITHOUT_CLASSIFICATION	2.4956988679911254E-6	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999992015410826	WITHOUT_CLASSIFICATION	7.984589175024097E-7	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999957782207709	WITHOUT_CLASSIFICATION	4.2217792290471746E-6	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.999958085946373	WITHOUT_CLASSIFICATION	4.1914053627008445E-5	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999726955367918	WITHOUT_CLASSIFICATION	2.730446320822533E-5	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999743005768329	WITHOUT_CLASSIFICATION	2.569942316707004E-5	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999383796049681	WITHOUT_CLASSIFICATION	6.162039503187164E-5	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999578795227487	WITHOUT_CLASSIFICATION	4.212047725128919E-5	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9999646507876041	WITHOUT_CLASSIFICATION	3.534921239578088E-5	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999977435384152	WITHOUT_CLASSIFICATION	2.256461584807597E-6	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999737811917155	WITHOUT_CLASSIFICATION	2.6218808284437075E-5	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999984099956047	WITHOUT_CLASSIFICATION	1.5900043952670102E-6	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999971729995191	WITHOUT_CLASSIFICATION	2.8270004808773553E-6	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9997538768766889	WITHOUT_CLASSIFICATION	2.461231233111133E-4	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.999985721128655	WITHOUT_CLASSIFICATION	1.4278871344986213E-5	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.999756829282866	WITHOUT_CLASSIFICATION	2.4317071713393342E-4	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9998852731596708	WITHOUT_CLASSIFICATION	1.1472684032923037E-4	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9990406954759795	WITHOUT_CLASSIFICATION	9.593045240205137E-4	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999189541083735	WITHOUT_CLASSIFICATION	8.104589162653655E-5	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.999996037227238	WITHOUT_CLASSIFICATION	3.962772762053673E-6	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999986169237879	WITHOUT_CLASSIFICATION	1.3830762120877196E-6	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.99999696119414	WITHOUT_CLASSIFICATION	3.0388058600046063E-6	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9998425161880076	WITHOUT_CLASSIFICATION	1.5748381199237423E-4	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999885343337366	WITHOUT_CLASSIFICATION	1.1465666263426687E-5	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999968727867166	WITHOUT_CLASSIFICATION	3.1272132834553504E-6	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999841738297225	WITHOUT_CLASSIFICATION	1.5826170277475822E-5	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999851472777528	WITHOUT_CLASSIFICATION	1.485272224708784E-5	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999806868274971	WITHOUT_CLASSIFICATION	1.9313172502891823E-5	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999970160700146	WITHOUT_CLASSIFICATION	2.9839299853665867E-6	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999976895508405	WITHOUT_CLASSIFICATION	2.310449159492465E-6	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999968850761441	WITHOUT_CLASSIFICATION	3.114923855841202E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999900228023308	WITHOUT_CLASSIFICATION	9.977197669228623E-6	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999993729147029	WITHOUT_CLASSIFICATION	6.270852970449323E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999930411760469	WITHOUT_CLASSIFICATION	6.9588239530680525E-6	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9998603878654172	WITHOUT_CLASSIFICATION	1.3961213458289228E-4	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9998954009470248	WITHOUT_CLASSIFICATION	1.0459905297528032E-4	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9998954009470248	WITHOUT_CLASSIFICATION	1.0459905297528032E-4	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9981601204268479	WITHOUT_CLASSIFICATION	0.0018398795731520456	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999987744712694	WITHOUT_CLASSIFICATION	1.2255287306282994E-6	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999633510278528	WITHOUT_CLASSIFICATION	3.664897214719039E-5	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999781029203426	WITHOUT_CLASSIFICATION	2.189707965735802E-5	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.99999713648139	WITHOUT_CLASSIFICATION	2.8635186100174067E-6	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999862871325084	WITHOUT_CLASSIFICATION	1.3712867491592442E-5	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9997008951463084	WITHOUT_CLASSIFICATION	2.991048536915419E-4	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9997048159386029	WITHOUT_CLASSIFICATION	2.9518406139707247E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999930411760469	WITHOUT_CLASSIFICATION	6.9588239530680525E-6	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999567016134183	WITHOUT_CLASSIFICATION	4.329838658166339E-5	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999433925981531	WITHOUT_CLASSIFICATION	5.6607401846797586E-5	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999967743122917	WITHOUT_CLASSIFICATION	3.2256877082136045E-6	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999968769749514	WITHOUT_CLASSIFICATION	3.1230250486026934E-6	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999963007460206	WITHOUT_CLASSIFICATION	3.6992539793778753E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999884319665308	WITHOUT_CLASSIFICATION	1.1568033469289553E-5	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999884319665308	WITHOUT_CLASSIFICATION	1.1568033469289553E-5	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999884319665308	WITHOUT_CLASSIFICATION	1.1568033469289553E-5	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999548414086006	WITHOUT_CLASSIFICATION	4.515859139949264E-5	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999984499893252	WITHOUT_CLASSIFICATION	1.5500106747835393E-6	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999956697236594	WITHOUT_CLASSIFICATION	4.330276340681194E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999984849690164	WITHOUT_CLASSIFICATION	1.5150309835994426E-6	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999867996777797	WITHOUT_CLASSIFICATION	1.3200322220331726E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999703950252756	WITHOUT_CLASSIFICATION	2.9604974724400172E-5	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999950147585731	WITHOUT_CLASSIFICATION	4.985241426906725E-6	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999879414851879	WITHOUT_CLASSIFICATION	1.2058514812075669E-5	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999634984381026	WITHOUT_CLASSIFICATION	3.650156189731306E-5	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999634984381026	WITHOUT_CLASSIFICATION	3.650156189731306E-5	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999500448917648	WITHOUT_CLASSIFICATION	4.995510823523788E-5	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999221886054256	WITHOUT_CLASSIFICATION	7.78113945744093E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999234134458752	WITHOUT_CLASSIFICATION	7.658655412472683E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999234134458752	WITHOUT_CLASSIFICATION	7.658655412472683E-5	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999937636181649	WITHOUT_CLASSIFICATION	6.236381835103124E-6	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999477490881977	WITHOUT_CLASSIFICATION	5.225091180220026E-5	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999849757158967	WITHOUT_CLASSIFICATION	1.5024284103202424E-5	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999752885728728	WITHOUT_CLASSIFICATION	2.4711427127227173E-5	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999586802604695	WITHOUT_CLASSIFICATION	4.1319739530539524E-5	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.9999874131282782	WITHOUT_CLASSIFICATION	1.2586871721815383E-5	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9998530898883554	WITHOUT_CLASSIFICATION	1.469101116445494E-4	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9998475001624673	WITHOUT_CLASSIFICATION	1.5249983753268964E-4	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9999962209256837	WITHOUT_CLASSIFICATION	3.7790743163043173E-6	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999941956823586	WITHOUT_CLASSIFICATION	5.804317641521308E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999930411760469	WITHOUT_CLASSIFICATION	6.9588239530680525E-6	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999320764797612	WITHOUT_CLASSIFICATION	6.792352023876272E-5	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999851192306468	WITHOUT_CLASSIFICATION	1.488076935320312E-5	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.999973407431901	WITHOUT_CLASSIFICATION	2.659256809891883E-5	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999978712667489	WITHOUT_CLASSIFICATION	2.128733251172842E-6	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999981392994711	WITHOUT_CLASSIFICATION	1.8607005288172958E-6	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999845396415062	WITHOUT_CLASSIFICATION	1.546035849375746E-5	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.999983865708349	WITHOUT_CLASSIFICATION	1.613429165099151E-5	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999837003429012	WITHOUT_CLASSIFICATION	1.629965709873642E-5	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999810785040844	WITHOUT_CLASSIFICATION	1.892149591567879E-5	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999842870027875	WITHOUT_CLASSIFICATION	1.5712997212484813E-5	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999953607731937	WITHOUT_CLASSIFICATION	4.639226806279121E-6	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999985948089525	WITHOUT_CLASSIFICATION	1.4051910475448043E-6	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.999996882590957	WITHOUT_CLASSIFICATION	3.1174090429914906E-6	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9998820904230955	WITHOUT_CLASSIFICATION	1.1790957690442614E-4	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999555075419597	WITHOUT_CLASSIFICATION	4.449245804025515E-5	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9996980074436027	WITHOUT_CLASSIFICATION	3.019925563973397E-4	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999348971764535	WITHOUT_CLASSIFICATION	6.510282354662693E-5	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.999996971075232	WITHOUT_CLASSIFICATION	3.0289247679924923E-6	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999882110124708	WITHOUT_CLASSIFICATION	1.1788987529276279E-5	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999633485238005	WITHOUT_CLASSIFICATION	3.665147619958749E-5	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999887409828129	WITHOUT_CLASSIFICATION	1.1259017187087108E-5	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999921035540614	WITHOUT_CLASSIFICATION	7.896445938477936E-6	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999979966114629	WITHOUT_CLASSIFICATION	2.0033885370196317E-6	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.999994399121098	WITHOUT_CLASSIFICATION	5.600878902079796E-6	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999940303676873	WITHOUT_CLASSIFICATION	5.969632312698876E-6	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999976298791877	WITHOUT_CLASSIFICATION	2.370120812284274E-6	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999953511468491	WITHOUT_CLASSIFICATION	4.648853150864699E-6	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999937096721336	WITHOUT_CLASSIFICATION	6.290327866371936E-6	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999980831048356	WITHOUT_CLASSIFICATION	1.916895164349613E-6	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999790017894674	WITHOUT_CLASSIFICATION	2.0998210532577792E-5	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999917192990458	WITHOUT_CLASSIFICATION	8.280700954139423E-6	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9999948171406454	WITHOUT_CLASSIFICATION	5.18285935465547E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999404277086311	WITHOUT_CLASSIFICATION	5.957229136885114E-5	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999929940151262	WITHOUT_CLASSIFICATION	7.005984873762677E-6	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999860772473724	WITHOUT_CLASSIFICATION	1.3922752627639481E-5	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999879979897115	WITHOUT_CLASSIFICATION	1.2002010288509146E-5	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.999993765378388	WITHOUT_CLASSIFICATION	6.2346216119610674E-6	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999956991930056	WITHOUT_CLASSIFICATION	4.3008069943966835E-6	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999954009593123	WITHOUT_CLASSIFICATION	4.5990406878058835E-6	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999955043580744	WITHOUT_CLASSIFICATION	4.495641925591668E-6	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999610126116424	WITHOUT_CLASSIFICATION	3.898738835750744E-5	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9999912315099093	WITHOUT_CLASSIFICATION	8.768490090745166E-6	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999549559374749	WITHOUT_CLASSIFICATION	4.504406252526522E-5	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999707032364196	WITHOUT_CLASSIFICATION	2.9296763580412972E-5	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9999811963042299	WITHOUT_CLASSIFICATION	1.880369577014501E-5	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9999259940971459	WITHOUT_CLASSIFICATION	7.400590285414642E-5	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9999573640609457	WITHOUT_CLASSIFICATION	4.263593905420479E-5	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999965109581648	WITHOUT_CLASSIFICATION	3.489041835300172E-6	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999914693704218	WITHOUT_CLASSIFICATION	8.53062957819525E-6	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.999996738890467	WITHOUT_CLASSIFICATION	3.2611095328372093E-6	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999974858367984	WITHOUT_CLASSIFICATION	2.5141632015881105E-6	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999565754434414	WITHOUT_CLASSIFICATION	4.342455655865213E-5	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999326153284153	WITHOUT_CLASSIFICATION	6.738467158478266E-5	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999918604930518	WITHOUT_CLASSIFICATION	8.13950694819717E-6	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999975841406561	WITHOUT_CLASSIFICATION	2.4158593439028736E-6	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999991832935105	WITHOUT_CLASSIFICATION	8.167064895661575E-7	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.999888714375566	WITHOUT_CLASSIFICATION	1.1128562443391635E-4	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999910778757118	WITHOUT_CLASSIFICATION	8.922124288201215E-6	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999962584546443	WITHOUT_CLASSIFICATION	3.741545355584153E-6	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9999955327059331	WITHOUT_CLASSIFICATION	4.467294066950684E-6	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9998694158241861	WITHOUT_CLASSIFICATION	1.3058417581383457E-4	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9998694158241861	WITHOUT_CLASSIFICATION	1.3058417581383457E-4	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.999902700171782	WITHOUT_CLASSIFICATION	9.729982821799528E-5	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.999902700171782	WITHOUT_CLASSIFICATION	9.729982821799528E-5	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9997861082484933	WITHOUT_CLASSIFICATION	2.1389175150658037E-4	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9997861082484933	WITHOUT_CLASSIFICATION	2.1389175150658037E-4	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9997705747558155	WITHOUT_CLASSIFICATION	2.2942524418432235E-4	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9997705747558155	WITHOUT_CLASSIFICATION	2.2942524418432235E-4	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9999845996118355	WITHOUT_CLASSIFICATION	1.5400388164444565E-5	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9997233322766621	WITHOUT_CLASSIFICATION	2.7666772333788603E-4	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999983503442387	WITHOUT_CLASSIFICATION	1.6496557613142474E-5	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999905146378414	WITHOUT_CLASSIFICATION	9.485362158644067E-6	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999830304775057	WITHOUT_CLASSIFICATION	1.6969522494257454E-5	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999969743094268	WITHOUT_CLASSIFICATION	3.0256905732523096E-6	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9995798648816769	WITHOUT_CLASSIFICATION	4.201351183231168E-4	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999921682814287	WITHOUT_CLASSIFICATION	7.83171857142814E-6	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.999961365604895	WITHOUT_CLASSIFICATION	3.863439510488458E-5	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999616558219766	WITHOUT_CLASSIFICATION	3.834417802345359E-5	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999656211319378	WITHOUT_CLASSIFICATION	3.4378868062241177E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999171652250749	WITHOUT_CLASSIFICATION	8.28347749251969E-5	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999811518977978	WITHOUT_CLASSIFICATION	1.884810220222338E-5	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9998124547800558	WITHOUT_CLASSIFICATION	1.8754521994422443E-4	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999595691483927	WITHOUT_CLASSIFICATION	4.0430851607375585E-5	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999650773150847	WITHOUT_CLASSIFICATION	3.492268491528508E-5	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999994252338175	WITHOUT_CLASSIFICATION	5.747661825326546E-7	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999953492225127	WITHOUT_CLASSIFICATION	4.650777487293031E-6	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999748654423447	WITHOUT_CLASSIFICATION	2.513455765538557E-5	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9968525060670818	WITHOUT_CLASSIFICATION	0.003147493932918266	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999806288125173	WITHOUT_CLASSIFICATION	1.937118748265816E-5	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999823058600298	WITHOUT_CLASSIFICATION	1.7694139970196007E-5	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999454898507187	WITHOUT_CLASSIFICATION	5.451014928119548E-5	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999897126835701	WITHOUT_CLASSIFICATION	1.0287316430006268E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999290602115737	WITHOUT_CLASSIFICATION	7.093978842638064E-5	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9997077637482786	WITHOUT_CLASSIFICATION	2.9223625172133483E-4	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.999970212149934	WITHOUT_CLASSIFICATION	2.9787850066035735E-5	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9994334115477401	WITHOUT_CLASSIFICATION	5.665884522599817E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9994334115477401	WITHOUT_CLASSIFICATION	5.665884522599817E-4	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999925411364177	WITHOUT_CLASSIFICATION	7.458863582288154E-6	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9999209160391891	WITHOUT_CLASSIFICATION	7.908396081091343E-5	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9998832371270906	WITHOUT_CLASSIFICATION	1.167628729093491E-4	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999844512784095	WITHOUT_CLASSIFICATION	1.5548721590519492E-5	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999747562291073	WITHOUT_CLASSIFICATION	2.5243770892670027E-5	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999681665307186	WITHOUT_CLASSIFICATION	3.1833469281476226E-5	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9998513190633248	WITHOUT_CLASSIFICATION	1.4868093667516906E-4	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9998513190633248	WITHOUT_CLASSIFICATION	1.4868093667516906E-4	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999894877247084	WITHOUT_CLASSIFICATION	1.0512275291622652E-5	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9995046753988032	WITHOUT_CLASSIFICATION	4.953246011968013E-4	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9998986065114386	WITHOUT_CLASSIFICATION	1.013934885614012E-4	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9998986065114386	WITHOUT_CLASSIFICATION	1.013934885614012E-4	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9998183407947676	WITHOUT_CLASSIFICATION	1.8165920523246728E-4	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999862734479371	WITHOUT_CLASSIFICATION	1.372655206295005E-5	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999862734479371	WITHOUT_CLASSIFICATION	1.372655206295005E-5	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.999954388558404	WITHOUT_CLASSIFICATION	4.561144159593689E-5	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.999954388558404	WITHOUT_CLASSIFICATION	4.561144159593689E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9996675483225076	WITHOUT_CLASSIFICATION	3.3245167749242364E-4	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9996675483225076	WITHOUT_CLASSIFICATION	3.3245167749242364E-4	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9997609333928463	WITHOUT_CLASSIFICATION	2.3906660715358172E-4	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999954570611765	WITHOUT_CLASSIFICATION	4.5429388234751356E-6	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.999979810419345	WITHOUT_CLASSIFICATION	2.0189580655043385E-5	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999891659733326	WITHOUT_CLASSIFICATION	1.0834026667239724E-5	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999949480036109	WITHOUT_CLASSIFICATION	5.051996389107549E-6	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999862185240346	WITHOUT_CLASSIFICATION	1.3781475965370164E-5	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999899727390953	WITHOUT_CLASSIFICATION	1.0027260904675725E-5	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999713954041265	WITHOUT_CLASSIFICATION	2.860459587350238E-5	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999899727390953	WITHOUT_CLASSIFICATION	1.0027260904675725E-5	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.99973828944598	WITHOUT_CLASSIFICATION	2.617105540201058E-4	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999614974608955	WITHOUT_CLASSIFICATION	3.850253910464708E-5	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.999982045744252	WITHOUT_CLASSIFICATION	1.7954255748005667E-5	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999588258040942	WITHOUT_CLASSIFICATION	4.117419590584169E-5	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999893589583858	WITHOUT_CLASSIFICATION	1.064104161405712E-5	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999984816890598	WITHOUT_CLASSIFICATION	1.5183109401398085E-6	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999949000246594	WITHOUT_CLASSIFICATION	5.099975340575864E-6	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.999902345967122	WITHOUT_CLASSIFICATION	9.765403287797928E-5	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999962417587923	WITHOUT_CLASSIFICATION	3.7582412076283336E-6	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999976919902603	WITHOUT_CLASSIFICATION	2.3080097397782217E-6	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999931526503983	WITHOUT_CLASSIFICATION	6.8473496017420884E-6	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999869702725632	WITHOUT_CLASSIFICATION	1.3029727436792308E-5	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.999976560016687	WITHOUT_CLASSIFICATION	2.343998331299701E-5	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9999702633075795	WITHOUT_CLASSIFICATION	2.97366924204965E-5	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999719331011558	WITHOUT_CLASSIFICATION	2.8066898844162083E-5	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999971299110654	WITHOUT_CLASSIFICATION	2.8700889346843837E-6	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999935408870807	WITHOUT_CLASSIFICATION	6.459112919295415E-6	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999947667390822	WITHOUT_CLASSIFICATION	5.233260917799771E-6	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.999940737557737	WITHOUT_CLASSIFICATION	5.9262442262912534E-5	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.99977959663623	WITHOUT_CLASSIFICATION	2.204033637700861E-4	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999821897247703	WITHOUT_CLASSIFICATION	1.7810275229734064E-5	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.999989941395567	WITHOUT_CLASSIFICATION	1.0058604433061847E-5	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.999986695348632	WITHOUT_CLASSIFICATION	1.3304651367951442E-5	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9994027707861572	WITHOUT_CLASSIFICATION	5.972292138428311E-4	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999538734903866	WITHOUT_CLASSIFICATION	4.612650961345293E-5	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.999980942247011	WITHOUT_CLASSIFICATION	1.905775298908742E-5	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999983787601331	WITHOUT_CLASSIFICATION	1.6212398669704779E-6	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9988416261196087	WITHOUT_CLASSIFICATION	0.0011583738803913502	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999995033354165	WITHOUT_CLASSIFICATION	4.966645834332261E-7	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999966527342995	WITHOUT_CLASSIFICATION	3.347265700443562E-6	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999985465745448	WITHOUT_CLASSIFICATION	1.4534254552065353E-6	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999992208763853	WITHOUT_CLASSIFICATION	7.791236148259404E-7	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999981575837611	WITHOUT_CLASSIFICATION	1.8424162388508685E-6	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9998606858113742	WITHOUT_CLASSIFICATION	1.3931418862579681E-4	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.999999378534785	WITHOUT_CLASSIFICATION	6.214652148868758E-7	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999990192441939	WITHOUT_CLASSIFICATION	9.807558060965406E-7	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999990588474099	WITHOUT_CLASSIFICATION	9.41152590155366E-7	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999979585878944	WITHOUT_CLASSIFICATION	2.041412105541574E-6	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999966847970274	WITHOUT_CLASSIFICATION	3.3152029726222747E-6	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999988286641855	WITHOUT_CLASSIFICATION	1.1713358144496447E-6	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999965744157415	WITHOUT_CLASSIFICATION	3.4255842585051155E-6	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999992125674739	WITHOUT_CLASSIFICATION	7.874325261047845E-7	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.999997102491022	WITHOUT_CLASSIFICATION	2.8975089780358155E-6	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999986053431091	WITHOUT_CLASSIFICATION	1.3946568909306652E-6	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999946957574856	WITHOUT_CLASSIFICATION	5.30424251446488E-6	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999961216229188	WITHOUT_CLASSIFICATION	3.8783770812294385E-6	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999958556748022	WITHOUT_CLASSIFICATION	4.144325197852544E-6	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999877275635993	WITHOUT_CLASSIFICATION	1.2272436400801533E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999989767445686	WITHOUT_CLASSIFICATION	1.023255431427327E-6	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999947557290291	WITHOUT_CLASSIFICATION	5.244270970900413E-6	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999780453259974	WITHOUT_CLASSIFICATION	2.195467400267851E-5	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999585085354838	WITHOUT_CLASSIFICATION	4.149146451606227E-5	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.999984295583612	WITHOUT_CLASSIFICATION	1.5704416388006954E-5	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999427248335433	WITHOUT_CLASSIFICATION	5.727516645661998E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999885304762841	WITHOUT_CLASSIFICATION	1.1469523715795245E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999885304762841	WITHOUT_CLASSIFICATION	1.1469523715795245E-5	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.999999721921322	WITHOUT_CLASSIFICATION	2.780786780404902E-7	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.999999642165491	WITHOUT_CLASSIFICATION	3.5783450903388605E-7	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.999997084750375	WITHOUT_CLASSIFICATION	2.915249625051331E-6	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999944422309514	WITHOUT_CLASSIFICATION	5.557769048643344E-6	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.999967159322308	WITHOUT_CLASSIFICATION	3.284067769209971E-5	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999916692281197	WITHOUT_CLASSIFICATION	8.330771880394582E-6	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999714091194262	WITHOUT_CLASSIFICATION	2.8590880573885533E-5	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999923455580801	WITHOUT_CLASSIFICATION	7.654441919833016E-6	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9994894120701624	WITHOUT_CLASSIFICATION	5.105879298375358E-4	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999868189609894	WITHOUT_CLASSIFICATION	1.3181039010585062E-5	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999344726187254	WITHOUT_CLASSIFICATION	6.552738127463259E-5	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999344726187254	WITHOUT_CLASSIFICATION	6.552738127463259E-5	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9993264506598559	WITHOUT_CLASSIFICATION	6.73549340144082E-4	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999170369072921	WITHOUT_CLASSIFICATION	8.296309270792388E-5	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.999991085877361	WITHOUT_CLASSIFICATION	8.91412263900897E-6	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999920734011694	WITHOUT_CLASSIFICATION	7.926598830678309E-6	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999521938954242	WITHOUT_CLASSIFICATION	4.7806104575684866E-5	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999883373856914	WITHOUT_CLASSIFICATION	1.1662614308640428E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999229108663876	WITHOUT_CLASSIFICATION	7.708913361242393E-5	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999963741499366	WITHOUT_CLASSIFICATION	3.6258500634241544E-6	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.999993803934812	WITHOUT_CLASSIFICATION	6.196065188054672E-6	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9997181366255715	WITHOUT_CLASSIFICATION	2.818633744284678E-4	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999958641384239	WITHOUT_CLASSIFICATION	4.1358615760812415E-6	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999953264585996	WITHOUT_CLASSIFICATION	4.673541400459302E-6	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9997083835260737	WITHOUT_CLASSIFICATION	2.916164739263393E-4	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9997083835260737	WITHOUT_CLASSIFICATION	2.916164739263393E-4	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999973031512875	WITHOUT_CLASSIFICATION	2.696848712468551E-6	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999879038740384	WITHOUT_CLASSIFICATION	1.2096125961604803E-5	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.999997914223458	WITHOUT_CLASSIFICATION	2.0857765420135168E-6	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999963945429781	WITHOUT_CLASSIFICATION	3.6054570218143666E-6	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.999972745878076	WITHOUT_CLASSIFICATION	2.7254121923906786E-5	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999653323548591	WITHOUT_CLASSIFICATION	3.46676451410041E-5	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999972635726937	WITHOUT_CLASSIFICATION	2.7364273062217493E-6	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999474561811665	WITHOUT_CLASSIFICATION	5.2543818833473704E-5	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999952465241634	WITHOUT_CLASSIFICATION	4.7534758365841685E-6	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999956655424044	WITHOUT_CLASSIFICATION	4.334457595597077E-6	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.999991085877361	WITHOUT_CLASSIFICATION	8.91412263900897E-6	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999992570812253	WITHOUT_CLASSIFICATION	7.429187747413963E-7	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999993853597885	WITHOUT_CLASSIFICATION	6.14640211415342E-7	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999980260669671	WITHOUT_CLASSIFICATION	1.973933032979757E-6	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999956736385118	WITHOUT_CLASSIFICATION	4.32636148817722E-6	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999931663864459	WITHOUT_CLASSIFICATION	6.833613554120681E-6	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999847460246694	WITHOUT_CLASSIFICATION	1.525397533066625E-5	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9996187143780559	WITHOUT_CLASSIFICATION	3.812856219440535E-4	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999949911236716	WITHOUT_CLASSIFICATION	5.008876328343082E-6	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999975193094714	WITHOUT_CLASSIFICATION	2.4806905285876716E-6	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999854053363665	WITHOUT_CLASSIFICATION	1.4594663633476197E-5	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999783903041395	WITHOUT_CLASSIFICATION	2.160969586049812E-5	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999995400339253	WITHOUT_CLASSIFICATION	4.599660746382162E-7	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999073621831865	WITHOUT_CLASSIFICATION	9.263781681343938E-5	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.999997730870337	WITHOUT_CLASSIFICATION	2.2691296629705984E-6	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999950295804588	WITHOUT_CLASSIFICATION	4.970419541155254E-6	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999943772901997	WITHOUT_CLASSIFICATION	5.622709800396754E-6	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.999991839485911	WITHOUT_CLASSIFICATION	8.160514088976265E-6	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999377583392439	WITHOUT_CLASSIFICATION	6.224166075610086E-5	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999577219817793	WITHOUT_CLASSIFICATION	4.227801822059903E-5	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.9999939174964463	WITHOUT_CLASSIFICATION	6.08250355365664E-6	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.999998398310035	WITHOUT_CLASSIFICATION	1.6016899649944168E-6	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999514491503236	WITHOUT_CLASSIFICATION	4.855084967633132E-5	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999989582970742	WITHOUT_CLASSIFICATION	1.0417029257447732E-6	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999979378641127	WITHOUT_CLASSIFICATION	2.062135887362669E-6	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.999960843792146	WITHOUT_CLASSIFICATION	3.915620785402608E-5	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999998870008402	WITHOUT_CLASSIFICATION	1.1299915974439726E-7	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9996658722962104	WITHOUT_CLASSIFICATION	3.34127703789589E-4	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9998525695711207	WITHOUT_CLASSIFICATION	1.47430428879264E-4	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9999438875875298	WITHOUT_CLASSIFICATION	5.6112412470212513E-5	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999864104865603	WITHOUT_CLASSIFICATION	1.3589513439643696E-5	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9995486860610148	WITHOUT_CLASSIFICATION	4.5131393898513797E-4	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9995486860610148	WITHOUT_CLASSIFICATION	4.5131393898513797E-4	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9997983925462823	WITHOUT_CLASSIFICATION	2.016074537176407E-4	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9995574678339125	WITHOUT_CLASSIFICATION	4.425321660875008E-4	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.9999330961779249	WITHOUT_CLASSIFICATION	6.690382207513357E-5	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9998836290359355	WITHOUT_CLASSIFICATION	1.1637096406437848E-4	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999651988529179	WITHOUT_CLASSIFICATION	3.4801147082150415E-5	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999963331070086	WITHOUT_CLASSIFICATION	3.666892991297476E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999930411760469	WITHOUT_CLASSIFICATION	6.9588239530680525E-6	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999538470180016	WITHOUT_CLASSIFICATION	4.615298199841664E-5	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999706449421947	WITHOUT_CLASSIFICATION	2.9355057805432695E-5	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999874678045769	WITHOUT_CLASSIFICATION	1.253219542297624E-5	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999937872309247	WITHOUT_CLASSIFICATION	6.2127690753799195E-6	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9998596754700094	WITHOUT_CLASSIFICATION	1.4032452999061476E-4	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999994207598756	WITHOUT_CLASSIFICATION	5.792401244623625E-7	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999955043580744	WITHOUT_CLASSIFICATION	4.495641925591668E-6	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999994931991989	WITHOUT_CLASSIFICATION	5.068008010161922E-7	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999545774877813	WITHOUT_CLASSIFICATION	4.542251221868249E-5	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999855739298	WITHOUT_CLASSIFICATION	1.442607018052749E-8	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999934875462756	WITHOUT_CLASSIFICATION	6.512453724418913E-6	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.9999801749258062	WITHOUT_CLASSIFICATION	1.982507419380691E-5	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999715233272716	WITHOUT_CLASSIFICATION	2.8476672728515787E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9998747392054896	WITHOUT_CLASSIFICATION	1.2526079451034234E-4	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9998747392054896	WITHOUT_CLASSIFICATION	1.2526079451034234E-4	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9999840352900009	WITHOUT_CLASSIFICATION	1.5964709999094902E-5	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999899535773252	WITHOUT_CLASSIFICATION	1.0046422674741378E-5	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999909109023072	WITHOUT_CLASSIFICATION	9.089097692776683E-6	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999573504132395	WITHOUT_CLASSIFICATION	4.2649586760424785E-5	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999458867427856	WITHOUT_CLASSIFICATION	5.411325721426202E-5	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999687510123193	WITHOUT_CLASSIFICATION	3.124898768060896E-5	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999985715228341	WITHOUT_CLASSIFICATION	1.4284771658149897E-6	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.999994898905954	WITHOUT_CLASSIFICATION	5.1010940459745254E-6	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999898413217613	WITHOUT_CLASSIFICATION	1.01586782387728E-5	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999831897342065	WITHOUT_CLASSIFICATION	1.681026579345316E-5	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9999623992732519	WITHOUT_CLASSIFICATION	3.76007267481718E-5	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999929704276175	WITHOUT_CLASSIFICATION	7.029572382495783E-6	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999940209880803	WITHOUT_CLASSIFICATION	5.979011919604853E-6	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999865099330796	WITHOUT_CLASSIFICATION	1.3490066920416938E-5	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999484870413232	WITHOUT_CLASSIFICATION	5.151295867688251E-5	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9993577393173514	WITHOUT_CLASSIFICATION	6.422606826486133E-4	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999917577243878	WITHOUT_CLASSIFICATION	8.242275612276425E-6	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9999968262057186	WITHOUT_CLASSIFICATION	3.173794281319541E-6	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999941528547655	WITHOUT_CLASSIFICATION	5.8471452344964755E-6	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999974587070274	WITHOUT_CLASSIFICATION	2.5412929726927654E-6	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999933468773957	WITHOUT_CLASSIFICATION	6.653122604178293E-6	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999960018678689	WITHOUT_CLASSIFICATION	3.998132131096313E-6	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999881268796688	WITHOUT_CLASSIFICATION	1.1873120331148465E-5	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.999987540701953	WITHOUT_CLASSIFICATION	1.2459298047033086E-5	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999926500047874	WITHOUT_CLASSIFICATION	7.349995212483357E-6	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999991896450122	WITHOUT_CLASSIFICATION	8.103549877177659E-7	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.9999443987457416	WITHOUT_CLASSIFICATION	5.560125425833133E-5	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999824990079387	WITHOUT_CLASSIFICATION	1.75009920613041E-5	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9997927349800328	WITHOUT_CLASSIFICATION	2.072650199670967E-4	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999780253409015	WITHOUT_CLASSIFICATION	2.1974659098446936E-5	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999927786049432	WITHOUT_CLASSIFICATION	7.221395056699368E-6	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999963046792746	WITHOUT_CLASSIFICATION	3.695320725323314E-6	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999959801032933	WITHOUT_CLASSIFICATION	4.019896706717603E-6	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.9995877002071554	WITHOUT_CLASSIFICATION	4.1229979284469775E-4	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999978015896184	WITHOUT_CLASSIFICATION	2.1984103815631866E-6	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999998045437022	WITHOUT_CLASSIFICATION	1.954562978423718E-7	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999982695361325	WITHOUT_CLASSIFICATION	1.73046386744669E-6	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9999373418489733	WITHOUT_CLASSIFICATION	6.265815102667562E-5	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999821065340303	WITHOUT_CLASSIFICATION	1.7893465969761823E-5	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.999923321586509	WITHOUT_CLASSIFICATION	7.66784134910112E-5	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999950531044369	WITHOUT_CLASSIFICATION	4.946895563066696E-6	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999920432326314	WITHOUT_CLASSIFICATION	7.956767368648272E-6	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999851870247967	WITHOUT_CLASSIFICATION	1.4812975203393492E-5	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999037036527311	WITHOUT_CLASSIFICATION	9.629634726898336E-5	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999924923803243	WITHOUT_CLASSIFICATION	7.507619675710962E-6	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999037036527311	WITHOUT_CLASSIFICATION	9.629634726898336E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999851198292845	WITHOUT_CLASSIFICATION	1.488017071558302E-5	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.999964696352408	WITHOUT_CLASSIFICATION	3.530364759198059E-5	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999934545541301	WITHOUT_CLASSIFICATION	6.545445869907793E-6	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9976429912172254	WITHOUT_CLASSIFICATION	0.0023570087827744558	IMPLEMENTATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999914345369777	WITHOUT_CLASSIFICATION	8.56546302236183E-6	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9995698680632731	WITHOUT_CLASSIFICATION	4.3013193672690394E-4	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9999699312394762	WITHOUT_CLASSIFICATION	3.0068760523789792E-5	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999975064734867	WITHOUT_CLASSIFICATION	2.4935265132509677E-6	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999914899106612	WITHOUT_CLASSIFICATION	8.510089338705357E-6	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9999898985656427	WITHOUT_CLASSIFICATION	1.0101434357331392E-5	IMPLEMENTATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9949802370850259	WITHOUT_CLASSIFICATION	0.005019762914974112	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9998681789964738	WITHOUT_CLASSIFICATION	1.318210035261786E-4	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9998026279086102	WITHOUT_CLASSIFICATION	1.9737209138986062E-4	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999933650829903	WITHOUT_CLASSIFICATION	6.634917009735424E-6	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9945627214358347	WITHOUT_CLASSIFICATION	0.005437278564165327	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.999800450438833	WITHOUT_CLASSIFICATION	1.9954956116695815E-4	IMPLEMENTATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999987745363367	WITHOUT_CLASSIFICATION	1.2254636633371127E-6	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999845424110907	WITHOUT_CLASSIFICATION	1.54575889092512E-5	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999199453268828	WITHOUT_CLASSIFICATION	8.005467311721102E-5	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999403255941072	WITHOUT_CLASSIFICATION	5.967440589276121E-5	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999954569651354	WITHOUT_CLASSIFICATION	4.543034864697292E-6	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.99997274566467	WITHOUT_CLASSIFICATION	2.7254335329952682E-5	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999670981059275	WITHOUT_CLASSIFICATION	3.2901894072455904E-5	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9998490029323908	WITHOUT_CLASSIFICATION	1.5099706760933636E-4	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999790307875098	WITHOUT_CLASSIFICATION	2.0969212490147936E-5	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999836513989099	WITHOUT_CLASSIFICATION	1.6348601090157595E-5	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999961990420283	WITHOUT_CLASSIFICATION	3.8009579717839275E-6	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999925376935606	WITHOUT_CLASSIFICATION	7.462306439365689E-6	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999963268809369	WITHOUT_CLASSIFICATION	3.673119063000723E-6	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999968629877642	WITHOUT_CLASSIFICATION	3.137012235751641E-6	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998410839721987	WITHOUT_CLASSIFICATION	1.5891602780121572E-4	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998157209738926	WITHOUT_CLASSIFICATION	1.842790261072801E-4	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9997505723722637	WITHOUT_CLASSIFICATION	2.4942762773627467E-4	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9999969678268662	WITHOUT_CLASSIFICATION	3.0321731337207355E-6	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999950350597925	WITHOUT_CLASSIFICATION	4.964940207484899E-6	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9999982742599851	WITHOUT_CLASSIFICATION	1.7257400149452436E-6	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999978073433737	WITHOUT_CLASSIFICATION	2.1926566263141825E-6	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999754748388733	WITHOUT_CLASSIFICATION	2.4525161126783512E-5	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999938177091408	WITHOUT_CLASSIFICATION	6.182290859286782E-6	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9997262043298608	WITHOUT_CLASSIFICATION	2.737956701392822E-4	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999917811336242	WITHOUT_CLASSIFICATION	8.218866375865037E-6	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999939931659683	WITHOUT_CLASSIFICATION	6.006834031754433E-6	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999993125628432	WITHOUT_CLASSIFICATION	6.874371567772564E-7	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9998479144829316	WITHOUT_CLASSIFICATION	1.5208551706846678E-4	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9998479144829316	WITHOUT_CLASSIFICATION	1.5208551706846678E-4	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999843309391342	WITHOUT_CLASSIFICATION	1.566906086577557E-5	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9998346361727162	WITHOUT_CLASSIFICATION	1.6536382728376173E-4	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999944382698982	WITHOUT_CLASSIFICATION	5.56173010179025E-6	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999985121493102	WITHOUT_CLASSIFICATION	1.4878506898105927E-6	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999987599157973	WITHOUT_CLASSIFICATION	1.240084202635425E-6	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999931438046991	WITHOUT_CLASSIFICATION	6.856195300965282E-6	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.999999221055262	WITHOUT_CLASSIFICATION	7.789447379872781E-7	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999521712350994	WITHOUT_CLASSIFICATION	4.782876490067479E-5	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999961338739791	WITHOUT_CLASSIFICATION	3.866126020959346E-6	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999965256126792	WITHOUT_CLASSIFICATION	3.4743873208100548E-6	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999961891287116	WITHOUT_CLASSIFICATION	3.8108712883430723E-6	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999996341891302	WITHOUT_CLASSIFICATION	3.658108698429858E-7	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.999999778417805	WITHOUT_CLASSIFICATION	2.21582194995208E-7	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999961899750047	WITHOUT_CLASSIFICATION	3.8100249953089986E-6	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999991841349966	WITHOUT_CLASSIFICATION	8.158650033801757E-7	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9995134987658939	WITHOUT_CLASSIFICATION	4.8650123410601953E-4	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999738457913183	WITHOUT_CLASSIFICATION	2.6154208681724072E-5	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999817863036771	WITHOUT_CLASSIFICATION	1.821369632289701E-5	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999950673449689	WITHOUT_CLASSIFICATION	4.932655031080621E-6	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999804345896618	WITHOUT_CLASSIFICATION	1.956541033831804E-5	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.9998716743173894	WITHOUT_CLASSIFICATION	1.2832568261049194E-4	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9999482914100422	WITHOUT_CLASSIFICATION	5.170858995787109E-5	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.99859734630874	WITHOUT_CLASSIFICATION	0.0014026536912600408	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999988387127271	WITHOUT_CLASSIFICATION	1.1612872728844356E-6	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999814153005545	WITHOUT_CLASSIFICATION	1.8584699445457872E-5	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999902297666398	WITHOUT_CLASSIFICATION	9.77023336033726E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999993187368347	WITHOUT_CLASSIFICATION	6.812631653176071E-7	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999942486571382	WITHOUT_CLASSIFICATION	5.751342861820074E-6	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999428826575373	WITHOUT_CLASSIFICATION	5.7117342462785434E-5	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999976101784065	WITHOUT_CLASSIFICATION	2.3898215935343523E-6	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9997601683255963	WITHOUT_CLASSIFICATION	2.39831674403563E-4	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999703477949551	WITHOUT_CLASSIFICATION	2.9652205044854844E-5	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999973766273825	WITHOUT_CLASSIFICATION	2.623372617459063E-6	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999933208769829	WITHOUT_CLASSIFICATION	6.679123017101783E-6	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999987561327724	WITHOUT_CLASSIFICATION	1.2438672275741302E-6	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999749679298151	WITHOUT_CLASSIFICATION	2.5032070184869276E-5	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9998608998021162	WITHOUT_CLASSIFICATION	1.3910019788380458E-4	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9998176032876285	WITHOUT_CLASSIFICATION	1.8239671237152067E-4	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999954038817845	WITHOUT_CLASSIFICATION	4.5961182154682115E-6	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9998683243618981	WITHOUT_CLASSIFICATION	1.3167563810189724E-4	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999722454718086	WITHOUT_CLASSIFICATION	2.775452819147535E-5	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999530739047774	WITHOUT_CLASSIFICATION	4.6926095222675615E-5	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999927328151282	WITHOUT_CLASSIFICATION	7.267184871741669E-6	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999906552511613	WITHOUT_CLASSIFICATION	9.344748838784803E-6	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999592998436886	WITHOUT_CLASSIFICATION	4.070015631136804E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999969080161658	WITHOUT_CLASSIFICATION	3.0919838341713004E-6	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999979530503174	WITHOUT_CLASSIFICATION	2.0469496826904964E-6	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999997395233896	WITHOUT_CLASSIFICATION	2.6047661040355513E-7	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.9997404039065785	WITHOUT_CLASSIFICATION	2.5959609342151153E-4	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999850242076465	WITHOUT_CLASSIFICATION	1.4975792353535484E-5	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.999998779757682	WITHOUT_CLASSIFICATION	1.220242317969312E-6	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999873775157895	WITHOUT_CLASSIFICATION	1.262248421066427E-5	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999924699815653	WITHOUT_CLASSIFICATION	7.530018434650565E-6	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999848104236361	WITHOUT_CLASSIFICATION	1.518957636407082E-5	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999900384113222	WITHOUT_CLASSIFICATION	9.961588677760359E-6	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.999998940897226	WITHOUT_CLASSIFICATION	1.0591027740030593E-6	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999964453169203	WITHOUT_CLASSIFICATION	3.5546830797037672E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999918299750066	WITHOUT_CLASSIFICATION	8.170024993545995E-6	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9998326791796635	WITHOUT_CLASSIFICATION	1.6732082033657711E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999944550047066	WITHOUT_CLASSIFICATION	5.5449952933526495E-6	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999937494703548	WITHOUT_CLASSIFICATION	6.250529645185816E-6	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.999986177891876	WITHOUT_CLASSIFICATION	1.3822108123798405E-5	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999858198560169	WITHOUT_CLASSIFICATION	1.418014398313932E-5	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999937618746105	WITHOUT_CLASSIFICATION	6.238125389380212E-6	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9999506572016988	WITHOUT_CLASSIFICATION	4.934279830110447E-5	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9998182815405565	WITHOUT_CLASSIFICATION	1.8171845944343383E-4	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9998267890068917	WITHOUT_CLASSIFICATION	1.732109931082358E-4	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999918329346282	WITHOUT_CLASSIFICATION	8.167065371854599E-6	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.9998586248631229	WITHOUT_CLASSIFICATION	1.413751368770823E-4	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999621872367298	WITHOUT_CLASSIFICATION	3.781276327019218E-5	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999574208799996	WITHOUT_CLASSIFICATION	4.257912000040259E-5	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999938393583836	WITHOUT_CLASSIFICATION	6.160641616489598E-6	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999111349321071	WITHOUT_CLASSIFICATION	8.886506789279846E-5	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.999867986279891	WITHOUT_CLASSIFICATION	1.3201372010902652E-4	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9998470940254581	WITHOUT_CLASSIFICATION	1.529059745418532E-4	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9998446682556069	WITHOUT_CLASSIFICATION	1.553317443930579E-4	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.999833922459643	WITHOUT_CLASSIFICATION	1.6607754035703152E-4	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9998450391853778	WITHOUT_CLASSIFICATION	1.549608146221939E-4	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9998325138064011	WITHOUT_CLASSIFICATION	1.6748619359884206E-4	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.99982796317036	WITHOUT_CLASSIFICATION	1.72036829639972E-4	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9998272312995854	WITHOUT_CLASSIFICATION	1.7276870041458374E-4	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9998256011191101	WITHOUT_CLASSIFICATION	1.7439888088980972E-4	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.999831376303161	WITHOUT_CLASSIFICATION	1.6862369683904866E-4	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9998349784526094	WITHOUT_CLASSIFICATION	1.6502154739060244E-4	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9998187499161711	WITHOUT_CLASSIFICATION	1.8125008382887615E-4	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9998082350229904	WITHOUT_CLASSIFICATION	1.9176497700969605E-4	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9998200597754389	WITHOUT_CLASSIFICATION	1.7994022456120217E-4	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9998046089995957	WITHOUT_CLASSIFICATION	1.9539100040444075E-4	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9998036314893765	WITHOUT_CLASSIFICATION	1.9636851062356428E-4	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9998022520657269	WITHOUT_CLASSIFICATION	1.9774793427310372E-4	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9998116326715792	WITHOUT_CLASSIFICATION	1.883673284207051E-4	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9998082125613807	WITHOUT_CLASSIFICATION	1.9178743861927858E-4	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.999806346306581	WITHOUT_CLASSIFICATION	1.936536934189149E-4	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9998860945221084	WITHOUT_CLASSIFICATION	1.1390547789154768E-4	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999815524419982	WITHOUT_CLASSIFICATION	1.844755800183875E-5	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9998927754052729	WITHOUT_CLASSIFICATION	1.0722459472707309E-4	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999580340364835	WITHOUT_CLASSIFICATION	4.1965963516402333E-5	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.999936858654714	WITHOUT_CLASSIFICATION	6.314134528597368E-5	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999969748891847	WITHOUT_CLASSIFICATION	3.0251108153188177E-6	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999896234361174	WITHOUT_CLASSIFICATION	1.0376563882717443E-5	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9996079855757403	WITHOUT_CLASSIFICATION	3.920144242597284E-4	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999865592304755	WITHOUT_CLASSIFICATION	1.3440769524522846E-5	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999963408763708	WITHOUT_CLASSIFICATION	3.6591236291857318E-6	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9993948686389407	WITHOUT_CLASSIFICATION	6.051313610593063E-4	IMPLEMENTATION
// integer division	WITHOUT_CLASSIFICATION	0.9999773750836308	WITHOUT_CLASSIFICATION	2.262491636923876E-5	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999976407283769	WITHOUT_CLASSIFICATION	2.359271623040298E-6	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999901228111981	WITHOUT_CLASSIFICATION	9.8771888019117E-6	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999901228111981	WITHOUT_CLASSIFICATION	9.8771888019117E-6	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999966829331479	WITHOUT_CLASSIFICATION	3.3170668519718476E-6	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999974069344607	WITHOUT_CLASSIFICATION	2.593065539303434E-6	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999982712246335	WITHOUT_CLASSIFICATION	1.7287753665459547E-6	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999563196176453	WITHOUT_CLASSIFICATION	4.368038235477483E-5	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.99996664299714	WITHOUT_CLASSIFICATION	3.335700286004329E-5	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999878876178556	WITHOUT_CLASSIFICATION	1.2112382144295615E-5	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.999857080712968	WITHOUT_CLASSIFICATION	1.4291928703202947E-4	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999937217679579	WITHOUT_CLASSIFICATION	6.27823204207558E-6	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9998706007228406	WITHOUT_CLASSIFICATION	1.293992771593436E-4	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9999129622976464	WITHOUT_CLASSIFICATION	8.703770235353738E-5	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999877302554937	WITHOUT_CLASSIFICATION	1.226974450628891E-5	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.999993700789085	WITHOUT_CLASSIFICATION	6.299210915009391E-6	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9998551035755608	WITHOUT_CLASSIFICATION	1.4489642443905936E-4	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999941574200524	WITHOUT_CLASSIFICATION	5.842579947506411E-6	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9995255663647935	WITHOUT_CLASSIFICATION	4.744336352066112E-4	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.9999247357251679	WITHOUT_CLASSIFICATION	7.526427483204599E-5	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.99995768352603	WITHOUT_CLASSIFICATION	4.231647397002359E-5	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999947690747777	WITHOUT_CLASSIFICATION	5.23092522223468E-6	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.999948845954849	WITHOUT_CLASSIFICATION	5.115404515095254E-5	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9996148640798049	WITHOUT_CLASSIFICATION	3.851359201950795E-4	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999009474331088	WITHOUT_CLASSIFICATION	9.905256689125864E-5	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999987460382361	WITHOUT_CLASSIFICATION	1.253961763890241E-6	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9998925987974931	WITHOUT_CLASSIFICATION	1.0740120250687822E-4	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999974727796006	WITHOUT_CLASSIFICATION	2.5272203993241677E-6	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999713325349356	WITHOUT_CLASSIFICATION	2.866746506444358E-5	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999907356038448	WITHOUT_CLASSIFICATION	9.264396155163135E-6	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999861854807485	WITHOUT_CLASSIFICATION	1.3814519251474744E-5	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999740365675298	WITHOUT_CLASSIFICATION	2.5963432470224947E-5	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.999998279947416	WITHOUT_CLASSIFICATION	1.7200525840480513E-6	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9998299293088411	WITHOUT_CLASSIFICATION	1.7007069115892412E-4	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999512446415082	WITHOUT_CLASSIFICATION	4.875535849180517E-5	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999886671232655	WITHOUT_CLASSIFICATION	1.1332876734522817E-5	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9995706997866197	WITHOUT_CLASSIFICATION	4.293002133803172E-4	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9998392269935864	WITHOUT_CLASSIFICATION	1.6077300641360054E-4	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999668320892541	WITHOUT_CLASSIFICATION	3.316791074593747E-5	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999738469843299	WITHOUT_CLASSIFICATION	2.615301567004922E-5	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999882538388728	WITHOUT_CLASSIFICATION	1.1746161127139772E-5	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999932442568008	WITHOUT_CLASSIFICATION	6.755743199177594E-6	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999977946307707	WITHOUT_CLASSIFICATION	2.2053692292937817E-6	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999968269103927	WITHOUT_CLASSIFICATION	3.17308960718617E-6	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999983816847542	WITHOUT_CLASSIFICATION	1.6183152457245378E-6	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999292285121334	WITHOUT_CLASSIFICATION	7.077148786659852E-5	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999861334092711	WITHOUT_CLASSIFICATION	1.3866590728807885E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9998165328895003	WITHOUT_CLASSIFICATION	1.8346711049967325E-4	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9998165328895003	WITHOUT_CLASSIFICATION	1.8346711049967325E-4	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999842007454234	WITHOUT_CLASSIFICATION	1.5799254576608274E-5	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999820086684845	WITHOUT_CLASSIFICATION	1.799133151547516E-5	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999781357049022	WITHOUT_CLASSIFICATION	2.1864295097825448E-5	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9999705910859924	WITHOUT_CLASSIFICATION	2.940891400767916E-5	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999750091506534	WITHOUT_CLASSIFICATION	2.4990849346516664E-5	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9999519848881404	WITHOUT_CLASSIFICATION	4.801511185955733E-5	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999957456502665	WITHOUT_CLASSIFICATION	4.2543497334879045E-6	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.999492263810336	WITHOUT_CLASSIFICATION	5.077361896640046E-4	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999886788791734	WITHOUT_CLASSIFICATION	1.1321120826587097E-5	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999916519088485	WITHOUT_CLASSIFICATION	8.348091151499131E-6	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999951410124943	WITHOUT_CLASSIFICATION	4.8589875056302496E-6	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999954342760863	WITHOUT_CLASSIFICATION	4.565723913786879E-6	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999985916787385	WITHOUT_CLASSIFICATION	1.4083212614552424E-6	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999924743337713	WITHOUT_CLASSIFICATION	7.525666228683965E-6	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9995146779375138	WITHOUT_CLASSIFICATION	4.85322062486184E-4	IMPLEMENTATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9998505392874805	WITHOUT_CLASSIFICATION	1.4946071251958508E-4	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.999968662836523	WITHOUT_CLASSIFICATION	3.1337163477019934E-5	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999961237422521	WITHOUT_CLASSIFICATION	3.876257747873038E-6	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.999999779128547	WITHOUT_CLASSIFICATION	2.2087145302016483E-7	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999956991930056	WITHOUT_CLASSIFICATION	4.3008069943966835E-6	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999879693127801	WITHOUT_CLASSIFICATION	1.203068721982473E-5	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999879693127801	WITHOUT_CLASSIFICATION	1.203068721982473E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999875474370127	WITHOUT_CLASSIFICATION	1.2452562987423897E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999875474370127	WITHOUT_CLASSIFICATION	1.2452562987423897E-5	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999948899805695	WITHOUT_CLASSIFICATION	5.110019430569474E-6	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999908911838619	WITHOUT_CLASSIFICATION	9.108816138125243E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999890836727089	WITHOUT_CLASSIFICATION	1.0916327291103355E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999872284423208	WITHOUT_CLASSIFICATION	1.2771557679250095E-5	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.999979810419345	WITHOUT_CLASSIFICATION	2.0189580655043385E-5	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999784975036211	WITHOUT_CLASSIFICATION	2.1502496378997098E-5	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9997962729603593	WITHOUT_CLASSIFICATION	2.0372703964075613E-4	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9999724992213321	WITHOUT_CLASSIFICATION	2.750077866784957E-5	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999202333538607	WITHOUT_CLASSIFICATION	7.976664613933294E-5	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999057825706921	WITHOUT_CLASSIFICATION	9.421742930785715E-5	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.999931450676624	WITHOUT_CLASSIFICATION	6.854932337592548E-5	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999823911171764	WITHOUT_CLASSIFICATION	1.760888282368566E-5	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999934248494002	WITHOUT_CLASSIFICATION	6.575150599835483E-6	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999958823449089	WITHOUT_CLASSIFICATION	4.117655091170677E-6	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999977348210067	WITHOUT_CLASSIFICATION	2.2651789932798714E-6	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.9999205956775175	WITHOUT_CLASSIFICATION	7.940432248248073E-5	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9995560090866753	WITHOUT_CLASSIFICATION	4.4399091332468987E-4	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999484672261314	WITHOUT_CLASSIFICATION	5.1532773868612116E-5	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9999797041331699	WITHOUT_CLASSIFICATION	2.0295866829944085E-5	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9998157355315519	WITHOUT_CLASSIFICATION	1.8426446844805962E-4	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999544424645632	WITHOUT_CLASSIFICATION	4.555753543682941E-5	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999975630969141	WITHOUT_CLASSIFICATION	2.436903085900823E-6	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999781819431306	WITHOUT_CLASSIFICATION	2.1818056869434512E-5	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999961990420283	WITHOUT_CLASSIFICATION	3.8009579717839275E-6	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999931438046991	WITHOUT_CLASSIFICATION	6.856195300965282E-6	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9996232141464811	WITHOUT_CLASSIFICATION	3.7678585351885166E-4	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999998443419229	WITHOUT_CLASSIFICATION	1.5565807700907643E-7	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999826078842464	WITHOUT_CLASSIFICATION	1.7392115753582936E-5	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999323883424684	WITHOUT_CLASSIFICATION	6.761165753151376E-5	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999849698820998	WITHOUT_CLASSIFICATION	1.5030117900119841E-5	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999849698820998	WITHOUT_CLASSIFICATION	1.5030117900119841E-5	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999943472179027	WITHOUT_CLASSIFICATION	5.652782097341252E-6	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999885041798037	WITHOUT_CLASSIFICATION	1.1495820196408381E-5	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999612602438844	WITHOUT_CLASSIFICATION	3.87397561156532E-5	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999957754608196	WITHOUT_CLASSIFICATION	4.224539180401948E-6	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999811183388071	WITHOUT_CLASSIFICATION	1.8881661192967284E-5	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9999786492432445	WITHOUT_CLASSIFICATION	2.1350756755460854E-5	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999950091061302	WITHOUT_CLASSIFICATION	4.990893869891095E-6	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.999905280230608	WITHOUT_CLASSIFICATION	9.471976939193169E-5	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999884140619306	WITHOUT_CLASSIFICATION	1.15859380694092E-5	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999887901910375	WITHOUT_CLASSIFICATION	1.1209808962515738E-5	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9999954690903239	WITHOUT_CLASSIFICATION	4.530909676200105E-6	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999834194581584	WITHOUT_CLASSIFICATION	1.6580541841654905E-5	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999793003823578	WITHOUT_CLASSIFICATION	2.0699617642120164E-5	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999951040429104	WITHOUT_CLASSIFICATION	4.895957089661771E-6	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999838590182107	WITHOUT_CLASSIFICATION	1.6140981789301822E-5	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999983503442387	WITHOUT_CLASSIFICATION	1.6496557613142474E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999215240963747	WITHOUT_CLASSIFICATION	7.847590362522155E-5	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999919300274326	WITHOUT_CLASSIFICATION	8.069972567386543E-6	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999962084203957	WITHOUT_CLASSIFICATION	3.791579604300128E-6	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999984930717108	WITHOUT_CLASSIFICATION	1.5069282892454036E-6	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999988788432808	WITHOUT_CLASSIFICATION	1.1211567191592983E-6	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999984896578655	WITHOUT_CLASSIFICATION	1.5103421344659705E-6	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9998760630530673	WITHOUT_CLASSIFICATION	1.2393694693275695E-4	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9998826203374134	WITHOUT_CLASSIFICATION	1.1737966258661486E-4	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999893178047045	WITHOUT_CLASSIFICATION	1.0682195295545E-5	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9998044411124904	WITHOUT_CLASSIFICATION	1.9555888750949176E-4	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999901341096127	WITHOUT_CLASSIFICATION	9.865890387209596E-6	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999908274640698	WITHOUT_CLASSIFICATION	9.172535930302318E-6	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999869775262573	WITHOUT_CLASSIFICATION	1.3022473742708187E-5	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.999988898651802	WITHOUT_CLASSIFICATION	1.1101348198080575E-5	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.999918554693588	WITHOUT_CLASSIFICATION	8.144530641195293E-5	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999265684305717	WITHOUT_CLASSIFICATION	7.343156942838183E-5	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999319244103629	WITHOUT_CLASSIFICATION	6.807558963704523E-5	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.999997003601634	WITHOUT_CLASSIFICATION	2.996398366011095E-6	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999985533831802	WITHOUT_CLASSIFICATION	1.4466168198725585E-6	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999936468297782	WITHOUT_CLASSIFICATION	6.353170221803758E-6	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999683606882699	WITHOUT_CLASSIFICATION	3.163931173009476E-5	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9998714236423725	WITHOUT_CLASSIFICATION	1.2857635762759194E-4	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999646446336141	WITHOUT_CLASSIFICATION	3.535536638590595E-5	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999851289460815	WITHOUT_CLASSIFICATION	1.4871053918598563E-5	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999996407036025	WITHOUT_CLASSIFICATION	3.59296397422362E-7	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999976449453937	WITHOUT_CLASSIFICATION	2.355054606214998E-6	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9999627887026115	WITHOUT_CLASSIFICATION	3.721129738864949E-5	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9999321487741003	WITHOUT_CLASSIFICATION	6.785122589976248E-5	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9998228955323571	WITHOUT_CLASSIFICATION	1.7710446764277046E-4	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999964016213616	WITHOUT_CLASSIFICATION	3.598378638331271E-6	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.999929481206521	WITHOUT_CLASSIFICATION	7.051879347892989E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999986752392276	WITHOUT_CLASSIFICATION	1.3247607724320637E-6	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999832414169182	WITHOUT_CLASSIFICATION	1.6758583081878036E-5	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9999343693777452	WITHOUT_CLASSIFICATION	6.563062225481928E-5	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.999838874367107	WITHOUT_CLASSIFICATION	1.6112563289299948E-4	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9998516648369646	WITHOUT_CLASSIFICATION	1.483351630354002E-4	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9998584467985785	WITHOUT_CLASSIFICATION	1.415532014215035E-4	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.999882340653495	WITHOUT_CLASSIFICATION	1.1765934650506332E-4	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999542946768569	WITHOUT_CLASSIFICATION	4.570532314303287E-5	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9997803168546786	WITHOUT_CLASSIFICATION	2.1968314532141227E-4	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9997571481629471	WITHOUT_CLASSIFICATION	2.428518370529265E-4	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.999998607176214	WITHOUT_CLASSIFICATION	1.3928237860248605E-6	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999902769108304	WITHOUT_CLASSIFICATION	9.723089169607753E-6	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999965757969748	WITHOUT_CLASSIFICATION	3.424203025238674E-6	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.99987030004736	WITHOUT_CLASSIFICATION	1.296999526400339E-4	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.999838874367107	WITHOUT_CLASSIFICATION	1.6112563289299948E-4	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9998584467985785	WITHOUT_CLASSIFICATION	1.415532014215035E-4	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9998516648369646	WITHOUT_CLASSIFICATION	1.483351630354002E-4	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9997577801677902	WITHOUT_CLASSIFICATION	2.4221983220976655E-4	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.999861318114244	WITHOUT_CLASSIFICATION	1.3868188575611934E-4	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999788406137443	WITHOUT_CLASSIFICATION	2.115938625573827E-5	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9999738580798202	WITHOUT_CLASSIFICATION	2.6141920179804996E-5	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9991257307016322	WITHOUT_CLASSIFICATION	8.742692983677373E-4	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999479669108872	WITHOUT_CLASSIFICATION	5.2033089112699406E-5	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999433584688292	WITHOUT_CLASSIFICATION	5.664153117081358E-5	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999617072355581	WITHOUT_CLASSIFICATION	3.829276444187574E-5	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999665497906814	WITHOUT_CLASSIFICATION	3.345020931861265E-5	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999862709700865	WITHOUT_CLASSIFICATION	1.3729029913411817E-5	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999822769943113	WITHOUT_CLASSIFICATION	1.7723005688766213E-5	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999933687561134	WITHOUT_CLASSIFICATION	6.631243886486721E-6	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999664893802384	WITHOUT_CLASSIFICATION	3.351061976169127E-5	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9999611411948625	WITHOUT_CLASSIFICATION	3.885880513760679E-5	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999997855039213	WITHOUT_CLASSIFICATION	2.144960787721241E-7	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9997495589464702	WITHOUT_CLASSIFICATION	2.5044105352978153E-4	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.9999899149346934	WITHOUT_CLASSIFICATION	1.008506530661995E-5	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999326486078255	WITHOUT_CLASSIFICATION	6.73513921744589E-5	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999326486078255	WITHOUT_CLASSIFICATION	6.73513921744589E-5	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9996354554512413	WITHOUT_CLASSIFICATION	3.6454454875861424E-4	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.9999923222220348	WITHOUT_CLASSIFICATION	7.67777796527689E-6	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9997858510426824	WITHOUT_CLASSIFICATION	2.1414895731768286E-4	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9997585123821154	WITHOUT_CLASSIFICATION	2.4148761788460261E-4	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999512490745247	WITHOUT_CLASSIFICATION	4.8750925475401134E-5	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999955472103994	WITHOUT_CLASSIFICATION	4.45278960062351E-6	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.99999632477676	WITHOUT_CLASSIFICATION	3.6752232399733214E-6	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999929789183396	WITHOUT_CLASSIFICATION	7.021081660473784E-6	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999972811390031	WITHOUT_CLASSIFICATION	2.718860996824899E-6	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999967686376764	WITHOUT_CLASSIFICATION	3.231362323638956E-6	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999889630985823	WITHOUT_CLASSIFICATION	1.1036901417753426E-5	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9998850620380602	WITHOUT_CLASSIFICATION	1.1493796193991104E-4	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999788493631258	WITHOUT_CLASSIFICATION	2.115063687416287E-5	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999914935181107	WITHOUT_CLASSIFICATION	8.506481889339248E-6	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999912361880545	WITHOUT_CLASSIFICATION	8.763811945495988E-6	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999861090226158	WITHOUT_CLASSIFICATION	1.3890977384236346E-5	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999164274781331	WITHOUT_CLASSIFICATION	8.357252186681936E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999998088538426	WITHOUT_CLASSIFICATION	1.9114615739886404E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999998088538426	WITHOUT_CLASSIFICATION	1.9114615739886404E-6	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9999190478397828	WITHOUT_CLASSIFICATION	8.095216021726375E-5	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9999199364380082	WITHOUT_CLASSIFICATION	8.006356199167545E-5	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999222064601434	WITHOUT_CLASSIFICATION	7.77935398565652E-5	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9998453092023193	WITHOUT_CLASSIFICATION	1.5469079768065812E-4	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999726568736255	WITHOUT_CLASSIFICATION	2.7343126374497498E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999998088538426	WITHOUT_CLASSIFICATION	1.9114615739886404E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999998088538426	WITHOUT_CLASSIFICATION	1.9114615739886404E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.99999388477913	WITHOUT_CLASSIFICATION	6.11522087004508E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.99999388477913	WITHOUT_CLASSIFICATION	6.11522087004508E-6	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999552868593176	WITHOUT_CLASSIFICATION	4.471314068249251E-5	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.999856009233338	WITHOUT_CLASSIFICATION	1.4399076666202893E-4	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.999997041565383	WITHOUT_CLASSIFICATION	2.9584346169903426E-6	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9990377188519549	WITHOUT_CLASSIFICATION	9.622811480451855E-4	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999997142174598	WITHOUT_CLASSIFICATION	2.8578254020147333E-6	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999997142174598	WITHOUT_CLASSIFICATION	2.8578254020147333E-6	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999952201401604	WITHOUT_CLASSIFICATION	4.7798598395786144E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999941923065143	WITHOUT_CLASSIFICATION	5.807693485694318E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999948921406115	WITHOUT_CLASSIFICATION	5.1078593884431044E-6	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.99996540079942	WITHOUT_CLASSIFICATION	3.459920058005822E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999938376624068	WITHOUT_CLASSIFICATION	6.1623375931700475E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999925000017793	WITHOUT_CLASSIFICATION	7.499998220756231E-6	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999938761734081	WITHOUT_CLASSIFICATION	6.12382659192126E-6	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999986177752856	WITHOUT_CLASSIFICATION	1.3822247142877902E-6	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999785420385645	WITHOUT_CLASSIFICATION	2.1457961435400383E-5	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999912870137336	WITHOUT_CLASSIFICATION	8.712986266355202E-6	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9995797625524953	WITHOUT_CLASSIFICATION	4.2023744750479956E-4	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.999945662131386	WITHOUT_CLASSIFICATION	5.4337868614066245E-5	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9998828265560497	WITHOUT_CLASSIFICATION	1.1717344395042305E-4	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999919451837775	WITHOUT_CLASSIFICATION	8.054816222406922E-6	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999861090226158	WITHOUT_CLASSIFICATION	1.3890977384236346E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999998088538426	WITHOUT_CLASSIFICATION	1.9114615739886404E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.99999388477913	WITHOUT_CLASSIFICATION	6.11522087004508E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999925000017793	WITHOUT_CLASSIFICATION	7.499998220756231E-6	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999980434542758	WITHOUT_CLASSIFICATION	1.9565457241434417E-6	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999980434542758	WITHOUT_CLASSIFICATION	1.9565457241434417E-6	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999923810595922	WITHOUT_CLASSIFICATION	7.618940407775204E-6	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999834440914122	WITHOUT_CLASSIFICATION	1.6555908587849058E-5	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999806353167715	WITHOUT_CLASSIFICATION	1.9364683228475243E-5	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999947578837877	WITHOUT_CLASSIFICATION	5.242116212365497E-6	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999866097370311	WITHOUT_CLASSIFICATION	1.3390262968893465E-5	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999714709309349	WITHOUT_CLASSIFICATION	2.8529069065217376E-5	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999944462137942	WITHOUT_CLASSIFICATION	5.5537862058993575E-6	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999980641453569	WITHOUT_CLASSIFICATION	1.9358546432517783E-6	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999741053188925	WITHOUT_CLASSIFICATION	2.5894681107477188E-5	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999878119628464	WITHOUT_CLASSIFICATION	1.2188037153755157E-5	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999763747233112	WITHOUT_CLASSIFICATION	2.36252766887777E-5	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999956578563318	WITHOUT_CLASSIFICATION	4.3421436681964675E-6	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999880901496214	WITHOUT_CLASSIFICATION	1.1909850378509779E-5	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999164274781331	WITHOUT_CLASSIFICATION	8.357252186681936E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.99999388477913	WITHOUT_CLASSIFICATION	6.11522087004508E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999941923065143	WITHOUT_CLASSIFICATION	5.807693485694318E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999948921406115	WITHOUT_CLASSIFICATION	5.1078593884431044E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999948921406115	WITHOUT_CLASSIFICATION	5.1078593884431044E-6	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999938376624068	WITHOUT_CLASSIFICATION	6.1623375931700475E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999925000017793	WITHOUT_CLASSIFICATION	7.499998220756231E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999925000017793	WITHOUT_CLASSIFICATION	7.499998220756231E-6	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999980434542758	WITHOUT_CLASSIFICATION	1.9565457241434417E-6	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9990460983091145	WITHOUT_CLASSIFICATION	9.539016908855254E-4	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.999996979442067	WITHOUT_CLASSIFICATION	3.0205579330558547E-6	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999990956356606	WITHOUT_CLASSIFICATION	9.043643393890527E-7	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999858276562913	WITHOUT_CLASSIFICATION	1.4172343708669081E-5	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.999994457860543	WITHOUT_CLASSIFICATION	5.5421394570156525E-6	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999963249891263	WITHOUT_CLASSIFICATION	3.6750108737467704E-6	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999331872957592	WITHOUT_CLASSIFICATION	6.68127042407576E-5	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999891194452947	WITHOUT_CLASSIFICATION	1.0880554705276767E-5	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.999976005108422	WITHOUT_CLASSIFICATION	2.3994891578063058E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999941923065143	WITHOUT_CLASSIFICATION	5.807693485694318E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999948921406115	WITHOUT_CLASSIFICATION	5.1078593884431044E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999948921406115	WITHOUT_CLASSIFICATION	5.1078593884431044E-6	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999938376624068	WITHOUT_CLASSIFICATION	6.1623375931700475E-6	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999980641453569	WITHOUT_CLASSIFICATION	1.9358546432517783E-6	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999878119628464	WITHOUT_CLASSIFICATION	1.2188037153755157E-5	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999939312415194	WITHOUT_CLASSIFICATION	6.068758480646507E-6	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999183683310373	WITHOUT_CLASSIFICATION	8.16316689626974E-5	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9998349741139155	WITHOUT_CLASSIFICATION	1.650258860844983E-4	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9998349741139155	WITHOUT_CLASSIFICATION	1.650258860844983E-4	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999846075490886	WITHOUT_CLASSIFICATION	1.5392450911441057E-5	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999881387734371	WITHOUT_CLASSIFICATION	1.186122656293854E-5	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999255822162532	WITHOUT_CLASSIFICATION	7.441778374681897E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999459139687639	WITHOUT_CLASSIFICATION	5.4086031236190396E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999666284944911	WITHOUT_CLASSIFICATION	3.337150550884054E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999666284944911	WITHOUT_CLASSIFICATION	3.337150550884054E-5	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999801214432088	WITHOUT_CLASSIFICATION	1.987855679125821E-5	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999801214432088	WITHOUT_CLASSIFICATION	1.987855679125821E-5	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999872288584744	WITHOUT_CLASSIFICATION	1.2771141525686947E-5	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999872288584744	WITHOUT_CLASSIFICATION	1.2771141525686947E-5	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9998679276925562	WITHOUT_CLASSIFICATION	1.32072307443856E-4	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999726276085468	WITHOUT_CLASSIFICATION	2.7372391453118687E-5	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999750031502104	WITHOUT_CLASSIFICATION	2.4996849789533984E-5	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999965544588169	WITHOUT_CLASSIFICATION	3.445541183061137E-6	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999884741249109	WITHOUT_CLASSIFICATION	1.1525875089110757E-5	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.999926906482282	WITHOUT_CLASSIFICATION	7.309351771795938E-5	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999903620473346	WITHOUT_CLASSIFICATION	9.637952665506862E-6	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.999756332122416	WITHOUT_CLASSIFICATION	2.4366787758401152E-4	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.999975735049406	WITHOUT_CLASSIFICATION	2.4264950594114326E-5	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999833922497371	WITHOUT_CLASSIFICATION	1.6607750262953363E-5	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999490019891908	WITHOUT_CLASSIFICATION	5.0998010809237676E-5	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999529317379043	WITHOUT_CLASSIFICATION	4.706826209563578E-5	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999931286133913	WITHOUT_CLASSIFICATION	6.871386608633458E-6	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.999988674158048	WITHOUT_CLASSIFICATION	1.1325841951928479E-5	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.999988674158048	WITHOUT_CLASSIFICATION	1.1325841951928479E-5	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999883741200004	WITHOUT_CLASSIFICATION	1.1625879999516124E-5	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999784975036211	WITHOUT_CLASSIFICATION	2.1502496378997098E-5	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999811159641553	WITHOUT_CLASSIFICATION	1.888403584476635E-5	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999996718854609	WITHOUT_CLASSIFICATION	3.281145390700049E-7	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999968398320492	WITHOUT_CLASSIFICATION	3.160167950743819E-6	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999957054045393	WITHOUT_CLASSIFICATION	4.2945954607526E-6	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.999997760965254	WITHOUT_CLASSIFICATION	2.2390347460543174E-6	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999973746635117	WITHOUT_CLASSIFICATION	2.625336488320147E-6	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999948803178382	WITHOUT_CLASSIFICATION	5.119682161764847E-6	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999982770500431	WITHOUT_CLASSIFICATION	1.7229499570558378E-6	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999977164086409	WITHOUT_CLASSIFICATION	2.283591358998797E-6	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999933749066798	WITHOUT_CLASSIFICATION	6.625093320109724E-6	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.99999979463349	WITHOUT_CLASSIFICATION	2.053665101629319E-7	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999931148631721	WITHOUT_CLASSIFICATION	6.885136827880721E-6	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999944403616495	WITHOUT_CLASSIFICATION	5.559638350492311E-6	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999983510731846	WITHOUT_CLASSIFICATION	1.6489268154958476E-6	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9999899499959201	WITHOUT_CLASSIFICATION	1.0050004079955705E-5	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999864035004805	WITHOUT_CLASSIFICATION	1.3596499519554587E-5	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999960258236121	WITHOUT_CLASSIFICATION	3.974176387858662E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999960258236121	WITHOUT_CLASSIFICATION	3.974176387858662E-6	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999885710687101	WITHOUT_CLASSIFICATION	1.1428931289827488E-5	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999344329601821	WITHOUT_CLASSIFICATION	6.556703981781919E-5	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.998420295216965	WITHOUT_CLASSIFICATION	0.0015797047830350209	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.998420295216965	WITHOUT_CLASSIFICATION	0.0015797047830350209	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999968884701795	WITHOUT_CLASSIFICATION	3.111529820426146E-6	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.999798268522813	WITHOUT_CLASSIFICATION	2.0173147718704367E-4	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9991313644327053	WITHOUT_CLASSIFICATION	8.686355672946156E-4	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9994826659762275	WITHOUT_CLASSIFICATION	5.173340237725111E-4	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999994926238407	WITHOUT_CLASSIFICATION	5.073761593161848E-7	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999965153227559	WITHOUT_CLASSIFICATION	3.484677244075673E-6	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999965153227559	WITHOUT_CLASSIFICATION	3.484677244075673E-6	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999927124519521	WITHOUT_CLASSIFICATION	7.287548047881004E-6	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999992246231176	WITHOUT_CLASSIFICATION	7.75376882355914E-7	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999915142899733	WITHOUT_CLASSIFICATION	8.485710026707359E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999397557445656	WITHOUT_CLASSIFICATION	6.0244255434456045E-5	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999344329601821	WITHOUT_CLASSIFICATION	6.556703981781919E-5	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9996508615689631	WITHOUT_CLASSIFICATION	3.491384310368469E-4	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9998766927660087	WITHOUT_CLASSIFICATION	1.233072339913293E-4	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9998766927660087	WITHOUT_CLASSIFICATION	1.233072339913293E-4	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999925591073816	WITHOUT_CLASSIFICATION	7.440892618289801E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999968974820287	WITHOUT_CLASSIFICATION	3.1025179713230313E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999968974820287	WITHOUT_CLASSIFICATION	3.1025179713230313E-6	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999442462091033	WITHOUT_CLASSIFICATION	5.575379089666163E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999442462091033	WITHOUT_CLASSIFICATION	5.575379089666163E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999442462091033	WITHOUT_CLASSIFICATION	5.575379089666163E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999968974820287	WITHOUT_CLASSIFICATION	3.1025179713230313E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999968974820287	WITHOUT_CLASSIFICATION	3.1025179713230313E-6	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999925591073816	WITHOUT_CLASSIFICATION	7.440892618289801E-6	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999899038156107	WITHOUT_CLASSIFICATION	1.0096184389341943E-5	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9999767699072087	WITHOUT_CLASSIFICATION	2.3230092791226562E-5	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999990267807498	WITHOUT_CLASSIFICATION	9.73219250194359E-7	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9997537544293169	WITHOUT_CLASSIFICATION	2.462455706830587E-4	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999883548495844	WITHOUT_CLASSIFICATION	1.1645150415713503E-5	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9997734440048498	WITHOUT_CLASSIFICATION	2.2655599515015448E-4	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999584529418605	WITHOUT_CLASSIFICATION	4.15470581394612E-5	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999782111348254	WITHOUT_CLASSIFICATION	2.1788865174489236E-5	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999977164086409	WITHOUT_CLASSIFICATION	2.283591358998797E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999968974820287	WITHOUT_CLASSIFICATION	3.1025179713230313E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999968974820287	WITHOUT_CLASSIFICATION	3.1025179713230313E-6	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.999998310833228	WITHOUT_CLASSIFICATION	1.6891667720289675E-6	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999510114029827	WITHOUT_CLASSIFICATION	4.89885970173611E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999635862987535	WITHOUT_CLASSIFICATION	3.6413701246518615E-5	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999967992624492	WITHOUT_CLASSIFICATION	3.2007375507740803E-6	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999369655332989	WITHOUT_CLASSIFICATION	6.303446670117566E-5	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9998829561073777	WITHOUT_CLASSIFICATION	1.1704389262229998E-4	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.999997270570826	WITHOUT_CLASSIFICATION	2.7294291741034996E-6	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999982687351034	WITHOUT_CLASSIFICATION	1.7312648965983023E-6	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999198977674814	WITHOUT_CLASSIFICATION	8.010223251861965E-5	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.999975350454993	WITHOUT_CLASSIFICATION	2.4649545007086764E-5	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9997789573187829	WITHOUT_CLASSIFICATION	2.2104268121719435E-4	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.999995212357401	WITHOUT_CLASSIFICATION	4.78764259900773E-6	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999938530213294	WITHOUT_CLASSIFICATION	6.146978670546589E-6	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999732289736664	WITHOUT_CLASSIFICATION	2.6771026333731692E-5	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999579529292622	WITHOUT_CLASSIFICATION	4.204707073792197E-5	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.999779845066643	WITHOUT_CLASSIFICATION	2.2015493335700317E-4	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.999779845066643	WITHOUT_CLASSIFICATION	2.2015493335700317E-4	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.999779845066643	WITHOUT_CLASSIFICATION	2.2015493335700317E-4	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999918513048848	WITHOUT_CLASSIFICATION	8.148695115209832E-6	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999976318489849	WITHOUT_CLASSIFICATION	2.368151015060762E-6	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999730600538491	WITHOUT_CLASSIFICATION	2.6939946150880165E-5	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999967545222803	WITHOUT_CLASSIFICATION	3.2454777196743567E-6	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9982303378647497	WITHOUT_CLASSIFICATION	0.0017696621352503031	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999929780985456	WITHOUT_CLASSIFICATION	7.021901454368036E-6	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999933504922033	WITHOUT_CLASSIFICATION	6.649507796745397E-6	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999954951473399	WITHOUT_CLASSIFICATION	4.504852660110106E-6	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999742232589252	WITHOUT_CLASSIFICATION	2.5776741074778544E-5	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999819758740861	WITHOUT_CLASSIFICATION	1.8024125913873616E-5	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999810265098875	WITHOUT_CLASSIFICATION	1.8973490112518152E-5	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.99998340114149	WITHOUT_CLASSIFICATION	1.6598858510095838E-5	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999927124519521	WITHOUT_CLASSIFICATION	7.287548047881004E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999968974820287	WITHOUT_CLASSIFICATION	3.1025179713230313E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999968974820287	WITHOUT_CLASSIFICATION	3.1025179713230313E-6	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999925591073816	WITHOUT_CLASSIFICATION	7.440892618289801E-6	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9997734440048498	WITHOUT_CLASSIFICATION	2.2655599515015448E-4	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999510114029827	WITHOUT_CLASSIFICATION	4.89885970173611E-5	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999967992624492	WITHOUT_CLASSIFICATION	3.2007375507740803E-6	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9998829561073777	WITHOUT_CLASSIFICATION	1.1704389262229998E-4	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999635862987535	WITHOUT_CLASSIFICATION	3.6413701246518615E-5	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.999997270570826	WITHOUT_CLASSIFICATION	2.7294291741034996E-6	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.999975350454993	WITHOUT_CLASSIFICATION	2.4649545007086764E-5	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999198977674814	WITHOUT_CLASSIFICATION	8.010223251861965E-5	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.999995212357401	WITHOUT_CLASSIFICATION	4.78764259900773E-6	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999930156411257	WITHOUT_CLASSIFICATION	6.984358874229457E-6	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999795894029713	WITHOUT_CLASSIFICATION	2.0410597028661266E-5	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999961152929265	WITHOUT_CLASSIFICATION	3.884707073451301E-6	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999966376750867	WITHOUT_CLASSIFICATION	3.3623249133147833E-6	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999920605183722	WITHOUT_CLASSIFICATION	7.939481627888753E-6	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999339379894039	WITHOUT_CLASSIFICATION	6.606201059607667E-5	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999945329161505	WITHOUT_CLASSIFICATION	5.467083849514595E-6	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999564239165113	WITHOUT_CLASSIFICATION	4.357608348872699E-5	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999700453764832	WITHOUT_CLASSIFICATION	2.995462351695968E-5	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999979326841487	WITHOUT_CLASSIFICATION	2.0673158512556647E-6	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999312345053374	WITHOUT_CLASSIFICATION	6.876549466266671E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999966161670509	WITHOUT_CLASSIFICATION	3.3838329491306435E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999638467379268	WITHOUT_CLASSIFICATION	3.6153262073107374E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999919293351865	WITHOUT_CLASSIFICATION	8.070664813438516E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999875413214573	WITHOUT_CLASSIFICATION	1.2458678542739452E-5	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.999997402581522	WITHOUT_CLASSIFICATION	2.5974184779988597E-6	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999994029044534	WITHOUT_CLASSIFICATION	5.970955464517284E-7	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9998583929721222	WITHOUT_CLASSIFICATION	1.4160702787777363E-4	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9998994790994263	WITHOUT_CLASSIFICATION	1.005209005736723E-4	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999180958038903	WITHOUT_CLASSIFICATION	8.190419610968815E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999742864000197	WITHOUT_CLASSIFICATION	2.571359998028044E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999984149030601	WITHOUT_CLASSIFICATION	1.5850969399665903E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999984149030601	WITHOUT_CLASSIFICATION	1.5850969399665903E-6	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999848549800472	WITHOUT_CLASSIFICATION	1.5145019952844398E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999945844867623	WITHOUT_CLASSIFICATION	5.415513237690276E-6	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999633269034435	WITHOUT_CLASSIFICATION	3.667309655650019E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999633269034435	WITHOUT_CLASSIFICATION	3.667309655650019E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999633269034435	WITHOUT_CLASSIFICATION	3.667309655650019E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9997068611749584	WITHOUT_CLASSIFICATION	2.931388250415555E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9997068611749584	WITHOUT_CLASSIFICATION	2.931388250415555E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9997068611749584	WITHOUT_CLASSIFICATION	2.931388250415555E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9997068611749584	WITHOUT_CLASSIFICATION	2.931388250415555E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9994376305924864	WITHOUT_CLASSIFICATION	5.623694075136177E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9994376305924864	WITHOUT_CLASSIFICATION	5.623694075136177E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9994376305924864	WITHOUT_CLASSIFICATION	5.623694075136177E-4	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.999388985748138	WITHOUT_CLASSIFICATION	6.110142518619704E-4	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.999388985748138	WITHOUT_CLASSIFICATION	6.110142518619704E-4	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9993502119740457	WITHOUT_CLASSIFICATION	6.497880259543852E-4	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9995049882756813	WITHOUT_CLASSIFICATION	4.950117243186415E-4	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999945844867623	WITHOUT_CLASSIFICATION	5.415513237690276E-6	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999989668480566	WITHOUT_CLASSIFICATION	1.0331519434524083E-6	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999633269034435	WITHOUT_CLASSIFICATION	3.667309655650019E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999633269034435	WITHOUT_CLASSIFICATION	3.667309655650019E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9997068611749584	WITHOUT_CLASSIFICATION	2.931388250415555E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9997068611749584	WITHOUT_CLASSIFICATION	2.931388250415555E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9997068611749584	WITHOUT_CLASSIFICATION	2.931388250415555E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9994376305924864	WITHOUT_CLASSIFICATION	5.623694075136177E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9994376305924864	WITHOUT_CLASSIFICATION	5.623694075136177E-4	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.999388985748138	WITHOUT_CLASSIFICATION	6.110142518619704E-4	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9995049882756813	WITHOUT_CLASSIFICATION	4.950117243186415E-4	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999770007005465	WITHOUT_CLASSIFICATION	2.2999299453602795E-5	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999770007005465	WITHOUT_CLASSIFICATION	2.2999299453602795E-5	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999847263535366	WITHOUT_CLASSIFICATION	1.527364646340842E-5	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999847263535366	WITHOUT_CLASSIFICATION	1.527364646340842E-5	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9998756678946927	WITHOUT_CLASSIFICATION	1.2433210530723784E-4	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9998756678946927	WITHOUT_CLASSIFICATION	1.2433210530723784E-4	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999135454782812	WITHOUT_CLASSIFICATION	8.645452171888646E-5	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999933477099008	WITHOUT_CLASSIFICATION	6.652290099233712E-6	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999933477099008	WITHOUT_CLASSIFICATION	6.652290099233712E-6	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999594011264649	WITHOUT_CLASSIFICATION	4.0598873535140645E-5	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999594011264649	WITHOUT_CLASSIFICATION	4.0598873535140645E-5	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999658841167796	WITHOUT_CLASSIFICATION	3.411588322038954E-5	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999862112724902	WITHOUT_CLASSIFICATION	1.3788727509806113E-5	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999862112724902	WITHOUT_CLASSIFICATION	1.3788727509806113E-5	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999998940888613	WITHOUT_CLASSIFICATION	1.0591113867785241E-7	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999357400372993	WITHOUT_CLASSIFICATION	6.425996270063862E-5	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.999994314364311	WITHOUT_CLASSIFICATION	5.685635689118186E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9997068611749584	WITHOUT_CLASSIFICATION	2.931388250415555E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9997068611749584	WITHOUT_CLASSIFICATION	2.931388250415555E-4	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999998940888613	WITHOUT_CLASSIFICATION	1.0591113867785241E-7	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999647765480256	WITHOUT_CLASSIFICATION	3.522345197443203E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999665999387386	WITHOUT_CLASSIFICATION	3.34000612613996E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999665999387386	WITHOUT_CLASSIFICATION	3.34000612613996E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999665999387386	WITHOUT_CLASSIFICATION	3.34000612613996E-5	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999130143269871	WITHOUT_CLASSIFICATION	8.698567301285261E-5	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999019940329034	WITHOUT_CLASSIFICATION	9.800596709657683E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9994082535679316	WITHOUT_CLASSIFICATION	5.917464320684065E-4	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9994082535679316	WITHOUT_CLASSIFICATION	5.917464320684065E-4	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9997530448620096	WITHOUT_CLASSIFICATION	2.469551379904943E-4	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999281473505071	WITHOUT_CLASSIFICATION	7.185264949298027E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999625600352811	WITHOUT_CLASSIFICATION	3.7439964718831043E-5	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999538966088999	WITHOUT_CLASSIFICATION	4.6103391100057487E-5	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9998721149768466	WITHOUT_CLASSIFICATION	1.278850231533694E-4	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999899514675615	WITHOUT_CLASSIFICATION	1.004853243858988E-5	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999899514675615	WITHOUT_CLASSIFICATION	1.004853243858988E-5	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999653887929213	WITHOUT_CLASSIFICATION	3.4611207078702335E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.999372874611826	WITHOUT_CLASSIFICATION	6.271253881741081E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.999372874611826	WITHOUT_CLASSIFICATION	6.271253881741081E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9997068611749584	WITHOUT_CLASSIFICATION	2.931388250415555E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999665999387386	WITHOUT_CLASSIFICATION	3.34000612613996E-5	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999019940329034	WITHOUT_CLASSIFICATION	9.800596709657683E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9994082535679316	WITHOUT_CLASSIFICATION	5.917464320684065E-4	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9997530448620096	WITHOUT_CLASSIFICATION	2.469551379904943E-4	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999281473505071	WITHOUT_CLASSIFICATION	7.185264949298027E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999625600352811	WITHOUT_CLASSIFICATION	3.7439964718831043E-5	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999538966088999	WITHOUT_CLASSIFICATION	4.6103391100057487E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.999372874611826	WITHOUT_CLASSIFICATION	6.271253881741081E-4	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999914439483643	WITHOUT_CLASSIFICATION	8.556051635759022E-6	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999985864231634	WITHOUT_CLASSIFICATION	1.4135768365390958E-6	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999952613947245	WITHOUT_CLASSIFICATION	4.738605275477336E-6	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999755674235555	WITHOUT_CLASSIFICATION	2.44325764445027E-5	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999953999990059	WITHOUT_CLASSIFICATION	4.60000099409032E-6	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999971389685449	WITHOUT_CLASSIFICATION	2.861031455075846E-6	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999943952519461	WITHOUT_CLASSIFICATION	5.604748053858787E-6	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999943952519461	WITHOUT_CLASSIFICATION	5.604748053858787E-6	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999827021077272	WITHOUT_CLASSIFICATION	1.729789227282853E-5	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999812670773066	WITHOUT_CLASSIFICATION	1.8732922693364408E-5	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999829237041059	WITHOUT_CLASSIFICATION	1.7076295894183677E-5	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999759199391668	WITHOUT_CLASSIFICATION	2.4080060833237827E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.999968470919582	WITHOUT_CLASSIFICATION	3.1529080417956456E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.999968470919582	WITHOUT_CLASSIFICATION	3.1529080417956456E-5	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999332141945186	WITHOUT_CLASSIFICATION	6.678580548133128E-5	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999894484796941	WITHOUT_CLASSIFICATION	1.0551520305872198E-5	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9998307249921015	WITHOUT_CLASSIFICATION	1.6927500789844146E-4	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9998307249921015	WITHOUT_CLASSIFICATION	1.6927500789844146E-4	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.999973265050675	WITHOUT_CLASSIFICATION	2.6734949324994776E-5	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999848138202847	WITHOUT_CLASSIFICATION	1.5186179715298412E-5	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9998721149768466	WITHOUT_CLASSIFICATION	1.278850231533694E-4	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999793457834562	WITHOUT_CLASSIFICATION	2.065421654385929E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999955044462665	WITHOUT_CLASSIFICATION	4.495553733430264E-6	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999425187383233	WITHOUT_CLASSIFICATION	5.748126167681004E-5	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999942617835509	WITHOUT_CLASSIFICATION	5.7382164491645635E-6	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.9999926976979427	WITHOUT_CLASSIFICATION	7.302302057283051E-6	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999929182816386	WITHOUT_CLASSIFICATION	7.0817183614786646E-6	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999921946726591	WITHOUT_CLASSIFICATION	7.805327340930075E-6	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999952868347941	WITHOUT_CLASSIFICATION	4.713165205947937E-6	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999908830427473	WITHOUT_CLASSIFICATION	9.11695725273104E-6	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999908830427473	WITHOUT_CLASSIFICATION	9.11695725273104E-6	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.999954966024166	WITHOUT_CLASSIFICATION	4.503397583404234E-5	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.999954966024166	WITHOUT_CLASSIFICATION	4.503397583404234E-5	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999952704441172	WITHOUT_CLASSIFICATION	4.729555882741959E-6	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.999992212098856	WITHOUT_CLASSIFICATION	7.787901143972748E-6	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.999992212098856	WITHOUT_CLASSIFICATION	7.787901143972748E-6	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.999992212098856	WITHOUT_CLASSIFICATION	7.787901143972748E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999305943927137	WITHOUT_CLASSIFICATION	6.940560728628192E-5	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.999997078454283	WITHOUT_CLASSIFICATION	2.9215457169369266E-6	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.999997078454283	WITHOUT_CLASSIFICATION	2.9215457169369266E-6	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999977772499401	WITHOUT_CLASSIFICATION	2.2227500598887924E-6	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9997095933739703	WITHOUT_CLASSIFICATION	2.904066260297613E-4	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999207486299886	WITHOUT_CLASSIFICATION	7.92513700113731E-5	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9996071516268588	WITHOUT_CLASSIFICATION	3.9284837314122593E-4	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999628586645384	WITHOUT_CLASSIFICATION	3.7141335461549085E-5	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9999143568750933	WITHOUT_CLASSIFICATION	8.564312490665684E-5	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999974171287126	WITHOUT_CLASSIFICATION	2.5828712874150745E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999638467379268	WITHOUT_CLASSIFICATION	3.6153262073107374E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999638467379268	WITHOUT_CLASSIFICATION	3.6153262073107374E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999305943927137	WITHOUT_CLASSIFICATION	6.940560728628192E-5	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999977772499401	WITHOUT_CLASSIFICATION	2.2227500598887924E-6	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999997235057733	WITHOUT_CLASSIFICATION	2.7649422668483925E-7	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9997095933739703	WITHOUT_CLASSIFICATION	2.904066260297613E-4	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999207486299886	WITHOUT_CLASSIFICATION	7.92513700113731E-5	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999940043836314	WITHOUT_CLASSIFICATION	5.995616368702924E-6	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9999113166438744	WITHOUT_CLASSIFICATION	8.868335612549302E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999916232452778	WITHOUT_CLASSIFICATION	8.376754722175192E-6	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.9991950380551706	WITHOUT_CLASSIFICATION	8.049619448293242E-4	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.999981808365073	WITHOUT_CLASSIFICATION	1.8191634927032343E-5	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999950348228696	WITHOUT_CLASSIFICATION	4.965177130458583E-6	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999843458859821	WITHOUT_CLASSIFICATION	1.5654114017926786E-5	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999940043836314	WITHOUT_CLASSIFICATION	5.995616368702924E-6	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999621819069427	WITHOUT_CLASSIFICATION	3.781809305736458E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999621819069427	WITHOUT_CLASSIFICATION	3.781809305736458E-5	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999486570785128	WITHOUT_CLASSIFICATION	5.134292148714931E-5	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9998990146803086	WITHOUT_CLASSIFICATION	1.0098531969131407E-4	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999693595467521	WITHOUT_CLASSIFICATION	3.0640453247830663E-5	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.999972841277483	WITHOUT_CLASSIFICATION	2.715872251700598E-5	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999889837803397	WITHOUT_CLASSIFICATION	1.101621966025348E-5	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.999997201065115	WITHOUT_CLASSIFICATION	2.7989348849877716E-6	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999612421899723	WITHOUT_CLASSIFICATION	3.8757810027668186E-5	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999973933146219	WITHOUT_CLASSIFICATION	2.606685378030538E-6	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999970895570699	WITHOUT_CLASSIFICATION	2.9104429300293E-6	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9999851632728176	WITHOUT_CLASSIFICATION	1.483672718242835E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999911825539431	WITHOUT_CLASSIFICATION	8.817446056832357E-6	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.999972841277483	WITHOUT_CLASSIFICATION	2.715872251700598E-5	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999889837803397	WITHOUT_CLASSIFICATION	1.101621966025348E-5	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999096983347014	WITHOUT_CLASSIFICATION	9.030166529853518E-5	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9999727578646141	WITHOUT_CLASSIFICATION	2.724213538580242E-5	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999995597322975	WITHOUT_CLASSIFICATION	4.402677024473324E-7	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999933565067056	WITHOUT_CLASSIFICATION	6.643493294370962E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999173975313507	WITHOUT_CLASSIFICATION	8.260246864930729E-5	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9998919479408069	WITHOUT_CLASSIFICATION	1.0805205919308247E-4	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.998320236778862	WITHOUT_CLASSIFICATION	0.0016797632211381088	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.999974277516536	WITHOUT_CLASSIFICATION	2.572248346389749E-5	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999394972185842	WITHOUT_CLASSIFICATION	6.0502781415900625E-5	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999114811520757	WITHOUT_CLASSIFICATION	8.851884792427518E-5	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999757122745023	WITHOUT_CLASSIFICATION	2.4287725497702343E-5	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9997856040194207	WITHOUT_CLASSIFICATION	2.143959805792016E-4	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9998606618015944	WITHOUT_CLASSIFICATION	1.3933819840556E-4	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999949484711363	WITHOUT_CLASSIFICATION	5.051528863656499E-6	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999992304840828	WITHOUT_CLASSIFICATION	7.695159171792386E-7	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999845517469098	WITHOUT_CLASSIFICATION	1.5448253090172435E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9998154341995308	WITHOUT_CLASSIFICATION	1.8456580046926347E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.999837245133311	WITHOUT_CLASSIFICATION	1.6275486668905706E-4	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999722493251733	WITHOUT_CLASSIFICATION	2.775067482665346E-5	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999763320868357	WITHOUT_CLASSIFICATION	2.3667913164354004E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9998154341995308	WITHOUT_CLASSIFICATION	1.8456580046926347E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.999837245133311	WITHOUT_CLASSIFICATION	1.6275486668905706E-4	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999722493251733	WITHOUT_CLASSIFICATION	2.775067482665346E-5	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9999982237328191	WITHOUT_CLASSIFICATION	1.7762671808156586E-6	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999958404784579	WITHOUT_CLASSIFICATION	4.159521542057428E-6	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999973413639958	WITHOUT_CLASSIFICATION	2.6586360042875906E-6	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999897885938351	WITHOUT_CLASSIFICATION	1.0211406164791778E-5	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999848538286705	WITHOUT_CLASSIFICATION	1.5146171329467053E-5	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9998829563965259	WITHOUT_CLASSIFICATION	1.1704360347397836E-4	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999968249183141	WITHOUT_CLASSIFICATION	3.1750816858821482E-6	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999977726110211	WITHOUT_CLASSIFICATION	2.2273889788875255E-6	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9999889564037865	WITHOUT_CLASSIFICATION	1.1043596213447652E-5	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9999823476687869	WITHOUT_CLASSIFICATION	1.7652331213028226E-5	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9999348944788403	WITHOUT_CLASSIFICATION	6.510552115976218E-5	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999960424209717	WITHOUT_CLASSIFICATION	3.957579028335318E-6	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999971439743764	WITHOUT_CLASSIFICATION	2.8560256235721247E-6	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9998622679402132	WITHOUT_CLASSIFICATION	1.3773205978674262E-4	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999804382339205	WITHOUT_CLASSIFICATION	1.9561766079596296E-5	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999857706097462	WITHOUT_CLASSIFICATION	1.4229390253591784E-5	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999957781430797	WITHOUT_CLASSIFICATION	4.221856920293691E-6	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999270476788271	WITHOUT_CLASSIFICATION	7.295232117294348E-5	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999861857019007	WITHOUT_CLASSIFICATION	1.3814298099427296E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999731878711315	WITHOUT_CLASSIFICATION	2.6812128868469813E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999970337605412	WITHOUT_CLASSIFICATION	2.9662394587799715E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999689907032534	WITHOUT_CLASSIFICATION	3.100929674662899E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999689907032534	WITHOUT_CLASSIFICATION	3.100929674662899E-5	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999814379546478	WITHOUT_CLASSIFICATION	1.8562045352183614E-5	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999814379546478	WITHOUT_CLASSIFICATION	1.8562045352183614E-5	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999921725778491	WITHOUT_CLASSIFICATION	7.827422150856936E-6	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999921725778491	WITHOUT_CLASSIFICATION	7.827422150856936E-6	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999392816563386	WITHOUT_CLASSIFICATION	6.0718343661338194E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999957545676887	WITHOUT_CLASSIFICATION	4.24543231132099E-6	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999988854019083	WITHOUT_CLASSIFICATION	1.114598091782896E-6	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999725945091884	WITHOUT_CLASSIFICATION	2.7405490811645452E-5	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9998663439546152	WITHOUT_CLASSIFICATION	1.3365604538490968E-4	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9997221427991131	WITHOUT_CLASSIFICATION	2.7785720088694055E-4	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999969365830039	WITHOUT_CLASSIFICATION	3.0634169960096308E-6	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9999629084314641	WITHOUT_CLASSIFICATION	3.709156853587079E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999638467379268	WITHOUT_CLASSIFICATION	3.6153262073107374E-5	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999392816563386	WITHOUT_CLASSIFICATION	6.0718343661338194E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999957545676887	WITHOUT_CLASSIFICATION	4.24543231132099E-6	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999988854019083	WITHOUT_CLASSIFICATION	1.114598091782896E-6	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9998663439546152	WITHOUT_CLASSIFICATION	1.3365604538490968E-4	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9997221427991131	WITHOUT_CLASSIFICATION	2.7785720088694055E-4	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999970345028677	WITHOUT_CLASSIFICATION	2.9654971322794226E-6	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9999971728161265	WITHOUT_CLASSIFICATION	2.827183873512556E-6	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999966972680875	WITHOUT_CLASSIFICATION	3.3027319125375524E-6	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999966972680875	WITHOUT_CLASSIFICATION	3.3027319125375524E-6	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.999995070045601	WITHOUT_CLASSIFICATION	4.92995439907512E-6	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999990171033116	WITHOUT_CLASSIFICATION	9.82896688378912E-7	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999767443759954	WITHOUT_CLASSIFICATION	2.325562400463826E-5	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999666288105552	WITHOUT_CLASSIFICATION	3.337118944477324E-5	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999666288105552	WITHOUT_CLASSIFICATION	3.337118944477324E-5	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999876232022461	WITHOUT_CLASSIFICATION	1.2376797753830255E-5	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999992744044752	WITHOUT_CLASSIFICATION	7.255955249004008E-7	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999870661966789	WITHOUT_CLASSIFICATION	1.2933803321076771E-5	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999461074794537	WITHOUT_CLASSIFICATION	5.3892520546275814E-5	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999987987267148	WITHOUT_CLASSIFICATION	1.2012732852537597E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999919293351865	WITHOUT_CLASSIFICATION	8.070664813438516E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999875413214573	WITHOUT_CLASSIFICATION	1.2458678542739452E-5	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.999997402581522	WITHOUT_CLASSIFICATION	2.5974184779988597E-6	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999994029044534	WITHOUT_CLASSIFICATION	5.970955464517284E-7	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999180958038903	WITHOUT_CLASSIFICATION	8.190419610968815E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999742864000197	WITHOUT_CLASSIFICATION	2.571359998028044E-5	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999876232022461	WITHOUT_CLASSIFICATION	1.2376797753830255E-5	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999992744044752	WITHOUT_CLASSIFICATION	7.255955249004008E-7	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999461074794537	WITHOUT_CLASSIFICATION	5.3892520546275814E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999854952353214	WITHOUT_CLASSIFICATION	1.4504764678586575E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999767443759954	WITHOUT_CLASSIFICATION	2.325562400463826E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999767443759954	WITHOUT_CLASSIFICATION	2.325562400463826E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999911825539431	WITHOUT_CLASSIFICATION	8.817446056832357E-6	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999911825539431	WITHOUT_CLASSIFICATION	8.817446056832357E-6	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999995131168841	WITHOUT_CLASSIFICATION	4.868831158913994E-7	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999995131168841	WITHOUT_CLASSIFICATION	4.868831158913994E-7	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999865347637777	WITHOUT_CLASSIFICATION	1.3465236222305582E-5	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999756132357678	WITHOUT_CLASSIFICATION	2.4386764232253446E-5	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9998984921506722	WITHOUT_CLASSIFICATION	1.015078493278488E-4	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999933015155205	WITHOUT_CLASSIFICATION	6.6984844795388794E-6	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999903817363824	WITHOUT_CLASSIFICATION	9.618263617428098E-6	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999916172690846	WITHOUT_CLASSIFICATION	8.382730915440677E-6	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999838936472791	WITHOUT_CLASSIFICATION	1.6106352720821366E-5	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999932813955302	WITHOUT_CLASSIFICATION	6.7186044697974455E-6	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999862656830546	WITHOUT_CLASSIFICATION	1.3734316945442421E-5	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999967170177234	WITHOUT_CLASSIFICATION	3.2829822765928263E-6	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999769932847284	WITHOUT_CLASSIFICATION	2.3006715271604224E-5	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9999878797522664	WITHOUT_CLASSIFICATION	1.2120247733522418E-5	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999961925879556	WITHOUT_CLASSIFICATION	3.8074120443949963E-6	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999980601720871	WITHOUT_CLASSIFICATION	1.9398279128893758E-6	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9995406869572723	WITHOUT_CLASSIFICATION	4.5931304272776505E-4	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9999035810077198	WITHOUT_CLASSIFICATION	9.641899228020383E-5	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9999897086153148	WITHOUT_CLASSIFICATION	1.0291384685334048E-5	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999819222775165	WITHOUT_CLASSIFICATION	1.807772248353805E-5	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9991903990481253	WITHOUT_CLASSIFICATION	8.096009518746591E-4	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999875413214573	WITHOUT_CLASSIFICATION	1.2458678542739452E-5	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999994029044534	WITHOUT_CLASSIFICATION	5.970955464517284E-7	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999984149030601	WITHOUT_CLASSIFICATION	1.5850969399665903E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9994082535679316	WITHOUT_CLASSIFICATION	5.917464320684065E-4	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9994082535679316	WITHOUT_CLASSIFICATION	5.917464320684065E-4	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999854952353214	WITHOUT_CLASSIFICATION	1.4504764678586575E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999767443759954	WITHOUT_CLASSIFICATION	2.325562400463826E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999911825539431	WITHOUT_CLASSIFICATION	8.817446056832357E-6	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999995131168841	WITHOUT_CLASSIFICATION	4.868831158913994E-7	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999972200633861	WITHOUT_CLASSIFICATION	2.7799366138308398E-6	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999936465205357	WITHOUT_CLASSIFICATION	6.353479464305037E-6	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999963050599634	WITHOUT_CLASSIFICATION	3.6949400365872195E-6	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999945566289888	WITHOUT_CLASSIFICATION	5.443371011136511E-6	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999960100892773	WITHOUT_CLASSIFICATION	3.989910722684181E-6	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999960100892773	WITHOUT_CLASSIFICATION	3.989910722684181E-6	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999987287242083	WITHOUT_CLASSIFICATION	1.2712757917731246E-6	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999924959902075	WITHOUT_CLASSIFICATION	7.504009792537662E-6	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9998914744017511	WITHOUT_CLASSIFICATION	1.0852559824893872E-4	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999956006234085	WITHOUT_CLASSIFICATION	4.3993765914584516E-6	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999831121366268	WITHOUT_CLASSIFICATION	1.6887863373134656E-5	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999831121366268	WITHOUT_CLASSIFICATION	1.6887863373134656E-5	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999680934843466	WITHOUT_CLASSIFICATION	3.190651565353154E-5	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.999908960670179	WITHOUT_CLASSIFICATION	9.103932982101824E-5	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999762249886164	WITHOUT_CLASSIFICATION	2.3775011383689813E-5	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999729463457093	WITHOUT_CLASSIFICATION	2.7053654290588587E-5	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9998737192608393	WITHOUT_CLASSIFICATION	1.262807391606257E-4	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999557594000797	WITHOUT_CLASSIFICATION	4.4240599920299795E-5	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999714694950336	WITHOUT_CLASSIFICATION	2.8530504966387118E-5	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999756956578455	WITHOUT_CLASSIFICATION	2.430434215443793E-5	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.999976067237679	WITHOUT_CLASSIFICATION	2.39327623209937E-5	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.999977606861116	WITHOUT_CLASSIFICATION	2.239313888389954E-5	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999998637660473	WITHOUT_CLASSIFICATION	1.3623395264093663E-7	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999852717250837	WITHOUT_CLASSIFICATION	1.4728274916289293E-5	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999997363996354	WITHOUT_CLASSIFICATION	2.6360036465380853E-7	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999966795759015	WITHOUT_CLASSIFICATION	3.3204240985008916E-6	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999701260441046	WITHOUT_CLASSIFICATION	2.98739558954108E-5	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999866166334931	WITHOUT_CLASSIFICATION	1.3383366506906415E-5	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999992861659857	WITHOUT_CLASSIFICATION	7.138340143631782E-7	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999840998975023	WITHOUT_CLASSIFICATION	1.5900102497687384E-5	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999998804073121	WITHOUT_CLASSIFICATION	1.1959268785847166E-7	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999414892943184	WITHOUT_CLASSIFICATION	5.8510705681537376E-5	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999907804018768	WITHOUT_CLASSIFICATION	9.219598123156002E-6	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999900051718553	WITHOUT_CLASSIFICATION	9.994828144694182E-6	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999900051718553	WITHOUT_CLASSIFICATION	9.994828144694182E-6	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999887514837638	WITHOUT_CLASSIFICATION	1.1248516236198732E-5	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999899659345346	WITHOUT_CLASSIFICATION	1.0034065465425992E-5	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999973746635117	WITHOUT_CLASSIFICATION	2.625336488320147E-6	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999973746635117	WITHOUT_CLASSIFICATION	2.625336488320147E-6	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999645427928935	WITHOUT_CLASSIFICATION	3.5457207106500084E-5	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999901276147872	WITHOUT_CLASSIFICATION	9.872385212865627E-6	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999399998297	WITHOUT_CLASSIFICATION	6.00001702999885E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999966071001448	WITHOUT_CLASSIFICATION	3.392899855239188E-6	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999966071001448	WITHOUT_CLASSIFICATION	3.392899855239188E-6	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.999830234703481	WITHOUT_CLASSIFICATION	1.6976529651896585E-4	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999946905692586	WITHOUT_CLASSIFICATION	5.309430741416679E-6	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999975020991536	WITHOUT_CLASSIFICATION	2.4979008463872467E-6	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999642263495274	WITHOUT_CLASSIFICATION	3.577365047262997E-5	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999932451539081	WITHOUT_CLASSIFICATION	6.7548460919219375E-6	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999723354938773	WITHOUT_CLASSIFICATION	2.7664506122675872E-5	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999895707445778	WITHOUT_CLASSIFICATION	1.0429255422122456E-5	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999830835511024	WITHOUT_CLASSIFICATION	1.6916448897628167E-5	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9999796307937686	WITHOUT_CLASSIFICATION	2.036920623140099E-5	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999633658757543	WITHOUT_CLASSIFICATION	3.663412424572947E-5	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999962848952375	WITHOUT_CLASSIFICATION	3.715104762396357E-6	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999883939216527	WITHOUT_CLASSIFICATION	1.1606078347258874E-5	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9999954827676955	WITHOUT_CLASSIFICATION	4.517232304634862E-6	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999804116641431	WITHOUT_CLASSIFICATION	1.958833585686001E-5	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.999985371429904	WITHOUT_CLASSIFICATION	1.4628570096021326E-5	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999980755361217	WITHOUT_CLASSIFICATION	1.9244638781569904E-6	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.999996636224152	WITHOUT_CLASSIFICATION	3.363775848026786E-6	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999454074307289	WITHOUT_CLASSIFICATION	5.459256927124684E-5	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999137033572323	WITHOUT_CLASSIFICATION	8.62966427677387E-5	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999993743145669	WITHOUT_CLASSIFICATION	6.256854330671837E-7	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9999967178504107	WITHOUT_CLASSIFICATION	3.2821495894316053E-6	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.999989675360477	WITHOUT_CLASSIFICATION	1.0324639522991695E-5	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999916543129564	WITHOUT_CLASSIFICATION	8.345687043548391E-6	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.999996291516586	WITHOUT_CLASSIFICATION	3.7084834139866846E-6	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9996613452345686	WITHOUT_CLASSIFICATION	3.3865476543134274E-4	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999975597503816	WITHOUT_CLASSIFICATION	2.4402496184073773E-6	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999492212919424	WITHOUT_CLASSIFICATION	5.077870805753352E-5	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999909402869855	WITHOUT_CLASSIFICATION	9.059713014485464E-6	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999708739983878	WITHOUT_CLASSIFICATION	2.912600161227524E-5	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999915901912961	WITHOUT_CLASSIFICATION	8.40980870384199E-6	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999914165988213	WITHOUT_CLASSIFICATION	8.583401178623586E-6	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999804116641431	WITHOUT_CLASSIFICATION	1.958833585686001E-5	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999909402869855	WITHOUT_CLASSIFICATION	9.059713014485464E-6	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999708739983878	WITHOUT_CLASSIFICATION	2.912600161227524E-5	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999914165988213	WITHOUT_CLASSIFICATION	8.583401178623586E-6	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999629957363244	WITHOUT_CLASSIFICATION	3.700426367551954E-5	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9999797967841588	WITHOUT_CLASSIFICATION	2.0203215841127895E-5	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999763783982597	WITHOUT_CLASSIFICATION	2.3621601740328335E-5	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999909552443346	WITHOUT_CLASSIFICATION	9.044755665364689E-6	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999749773980264	WITHOUT_CLASSIFICATION	2.5022601973559533E-5	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999996763999006	WITHOUT_CLASSIFICATION	3.23600099419297E-7	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9999252213884245	WITHOUT_CLASSIFICATION	7.477861157549449E-5	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9999923728949376	WITHOUT_CLASSIFICATION	7.62710506232357E-6	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9999700715482693	WITHOUT_CLASSIFICATION	2.9928451730713025E-5	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999992793115223	WITHOUT_CLASSIFICATION	7.20688477608804E-7	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999744687770228	WITHOUT_CLASSIFICATION	2.553122297729903E-5	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999744687770228	WITHOUT_CLASSIFICATION	2.553122297729903E-5	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999974630775075	WITHOUT_CLASSIFICATION	2.5369224924431787E-6	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999975861490823	WITHOUT_CLASSIFICATION	2.413850917777753E-6	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999978372008134	WITHOUT_CLASSIFICATION	2.162799186584562E-6	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999899934188368	WITHOUT_CLASSIFICATION	1.0006581163260098E-5	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999878217192009	WITHOUT_CLASSIFICATION	1.2178280799113033E-5	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999878166489136	WITHOUT_CLASSIFICATION	1.2183351086338861E-5	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.999992441019613	WITHOUT_CLASSIFICATION	7.558980386965425E-6	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999994824264612	WITHOUT_CLASSIFICATION	5.175735389186782E-7	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.999997965159754	WITHOUT_CLASSIFICATION	2.0348402459709367E-6	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999998386525822	WITHOUT_CLASSIFICATION	1.6134741777751772E-7	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.999994368956006	WITHOUT_CLASSIFICATION	5.631043993924629E-6	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999980515716573	WITHOUT_CLASSIFICATION	1.94842834277193E-6	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999950047713444	WITHOUT_CLASSIFICATION	4.99522865563764E-6	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9998837690191821	WITHOUT_CLASSIFICATION	1.1623098081796914E-4	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9999935764216429	WITHOUT_CLASSIFICATION	6.423578357142367E-6	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.999998750569699	WITHOUT_CLASSIFICATION	1.2494303009117177E-6	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9999976433144564	WITHOUT_CLASSIFICATION	2.356685543688134E-6	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9999980466836982	WITHOUT_CLASSIFICATION	1.9533163017884002E-6	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9999978122699578	WITHOUT_CLASSIFICATION	2.1877300422737854E-6	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9999963620594231	WITHOUT_CLASSIFICATION	3.6379405769605393E-6	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.999906012225113	WITHOUT_CLASSIFICATION	9.398777488697053E-5	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9999661353924245	WITHOUT_CLASSIFICATION	3.3864607575454215E-5	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999890020139256	WITHOUT_CLASSIFICATION	1.0997986074428875E-5	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.999939523570039	WITHOUT_CLASSIFICATION	6.0476429961056696E-5	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999603475828825	WITHOUT_CLASSIFICATION	3.9652417117342246E-5	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9999693419236477	WITHOUT_CLASSIFICATION	3.065807635234059E-5	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999999795346096	WITHOUT_CLASSIFICATION	2.0465390390961573E-8	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999988317982745	WITHOUT_CLASSIFICATION	1.1682017255404368E-6	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.9999598716518845	WITHOUT_CLASSIFICATION	4.012834811554466E-5	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999974069403673	WITHOUT_CLASSIFICATION	2.593059632650203E-6	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999972299189424	WITHOUT_CLASSIFICATION	2.7700810576309952E-6	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9999971617634268	WITHOUT_CLASSIFICATION	2.8382365732272375E-6	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999963516616541	WITHOUT_CLASSIFICATION	3.6483383457545128E-6	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999937063487996	WITHOUT_CLASSIFICATION	6.293651200452832E-6	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999937063774328	WITHOUT_CLASSIFICATION	6.29362256729605E-6	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999961394072424	WITHOUT_CLASSIFICATION	3.860592757616034E-6	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.999994004956063	WITHOUT_CLASSIFICATION	5.995043937018603E-6	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999982237344601	WITHOUT_CLASSIFICATION	1.7762655398383099E-6	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999932879224004	WITHOUT_CLASSIFICATION	6.7120775995489775E-6	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999978555790044	WITHOUT_CLASSIFICATION	2.144420995583881E-6	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999916873986451	WITHOUT_CLASSIFICATION	8.312601354941574E-6	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999733323567198	WITHOUT_CLASSIFICATION	2.6667643280201473E-5	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.9999623578151354	WITHOUT_CLASSIFICATION	3.764218486457439E-5	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.999999279603771	WITHOUT_CLASSIFICATION	7.203962289715322E-7	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999918473933247	WITHOUT_CLASSIFICATION	8.152606675200634E-6	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999916496170792	WITHOUT_CLASSIFICATION	8.350382920790743E-6	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999941175495027	WITHOUT_CLASSIFICATION	5.882450497186312E-6	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999995468916544	WITHOUT_CLASSIFICATION	4.531083456021909E-7	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999984988743605	WITHOUT_CLASSIFICATION	1.5011256394300573E-6	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999985571269909	WITHOUT_CLASSIFICATION	1.4428730090170004E-6	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999780940756903	WITHOUT_CLASSIFICATION	2.190592430967152E-5	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999893691503121	WITHOUT_CLASSIFICATION	1.0630849687945808E-5	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9998777656723444	WITHOUT_CLASSIFICATION	1.2223432765559903E-4	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999983915202014	WITHOUT_CLASSIFICATION	1.608479798659668E-6	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999923543225885	WITHOUT_CLASSIFICATION	7.645677411494268E-6	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999985225404071	WITHOUT_CLASSIFICATION	1.4774595928639147E-6	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999902913982476	WITHOUT_CLASSIFICATION	9.708601752510611E-6	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999155182617261	WITHOUT_CLASSIFICATION	8.448173827395573E-5	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9999566743539615	WITHOUT_CLASSIFICATION	4.332564603852386E-5	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999866347173345	WITHOUT_CLASSIFICATION	1.3365282665572853E-5	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999866347173345	WITHOUT_CLASSIFICATION	1.3365282665572853E-5	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999994949849352	WITHOUT_CLASSIFICATION	5.050150648194202E-7	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999967716408276	WITHOUT_CLASSIFICATION	3.228359172347319E-6	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999999361746657	WITHOUT_CLASSIFICATION	6.382533430809117E-7	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999991613982954	WITHOUT_CLASSIFICATION	8.386017046400758E-7	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999979536127835	WITHOUT_CLASSIFICATION	2.0463872163925322E-6	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999981504484466	WITHOUT_CLASSIFICATION	1.8495515533753709E-6	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9996109120022684	WITHOUT_CLASSIFICATION	3.890879977316384E-4	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999480266152606	WITHOUT_CLASSIFICATION	5.197338473935319E-5	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999987904438398	WITHOUT_CLASSIFICATION	1.209556160225826E-6	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999914891840929	WITHOUT_CLASSIFICATION	8.510815907081482E-6	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999901909623252	WITHOUT_CLASSIFICATION	9.809037674826406E-6	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9999871854041825	WITHOUT_CLASSIFICATION	1.2814595817434852E-5	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9997999699990713	WITHOUT_CLASSIFICATION	2.000300009287823E-4	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9998459673566994	WITHOUT_CLASSIFICATION	1.540326433006501E-4	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999784913426901	WITHOUT_CLASSIFICATION	2.1508657309881334E-5	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999645324476669	WITHOUT_CLASSIFICATION	3.5467552333055904E-5	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9991252449579929	WITHOUT_CLASSIFICATION	8.747550420071259E-4	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999993559131568	WITHOUT_CLASSIFICATION	6.440868431310132E-7	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999975646780861	WITHOUT_CLASSIFICATION	2.4353219138698854E-6	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999979937035567	WITHOUT_CLASSIFICATION	2.0062964433825477E-6	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999981701922089	WITHOUT_CLASSIFICATION	1.8298077910762106E-6	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999995703178745	WITHOUT_CLASSIFICATION	4.296821255623375E-7	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999210259100233	WITHOUT_CLASSIFICATION	7.89740899767351E-5	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999981424323384	WITHOUT_CLASSIFICATION	1.8575676614873556E-6	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999993075851134	WITHOUT_CLASSIFICATION	6.924148866184065E-7	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999930597374251	WITHOUT_CLASSIFICATION	6.940262574922221E-6	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999992548619714	WITHOUT_CLASSIFICATION	7.451380285030814E-7	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999999627067794	WITHOUT_CLASSIFICATION	3.729322063466427E-8	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999884287204093	WITHOUT_CLASSIFICATION	1.1571279590792407E-5	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999997142462391	WITHOUT_CLASSIFICATION	2.857537609235514E-7	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999994077777283	WITHOUT_CLASSIFICATION	5.922222715380314E-7	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999959354350035	WITHOUT_CLASSIFICATION	4.064564996436755E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999993024317674	WITHOUT_CLASSIFICATION	6.975682327197326E-7	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999293272886998	WITHOUT_CLASSIFICATION	7.067271130023177E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999993024317674	WITHOUT_CLASSIFICATION	6.975682327197326E-7	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999927539341208	WITHOUT_CLASSIFICATION	7.246065879139192E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999944359252982	WITHOUT_CLASSIFICATION	5.5640747017498014E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999944359252982	WITHOUT_CLASSIFICATION	5.5640747017498014E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999944359252982	WITHOUT_CLASSIFICATION	5.5640747017498014E-6	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999872713663528	WITHOUT_CLASSIFICATION	1.2728633647147198E-5	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999872713663528	WITHOUT_CLASSIFICATION	1.2728633647147198E-5	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.999988532676507	WITHOUT_CLASSIFICATION	1.1467323492906279E-5	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999979194640406	WITHOUT_CLASSIFICATION	2.0805359595021083E-6	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.999998363914957	WITHOUT_CLASSIFICATION	1.6360850429054183E-6	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9995066791811958	WITHOUT_CLASSIFICATION	4.933208188042444E-4	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999879782423913	WITHOUT_CLASSIFICATION	1.202175760882976E-5	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9998948264832007	WITHOUT_CLASSIFICATION	1.0517351679927898E-4	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9998804852099995	WITHOUT_CLASSIFICATION	1.1951479000059884E-4	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9998606086753132	WITHOUT_CLASSIFICATION	1.3939132468680725E-4	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999821510060136	WITHOUT_CLASSIFICATION	1.7848993986382975E-5	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999523146251584	WITHOUT_CLASSIFICATION	4.7685374841662174E-5	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.999839882605806	WITHOUT_CLASSIFICATION	1.6011739419384687E-4	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999948188620557	WITHOUT_CLASSIFICATION	5.1811379443449066E-6	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999582952285593	WITHOUT_CLASSIFICATION	4.1704771440680466E-5	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9999868889303141	WITHOUT_CLASSIFICATION	1.3111069685826424E-5	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999953020375731	WITHOUT_CLASSIFICATION	4.697962426934324E-6	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.999992362750644	WITHOUT_CLASSIFICATION	7.63724935603969E-6	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999960086519154	WITHOUT_CLASSIFICATION	3.9913480845982074E-6	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999630939322467	WITHOUT_CLASSIFICATION	3.690606775334271E-5	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999630939322467	WITHOUT_CLASSIFICATION	3.690606775334271E-5	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9998750322618332	WITHOUT_CLASSIFICATION	1.2496773816690406E-4	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999878894105216	WITHOUT_CLASSIFICATION	1.2110589478302543E-5	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999878894105216	WITHOUT_CLASSIFICATION	1.2110589478302543E-5	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999044630725351	WITHOUT_CLASSIFICATION	9.553692746487624E-5	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.999975024631935	WITHOUT_CLASSIFICATION	2.4975368064991046E-5	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9999515620397311	WITHOUT_CLASSIFICATION	4.843796026891939E-5	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9999210906175536	WITHOUT_CLASSIFICATION	7.890938244633582E-5	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9999566085767846	WITHOUT_CLASSIFICATION	4.33914232153833E-5	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999635406529674	WITHOUT_CLASSIFICATION	3.645934703258238E-5	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9999770131596664	WITHOUT_CLASSIFICATION	2.2986840333644873E-5	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999254260765245	WITHOUT_CLASSIFICATION	7.457392347563187E-5	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999619095893119	WITHOUT_CLASSIFICATION	3.809041068815387E-5	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999096332059417	WITHOUT_CLASSIFICATION	9.036679405829806E-5	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999658139654957	WITHOUT_CLASSIFICATION	3.418603450437516E-5	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.999971418678769	WITHOUT_CLASSIFICATION	2.8581321231018815E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9996232141464811	WITHOUT_CLASSIFICATION	3.7678585351885166E-4	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999674921769948	WITHOUT_CLASSIFICATION	3.2507823005240434E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9998606086753132	WITHOUT_CLASSIFICATION	1.3939132468680725E-4	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9992227974962923	WITHOUT_CLASSIFICATION	7.772025037077915E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999466871916529	WITHOUT_CLASSIFICATION	5.3312808347156295E-5	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9962221228516465	WITHOUT_CLASSIFICATION	0.0037778771483536248	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9962221228516465	WITHOUT_CLASSIFICATION	0.0037778771483536248	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999909904894279	WITHOUT_CLASSIFICATION	9.009510572143944E-6	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999740673096842	WITHOUT_CLASSIFICATION	2.593269031579768E-5	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999943781119702	WITHOUT_CLASSIFICATION	5.621888029799269E-6	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9999847827873324	WITHOUT_CLASSIFICATION	1.5217212667689852E-5	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999997389492047	WITHOUT_CLASSIFICATION	2.610507952745009E-7	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999875321989123	WITHOUT_CLASSIFICATION	1.246780108758866E-5	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999992847047449	WITHOUT_CLASSIFICATION	7.152952551471196E-7	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999970215321641	WITHOUT_CLASSIFICATION	2.9784678359390947E-6	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999953481510632	WITHOUT_CLASSIFICATION	4.65184893683419E-6	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999994243135996	WITHOUT_CLASSIFICATION	5.756864005057069E-7	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999872223168944	WITHOUT_CLASSIFICATION	1.2777683105483357E-5	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999647144613165	WITHOUT_CLASSIFICATION	3.528553868349441E-5	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9997450025402029	WITHOUT_CLASSIFICATION	2.549974597971579E-4	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999923639973569	WITHOUT_CLASSIFICATION	7.636002643081652E-6	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999977969090503	WITHOUT_CLASSIFICATION	2.2030909496903253E-6	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999965135794897	WITHOUT_CLASSIFICATION	3.4864205102913517E-6	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999925943215278	WITHOUT_CLASSIFICATION	7.40567847230818E-6	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999912289328213	WITHOUT_CLASSIFICATION	8.771067178634932E-6	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.999972764800466	WITHOUT_CLASSIFICATION	2.7235199533911694E-5	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999834691984292	WITHOUT_CLASSIFICATION	1.653080157080027E-5	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999735761306798	WITHOUT_CLASSIFICATION	2.6423869320242688E-5	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999884142986676	WITHOUT_CLASSIFICATION	1.1585701332339692E-5	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999803814075389	WITHOUT_CLASSIFICATION	1.9618592461135077E-5	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999826161357133	WITHOUT_CLASSIFICATION	1.7383864286775465E-5	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.999993749393846	WITHOUT_CLASSIFICATION	6.250606153937636E-6	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999057093998791	WITHOUT_CLASSIFICATION	9.429060012094882E-5	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999895818284351	WITHOUT_CLASSIFICATION	1.0418171564859161E-5	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999987408383183	WITHOUT_CLASSIFICATION	1.2591616816102006E-6	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999986435716822	WITHOUT_CLASSIFICATION	1.3564283177944584E-6	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999995119327927	WITHOUT_CLASSIFICATION	4.880672073881993E-7	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999988603840678	WITHOUT_CLASSIFICATION	1.139615932171931E-6	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999062107077462	WITHOUT_CLASSIFICATION	9.37892922538794E-5	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999839337716774	WITHOUT_CLASSIFICATION	1.6066228322574245E-5	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999911225673211	WITHOUT_CLASSIFICATION	8.877432678856348E-6	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9998064272567946	WITHOUT_CLASSIFICATION	1.935727432054093E-4	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.9998192293110859	WITHOUT_CLASSIFICATION	1.8077068891408495E-4	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999987408383183	WITHOUT_CLASSIFICATION	1.2591616816102006E-6	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999909505046033	WITHOUT_CLASSIFICATION	9.049495396689558E-6	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9998064272567946	WITHOUT_CLASSIFICATION	1.935727432054093E-4	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999990479540124	WITHOUT_CLASSIFICATION	9.52045987657147E-7	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999838985803582	WITHOUT_CLASSIFICATION	1.610141964175183E-5	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999935237222354	WITHOUT_CLASSIFICATION	6.476277764673586E-6	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999952188144572	WITHOUT_CLASSIFICATION	4.781185542883616E-6	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999602915677005	WITHOUT_CLASSIFICATION	3.970843229950755E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9998939381955081	WITHOUT_CLASSIFICATION	1.0606180449194069E-4	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9998939381955081	WITHOUT_CLASSIFICATION	1.0606180449194069E-4	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9998895219069646	WITHOUT_CLASSIFICATION	1.1047809303545691E-4	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999980539754366	WITHOUT_CLASSIFICATION	1.946024563451108E-6	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9986785961345349	WITHOUT_CLASSIFICATION	0.00132140386546508	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9986785961345349	WITHOUT_CLASSIFICATION	0.00132140386546508	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999115635843888	WITHOUT_CLASSIFICATION	8.843641561117299E-5	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9977623316508736	WITHOUT_CLASSIFICATION	0.00223766834912643	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9984558149674586	WITHOUT_CLASSIFICATION	0.001544185032541422	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9984558149674586	WITHOUT_CLASSIFICATION	0.001544185032541422	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.999933358099114	WITHOUT_CLASSIFICATION	6.664190088609766E-5	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999650910880722	WITHOUT_CLASSIFICATION	3.490891192778124E-5	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999965386214681	WITHOUT_CLASSIFICATION	3.4613785320670673E-6	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999975374475728	WITHOUT_CLASSIFICATION	2.462552427218883E-6	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.999994493541675	WITHOUT_CLASSIFICATION	5.506458324936827E-6	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999723807895248	WITHOUT_CLASSIFICATION	2.7619210475228542E-5	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.999955828411649	WITHOUT_CLASSIFICATION	4.417158835100523E-5	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9998967996170547	WITHOUT_CLASSIFICATION	1.032003829453171E-4	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999587954967384	WITHOUT_CLASSIFICATION	4.120450326163961E-5	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999719887797118	WITHOUT_CLASSIFICATION	2.8011220288187624E-5	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9999829042958471	WITHOUT_CLASSIFICATION	1.7095704152899354E-5	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999654986508867	WITHOUT_CLASSIFICATION	3.4501349113397764E-5	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999991829520629	WITHOUT_CLASSIFICATION	8.170479371703035E-7	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999857345933105	WITHOUT_CLASSIFICATION	1.426540668958453E-5	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999884380862215	WITHOUT_CLASSIFICATION	1.1561913778545E-5	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999857035105207	WITHOUT_CLASSIFICATION	1.4296489479143305E-5	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999864751195311	WITHOUT_CLASSIFICATION	1.352488046891881E-5	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.999980172361597	WITHOUT_CLASSIFICATION	1.9827638403027902E-5	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999970117731753	WITHOUT_CLASSIFICATION	2.9882268246901103E-6	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9998638047969781	WITHOUT_CLASSIFICATION	1.3619520302183202E-4	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999873583298664	WITHOUT_CLASSIFICATION	1.2641670133690276E-5	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999170979863412	WITHOUT_CLASSIFICATION	8.290201365870724E-5	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999925352428984	WITHOUT_CLASSIFICATION	7.464757101498532E-6	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.999661518352702	WITHOUT_CLASSIFICATION	3.384816472980514E-4	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9996382245712981	WITHOUT_CLASSIFICATION	3.6177542870182653E-4	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.999664668379729	WITHOUT_CLASSIFICATION	3.35331620270878E-4	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999927115468787	WITHOUT_CLASSIFICATION	7.28845312126568E-6	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9999639351860786	WITHOUT_CLASSIFICATION	3.606481392136743E-5	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999944550047066	WITHOUT_CLASSIFICATION	5.5449952933526495E-6	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999944550047066	WITHOUT_CLASSIFICATION	5.5449952933526495E-6	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999990643144911	WITHOUT_CLASSIFICATION	9.35685508820807E-7	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999966817806833	WITHOUT_CLASSIFICATION	3.3182193167292674E-6	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999722561761708	WITHOUT_CLASSIFICATION	2.7743823829229775E-5	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999668607511514	WITHOUT_CLASSIFICATION	3.313924884866147E-5	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999608910205707	WITHOUT_CLASSIFICATION	3.910897942931103E-5	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9999606244400573	WITHOUT_CLASSIFICATION	3.937555994275101E-5	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999689046756446	WITHOUT_CLASSIFICATION	3.109532435546801E-5	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999909627796996	WITHOUT_CLASSIFICATION	9.037220300402774E-6	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999743289013167	WITHOUT_CLASSIFICATION	2.567109868334814E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999868393497431	WITHOUT_CLASSIFICATION	1.3160650257061212E-5	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999746210798361	WITHOUT_CLASSIFICATION	2.5378920163801647E-5	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999876263713547	WITHOUT_CLASSIFICATION	1.2373628645338532E-5	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999468372605156	WITHOUT_CLASSIFICATION	5.316273948427853E-5	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9995116414804257	WITHOUT_CLASSIFICATION	4.883585195742704E-4	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999950701477306	WITHOUT_CLASSIFICATION	4.9298522694873535E-6	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999727181516157	WITHOUT_CLASSIFICATION	2.7281848384302414E-5	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999467489011838	WITHOUT_CLASSIFICATION	5.325109881610909E-5	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999976528612716	WITHOUT_CLASSIFICATION	2.347138728301218E-6	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9999385706312592	WITHOUT_CLASSIFICATION	6.142936874082089E-5	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999986920252799	WITHOUT_CLASSIFICATION	1.3079747201042316E-6	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999939930858122	WITHOUT_CLASSIFICATION	6.006914187915149E-6	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999439446037556	WITHOUT_CLASSIFICATION	5.605539624435393E-5	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.99999549257204	WITHOUT_CLASSIFICATION	4.507427959988479E-6	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9997779807612687	WITHOUT_CLASSIFICATION	2.2201923873127068E-4	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999294426971757	WITHOUT_CLASSIFICATION	7.05573028244322E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999888314872895	WITHOUT_CLASSIFICATION	1.116851271053286E-5	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999854004776035	WITHOUT_CLASSIFICATION	1.4599522396359803E-5	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999927408466002	WITHOUT_CLASSIFICATION	7.259153399804013E-6	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9998953465488675	WITHOUT_CLASSIFICATION	1.0465345113258363E-4	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9999785096312005	WITHOUT_CLASSIFICATION	2.149036879950252E-5	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999659849946547	WITHOUT_CLASSIFICATION	3.4015005345195226E-5	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999952788449518	WITHOUT_CLASSIFICATION	4.721155048300838E-6	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999621592995884	WITHOUT_CLASSIFICATION	3.7840700411507835E-5	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.999974726517082	WITHOUT_CLASSIFICATION	2.5273482918053433E-5	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999908898901482	WITHOUT_CLASSIFICATION	9.11010985176802E-6	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999804064649936	WITHOUT_CLASSIFICATION	1.9593535006371172E-5	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999716474322878	WITHOUT_CLASSIFICATION	2.835256771214841E-5	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999939494140678	WITHOUT_CLASSIFICATION	6.050585932075096E-6	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999493740317253	WITHOUT_CLASSIFICATION	5.062596827460647E-5	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999992881503981	WITHOUT_CLASSIFICATION	7.118496019313442E-7	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999994956161393	WITHOUT_CLASSIFICATION	5.043838606742217E-7	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999949109831353	WITHOUT_CLASSIFICATION	5.0890168646574E-6	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999976578556939	WITHOUT_CLASSIFICATION	2.3421443060364597E-6	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999976578556939	WITHOUT_CLASSIFICATION	2.3421443060364597E-6	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999895927341674	WITHOUT_CLASSIFICATION	1.0407265832580033E-5	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999778267283025	WITHOUT_CLASSIFICATION	2.2173271697587005E-5	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9996600897587288	WITHOUT_CLASSIFICATION	3.399102412712634E-4	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999641796694466	WITHOUT_CLASSIFICATION	3.582033055337961E-5	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999861857019007	WITHOUT_CLASSIFICATION	1.3814298099427296E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999731878711315	WITHOUT_CLASSIFICATION	2.6812128868469813E-5	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999916582041624	WITHOUT_CLASSIFICATION	8.341795837663357E-6	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999611362667413	WITHOUT_CLASSIFICATION	3.886373325858624E-5	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999959358648728	WITHOUT_CLASSIFICATION	4.064135127239425E-6	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9996861853483777	WITHOUT_CLASSIFICATION	3.1381465162230656E-4	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9999705007257026	WITHOUT_CLASSIFICATION	2.9499274297328883E-5	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.999884642113942	WITHOUT_CLASSIFICATION	1.1535788605809013E-4	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9999814680638892	WITHOUT_CLASSIFICATION	1.8531936110761413E-5	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999801337170133	WITHOUT_CLASSIFICATION	1.986628298673621E-5	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998795840801221	WITHOUT_CLASSIFICATION	1.2041591987786921E-4	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9999753333651861	WITHOUT_CLASSIFICATION	2.4666634813965213E-5	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999137353346832	WITHOUT_CLASSIFICATION	8.626466531682091E-5	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9998552504370148	WITHOUT_CLASSIFICATION	1.4474956298507816E-4	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9997669356692028	WITHOUT_CLASSIFICATION	2.330643307972115E-4	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.999890735506375	WITHOUT_CLASSIFICATION	1.0926449362496816E-4	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9997657113016255	WITHOUT_CLASSIFICATION	2.3428869837451688E-4	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999570464549611	WITHOUT_CLASSIFICATION	4.295354503880784E-5	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.999968514209367	WITHOUT_CLASSIFICATION	3.148579063297641E-5	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999709995724716	WITHOUT_CLASSIFICATION	2.9000427528379974E-5	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999753099140508	WITHOUT_CLASSIFICATION	2.469008594920306E-5	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999896380286702	WITHOUT_CLASSIFICATION	1.0361971329800401E-4	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9998957880017061	WITHOUT_CLASSIFICATION	1.0421199829391167E-4	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999705402479905	WITHOUT_CLASSIFICATION	2.9459752009533922E-5	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999831380271852	WITHOUT_CLASSIFICATION	1.6861972814811152E-5	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9997526520435511	WITHOUT_CLASSIFICATION	2.473479564488231E-4	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999814936021403	WITHOUT_CLASSIFICATION	1.8506397859721502E-5	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9998910594346391	WITHOUT_CLASSIFICATION	1.0894056536092977E-4	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999931180000665	WITHOUT_CLASSIFICATION	6.881999933559075E-6	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9997339887024732	WITHOUT_CLASSIFICATION	2.6601129752680004E-4	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999939494140678	WITHOUT_CLASSIFICATION	6.050585932075096E-6	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999892647494215	WITHOUT_CLASSIFICATION	1.0735250578471277E-5	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999966605259244	WITHOUT_CLASSIFICATION	3.339474075524495E-6	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999966605259244	WITHOUT_CLASSIFICATION	3.339474075524495E-6	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999889762397353	WITHOUT_CLASSIFICATION	1.102376026480271E-5	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999984788933852	WITHOUT_CLASSIFICATION	1.5211066148434843E-6	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999763026445877	WITHOUT_CLASSIFICATION	2.3697355412345635E-5	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.9998718817425469	WITHOUT_CLASSIFICATION	1.2811825745306284E-4	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9993599852955165	WITHOUT_CLASSIFICATION	6.400147044835498E-4	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9994172106313877	WITHOUT_CLASSIFICATION	5.827893686123179E-4	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9995438891607279	WITHOUT_CLASSIFICATION	4.561108392720862E-4	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9992383266664365	WITHOUT_CLASSIFICATION	7.616733335633252E-4	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9993883347541013	WITHOUT_CLASSIFICATION	6.116652458986739E-4	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9995419386026506	WITHOUT_CLASSIFICATION	4.5806139734943016E-4	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9992005945882367	WITHOUT_CLASSIFICATION	7.994054117631948E-4	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9989672654812061	WITHOUT_CLASSIFICATION	0.001032734518793875	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9997843157159501	WITHOUT_CLASSIFICATION	2.156842840500485E-4	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999877585307217	WITHOUT_CLASSIFICATION	1.224146927823515E-5	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999926525253697	WITHOUT_CLASSIFICATION	7.347474630258307E-6	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9998928157594148	WITHOUT_CLASSIFICATION	1.07184240585256E-4	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9996344248100274	WITHOUT_CLASSIFICATION	3.655751899725936E-4	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9990798043862237	WITHOUT_CLASSIFICATION	9.20195613776198E-4	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9995614456781322	WITHOUT_CLASSIFICATION	4.385543218677513E-4	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9996715914972398	WITHOUT_CLASSIFICATION	3.284085027602292E-4	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9995283361148072	WITHOUT_CLASSIFICATION	4.716638851928721E-4	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9995720598838418	WITHOUT_CLASSIFICATION	4.279401161582129E-4	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999989527269962	WITHOUT_CLASSIFICATION	1.0472730038363234E-6	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999973623899492	WITHOUT_CLASSIFICATION	2.6376100509328787E-6	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999960483569347	WITHOUT_CLASSIFICATION	3.951643065377788E-6	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999803019149781	WITHOUT_CLASSIFICATION	1.9698085021820368E-5	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999718888318995	WITHOUT_CLASSIFICATION	2.8111168100449605E-5	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999916570344056	WITHOUT_CLASSIFICATION	8.34296559428382E-6	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.999980095057251	WITHOUT_CLASSIFICATION	1.9904942749000218E-5	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999933415817557	WITHOUT_CLASSIFICATION	6.658418244272787E-6	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9999974739802875	WITHOUT_CLASSIFICATION	2.526019712581744E-6	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.999971078487349	WITHOUT_CLASSIFICATION	2.8921512650971668E-5	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9999697923024198	WITHOUT_CLASSIFICATION	3.020769758014723E-5	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999884621283891	WITHOUT_CLASSIFICATION	1.1537871610959094E-5	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.999950718639095	WITHOUT_CLASSIFICATION	4.92813609050264E-5	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999365258959114	WITHOUT_CLASSIFICATION	6.347410408861603E-5	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999903190820664	WITHOUT_CLASSIFICATION	9.68091793356326E-6	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999803019149781	WITHOUT_CLASSIFICATION	1.9698085021820368E-5	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999718888318995	WITHOUT_CLASSIFICATION	2.8111168100449605E-5	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999916570344056	WITHOUT_CLASSIFICATION	8.34296559428382E-6	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999933415817557	WITHOUT_CLASSIFICATION	6.658418244272787E-6	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9998776576733998	WITHOUT_CLASSIFICATION	1.2234232660030217E-4	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999915994979065	WITHOUT_CLASSIFICATION	8.40050209347067E-6	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999146839254005	WITHOUT_CLASSIFICATION	8.531607459942413E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9998712692352031	WITHOUT_CLASSIFICATION	1.287307647968657E-4	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999895937082212	WITHOUT_CLASSIFICATION	1.040629177877795E-5	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999986894321449	WITHOUT_CLASSIFICATION	1.3105678551240645E-6	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999966191809271	WITHOUT_CLASSIFICATION	3.3808190728206115E-6	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999805013141201	WITHOUT_CLASSIFICATION	1.9498685879876053E-5	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999556381548727	WITHOUT_CLASSIFICATION	4.43618451273848E-5	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999722823153869	WITHOUT_CLASSIFICATION	2.7717684613115123E-5	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999852019065865	WITHOUT_CLASSIFICATION	1.4798093413575982E-5	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999969830909535	WITHOUT_CLASSIFICATION	3.0169090464826545E-6	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999926480246005	WITHOUT_CLASSIFICATION	7.351975399450216E-6	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999396558732062	WITHOUT_CLASSIFICATION	6.034412679390084E-5	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9999711822459727	WITHOUT_CLASSIFICATION	2.88177540272981E-5	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9999706599395306	WITHOUT_CLASSIFICATION	2.934006046939453E-5	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999542740554362	WITHOUT_CLASSIFICATION	4.572594456374166E-5	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999507429738543	WITHOUT_CLASSIFICATION	4.9257026145722624E-5	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999928193570934	WITHOUT_CLASSIFICATION	7.180642906703646E-6	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999903190820664	WITHOUT_CLASSIFICATION	9.68091793356326E-6	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999915994979065	WITHOUT_CLASSIFICATION	8.40050209347067E-6	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999146839254005	WITHOUT_CLASSIFICATION	8.531607459942413E-5	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999895937082212	WITHOUT_CLASSIFICATION	1.040629177877795E-5	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999986894321449	WITHOUT_CLASSIFICATION	1.3105678551240645E-6	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999966191809271	WITHOUT_CLASSIFICATION	3.3808190728206115E-6	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999805013141201	WITHOUT_CLASSIFICATION	1.9498685879876053E-5	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999769242081323	WITHOUT_CLASSIFICATION	2.307579186759929E-5	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999940223895958	WITHOUT_CLASSIFICATION	5.977610404278544E-6	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999827196746598	WITHOUT_CLASSIFICATION	1.7280325340217647E-5	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999990398738953	WITHOUT_CLASSIFICATION	9.601261047550993E-7	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999675120328914	WITHOUT_CLASSIFICATION	3.248796710871758E-5	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999675120328914	WITHOUT_CLASSIFICATION	3.248796710871758E-5	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.999989094161779	WITHOUT_CLASSIFICATION	1.0905838221008628E-5	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999812637445459	WITHOUT_CLASSIFICATION	1.873625545406064E-5	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999975570703532	WITHOUT_CLASSIFICATION	2.442929646668288E-6	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999952550285802	WITHOUT_CLASSIFICATION	4.744971419847488E-6	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999948503590687	WITHOUT_CLASSIFICATION	5.149640931353227E-6	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999978526717899	WITHOUT_CLASSIFICATION	2.14732821016006E-6	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9999761661952865	WITHOUT_CLASSIFICATION	2.3833804713468716E-5	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999983373017125	WITHOUT_CLASSIFICATION	1.6626982875734974E-6	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999878125099037	WITHOUT_CLASSIFICATION	1.218749009642862E-5	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9998781052320189	WITHOUT_CLASSIFICATION	1.2189476798109688E-4	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999828359938202	WITHOUT_CLASSIFICATION	1.7164006179804312E-5	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999549728719828	WITHOUT_CLASSIFICATION	4.502712801724164E-5	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.999991372976661	WITHOUT_CLASSIFICATION	8.627023339046206E-6	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9998844685277684	WITHOUT_CLASSIFICATION	1.155314722316528E-4	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999970919589645	WITHOUT_CLASSIFICATION	2.9080410356382476E-6	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999866693991949	WITHOUT_CLASSIFICATION	1.3330600805007444E-5	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9998923564536406	WITHOUT_CLASSIFICATION	1.0764354635942618E-4	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.999919941944367	WITHOUT_CLASSIFICATION	8.005805563308355E-5	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999865837516747	WITHOUT_CLASSIFICATION	1.3416248325390055E-5	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999902214546885	WITHOUT_CLASSIFICATION	9.77854531143493E-6	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9998717334972937	WITHOUT_CLASSIFICATION	1.2826650270617628E-4	IMPLEMENTATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999973795317973	WITHOUT_CLASSIFICATION	2.6204682025531072E-6	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999974188720635	WITHOUT_CLASSIFICATION	2.5811279365247236E-6	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9970607654071338	WITHOUT_CLASSIFICATION	0.0029392345928661774	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999651747953414	WITHOUT_CLASSIFICATION	3.482520465864792E-5	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999995014279055	WITHOUT_CLASSIFICATION	4.98572094539923E-7	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999997127773069	WITHOUT_CLASSIFICATION	2.8722269304619784E-7	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999898426106091	WITHOUT_CLASSIFICATION	1.0157389390864792E-5	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9999611727952834	WITHOUT_CLASSIFICATION	3.882720471663154E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999651747953414	WITHOUT_CLASSIFICATION	3.482520465864792E-5	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999995014279055	WITHOUT_CLASSIFICATION	4.98572094539923E-7	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9998844685277684	WITHOUT_CLASSIFICATION	1.155314722316528E-4	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999967650354958	WITHOUT_CLASSIFICATION	3.234964504114848E-6	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999963502857058	WITHOUT_CLASSIFICATION	3.6497142942718022E-6	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999926053238678	WITHOUT_CLASSIFICATION	7.394676132254428E-6	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999945798972452	WITHOUT_CLASSIFICATION	5.420102754889402E-6	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.999997500923018	WITHOUT_CLASSIFICATION	2.499076982030557E-6	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999756209295986	WITHOUT_CLASSIFICATION	2.437907040136848E-5	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999522842804128	WITHOUT_CLASSIFICATION	4.771571958709554E-5	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999388953125131	WITHOUT_CLASSIFICATION	6.110468748686869E-5	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.999974999243566	WITHOUT_CLASSIFICATION	2.5000756434012305E-5	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999994772122581	WITHOUT_CLASSIFICATION	5.227877418793156E-7	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999986337785849	WITHOUT_CLASSIFICATION	1.3662214151393727E-6	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999922375813598	WITHOUT_CLASSIFICATION	7.762418640223204E-6	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999960448530938	WITHOUT_CLASSIFICATION	3.955146906266288E-6	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999979268590078	WITHOUT_CLASSIFICATION	2.073140992131353E-6	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999988372302243	WITHOUT_CLASSIFICATION	1.1627697756196722E-6	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999967290987222	WITHOUT_CLASSIFICATION	3.2709012777932067E-6	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9998576801303448	WITHOUT_CLASSIFICATION	1.4231986965519689E-4	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.999857870922839	WITHOUT_CLASSIFICATION	1.4212907716105178E-4	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.999886698760071	WITHOUT_CLASSIFICATION	1.1330123992913445E-4	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999975764740213	WITHOUT_CLASSIFICATION	2.4235259787157426E-6	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999991014864519	WITHOUT_CLASSIFICATION	8.985135480053368E-7	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999962267930481	WITHOUT_CLASSIFICATION	3.7732069518490447E-6	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999961589134152	WITHOUT_CLASSIFICATION	3.841086584814137E-6	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999995194614323	WITHOUT_CLASSIFICATION	4.805385676579584E-7	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.999995637647013	WITHOUT_CLASSIFICATION	4.3623529869789036E-6	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999892452763535	WITHOUT_CLASSIFICATION	1.0754723646600585E-5	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9998250502418453	WITHOUT_CLASSIFICATION	1.749497581547228E-4	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9997028169115236	WITHOUT_CLASSIFICATION	2.971830884763786E-4	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999783591345779	WITHOUT_CLASSIFICATION	2.1640865422154237E-5	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999994217378428	WITHOUT_CLASSIFICATION	5.782621570292066E-7	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.999960736611058	WITHOUT_CLASSIFICATION	3.926338894211435E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9985024870604282	WITHOUT_CLASSIFICATION	0.0014975129395717827	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9985024870604282	WITHOUT_CLASSIFICATION	0.0014975129395717827	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.999991372976661	WITHOUT_CLASSIFICATION	8.627023339046206E-6	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999996009452982	WITHOUT_CLASSIFICATION	3.990547018964242E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999939966185855	WITHOUT_CLASSIFICATION	6.003381414589041E-6	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999855385561147	WITHOUT_CLASSIFICATION	1.4461443885335051E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999732059384846	WITHOUT_CLASSIFICATION	2.6794061515501827E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999732059384846	WITHOUT_CLASSIFICATION	2.6794061515501827E-5	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999621961258736	WITHOUT_CLASSIFICATION	3.780387412641375E-5	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.99993495914632	WITHOUT_CLASSIFICATION	6.504085367994259E-5	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999826101939773	WITHOUT_CLASSIFICATION	1.738980602270277E-5	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999975929811891	WITHOUT_CLASSIFICATION	2.407018810920464E-6	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999986431962777	WITHOUT_CLASSIFICATION	1.3568037221999265E-6	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999980637160117	WITHOUT_CLASSIFICATION	1.9362839882725523E-6	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999995576127185	WITHOUT_CLASSIFICATION	4.4238728145351474E-7	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999291378769072	WITHOUT_CLASSIFICATION	7.086212309280768E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999986668197465	WITHOUT_CLASSIFICATION	1.3331802535310683E-6	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999979894762057	WITHOUT_CLASSIFICATION	2.0105237942614005E-6	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.999880001048915	WITHOUT_CLASSIFICATION	1.1999895108505644E-4	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999340282380669	WITHOUT_CLASSIFICATION	6.59717619331372E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9997757645636379	WITHOUT_CLASSIFICATION	2.2423543636211317E-4	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999958321006223	WITHOUT_CLASSIFICATION	4.16789937773449E-6	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999097499219215	WITHOUT_CLASSIFICATION	9.025007807844816E-5	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.9999218594270611	WITHOUT_CLASSIFICATION	7.81405729387589E-5	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999916735670737	WITHOUT_CLASSIFICATION	8.326432926293862E-6	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999916735670737	WITHOUT_CLASSIFICATION	8.326432926293862E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999943962386663	WITHOUT_CLASSIFICATION	5.6037613337867766E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999943962386663	WITHOUT_CLASSIFICATION	5.6037613337867766E-6	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999991563844535	WITHOUT_CLASSIFICATION	8.436155464921424E-7	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999981277493905	WITHOUT_CLASSIFICATION	1.8722506095945845E-6	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999974205572999	WITHOUT_CLASSIFICATION	2.5794427000395663E-6	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999963325439619	WITHOUT_CLASSIFICATION	3.6674560379451415E-6	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999980312052162	WITHOUT_CLASSIFICATION	1.9687947838083192E-6	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.999986680977209	WITHOUT_CLASSIFICATION	1.3319022791006162E-5	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999831087562595	WITHOUT_CLASSIFICATION	1.689124374053996E-5	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999340282380669	WITHOUT_CLASSIFICATION	6.59717619331372E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9997757645636379	WITHOUT_CLASSIFICATION	2.2423543636211317E-4	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999097499219215	WITHOUT_CLASSIFICATION	9.025007807844816E-5	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.999990723937515	WITHOUT_CLASSIFICATION	9.276062485134805E-6	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999590332053471	WITHOUT_CLASSIFICATION	4.096679465299246E-5	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999987216342388	WITHOUT_CLASSIFICATION	1.2783657611662407E-6	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999748610351188	WITHOUT_CLASSIFICATION	2.5138964881196076E-5	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999989173691246	WITHOUT_CLASSIFICATION	1.0826308754205579E-6	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999998752722635	WITHOUT_CLASSIFICATION	1.2472773645205386E-7	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999861329218738	WITHOUT_CLASSIFICATION	1.3867078126146148E-5	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999718167324706	WITHOUT_CLASSIFICATION	2.818326752937901E-5	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999694828610605	WITHOUT_CLASSIFICATION	3.051713893951268E-5	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999998287126339	WITHOUT_CLASSIFICATION	1.712873660482029E-7	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999864493941203	WITHOUT_CLASSIFICATION	1.3550605879591478E-5	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999847415991994	WITHOUT_CLASSIFICATION	1.5258400800679375E-5	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999440275046425	WITHOUT_CLASSIFICATION	5.597249535744427E-5	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999984497989215	WITHOUT_CLASSIFICATION	1.5502010784618624E-6	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.999959881524978	WITHOUT_CLASSIFICATION	4.011847502215125E-5	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999947952271846	WITHOUT_CLASSIFICATION	5.204772815447E-6	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999847916351455	WITHOUT_CLASSIFICATION	1.5208364854489988E-5	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9992735146488338	WITHOUT_CLASSIFICATION	7.264853511662187E-4	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999914695869637	WITHOUT_CLASSIFICATION	8.530413036259728E-6	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999938047057535	WITHOUT_CLASSIFICATION	6.195294246553525E-6	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999993458165148	WITHOUT_CLASSIFICATION	6.541834851446136E-7	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999722798449054	WITHOUT_CLASSIFICATION	2.7720155094557398E-5	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999307690194486	WITHOUT_CLASSIFICATION	6.923098055142635E-5	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.999974256345765	WITHOUT_CLASSIFICATION	2.574365423503279E-5	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.999971599366836	WITHOUT_CLASSIFICATION	2.840063316396704E-5	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999725293930097	WITHOUT_CLASSIFICATION	2.7470606990293223E-5	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999702195881712	WITHOUT_CLASSIFICATION	2.9780411828791914E-5	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999269741904254	WITHOUT_CLASSIFICATION	7.302580957450806E-5	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.999997663014242	WITHOUT_CLASSIFICATION	2.3369857579635518E-6	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999985801945143	WITHOUT_CLASSIFICATION	1.4198054857286142E-6	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999989620241889	WITHOUT_CLASSIFICATION	1.037975811159847E-6	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999967354212231	WITHOUT_CLASSIFICATION	3.264578776902563E-6	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.999982630642181	WITHOUT_CLASSIFICATION	1.7369357819095296E-5	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999986403310746	WITHOUT_CLASSIFICATION	1.3596689255185065E-6	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999955146527439	WITHOUT_CLASSIFICATION	4.485347256042111E-6	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999320330744602	WITHOUT_CLASSIFICATION	6.796692553982552E-5	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999301718963356	WITHOUT_CLASSIFICATION	6.982810366448426E-5	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999242044050517	WITHOUT_CLASSIFICATION	7.579559494833013E-5	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999778670513582	WITHOUT_CLASSIFICATION	2.2132948641806677E-5	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999968688241572	WITHOUT_CLASSIFICATION	3.131175842913497E-6	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999993163436365	WITHOUT_CLASSIFICATION	6.836563636477878E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999939966185855	WITHOUT_CLASSIFICATION	6.003381414589041E-6	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999301718963356	WITHOUT_CLASSIFICATION	6.982810366448426E-5	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999892647019901	WITHOUT_CLASSIFICATION	1.0735298009903069E-5	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999405294315258	WITHOUT_CLASSIFICATION	5.947056847410046E-5	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.999998257736079	WITHOUT_CLASSIFICATION	1.7422639210832656E-6	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999948840970802	WITHOUT_CLASSIFICATION	5.115902919805787E-6	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999948840970802	WITHOUT_CLASSIFICATION	5.115902919805787E-6	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9998766025083641	WITHOUT_CLASSIFICATION	1.233974916359634E-4	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999992827405639	WITHOUT_CLASSIFICATION	7.172594360313112E-7	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999421227911469	WITHOUT_CLASSIFICATION	5.787720885313773E-5	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999766485781583	WITHOUT_CLASSIFICATION	2.3351421841678695E-5	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9998102950952218	WITHOUT_CLASSIFICATION	1.8970490477829112E-4	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999496468417265	WITHOUT_CLASSIFICATION	5.0353158273518034E-5	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999950293715619	WITHOUT_CLASSIFICATION	4.970628438148816E-6	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999991135352218	WITHOUT_CLASSIFICATION	8.864647782560595E-7	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999803495432358	WITHOUT_CLASSIFICATION	1.9650456764293018E-5	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999803495432358	WITHOUT_CLASSIFICATION	1.9650456764293018E-5	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999279845864657	WITHOUT_CLASSIFICATION	7.201541353431402E-5	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999914841920248	WITHOUT_CLASSIFICATION	8.515807975231812E-6	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999995417116715	WITHOUT_CLASSIFICATION	4.5828832852926783E-7	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9999971198335027	WITHOUT_CLASSIFICATION	2.8801664972142645E-6	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999872281256755	WITHOUT_CLASSIFICATION	1.277187432446128E-5	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.999983603873896	WITHOUT_CLASSIFICATION	1.639612610400084E-5	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999993579290377	WITHOUT_CLASSIFICATION	6.420709624092987E-7	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999992043195024	WITHOUT_CLASSIFICATION	7.956804976437418E-7	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9999757716623255	WITHOUT_CLASSIFICATION	2.422833767442577E-5	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999974481656855	WITHOUT_CLASSIFICATION	2.551834314467509E-6	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999014267429589	WITHOUT_CLASSIFICATION	9.857325704117223E-5	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.999989189599389	WITHOUT_CLASSIFICATION	1.0810400611022281E-5	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999725642060308	WITHOUT_CLASSIFICATION	2.7435793969227875E-5	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999655546438451	WITHOUT_CLASSIFICATION	3.44453561549975E-5	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999655546438451	WITHOUT_CLASSIFICATION	3.44453561549975E-5	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999881387734371	WITHOUT_CLASSIFICATION	1.186122656293854E-5	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999805013141201	WITHOUT_CLASSIFICATION	1.9498685879876053E-5	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.999998866376874	WITHOUT_CLASSIFICATION	1.1336231260453392E-6	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999979658477354	WITHOUT_CLASSIFICATION	2.0341522646710483E-6	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999997743181217	WITHOUT_CLASSIFICATION	2.2568187833874788E-7	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999805184504192	WITHOUT_CLASSIFICATION	1.9481549580711274E-5	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9998070876494651	WITHOUT_CLASSIFICATION	1.9291235053486331E-4	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999804339867759	WITHOUT_CLASSIFICATION	1.9566013224116533E-5	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.999959413330007	WITHOUT_CLASSIFICATION	4.0586669993043684E-5	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9999780133270865	WITHOUT_CLASSIFICATION	2.19866729134663E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999943208718094	WITHOUT_CLASSIFICATION	5.679128190547527E-6	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999982115469667	WITHOUT_CLASSIFICATION	1.788453033331658E-6	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9980553122480577	WITHOUT_CLASSIFICATION	0.0019446877519423583	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999999322249769	WITHOUT_CLASSIFICATION	6.777502315122729E-8	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999970939441136	WITHOUT_CLASSIFICATION	2.906055886391811E-6	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999967460772069	WITHOUT_CLASSIFICATION	3.253922793121125E-6	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999976663213972	WITHOUT_CLASSIFICATION	2.333678602890005E-6	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999802589387067	WITHOUT_CLASSIFICATION	1.9741061293257006E-5	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999960521216597	WITHOUT_CLASSIFICATION	3.9478783402790945E-6	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9998862745919226	WITHOUT_CLASSIFICATION	1.1372540807743243E-4	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9999637793559837	WITHOUT_CLASSIFICATION	3.622064401627486E-5	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.999967738346406	WITHOUT_CLASSIFICATION	3.2261653593987805E-5	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9998703215788182	WITHOUT_CLASSIFICATION	1.296784211818125E-4	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999530389225847	WITHOUT_CLASSIFICATION	4.696107741522449E-5	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9996612230879458	WITHOUT_CLASSIFICATION	3.3877691205414444E-4	IMPLEMENTATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999829945233734	WITHOUT_CLASSIFICATION	1.7005476626570562E-5	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9999896023392955	WITHOUT_CLASSIFICATION	1.0397660704528979E-5	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9999349475507768	WITHOUT_CLASSIFICATION	6.505244922315953E-5	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9999820599338604	WITHOUT_CLASSIFICATION	1.7940066139674332E-5	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.999951351555455	WITHOUT_CLASSIFICATION	4.864844454498605E-5	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999990281076339	WITHOUT_CLASSIFICATION	9.718923661575884E-7	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9999890477769091	WITHOUT_CLASSIFICATION	1.0952223090840582E-5	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999980710622514	WITHOUT_CLASSIFICATION	1.928937748611975E-6	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9998907886077635	WITHOUT_CLASSIFICATION	1.092113922365781E-4	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999507300295162	WITHOUT_CLASSIFICATION	4.926997048373817E-5	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999882139091378	WITHOUT_CLASSIFICATION	1.1786090862129481E-5	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999766634058405	WITHOUT_CLASSIFICATION	2.3336594159612276E-5	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999972659985424	WITHOUT_CLASSIFICATION	2.7340014575059168E-6	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999927077604385	WITHOUT_CLASSIFICATION	7.2922395615185155E-6	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999970154839796	WITHOUT_CLASSIFICATION	2.984516020513581E-6	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9998181286709875	WITHOUT_CLASSIFICATION	1.8187132901250169E-4	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999872181476314	WITHOUT_CLASSIFICATION	1.2781852368613777E-5	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.999618304179881	WITHOUT_CLASSIFICATION	3.8169582011900974E-4	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999559074760618	WITHOUT_CLASSIFICATION	4.409252393831519E-5	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9997714221237036	WITHOUT_CLASSIFICATION	2.2857787629622828E-4	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999890836727089	WITHOUT_CLASSIFICATION	1.0916327291103355E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999872284423208	WITHOUT_CLASSIFICATION	1.2771557679250095E-5	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999741053188925	WITHOUT_CLASSIFICATION	2.5894681107477188E-5	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999858276562913	WITHOUT_CLASSIFICATION	1.4172343708669081E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999651747953414	WITHOUT_CLASSIFICATION	3.482520465864792E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999651747953414	WITHOUT_CLASSIFICATION	3.482520465864792E-5	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999768072557165	WITHOUT_CLASSIFICATION	2.3192744283543194E-5	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999890583032521	WITHOUT_CLASSIFICATION	1.0941696747752293E-5	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999938778819548	WITHOUT_CLASSIFICATION	6.122118045166704E-6	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999982964712427	WITHOUT_CLASSIFICATION	1.7035287573283924E-6	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999992768689939	WITHOUT_CLASSIFICATION	7.231310061875272E-7	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999999580691283	WITHOUT_CLASSIFICATION	4.1930871622657025E-8	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999994519420369	WITHOUT_CLASSIFICATION	5.480579631599992E-7	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999953683787071	WITHOUT_CLASSIFICATION	4.631621293016051E-6	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999987117848421	WITHOUT_CLASSIFICATION	1.2882151579147588E-6	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999888423705185	WITHOUT_CLASSIFICATION	1.1157629481426328E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999861835555426	WITHOUT_CLASSIFICATION	1.3816444457311846E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999861835555426	WITHOUT_CLASSIFICATION	1.3816444457311846E-5	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999861835555426	WITHOUT_CLASSIFICATION	1.3816444457311846E-5	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999975201980235	WITHOUT_CLASSIFICATION	2.4798019765910396E-6	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999949054859097	WITHOUT_CLASSIFICATION	5.094514090272636E-6	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9999948234866877	WITHOUT_CLASSIFICATION	5.1765133123598386E-6	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999847582838909	WITHOUT_CLASSIFICATION	1.5241716109104031E-5	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999847582838909	WITHOUT_CLASSIFICATION	1.5241716109104031E-5	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999940054455456	WITHOUT_CLASSIFICATION	5.994554454388233E-6	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999732767939359	WITHOUT_CLASSIFICATION	2.6723206064209297E-5	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.999983736792282	WITHOUT_CLASSIFICATION	1.6263207718032062E-5	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999725977002549	WITHOUT_CLASSIFICATION	2.7402299745027986E-5	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999712763338637	WITHOUT_CLASSIFICATION	2.8723666136351055E-5	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999979787828481	WITHOUT_CLASSIFICATION	2.021217151808199E-6	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999841018672884	WITHOUT_CLASSIFICATION	1.5898132711621893E-5	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999753267609177	WITHOUT_CLASSIFICATION	2.4673239082267837E-5	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999961991195732	WITHOUT_CLASSIFICATION	3.8008804267672287E-6	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999934250288225	WITHOUT_CLASSIFICATION	6.57497117745376E-6	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999934250288225	WITHOUT_CLASSIFICATION	6.57497117745376E-6	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.999966282108273	WITHOUT_CLASSIFICATION	3.371789172710323E-5	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999801147629468	WITHOUT_CLASSIFICATION	1.9885237053231794E-5	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999940148790939	WITHOUT_CLASSIFICATION	5.98512090613585E-6	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999570389462491	WITHOUT_CLASSIFICATION	4.296105375090313E-5	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999962657341915	WITHOUT_CLASSIFICATION	3.7342658083835395E-6	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999782432549355	WITHOUT_CLASSIFICATION	2.175674506455554E-5	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999767006829859	WITHOUT_CLASSIFICATION	2.3299317014099835E-5	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999319886459824	WITHOUT_CLASSIFICATION	6.801135401765675E-5	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.999770868587944	WITHOUT_CLASSIFICATION	2.2913141205607281E-4	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9997441481105149	WITHOUT_CLASSIFICATION	2.558518894850456E-4	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.999875725330754	WITHOUT_CLASSIFICATION	1.2427466924603612E-4	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.999756477609516	WITHOUT_CLASSIFICATION	2.4352239048392333E-4	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9998334514227322	WITHOUT_CLASSIFICATION	1.6654857726791907E-4	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9997116605296963	WITHOUT_CLASSIFICATION	2.8833947030365635E-4	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9992592600962908	WITHOUT_CLASSIFICATION	7.407399037092334E-4	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9997621910008626	WITHOUT_CLASSIFICATION	2.3780899913740912E-4	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.999959849346629	WITHOUT_CLASSIFICATION	4.015065337100131E-5	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999840499307951	WITHOUT_CLASSIFICATION	1.5950069204905436E-5	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999963036585363	WITHOUT_CLASSIFICATION	3.696341463758092E-6	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999916415014417	WITHOUT_CLASSIFICATION	8.358498558346972E-6	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999316115339069	WITHOUT_CLASSIFICATION	6.838846609315043E-5	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9998312440533486	WITHOUT_CLASSIFICATION	1.6875594665146797E-4	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999862179502043	WITHOUT_CLASSIFICATION	1.3782049795678844E-5	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.999995542743101	WITHOUT_CLASSIFICATION	4.4572568990532395E-6	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999286214362064	WITHOUT_CLASSIFICATION	7.137856379354314E-5	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999639102251232	WITHOUT_CLASSIFICATION	3.6089774876769594E-5	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999485761007054	WITHOUT_CLASSIFICATION	5.142389929469104E-5	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999842528863958	WITHOUT_CLASSIFICATION	1.5747113604196187E-5	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999946551475938	WITHOUT_CLASSIFICATION	5.344852406141247E-6	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9997434266837264	WITHOUT_CLASSIFICATION	2.5657331627357977E-4	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9997657653070904	WITHOUT_CLASSIFICATION	2.3423469290955286E-4	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999962069777046	WITHOUT_CLASSIFICATION	3.7930222953725764E-6	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999939543017873	WITHOUT_CLASSIFICATION	6.04569821262478E-6	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9997657653070904	WITHOUT_CLASSIFICATION	2.3423469290955286E-4	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999862176014982	WITHOUT_CLASSIFICATION	1.3782398501842085E-5	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999985459884496	WITHOUT_CLASSIFICATION	1.454011550446639E-6	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.999959151439053	WITHOUT_CLASSIFICATION	4.084856094702192E-5	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999551826133112	WITHOUT_CLASSIFICATION	4.4817386688911904E-5	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999394061016593	WITHOUT_CLASSIFICATION	6.0593898340652905E-5	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999903787258091	WITHOUT_CLASSIFICATION	9.621274190985395E-6	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999759690507449	WITHOUT_CLASSIFICATION	2.4030949255074998E-5	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999708761875913	WITHOUT_CLASSIFICATION	2.9123812408732957E-5	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9998937510016193	WITHOUT_CLASSIFICATION	1.0624899838070358E-4	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9998726412436496	WITHOUT_CLASSIFICATION	1.2735875635039865E-4	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9998749993135229	WITHOUT_CLASSIFICATION	1.2500068647711927E-4	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999323449104752	WITHOUT_CLASSIFICATION	6.765508952477425E-5	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999713058931118	WITHOUT_CLASSIFICATION	2.8694106888289103E-5	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999723721121513	WITHOUT_CLASSIFICATION	2.762788784879502E-5	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999867859284223	WITHOUT_CLASSIFICATION	1.3214071577783205E-5	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999929835685344	WITHOUT_CLASSIFICATION	7.016431465556952E-6	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999897511202352	WITHOUT_CLASSIFICATION	1.0248879764733566E-5	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999922119246301	WITHOUT_CLASSIFICATION	7.78807536989571E-6	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999811527233394	WITHOUT_CLASSIFICATION	1.8847276660615584E-5	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999755634428568	WITHOUT_CLASSIFICATION	2.4436557143279318E-5	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.999969298484869	WITHOUT_CLASSIFICATION	3.0701515130943506E-5	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999775501069467	WITHOUT_CLASSIFICATION	2.244989305333481E-5	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999287612701839	WITHOUT_CLASSIFICATION	7.123872981601684E-5	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999477983789992	WITHOUT_CLASSIFICATION	5.2201621000729054E-5	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999533803390034	WITHOUT_CLASSIFICATION	4.6619660996556123E-5	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999994225282248	WITHOUT_CLASSIFICATION	5.774717750788592E-7	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999952672313357	WITHOUT_CLASSIFICATION	4.732768664342898E-6	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999792536775615	WITHOUT_CLASSIFICATION	2.0746322438575217E-5	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9997318438802825	WITHOUT_CLASSIFICATION	2.6815611971746985E-4	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.99974869459395	WITHOUT_CLASSIFICATION	2.5130540604999474E-4	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9997611607262246	WITHOUT_CLASSIFICATION	2.3883927377541528E-4	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9998569590108913	WITHOUT_CLASSIFICATION	1.4304098910871145E-4	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.999866741552907	WITHOUT_CLASSIFICATION	1.3325844709299902E-4	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999972136686025	WITHOUT_CLASSIFICATION	2.7863313974923864E-6	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9998020774632813	WITHOUT_CLASSIFICATION	1.9792253671857118E-4	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.99995443846094	WITHOUT_CLASSIFICATION	4.556153906001951E-5	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9999467108859148	WITHOUT_CLASSIFICATION	5.3289114085115044E-5	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9996432868948941	WITHOUT_CLASSIFICATION	3.5671310510583054E-4	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999872560492631	WITHOUT_CLASSIFICATION	1.274395073679176E-5	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.999892646471588	WITHOUT_CLASSIFICATION	1.0735352841202166E-4	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9998931646248861	WITHOUT_CLASSIFICATION	1.0683537511387963E-4	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999605770239998	WITHOUT_CLASSIFICATION	3.9422976000226605E-5	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9996667753232124	WITHOUT_CLASSIFICATION	3.3322467678767215E-4	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9999759961767621	WITHOUT_CLASSIFICATION	2.4003823237964205E-5	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999575592024249	WITHOUT_CLASSIFICATION	4.244079757517548E-5	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9999504352124016	WITHOUT_CLASSIFICATION	4.956478759842053E-5	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9999029361294054	WITHOUT_CLASSIFICATION	9.706387059452536E-5	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999256362163346	WITHOUT_CLASSIFICATION	7.436378366546999E-5	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999884487279057	WITHOUT_CLASSIFICATION	1.1551272094255342E-5	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.9999433179696255	WITHOUT_CLASSIFICATION	5.668203037436467E-5	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9996855990434756	WITHOUT_CLASSIFICATION	3.144009565243354E-4	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999941072897204	WITHOUT_CLASSIFICATION	5.892710279617222E-6	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999867727700325	WITHOUT_CLASSIFICATION	1.3227229967524736E-5	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999884487279057	WITHOUT_CLASSIFICATION	1.1551272094255342E-5	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9995779187825752	WITHOUT_CLASSIFICATION	4.2208121742487453E-4	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9995779187825752	WITHOUT_CLASSIFICATION	4.2208121742487453E-4	IMPLEMENTATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9998301374437892	WITHOUT_CLASSIFICATION	1.698625562107723E-4	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.999934244402831	WITHOUT_CLASSIFICATION	6.575559716898974E-5	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.999997554069078	WITHOUT_CLASSIFICATION	2.445930922045396E-6	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999949516763363	WITHOUT_CLASSIFICATION	5.048323663686857E-6	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999902918153507	WITHOUT_CLASSIFICATION	9.70818464930212E-6	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999528394996854	WITHOUT_CLASSIFICATION	4.716050031461736E-5	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999690130290689	WITHOUT_CLASSIFICATION	3.0986970931138736E-5	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9974597219007276	WITHOUT_CLASSIFICATION	0.002540278099272444	IMPLEMENTATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999681402283794	WITHOUT_CLASSIFICATION	3.185977162051764E-5	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.999995235117697	WITHOUT_CLASSIFICATION	4.764882303134464E-6	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999949380869444	WITHOUT_CLASSIFICATION	5.061913055546365E-6	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999998810433897	WITHOUT_CLASSIFICATION	1.189566102437408E-7	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.99998668755002	WITHOUT_CLASSIFICATION	1.3312449980140767E-5	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.999983387949085	WITHOUT_CLASSIFICATION	1.661205091493616E-5	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999984677265749	WITHOUT_CLASSIFICATION	1.5322734250602604E-6	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999986056838889	WITHOUT_CLASSIFICATION	1.3943161111278982E-6	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999735013960407	WITHOUT_CLASSIFICATION	2.649860395932111E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9995353957685684	WITHOUT_CLASSIFICATION	4.6460423143159386E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9995353957685684	WITHOUT_CLASSIFICATION	4.6460423143159386E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9995353957685684	WITHOUT_CLASSIFICATION	4.6460423143159386E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9995353957685684	WITHOUT_CLASSIFICATION	4.6460423143159386E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9995353957685684	WITHOUT_CLASSIFICATION	4.6460423143159386E-4	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9999632925386064	WITHOUT_CLASSIFICATION	3.670746139366362E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999907114930234	WITHOUT_CLASSIFICATION	9.288506976557979E-6	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999153479702272	WITHOUT_CLASSIFICATION	8.465202977281535E-5	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.999995225356142	WITHOUT_CLASSIFICATION	4.774643857900727E-6	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999118435420052	WITHOUT_CLASSIFICATION	8.81564579947557E-5	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999862130606821	WITHOUT_CLASSIFICATION	1.378693931792613E-5	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9998336473093492	WITHOUT_CLASSIFICATION	1.6635269065080568E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999350343796053	WITHOUT_CLASSIFICATION	6.49656203946906E-5	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999733856407359	WITHOUT_CLASSIFICATION	2.6614359264157794E-5	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9999608648278514	WITHOUT_CLASSIFICATION	3.913517214867288E-5	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9999582789041591	WITHOUT_CLASSIFICATION	4.172109584088239E-5	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9999666989896996	WITHOUT_CLASSIFICATION	3.3301010300473634E-5	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9999663792916501	WITHOUT_CLASSIFICATION	3.362070834996884E-5	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9999649836290563	WITHOUT_CLASSIFICATION	3.501637094372014E-5	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9999637325328488	WITHOUT_CLASSIFICATION	3.626746715136187E-5	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9999634201374014	WITHOUT_CLASSIFICATION	3.657986259872104E-5	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9999632527153736	WITHOUT_CLASSIFICATION	3.674728462644786E-5	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9999649368002558	WITHOUT_CLASSIFICATION	3.506319974426471E-5	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9999629171876129	WITHOUT_CLASSIFICATION	3.708281238714605E-5	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999642267330645	WITHOUT_CLASSIFICATION	3.577326693555697E-5	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.999961855020226	WITHOUT_CLASSIFICATION	3.814497977394931E-5	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.999960343154447	WITHOUT_CLASSIFICATION	3.965684555295343E-5	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999615019320152	WITHOUT_CLASSIFICATION	3.8498067984749486E-5	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9999607443008853	WITHOUT_CLASSIFICATION	3.9255699114608316E-5	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999621091751413	WITHOUT_CLASSIFICATION	3.789082485875281E-5	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9999608805850491	WITHOUT_CLASSIFICATION	3.91194149508965E-5	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9999633743974204	WITHOUT_CLASSIFICATION	3.662560257951757E-5	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9999630572419926	WITHOUT_CLASSIFICATION	3.694275800738014E-5	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999604910904795	WITHOUT_CLASSIFICATION	3.950890952060206E-5	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999611846600804	WITHOUT_CLASSIFICATION	3.881533991950218E-5	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999565289128648	WITHOUT_CLASSIFICATION	4.347108713517116E-5	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9999630405685437	WITHOUT_CLASSIFICATION	3.695943145636512E-5	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.99996213259273	WITHOUT_CLASSIFICATION	3.786740726989957E-5	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9999575434972731	WITHOUT_CLASSIFICATION	4.245650272701963E-5	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9999575630846633	WITHOUT_CLASSIFICATION	4.2436915336602505E-5	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9999546795345179	WITHOUT_CLASSIFICATION	4.5320465482146046E-5	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9999589155671759	WITHOUT_CLASSIFICATION	4.10844328241973E-5	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9999557700682145	WITHOUT_CLASSIFICATION	4.4229931785446415E-5	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.9999598000259122	WITHOUT_CLASSIFICATION	4.01999740878238E-5	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9999575467997641	WITHOUT_CLASSIFICATION	4.2453200235822824E-5	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9999597073782266	WITHOUT_CLASSIFICATION	4.0292621773372196E-5	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999572826853792	WITHOUT_CLASSIFICATION	4.2717314620926484E-5	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9999591492970343	WITHOUT_CLASSIFICATION	4.085070296569219E-5	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.999958905238205	WITHOUT_CLASSIFICATION	4.109476179506703E-5	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9999635038435267	WITHOUT_CLASSIFICATION	3.649615647330594E-5	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9999610385883355	WITHOUT_CLASSIFICATION	3.896141166453896E-5	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9999598058116077	WITHOUT_CLASSIFICATION	4.019418839230324E-5	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9999638951150263	WITHOUT_CLASSIFICATION	3.610488497378454E-5	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.999961288089037	WITHOUT_CLASSIFICATION	3.871191096312941E-5	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9999587888666703	WITHOUT_CLASSIFICATION	4.121113332962215E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999153479702272	WITHOUT_CLASSIFICATION	8.465202977281535E-5	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.999959481572068	WITHOUT_CLASSIFICATION	4.051842793194636E-5	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.999959871920769	WITHOUT_CLASSIFICATION	4.0128079230952554E-5	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999595862103582	WITHOUT_CLASSIFICATION	4.041378964188637E-5	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999546885365453	WITHOUT_CLASSIFICATION	4.531146345455039E-5	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9999559964346522	WITHOUT_CLASSIFICATION	4.400356534782864E-5	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9999590466676141	WITHOUT_CLASSIFICATION	4.095333238578202E-5	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9999588884767073	WITHOUT_CLASSIFICATION	4.1111523292590995E-5	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999575349245634	WITHOUT_CLASSIFICATION	4.246507543647102E-5	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9999565273003836	WITHOUT_CLASSIFICATION	4.347269961632751E-5	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9999568829302575	WITHOUT_CLASSIFICATION	4.311706974246085E-5	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.999954778192722	WITHOUT_CLASSIFICATION	4.52218072779202E-5	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.9999566844169253	WITHOUT_CLASSIFICATION	4.3315583074685784E-5	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.999957818587456	WITHOUT_CLASSIFICATION	4.218141254402199E-5	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9999608161985655	WITHOUT_CLASSIFICATION	3.918380143443653E-5	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9999595282955857	WITHOUT_CLASSIFICATION	4.047170441434866E-5	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999637394414282	WITHOUT_CLASSIFICATION	3.6260558571731656E-5	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9999629175421331	WITHOUT_CLASSIFICATION	3.70824578669378E-5	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9999617197180329	WITHOUT_CLASSIFICATION	3.828028196698315E-5	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9999608483304332	WITHOUT_CLASSIFICATION	3.915166956683224E-5	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9999608418899448	WITHOUT_CLASSIFICATION	3.9158110055183994E-5	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9999608592683328	WITHOUT_CLASSIFICATION	3.9140731667255104E-5	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9999585768591139	WITHOUT_CLASSIFICATION	4.142314088596237E-5	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.99995771634278	WITHOUT_CLASSIFICATION	4.22836572200027E-5	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9999623618683546	WITHOUT_CLASSIFICATION	3.763813164540277E-5	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9999582466272832	WITHOUT_CLASSIFICATION	4.175337271675372E-5	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9999595241618348	WITHOUT_CLASSIFICATION	4.0475838165284284E-5	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999567332684407	WITHOUT_CLASSIFICATION	4.326673155932099E-5	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999599561219491	WITHOUT_CLASSIFICATION	4.004387805090095E-5	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9999629491475936	WITHOUT_CLASSIFICATION	3.7050852406331175E-5	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9999614077219819	WITHOUT_CLASSIFICATION	3.8592278018140654E-5	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9999605509504131	WITHOUT_CLASSIFICATION	3.944904958681281E-5	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9999558191955762	WITHOUT_CLASSIFICATION	4.4180804423939956E-5	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9999582312026171	WITHOUT_CLASSIFICATION	4.176879738292255E-5	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.999960385919194	WITHOUT_CLASSIFICATION	3.9614080806064596E-5	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9999593904156996	WITHOUT_CLASSIFICATION	4.060958430031681E-5	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9999601775043825	WITHOUT_CLASSIFICATION	3.9822495617429434E-5	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9999593609858883	WITHOUT_CLASSIFICATION	4.063901411168136E-5	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9999554063413213	WITHOUT_CLASSIFICATION	4.4593658678752415E-5	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9999568292952246	WITHOUT_CLASSIFICATION	4.317070477538718E-5	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9999594524069951	WITHOUT_CLASSIFICATION	4.054759300489673E-5	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9999595058348959	WITHOUT_CLASSIFICATION	4.0494165104071984E-5	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9999571801140601	WITHOUT_CLASSIFICATION	4.2819885939894035E-5	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999591066279412	WITHOUT_CLASSIFICATION	4.0893372058828485E-5	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9999580669591482	WITHOUT_CLASSIFICATION	4.1933040851827766E-5	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999563533301572	WITHOUT_CLASSIFICATION	4.3646669842805025E-5	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999582783852798	WITHOUT_CLASSIFICATION	4.1721614720195275E-5	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999608327098821	WITHOUT_CLASSIFICATION	3.916729011796073E-5	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999582446640285	WITHOUT_CLASSIFICATION	4.175533597151663E-5	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9999595770526087	WITHOUT_CLASSIFICATION	4.042294739127921E-5	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9999640592874759	WITHOUT_CLASSIFICATION	3.594071252414622E-5	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9999601930550879	WITHOUT_CLASSIFICATION	3.9806944912014185E-5	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9999618291934925	WITHOUT_CLASSIFICATION	3.8170806507378665E-5	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9999606807607835	WITHOUT_CLASSIFICATION	3.931923921656875E-5	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9999627374475659	WITHOUT_CLASSIFICATION	3.7262552434096315E-5	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9999610084389494	WITHOUT_CLASSIFICATION	3.8991561050527915E-5	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9999583314193822	WITHOUT_CLASSIFICATION	4.166858061783907E-5	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.999964166080078	WITHOUT_CLASSIFICATION	3.583391992204956E-5	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9999622352504909	WITHOUT_CLASSIFICATION	3.7764749509063476E-5	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9999605467959066	WITHOUT_CLASSIFICATION	3.94532040934208E-5	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999621579320629	WITHOUT_CLASSIFICATION	3.7842067937131453E-5	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999581304885621	WITHOUT_CLASSIFICATION	4.186951143786817E-5	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999594050826591	WITHOUT_CLASSIFICATION	4.059491734087383E-5	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9999583292507057	WITHOUT_CLASSIFICATION	4.16707492943693E-5	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9999595456688174	WITHOUT_CLASSIFICATION	4.045433118260375E-5	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9999605884693549	WITHOUT_CLASSIFICATION	3.941153064512386E-5	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.999959359813675	WITHOUT_CLASSIFICATION	4.064018632507522E-5	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9999602564566195	WITHOUT_CLASSIFICATION	3.974354338056083E-5	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9999565488557848	WITHOUT_CLASSIFICATION	4.3451144215210535E-5	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9999583195489846	WITHOUT_CLASSIFICATION	4.168045101541885E-5	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9999628155180287	WITHOUT_CLASSIFICATION	3.7184481971315257E-5	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999622204723259	WITHOUT_CLASSIFICATION	3.7779527674196905E-5	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999586585949223	WITHOUT_CLASSIFICATION	4.134140507771807E-5	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999610029001834	WITHOUT_CLASSIFICATION	3.899709981663755E-5	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.999965453432708	WITHOUT_CLASSIFICATION	3.4546567291989E-5	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9999614662280976	WITHOUT_CLASSIFICATION	3.8533771902384044E-5	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9999614795135443	WITHOUT_CLASSIFICATION	3.85204864557501E-5	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9999627187771006	WITHOUT_CLASSIFICATION	3.7281222899374994E-5	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.999962396628728	WITHOUT_CLASSIFICATION	3.7603371271947186E-5	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9999583081014572	WITHOUT_CLASSIFICATION	4.169189854271642E-5	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999625154892711	WITHOUT_CLASSIFICATION	3.748451072885015E-5	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9999613351086921	WITHOUT_CLASSIFICATION	3.8664891307875455E-5	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9999626012793851	WITHOUT_CLASSIFICATION	3.7398720614967095E-5	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999601712516499	WITHOUT_CLASSIFICATION	3.98287483500532E-5	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9999588650763938	WITHOUT_CLASSIFICATION	4.113492360622354E-5	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9999567320987376	WITHOUT_CLASSIFICATION	4.32679012624265E-5	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999616295004434	WITHOUT_CLASSIFICATION	3.837049955663475E-5	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9999591137563949	WITHOUT_CLASSIFICATION	4.088624360513218E-5	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9999574341878572	WITHOUT_CLASSIFICATION	4.256581214278245E-5	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999586674041424	WITHOUT_CLASSIFICATION	4.1332595857564715E-5	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9999578539926538	WITHOUT_CLASSIFICATION	4.214600734613123E-5	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999619416830848	WITHOUT_CLASSIFICATION	3.8058316915109E-5	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9999597857487889	WITHOUT_CLASSIFICATION	4.0214251211102963E-5	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9999587709700277	WITHOUT_CLASSIFICATION	4.122902997224104E-5	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9999601764648886	WITHOUT_CLASSIFICATION	3.9823535111368446E-5	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.999968261175017	WITHOUT_CLASSIFICATION	3.173882498309441E-5	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999670669324889	WITHOUT_CLASSIFICATION	3.2933067511066824E-5	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9999670509797994	WITHOUT_CLASSIFICATION	3.294902020061588E-5	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9999664758881663	WITHOUT_CLASSIFICATION	3.352411183367999E-5	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9999657912668157	WITHOUT_CLASSIFICATION	3.420873318419433E-5	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9999679284970071	WITHOUT_CLASSIFICATION	3.207150299281495E-5	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9999677650661106	WITHOUT_CLASSIFICATION	3.223493388936169E-5	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9999635776958533	WITHOUT_CLASSIFICATION	3.642230414678063E-5	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.999964349226046	WITHOUT_CLASSIFICATION	3.565077395399004E-5	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9999657113874754	WITHOUT_CLASSIFICATION	3.428861252467004E-5	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9999644628644114	WITHOUT_CLASSIFICATION	3.5537135588651216E-5	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9999652075565683	WITHOUT_CLASSIFICATION	3.479244343177762E-5	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9999663039375144	WITHOUT_CLASSIFICATION	3.369606248566654E-5	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9999631295921739	WITHOUT_CLASSIFICATION	3.6870407826026995E-5	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9999646321209044	WITHOUT_CLASSIFICATION	3.5367879095629904E-5	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.999964729850804	WITHOUT_CLASSIFICATION	3.52701491959646E-5	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.999965729367436	WITHOUT_CLASSIFICATION	3.427063256401493E-5	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999646200481711	WITHOUT_CLASSIFICATION	3.53799518288763E-5	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9999681595286551	WITHOUT_CLASSIFICATION	3.184047134477344E-5	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9999690259048458	WITHOUT_CLASSIFICATION	3.09740951542742E-5	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9999654370242534	WITHOUT_CLASSIFICATION	3.4562975746586074E-5	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999658226809676	WITHOUT_CLASSIFICATION	3.417731903251397E-5	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.999966799007483	WITHOUT_CLASSIFICATION	3.320099251704236E-5	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9999638928669512	WITHOUT_CLASSIFICATION	3.610713304884842E-5	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9999651906618416	WITHOUT_CLASSIFICATION	3.480933815833656E-5	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.999967944353925	WITHOUT_CLASSIFICATION	3.205564607499918E-5	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999662171011859	WITHOUT_CLASSIFICATION	3.378289881399707E-5	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9999649242724321	WITHOUT_CLASSIFICATION	3.507572756787773E-5	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9999644435286861	WITHOUT_CLASSIFICATION	3.555647131390357E-5	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999659497912339	WITHOUT_CLASSIFICATION	3.405020876608158E-5	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9999639402525015	WITHOUT_CLASSIFICATION	3.605974749857879E-5	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9999615402433275	WITHOUT_CLASSIFICATION	3.845975667236434E-5	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999626272409657	WITHOUT_CLASSIFICATION	3.737275903427734E-5	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9999627011351272	WITHOUT_CLASSIFICATION	3.729886487283737E-5	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9999613956402822	WITHOUT_CLASSIFICATION	3.8604359717841714E-5	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9999616012777824	WITHOUT_CLASSIFICATION	3.8398722217539286E-5	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9999621130876237	WITHOUT_CLASSIFICATION	3.788691237630659E-5	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.999963955517293	WITHOUT_CLASSIFICATION	3.604448270691592E-5	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9999662364366765	WITHOUT_CLASSIFICATION	3.3763563323568885E-5	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999641646711682	WITHOUT_CLASSIFICATION	3.5835328831745557E-5	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.999962986822549	WITHOUT_CLASSIFICATION	3.701317745094172E-5	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999658816419457	WITHOUT_CLASSIFICATION	3.411835805426542E-5	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9999628700602828	WITHOUT_CLASSIFICATION	3.7129939717227084E-5	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9999638596329701	WITHOUT_CLASSIFICATION	3.614036702996791E-5	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9999644103414923	WITHOUT_CLASSIFICATION	3.5589658507767494E-5	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.999963849563658	WITHOUT_CLASSIFICATION	3.615043634198358E-5	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999591450125286	WITHOUT_CLASSIFICATION	4.0854987471479266E-5	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.999961410922143	WITHOUT_CLASSIFICATION	3.8589077857027804E-5	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9999626782690547	WITHOUT_CLASSIFICATION	3.732173094518927E-5	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9999605347449629	WITHOUT_CLASSIFICATION	3.946525503709929E-5	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9999634706443269	WITHOUT_CLASSIFICATION	3.652935567313339E-5	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.999963836358977	WITHOUT_CLASSIFICATION	3.616364102305918E-5	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9999647303577339	WITHOUT_CLASSIFICATION	3.526964226606537E-5	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9999611008078694	WITHOUT_CLASSIFICATION	3.88991921306715E-5	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9999633066301118	WITHOUT_CLASSIFICATION	3.669336988826711E-5	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9999664718383382	WITHOUT_CLASSIFICATION	3.3528161661751126E-5	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9999668420823071	WITHOUT_CLASSIFICATION	3.315791769289909E-5	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.999966192345137	WITHOUT_CLASSIFICATION	3.3807654863067876E-5	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9999643508876205	WITHOUT_CLASSIFICATION	3.5649112379610856E-5	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999664223969245	WITHOUT_CLASSIFICATION	3.3577603075476094E-5	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9999638494042348	WITHOUT_CLASSIFICATION	3.615059576517208E-5	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9999637411116644	WITHOUT_CLASSIFICATION	3.625888833555486E-5	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.99996296774381	WITHOUT_CLASSIFICATION	3.703225618994104E-5	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9999632679861493	WITHOUT_CLASSIFICATION	3.6732013850656136E-5	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9999631166109643	WITHOUT_CLASSIFICATION	3.688338903568977E-5	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.999962616375485	WITHOUT_CLASSIFICATION	3.738362451490155E-5	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9999650588497421	WITHOUT_CLASSIFICATION	3.4941150257984775E-5	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999625809503299	WITHOUT_CLASSIFICATION	3.741904967019218E-5	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999646039753233	WITHOUT_CLASSIFICATION	3.539602467679829E-5	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9999622434300238	WITHOUT_CLASSIFICATION	3.775656997610597E-5	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9999652056774821	WITHOUT_CLASSIFICATION	3.479432251790993E-5	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9999651057386821	WITHOUT_CLASSIFICATION	3.4894261317929015E-5	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9999644981708393	WITHOUT_CLASSIFICATION	3.5501829160655864E-5	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9999642453979767	WITHOUT_CLASSIFICATION	3.5754602023298824E-5	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9999623816146076	WITHOUT_CLASSIFICATION	3.761838539234559E-5	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999575464442853	WITHOUT_CLASSIFICATION	4.245355571470691E-5	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999597363081419	WITHOUT_CLASSIFICATION	4.026369185810001E-5	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.999959127657513	WITHOUT_CLASSIFICATION	4.0872342486852224E-5	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999620433406302	WITHOUT_CLASSIFICATION	3.795665936974207E-5	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9999605641500398	WITHOUT_CLASSIFICATION	3.9435849960243956E-5	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9999627034712294	WITHOUT_CLASSIFICATION	3.729652877059047E-5	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9999597826860457	WITHOUT_CLASSIFICATION	4.021731395443945E-5	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9999618796596805	WITHOUT_CLASSIFICATION	3.812034031944195E-5	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999602226572968	WITHOUT_CLASSIFICATION	3.9777342703120685E-5	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999636246394877	WITHOUT_CLASSIFICATION	3.637536051221663E-5	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9999651453020877	WITHOUT_CLASSIFICATION	3.4854697912298586E-5	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999643552675718	WITHOUT_CLASSIFICATION	3.564473242818155E-5	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9999610177764215	WITHOUT_CLASSIFICATION	3.898222357852271E-5	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9999638684361576	WITHOUT_CLASSIFICATION	3.613156384245801E-5	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9999635926516447	WITHOUT_CLASSIFICATION	3.6407348355276156E-5	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9999634173351197	WITHOUT_CLASSIFICATION	3.658266488025807E-5	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9999587107405828	WITHOUT_CLASSIFICATION	4.128925941716777E-5	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.9999602386291326	WITHOUT_CLASSIFICATION	3.976137086745214E-5	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9999585152038103	WITHOUT_CLASSIFICATION	4.148479618975977E-5	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.999959668881561	WITHOUT_CLASSIFICATION	4.033111843908515E-5	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9999582090304252	WITHOUT_CLASSIFICATION	4.179096957484152E-5	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9999595537425363	WITHOUT_CLASSIFICATION	4.0446257463739854E-5	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9999593562872385	WITHOUT_CLASSIFICATION	4.064371276141725E-5	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999626968596427	WITHOUT_CLASSIFICATION	3.7303140357441054E-5	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999614475675672	WITHOUT_CLASSIFICATION	3.855243243282391E-5	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9999647498051139	WITHOUT_CLASSIFICATION	3.5250194886130755E-5	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9999638214810411	WITHOUT_CLASSIFICATION	3.617851895875063E-5	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9999629826522145	WITHOUT_CLASSIFICATION	3.7017347785420025E-5	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.999961202716296	WITHOUT_CLASSIFICATION	3.87972837039368E-5	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999611416674354	WITHOUT_CLASSIFICATION	3.885833256451216E-5	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999634292369084	WITHOUT_CLASSIFICATION	3.6570763091515165E-5	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9999632368327972	WITHOUT_CLASSIFICATION	3.676316720275256E-5	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9999621989303477	WITHOUT_CLASSIFICATION	3.780106965244212E-5	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9999611421417792	WITHOUT_CLASSIFICATION	3.8857858220851465E-5	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9999604713891409	WITHOUT_CLASSIFICATION	3.9528610858997945E-5	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9999602821779995	WITHOUT_CLASSIFICATION	3.971782200057729E-5	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.999960080358135	WITHOUT_CLASSIFICATION	3.9919641865045206E-5	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9999633912921673	WITHOUT_CLASSIFICATION	3.660870783268741E-5	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9999593794878224	WITHOUT_CLASSIFICATION	4.062051217763859E-5	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9999605188035641	WITHOUT_CLASSIFICATION	3.9481196435980726E-5	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.9999591483081112	WITHOUT_CLASSIFICATION	4.085169188876563E-5	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.999961165687417	WITHOUT_CLASSIFICATION	3.883431258292159E-5	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999621767732367	WITHOUT_CLASSIFICATION	3.78232267633809E-5	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999629289784372	WITHOUT_CLASSIFICATION	3.707102156290656E-5	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.999958746011636	WITHOUT_CLASSIFICATION	4.125398836395131E-5	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9999633598420296	WITHOUT_CLASSIFICATION	3.6640157970524657E-5	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999593911380067	WITHOUT_CLASSIFICATION	4.060886199329467E-5	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9999583950170294	WITHOUT_CLASSIFICATION	4.160498297056911E-5	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999598888061179	WITHOUT_CLASSIFICATION	4.011119388207341E-5	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9999595584557218	WITHOUT_CLASSIFICATION	4.044154427807581E-5	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9999598870974234	WITHOUT_CLASSIFICATION	4.0112902576477755E-5	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999617130074288	WITHOUT_CLASSIFICATION	3.8286992571215736E-5	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9999607287417918	WITHOUT_CLASSIFICATION	3.927125820834539E-5	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9999595943853231	WITHOUT_CLASSIFICATION	4.040561467683615E-5	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9999647134938661	WITHOUT_CLASSIFICATION	3.5286506133887765E-5	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.9999627932509417	WITHOUT_CLASSIFICATION	3.7206749058245406E-5	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999639178501546	WITHOUT_CLASSIFICATION	3.608214984550158E-5	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999622558684764	WITHOUT_CLASSIFICATION	3.774413152345738E-5	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999375693497563	WITHOUT_CLASSIFICATION	6.243065024369298E-5	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9994797144600143	WITHOUT_CLASSIFICATION	5.202855399857306E-4	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9996234382381265	WITHOUT_CLASSIFICATION	3.76561761873487E-4	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9998266074495549	WITHOUT_CLASSIFICATION	1.7339255044507385E-4	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.999962968730542	WITHOUT_CLASSIFICATION	3.703126945796934E-5	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999980238268196	WITHOUT_CLASSIFICATION	1.9761731803520654E-6	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9998533908429402	WITHOUT_CLASSIFICATION	1.466091570597808E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9998509359187955	WITHOUT_CLASSIFICATION	1.490640812045378E-4	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.999869539556659	WITHOUT_CLASSIFICATION	1.304604433410162E-4	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9988751339791369	WITHOUT_CLASSIFICATION	0.0011248660208631525	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9999925848004686	WITHOUT_CLASSIFICATION	7.4151995313448515E-6	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9999587847937826	WITHOUT_CLASSIFICATION	4.121520621728845E-5	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999815652366519	WITHOUT_CLASSIFICATION	1.843476334812418E-5	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9997677021941408	WITHOUT_CLASSIFICATION	2.3229780585908366E-4	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999838335076847	WITHOUT_CLASSIFICATION	1.6166492315302665E-5	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999769219381339	WITHOUT_CLASSIFICATION	2.307806186603688E-5	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999510052810111	WITHOUT_CLASSIFICATION	4.899471898898067E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999774433656554	WITHOUT_CLASSIFICATION	2.2556634344568337E-5	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999902418090743	WITHOUT_CLASSIFICATION	9.758190925756388E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999993192822791	WITHOUT_CLASSIFICATION	6.807177208914446E-6	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.99998719269775	WITHOUT_CLASSIFICATION	1.280730224995129E-5	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999672491609441	WITHOUT_CLASSIFICATION	3.275083905583513E-5	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999936327688808	WITHOUT_CLASSIFICATION	6.367231119261752E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999965702072928	WITHOUT_CLASSIFICATION	3.4297927071932934E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999965702072928	WITHOUT_CLASSIFICATION	3.4297927071932934E-5	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999985486532664	WITHOUT_CLASSIFICATION	1.4513467336077203E-6	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999919664902358	WITHOUT_CLASSIFICATION	8.033509764185581E-6	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999772087172865	WITHOUT_CLASSIFICATION	2.2791282713460087E-5	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999982595048633	WITHOUT_CLASSIFICATION	1.7404951366330646E-6	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999570043145113	WITHOUT_CLASSIFICATION	4.2995685488802613E-5	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999945800396253	WITHOUT_CLASSIFICATION	5.419960374815784E-6	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999971698808461	WITHOUT_CLASSIFICATION	2.8301191539824076E-6	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999944834272526	WITHOUT_CLASSIFICATION	5.516572747371042E-6	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.99997506321881	WITHOUT_CLASSIFICATION	2.4936781189975747E-5	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999864282562148	WITHOUT_CLASSIFICATION	1.3571743785247206E-5	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9999094170596361	WITHOUT_CLASSIFICATION	9.05829403638908E-5	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999990157393788	WITHOUT_CLASSIFICATION	9.842606211932305E-7	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999993044937747	WITHOUT_CLASSIFICATION	6.955062252747641E-7	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9997750793669726	WITHOUT_CLASSIFICATION	2.2492063302731195E-4	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9997696613954153	WITHOUT_CLASSIFICATION	2.3033860458466138E-4	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9997034457459226	WITHOUT_CLASSIFICATION	2.965542540773389E-4	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999955777709435	WITHOUT_CLASSIFICATION	4.42222905647329E-6	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999102461117819	WITHOUT_CLASSIFICATION	8.975388821806741E-5	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999993936646022	WITHOUT_CLASSIFICATION	6.063353977615867E-7	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999950939526145	WITHOUT_CLASSIFICATION	4.9060473854548545E-6	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999991081499723	WITHOUT_CLASSIFICATION	8.918500275734054E-7	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9998028358782522	WITHOUT_CLASSIFICATION	1.97164121747746E-4	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999941614618614	WITHOUT_CLASSIFICATION	5.8385381385987635E-6	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999953719741571	WITHOUT_CLASSIFICATION	4.62802584294216E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999941614618614	WITHOUT_CLASSIFICATION	5.8385381385987635E-6	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.999994925142383	WITHOUT_CLASSIFICATION	5.074857616975362E-6	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999954982343576	WITHOUT_CLASSIFICATION	4.501765642326726E-6	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999946251956238	WITHOUT_CLASSIFICATION	5.374804376318306E-6	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999222961723702	WITHOUT_CLASSIFICATION	7.770382762977634E-5	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999099547123829	WITHOUT_CLASSIFICATION	9.00452876170988E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9996502779424538	WITHOUT_CLASSIFICATION	3.497220575461895E-4	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9996502779424538	WITHOUT_CLASSIFICATION	3.497220575461895E-4	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9996502779424538	WITHOUT_CLASSIFICATION	3.497220575461895E-4	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.999984476891499	WITHOUT_CLASSIFICATION	1.5523108501031802E-5	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.99975215599493	WITHOUT_CLASSIFICATION	2.478440050700799E-4	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.99998591048639	WITHOUT_CLASSIFICATION	1.4089513609890932E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9995147056620829	WITHOUT_CLASSIFICATION	4.8529433791705593E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9995147056620829	WITHOUT_CLASSIFICATION	4.8529433791705593E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9995147056620829	WITHOUT_CLASSIFICATION	4.8529433791705593E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9995147056620829	WITHOUT_CLASSIFICATION	4.8529433791705593E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9995147056620829	WITHOUT_CLASSIFICATION	4.8529433791705593E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9995147056620829	WITHOUT_CLASSIFICATION	4.8529433791705593E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9996308393491821	WITHOUT_CLASSIFICATION	3.6916065081796007E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9996308393491821	WITHOUT_CLASSIFICATION	3.6916065081796007E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9996308393491821	WITHOUT_CLASSIFICATION	3.6916065081796007E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9996308393491821	WITHOUT_CLASSIFICATION	3.6916065081796007E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9996308393491821	WITHOUT_CLASSIFICATION	3.6916065081796007E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996452590767873	WITHOUT_CLASSIFICATION	3.5474092321284166E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996452590767873	WITHOUT_CLASSIFICATION	3.5474092321284166E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996452590767873	WITHOUT_CLASSIFICATION	3.5474092321284166E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996452590767873	WITHOUT_CLASSIFICATION	3.5474092321284166E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9996452590767873	WITHOUT_CLASSIFICATION	3.5474092321284166E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996275509700966	WITHOUT_CLASSIFICATION	3.7244902990346264E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996275509700966	WITHOUT_CLASSIFICATION	3.7244902990346264E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996275509700966	WITHOUT_CLASSIFICATION	3.7244902990346264E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996275509700966	WITHOUT_CLASSIFICATION	3.7244902990346264E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996275509700966	WITHOUT_CLASSIFICATION	3.7244902990346264E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9996275509700966	WITHOUT_CLASSIFICATION	3.7244902990346264E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.999927533155177	WITHOUT_CLASSIFICATION	7.246684482302253E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.999927533155177	WITHOUT_CLASSIFICATION	7.246684482302253E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.999927533155177	WITHOUT_CLASSIFICATION	7.246684482302253E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.999927533155177	WITHOUT_CLASSIFICATION	7.246684482302253E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.999927533155177	WITHOUT_CLASSIFICATION	7.246684482302253E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999173414105313	WITHOUT_CLASSIFICATION	8.265858946859384E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999173414105313	WITHOUT_CLASSIFICATION	8.265858946859384E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999173414105313	WITHOUT_CLASSIFICATION	8.265858946859384E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999173414105313	WITHOUT_CLASSIFICATION	8.265858946859384E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999173414105313	WITHOUT_CLASSIFICATION	8.265858946859384E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999153479702272	WITHOUT_CLASSIFICATION	8.465202977281535E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999153479702272	WITHOUT_CLASSIFICATION	8.465202977281535E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999153479702272	WITHOUT_CLASSIFICATION	8.465202977281535E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999153479702272	WITHOUT_CLASSIFICATION	8.465202977281535E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999153479702272	WITHOUT_CLASSIFICATION	8.465202977281535E-5	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.999995225356142	WITHOUT_CLASSIFICATION	4.774643857900727E-6	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999862130606821	WITHOUT_CLASSIFICATION	1.378693931792613E-5	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9998336473093492	WITHOUT_CLASSIFICATION	1.6635269065080568E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999350343796053	WITHOUT_CLASSIFICATION	6.49656203946906E-5	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999733856407359	WITHOUT_CLASSIFICATION	2.6614359264157794E-5	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999650910880722	WITHOUT_CLASSIFICATION	3.490891192778124E-5	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999642267330645	WITHOUT_CLASSIFICATION	3.577326693555697E-5	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999621091751413	WITHOUT_CLASSIFICATION	3.789082485875281E-5	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999604910904795	WITHOUT_CLASSIFICATION	3.950890952060206E-5	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999611846600804	WITHOUT_CLASSIFICATION	3.881533991950218E-5	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999608492558674	WITHOUT_CLASSIFICATION	3.9150744132773686E-5	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999565289128648	WITHOUT_CLASSIFICATION	4.347108713517116E-5	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9999617421120646	WITHOUT_CLASSIFICATION	3.8257887935443024E-5	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9999621251313076	WITHOUT_CLASSIFICATION	3.787486869249145E-5	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9999592488741756	WITHOUT_CLASSIFICATION	4.0751125824251764E-5	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9999626923031242	WITHOUT_CLASSIFICATION	3.7307696875755954E-5	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9999614457734843	WITHOUT_CLASSIFICATION	3.855422651573733E-5	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9999655410372581	WITHOUT_CLASSIFICATION	3.445896274193781E-5	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9999644379782862	WITHOUT_CLASSIFICATION	3.556202171385145E-5	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9999622682429561	WITHOUT_CLASSIFICATION	3.773175704386562E-5	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9999618124190629	WITHOUT_CLASSIFICATION	3.8187580937136896E-5	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9999608773654856	WITHOUT_CLASSIFICATION	3.9122634514309505E-5	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9999617010612883	WITHOUT_CLASSIFICATION	3.8298938711650456E-5	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9999607455632032	WITHOUT_CLASSIFICATION	3.925443679663363E-5	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9999616064495682	WITHOUT_CLASSIFICATION	3.839355043181878E-5	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9999625817201078	WITHOUT_CLASSIFICATION	3.741827989215413E-5	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9999637803754436	WITHOUT_CLASSIFICATION	3.6219624556428215E-5	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9999633932577953	WITHOUT_CLASSIFICATION	3.660674220477061E-5	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9999619572368965	WITHOUT_CLASSIFICATION	3.804276310354764E-5	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9999589021751892	WITHOUT_CLASSIFICATION	4.109782481063923E-5	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9999619767482854	WITHOUT_CLASSIFICATION	3.802325171468448E-5	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9999607772431923	WITHOUT_CLASSIFICATION	3.9222756807632044E-5	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9999577490284556	WITHOUT_CLASSIFICATION	4.225097154448343E-5	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9999586440216472	WITHOUT_CLASSIFICATION	4.135597835279449E-5	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.9999575941363227	WITHOUT_CLASSIFICATION	4.2405863677260276E-5	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9999581489839704	WITHOUT_CLASSIFICATION	4.185101602955215E-5	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9999588709583584	WITHOUT_CLASSIFICATION	4.112904164148259E-5	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9999578950346587	WITHOUT_CLASSIFICATION	4.210496534140004E-5	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.9999561824831235	WITHOUT_CLASSIFICATION	4.381751687647358E-5	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9999609165971645	WITHOUT_CLASSIFICATION	3.90834028354685E-5	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9999596968686782	WITHOUT_CLASSIFICATION	4.030313132162772E-5	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9999602770123666	WITHOUT_CLASSIFICATION	3.972298763337769E-5	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9999575467997641	WITHOUT_CLASSIFICATION	4.2453200235822824E-5	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.999963921948883	WITHOUT_CLASSIFICATION	3.607805111709711E-5	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9999600409432293	WITHOUT_CLASSIFICATION	3.995905677072813E-5	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9999616939280953	WITHOUT_CLASSIFICATION	3.830607190472561E-5	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9999607743192356	WITHOUT_CLASSIFICATION	3.9225680764455026E-5	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.9999608020408693	WITHOUT_CLASSIFICATION	3.9197959130550804E-5	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.999956404753369	WITHOUT_CLASSIFICATION	4.3595246631078257E-5	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.999959871920769	WITHOUT_CLASSIFICATION	4.0128079230952554E-5	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999595862103582	WITHOUT_CLASSIFICATION	4.041378964188637E-5	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999546885365453	WITHOUT_CLASSIFICATION	4.531146345455039E-5	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999575349245634	WITHOUT_CLASSIFICATION	4.246507543647102E-5	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999637394414282	WITHOUT_CLASSIFICATION	3.6260558571731656E-5	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999567332684407	WITHOUT_CLASSIFICATION	4.326673155932099E-5	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.99996119962719	WITHOUT_CLASSIFICATION	3.88003728100159E-5	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999599561219491	WITHOUT_CLASSIFICATION	4.004387805090095E-5	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999591066279412	WITHOUT_CLASSIFICATION	4.0893372058828485E-5	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999563533301572	WITHOUT_CLASSIFICATION	4.3646669842805025E-5	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999559833167434	WITHOUT_CLASSIFICATION	4.401668325651387E-5	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999582783852798	WITHOUT_CLASSIFICATION	4.1721614720195275E-5	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999608327098821	WITHOUT_CLASSIFICATION	3.916729011796073E-5	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9999608009208698	WITHOUT_CLASSIFICATION	3.9199079130145E-5	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.999956526873765	WITHOUT_CLASSIFICATION	4.347312623489122E-5	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9999584733350363	WITHOUT_CLASSIFICATION	4.1526664963687577E-5	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9999583169057223	WITHOUT_CLASSIFICATION	4.1683094277602435E-5	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9999585470878235	WITHOUT_CLASSIFICATION	4.145291217653094E-5	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9999582222715075	WITHOUT_CLASSIFICATION	4.1777728492381E-5	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.9999554617441451	WITHOUT_CLASSIFICATION	4.453825585490071E-5	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9999561862318954	WITHOUT_CLASSIFICATION	4.3813768104519234E-5	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9999570311164159	WITHOUT_CLASSIFICATION	4.296888358416864E-5	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9999588053622496	WITHOUT_CLASSIFICATION	4.1194637750417227E-5	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9999591575789964	WITHOUT_CLASSIFICATION	4.084242100354204E-5	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9999601867416403	WITHOUT_CLASSIFICATION	3.981325835960954E-5	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9999588533885057	WITHOUT_CLASSIFICATION	4.114661149427805E-5	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9999605711513773	WITHOUT_CLASSIFICATION	3.942884862272849E-5	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9999565265132057	WITHOUT_CLASSIFICATION	4.347348679444419E-5	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.999963506137884	WITHOUT_CLASSIFICATION	3.6493862116069706E-5	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.9999615397501747	WITHOUT_CLASSIFICATION	3.8460249825318555E-5	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9999614610078548	WITHOUT_CLASSIFICATION	3.853899214522642E-5	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9999572533960375	WITHOUT_CLASSIFICATION	4.2746603962481745E-5	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9999547884874874	WITHOUT_CLASSIFICATION	4.521151251243947E-5	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9999620993275015	WITHOUT_CLASSIFICATION	3.790067249861462E-5	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9999608838943747	WITHOUT_CLASSIFICATION	3.911610562539853E-5	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9999558875932388	WITHOUT_CLASSIFICATION	4.411240676124211E-5	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9999573956912353	WITHOUT_CLASSIFICATION	4.260430876455374E-5	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9999592747744472	WITHOUT_CLASSIFICATION	4.072522555269036E-5	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9999599827018691	WITHOUT_CLASSIFICATION	4.001729813086237E-5	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.999959433617678	WITHOUT_CLASSIFICATION	4.05663823221025E-5	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9999604272655702	WITHOUT_CLASSIFICATION	3.9572734429782506E-5	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9999589052505351	WITHOUT_CLASSIFICATION	4.1094749464782515E-5	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9999614394510997	WITHOUT_CLASSIFICATION	3.85605489002178E-5	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9999594728767861	WITHOUT_CLASSIFICATION	4.052712321381096E-5	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9999595890158782	WITHOUT_CLASSIFICATION	4.041098412176773E-5	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9999636427736666	WITHOUT_CLASSIFICATION	3.635722633336817E-5	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9999624563733744	WITHOUT_CLASSIFICATION	3.754362662547037E-5	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9999631104746284	WITHOUT_CLASSIFICATION	3.688952537171507E-5	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9999602063915065	WITHOUT_CLASSIFICATION	3.9793608493454385E-5	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999581304885621	WITHOUT_CLASSIFICATION	4.186951143786817E-5	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999571034456277	WITHOUT_CLASSIFICATION	4.2896554372202085E-5	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999594050826591	WITHOUT_CLASSIFICATION	4.059491734087383E-5	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999622204723259	WITHOUT_CLASSIFICATION	3.7779527674196905E-5	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999610029001834	WITHOUT_CLASSIFICATION	3.899709981663755E-5	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999625154892711	WITHOUT_CLASSIFICATION	3.748451072885015E-5	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999601712516499	WITHOUT_CLASSIFICATION	3.98287483500532E-5	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999616295004434	WITHOUT_CLASSIFICATION	3.837049955663475E-5	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999619416830848	WITHOUT_CLASSIFICATION	3.8058316915109E-5	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999670669324889	WITHOUT_CLASSIFICATION	3.2933067511066824E-5	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999677597633956	WITHOUT_CLASSIFICATION	3.224023660454088E-5	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9999612787647234	WITHOUT_CLASSIFICATION	3.872123527656599E-5	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9999566343044997	WITHOUT_CLASSIFICATION	4.336569550029303E-5	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.999959001813305	WITHOUT_CLASSIFICATION	4.0998186695120006E-5	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.9999617512415606	WITHOUT_CLASSIFICATION	3.824875843937293E-5	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9999607591238981	WITHOUT_CLASSIFICATION	3.9240876101864657E-5	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9999554977585351	WITHOUT_CLASSIFICATION	4.4502241464844025E-5	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9999608614756282	WITHOUT_CLASSIFICATION	3.913852437176601E-5	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9999609130469297	WITHOUT_CLASSIFICATION	3.9086953070331814E-5	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9999596261488647	WITHOUT_CLASSIFICATION	4.037385113521356E-5	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.9999586681438379	WITHOUT_CLASSIFICATION	4.133185616208557E-5	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9999567496805741	WITHOUT_CLASSIFICATION	4.325031942587684E-5	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9999603117441209	WITHOUT_CLASSIFICATION	3.968825587905665E-5	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9999589819270627	WITHOUT_CLASSIFICATION	4.1018072937337606E-5	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9999625160107376	WITHOUT_CLASSIFICATION	3.7483989262438724E-5	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9999629001574132	WITHOUT_CLASSIFICATION	3.7099842586822124E-5	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9999638929173397	WITHOUT_CLASSIFICATION	3.610708266026956E-5	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9999623711930642	WITHOUT_CLASSIFICATION	3.762880693570197E-5	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.999961263429704	WITHOUT_CLASSIFICATION	3.873657029607582E-5	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9999613379557323	WITHOUT_CLASSIFICATION	3.8662044267708094E-5	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.999959861993927	WITHOUT_CLASSIFICATION	4.0138006073086676E-5	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9999623404084556	WITHOUT_CLASSIFICATION	3.7659591544453666E-5	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9999574333560641	WITHOUT_CLASSIFICATION	4.2566643935882554E-5	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9999615515110211	WITHOUT_CLASSIFICATION	3.84484889788892E-5	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9999591798942046	WITHOUT_CLASSIFICATION	4.082010579537047E-5	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9999583522269326	WITHOUT_CLASSIFICATION	4.1647773067426415E-5	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9999601231569316	WITHOUT_CLASSIFICATION	3.987684306849595E-5	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9999598266914578	WITHOUT_CLASSIFICATION	4.017330854221219E-5	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9999623227043958	WITHOUT_CLASSIFICATION	3.7677295604220665E-5	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9999684994976777	WITHOUT_CLASSIFICATION	3.150050232236201E-5	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9999674119754749	WITHOUT_CLASSIFICATION	3.258802452515083E-5	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9999671225325744	WITHOUT_CLASSIFICATION	3.287746742569327E-5	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9999664200512507	WITHOUT_CLASSIFICATION	3.357994874926286E-5	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9999673565520429	WITHOUT_CLASSIFICATION	3.2643447957068336E-5	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.999963429254466	WITHOUT_CLASSIFICATION	3.6570745533981125E-5	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9999622038905172	WITHOUT_CLASSIFICATION	3.779610948274182E-5	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9999654521896705	WITHOUT_CLASSIFICATION	3.45478103294654E-5	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9999648811415304	WITHOUT_CLASSIFICATION	3.5118858469623694E-5	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9999633000028852	WITHOUT_CLASSIFICATION	3.66999971148259E-5	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999658413662705	WITHOUT_CLASSIFICATION	3.4158633729540464E-5	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999658226809676	WITHOUT_CLASSIFICATION	3.417731903251397E-5	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999646646396086	WITHOUT_CLASSIFICATION	3.533536039128062E-5	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.999967944353925	WITHOUT_CLASSIFICATION	3.205564607499918E-5	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999659497912339	WITHOUT_CLASSIFICATION	3.405020876608158E-5	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999626272409657	WITHOUT_CLASSIFICATION	3.737275903427734E-5	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999641646711682	WITHOUT_CLASSIFICATION	3.5835328831745557E-5	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.999962986822549	WITHOUT_CLASSIFICATION	3.701317745094172E-5	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999591450125286	WITHOUT_CLASSIFICATION	4.0854987471479266E-5	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.999961410922143	WITHOUT_CLASSIFICATION	3.8589077857027804E-5	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999612831903156	WITHOUT_CLASSIFICATION	3.871680968427567E-5	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9999635163390088	WITHOUT_CLASSIFICATION	3.648366099118686E-5	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9999651454670829	WITHOUT_CLASSIFICATION	3.4854532917110155E-5	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9999639776056345	WITHOUT_CLASSIFICATION	3.602239436541352E-5	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9999669385973917	WITHOUT_CLASSIFICATION	3.306140260828373E-5	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9999679157901323	WITHOUT_CLASSIFICATION	3.208420986761302E-5	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9999646661614108	WITHOUT_CLASSIFICATION	3.5333838589242753E-5	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.999963690320524	WITHOUT_CLASSIFICATION	3.630967947611254E-5	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9999646073667652	WITHOUT_CLASSIFICATION	3.539263323492751E-5	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9999633358704008	WITHOUT_CLASSIFICATION	3.666412959923313E-5	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9999618425734571	WITHOUT_CLASSIFICATION	3.815742654292273E-5	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9999656041084489	WITHOUT_CLASSIFICATION	3.4395891551074E-5	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9999637373292725	WITHOUT_CLASSIFICATION	3.626267072750706E-5	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9999631113723262	WITHOUT_CLASSIFICATION	3.6888627673823185E-5	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9999627918388658	WITHOUT_CLASSIFICATION	3.7208161134230735E-5	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9999625722032189	WITHOUT_CLASSIFICATION	3.7427796781042864E-5	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9999645554435339	WITHOUT_CLASSIFICATION	3.544455646610757E-5	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9999627968793247	WITHOUT_CLASSIFICATION	3.720312067531284E-5	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9999629042675353	WITHOUT_CLASSIFICATION	3.709573246472459E-5	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9999665005604031	WITHOUT_CLASSIFICATION	3.349943959690307E-5	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9999630535323379	WITHOUT_CLASSIFICATION	3.6946467662026456E-5	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9999651082971055	WITHOUT_CLASSIFICATION	3.489170289444563E-5	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9999616578289537	WITHOUT_CLASSIFICATION	3.834217104617351E-5	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9999651363566708	WITHOUT_CLASSIFICATION	3.4863643329254595E-5	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9999628950987111	WITHOUT_CLASSIFICATION	3.710490128899201E-5	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9999617728182156	WITHOUT_CLASSIFICATION	3.8227181784499764E-5	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9999588425766209	WITHOUT_CLASSIFICATION	4.115742337904637E-5	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9999600058160326	WITHOUT_CLASSIFICATION	3.9994183967467714E-5	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9999601788135175	WITHOUT_CLASSIFICATION	3.9821186482449414E-5	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9999628905684763	WITHOUT_CLASSIFICATION	3.710943152365315E-5	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.999962663014278	WITHOUT_CLASSIFICATION	3.7336985721914726E-5	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9999591470085284	WITHOUT_CLASSIFICATION	4.08529914715414E-5	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9999608105618033	WITHOUT_CLASSIFICATION	3.918943819674004E-5	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9999622140301694	WITHOUT_CLASSIFICATION	3.77859698306983E-5	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.999962047941337	WITHOUT_CLASSIFICATION	3.795205866295868E-5	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9999635097659387	WITHOUT_CLASSIFICATION	3.649023406138147E-5	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9999612891764372	WITHOUT_CLASSIFICATION	3.871082356276102E-5	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.999962055092027	WITHOUT_CLASSIFICATION	3.794490797311191E-5	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9999655833477699	WITHOUT_CLASSIFICATION	3.441665223016527E-5	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.99996296774381	WITHOUT_CLASSIFICATION	3.703225618994104E-5	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999625809503299	WITHOUT_CLASSIFICATION	3.741904967019218E-5	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999646039753233	WITHOUT_CLASSIFICATION	3.539602467679829E-5	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999609514634955	WITHOUT_CLASSIFICATION	3.90485365045981E-5	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999597363081419	WITHOUT_CLASSIFICATION	4.026369185810001E-5	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999620433406302	WITHOUT_CLASSIFICATION	3.795665936974207E-5	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999602226572968	WITHOUT_CLASSIFICATION	3.9777342703120685E-5	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999636246394877	WITHOUT_CLASSIFICATION	3.637536051221663E-5	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999626968596427	WITHOUT_CLASSIFICATION	3.7303140357441054E-5	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999614475675672	WITHOUT_CLASSIFICATION	3.855243243282391E-5	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.999966267807385	WITHOUT_CLASSIFICATION	3.373219261511188E-5	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9999665538152938	WITHOUT_CLASSIFICATION	3.344618470617012E-5	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9999639207952072	WITHOUT_CLASSIFICATION	3.607920479274698E-5	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9999650703202592	WITHOUT_CLASSIFICATION	3.492967974088834E-5	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9999623948719972	WITHOUT_CLASSIFICATION	3.760512800273677E-5	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9999644478992928	WITHOUT_CLASSIFICATION	3.5552100707163475E-5	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9999632441522539	WITHOUT_CLASSIFICATION	3.675584774613527E-5	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9999630754187218	WITHOUT_CLASSIFICATION	3.692458127826346E-5	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9999621712895352	WITHOUT_CLASSIFICATION	3.782871046474015E-5	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9999620438462556	WITHOUT_CLASSIFICATION	3.795615374436355E-5	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9999638281072454	WITHOUT_CLASSIFICATION	3.6171892754736385E-5	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9999643430855236	WITHOUT_CLASSIFICATION	3.565691447629756E-5	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9999634970015532	WITHOUT_CLASSIFICATION	3.6502998446707836E-5	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9999638642418155	WITHOUT_CLASSIFICATION	3.613575818457548E-5	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9999638192771548	WITHOUT_CLASSIFICATION	3.6180722845198895E-5	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9999650145587992	WITHOUT_CLASSIFICATION	3.4985441200752607E-5	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9999655669496289	WITHOUT_CLASSIFICATION	3.443305037109359E-5	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9999654849778301	WITHOUT_CLASSIFICATION	3.451502216984593E-5	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9999632692301926	WITHOUT_CLASSIFICATION	3.673076980738637E-5	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.99996167588872	WITHOUT_CLASSIFICATION	3.832411128008581E-5	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9999618605845239	WITHOUT_CLASSIFICATION	3.8139415476106625E-5	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.9999592416195711	WITHOUT_CLASSIFICATION	4.075838042898982E-5	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.999966365975162	WITHOUT_CLASSIFICATION	3.363402483797813E-5	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9999645657434987	WITHOUT_CLASSIFICATION	3.5434256501387025E-5	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9999629688757423	WITHOUT_CLASSIFICATION	3.703112425759137E-5	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9999610615520802	WITHOUT_CLASSIFICATION	3.8938447919814384E-5	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9999601064041328	WITHOUT_CLASSIFICATION	3.989359586719752E-5	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9999597657073173	WITHOUT_CLASSIFICATION	4.023429268270843E-5	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9999611975072612	WITHOUT_CLASSIFICATION	3.880249273876923E-5	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9999612508904291	WITHOUT_CLASSIFICATION	3.874910957087062E-5	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9999636497836947	WITHOUT_CLASSIFICATION	3.635021630537526E-5	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9999622420458907	WITHOUT_CLASSIFICATION	3.775795410935291E-5	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9999626285450011	WITHOUT_CLASSIFICATION	3.737145499883052E-5	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9999634053580564	WITHOUT_CLASSIFICATION	3.659464194363521E-5	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9999632230000518	WITHOUT_CLASSIFICATION	3.677699994808184E-5	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9999587023526023	WITHOUT_CLASSIFICATION	4.129764739764612E-5	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9999583872065624	WITHOUT_CLASSIFICATION	4.161279343772229E-5	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9999608321184517	WITHOUT_CLASSIFICATION	3.916788154829327E-5	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9999628105032615	WITHOUT_CLASSIFICATION	3.71894967385301E-5	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999610463799588	WITHOUT_CLASSIFICATION	3.895362004124586E-5	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999611416674354	WITHOUT_CLASSIFICATION	3.885833256451216E-5	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999634292369084	WITHOUT_CLASSIFICATION	3.6570763091515165E-5	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999621767732367	WITHOUT_CLASSIFICATION	3.78232267633809E-5	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999605448509338	WITHOUT_CLASSIFICATION	3.945514906630298E-5	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.999958746011636	WITHOUT_CLASSIFICATION	4.125398836395131E-5	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999593911380067	WITHOUT_CLASSIFICATION	4.060886199329467E-5	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999598888061179	WITHOUT_CLASSIFICATION	4.011119388207341E-5	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999639178501546	WITHOUT_CLASSIFICATION	3.608214984550158E-5	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999622558684764	WITHOUT_CLASSIFICATION	3.774413152345738E-5	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.999962003575918	WITHOUT_CLASSIFICATION	3.79964240819868E-5	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9999649754995659	WITHOUT_CLASSIFICATION	3.502450043419266E-5	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9999619375775969	WITHOUT_CLASSIFICATION	3.806242240306572E-5	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9999590306018571	WITHOUT_CLASSIFICATION	4.0969398142996775E-5	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9999643930857502	WITHOUT_CLASSIFICATION	3.560691424969746E-5	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9999638180863067	WITHOUT_CLASSIFICATION	3.61819136933054E-5	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9999584709840527	WITHOUT_CLASSIFICATION	4.152901594740746E-5	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9999614828454764	WITHOUT_CLASSIFICATION	3.8517154523605626E-5	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9999575428151675	WITHOUT_CLASSIFICATION	4.245718483245604E-5	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9999646638513379	WITHOUT_CLASSIFICATION	3.533614866221354E-5	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9999647104125745	WITHOUT_CLASSIFICATION	3.5289587425586405E-5	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9999585855324834	WITHOUT_CLASSIFICATION	4.141446751660193E-5	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.99996315320373	WITHOUT_CLASSIFICATION	3.684679626999264E-5	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9999631894550902	WITHOUT_CLASSIFICATION	3.681054490975783E-5	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9999621751603357	WITHOUT_CLASSIFICATION	3.7824839664378536E-5	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9999616731796461	WITHOUT_CLASSIFICATION	3.832682035377277E-5	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9999640338004033	WITHOUT_CLASSIFICATION	3.596619959662753E-5	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9999627011417972	WITHOUT_CLASSIFICATION	3.7298858202803955E-5	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9999626950060868	WITHOUT_CLASSIFICATION	3.730499391322509E-5	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9999581926281472	WITHOUT_CLASSIFICATION	4.180737185271279E-5	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9999571614094777	WITHOUT_CLASSIFICATION	4.28385905223584E-5	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9999594061347338	WITHOUT_CLASSIFICATION	4.059386526627156E-5	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9999606478247117	WITHOUT_CLASSIFICATION	3.935217528819531E-5	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9999605297529356	WITHOUT_CLASSIFICATION	3.947024706434007E-5	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9999605463923017	WITHOUT_CLASSIFICATION	3.9453607698239586E-5	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9999591125789273	WITHOUT_CLASSIFICATION	4.088742107261475E-5	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9999587659560029	WITHOUT_CLASSIFICATION	4.1234043997191326E-5	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9999609159409543	WITHOUT_CLASSIFICATION	3.908405904564441E-5	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9999622511184245	WITHOUT_CLASSIFICATION	3.774888157552885E-5	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9999621328806738	WITHOUT_CLASSIFICATION	3.786711932620303E-5	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9999650445800157	WITHOUT_CLASSIFICATION	3.495541998431632E-5	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.999966220044127	WITHOUT_CLASSIFICATION	3.377995587298239E-5	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9999625862410427	WITHOUT_CLASSIFICATION	3.741375895728227E-5	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9999641240186469	WITHOUT_CLASSIFICATION	3.5875981353196315E-5	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9999619789686848	WITHOUT_CLASSIFICATION	3.802103131534507E-5	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9999593732008657	WITHOUT_CLASSIFICATION	4.062679913440159E-5	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9999621178209934	WITHOUT_CLASSIFICATION	3.788217900660311E-5	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.9999651585472777	WITHOUT_CLASSIFICATION	3.484145272226674E-5	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9999591628609782	WITHOUT_CLASSIFICATION	4.083713902174092E-5	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9998533908429402	WITHOUT_CLASSIFICATION	1.466091570597808E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9998509359187955	WITHOUT_CLASSIFICATION	1.490640812045378E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999815652366519	WITHOUT_CLASSIFICATION	1.843476334812418E-5	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999838335076847	WITHOUT_CLASSIFICATION	1.6166492315302665E-5	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999769219381339	WITHOUT_CLASSIFICATION	2.307806186603688E-5	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999510052810111	WITHOUT_CLASSIFICATION	4.899471898898067E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999774433656554	WITHOUT_CLASSIFICATION	2.2556634344568337E-5	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9997330265340328	WITHOUT_CLASSIFICATION	2.669734659671811E-4	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.999959529247744	WITHOUT_CLASSIFICATION	4.047075225601306E-5	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9999611400559918	WITHOUT_CLASSIFICATION	3.88599440082614E-5	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9999603467710287	WITHOUT_CLASSIFICATION	3.9653228971306374E-5	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9999614589576563	WITHOUT_CLASSIFICATION	3.854104234370944E-5	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9999617564966709	WITHOUT_CLASSIFICATION	3.8243503329184775E-5	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9999633547002394	WITHOUT_CLASSIFICATION	3.664529976049217E-5	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9999649620655738	WITHOUT_CLASSIFICATION	3.503793442609957E-5	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9999640335677237	WITHOUT_CLASSIFICATION	3.5966432276375374E-5	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9999649355704392	WITHOUT_CLASSIFICATION	3.506442956089094E-5	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9999633656281693	WITHOUT_CLASSIFICATION	3.663437183056492E-5	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9999637622167649	WITHOUT_CLASSIFICATION	3.623778323519322E-5	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9999644645748866	WITHOUT_CLASSIFICATION	3.553542511331227E-5	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.9999613174202945	WITHOUT_CLASSIFICATION	3.868257970553086E-5	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9999612080550841	WITHOUT_CLASSIFICATION	3.87919449159028E-5	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9999638157317524	WITHOUT_CLASSIFICATION	3.61842682475613E-5	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9999638634104869	WITHOUT_CLASSIFICATION	3.6136589513098894E-5	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9999611381487836	WITHOUT_CLASSIFICATION	3.8861851216441916E-5	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9999610216414856	WITHOUT_CLASSIFICATION	3.8978358514529714E-5	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9999616240767563	WITHOUT_CLASSIFICATION	3.8375923243752226E-5	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9999625985755539	WITHOUT_CLASSIFICATION	3.74014244460347E-5	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9999643842893018	WITHOUT_CLASSIFICATION	3.561571069828801E-5	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9999619571475152	WITHOUT_CLASSIFICATION	3.80428524848163E-5	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9999653812924378	WITHOUT_CLASSIFICATION	3.4618707562194504E-5	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9996099399212016	WITHOUT_CLASSIFICATION	3.9006007879835626E-4	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999954850492848	WITHOUT_CLASSIFICATION	4.514950715202048E-6	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999727780686022	WITHOUT_CLASSIFICATION	2.7221931397868305E-5	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999825569522748	WITHOUT_CLASSIFICATION	1.7443047725224985E-5	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999989663905592	WITHOUT_CLASSIFICATION	1.0336094408727024E-6	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999914603757032	WITHOUT_CLASSIFICATION	8.539624296761995E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999993192822791	WITHOUT_CLASSIFICATION	6.807177208914446E-6	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.99998719269775	WITHOUT_CLASSIFICATION	1.280730224995129E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999965702072928	WITHOUT_CLASSIFICATION	3.4297927071932934E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.999965702072928	WITHOUT_CLASSIFICATION	3.4297927071932934E-5	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999959068106362	WITHOUT_CLASSIFICATION	4.093189363746144E-6	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999712073680924	WITHOUT_CLASSIFICATION	2.879263190765197E-5	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999902580358271	WITHOUT_CLASSIFICATION	9.741964172927972E-6	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999673822760599	WITHOUT_CLASSIFICATION	3.2617723940119606E-5	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.999999209641887	WITHOUT_CLASSIFICATION	7.903581130956482E-7	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999739946745639	WITHOUT_CLASSIFICATION	2.600532543610955E-5	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999740430841504	WITHOUT_CLASSIFICATION	2.5956915849683537E-5	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999776927962273	WITHOUT_CLASSIFICATION	2.230720377274284E-5	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999847946478015	WITHOUT_CLASSIFICATION	1.520535219851102E-5	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999910479354751	WITHOUT_CLASSIFICATION	8.952064524952296E-6	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999828819115721	WITHOUT_CLASSIFICATION	1.711808842787581E-5	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999842729592	WITHOUT_CLASSIFICATION	1.5727040799998607E-5	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999978836597168	WITHOUT_CLASSIFICATION	2.1163402832975306E-6	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9981606018921207	WITHOUT_CLASSIFICATION	0.0018393981078792376	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.999998276952	WITHOUT_CLASSIFICATION	1.7230480000290137E-6	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.999998276952	WITHOUT_CLASSIFICATION	1.7230480000290137E-6	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999813689024826	WITHOUT_CLASSIFICATION	1.863109751745215E-5	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999917203998634	WITHOUT_CLASSIFICATION	8.279600136531317E-6	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999979277715665	WITHOUT_CLASSIFICATION	2.07222843350752E-6	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999904260036859	WITHOUT_CLASSIFICATION	9.57399631407945E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999707526182828	WITHOUT_CLASSIFICATION	2.9247381717122978E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999991331211948	WITHOUT_CLASSIFICATION	8.668788051977057E-6	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.999989311188122	WITHOUT_CLASSIFICATION	1.068881187809522E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999991331211948	WITHOUT_CLASSIFICATION	8.668788051977057E-6	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999855973685634	WITHOUT_CLASSIFICATION	1.4402631436690223E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999870085422212	WITHOUT_CLASSIFICATION	1.299145777882739E-5	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9999894161268745	WITHOUT_CLASSIFICATION	1.0583873125517904E-5	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.999939351134733	WITHOUT_CLASSIFICATION	6.064886526701834E-5	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.999973232731818	WITHOUT_CLASSIFICATION	2.6767268181999895E-5	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999831499639461	WITHOUT_CLASSIFICATION	1.6850036053880672E-5	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9994723497652915	WITHOUT_CLASSIFICATION	5.276502347083826E-4	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999931047118223	WITHOUT_CLASSIFICATION	6.895288177674503E-6	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999918464567085	WITHOUT_CLASSIFICATION	8.153543291512857E-6	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999993131370364	WITHOUT_CLASSIFICATION	6.868629636592906E-7	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999985994097474	WITHOUT_CLASSIFICATION	1.400590252523717E-6	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9996811583098226	WITHOUT_CLASSIFICATION	3.188416901773866E-4	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9997363415310047	WITHOUT_CLASSIFICATION	2.636584689953632E-4	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999986497593926	WITHOUT_CLASSIFICATION	1.3502406074785453E-6	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999901802229282	WITHOUT_CLASSIFICATION	9.819777071826728E-6	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999901802229282	WITHOUT_CLASSIFICATION	9.819777071826728E-6	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.999989364399224	WITHOUT_CLASSIFICATION	1.0635600775885975E-5	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999762044889625	WITHOUT_CLASSIFICATION	2.379551103737787E-5	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.999987166315332	WITHOUT_CLASSIFICATION	1.2833684667988073E-5	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999911595725915	WITHOUT_CLASSIFICATION	8.840427408550272E-6	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9999938671333113	WITHOUT_CLASSIFICATION	6.132866688717769E-6	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999991331211948	WITHOUT_CLASSIFICATION	8.668788051977057E-6	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999946785926285	WITHOUT_CLASSIFICATION	5.321407371453748E-6	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999939640125892	WITHOUT_CLASSIFICATION	6.035987410742031E-6	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.999996349432092	WITHOUT_CLASSIFICATION	3.6505679079384104E-6	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999941492957687	WITHOUT_CLASSIFICATION	5.850704231319913E-6	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999998265205688	WITHOUT_CLASSIFICATION	1.7347943117155195E-7	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999977768068565	WITHOUT_CLASSIFICATION	2.223193143413119E-6	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999935512787524	WITHOUT_CLASSIFICATION	6.448721247576958E-6	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.999994530817222	WITHOUT_CLASSIFICATION	5.4691827779826274E-6	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999946826157362	WITHOUT_CLASSIFICATION	5.317384263768835E-6	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9993522524286939	WITHOUT_CLASSIFICATION	6.477475713062003E-4	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9997151187160743	WITHOUT_CLASSIFICATION	2.8488128392562955E-4	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999984867838104	WITHOUT_CLASSIFICATION	1.5132161895123746E-6	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999972176328026	WITHOUT_CLASSIFICATION	2.7823671973538393E-6	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999858488712299	WITHOUT_CLASSIFICATION	1.4151128770188997E-5	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999538510575298	WITHOUT_CLASSIFICATION	4.6148942470202344E-5	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999467743142814	WITHOUT_CLASSIFICATION	5.322568571857871E-5	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999939219858595	WITHOUT_CLASSIFICATION	6.07801414052706E-6	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9999863422274341	WITHOUT_CLASSIFICATION	1.3657772565952748E-5	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9999192936678154	WITHOUT_CLASSIFICATION	8.070633218458691E-5	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9992679307535313	WITHOUT_CLASSIFICATION	7.320692464688427E-4	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999478629460984	WITHOUT_CLASSIFICATION	5.213705390162173E-5	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999667564398786	WITHOUT_CLASSIFICATION	3.324356012130356E-5	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.999960422467783	WITHOUT_CLASSIFICATION	3.957753221697441E-5	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999725097939685	WITHOUT_CLASSIFICATION	2.749020603157042E-5	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999878222628658	WITHOUT_CLASSIFICATION	1.217773713424568E-5	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999943053101231	WITHOUT_CLASSIFICATION	5.694689876872103E-6	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999987121381853	WITHOUT_CLASSIFICATION	1.287861814809092E-6	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999947488927887	WITHOUT_CLASSIFICATION	5.251107211284525E-6	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9940964078818251	WITHOUT_CLASSIFICATION	0.0059035921181749725	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999938565543569	WITHOUT_CLASSIFICATION	6.143445643140487E-6	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999342482354819	WITHOUT_CLASSIFICATION	6.575176451806252E-5	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9999780714267765	WITHOUT_CLASSIFICATION	2.192857322347627E-5	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999542807304709	WITHOUT_CLASSIFICATION	4.571926952909677E-5	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999984671162465	WITHOUT_CLASSIFICATION	1.5328837535464644E-6	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999929256170597	WITHOUT_CLASSIFICATION	7.0743829403896825E-6	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999830093254888	WITHOUT_CLASSIFICATION	1.6990674511192995E-5	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999777196953373	WITHOUT_CLASSIFICATION	2.228030466265258E-5	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.999968343929658	WITHOUT_CLASSIFICATION	3.165607034195595E-5	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9999841100872372	WITHOUT_CLASSIFICATION	1.5889912762868357E-5	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999937412535113	WITHOUT_CLASSIFICATION	6.2587464887780395E-6	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9997330265340328	WITHOUT_CLASSIFICATION	2.669734659671811E-4	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999971841852178	WITHOUT_CLASSIFICATION	2.815814782209037E-6	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999908911838619	WITHOUT_CLASSIFICATION	9.108816138125243E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999890836727089	WITHOUT_CLASSIFICATION	1.0916327291103355E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999872284423208	WITHOUT_CLASSIFICATION	1.2771557679250095E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999870085422212	WITHOUT_CLASSIFICATION	1.299145777882739E-5	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999782459010158	WITHOUT_CLASSIFICATION	2.175409898427818E-5	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999973147372376	WITHOUT_CLASSIFICATION	2.685262762360466E-6	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999992765976445	WITHOUT_CLASSIFICATION	7.234023554773065E-7	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999728056799954	WITHOUT_CLASSIFICATION	2.7194320004671884E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999728056799954	WITHOUT_CLASSIFICATION	2.7194320004671884E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999767852034344	WITHOUT_CLASSIFICATION	2.3214796565546578E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999767852034344	WITHOUT_CLASSIFICATION	2.3214796565546578E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999767852034344	WITHOUT_CLASSIFICATION	2.3214796565546578E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999559911218164	WITHOUT_CLASSIFICATION	4.400887818355579E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999559911218164	WITHOUT_CLASSIFICATION	4.400887818355579E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.999966040191546	WITHOUT_CLASSIFICATION	3.395980845395689E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.999966040191546	WITHOUT_CLASSIFICATION	3.395980845395689E-5	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999957244769606	WITHOUT_CLASSIFICATION	4.275523039401224E-6	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999958099217694	WITHOUT_CLASSIFICATION	4.190078230555884E-6	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999733151975178	WITHOUT_CLASSIFICATION	2.668480248225093E-5	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999733151975178	WITHOUT_CLASSIFICATION	2.668480248225093E-5	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999832351081476	WITHOUT_CLASSIFICATION	1.6764891852469027E-5	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999954621516961	WITHOUT_CLASSIFICATION	4.5378483038619835E-6	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999966260018537	WITHOUT_CLASSIFICATION	3.373998146337062E-6	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.999994797056531	WITHOUT_CLASSIFICATION	5.202943468977302E-6	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999975185515773	WITHOUT_CLASSIFICATION	2.481448422852477E-6	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999975895913835	WITHOUT_CLASSIFICATION	2.41040861650306E-6	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999909069399721	WITHOUT_CLASSIFICATION	9.093060028005167E-6	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999918682508799	WITHOUT_CLASSIFICATION	8.131749120166485E-6	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9999678109853568	WITHOUT_CLASSIFICATION	3.2189014643101706E-5	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9999711994559893	WITHOUT_CLASSIFICATION	2.8800544010712914E-5	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999689450385614	WITHOUT_CLASSIFICATION	3.105496143854149E-5	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9998045694127371	WITHOUT_CLASSIFICATION	1.9543058726300213E-4	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9998457012399828	WITHOUT_CLASSIFICATION	1.5429876001721865E-4	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9999857485549625	WITHOUT_CLASSIFICATION	1.4251445037408185E-5	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999883347464126	WITHOUT_CLASSIFICATION	1.1665253587432871E-5	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9998670272508756	WITHOUT_CLASSIFICATION	1.3297274912446895E-4	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9997674423798626	WITHOUT_CLASSIFICATION	2.3255762013746546E-4	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.999958509778535	WITHOUT_CLASSIFICATION	4.149022146503942E-5	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999411003592749	WITHOUT_CLASSIFICATION	5.889964072522075E-5	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9998512562153097	WITHOUT_CLASSIFICATION	1.4874378469025378E-4	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999848776115123	WITHOUT_CLASSIFICATION	1.5122388487710771E-5	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999829714085862	WITHOUT_CLASSIFICATION	1.702859141383205E-5	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9999834871597816	WITHOUT_CLASSIFICATION	1.6512840218503985E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999969235735565	WITHOUT_CLASSIFICATION	3.0764264435063374E-6	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999913685784063	WITHOUT_CLASSIFICATION	8.631421593650111E-6	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999923542870848	WITHOUT_CLASSIFICATION	7.645712915124042E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999979948820287	WITHOUT_CLASSIFICATION	2.005117971370702E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999967110542629	WITHOUT_CLASSIFICATION	3.288945737048397E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999968891752357	WITHOUT_CLASSIFICATION	3.1108247642626196E-6	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999912720687884	WITHOUT_CLASSIFICATION	8.727931211628352E-6	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999922687987837	WITHOUT_CLASSIFICATION	7.731201216220502E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99999772409715	WITHOUT_CLASSIFICATION	2.2759028498942315E-6	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999936145700995	WITHOUT_CLASSIFICATION	6.385429900518899E-6	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999950918076482	WITHOUT_CLASSIFICATION	4.908192351782729E-6	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999936145700995	WITHOUT_CLASSIFICATION	6.385429900518899E-6	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999936145700995	WITHOUT_CLASSIFICATION	6.385429900518899E-6	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999936145700995	WITHOUT_CLASSIFICATION	6.385429900518899E-6	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999936145700995	WITHOUT_CLASSIFICATION	6.385429900518899E-6	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999936145700995	WITHOUT_CLASSIFICATION	6.385429900518899E-6	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999936145700995	WITHOUT_CLASSIFICATION	6.385429900518899E-6	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999950918076482	WITHOUT_CLASSIFICATION	4.908192351782729E-6	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999950918076482	WITHOUT_CLASSIFICATION	4.908192351782729E-6	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999950918076482	WITHOUT_CLASSIFICATION	4.908192351782729E-6	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999950918076482	WITHOUT_CLASSIFICATION	4.908192351782729E-6	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999950918076482	WITHOUT_CLASSIFICATION	4.908192351782729E-6	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999950918076482	WITHOUT_CLASSIFICATION	4.908192351782729E-6	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999764453655842	WITHOUT_CLASSIFICATION	2.355463441582744E-5	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999890833248632	WITHOUT_CLASSIFICATION	1.0916675136733505E-5	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999736767532522	WITHOUT_CLASSIFICATION	2.6323246747787006E-5	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999918254746331	WITHOUT_CLASSIFICATION	8.174525366857941E-6	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999979330136541	WITHOUT_CLASSIFICATION	2.0669863458354737E-6	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999938261487998	WITHOUT_CLASSIFICATION	6.173851200207612E-6	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999912297790359	WITHOUT_CLASSIFICATION	8.770220964076977E-6	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999985844852208	WITHOUT_CLASSIFICATION	1.4155147790880666E-6	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.999996174285288	WITHOUT_CLASSIFICATION	3.825714711969641E-6	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9998094748731258	WITHOUT_CLASSIFICATION	1.9052512687418201E-4	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9996695673349479	WITHOUT_CLASSIFICATION	3.3043266505204975E-4	IMPLEMENTATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999982318994264	WITHOUT_CLASSIFICATION	1.7681005736314772E-6	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9998988526365924	WITHOUT_CLASSIFICATION	1.0114736340760612E-4	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999992438167118	WITHOUT_CLASSIFICATION	7.56183288295117E-7	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999264909799969	WITHOUT_CLASSIFICATION	7.350902000313018E-5	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999972990597003	WITHOUT_CLASSIFICATION	2.7009402998789623E-6	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999899759392332	WITHOUT_CLASSIFICATION	1.0024060766829046E-5	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999905300729445	WITHOUT_CLASSIFICATION	9.469927055501359E-6	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999856224916571	WITHOUT_CLASSIFICATION	1.4377508342824926E-5	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999933373347266	WITHOUT_CLASSIFICATION	6.662665273276339E-6	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999704934824417	WITHOUT_CLASSIFICATION	2.9506517558355228E-5	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999764910878962	WITHOUT_CLASSIFICATION	2.3508912103857035E-5	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.999989311188122	WITHOUT_CLASSIFICATION	1.068881187809522E-5	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999992383567993	WITHOUT_CLASSIFICATION	7.616432007720525E-7	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999737915529933	WITHOUT_CLASSIFICATION	2.6208447006738435E-5	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999990481709615	WITHOUT_CLASSIFICATION	9.51829038423188E-7	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999977009650755	WITHOUT_CLASSIFICATION	2.2990349245250867E-6	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.999873777326612	WITHOUT_CLASSIFICATION	1.2622267338802226E-4	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.9999292550338839	WITHOUT_CLASSIFICATION	7.074496611610458E-5	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999967697820318	WITHOUT_CLASSIFICATION	3.2302179681253583E-6	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.9999893854373552	WITHOUT_CLASSIFICATION	1.061456264473907E-5	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999980522854433	WITHOUT_CLASSIFICATION	1.9477145568018847E-6	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999943432688081	WITHOUT_CLASSIFICATION	5.65673119189462E-6	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9999953191317767	WITHOUT_CLASSIFICATION	4.680868223204821E-6	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.999983159676134	WITHOUT_CLASSIFICATION	1.6840323865964782E-5	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999925215243723	WITHOUT_CLASSIFICATION	7.4784756275690616E-6	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999953713530727	WITHOUT_CLASSIFICATION	4.62864692727419E-6	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999943950000053	WITHOUT_CLASSIFICATION	5.604999994666161E-6	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.999996953198771	WITHOUT_CLASSIFICATION	3.0468012288842626E-6	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999959290253904	WITHOUT_CLASSIFICATION	4.070974609653041E-6	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999947384595974	WITHOUT_CLASSIFICATION	5.26154040259397E-6	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999959254141324	WITHOUT_CLASSIFICATION	4.074585867533228E-6	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999989131254736	WITHOUT_CLASSIFICATION	1.0868745263962713E-6	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999759302355492	WITHOUT_CLASSIFICATION	2.4069764450854956E-5	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999759302355492	WITHOUT_CLASSIFICATION	2.4069764450854956E-5	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999978134959736	WITHOUT_CLASSIFICATION	2.1865040262893818E-6	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999978134959736	WITHOUT_CLASSIFICATION	2.1865040262893818E-6	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.999994151401652	WITHOUT_CLASSIFICATION	5.848598347948383E-6	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.999994151401652	WITHOUT_CLASSIFICATION	5.848598347948383E-6	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999994960920214	WITHOUT_CLASSIFICATION	5.039079784484327E-7	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999899435248998	WITHOUT_CLASSIFICATION	1.005647510019162E-5	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999543366356665	WITHOUT_CLASSIFICATION	4.566336433358535E-5	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999992416692782	WITHOUT_CLASSIFICATION	7.583307218255833E-7	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999975187152684	WITHOUT_CLASSIFICATION	2.4812847314460845E-6	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999967535074916	WITHOUT_CLASSIFICATION	3.24649250833254E-6	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9999530513969176	WITHOUT_CLASSIFICATION	4.694860308246171E-5	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999494859078475	WITHOUT_CLASSIFICATION	5.051409215252292E-5	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999998382427429	WITHOUT_CLASSIFICATION	1.617572571936944E-7	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999993345064704	WITHOUT_CLASSIFICATION	6.654935297010583E-7	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.999999875148337	WITHOUT_CLASSIFICATION	1.2485166298079176E-7	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999976159525378	WITHOUT_CLASSIFICATION	2.3840474621667757E-6	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999996939120297	WITHOUT_CLASSIFICATION	3.0608797021094133E-7	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999225291185703	WITHOUT_CLASSIFICATION	7.74708814297295E-5	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999918943299199	WITHOUT_CLASSIFICATION	8.105670080104174E-6	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9999839645321417	WITHOUT_CLASSIFICATION	1.603546785831103E-5	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999993157735002	WITHOUT_CLASSIFICATION	6.842264998073743E-7	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999997399504025	WITHOUT_CLASSIFICATION	2.600495974857748E-7	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999905881969223	WITHOUT_CLASSIFICATION	9.411803077662642E-6	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9999448089172869	WITHOUT_CLASSIFICATION	5.5191082713208584E-5	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9999480908997157	WITHOUT_CLASSIFICATION	5.190910028440752E-5	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999925449694764	WITHOUT_CLASSIFICATION	7.455030523607937E-6	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999509648232209	WITHOUT_CLASSIFICATION	4.903517677919107E-5	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999957059348001	WITHOUT_CLASSIFICATION	4.294065199862455E-6	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999964772838946	WITHOUT_CLASSIFICATION	3.522716105493549E-6	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999986220775441	WITHOUT_CLASSIFICATION	1.3779224558642328E-6	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9998110515024965	WITHOUT_CLASSIFICATION	1.889484975035348E-4	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999616595054805	WITHOUT_CLASSIFICATION	3.834049451933929E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999616595054805	WITHOUT_CLASSIFICATION	3.834049451933929E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999616595054805	WITHOUT_CLASSIFICATION	3.834049451933929E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999800747511377	WITHOUT_CLASSIFICATION	1.9925248862320606E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999800747511377	WITHOUT_CLASSIFICATION	1.9925248862320606E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999858488712299	WITHOUT_CLASSIFICATION	1.4151128770188997E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999858488712299	WITHOUT_CLASSIFICATION	1.4151128770188997E-5	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999878759789971	WITHOUT_CLASSIFICATION	1.2124021002919269E-5	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9998087740332271	WITHOUT_CLASSIFICATION	1.9122596677280935E-4	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999757630470963	WITHOUT_CLASSIFICATION	2.4236952903629328E-5	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999837464622128	WITHOUT_CLASSIFICATION	1.6253537787258036E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999616595054805	WITHOUT_CLASSIFICATION	3.834049451933929E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999616595054805	WITHOUT_CLASSIFICATION	3.834049451933929E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999616595054805	WITHOUT_CLASSIFICATION	3.834049451933929E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999800747511377	WITHOUT_CLASSIFICATION	1.9925248862320606E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999800747511377	WITHOUT_CLASSIFICATION	1.9925248862320606E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999800747511377	WITHOUT_CLASSIFICATION	1.9925248862320606E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999858488712299	WITHOUT_CLASSIFICATION	1.4151128770188997E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999858488712299	WITHOUT_CLASSIFICATION	1.4151128770188997E-5	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.999983983134861	WITHOUT_CLASSIFICATION	1.601686513890977E-5	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999970968925977	WITHOUT_CLASSIFICATION	2.903107402217722E-6	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999418922143124	WITHOUT_CLASSIFICATION	5.810778568757248E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999418922143124	WITHOUT_CLASSIFICATION	5.810778568757248E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999418922143124	WITHOUT_CLASSIFICATION	5.810778568757248E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999418922143124	WITHOUT_CLASSIFICATION	5.810778568757248E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999418922143124	WITHOUT_CLASSIFICATION	5.810778568757248E-5	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999822086782288	WITHOUT_CLASSIFICATION	1.7791321771071837E-5	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999836557504188	WITHOUT_CLASSIFICATION	1.6344249581188207E-5	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9997018154647113	WITHOUT_CLASSIFICATION	2.981845352886683E-4	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999773099766687	WITHOUT_CLASSIFICATION	2.2690023331306252E-5	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999835456468761	WITHOUT_CLASSIFICATION	1.6454353123910604E-5	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9964922275144129	WITHOUT_CLASSIFICATION	0.003507772485587047	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999532313862312	WITHOUT_CLASSIFICATION	4.676861376890219E-5	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999963592312363	WITHOUT_CLASSIFICATION	3.6407687636370118E-6	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999628433019675	WITHOUT_CLASSIFICATION	3.715669803252671E-5	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999972331833064	WITHOUT_CLASSIFICATION	2.766816693713199E-6	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999836802563232	WITHOUT_CLASSIFICATION	1.6319743676756943E-5	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.999998228555252	WITHOUT_CLASSIFICATION	1.7714447479910835E-6	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999941688241861	WITHOUT_CLASSIFICATION	5.831175813871749E-6	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999989936684451	WITHOUT_CLASSIFICATION	1.0063315548528763E-6	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999175390856571	WITHOUT_CLASSIFICATION	8.246091434285586E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9993023666907004	WITHOUT_CLASSIFICATION	6.976333092996567E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9993023666907004	WITHOUT_CLASSIFICATION	6.976333092996567E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9993023666907004	WITHOUT_CLASSIFICATION	6.976333092996567E-4	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999932469062291	WITHOUT_CLASSIFICATION	6.753093770871738E-6	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999932469062291	WITHOUT_CLASSIFICATION	6.753093770871738E-6	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999320211513439	WITHOUT_CLASSIFICATION	6.797884865611461E-5	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999964792819166	WITHOUT_CLASSIFICATION	3.520718083395222E-6	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999713369696144	WITHOUT_CLASSIFICATION	2.8663030385586808E-5	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.999992652908071	WITHOUT_CLASSIFICATION	7.347091928965144E-6	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999848529185393	WITHOUT_CLASSIFICATION	1.514708146066823E-5	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.999983750611972	WITHOUT_CLASSIFICATION	1.6249388028025736E-5	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.999981871346469	WITHOUT_CLASSIFICATION	1.8128653530963914E-5	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999971579245035	WITHOUT_CLASSIFICATION	2.8420754964111675E-6	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999926469188405	WITHOUT_CLASSIFICATION	7.353081159511506E-6	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999953620309396	WITHOUT_CLASSIFICATION	4.637969060311346E-6	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999884786592454	WITHOUT_CLASSIFICATION	1.1521340754534661E-5	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9998879571110645	WITHOUT_CLASSIFICATION	1.1204288893550921E-4	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9999437589937604	WITHOUT_CLASSIFICATION	5.6241006239530627E-5	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999916285055164	WITHOUT_CLASSIFICATION	8.371494483612062E-6	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999866663670866	WITHOUT_CLASSIFICATION	1.3333632913373787E-5	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999851258223531	WITHOUT_CLASSIFICATION	1.4874177646858216E-5	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9999510109356354	WITHOUT_CLASSIFICATION	4.8989064364544884E-5	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999935045430458	WITHOUT_CLASSIFICATION	6.4954569542295834E-6	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999960939811214	WITHOUT_CLASSIFICATION	3.9060188784783056E-6	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9998052331085362	WITHOUT_CLASSIFICATION	1.9476689146384046E-4	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9992872956807268	WITHOUT_CLASSIFICATION	7.127043192731312E-4	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999730591064131	WITHOUT_CLASSIFICATION	2.6940893586898313E-5	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9999575294878011	WITHOUT_CLASSIFICATION	4.2470512198812794E-5	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9999517395909063	WITHOUT_CLASSIFICATION	4.8260409093604806E-5	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9999595788037461	WITHOUT_CLASSIFICATION	4.042119625390565E-5	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9999765083567425	WITHOUT_CLASSIFICATION	2.349164325750267E-5	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999779535652701	WITHOUT_CLASSIFICATION	2.2046434729948145E-5	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9998118413751281	WITHOUT_CLASSIFICATION	1.8815862487180397E-4	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9998021048658151	WITHOUT_CLASSIFICATION	1.9789513418489932E-4	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9998216088475503	WITHOUT_CLASSIFICATION	1.783911524496891E-4	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.999800487665653	WITHOUT_CLASSIFICATION	1.995123343469971E-4	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9997948393522869	WITHOUT_CLASSIFICATION	2.0516064771320509E-4	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9997937471087424	WITHOUT_CLASSIFICATION	2.0625289125762998E-4	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9997920622887632	WITHOUT_CLASSIFICATION	2.0793771123685392E-4	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999702188818155	WITHOUT_CLASSIFICATION	2.978111818450611E-5	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9997511005927429	WITHOUT_CLASSIFICATION	2.488994072571584E-4	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999995058812507	WITHOUT_CLASSIFICATION	4.941187492805012E-7	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9998870922433513	WITHOUT_CLASSIFICATION	1.1290775664881337E-4	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.999980338063928	WITHOUT_CLASSIFICATION	1.9661936072028894E-5	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999976756151078	WITHOUT_CLASSIFICATION	2.3243848921567756E-6	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999785058476591	WITHOUT_CLASSIFICATION	2.1494152340875867E-5	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999817938287207	WITHOUT_CLASSIFICATION	1.820617127931857E-5	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999888721998978	WITHOUT_CLASSIFICATION	1.1127800102026664E-5	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999972976612055	WITHOUT_CLASSIFICATION	2.7023387945906804E-6	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9998683793787226	WITHOUT_CLASSIFICATION	1.3162062127731507E-4	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9998683793787226	WITHOUT_CLASSIFICATION	1.3162062127731507E-4	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999549507441317	WITHOUT_CLASSIFICATION	4.5049255868363256E-5	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999982448515342	WITHOUT_CLASSIFICATION	1.7551484657310033E-6	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999975667796738	WITHOUT_CLASSIFICATION	2.433220326247867E-6	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999311562532844	WITHOUT_CLASSIFICATION	6.884374671564378E-5	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999955736598827	WITHOUT_CLASSIFICATION	4.4263401172919045E-6	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999913304195486	WITHOUT_CLASSIFICATION	8.669580451385036E-6	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.999852172722873	WITHOUT_CLASSIFICATION	1.4782727712708043E-4	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999995157757395	WITHOUT_CLASSIFICATION	4.842242604138435E-7	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999925377621642	WITHOUT_CLASSIFICATION	7.462237835791614E-6	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999657059655835	WITHOUT_CLASSIFICATION	3.429403441647909E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999811806461897	WITHOUT_CLASSIFICATION	1.881935381034483E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999811806461897	WITHOUT_CLASSIFICATION	1.881935381034483E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999811806461897	WITHOUT_CLASSIFICATION	1.881935381034483E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999811806461897	WITHOUT_CLASSIFICATION	1.881935381034483E-5	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9998792583756457	WITHOUT_CLASSIFICATION	1.2074162435422979E-4	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9999141645189595	WITHOUT_CLASSIFICATION	8.583548104049838E-5	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9999786264039265	WITHOUT_CLASSIFICATION	2.13735960734778E-5	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9998629648215861	WITHOUT_CLASSIFICATION	1.370351784138893E-4	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999848172499626	WITHOUT_CLASSIFICATION	1.5182750037446433E-5	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999975936638363	WITHOUT_CLASSIFICATION	2.406336163737677E-6	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999692465612354	WITHOUT_CLASSIFICATION	3.07534387645381E-5	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999970215765571	WITHOUT_CLASSIFICATION	2.9784234429008473E-6	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999970215765571	WITHOUT_CLASSIFICATION	2.9784234429008473E-6	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999910269162725	WITHOUT_CLASSIFICATION	8.973083727485269E-6	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999261000450645	WITHOUT_CLASSIFICATION	7.389995493551794E-5	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999267251627371	WITHOUT_CLASSIFICATION	7.32748372628396E-5	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999996180351342	WITHOUT_CLASSIFICATION	3.819648657524529E-7	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999996180351342	WITHOUT_CLASSIFICATION	3.819648657524529E-7	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.99999968816258	WITHOUT_CLASSIFICATION	3.11837420037172E-7	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999248439812061	WITHOUT_CLASSIFICATION	7.515601879393318E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999248439812061	WITHOUT_CLASSIFICATION	7.515601879393318E-5	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999953656257267	WITHOUT_CLASSIFICATION	4.634374273277351E-6	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.999805974943847	WITHOUT_CLASSIFICATION	1.9402505615295892E-4	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999994441560796	WITHOUT_CLASSIFICATION	5.558439204334566E-7	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999945822138467	WITHOUT_CLASSIFICATION	5.417786153275492E-6	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999772583101878	WITHOUT_CLASSIFICATION	2.274168981216467E-5	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999992172766142	WITHOUT_CLASSIFICATION	7.82723385780129E-7	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999952007230808	WITHOUT_CLASSIFICATION	4.799276919215268E-6	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9998226143213131	WITHOUT_CLASSIFICATION	1.7738567868688098E-4	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999922392731578	WITHOUT_CLASSIFICATION	7.760726842101641E-6	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999855985000982	WITHOUT_CLASSIFICATION	1.4401499901864361E-5	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.999990373236842	WITHOUT_CLASSIFICATION	9.62676315798358E-6	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999741734477986	WITHOUT_CLASSIFICATION	2.5826552201380382E-5	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999811445129346	WITHOUT_CLASSIFICATION	1.8855487065395003E-5	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999811990056853	WITHOUT_CLASSIFICATION	1.8800994314710052E-5	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9994448178974673	WITHOUT_CLASSIFICATION	5.551821025326485E-4	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999998210781214	WITHOUT_CLASSIFICATION	1.7892187865578635E-7	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9998494295835694	WITHOUT_CLASSIFICATION	1.505704164305378E-4	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9999830802561208	WITHOUT_CLASSIFICATION	1.6919743879192844E-5	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999449800981592	WITHOUT_CLASSIFICATION	5.501990184071065E-5	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999930316572072	WITHOUT_CLASSIFICATION	6.968342792908103E-6	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999934797616938	WITHOUT_CLASSIFICATION	6.520238306096211E-6	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999831410231189	WITHOUT_CLASSIFICATION	1.6858976881187894E-5	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.999783597422711	WITHOUT_CLASSIFICATION	2.164025772890435E-4	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999988282824591	WITHOUT_CLASSIFICATION	1.1717175409104067E-6	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999987361703528	WITHOUT_CLASSIFICATION	1.263829647210891E-6	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999962825884186	WITHOUT_CLASSIFICATION	3.7174115814067123E-6	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999591253511922	WITHOUT_CLASSIFICATION	4.0874648807744186E-5	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999982701849891	WITHOUT_CLASSIFICATION	1.7298150109291015E-6	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999792941311284	WITHOUT_CLASSIFICATION	2.0705868871606254E-5	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9998503262528845	WITHOUT_CLASSIFICATION	1.4967374711554596E-4	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9995174956466091	WITHOUT_CLASSIFICATION	4.825043533909583E-4	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.99978968198837	WITHOUT_CLASSIFICATION	2.1031801163009598E-4	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.999984250299298	WITHOUT_CLASSIFICATION	1.5749700701918473E-5	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999297237470681	WITHOUT_CLASSIFICATION	7.027625293188364E-5	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.999903962240946	WITHOUT_CLASSIFICATION	9.60377590539293E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999793950519983	WITHOUT_CLASSIFICATION	2.0604948001680765E-5	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999749754489954	WITHOUT_CLASSIFICATION	2.5024551004535428E-5	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999816983599746	WITHOUT_CLASSIFICATION	1.8301640025321952E-5	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.999937073403376	WITHOUT_CLASSIFICATION	6.292659662392417E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999793950519983	WITHOUT_CLASSIFICATION	2.0604948001680765E-5	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999749754489954	WITHOUT_CLASSIFICATION	2.5024551004535428E-5	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999467484239843	WITHOUT_CLASSIFICATION	5.325157601561958E-5	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999895654417023	WITHOUT_CLASSIFICATION	1.0434558297784728E-5	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999895654417023	WITHOUT_CLASSIFICATION	1.0434558297784728E-5	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999986441364895	WITHOUT_CLASSIFICATION	1.355863510467353E-6	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.999999603346846	WITHOUT_CLASSIFICATION	3.9665315389652307E-7	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9998705807812556	WITHOUT_CLASSIFICATION	1.2941921874447986E-4	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.999894876457436	WITHOUT_CLASSIFICATION	1.0512354256398552E-4	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999926124786639	WITHOUT_CLASSIFICATION	7.387521336001378E-6	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999584296057834	WITHOUT_CLASSIFICATION	4.157039421658562E-5	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.999991896628944	WITHOUT_CLASSIFICATION	8.103371055975225E-6	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999892683799777	WITHOUT_CLASSIFICATION	1.0731620022201764E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9998501568228242	WITHOUT_CLASSIFICATION	1.498431771758426E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9996400945332476	WITHOUT_CLASSIFICATION	3.5990546675230666E-4	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999884004855895	WITHOUT_CLASSIFICATION	1.1599514410534823E-5	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999954116786315	WITHOUT_CLASSIFICATION	4.588321368449024E-6	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999936002872817	WITHOUT_CLASSIFICATION	6.3997127183132485E-6	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999916943234627	WITHOUT_CLASSIFICATION	8.30567653734844E-6	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999916943234627	WITHOUT_CLASSIFICATION	8.30567653734844E-6	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999378427721187	WITHOUT_CLASSIFICATION	6.215722788125143E-5	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999378427721187	WITHOUT_CLASSIFICATION	6.215722788125143E-5	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999965687355331	WITHOUT_CLASSIFICATION	3.4312644668759262E-6	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999688162954289	WITHOUT_CLASSIFICATION	3.118370457114795E-5	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.999948180277169	WITHOUT_CLASSIFICATION	5.1819722831018056E-5	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999798134255314	WITHOUT_CLASSIFICATION	2.018657446859734E-5	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999922081328576	WITHOUT_CLASSIFICATION	7.791867142386612E-6	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999759952526144	WITHOUT_CLASSIFICATION	2.4004747385643306E-5	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9998705807812556	WITHOUT_CLASSIFICATION	1.2941921874447986E-4	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.999894876457436	WITHOUT_CLASSIFICATION	1.0512354256398552E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9998501568228242	WITHOUT_CLASSIFICATION	1.498431771758426E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9996400945332476	WITHOUT_CLASSIFICATION	3.5990546675230666E-4	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999447569046543	WITHOUT_CLASSIFICATION	5.524309534553489E-5	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999867289112927	WITHOUT_CLASSIFICATION	1.327108870734575E-5	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.99968985592322	WITHOUT_CLASSIFICATION	3.10144076779955E-4	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9998180203725366	WITHOUT_CLASSIFICATION	1.8197962746333322E-4	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999828176947075	WITHOUT_CLASSIFICATION	1.7182305292492478E-5	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9998471428226156	WITHOUT_CLASSIFICATION	1.528571773844586E-4	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999954839697605	WITHOUT_CLASSIFICATION	4.5160302395849395E-6	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.999688481051304	WITHOUT_CLASSIFICATION	3.1151894869593875E-4	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999950691263834	WITHOUT_CLASSIFICATION	4.930873616612327E-6	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999567881550504	WITHOUT_CLASSIFICATION	4.321184494967186E-5	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9998627063445292	WITHOUT_CLASSIFICATION	1.3729365547086755E-4	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9998169727740175	WITHOUT_CLASSIFICATION	1.8302722598259114E-4	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.9997477307339313	WITHOUT_CLASSIFICATION	2.5226926606869E-4	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999205158079316	WITHOUT_CLASSIFICATION	7.948419206842671E-5	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999989408039448	WITHOUT_CLASSIFICATION	1.0591960552163241E-6	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9979886966725827	WITHOUT_CLASSIFICATION	0.0020113033274173344	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999814743342464	WITHOUT_CLASSIFICATION	1.852566575347337E-5	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999873047167231	WITHOUT_CLASSIFICATION	1.2695283276900677E-5	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999946385047274	WITHOUT_CLASSIFICATION	5.361495272721396E-6	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999166082805897	WITHOUT_CLASSIFICATION	8.339171941032843E-5	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999344862819084	WITHOUT_CLASSIFICATION	6.551371809154054E-5	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999344862819084	WITHOUT_CLASSIFICATION	6.551371809154054E-5	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999976788948793	WITHOUT_CLASSIFICATION	2.3211051206680727E-6	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999507040166886	WITHOUT_CLASSIFICATION	4.9295983311266214E-5	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999989634469394	WITHOUT_CLASSIFICATION	1.0365530606053344E-6	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999888423919512	WITHOUT_CLASSIFICATION	1.115760804894407E-5	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999888423919512	WITHOUT_CLASSIFICATION	1.115760804894407E-5	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.99968985592322	WITHOUT_CLASSIFICATION	3.10144076779955E-4	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999528526744289	WITHOUT_CLASSIFICATION	4.714732557112098E-5	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999721156727956	WITHOUT_CLASSIFICATION	2.7884327204330904E-5	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999935245741691	WITHOUT_CLASSIFICATION	6.475425830894934E-6	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999932500532018	WITHOUT_CLASSIFICATION	6.749946798183835E-6	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999508724996476	WITHOUT_CLASSIFICATION	4.912750035231333E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9996157736547904	WITHOUT_CLASSIFICATION	3.84226345209686E-4	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999735398501614	WITHOUT_CLASSIFICATION	2.6460149838638426E-5	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9999551069568408	WITHOUT_CLASSIFICATION	4.4893043159223935E-5	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999467627199037	WITHOUT_CLASSIFICATION	5.3237280096448916E-5	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999932221599974	WITHOUT_CLASSIFICATION	6.7778400025649055E-6	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999922520894784	WITHOUT_CLASSIFICATION	7.747910521647627E-6	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999822556147441	WITHOUT_CLASSIFICATION	1.7744385255919605E-5	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999918930665644	WITHOUT_CLASSIFICATION	8.106933435542445E-6	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.999972519875219	WITHOUT_CLASSIFICATION	2.7480124781052977E-5	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9999505850263083	WITHOUT_CLASSIFICATION	4.9414973691639034E-5	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999807277019853	WITHOUT_CLASSIFICATION	1.927229801466166E-5	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9999023926110072	WITHOUT_CLASSIFICATION	9.760738899271346E-5	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999981806370709	WITHOUT_CLASSIFICATION	1.8193629291475019E-6	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.999993944620767	WITHOUT_CLASSIFICATION	6.0553792330783955E-6	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999910749251689	WITHOUT_CLASSIFICATION	8.925074831054098E-6	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999645824971175	WITHOUT_CLASSIFICATION	3.5417502882472436E-5	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999921639937872	WITHOUT_CLASSIFICATION	7.836006212762099E-6	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999698778114983	WITHOUT_CLASSIFICATION	3.0122188501815726E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999993257040055	WITHOUT_CLASSIFICATION	6.7429599450026406E-6	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999777566388892	WITHOUT_CLASSIFICATION	2.224336111079885E-5	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999786350272588	WITHOUT_CLASSIFICATION	2.1364972741220358E-5	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999705625731428	WITHOUT_CLASSIFICATION	2.9437426857272063E-5	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999934368626612	WITHOUT_CLASSIFICATION	6.563137338808814E-6	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999821418369153	WITHOUT_CLASSIFICATION	1.7858163084682634E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999961356621264	WITHOUT_CLASSIFICATION	3.864337873559628E-6	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999961356621264	WITHOUT_CLASSIFICATION	3.864337873559628E-6	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999993201824201	WITHOUT_CLASSIFICATION	6.798175798906772E-7	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999794087128553	WITHOUT_CLASSIFICATION	2.059128714482008E-5	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999794087128553	WITHOUT_CLASSIFICATION	2.059128714482008E-5	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999928807435691	WITHOUT_CLASSIFICATION	7.119256430865739E-6	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999928807435691	WITHOUT_CLASSIFICATION	7.119256430865739E-6	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999369975886087	WITHOUT_CLASSIFICATION	6.300241139135435E-5	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999901325259526	WITHOUT_CLASSIFICATION	9.867474047456075E-6	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999947839429238	WITHOUT_CLASSIFICATION	5.216057076219286E-6	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999471375281876	WITHOUT_CLASSIFICATION	5.2862471812406855E-5	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999804366448299	WITHOUT_CLASSIFICATION	1.9563355170117897E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9994082535679316	WITHOUT_CLASSIFICATION	5.917464320684065E-4	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9994082535679316	WITHOUT_CLASSIFICATION	5.917464320684065E-4	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999993257040055	WITHOUT_CLASSIFICATION	6.7429599450026406E-6	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999993257040055	WITHOUT_CLASSIFICATION	6.7429599450026406E-6	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.999993257040055	WITHOUT_CLASSIFICATION	6.7429599450026406E-6	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999777566388892	WITHOUT_CLASSIFICATION	2.224336111079885E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999961356621264	WITHOUT_CLASSIFICATION	3.864337873559628E-6	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999961356621264	WITHOUT_CLASSIFICATION	3.864337873559628E-6	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999961356621264	WITHOUT_CLASSIFICATION	3.864337873559628E-6	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999369975886087	WITHOUT_CLASSIFICATION	6.300241139135435E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999369975886087	WITHOUT_CLASSIFICATION	6.300241139135435E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999369975886087	WITHOUT_CLASSIFICATION	6.300241139135435E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999471375281876	WITHOUT_CLASSIFICATION	5.2862471812406855E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999471375281876	WITHOUT_CLASSIFICATION	5.2862471812406855E-5	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999973363469251	WITHOUT_CLASSIFICATION	2.663653074792389E-6	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999596501386554	WITHOUT_CLASSIFICATION	4.03498613445715E-5	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999444859438568	WITHOUT_CLASSIFICATION	5.551405614325939E-5	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.999814424052345	WITHOUT_CLASSIFICATION	1.8557594765502802E-4	IMPLEMENTATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9999913560901197	WITHOUT_CLASSIFICATION	8.64390988039786E-6	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9998244162092347	WITHOUT_CLASSIFICATION	1.7558379076530438E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9998244162092347	WITHOUT_CLASSIFICATION	1.7558379076530438E-4	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999923295644632	WITHOUT_CLASSIFICATION	7.670435536872007E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9996157736547904	WITHOUT_CLASSIFICATION	3.84226345209686E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9996157736547904	WITHOUT_CLASSIFICATION	3.84226345209686E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9996157736547904	WITHOUT_CLASSIFICATION	3.84226345209686E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9996157736547904	WITHOUT_CLASSIFICATION	3.84226345209686E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9996157736547904	WITHOUT_CLASSIFICATION	3.84226345209686E-4	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999958667693296	WITHOUT_CLASSIFICATION	4.133230670412052E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999958667693296	WITHOUT_CLASSIFICATION	4.133230670412052E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999958667693296	WITHOUT_CLASSIFICATION	4.133230670412052E-6	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999879195824215	WITHOUT_CLASSIFICATION	1.2080417578473096E-5	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.999981812115782	WITHOUT_CLASSIFICATION	1.8187884218055763E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999777566388892	WITHOUT_CLASSIFICATION	2.224336111079885E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999369975886087	WITHOUT_CLASSIFICATION	6.300241139135435E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999369975886087	WITHOUT_CLASSIFICATION	6.300241139135435E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9996157736547904	WITHOUT_CLASSIFICATION	3.84226345209686E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9996157736547904	WITHOUT_CLASSIFICATION	3.84226345209686E-4	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999958667693296	WITHOUT_CLASSIFICATION	4.133230670412052E-6	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999923295644632	WITHOUT_CLASSIFICATION	7.670435536872007E-6	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999859188270825	WITHOUT_CLASSIFICATION	1.4081172917453549E-5	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.9999737953846609	WITHOUT_CLASSIFICATION	2.6204615339076455E-5	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999997959242529	WITHOUT_CLASSIFICATION	2.0407574708806473E-7	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9995848747621823	WITHOUT_CLASSIFICATION	4.1512523781771113E-4	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999645818678525	WITHOUT_CLASSIFICATION	3.541813214744937E-5	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999763444047387	WITHOUT_CLASSIFICATION	2.3655595261226866E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999292645117583	WITHOUT_CLASSIFICATION	7.073548824161305E-5	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999854477069638	WITHOUT_CLASSIFICATION	1.4552293036301508E-5	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.999978546093813	WITHOUT_CLASSIFICATION	2.145390618700451E-5	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.999962684721658	WITHOUT_CLASSIFICATION	3.731527834203965E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.99998492159893	WITHOUT_CLASSIFICATION	1.5078401069883917E-5	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999757701212002	WITHOUT_CLASSIFICATION	2.4229878799893232E-5	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999924887756728	WITHOUT_CLASSIFICATION	7.511224327150415E-6	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999954175559731	WITHOUT_CLASSIFICATION	4.582444026879304E-6	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.999976173361083	WITHOUT_CLASSIFICATION	2.3826638916941257E-5	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999777619418109	WITHOUT_CLASSIFICATION	2.2238058189117715E-5	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999858400187115	WITHOUT_CLASSIFICATION	1.4159981288510916E-5	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9998455398537356	WITHOUT_CLASSIFICATION	1.544601462643057E-4	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999381955740559	WITHOUT_CLASSIFICATION	6.180442594408491E-5	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999972667395941	WITHOUT_CLASSIFICATION	2.7332604059088973E-6	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999971018760123	WITHOUT_CLASSIFICATION	2.8981239876261963E-6	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999823112125086	WITHOUT_CLASSIFICATION	1.7688787491367337E-5	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.999880999541177	WITHOUT_CLASSIFICATION	1.1900045882298824E-4	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999822449096261	WITHOUT_CLASSIFICATION	1.7755090373860385E-5	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999887374638388	WITHOUT_CLASSIFICATION	1.1262536161207994E-5	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999921449753163	WITHOUT_CLASSIFICATION	7.855024683708138E-6	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.999963266456537	WITHOUT_CLASSIFICATION	3.67335434629821E-5	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999972905314299	WITHOUT_CLASSIFICATION	2.70946856999262E-6	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999765318660072	WITHOUT_CLASSIFICATION	2.3468133992770397E-5	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.99999119762154	WITHOUT_CLASSIFICATION	8.802378460018263E-6	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999915058002534	WITHOUT_CLASSIFICATION	8.49419974666472E-6	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999734438959965	WITHOUT_CLASSIFICATION	2.655610400357769E-5	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.999994286815159	WITHOUT_CLASSIFICATION	5.713184840977216E-6	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999964015305645	WITHOUT_CLASSIFICATION	3.5984694355433896E-6	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999859188270825	WITHOUT_CLASSIFICATION	1.4081172917453549E-5	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9998200576082487	WITHOUT_CLASSIFICATION	1.7994239175139146E-4	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999863563427895	WITHOUT_CLASSIFICATION	1.3643657210341439E-5	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999948143395035	WITHOUT_CLASSIFICATION	5.185660496461353E-6	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.99995217302573	WITHOUT_CLASSIFICATION	4.782697427002786E-5	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.99995217302573	WITHOUT_CLASSIFICATION	4.782697427002786E-5	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.999955017190051	WITHOUT_CLASSIFICATION	4.498280994892337E-5	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.999955017190051	WITHOUT_CLASSIFICATION	4.498280994892337E-5	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999989697647119	WITHOUT_CLASSIFICATION	1.0302352880211544E-6	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.999971253913321	WITHOUT_CLASSIFICATION	2.874608667898212E-5	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9998736763561276	WITHOUT_CLASSIFICATION	1.263236438724491E-4	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9968456632486243	WITHOUT_CLASSIFICATION	0.003154336751375573	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999697776860592	WITHOUT_CLASSIFICATION	3.0222313940691666E-5	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9995108457959991	WITHOUT_CLASSIFICATION	4.891542040009724E-4	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999852084413701	WITHOUT_CLASSIFICATION	1.4791558629933034E-5	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999978748536565	WITHOUT_CLASSIFICATION	2.1251463435484643E-6	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999964761555664	WITHOUT_CLASSIFICATION	3.523844433646635E-6	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999980291865043	WITHOUT_CLASSIFICATION	1.9708134956487546E-6	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.999994676986127	WITHOUT_CLASSIFICATION	5.3230138729416135E-6	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.999994816250649	WITHOUT_CLASSIFICATION	5.1837493510200366E-6	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.999994816250649	WITHOUT_CLASSIFICATION	5.1837493510200366E-6	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999972860261814	WITHOUT_CLASSIFICATION	2.713973818578987E-6	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999943283474696	WITHOUT_CLASSIFICATION	5.67165253033631E-6	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999929312828737	WITHOUT_CLASSIFICATION	7.068717126346777E-6	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999929312828737	WITHOUT_CLASSIFICATION	7.068717126346777E-6	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999981757303624	WITHOUT_CLASSIFICATION	1.8242696376471377E-6	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999979340665622	WITHOUT_CLASSIFICATION	2.0659334377962076E-6	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.999928510135634	WITHOUT_CLASSIFICATION	7.148986436605413E-5	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999650563404339	WITHOUT_CLASSIFICATION	3.4943659566052356E-5	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999971585623756	WITHOUT_CLASSIFICATION	2.841437624423601E-6	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.99998703009596	WITHOUT_CLASSIFICATION	1.2969904039870492E-5	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9999621003198964	WITHOUT_CLASSIFICATION	3.7899680103614E-5	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999905823898568	WITHOUT_CLASSIFICATION	9.417610143180427E-6	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999984002931507	WITHOUT_CLASSIFICATION	1.5997068493010208E-6	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9999805205206244	WITHOUT_CLASSIFICATION	1.9479479375617165E-5	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999405553813563	WITHOUT_CLASSIFICATION	5.944461864366009E-5	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999704838484574	WITHOUT_CLASSIFICATION	2.951615154258127E-5	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999860524798898	WITHOUT_CLASSIFICATION	1.3947520110270818E-5	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999059043699193	WITHOUT_CLASSIFICATION	9.409563008072032E-5	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999997020904574	WITHOUT_CLASSIFICATION	2.9790954258940653E-7	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999932447283841	WITHOUT_CLASSIFICATION	6.755271615866265E-6	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.999972194547297	WITHOUT_CLASSIFICATION	2.7805452703045615E-5	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9998396230094108	WITHOUT_CLASSIFICATION	1.6037699058924344E-4	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999947448568843	WITHOUT_CLASSIFICATION	5.255143115610854E-6	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999994281430001	WITHOUT_CLASSIFICATION	5.718569998851209E-7	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9969536215091089	WITHOUT_CLASSIFICATION	0.0030463784908909735	IMPLEMENTATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999833262787103	WITHOUT_CLASSIFICATION	1.667372128960314E-5	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999784976469955	WITHOUT_CLASSIFICATION	2.1502353004415394E-5	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999844807422794	WITHOUT_CLASSIFICATION	1.5519257720591367E-5	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999503058728012	WITHOUT_CLASSIFICATION	4.969412719882979E-5	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999973260146677	WITHOUT_CLASSIFICATION	2.67398533220198E-6	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9999952499071724	WITHOUT_CLASSIFICATION	4.75009282763338E-6	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999297069752565	WITHOUT_CLASSIFICATION	7.029302474355635E-5	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999981023910263	WITHOUT_CLASSIFICATION	1.8976089736529653E-6	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.999989671620132	WITHOUT_CLASSIFICATION	1.032837986802333E-5	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999681053382192	WITHOUT_CLASSIFICATION	3.189466178070545E-5	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999854260168803	WITHOUT_CLASSIFICATION	1.4573983119723679E-5	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999853960625416	WITHOUT_CLASSIFICATION	1.4603937458570492E-5	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999951835808673	WITHOUT_CLASSIFICATION	4.8164191328171646E-6	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999951835808673	WITHOUT_CLASSIFICATION	4.8164191328171646E-6	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999638811718377	WITHOUT_CLASSIFICATION	3.6118828162266854E-5	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999824274139841	WITHOUT_CLASSIFICATION	1.757258601586499E-5	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.999993946936501	WITHOUT_CLASSIFICATION	6.053063499029281E-6	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9999140427523903	WITHOUT_CLASSIFICATION	8.595724760979611E-5	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9997332141381057	WITHOUT_CLASSIFICATION	2.667858618942538E-4	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999862155937483	WITHOUT_CLASSIFICATION	1.3784406251735784E-5	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999560670645538	WITHOUT_CLASSIFICATION	4.3932935446344537E-5	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999761402555539	WITHOUT_CLASSIFICATION	2.385974444608196E-5	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999818234574461	WITHOUT_CLASSIFICATION	1.817654255382979E-5	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9997789098977904	WITHOUT_CLASSIFICATION	2.210901022095032E-4	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999993538536739	WITHOUT_CLASSIFICATION	6.461463261546237E-7	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999742593962918	WITHOUT_CLASSIFICATION	2.5740603708222096E-5	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999557935962772	WITHOUT_CLASSIFICATION	4.420640372288246E-5	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999792473516271	WITHOUT_CLASSIFICATION	2.075264837285179E-5	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999697654443718	WITHOUT_CLASSIFICATION	3.023455562824239E-5	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999701610500726	WITHOUT_CLASSIFICATION	2.9838949927381548E-5	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999992246094782	WITHOUT_CLASSIFICATION	7.753905217414988E-7	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999900230773313	WITHOUT_CLASSIFICATION	9.976922668757018E-6	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999166888921006	WITHOUT_CLASSIFICATION	8.331110789938026E-5	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999757313182693	WITHOUT_CLASSIFICATION	2.42686817306045E-5	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999933037177592	WITHOUT_CLASSIFICATION	6.696282240860038E-6	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9997077637482786	WITHOUT_CLASSIFICATION	2.9223625172133483E-4	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9995601536985468	WITHOUT_CLASSIFICATION	4.398463014532047E-4	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.999996149853248	WITHOUT_CLASSIFICATION	3.850146751933096E-6	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999674406923178	WITHOUT_CLASSIFICATION	3.255930768217853E-5	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.99999867420121	WITHOUT_CLASSIFICATION	1.3257987898828824E-6	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999940230119673	WITHOUT_CLASSIFICATION	5.976988032775392E-6	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999909956145805	WITHOUT_CLASSIFICATION	9.00438541958785E-6	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9999845189197618	WITHOUT_CLASSIFICATION	1.548108023817899E-5	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999870513014513	WITHOUT_CLASSIFICATION	1.2948698548741848E-5	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999972312384572	WITHOUT_CLASSIFICATION	2.7687615428956633E-6	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999987664172226	WITHOUT_CLASSIFICATION	1.2335827773733067E-6	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999959923221216	WITHOUT_CLASSIFICATION	4.007677878445372E-6	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999892321712592	WITHOUT_CLASSIFICATION	1.0767828740898281E-5	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999300974973175	WITHOUT_CLASSIFICATION	6.990250268251261E-5	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999887781392681	WITHOUT_CLASSIFICATION	1.122186073180145E-5	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999270376203783	WITHOUT_CLASSIFICATION	7.29623796217202E-5	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9999799539832918	WITHOUT_CLASSIFICATION	2.0046016708245286E-5	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9999609449310705	WITHOUT_CLASSIFICATION	3.905506892952599E-5	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999877934191104	WITHOUT_CLASSIFICATION	1.2206580889637969E-5	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999607803292018	WITHOUT_CLASSIFICATION	3.9219670798221804E-5	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999706148299349	WITHOUT_CLASSIFICATION	2.9385170065117195E-5	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999706148299349	WITHOUT_CLASSIFICATION	2.9385170065117195E-5	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999647259478709	WITHOUT_CLASSIFICATION	3.527405212910834E-5	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999885930177008	WITHOUT_CLASSIFICATION	1.1406982299277452E-5	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999241341700467	WITHOUT_CLASSIFICATION	7.586582995343018E-5	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999770548905523	WITHOUT_CLASSIFICATION	2.2945109447688544E-5	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999977652605871	WITHOUT_CLASSIFICATION	2.234739412828699E-6	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999882658219775	WITHOUT_CLASSIFICATION	1.1734178022537485E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999984149030601	WITHOUT_CLASSIFICATION	1.5850969399665903E-6	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999726827833622	WITHOUT_CLASSIFICATION	2.7317216637876708E-5	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999980885858867	WITHOUT_CLASSIFICATION	1.9114141133039877E-6	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999996027395531	WITHOUT_CLASSIFICATION	3.972604468121926E-7	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999397557445656	WITHOUT_CLASSIFICATION	6.0244255434456045E-5	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999989668480566	WITHOUT_CLASSIFICATION	1.0331519434524083E-6	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999986593267235	WITHOUT_CLASSIFICATION	1.3406732765809178E-6	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9997908813424162	WITHOUT_CLASSIFICATION	2.091186575838264E-4	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999976996661616	WITHOUT_CLASSIFICATION	2.300333838472114E-6	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9997908380467191	WITHOUT_CLASSIFICATION	2.0916195328097098E-4	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999405294315258	WITHOUT_CLASSIFICATION	5.947056847410046E-5	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999091520753103	WITHOUT_CLASSIFICATION	9.084792468971645E-5	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999522430231083	WITHOUT_CLASSIFICATION	4.775697689161019E-5	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999814670344013	WITHOUT_CLASSIFICATION	1.853296559866003E-5	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999518624385316	WITHOUT_CLASSIFICATION	4.8137561468382316E-5	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.999986048542685	WITHOUT_CLASSIFICATION	1.3951457315074968E-5	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999471717325	WITHOUT_CLASSIFICATION	5.2828267535198844E-8	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999981210050711	WITHOUT_CLASSIFICATION	1.8789949288647844E-6	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999986668197465	WITHOUT_CLASSIFICATION	1.3331802535310683E-6	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999874781329412	WITHOUT_CLASSIFICATION	1.2521867058878315E-5	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999970334391238	WITHOUT_CLASSIFICATION	2.9665608761474333E-6	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999988873205045	WITHOUT_CLASSIFICATION	1.1126794955650474E-6	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999849500099068	WITHOUT_CLASSIFICATION	1.5049990093258847E-5	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999942435660978	WITHOUT_CLASSIFICATION	5.756433902276689E-6	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.999984339730601	WITHOUT_CLASSIFICATION	1.5660269399031626E-5	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999933929537137	WITHOUT_CLASSIFICATION	6.607046286290244E-6	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999942435660978	WITHOUT_CLASSIFICATION	5.756433902276689E-6	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.999916243895465	WITHOUT_CLASSIFICATION	8.375610453500899E-5	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999987361703528	WITHOUT_CLASSIFICATION	1.263829647210891E-6	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9992326736514087	WITHOUT_CLASSIFICATION	7.673263485913176E-4	IMPLEMENTATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9999282714879867	WITHOUT_CLASSIFICATION	7.172851201334102E-5	IMPLEMENTATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999801739856148	WITHOUT_CLASSIFICATION	1.982601438515853E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999418922143124	WITHOUT_CLASSIFICATION	5.810778568757248E-5	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999930912532767	WITHOUT_CLASSIFICATION	6.908746723325071E-6	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999609915106049	WITHOUT_CLASSIFICATION	3.9008489394966125E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.999999603346846	WITHOUT_CLASSIFICATION	3.9665315389652307E-7	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999994281430001	WITHOUT_CLASSIFICATION	5.718569998851209E-7	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999444859438568	WITHOUT_CLASSIFICATION	5.551405614325939E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999980434542758	WITHOUT_CLASSIFICATION	1.9565457241434417E-6	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999924738003597	WITHOUT_CLASSIFICATION	7.526199640235019E-6	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999992747954755	WITHOUT_CLASSIFICATION	7.25204524473126E-7	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9997365100903418	WITHOUT_CLASSIFICATION	2.6348990965817837E-4	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9999809879401714	WITHOUT_CLASSIFICATION	1.9012059828641404E-5	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9994583719501482	WITHOUT_CLASSIFICATION	5.416280498518883E-4	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999974693765603	WITHOUT_CLASSIFICATION	2.530623439677002E-6	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999998921926795	WITHOUT_CLASSIFICATION	1.0780732041668891E-7	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999997316921232	WITHOUT_CLASSIFICATION	2.683078767578747E-7	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9999780981448689	WITHOUT_CLASSIFICATION	2.1901855131101582E-5	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9999072649807232	WITHOUT_CLASSIFICATION	9.273501927674369E-5	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9999827779349955	WITHOUT_CLASSIFICATION	1.7222065004633487E-5	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999984999051542	WITHOUT_CLASSIFICATION	1.5000948457110415E-6	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999848454694892	WITHOUT_CLASSIFICATION	1.5154530510832586E-5	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999608492558674	WITHOUT_CLASSIFICATION	3.9150744132773686E-5	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999572826853792	WITHOUT_CLASSIFICATION	4.2717314620926484E-5	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999996651938577	WITHOUT_CLASSIFICATION	3.3480614235933917E-7	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.999994898905954	WITHOUT_CLASSIFICATION	5.1010940459745254E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999918299750066	WITHOUT_CLASSIFICATION	8.170024993545995E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999918299750066	WITHOUT_CLASSIFICATION	8.170024993545995E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999960258236121	WITHOUT_CLASSIFICATION	3.974176387858662E-6	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999985484380889	WITHOUT_CLASSIFICATION	1.4515619110754709E-6	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999980539754366	WITHOUT_CLASSIFICATION	1.946024563451108E-6	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9970607654071338	WITHOUT_CLASSIFICATION	0.0029392345928661774	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9970607654071338	WITHOUT_CLASSIFICATION	0.0029392345928661774	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9970607654071338	WITHOUT_CLASSIFICATION	0.0029392345928661774	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9970607654071338	WITHOUT_CLASSIFICATION	0.0029392345928661774	IMPLEMENTATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999073343237463	WITHOUT_CLASSIFICATION	9.266567625372441E-5	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999732289736664	WITHOUT_CLASSIFICATION	2.6771026333731692E-5	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9999663292810095	WITHOUT_CLASSIFICATION	3.367071899054001E-5	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9999953820132079	WITHOUT_CLASSIFICATION	4.617986791996006E-6	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999651747953414	WITHOUT_CLASSIFICATION	3.482520465864792E-5	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999548444282857	WITHOUT_CLASSIFICATION	4.5155571714168104E-5	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999404277086311	WITHOUT_CLASSIFICATION	5.957229136885114E-5	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999404277086311	WITHOUT_CLASSIFICATION	5.957229136885114E-5	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999810206569717	WITHOUT_CLASSIFICATION	1.8979343028235736E-5	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9998275819880535	WITHOUT_CLASSIFICATION	1.724180119463575E-4	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.999999045038217	WITHOUT_CLASSIFICATION	9.549617829943026E-7	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999996443791335	WITHOUT_CLASSIFICATION	3.556208665505919E-7	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999938530213294	WITHOUT_CLASSIFICATION	6.146978670546589E-6	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999963053854348	WITHOUT_CLASSIFICATION	3.694614565142475E-6	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999998194133313	WITHOUT_CLASSIFICATION	1.805866686954702E-7	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999601331154179	WITHOUT_CLASSIFICATION	3.9866884582100834E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9995353957685684	WITHOUT_CLASSIFICATION	4.6460423143159386E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9995353957685684	WITHOUT_CLASSIFICATION	4.6460423143159386E-4	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999933929537137	WITHOUT_CLASSIFICATION	6.607046286290244E-6	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9999592660102317	WITHOUT_CLASSIFICATION	4.0733989768348665E-5	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9999580725515351	WITHOUT_CLASSIFICATION	4.192744846498196E-5	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999661144705312	WITHOUT_CLASSIFICATION	3.3885529468829245E-5	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999978245750708	WITHOUT_CLASSIFICATION	2.1754249291909713E-6	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9998085853930537	WITHOUT_CLASSIFICATION	1.9141460694641182E-4	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999968463723318	WITHOUT_CLASSIFICATION	3.1536276683572935E-6	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9998680837493557	WITHOUT_CLASSIFICATION	1.319162506444012E-4	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999970337605412	WITHOUT_CLASSIFICATION	2.9662394587799715E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999970337605412	WITHOUT_CLASSIFICATION	2.9662394587799715E-6	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999980672446632	WITHOUT_CLASSIFICATION	1.932755336764889E-6	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999998073965856	WITHOUT_CLASSIFICATION	1.9260341455917998E-7	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999940251558513	WITHOUT_CLASSIFICATION	5.974844148597921E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999689907032534	WITHOUT_CLASSIFICATION	3.100929674662899E-5	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999924710842989	WITHOUT_CLASSIFICATION	7.528915701124466E-6	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9998083717793959	WITHOUT_CLASSIFICATION	1.91628220604246E-4	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999912361880545	WITHOUT_CLASSIFICATION	8.763811945495988E-6	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999966161670509	WITHOUT_CLASSIFICATION	3.3838329491306435E-6	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999966161670509	WITHOUT_CLASSIFICATION	3.3838329491306435E-6	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999966161670509	WITHOUT_CLASSIFICATION	3.3838329491306435E-6	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999966161670509	WITHOUT_CLASSIFICATION	3.3838329491306435E-6	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999966071001448	WITHOUT_CLASSIFICATION	3.392899855239188E-6	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999448470814	WITHOUT_CLASSIFICATION	5.515291844594531E-8	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999864751195311	WITHOUT_CLASSIFICATION	1.352488046891881E-5	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999764178073212	WITHOUT_CLASSIFICATION	2.3582192678729422E-5	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.999890969510903	WITHOUT_CLASSIFICATION	1.0903048909699194E-4	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9997997652072638	WITHOUT_CLASSIFICATION	2.0023479273633803E-4	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999861090226158	WITHOUT_CLASSIFICATION	1.3890977384236346E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999638467379268	WITHOUT_CLASSIFICATION	3.6153262073107374E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999638467379268	WITHOUT_CLASSIFICATION	3.6153262073107374E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999638467379268	WITHOUT_CLASSIFICATION	3.6153262073107374E-5	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999990171033116	WITHOUT_CLASSIFICATION	9.82896688378912E-7	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999929773375617	WITHOUT_CLASSIFICATION	7.022662438245556E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999993024317674	WITHOUT_CLASSIFICATION	6.975682327197326E-7	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999993024317674	WITHOUT_CLASSIFICATION	6.975682327197326E-7	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.999661518352702	WITHOUT_CLASSIFICATION	3.384816472980514E-4	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999931388189776	WITHOUT_CLASSIFICATION	6.861181022414765E-6	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999923090716437	WITHOUT_CLASSIFICATION	7.690928356341583E-6	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9997877188575306	WITHOUT_CLASSIFICATION	2.1228114246952019E-4	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999993180321933	WITHOUT_CLASSIFICATION	6.819678067058505E-7	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999164274781331	WITHOUT_CLASSIFICATION	8.357252186681936E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999919293351865	WITHOUT_CLASSIFICATION	8.070664813438516E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999919293351865	WITHOUT_CLASSIFICATION	8.070664813438516E-6	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999666288105552	WITHOUT_CLASSIFICATION	3.337118944477324E-5	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9991643360656752	WITHOUT_CLASSIFICATION	8.356639343248464E-4	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999992023614078	WITHOUT_CLASSIFICATION	7.976385921494173E-7	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999832018215904	WITHOUT_CLASSIFICATION	1.6798178409544615E-5	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9984222192534353	WITHOUT_CLASSIFICATION	0.0015777807465646736	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999986703453411	WITHOUT_CLASSIFICATION	1.3296546589566714E-6	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9999895983677	WITHOUT_CLASSIFICATION	1.0401632299989806E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996468184886934	WITHOUT_CLASSIFICATION	3.531815113065677E-4	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999118435420052	WITHOUT_CLASSIFICATION	8.81564579947557E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.999920224099433	WITHOUT_CLASSIFICATION	7.977590056692565E-5	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999990744331785	WITHOUT_CLASSIFICATION	9.255668215009087E-7	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999875413214573	WITHOUT_CLASSIFICATION	1.2458678542739452E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999995131168841	WITHOUT_CLASSIFICATION	4.868831158913994E-7	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999638949965107	WITHOUT_CLASSIFICATION	3.610500348919417E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999868393497431	WITHOUT_CLASSIFICATION	1.3160650257061212E-5	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.999999836560913	WITHOUT_CLASSIFICATION	1.6343908705657263E-7	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999821562796634	WITHOUT_CLASSIFICATION	1.7843720336640226E-5	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999964121990129	WITHOUT_CLASSIFICATION	3.5878009870340444E-6	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9998994790994263	WITHOUT_CLASSIFICATION	1.005209005736723E-4	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999758841596086	WITHOUT_CLASSIFICATION	2.4115840391420772E-5	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999915901912961	WITHOUT_CLASSIFICATION	8.40980870384199E-6	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9998776576733998	WITHOUT_CLASSIFICATION	1.2234232660030217E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9985024870604282	WITHOUT_CLASSIFICATION	0.0014975129395717827	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9985024870604282	WITHOUT_CLASSIFICATION	0.0014975129395717827	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9985024870604282	WITHOUT_CLASSIFICATION	0.0014975129395717827	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9985024870604282	WITHOUT_CLASSIFICATION	0.0014975129395717827	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9985024870604282	WITHOUT_CLASSIFICATION	0.0014975129395717827	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9985024870604282	WITHOUT_CLASSIFICATION	0.0014975129395717827	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9985024870604282	WITHOUT_CLASSIFICATION	0.0014975129395717827	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9985024870604282	WITHOUT_CLASSIFICATION	0.0014975129395717827	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999974205572999	WITHOUT_CLASSIFICATION	2.5794427000395663E-6	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9999872092649383	WITHOUT_CLASSIFICATION	1.2790735061548978E-5	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999982960191873	WITHOUT_CLASSIFICATION	1.7039808126269397E-6	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999851198292845	WITHOUT_CLASSIFICATION	1.488017071558302E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999984149030601	WITHOUT_CLASSIFICATION	1.5850969399665903E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999984149030601	WITHOUT_CLASSIFICATION	1.5850969399665903E-6	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9995197782989287	WITHOUT_CLASSIFICATION	4.802217010712378E-4	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999992280833722	WITHOUT_CLASSIFICATION	7.71916627812485E-7	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999888098684082	WITHOUT_CLASSIFICATION	1.119013159179538E-5	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999990771650045	WITHOUT_CLASSIFICATION	9.22834995465215E-7	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999365258959114	WITHOUT_CLASSIFICATION	6.347410408861603E-5	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9999647958625499	WITHOUT_CLASSIFICATION	3.520413745002395E-5	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9998975456143023	WITHOUT_CLASSIFICATION	1.0245438569770342E-4	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9968525060670818	WITHOUT_CLASSIFICATION	0.003147493932918266	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999963408763708	WITHOUT_CLASSIFICATION	3.6591236291857318E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999998088538426	WITHOUT_CLASSIFICATION	1.9114615739886404E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999998088538426	WITHOUT_CLASSIFICATION	1.9114615739886404E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.999998088538426	WITHOUT_CLASSIFICATION	1.9114615739886404E-6	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999633269034435	WITHOUT_CLASSIFICATION	3.667309655650019E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999633269034435	WITHOUT_CLASSIFICATION	3.667309655650019E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999633269034435	WITHOUT_CLASSIFICATION	3.667309655650019E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999633269034435	WITHOUT_CLASSIFICATION	3.667309655650019E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999633269034435	WITHOUT_CLASSIFICATION	3.667309655650019E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999633269034435	WITHOUT_CLASSIFICATION	3.667309655650019E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999633269034435	WITHOUT_CLASSIFICATION	3.667309655650019E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999633269034435	WITHOUT_CLASSIFICATION	3.667309655650019E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999633269034435	WITHOUT_CLASSIFICATION	3.667309655650019E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999960100892773	WITHOUT_CLASSIFICATION	3.989910722684181E-6	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.999971418678769	WITHOUT_CLASSIFICATION	2.8581321231018815E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999290602115737	WITHOUT_CLASSIFICATION	7.093978842638064E-5	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9995698680632731	WITHOUT_CLASSIFICATION	4.3013193672690394E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999633269034435	WITHOUT_CLASSIFICATION	3.667309655650019E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999633269034435	WITHOUT_CLASSIFICATION	3.667309655650019E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999633269034435	WITHOUT_CLASSIFICATION	3.667309655650019E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9998914744017511	WITHOUT_CLASSIFICATION	1.0852559824893872E-4	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999749773980264	WITHOUT_CLASSIFICATION	2.5022601973559533E-5	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.99999917592215	WITHOUT_CLASSIFICATION	8.240778499573697E-7	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999888314872895	WITHOUT_CLASSIFICATION	1.116851271053286E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999888314872895	WITHOUT_CLASSIFICATION	1.116851271053286E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9998712692352031	WITHOUT_CLASSIFICATION	1.287307647968657E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999939966185855	WITHOUT_CLASSIFICATION	6.003381414589041E-6	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9998001040485669	WITHOUT_CLASSIFICATION	1.998959514331829E-4	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999941353637115	WITHOUT_CLASSIFICATION	5.864636288414722E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9994334115477401	WITHOUT_CLASSIFICATION	5.665884522599817E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9994334115477401	WITHOUT_CLASSIFICATION	5.665884522599817E-4	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999998088847529	WITHOUT_CLASSIFICATION	1.9111524696088102E-7	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.999998001808249	WITHOUT_CLASSIFICATION	1.998191750936324E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999941923065143	WITHOUT_CLASSIFICATION	5.807693485694318E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9997068611749584	WITHOUT_CLASSIFICATION	2.931388250415555E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9997068611749584	WITHOUT_CLASSIFICATION	2.931388250415555E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9997068611749584	WITHOUT_CLASSIFICATION	2.931388250415555E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999831121366268	WITHOUT_CLASSIFICATION	1.6887863373134656E-5	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999466871916529	WITHOUT_CLASSIFICATION	5.3312808347156295E-5	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999466871916529	WITHOUT_CLASSIFICATION	5.3312808347156295E-5	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.999812585343189	WITHOUT_CLASSIFICATION	1.874146568111003E-4	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.999812585343189	WITHOUT_CLASSIFICATION	1.874146568111003E-4	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999769242081323	WITHOUT_CLASSIFICATION	2.307579186759929E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999732059384846	WITHOUT_CLASSIFICATION	2.6794061515501827E-5	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9998611976832763	WITHOUT_CLASSIFICATION	1.3880231672363182E-4	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9996675483225076	WITHOUT_CLASSIFICATION	3.3245167749242364E-4	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999670981059275	WITHOUT_CLASSIFICATION	3.2901894072455904E-5	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999967370329188	WITHOUT_CLASSIFICATION	3.262967081231875E-6	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999938376624068	WITHOUT_CLASSIFICATION	6.1623375931700475E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9994082535679316	WITHOUT_CLASSIFICATION	5.917464320684065E-4	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999977982454068	WITHOUT_CLASSIFICATION	2.201754593177556E-6	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999971036357901	WITHOUT_CLASSIFICATION	2.8963642098265064E-6	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9997450025402029	WITHOUT_CLASSIFICATION	2.549974597971579E-4	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999927408466002	WITHOUT_CLASSIFICATION	7.259153399804013E-6	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999994157947091	WITHOUT_CLASSIFICATION	5.842052908370755E-7	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999995576127185	WITHOUT_CLASSIFICATION	4.4238728145351474E-7	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999987704766665	WITHOUT_CLASSIFICATION	1.2295233334273185E-6	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999996240196737	WITHOUT_CLASSIFICATION	3.759803262649891E-7	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999515911580152	WITHOUT_CLASSIFICATION	4.840884198467692E-5	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999962417587923	WITHOUT_CLASSIFICATION	3.7582412076283336E-6	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.999999703921736	WITHOUT_CLASSIFICATION	2.9607826404588255E-7	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999926863535966	WITHOUT_CLASSIFICATION	7.313646403316615E-6	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999980434542758	WITHOUT_CLASSIFICATION	1.9565457241434417E-6	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.999372874611826	WITHOUT_CLASSIFICATION	6.271253881741081E-4	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999970701066158	WITHOUT_CLASSIFICATION	2.9298933843531694E-6	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.999994567356925	WITHOUT_CLASSIFICATION	5.432643074942075E-6	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999867540444848	WITHOUT_CLASSIFICATION	1.3245955515258177E-5	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999807275094917	WITHOUT_CLASSIFICATION	1.927249050825852E-5	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999778670513582	WITHOUT_CLASSIFICATION	2.2132948641806677E-5	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999995180503852	WITHOUT_CLASSIFICATION	4.81949614787823E-7	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999876643119716	WITHOUT_CLASSIFICATION	1.2335688028492718E-5	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999692482616392	WITHOUT_CLASSIFICATION	3.075173836074627E-5	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999292916456346	WITHOUT_CLASSIFICATION	7.070835436538121E-5	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999074570069312	WITHOUT_CLASSIFICATION	9.254299306878347E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999985864231634	WITHOUT_CLASSIFICATION	1.4135768365390958E-6	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999911788933068	WITHOUT_CLASSIFICATION	8.821106693135564E-6	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.999989941395567	WITHOUT_CLASSIFICATION	1.0058604433061847E-5	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999712684945784	WITHOUT_CLASSIFICATION	2.873150542159321E-5	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999465520601859	WITHOUT_CLASSIFICATION	5.3447939813997396E-5	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999908849962563	WITHOUT_CLASSIFICATION	9.115003743664712E-6	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999971389685449	WITHOUT_CLASSIFICATION	2.861031455075846E-6	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999994824264612	WITHOUT_CLASSIFICATION	5.175735389186782E-7	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999967238211241	WITHOUT_CLASSIFICATION	3.2761788757354933E-6	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999659849946547	WITHOUT_CLASSIFICATION	3.4015005345195226E-5	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999311145685201	WITHOUT_CLASSIFICATION	6.888543147988664E-5	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999993826368968	WITHOUT_CLASSIFICATION	6.17363103282042E-7	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999998038409572	WITHOUT_CLASSIFICATION	1.961590427400025E-7	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999858276562913	WITHOUT_CLASSIFICATION	1.4172343708669081E-5	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9999845725869108	WITHOUT_CLASSIFICATION	1.5427413089286993E-5	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999992954894565	WITHOUT_CLASSIFICATION	7.045105434476674E-7	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.999999769616601	WITHOUT_CLASSIFICATION	2.3038339890630465E-7	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998410839721987	WITHOUT_CLASSIFICATION	1.5891602780121572E-4	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999995639131516	WITHOUT_CLASSIFICATION	4.360868482887453E-7	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999459139687639	WITHOUT_CLASSIFICATION	5.4086031236190396E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999459139687639	WITHOUT_CLASSIFICATION	5.4086031236190396E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999955044462665	WITHOUT_CLASSIFICATION	4.495553733430264E-6	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999955044462665	WITHOUT_CLASSIFICATION	4.495553733430264E-6	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999733323567198	WITHOUT_CLASSIFICATION	2.6667643280201473E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999733323567198	WITHOUT_CLASSIFICATION	2.6667643280201473E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999900228023308	WITHOUT_CLASSIFICATION	9.977197669228623E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999900228023308	WITHOUT_CLASSIFICATION	9.977197669228623E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999875474370127	WITHOUT_CLASSIFICATION	1.2452562987423897E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999875474370127	WITHOUT_CLASSIFICATION	1.2452562987423897E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999875474370127	WITHOUT_CLASSIFICATION	1.2452562987423897E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999875474370127	WITHOUT_CLASSIFICATION	1.2452562987423897E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999875474370127	WITHOUT_CLASSIFICATION	1.2452562987423897E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999875474370127	WITHOUT_CLASSIFICATION	1.2452562987423897E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999875474370127	WITHOUT_CLASSIFICATION	1.2452562987423897E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999875474370127	WITHOUT_CLASSIFICATION	1.2452562987423897E-5	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999875474370127	WITHOUT_CLASSIFICATION	1.2452562987423897E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999425187383233	WITHOUT_CLASSIFICATION	5.748126167681004E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999425187383233	WITHOUT_CLASSIFICATION	5.748126167681004E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999425187383233	WITHOUT_CLASSIFICATION	5.748126167681004E-5	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999979894762057	WITHOUT_CLASSIFICATION	2.0105237942614005E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999930411760469	WITHOUT_CLASSIFICATION	6.9588239530680525E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999930411760469	WITHOUT_CLASSIFICATION	6.9588239530680525E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999930411760469	WITHOUT_CLASSIFICATION	6.9588239530680525E-6	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999989767445686	WITHOUT_CLASSIFICATION	1.023255431427327E-6	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999989767445686	WITHOUT_CLASSIFICATION	1.023255431427327E-6	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999989767445686	WITHOUT_CLASSIFICATION	1.023255431427327E-6	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9998157209738926	WITHOUT_CLASSIFICATION	1.842790261072801E-4	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9999445606112327	WITHOUT_CLASSIFICATION	5.543938876725721E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999326369261018	WITHOUT_CLASSIFICATION	6.736307389816516E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999197283812623	WITHOUT_CLASSIFICATION	8.027161873760038E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999197283812623	WITHOUT_CLASSIFICATION	8.027161873760038E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999197283812623	WITHOUT_CLASSIFICATION	8.027161873760038E-5	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999879713483092	WITHOUT_CLASSIFICATION	1.2028651690751933E-5	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999792893268435	WITHOUT_CLASSIFICATION	2.071067315647807E-5	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999792893268435	WITHOUT_CLASSIFICATION	2.071067315647807E-5	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9998603878654172	WITHOUT_CLASSIFICATION	1.3961213458289228E-4	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9998874782204663	WITHOUT_CLASSIFICATION	1.125217795337428E-4	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9998874782204663	WITHOUT_CLASSIFICATION	1.125217795337428E-4	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9998185374291463	WITHOUT_CLASSIFICATION	1.814625708537081E-4	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999971841852178	WITHOUT_CLASSIFICATION	2.815814782209037E-6	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999773377861084	WITHOUT_CLASSIFICATION	2.2662213891563726E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999305943927137	WITHOUT_CLASSIFICATION	6.940560728628192E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999305943927137	WITHOUT_CLASSIFICATION	6.940560728628192E-5	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.99999713648139	WITHOUT_CLASSIFICATION	2.8635186100174067E-6	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999848505909592	WITHOUT_CLASSIFICATION	1.5149409040862124E-5	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9991261051696513	WITHOUT_CLASSIFICATION	8.738948303486547E-4	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999992792930563	WITHOUT_CLASSIFICATION	7.207069436435666E-7	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999680582893478	WITHOUT_CLASSIFICATION	3.194171065226696E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999305943927137	WITHOUT_CLASSIFICATION	6.940560728628192E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999305943927137	WITHOUT_CLASSIFICATION	6.940560728628192E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999305943927137	WITHOUT_CLASSIFICATION	6.940560728628192E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999305943927137	WITHOUT_CLASSIFICATION	6.940560728628192E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999305943927137	WITHOUT_CLASSIFICATION	6.940560728628192E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.999972764800466	WITHOUT_CLASSIFICATION	2.7235199533911694E-5	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999716474322878	WITHOUT_CLASSIFICATION	2.835256771214841E-5	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999980878978081	WITHOUT_CLASSIFICATION	1.9121021918725455E-6	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.999880001048915	WITHOUT_CLASSIFICATION	1.1999895108505644E-4	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999999860847208	WITHOUT_CLASSIFICATION	1.3915279216464202E-8	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.999949983450475	WITHOUT_CLASSIFICATION	5.0016549524966754E-5	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999981570890664	WITHOUT_CLASSIFICATION	1.842910933662125E-6	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999323883424684	WITHOUT_CLASSIFICATION	6.761165753151376E-5	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999997235057733	WITHOUT_CLASSIFICATION	2.7649422668483925E-7	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999414892943184	WITHOUT_CLASSIFICATION	5.8510705681537376E-5	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999834691984292	WITHOUT_CLASSIFICATION	1.653080157080027E-5	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.999986048542685	WITHOUT_CLASSIFICATION	1.3951457315074968E-5	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999975655459077	WITHOUT_CLASSIFICATION	2.4344540922173534E-6	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999221886054256	WITHOUT_CLASSIFICATION	7.78113945744093E-5	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999971420232452	WITHOUT_CLASSIFICATION	2.857976754760784E-6	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999904680019378	WITHOUT_CLASSIFICATION	9.531998062236548E-6	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999928905722314	WITHOUT_CLASSIFICATION	7.1094277687018845E-6	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999043494076	WITHOUT_CLASSIFICATION	9.565059247402418E-8	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999961478325132	WITHOUT_CLASSIFICATION	3.852167486790196E-6	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999229108663876	WITHOUT_CLASSIFICATION	7.708913361242393E-5	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999976525972387	WITHOUT_CLASSIFICATION	2.3474027613301793E-6	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999887901910375	WITHOUT_CLASSIFICATION	1.1209808962515738E-5	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999996027395531	WITHOUT_CLASSIFICATION	3.972604468121926E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999916232452778	WITHOUT_CLASSIFICATION	8.376754722175192E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999916232452778	WITHOUT_CLASSIFICATION	8.376754722175192E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999916232452778	WITHOUT_CLASSIFICATION	8.376754722175192E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999916232452778	WITHOUT_CLASSIFICATION	8.376754722175192E-6	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999975354524077	WITHOUT_CLASSIFICATION	2.464547592313398E-6	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.999998297027736	WITHOUT_CLASSIFICATION	1.7029722639688203E-6	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999985874557332	WITHOUT_CLASSIFICATION	1.4125442667652207E-6	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999985874557332	WITHOUT_CLASSIFICATION	1.4125442667652207E-6	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999845517469098	WITHOUT_CLASSIFICATION	1.5448253090172435E-5	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999966142808174	WITHOUT_CLASSIFICATION	3.385719182578417E-6	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999909505046033	WITHOUT_CLASSIFICATION	9.049495396689558E-6	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999965534533955	WITHOUT_CLASSIFICATION	3.4465466045056065E-5	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999981277493905	WITHOUT_CLASSIFICATION	1.8722506095945845E-6	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999947139221246	WITHOUT_CLASSIFICATION	5.286077875361321E-6	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999564108649583	WITHOUT_CLASSIFICATION	4.358913504169739E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999558987000777	WITHOUT_CLASSIFICATION	4.4101299922345236E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999558987000777	WITHOUT_CLASSIFICATION	4.4101299922345236E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999558987000777	WITHOUT_CLASSIFICATION	4.4101299922345236E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999558987000777	WITHOUT_CLASSIFICATION	4.4101299922345236E-5	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999854312917648	WITHOUT_CLASSIFICATION	1.4568708235250257E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999993187368347	WITHOUT_CLASSIFICATION	6.812631653176071E-7	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999993187368347	WITHOUT_CLASSIFICATION	6.812631653176071E-7	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999993187368347	WITHOUT_CLASSIFICATION	6.812631653176071E-7	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.999997760965254	WITHOUT_CLASSIFICATION	2.2390347460543174E-6	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999981628241126	WITHOUT_CLASSIFICATION	1.8371758874319155E-6	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999574857301025	WITHOUT_CLASSIFICATION	4.251426989746318E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9970607654071338	WITHOUT_CLASSIFICATION	0.0029392345928661774	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9970607654071338	WITHOUT_CLASSIFICATION	0.0029392345928661774	IMPLEMENTATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999997997769339	WITHOUT_CLASSIFICATION	2.002230661548958E-7	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999990839932205	WITHOUT_CLASSIFICATION	9.160067795808455E-7	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999872343468205	WITHOUT_CLASSIFICATION	1.2765653179656781E-5	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999872343468205	WITHOUT_CLASSIFICATION	1.2765653179656781E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999215240963747	WITHOUT_CLASSIFICATION	7.847590362522155E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999215240963747	WITHOUT_CLASSIFICATION	7.847590362522155E-5	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999927591128839	WITHOUT_CLASSIFICATION	7.24088711614299E-6	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9997216323349775	WITHOUT_CLASSIFICATION	2.783676650224844E-4	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999932069381354	WITHOUT_CLASSIFICATION	6.79306186460103E-6	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9987302150849479	WITHOUT_CLASSIFICATION	0.001269784915052127	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9997771691147956	WITHOUT_CLASSIFICATION	2.2283088520422194E-4	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999789154782603	WITHOUT_CLASSIFICATION	2.1084521739644838E-5	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999851192306468	WITHOUT_CLASSIFICATION	1.488076935320312E-5	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999955192694023	WITHOUT_CLASSIFICATION	4.480730597649467E-6	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999966044059871	WITHOUT_CLASSIFICATION	3.395594012955361E-6	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999986752392276	WITHOUT_CLASSIFICATION	1.3247607724320637E-6	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999986752392276	WITHOUT_CLASSIFICATION	1.3247607724320637E-6	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9998820904230955	WITHOUT_CLASSIFICATION	1.1790957690442614E-4	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9998820904230955	WITHOUT_CLASSIFICATION	1.1790957690442614E-4	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999780142926911	WITHOUT_CLASSIFICATION	2.198570730892617E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999969080161658	WITHOUT_CLASSIFICATION	3.0919838341713004E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.999882340653495	WITHOUT_CLASSIFICATION	1.1765934650506332E-4	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999907114930234	WITHOUT_CLASSIFICATION	9.288506976557979E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999907114930234	WITHOUT_CLASSIFICATION	9.288506976557979E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999907114930234	WITHOUT_CLASSIFICATION	9.288506976557979E-6	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9999585547730433	WITHOUT_CLASSIFICATION	4.1445226956739474E-5	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9999557432796349	WITHOUT_CLASSIFICATION	4.425672036520158E-5	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9999630767441736	WITHOUT_CLASSIFICATION	3.6923255826488817E-5	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9999634619465969	WITHOUT_CLASSIFICATION	3.653805340318052E-5	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9999614931778336	WITHOUT_CLASSIFICATION	3.850682216646244E-5	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.999959481572068	WITHOUT_CLASSIFICATION	4.051842793194636E-5	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9999608948068208	WITHOUT_CLASSIFICATION	3.9105193179051876E-5	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9999813145161912	WITHOUT_CLASSIFICATION	1.868548380876534E-5	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999987896393938	WITHOUT_CLASSIFICATION	1.2103606062089185E-6	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999958404784579	WITHOUT_CLASSIFICATION	4.159521542057428E-6	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999858407167324	WITHOUT_CLASSIFICATION	1.4159283267659672E-5	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999991010543893	WITHOUT_CLASSIFICATION	8.989456106794464E-7	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.999989010140354	WITHOUT_CLASSIFICATION	1.0989859645931709E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9970607654071338	WITHOUT_CLASSIFICATION	0.0029392345928661774	IMPLEMENTATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999985053075856	WITHOUT_CLASSIFICATION	1.49469241445655E-6	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999715233272716	WITHOUT_CLASSIFICATION	2.8476672728515787E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999918299750066	WITHOUT_CLASSIFICATION	8.170024993545995E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.99979683623926	WITHOUT_CLASSIFICATION	2.03163760740096E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.99979683623926	WITHOUT_CLASSIFICATION	2.03163760740096E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.99979683623926	WITHOUT_CLASSIFICATION	2.03163760740096E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.99979683623926	WITHOUT_CLASSIFICATION	2.03163760740096E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.99979683623926	WITHOUT_CLASSIFICATION	2.03163760740096E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9995147056620829	WITHOUT_CLASSIFICATION	4.8529433791705593E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.99979683623926	WITHOUT_CLASSIFICATION	2.03163760740096E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.99979683623926	WITHOUT_CLASSIFICATION	2.03163760740096E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.99979683623926	WITHOUT_CLASSIFICATION	2.03163760740096E-4	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999991659597659	WITHOUT_CLASSIFICATION	8.340402340844253E-7	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999942493965014	WITHOUT_CLASSIFICATION	5.750603498703737E-6	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999990080274023	WITHOUT_CLASSIFICATION	9.919725977977979E-7	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999893250233713	WITHOUT_CLASSIFICATION	1.067497662863162E-5	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999878862667492	WITHOUT_CLASSIFICATION	1.2113733250809231E-5	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999941072897204	WITHOUT_CLASSIFICATION	5.892710279617222E-6	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999952223306845	WITHOUT_CLASSIFICATION	4.777669315499428E-6	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9999556509640456	WITHOUT_CLASSIFICATION	4.434903595440247E-5	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999632955247924	WITHOUT_CLASSIFICATION	3.670447520759739E-5	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999632955247924	WITHOUT_CLASSIFICATION	3.670447520759739E-5	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9999563616553242	WITHOUT_CLASSIFICATION	4.3638344675673146E-5	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9999578962985712	WITHOUT_CLASSIFICATION	4.210370142871899E-5	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.99996119962719	WITHOUT_CLASSIFICATION	3.88003728100159E-5	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9999602100705185	WITHOUT_CLASSIFICATION	3.97899294814828E-5	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.999960385919194	WITHOUT_CLASSIFICATION	3.9614080806064596E-5	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9999555873464269	WITHOUT_CLASSIFICATION	4.441265357307125E-5	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9999581726077481	WITHOUT_CLASSIFICATION	4.1827392251961216E-5	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999559833167434	WITHOUT_CLASSIFICATION	4.401668325651387E-5	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999582446640285	WITHOUT_CLASSIFICATION	4.175533597151663E-5	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9999628086368414	WITHOUT_CLASSIFICATION	3.7191363158549744E-5	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9999615909292736	WITHOUT_CLASSIFICATION	3.8409070726449556E-5	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9999569377986971	WITHOUT_CLASSIFICATION	4.306220130296044E-5	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999621579320629	WITHOUT_CLASSIFICATION	3.7842067937131453E-5	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999571034456277	WITHOUT_CLASSIFICATION	4.2896554372202085E-5	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9999582953784881	WITHOUT_CLASSIFICATION	4.170462151175958E-5	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9999593102379474	WITHOUT_CLASSIFICATION	4.068976205260347E-5	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999586585949223	WITHOUT_CLASSIFICATION	4.134140507771807E-5	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9999638598706229	WITHOUT_CLASSIFICATION	3.614012937717339E-5	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9999611538073513	WITHOUT_CLASSIFICATION	3.8846192648710746E-5	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.9999591675912894	WITHOUT_CLASSIFICATION	4.083240871045995E-5	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9999613335421498	WITHOUT_CLASSIFICATION	3.8666457850158596E-5	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999586674041424	WITHOUT_CLASSIFICATION	4.1332595857564715E-5	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9999635770638506	WITHOUT_CLASSIFICATION	3.6422936149312235E-5	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9999678774036995	WITHOUT_CLASSIFICATION	3.212259630048433E-5	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9999638158121626	WITHOUT_CLASSIFICATION	3.61841878373829E-5	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999677597633956	WITHOUT_CLASSIFICATION	3.224023660454088E-5	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9999631087390862	WITHOUT_CLASSIFICATION	3.68912609138211E-5	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9999644308465822	WITHOUT_CLASSIFICATION	3.556915341786191E-5	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999646200481711	WITHOUT_CLASSIFICATION	3.53799518288763E-5	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999658413662705	WITHOUT_CLASSIFICATION	3.4158633729540464E-5	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999646646396086	WITHOUT_CLASSIFICATION	3.533536039128062E-5	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999662171011859	WITHOUT_CLASSIFICATION	3.378289881399707E-5	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9999617375908858	WITHOUT_CLASSIFICATION	3.826240911416192E-5	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9999630345222822	WITHOUT_CLASSIFICATION	3.696547771778836E-5	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9999654644899241	WITHOUT_CLASSIFICATION	3.453551007602007E-5	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999658816419457	WITHOUT_CLASSIFICATION	3.411835805426542E-5	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9999632874950704	WITHOUT_CLASSIFICATION	3.671250492956511E-5	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999612831903156	WITHOUT_CLASSIFICATION	3.871680968427567E-5	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.9999601080089691	WITHOUT_CLASSIFICATION	3.989199103083932E-5	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9999644522774781	WITHOUT_CLASSIFICATION	3.55477225218724E-5	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9999651759516468	WITHOUT_CLASSIFICATION	3.482404835319668E-5	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999664223969245	WITHOUT_CLASSIFICATION	3.3577603075476094E-5	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9999625164454006	WITHOUT_CLASSIFICATION	3.7483554599432324E-5	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9999643972462015	WITHOUT_CLASSIFICATION	3.560275379852245E-5	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9999643925038153	WITHOUT_CLASSIFICATION	3.560749618462659E-5	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999609514634955	WITHOUT_CLASSIFICATION	3.90485365045981E-5	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999575464442853	WITHOUT_CLASSIFICATION	4.245355571470691E-5	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9999618105914484	WITHOUT_CLASSIFICATION	3.8189408551664873E-5	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9999614289235509	WITHOUT_CLASSIFICATION	3.857107644904827E-5	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999643552675718	WITHOUT_CLASSIFICATION	3.564473242818155E-5	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9999631593092821	WITHOUT_CLASSIFICATION	3.6840690717976385E-5	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.999958698698072	WITHOUT_CLASSIFICATION	4.130130192798875E-5	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.9999602050342136	WITHOUT_CLASSIFICATION	3.9794965786512896E-5	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999659351814366	WITHOUT_CLASSIFICATION	3.406481856334641E-5	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999659351814366	WITHOUT_CLASSIFICATION	3.406481856334641E-5	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999610463799588	WITHOUT_CLASSIFICATION	3.895362004124586E-5	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9999632997803036	WITHOUT_CLASSIFICATION	3.670021969633099E-5	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9999625102092473	WITHOUT_CLASSIFICATION	3.7489790752616984E-5	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9999602441940801	WITHOUT_CLASSIFICATION	3.9755805919954085E-5	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9999618535093319	WITHOUT_CLASSIFICATION	3.814649066813891E-5	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999629289784372	WITHOUT_CLASSIFICATION	3.707102156290656E-5	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999605448509338	WITHOUT_CLASSIFICATION	3.945514906630298E-5	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.999959584918525	WITHOUT_CLASSIFICATION	4.041508147503184E-5	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999617130074288	WITHOUT_CLASSIFICATION	3.8286992571215736E-5	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9999602764973726	WITHOUT_CLASSIFICATION	3.97235026273915E-5	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9996690327959291	WITHOUT_CLASSIFICATION	3.3096720407087656E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9996690327959291	WITHOUT_CLASSIFICATION	3.3096720407087656E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999375693497563	WITHOUT_CLASSIFICATION	6.243065024369298E-5	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.999962968730542	WITHOUT_CLASSIFICATION	3.703126945796934E-5	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999980238268196	WITHOUT_CLASSIFICATION	1.9761731803520654E-6	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999975163506091	WITHOUT_CLASSIFICATION	2.4836493909697054E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999993192822791	WITHOUT_CLASSIFICATION	6.807177208914446E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999993192822791	WITHOUT_CLASSIFICATION	6.807177208914446E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999993192822791	WITHOUT_CLASSIFICATION	6.807177208914446E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999993192822791	WITHOUT_CLASSIFICATION	6.807177208914446E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999941614618614	WITHOUT_CLASSIFICATION	5.8385381385987635E-6	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999960438208485	WITHOUT_CLASSIFICATION	3.956179151430516E-6	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9999660159353903	WITHOUT_CLASSIFICATION	3.3984064609736044E-5	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9999638090835491	WITHOUT_CLASSIFICATION	3.619091645082534E-5	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.9999640024092173	WITHOUT_CLASSIFICATION	3.59975907827056E-5	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9999641040883415	WITHOUT_CLASSIFICATION	3.5895911658523223E-5	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9999600376321648	WITHOUT_CLASSIFICATION	3.996236783518675E-5	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9999570281531037	WITHOUT_CLASSIFICATION	4.297184689623067E-5	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9999626665193732	WITHOUT_CLASSIFICATION	3.7333480626865526E-5	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9999619176774902	WITHOUT_CLASSIFICATION	3.808232250983561E-5	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9999596380653384	WITHOUT_CLASSIFICATION	4.0361934661576436E-5	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9999575889571708	WITHOUT_CLASSIFICATION	4.241104282917577E-5	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9999611211751501	WITHOUT_CLASSIFICATION	3.8878824849936275E-5	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9999620734643386	WITHOUT_CLASSIFICATION	3.792653566146639E-5	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.999960252615571	WITHOUT_CLASSIFICATION	3.9747384428928934E-5	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9999633736073955	WITHOUT_CLASSIFICATION	3.662639260438553E-5	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9999578722506385	WITHOUT_CLASSIFICATION	4.212774936154579E-5	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9999615228452055	WITHOUT_CLASSIFICATION	3.847715479452555E-5	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9999609441736387	WITHOUT_CLASSIFICATION	3.9055826361290266E-5	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9999569405284188	WITHOUT_CLASSIFICATION	4.305947158128145E-5	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9999578103425287	WITHOUT_CLASSIFICATION	4.218965747130458E-5	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9999619170215137	WITHOUT_CLASSIFICATION	3.808297848624384E-5	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9999583820158673	WITHOUT_CLASSIFICATION	4.1617984132713424E-5	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9999589993187848	WITHOUT_CLASSIFICATION	4.100068121517665E-5	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9999613841318947	WITHOUT_CLASSIFICATION	3.86158681053176E-5	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9999631083770778	WITHOUT_CLASSIFICATION	3.68916229222055E-5	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9999642000318313	WITHOUT_CLASSIFICATION	3.5799968168757195E-5	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9999663630212725	WITHOUT_CLASSIFICATION	3.36369787275141E-5	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.999966520694726	WITHOUT_CLASSIFICATION	3.347930527395243E-5	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9999647066680861	WITHOUT_CLASSIFICATION	3.5293331913887145E-5	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9999624059175974	WITHOUT_CLASSIFICATION	3.759408240258882E-5	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9999641736055427	WITHOUT_CLASSIFICATION	3.582639445720915E-5	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.999962812455379	WITHOUT_CLASSIFICATION	3.718754462104853E-5	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9999585429947135	WITHOUT_CLASSIFICATION	4.145700528636283E-5	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9999604273069898	WITHOUT_CLASSIFICATION	3.9572693010184605E-5	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9999675067670606	WITHOUT_CLASSIFICATION	3.2493232939438994E-5	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9999651653972719	WITHOUT_CLASSIFICATION	3.483460272810341E-5	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9999656141443124	WITHOUT_CLASSIFICATION	3.438585568757201E-5	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9999630404664023	WITHOUT_CLASSIFICATION	3.695953359767823E-5	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9999636709993674	WITHOUT_CLASSIFICATION	3.6329000632569386E-5	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.999963350353122	WITHOUT_CLASSIFICATION	3.6649646877952965E-5	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.999964481105818	WITHOUT_CLASSIFICATION	3.551889418195444E-5	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9999582129670941	WITHOUT_CLASSIFICATION	4.1787032905907266E-5	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9999644746526345	WITHOUT_CLASSIFICATION	3.552534736550348E-5	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9999619602147367	WITHOUT_CLASSIFICATION	3.803978526335182E-5	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9999618172048418	WITHOUT_CLASSIFICATION	3.818279515814489E-5	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9999632531483474	WITHOUT_CLASSIFICATION	3.674685165254555E-5	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9999626835975935	WITHOUT_CLASSIFICATION	3.731640240653668E-5	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9999602130461491	WITHOUT_CLASSIFICATION	3.978695385092914E-5	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9999620349220029	WITHOUT_CLASSIFICATION	3.796507799724664E-5	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9999621541866193	WITHOUT_CLASSIFICATION	3.784581338073298E-5	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9999608847319409	WITHOUT_CLASSIFICATION	3.911526805902913E-5	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9999628590871519	WITHOUT_CLASSIFICATION	3.714091284811241E-5	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9999626422463344	WITHOUT_CLASSIFICATION	3.735775366566438E-5	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9999613292419751	WITHOUT_CLASSIFICATION	3.867075802484248E-5	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9999607525078237	WITHOUT_CLASSIFICATION	3.9247492176332484E-5	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.999964019353716	WITHOUT_CLASSIFICATION	3.598064628395533E-5	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9999635590917435	WITHOUT_CLASSIFICATION	3.644090825648836E-5	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9999637319762881	WITHOUT_CLASSIFICATION	3.626802371199763E-5	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.999968836086832	WITHOUT_CLASSIFICATION	3.116391316812005E-5	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999917203998634	WITHOUT_CLASSIFICATION	8.279600136531317E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999707526182828	WITHOUT_CLASSIFICATION	2.9247381717122978E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999707526182828	WITHOUT_CLASSIFICATION	2.9247381717122978E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999707526182828	WITHOUT_CLASSIFICATION	2.9247381717122978E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999707526182828	WITHOUT_CLASSIFICATION	2.9247381717122978E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999707526182828	WITHOUT_CLASSIFICATION	2.9247381717122978E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999707526182828	WITHOUT_CLASSIFICATION	2.9247381717122978E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999707526182828	WITHOUT_CLASSIFICATION	2.9247381717122978E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999870085422212	WITHOUT_CLASSIFICATION	1.299145777882739E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999870085422212	WITHOUT_CLASSIFICATION	1.299145777882739E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999870085422212	WITHOUT_CLASSIFICATION	1.299145777882739E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999870085422212	WITHOUT_CLASSIFICATION	1.299145777882739E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999986497593926	WITHOUT_CLASSIFICATION	1.3502406074785453E-6	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999986497593926	WITHOUT_CLASSIFICATION	1.3502406074785453E-6	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999999806272357	WITHOUT_CLASSIFICATION	1.937276427652084E-8	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999728056799954	WITHOUT_CLASSIFICATION	2.7194320004671884E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999728056799954	WITHOUT_CLASSIFICATION	2.7194320004671884E-5	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999972246846227	WITHOUT_CLASSIFICATION	2.775315377259298E-6	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.999994681004867	WITHOUT_CLASSIFICATION	5.318995133017116E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99999772409715	WITHOUT_CLASSIFICATION	2.2759028498942315E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99999772409715	WITHOUT_CLASSIFICATION	2.2759028498942315E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99999772409715	WITHOUT_CLASSIFICATION	2.2759028498942315E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99999772409715	WITHOUT_CLASSIFICATION	2.2759028498942315E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99999772409715	WITHOUT_CLASSIFICATION	2.2759028498942315E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99999772409715	WITHOUT_CLASSIFICATION	2.2759028498942315E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.99999772409715	WITHOUT_CLASSIFICATION	2.2759028498942315E-6	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999936145700995	WITHOUT_CLASSIFICATION	6.385429900518899E-6	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999950918076482	WITHOUT_CLASSIFICATION	4.908192351782729E-6	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.999873777326612	WITHOUT_CLASSIFICATION	1.2622267338802226E-4	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.999873777326612	WITHOUT_CLASSIFICATION	1.2622267338802226E-4	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999676545022387	WITHOUT_CLASSIFICATION	3.2345497761266385E-5	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999947384595974	WITHOUT_CLASSIFICATION	5.26154040259397E-6	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999947384595974	WITHOUT_CLASSIFICATION	5.26154040259397E-6	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999999519721817	WITHOUT_CLASSIFICATION	4.802781826473778E-8	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999779387110226	WITHOUT_CLASSIFICATION	2.2061288977335026E-5	IMPLEMENTATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999973359970786	WITHOUT_CLASSIFICATION	2.6640029213057587E-6	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999991508665313	WITHOUT_CLASSIFICATION	8.491334685843611E-7	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999948256360826	WITHOUT_CLASSIFICATION	5.17436391746038E-6	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999901768480777	WITHOUT_CLASSIFICATION	9.82315192229846E-6	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9998845933928648	WITHOUT_CLASSIFICATION	1.1540660713520942E-4	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999447557780933	WITHOUT_CLASSIFICATION	5.524422190663179E-5	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999267251627371	WITHOUT_CLASSIFICATION	7.32748372628396E-5	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9997317748311748	WITHOUT_CLASSIFICATION	2.682251688251225E-4	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999311562532844	WITHOUT_CLASSIFICATION	6.884374671564378E-5	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999996696103569	WITHOUT_CLASSIFICATION	3.3038964311543435E-7	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999995157757395	WITHOUT_CLASSIFICATION	4.842242604138435E-7	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.99998175932724	WITHOUT_CLASSIFICATION	1.8240672760073678E-5	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999986441364895	WITHOUT_CLASSIFICATION	1.355863510467353E-6	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999983614035547	WITHOUT_CLASSIFICATION	1.6385964453476534E-6	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999836059212202	WITHOUT_CLASSIFICATION	1.639407877989448E-5	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999926124786639	WITHOUT_CLASSIFICATION	7.387521336001378E-6	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9998501568228242	WITHOUT_CLASSIFICATION	1.498431771758426E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9998501568228242	WITHOUT_CLASSIFICATION	1.498431771758426E-4	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9998813535958875	WITHOUT_CLASSIFICATION	1.1864640411260285E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999961356621264	WITHOUT_CLASSIFICATION	3.864337873559628E-6	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9997691507199975	WITHOUT_CLASSIFICATION	2.30849280002533E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9996157736547904	WITHOUT_CLASSIFICATION	3.84226345209686E-4	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999292645117583	WITHOUT_CLASSIFICATION	7.073548824161305E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999292645117583	WITHOUT_CLASSIFICATION	7.073548824161305E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999292645117583	WITHOUT_CLASSIFICATION	7.073548824161305E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.99998492159893	WITHOUT_CLASSIFICATION	1.5078401069883917E-5	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999971018760123	WITHOUT_CLASSIFICATION	2.8981239876261963E-6	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999981149421989	WITHOUT_CLASSIFICATION	1.8850578010436153E-6	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999993305182389	WITHOUT_CLASSIFICATION	6.694817611061682E-7	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999971477565708	WITHOUT_CLASSIFICATION	2.852243429251249E-6	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999987358641228	WITHOUT_CLASSIFICATION	1.2641358772477043E-6	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.999997844694626	WITHOUT_CLASSIFICATION	2.155305373901817E-6	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999980291865043	WITHOUT_CLASSIFICATION	1.9708134956487546E-6	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999964761555664	WITHOUT_CLASSIFICATION	3.523844433646635E-6	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9998870602306359	WITHOUT_CLASSIFICATION	1.1293976936414358E-4	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9999842290272271	WITHOUT_CLASSIFICATION	1.5770972773000674E-5	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999575327935614	WITHOUT_CLASSIFICATION	4.246720643859936E-5	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9969536215091089	WITHOUT_CLASSIFICATION	0.0030463784908909735	IMPLEMENTATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999249297772476	WITHOUT_CLASSIFICATION	7.507022275242462E-5	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999020311433783	WITHOUT_CLASSIFICATION	9.796885662174437E-5	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999987259423504	WITHOUT_CLASSIFICATION	1.2740576496134723E-6	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999924687906042	WITHOUT_CLASSIFICATION	7.531209395751647E-6	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999972312384572	WITHOUT_CLASSIFICATION	2.7687615428956633E-6	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999413460961276	WITHOUT_CLASSIFICATION	5.865390387236375E-5	IMPLEMENTATION
