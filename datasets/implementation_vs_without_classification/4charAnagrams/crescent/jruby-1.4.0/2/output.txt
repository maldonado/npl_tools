// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.9521216160491522	WITHOUT_CLASSIFICATION	0.047878383950847744	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.7236621826200381	IMPLEMENTATION	0.2763378173799618	WITHOUT_CLASSIFICATION
// TODO: Someday, enable.	IMPLEMENTATION	0.8045608099855572	WITHOUT_CLASSIFICATION	0.19543919001444282	IMPLEMENTATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.9999404344530485	WITHOUT_CLASSIFICATION	5.956554695164411E-5	IMPLEMENTATION
// TODO: non-strict option	IMPLEMENTATION	0.8767139425714539	WITHOUT_CLASSIFICATION	0.1232860574285462	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.7241684455644629	WITHOUT_CLASSIFICATION	0.2758315544355371	IMPLEMENTATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.9999903804462491	WITHOUT_CLASSIFICATION	9.619553750793333E-6	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.7386541080133506	WITHOUT_CLASSIFICATION	0.2613458919866494	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.7386541080133506	WITHOUT_CLASSIFICATION	0.2613458919866494	IMPLEMENTATION
// TODO: pass this in?	IMPLEMENTATION	0.693464556115974	WITHOUT_CLASSIFICATION	0.30653544388402615	IMPLEMENTATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9997692962982333	WITHOUT_CLASSIFICATION	2.307037017668172E-4	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.810226323480004	IMPLEMENTATION	0.18977367651999597	WITHOUT_CLASSIFICATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.9904413080375323	WITHOUT_CLASSIFICATION	0.009558691962467785	IMPLEMENTATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.977634542613739	WITHOUT_CLASSIFICATION	0.022365457386260952	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.9958624184928629	WITHOUT_CLASSIFICATION	0.004137581507137093	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9999882000681976	WITHOUT_CLASSIFICATION	1.1799931802427223E-5	IMPLEMENTATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.999970426981605	WITHOUT_CLASSIFICATION	2.957301839491303E-5	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.6908543281934209	WITHOUT_CLASSIFICATION	0.3091456718065793	IMPLEMENTATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.9997786787497983	WITHOUT_CLASSIFICATION	2.2132125020167193E-4	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.8209122466987125	WITHOUT_CLASSIFICATION	0.1790877533012875	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.9822533947162442	WITHOUT_CLASSIFICATION	0.0177466052837558	IMPLEMENTATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.998773742007707	WITHOUT_CLASSIFICATION	0.0012262579922929415	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.6937900144221192	WITHOUT_CLASSIFICATION	0.30620998557788087	IMPLEMENTATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.9952012284275648	WITHOUT_CLASSIFICATION	0.00479877157243524	IMPLEMENTATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.9796178018189268	WITHOUT_CLASSIFICATION	0.020382198181073216	IMPLEMENTATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.8000620747029288	WITHOUT_CLASSIFICATION	0.19993792529707122	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.8783659054447152	IMPLEMENTATION	0.1216340945552848	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9174659074161832	WITHOUT_CLASSIFICATION	0.08253409258381682	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.8783659054447152	IMPLEMENTATION	0.1216340945552848	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9174659074161832	WITHOUT_CLASSIFICATION	0.08253409258381682	IMPLEMENTATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.9058386146701503	IMPLEMENTATION	0.0941613853298497	WITHOUT_CLASSIFICATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.9548445014987205	WITHOUT_CLASSIFICATION	0.045155498501279534	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.5509201796148296	WITHOUT_CLASSIFICATION	0.4490798203851703	IMPLEMENTATION
// TODO: make threadsafe	IMPLEMENTATION	0.8442829389830968	WITHOUT_CLASSIFICATION	0.15571706101690314	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9874095777917903	WITHOUT_CLASSIFICATION	0.012590422208209787	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9874095777917903	WITHOUT_CLASSIFICATION	0.012590422208209787	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.9999956837286132	WITHOUT_CLASSIFICATION	4.3162713867048015E-6	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.9997812247865557	WITHOUT_CLASSIFICATION	2.1877521344433246E-4	IMPLEMENTATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.5126634378188166	WITHOUT_CLASSIFICATION	0.4873365621811834	IMPLEMENTATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.5878006293319996	IMPLEMENTATION	0.4121993706680004	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.7915687194969199	IMPLEMENTATION	0.20843128050308016	WITHOUT_CLASSIFICATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.5772716742015934	WITHOUT_CLASSIFICATION	0.4227283257984066	IMPLEMENTATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.9978979564580582	WITHOUT_CLASSIFICATION	0.0021020435419418495	IMPLEMENTATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.9999985495934399	WITHOUT_CLASSIFICATION	1.450406560131519E-6	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.9931770918622774	WITHOUT_CLASSIFICATION	0.006822908137722581	IMPLEMENTATION
// TODO: add trace call?	IMPLEMENTATION	0.5152357097898621	IMPLEMENTATION	0.4847642902101378	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9999007117362853	WITHOUT_CLASSIFICATION	9.928826371479694E-5	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.99998444982403	WITHOUT_CLASSIFICATION	1.5550175970045954E-5	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.9998787342522863	WITHOUT_CLASSIFICATION	1.2126574771359861E-4	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.9943340355525297	WITHOUT_CLASSIFICATION	0.005665964447470235	IMPLEMENTATION
// FIXME: missing arity check	IMPLEMENTATION	0.9999007117362853	WITHOUT_CLASSIFICATION	9.928826371479694E-5	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.9999562077774102	WITHOUT_CLASSIFICATION	4.3792222589710136E-5	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.9999547316468724	WITHOUT_CLASSIFICATION	4.526835312745911E-5	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.7280303723504212	WITHOUT_CLASSIFICATION	0.2719696276495787	IMPLEMENTATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.9992538677631183	WITHOUT_CLASSIFICATION	7.461322368817306E-4	IMPLEMENTATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.9997382751152969	WITHOUT_CLASSIFICATION	2.6172488470317586E-4	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.9999817746422903	WITHOUT_CLASSIFICATION	1.8225357709725775E-5	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.9996970169975155	WITHOUT_CLASSIFICATION	3.029830024845802E-4	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9999458052884294	WITHOUT_CLASSIFICATION	5.419471157054155E-5	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9999343997833955	WITHOUT_CLASSIFICATION	6.560021660448506E-5	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.9999731090082847	WITHOUT_CLASSIFICATION	2.689099171530306E-5	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.5902447443313075	WITHOUT_CLASSIFICATION	0.40975525566869253	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.5902447443313075	WITHOUT_CLASSIFICATION	0.40975525566869253	IMPLEMENTATION
// TODO: validate port as numeric	IMPLEMENTATION	0.8879364661247093	WITHOUT_CLASSIFICATION	0.11206353387529074	IMPLEMENTATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9970215827521004	IMPLEMENTATION	0.0029784172478995474	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.9834932671122542	WITHOUT_CLASSIFICATION	0.016506732887745856	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.962224734279386	WITHOUT_CLASSIFICATION	0.037775265720613925	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.962224734279386	WITHOUT_CLASSIFICATION	0.037775265720613925	IMPLEMENTATION
// TODO: other reserved names?	IMPLEMENTATION	0.8261661033839953	WITHOUT_CLASSIFICATION	0.1738338966160047	IMPLEMENTATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.9918583732342157	WITHOUT_CLASSIFICATION	0.008141626765784222	IMPLEMENTATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.5310113989893985	IMPLEMENTATION	0.46898860101060147	WITHOUT_CLASSIFICATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.9992777889264715	WITHOUT_CLASSIFICATION	7.222110735284629E-4	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.978386841249973	WITHOUT_CLASSIFICATION	0.021613158750027013	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.978386841249973	WITHOUT_CLASSIFICATION	0.021613158750027013	IMPLEMENTATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.8464698941211386	IMPLEMENTATION	0.15353010587886143	WITHOUT_CLASSIFICATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9548111872224461	WITHOUT_CLASSIFICATION	0.045188812777553974	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9991726935898485	WITHOUT_CLASSIFICATION	8.273064101514284E-4	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.7235719739863238	WITHOUT_CLASSIFICATION	0.27642802601367633	IMPLEMENTATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.8834598624128175	WITHOUT_CLASSIFICATION	0.11654013758718254	IMPLEMENTATION
// FIXME: \r logic needed	IMPLEMENTATION	0.9999570956455427	WITHOUT_CLASSIFICATION	4.290435445726761E-5	IMPLEMENTATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.9697112615609663	WITHOUT_CLASSIFICATION	0.03028873843903372	IMPLEMENTATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.9999989474012649	WITHOUT_CLASSIFICATION	1.052598735078792E-6	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9997515611418191	WITHOUT_CLASSIFICATION	2.4843885818102025E-4	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9997515611418191	WITHOUT_CLASSIFICATION	2.4843885818102025E-4	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.9999393507160355	WITHOUT_CLASSIFICATION	6.064928396457472E-5	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.9999037753947918	WITHOUT_CLASSIFICATION	9.622460520818197E-5	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9999649833327308	WITHOUT_CLASSIFICATION	3.501666726919974E-5	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9999649833327308	WITHOUT_CLASSIFICATION	3.501666726919974E-5	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.9760114184719433	WITHOUT_CLASSIFICATION	0.023988581528056763	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9999591883293564	WITHOUT_CLASSIFICATION	4.081167064366036E-5	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9999591883293564	WITHOUT_CLASSIFICATION	4.081167064366036E-5	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9999591883293564	WITHOUT_CLASSIFICATION	4.081167064366036E-5	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.9714780383444847	IMPLEMENTATION	0.028521961655515328	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.9714780383444847	IMPLEMENTATION	0.028521961655515328	WITHOUT_CLASSIFICATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.6637632265778427	WITHOUT_CLASSIFICATION	0.33623677342215724	IMPLEMENTATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9998827351545089	WITHOUT_CLASSIFICATION	1.1726484549105341E-4	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.9999750269060187	WITHOUT_CLASSIFICATION	2.4973093981284878E-5	IMPLEMENTATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.997013967023191	IMPLEMENTATION	0.002986032976809055	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9547984154435629	IMPLEMENTATION	0.045201584556437004	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9547984154435629	IMPLEMENTATION	0.045201584556437004	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9547984154435629	IMPLEMENTATION	0.045201584556437004	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.7915687194969199	IMPLEMENTATION	0.20843128050308016	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.7915687194969199	IMPLEMENTATION	0.20843128050308016	WITHOUT_CLASSIFICATION
// TODO: check for ascii string	IMPLEMENTATION	0.6155625097967915	IMPLEMENTATION	0.38443749020320855	WITHOUT_CLASSIFICATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.8021670856746218	WITHOUT_CLASSIFICATION	0.19783291432537828	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9874095777917903	WITHOUT_CLASSIFICATION	0.012590422208209787	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9874095777917903	WITHOUT_CLASSIFICATION	0.012590422208209787	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.616378278658336	WITHOUT_CLASSIFICATION	0.38362172134166383	IMPLEMENTATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.9936475277644734	WITHOUT_CLASSIFICATION	0.006352472235526657	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9999882000681976	WITHOUT_CLASSIFICATION	1.1799931802427223E-5	IMPLEMENTATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9999932627554865	WITHOUT_CLASSIFICATION	6.737244513578629E-6	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.541239537881635	WITHOUT_CLASSIFICATION	0.4587604621183649	IMPLEMENTATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.9584098290177097	WITHOUT_CLASSIFICATION	0.04159017098229034	IMPLEMENTATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.9992624946141677	WITHOUT_CLASSIFICATION	7.375053858322756E-4	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999487182388191	WITHOUT_CLASSIFICATION	5.128176118098089E-5	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9999875035901129	WITHOUT_CLASSIFICATION	1.2496409887139433E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999081362918428	WITHOUT_CLASSIFICATION	9.186370815717777E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999081362918428	WITHOUT_CLASSIFICATION	9.186370815717777E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998307049542727	WITHOUT_CLASSIFICATION	1.6929504572722853E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998307049542727	WITHOUT_CLASSIFICATION	1.6929504572722853E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998500308193066	WITHOUT_CLASSIFICATION	1.499691806933989E-4	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999995688034248	WITHOUT_CLASSIFICATION	4.311965752420734E-7	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9999880454889974	WITHOUT_CLASSIFICATION	1.1954511002477646E-5	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999880636244975	WITHOUT_CLASSIFICATION	1.1936375502456222E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999686825572566	WITHOUT_CLASSIFICATION	3.131744274342301E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999686825572566	WITHOUT_CLASSIFICATION	3.131744274342301E-5	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9999893677201311	WITHOUT_CLASSIFICATION	1.0632279868979233E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999616820217191	WITHOUT_CLASSIFICATION	3.831797828093192E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999616820217191	WITHOUT_CLASSIFICATION	3.831797828093192E-5	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9998730088542959	WITHOUT_CLASSIFICATION	1.2699114570419157E-4	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999135253628499	WITHOUT_CLASSIFICATION	8.647463715010271E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999085338219784	WITHOUT_CLASSIFICATION	9.146617802150717E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999085338219784	WITHOUT_CLASSIFICATION	9.146617802150717E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999085338219784	WITHOUT_CLASSIFICATION	9.146617802150717E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999085338219784	WITHOUT_CLASSIFICATION	9.146617802150717E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999085338219784	WITHOUT_CLASSIFICATION	9.146617802150717E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999085338219784	WITHOUT_CLASSIFICATION	9.146617802150717E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999085338219784	WITHOUT_CLASSIFICATION	9.146617802150717E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998369376793714	WITHOUT_CLASSIFICATION	1.6306232062852748E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998369376793714	WITHOUT_CLASSIFICATION	1.6306232062852748E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998369376793714	WITHOUT_CLASSIFICATION	1.6306232062852748E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998369376793714	WITHOUT_CLASSIFICATION	1.6306232062852748E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998369376793714	WITHOUT_CLASSIFICATION	1.6306232062852748E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998369376793714	WITHOUT_CLASSIFICATION	1.6306232062852748E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998369376793714	WITHOUT_CLASSIFICATION	1.6306232062852748E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998545137635385	WITHOUT_CLASSIFICATION	1.4548623646148278E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998545137635385	WITHOUT_CLASSIFICATION	1.4548623646148278E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998545137635385	WITHOUT_CLASSIFICATION	1.4548623646148278E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998545137635385	WITHOUT_CLASSIFICATION	1.4548623646148278E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998545137635385	WITHOUT_CLASSIFICATION	1.4548623646148278E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998545137635385	WITHOUT_CLASSIFICATION	1.4548623646148278E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999698356858409	WITHOUT_CLASSIFICATION	3.0164314159132656E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999698356858409	WITHOUT_CLASSIFICATION	3.0164314159132656E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999698356858409	WITHOUT_CLASSIFICATION	3.0164314159132656E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999698356858409	WITHOUT_CLASSIFICATION	3.0164314159132656E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999698356858409	WITHOUT_CLASSIFICATION	3.0164314159132656E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999698356858409	WITHOUT_CLASSIFICATION	3.0164314159132656E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999630929050556	WITHOUT_CLASSIFICATION	3.690709494452881E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999630929050556	WITHOUT_CLASSIFICATION	3.690709494452881E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999630929050556	WITHOUT_CLASSIFICATION	3.690709494452881E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999630929050556	WITHOUT_CLASSIFICATION	3.690709494452881E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999630929050556	WITHOUT_CLASSIFICATION	3.690709494452881E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999630929050556	WITHOUT_CLASSIFICATION	3.690709494452881E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999630929050556	WITHOUT_CLASSIFICATION	3.690709494452881E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999667869065701	WITHOUT_CLASSIFICATION	3.3213093429894845E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999667869065701	WITHOUT_CLASSIFICATION	3.3213093429894845E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999667869065701	WITHOUT_CLASSIFICATION	3.3213093429894845E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999667869065701	WITHOUT_CLASSIFICATION	3.3213093429894845E-5	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999177777007446	WITHOUT_CLASSIFICATION	8.222229925528962E-5	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999177777007446	WITHOUT_CLASSIFICATION	8.222229925528962E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999729369221375	WITHOUT_CLASSIFICATION	2.7063077862609692E-5	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9999948154481427	WITHOUT_CLASSIFICATION	5.184551857274302E-6	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9999353912528341	WITHOUT_CLASSIFICATION	6.460874716584019E-5	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999989806318293	WITHOUT_CLASSIFICATION	1.0193681706378271E-6	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999908716685986	WITHOUT_CLASSIFICATION	9.128331401421645E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999892190033137	WITHOUT_CLASSIFICATION	1.078099668627679E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999892190033137	WITHOUT_CLASSIFICATION	1.078099668627679E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999892190033137	WITHOUT_CLASSIFICATION	1.078099668627679E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999892190033137	WITHOUT_CLASSIFICATION	1.078099668627679E-5	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999978921534285	WITHOUT_CLASSIFICATION	2.1078465715457137E-6	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999896843734319	WITHOUT_CLASSIFICATION	1.0315626568194085E-5	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999745575810287	WITHOUT_CLASSIFICATION	2.5442418971252018E-5	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999907891889009	WITHOUT_CLASSIFICATION	9.21081109911883E-6	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.999896052615782	WITHOUT_CLASSIFICATION	1.039473842180216E-4	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999996202317577	WITHOUT_CLASSIFICATION	3.797682421954254E-7	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999934505950387	WITHOUT_CLASSIFICATION	6.549404961280552E-6	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.999998226823455	WITHOUT_CLASSIFICATION	1.7731765449730486E-6	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999997223484156	WITHOUT_CLASSIFICATION	2.7765158434757915E-7	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.999996531463889	WITHOUT_CLASSIFICATION	3.4685361109583854E-6	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.999996690263015	WITHOUT_CLASSIFICATION	3.3097369850294273E-6	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999965839703374	WITHOUT_CLASSIFICATION	3.4160296626442005E-6	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999905030781437	WITHOUT_CLASSIFICATION	9.49692185622535E-6	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999919031671969	WITHOUT_CLASSIFICATION	8.096832803185742E-6	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999905596593897	WITHOUT_CLASSIFICATION	9.440340610362815E-6	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999945787542839	WITHOUT_CLASSIFICATION	5.421245716097971E-6	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999997993139069	WITHOUT_CLASSIFICATION	2.0068609313545155E-7	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999892190033137	WITHOUT_CLASSIFICATION	1.078099668627679E-5	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999946464402516	WITHOUT_CLASSIFICATION	5.353559748375948E-6	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.999999056205949	WITHOUT_CLASSIFICATION	9.437940510289781E-7	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999960829478655	WITHOUT_CLASSIFICATION	3.91705213448181E-6	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999763499274491	WITHOUT_CLASSIFICATION	2.365007255087789E-5	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.999997781929739	WITHOUT_CLASSIFICATION	2.218070260989136E-6	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999915698398313	WITHOUT_CLASSIFICATION	8.430160168716352E-6	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999245465171313	WITHOUT_CLASSIFICATION	7.545348286871486E-5	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999902777806978	WITHOUT_CLASSIFICATION	9.722219302202282E-6	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999419566360269	WITHOUT_CLASSIFICATION	5.8043363973115224E-5	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999992640784365	WITHOUT_CLASSIFICATION	7.359215634533501E-7	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.999998167610712	WITHOUT_CLASSIFICATION	1.8323892879426293E-6	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999587704122556	WITHOUT_CLASSIFICATION	4.12295877444534E-5	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999418560048168	WITHOUT_CLASSIFICATION	5.814399518333234E-5	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999869647693319	WITHOUT_CLASSIFICATION	1.3035230668115024E-5	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999696622374118	WITHOUT_CLASSIFICATION	3.0337762588165732E-5	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999837608119708	WITHOUT_CLASSIFICATION	1.6239188029175832E-5	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9999867462226668	WITHOUT_CLASSIFICATION	1.325377733326717E-5	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999982791067	WITHOUT_CLASSIFICATION	1.720893300009109E-6	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999936275372118	WITHOUT_CLASSIFICATION	6.3724627882763755E-6	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999987994503965	WITHOUT_CLASSIFICATION	1.2005496034715318E-6	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999993850067129	WITHOUT_CLASSIFICATION	6.149932870039233E-7	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999570215156541	WITHOUT_CLASSIFICATION	4.297848434581095E-5	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.999995652618345	WITHOUT_CLASSIFICATION	4.347381655058932E-6	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9998764500790677	WITHOUT_CLASSIFICATION	1.2354992093237477E-4	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999918952692233	WITHOUT_CLASSIFICATION	8.104730776676665E-6	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9997327551331487	WITHOUT_CLASSIFICATION	2.672448668513114E-4	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999907074755927	WITHOUT_CLASSIFICATION	9.292524407299162E-6	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999991642564937	WITHOUT_CLASSIFICATION	8.357435062332664E-7	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999995526500979	WITHOUT_CLASSIFICATION	4.4734990203479803E-7	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999988808989206	WITHOUT_CLASSIFICATION	1.119101079422765E-6	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999382712238666	WITHOUT_CLASSIFICATION	6.172877613336923E-5	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999890347749291	WITHOUT_CLASSIFICATION	1.0965225070865268E-5	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.999993497703181	WITHOUT_CLASSIFICATION	6.502296819007122E-6	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.999992604357474	WITHOUT_CLASSIFICATION	7.395642525966562E-6	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.99999576210945	WITHOUT_CLASSIFICATION	4.237890549990993E-6	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999870481767583	WITHOUT_CLASSIFICATION	1.2951823241621916E-5	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999990943490744	WITHOUT_CLASSIFICATION	9.056509255892599E-7	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999988189512357	WITHOUT_CLASSIFICATION	1.1810487643857698E-6	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999997151218413	WITHOUT_CLASSIFICATION	2.848781587231136E-7	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999928802195021	WITHOUT_CLASSIFICATION	7.119780497873935E-6	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999993579178935	WITHOUT_CLASSIFICATION	6.420821065118433E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999851908403494	WITHOUT_CLASSIFICATION	1.4809159650539513E-5	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999869672179755	WITHOUT_CLASSIFICATION	1.3032782024522855E-5	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.999899214983844	WITHOUT_CLASSIFICATION	1.0078501615602937E-4	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.999899214983844	WITHOUT_CLASSIFICATION	1.0078501615602937E-4	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9997202024688986	WITHOUT_CLASSIFICATION	2.7979753110133384E-4	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999998917478837	WITHOUT_CLASSIFICATION	1.0825211629369856E-7	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999821113040033	WITHOUT_CLASSIFICATION	1.7888695996640887E-5	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999824420345117	WITHOUT_CLASSIFICATION	1.755796548829296E-5	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999990756299335	WITHOUT_CLASSIFICATION	9.24370066637497E-7	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999950813988362	WITHOUT_CLASSIFICATION	4.918601163792051E-6	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9998541533963449	WITHOUT_CLASSIFICATION	1.458466036551072E-4	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9998830603559048	WITHOUT_CLASSIFICATION	1.1693964409516139E-4	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999851908403494	WITHOUT_CLASSIFICATION	1.4809159650539513E-5	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999916134795656	WITHOUT_CLASSIFICATION	8.386520434439307E-6	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999771976261361	WITHOUT_CLASSIFICATION	2.2802373863765527E-5	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999984831986007	WITHOUT_CLASSIFICATION	1.5168013992696673E-6	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.999999609101297	WITHOUT_CLASSIFICATION	3.9089870297795723E-7	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999969693589124	WITHOUT_CLASSIFICATION	3.030641087710986E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999927694466	WITHOUT_CLASSIFICATION	7.230553400075211E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999927694466	WITHOUT_CLASSIFICATION	7.230553400075211E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999927694466	WITHOUT_CLASSIFICATION	7.230553400075211E-6	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999899298659932	WITHOUT_CLASSIFICATION	1.0070134006776714E-5	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999974021808091	WITHOUT_CLASSIFICATION	2.5978191908484736E-6	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999974971129687	WITHOUT_CLASSIFICATION	2.5028870313588886E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999995222436642	WITHOUT_CLASSIFICATION	4.777563358425925E-7	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999984073312908	WITHOUT_CLASSIFICATION	1.5926687092434569E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999955455182907	WITHOUT_CLASSIFICATION	4.454481709361012E-6	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999985691647357	WITHOUT_CLASSIFICATION	1.4308352642292776E-6	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999961266977595	WITHOUT_CLASSIFICATION	3.8733022405250566E-6	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999827964700837	WITHOUT_CLASSIFICATION	1.7203529916332712E-5	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999827964700837	WITHOUT_CLASSIFICATION	1.7203529916332712E-5	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999808212047152	WITHOUT_CLASSIFICATION	1.9178795284827388E-5	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999894696354243	WITHOUT_CLASSIFICATION	1.0530364575627274E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999701607509661	WITHOUT_CLASSIFICATION	2.9839249033861895E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999701607509661	WITHOUT_CLASSIFICATION	2.9839249033861895E-5	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999945493789456	WITHOUT_CLASSIFICATION	5.450621054422038E-6	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999835819040416	WITHOUT_CLASSIFICATION	1.6418095958395023E-5	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999936039405167	WITHOUT_CLASSIFICATION	6.396059483273447E-6	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999823325308085	WITHOUT_CLASSIFICATION	1.766746919145213E-5	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999869923114102	WITHOUT_CLASSIFICATION	1.3007688589835982E-5	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.9999943186583109	WITHOUT_CLASSIFICATION	5.68134168920045E-6	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999629057919186	WITHOUT_CLASSIFICATION	3.709420808136379E-5	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9999632898891967	WITHOUT_CLASSIFICATION	3.6710110803350245E-5	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9999968720387132	WITHOUT_CLASSIFICATION	3.1279612867972608E-6	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999977510439345	WITHOUT_CLASSIFICATION	2.248956065423207E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999851908403494	WITHOUT_CLASSIFICATION	1.4809159650539513E-5	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999732660354577	WITHOUT_CLASSIFICATION	2.673396454231259E-5	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999890033169689	WITHOUT_CLASSIFICATION	1.0996683031031392E-5	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999824831841346	WITHOUT_CLASSIFICATION	1.7516815865405315E-5	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999995779309104	WITHOUT_CLASSIFICATION	4.2206908951819093E-7	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999994444623538	WITHOUT_CLASSIFICATION	5.555376461935017E-7	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999947841322336	WITHOUT_CLASSIFICATION	5.215867766441216E-6	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999914319744113	WITHOUT_CLASSIFICATION	8.568025588611354E-6	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999876424689882	WITHOUT_CLASSIFICATION	1.2357531011923825E-5	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999926610240935	WITHOUT_CLASSIFICATION	7.338975906626607E-6	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.999996152255403	WITHOUT_CLASSIFICATION	3.847744596975429E-6	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999974250587579	WITHOUT_CLASSIFICATION	2.574941242045774E-6	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999995386898253	WITHOUT_CLASSIFICATION	4.613101746500183E-7	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999989163941329	WITHOUT_CLASSIFICATION	1.08360586709461E-6	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.999978720199467	WITHOUT_CLASSIFICATION	2.127980053300799E-5	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999887389319326	WITHOUT_CLASSIFICATION	1.126106806739074E-5	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9999423971717578	WITHOUT_CLASSIFICATION	5.760282824232599E-5	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999567018215129	WITHOUT_CLASSIFICATION	4.329817848718036E-5	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9999965807140498	WITHOUT_CLASSIFICATION	3.4192859501832184E-6	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999822250209591	WITHOUT_CLASSIFICATION	1.7774979040798156E-5	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999777110408011	WITHOUT_CLASSIFICATION	2.2288959198860162E-5	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999927517446155	WITHOUT_CLASSIFICATION	7.2482553844602875E-6	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999930447448732	WITHOUT_CLASSIFICATION	6.955255126871822E-6	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999954553048289	WITHOUT_CLASSIFICATION	4.544695171046804E-6	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999985804543843	WITHOUT_CLASSIFICATION	1.4195456156296245E-6	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999959335231399	WITHOUT_CLASSIFICATION	4.066476860081044E-6	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999993679504804	WITHOUT_CLASSIFICATION	6.320495195989293E-7	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999987344228035	WITHOUT_CLASSIFICATION	1.2655771965638138E-6	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.999997117820801	WITHOUT_CLASSIFICATION	2.882179198981564E-6	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999997398089563	WITHOUT_CLASSIFICATION	2.6019104373530303E-7	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999953081878803	WITHOUT_CLASSIFICATION	4.691812119758194E-6	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.999998357677308	WITHOUT_CLASSIFICATION	1.6423226919993155E-6	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9999933261869483	WITHOUT_CLASSIFICATION	6.673813051801926E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999680145408721	WITHOUT_CLASSIFICATION	3.198545912780212E-5	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999957761229564	WITHOUT_CLASSIFICATION	4.223877043660365E-6	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999841570463232	WITHOUT_CLASSIFICATION	1.584295367683586E-5	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999778068647199	WITHOUT_CLASSIFICATION	2.219313527995225E-5	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999885524589968	WITHOUT_CLASSIFICATION	1.1447541003251428E-5	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.999982196408132	WITHOUT_CLASSIFICATION	1.7803591867998482E-5	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999977862739639	WITHOUT_CLASSIFICATION	2.2137260360968464E-6	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999980420706651	WITHOUT_CLASSIFICATION	1.9579293348897935E-6	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999927051837939	WITHOUT_CLASSIFICATION	7.2948162060256005E-6	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9999970075372829	WITHOUT_CLASSIFICATION	2.9924627170627443E-6	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999595079473798	WITHOUT_CLASSIFICATION	4.0492052620210385E-5	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.999718573519194	WITHOUT_CLASSIFICATION	2.8142648080601494E-4	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9999929482112058	WITHOUT_CLASSIFICATION	7.051788794123788E-6	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9999680305606032	WITHOUT_CLASSIFICATION	3.196943939676463E-5	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9999844457777428	WITHOUT_CLASSIFICATION	1.555422225716022E-5	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999980336603693	WITHOUT_CLASSIFICATION	1.9663396307233197E-6	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999948248515768	WITHOUT_CLASSIFICATION	5.175148423270116E-6	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999868950517303	WITHOUT_CLASSIFICATION	1.31049482697509E-5	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999968429370825	WITHOUT_CLASSIFICATION	3.157062917597839E-6	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.999984582104694	WITHOUT_CLASSIFICATION	1.541789530606572E-5	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9998899024661951	WITHOUT_CLASSIFICATION	1.1009753380481659E-4	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999962087925603	WITHOUT_CLASSIFICATION	3.7912074396534476E-6	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999986162140475	WITHOUT_CLASSIFICATION	1.3837859525901698E-6	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999932156097516	WITHOUT_CLASSIFICATION	6.784390248321725E-6	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9997670497902333	WITHOUT_CLASSIFICATION	2.329502097667321E-4	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999997362752229	WITHOUT_CLASSIFICATION	2.637247770679362E-7	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999984901621058	WITHOUT_CLASSIFICATION	1.5098378941359856E-6	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9999754931337909	WITHOUT_CLASSIFICATION	2.450686620904165E-5	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999405011880522	WITHOUT_CLASSIFICATION	5.949881194772347E-5	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999405011880522	WITHOUT_CLASSIFICATION	5.949881194772347E-5	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999809275215121	WITHOUT_CLASSIFICATION	1.9072478487782192E-5	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999809275215121	WITHOUT_CLASSIFICATION	1.9072478487782192E-5	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999385513123596	WITHOUT_CLASSIFICATION	6.14486876403389E-5	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999385513123596	WITHOUT_CLASSIFICATION	6.14486876403389E-5	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9998954740787892	WITHOUT_CLASSIFICATION	1.0452592121072572E-4	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9998954740787892	WITHOUT_CLASSIFICATION	1.0452592121072572E-4	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9999724085268294	WITHOUT_CLASSIFICATION	2.759147317051818E-5	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9998887628077325	WITHOUT_CLASSIFICATION	1.1123719226739694E-4	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999913439002163	WITHOUT_CLASSIFICATION	8.656099783720698E-6	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999944535810044	WITHOUT_CLASSIFICATION	5.5464189956524216E-6	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999972121702889	WITHOUT_CLASSIFICATION	2.7878297110428977E-6	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999978630544261	WITHOUT_CLASSIFICATION	2.1369455739398558E-6	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9998578223000185	WITHOUT_CLASSIFICATION	1.4217769998154598E-4	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999942820504341	WITHOUT_CLASSIFICATION	5.717949565986731E-6	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999584211540076	WITHOUT_CLASSIFICATION	4.157884599245471E-5	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999863910411687	WITHOUT_CLASSIFICATION	1.3608958831269515E-5	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999537942478612	WITHOUT_CLASSIFICATION	4.6205752138685585E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999866999652872	WITHOUT_CLASSIFICATION	1.3300034712631918E-5	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999901271003173	WITHOUT_CLASSIFICATION	9.872899682575894E-6	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999740761641898	WITHOUT_CLASSIFICATION	2.592383581026556E-5	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999916799349101	WITHOUT_CLASSIFICATION	8.32006508986448E-6	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999819096203384	WITHOUT_CLASSIFICATION	1.8090379661543914E-5	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999998488481171	WITHOUT_CLASSIFICATION	1.5115188281186133E-7	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999987522418127	WITHOUT_CLASSIFICATION	1.2477581873339946E-6	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999844765713315	WITHOUT_CLASSIFICATION	1.5523428668518847E-5	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9994490881239348	WITHOUT_CLASSIFICATION	5.509118760650736E-4	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999881886222989	WITHOUT_CLASSIFICATION	1.1811377701082152E-5	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999924250687408	WITHOUT_CLASSIFICATION	7.574931259263223E-6	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999857503895917	WITHOUT_CLASSIFICATION	1.4249610408275605E-5	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.999988120099362	WITHOUT_CLASSIFICATION	1.1879900638082961E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999268718262647	WITHOUT_CLASSIFICATION	7.312817373523577E-5	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999598962797768	WITHOUT_CLASSIFICATION	4.010372022312994E-5	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999938425748985	WITHOUT_CLASSIFICATION	6.157425101474966E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.99983686188354	WITHOUT_CLASSIFICATION	1.6313811646000536E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.99983686188354	WITHOUT_CLASSIFICATION	1.6313811646000536E-4	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999956055623236	WITHOUT_CLASSIFICATION	4.394437676385825E-6	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.999977795091015	WITHOUT_CLASSIFICATION	2.220490898493516E-5	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.999967960348177	WITHOUT_CLASSIFICATION	3.20396518228982E-5	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999946722037372	WITHOUT_CLASSIFICATION	5.327796262783155E-6	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999821443311329	WITHOUT_CLASSIFICATION	1.7855668867145343E-5	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999866208674186	WITHOUT_CLASSIFICATION	1.3379132581472512E-5	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999600512990907	WITHOUT_CLASSIFICATION	3.994870090924716E-5	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999600512990907	WITHOUT_CLASSIFICATION	3.994870090924716E-5	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999953058107863	WITHOUT_CLASSIFICATION	4.694189213745676E-6	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9418539240053443	WITHOUT_CLASSIFICATION	0.058146075994655766	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999679666018279	WITHOUT_CLASSIFICATION	3.203339817209469E-5	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999679666018279	WITHOUT_CLASSIFICATION	3.203339817209469E-5	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.999815912402665	WITHOUT_CLASSIFICATION	1.8408759733506475E-4	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999986352645537	WITHOUT_CLASSIFICATION	1.3647354463139423E-6	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999986352645537	WITHOUT_CLASSIFICATION	1.3647354463139423E-6	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999790195507571	WITHOUT_CLASSIFICATION	2.098044924299652E-5	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999790195507571	WITHOUT_CLASSIFICATION	2.098044924299652E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999088270893208	WITHOUT_CLASSIFICATION	9.117291067910339E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999088270893208	WITHOUT_CLASSIFICATION	9.117291067910339E-5	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9999129742204509	WITHOUT_CLASSIFICATION	8.702577954913846E-5	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999956075707409	WITHOUT_CLASSIFICATION	4.392429259053456E-6	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999954255206543	WITHOUT_CLASSIFICATION	4.574479345704039E-6	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999960661762264	WITHOUT_CLASSIFICATION	3.933823773584614E-6	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999987985521906	WITHOUT_CLASSIFICATION	1.201447809309361E-6	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999956125343799	WITHOUT_CLASSIFICATION	4.3874656201673425E-6	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999956861832798	WITHOUT_CLASSIFICATION	4.313816720166186E-6	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999835401520683	WITHOUT_CLASSIFICATION	1.6459847931735818E-5	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999956861832798	WITHOUT_CLASSIFICATION	4.313816720166186E-6	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.999890109564548	WITHOUT_CLASSIFICATION	1.0989043545194534E-4	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.999987433847123	WITHOUT_CLASSIFICATION	1.2566152877082832E-5	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999735848622344	WITHOUT_CLASSIFICATION	2.6415137765624657E-5	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999925840450741	WITHOUT_CLASSIFICATION	7.415954925932076E-6	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999961078228301	WITHOUT_CLASSIFICATION	3.8921771698649785E-6	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999995079672733	WITHOUT_CLASSIFICATION	4.920327267027155E-7	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999989685970889	WITHOUT_CLASSIFICATION	1.0314029111214057E-6	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999630931479713	WITHOUT_CLASSIFICATION	3.690685202873581E-5	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999976361180534	WITHOUT_CLASSIFICATION	2.36388194664636E-6	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.999999556652365	WITHOUT_CLASSIFICATION	4.4334763506106304E-7	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999983763933095	WITHOUT_CLASSIFICATION	1.623606690479467E-6	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999980571601489	WITHOUT_CLASSIFICATION	1.94283985117098E-6	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.9999879710429148	WITHOUT_CLASSIFICATION	1.2028957085133467E-5	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.99998973183305	WITHOUT_CLASSIFICATION	1.0268166950084834E-5	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999959805620104	WITHOUT_CLASSIFICATION	4.019437989597443E-6	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.999998387262132	WITHOUT_CLASSIFICATION	1.612737868079628E-6	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999946627349452	WITHOUT_CLASSIFICATION	5.337265054879622E-6	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999976004252984	WITHOUT_CLASSIFICATION	2.3995747016275933E-6	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9999952025590662	WITHOUT_CLASSIFICATION	4.797440933816214E-6	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999717755351503	WITHOUT_CLASSIFICATION	2.8224464849752623E-5	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999957627372204	WITHOUT_CLASSIFICATION	4.237262779742778E-6	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999768970326428	WITHOUT_CLASSIFICATION	2.3102967357123844E-5	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999887244199474	WITHOUT_CLASSIFICATION	1.1275580052542204E-5	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.999790911629724	WITHOUT_CLASSIFICATION	2.090883702760023E-4	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999695530731625	WITHOUT_CLASSIFICATION	3.0446926837512757E-5	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999464725502253	WITHOUT_CLASSIFICATION	5.352744977474159E-5	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999967852935953	WITHOUT_CLASSIFICATION	3.214706404708893E-6	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.999474592446415	WITHOUT_CLASSIFICATION	5.254075535849508E-4	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999992950407477	WITHOUT_CLASSIFICATION	7.049592523315989E-7	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999938848915743	WITHOUT_CLASSIFICATION	6.115108425812253E-6	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999984862727144	WITHOUT_CLASSIFICATION	1.513727285679124E-6	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999995790985262	WITHOUT_CLASSIFICATION	4.209014737480967E-7	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999976740407076	WITHOUT_CLASSIFICATION	2.3259592924627065E-6	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999370272170901	WITHOUT_CLASSIFICATION	6.297278290993649E-5	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999996994014317	WITHOUT_CLASSIFICATION	3.005985682057152E-7	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999985513866239	WITHOUT_CLASSIFICATION	1.448613376177201E-6	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999979480363757	WITHOUT_CLASSIFICATION	2.0519636243122665E-6	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999985824456687	WITHOUT_CLASSIFICATION	1.417554331256759E-6	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.999999620453321	WITHOUT_CLASSIFICATION	3.7954667891613257E-7	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999984671073837	WITHOUT_CLASSIFICATION	1.5328926162246751E-6	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999968684361595	WITHOUT_CLASSIFICATION	3.131563840414372E-6	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999994896117752	WITHOUT_CLASSIFICATION	5.103882247012049E-7	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999959517411231	WITHOUT_CLASSIFICATION	4.048258876929944E-6	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999983020972616	WITHOUT_CLASSIFICATION	1.6979027383393253E-6	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999963824532612	WITHOUT_CLASSIFICATION	3.6175467387774234E-6	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999985963224739	WITHOUT_CLASSIFICATION	1.4036775261195263E-6	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999972492385928	WITHOUT_CLASSIFICATION	2.750761407301006E-6	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.999982792290424	WITHOUT_CLASSIFICATION	1.72077095760686E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999999154802818	WITHOUT_CLASSIFICATION	8.451971819099118E-7	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999986867512733	WITHOUT_CLASSIFICATION	1.313248726656522E-6	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999906959199724	WITHOUT_CLASSIFICATION	9.304080027685324E-6	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999939100944848	WITHOUT_CLASSIFICATION	6.08990551523566E-6	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999954943376131	WITHOUT_CLASSIFICATION	4.505662386776924E-6	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999688899423125	WITHOUT_CLASSIFICATION	3.1110057687539626E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999980014014882	WITHOUT_CLASSIFICATION	1.998598511779523E-6	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999980014014882	WITHOUT_CLASSIFICATION	1.998598511779523E-6	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.999999922680099	WITHOUT_CLASSIFICATION	7.73199011359099E-8	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.999999885011451	WITHOUT_CLASSIFICATION	1.1498854911082896E-7	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999976436802608	WITHOUT_CLASSIFICATION	2.356319739253931E-6	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.999999074627335	WITHOUT_CLASSIFICATION	9.25372664949371E-7	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999920644459249	WITHOUT_CLASSIFICATION	7.935554074988196E-6	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999981915521651	WITHOUT_CLASSIFICATION	1.8084478349356173E-6	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999952094995186	WITHOUT_CLASSIFICATION	4.790500481454833E-6	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999982650402295	WITHOUT_CLASSIFICATION	1.7349597705298484E-6	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9986401913612569	WITHOUT_CLASSIFICATION	0.001359808638743064	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999981779956775	WITHOUT_CLASSIFICATION	1.8220043225670546E-6	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999960911809133	WITHOUT_CLASSIFICATION	3.908819086781498E-6	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999960911809133	WITHOUT_CLASSIFICATION	3.908819086781498E-6	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.999966747111549	WITHOUT_CLASSIFICATION	3.3252888451055157E-5	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999758857891576	WITHOUT_CLASSIFICATION	2.4114210842295693E-5	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999958160749365	WITHOUT_CLASSIFICATION	4.183925063454898E-6	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999975575096438	WITHOUT_CLASSIFICATION	2.4424903563003677E-6	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999914355749056	WITHOUT_CLASSIFICATION	8.564425094451457E-6	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999987233957628	WITHOUT_CLASSIFICATION	1.2766042372198247E-6	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.999979251698217	WITHOUT_CLASSIFICATION	2.0748301782952996E-5	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.999994881234431	WITHOUT_CLASSIFICATION	5.1187655689303755E-6	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999981883165732	WITHOUT_CLASSIFICATION	1.811683426832208E-6	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9976237447844992	WITHOUT_CLASSIFICATION	0.0023762552155008553	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999995889985243	WITHOUT_CLASSIFICATION	4.110014757613354E-7	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9998018477137541	WITHOUT_CLASSIFICATION	1.9815228624591743E-4	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999414975388374	WITHOUT_CLASSIFICATION	5.85024611626855E-5	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999414975388374	WITHOUT_CLASSIFICATION	5.85024611626855E-5	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.999998775577664	WITHOUT_CLASSIFICATION	1.2244223359641138E-6	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999963154660809	WITHOUT_CLASSIFICATION	3.6845339190300175E-6	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999981146046222	WITHOUT_CLASSIFICATION	1.8853953778437478E-6	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999988792204618	WITHOUT_CLASSIFICATION	1.1207795380957901E-6	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999603782871432	WITHOUT_CLASSIFICATION	3.9621712856847714E-5	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999759058418859	WITHOUT_CLASSIFICATION	2.4094158114064115E-5	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999900972648242	WITHOUT_CLASSIFICATION	9.902735175718743E-6	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999904751758791	WITHOUT_CLASSIFICATION	9.524824120920014E-6	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999867949074012	WITHOUT_CLASSIFICATION	1.3205092598855944E-5	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999972465885548	WITHOUT_CLASSIFICATION	2.753411445041081E-6	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999958160749365	WITHOUT_CLASSIFICATION	4.183925063454898E-6	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999945374644789	WITHOUT_CLASSIFICATION	5.4625355211920726E-6	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999995989113583	WITHOUT_CLASSIFICATION	4.010886417974248E-7	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999980709514201	WITHOUT_CLASSIFICATION	1.929048579843309E-6	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999988537836565	WITHOUT_CLASSIFICATION	1.146216343572962E-6	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999964603599231	WITHOUT_CLASSIFICATION	3.5396400768962943E-6	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999979407502555	WITHOUT_CLASSIFICATION	2.0592497444876476E-6	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999741795608668	WITHOUT_CLASSIFICATION	2.5820439133139957E-5	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999989544491548	WITHOUT_CLASSIFICATION	1.0455508451944113E-6	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999996407319492	WITHOUT_CLASSIFICATION	3.592680507167346E-7	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999932149954974	WITHOUT_CLASSIFICATION	6.785004502641893E-6	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999885485232969	WITHOUT_CLASSIFICATION	1.1451476703210137E-5	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999999797044383	WITHOUT_CLASSIFICATION	2.029556166399928E-8	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999942251960662	WITHOUT_CLASSIFICATION	5.774803933872932E-6	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999985891203822	WITHOUT_CLASSIFICATION	1.410879617851627E-6	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999994543433718	WITHOUT_CLASSIFICATION	5.456566282350438E-7	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999995100254391	WITHOUT_CLASSIFICATION	4.899745609470431E-7	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999950368725454	WITHOUT_CLASSIFICATION	4.9631274546336635E-6	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999719662434262	WITHOUT_CLASSIFICATION	2.8033756573890845E-5	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999813727984236	WITHOUT_CLASSIFICATION	1.8627201576377602E-5	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.999996902052874	WITHOUT_CLASSIFICATION	3.0979471260075696E-6	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.999999663458667	WITHOUT_CLASSIFICATION	3.365413331069115E-7	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.999980078901271	WITHOUT_CLASSIFICATION	1.9921098729000444E-5	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999996876765532	WITHOUT_CLASSIFICATION	3.123234467949626E-7	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999963353194679	WITHOUT_CLASSIFICATION	3.6646805320642986E-6	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.99998418019179	WITHOUT_CLASSIFICATION	1.58198082099206E-5	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999946875310757	WITHOUT_CLASSIFICATION	5.312468924291346E-6	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9998622387311041	WITHOUT_CLASSIFICATION	1.3776126889581173E-4	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9998787687665599	WITHOUT_CLASSIFICATION	1.2123123344011279E-4	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9999829268668873	WITHOUT_CLASSIFICATION	1.7073133112799667E-5	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999980534972328	WITHOUT_CLASSIFICATION	1.946502767098176E-6	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9998738067642311	WITHOUT_CLASSIFICATION	1.2619323576889757E-4	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9998738067642311	WITHOUT_CLASSIFICATION	1.2619323576889757E-4	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9998929647929561	WITHOUT_CLASSIFICATION	1.0703520704395306E-4	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9997903082005558	WITHOUT_CLASSIFICATION	2.0969179944427358E-4	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.999941205263647	WITHOUT_CLASSIFICATION	5.8794736353012195E-5	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9995822949485483	WITHOUT_CLASSIFICATION	4.1770505145162176E-4	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999969491018917	WITHOUT_CLASSIFICATION	3.0508981083491485E-6	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.999998868906546	WITHOUT_CLASSIFICATION	1.1310934539304044E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999851908403494	WITHOUT_CLASSIFICATION	1.4809159650539513E-5	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999697880141339	WITHOUT_CLASSIFICATION	3.0211985866048116E-5	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999943738488133	WITHOUT_CLASSIFICATION	5.626151186706961E-6	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999852696278672	WITHOUT_CLASSIFICATION	1.4730372132734609E-5	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999921908314119	WITHOUT_CLASSIFICATION	7.809168588086909E-6	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9999783875489846	WITHOUT_CLASSIFICATION	2.1612451015510128E-5	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999982843603118	WITHOUT_CLASSIFICATION	1.715639688166663E-6	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999980420706651	WITHOUT_CLASSIFICATION	1.9579293348897935E-6	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999991791149618	WITHOUT_CLASSIFICATION	8.208850380847288E-7	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999538539527086	WITHOUT_CLASSIFICATION	4.614604729146791E-5	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999987654286	WITHOUT_CLASSIFICATION	1.234571482403028E-9	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999972511023097	WITHOUT_CLASSIFICATION	2.7488976901867957E-6	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.999991170268399	WITHOUT_CLASSIFICATION	8.82973160089355E-6	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999489085968094	WITHOUT_CLASSIFICATION	5.1091403190535554E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999175841969529	WITHOUT_CLASSIFICATION	8.241580304713477E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999175841969529	WITHOUT_CLASSIFICATION	8.241580304713477E-5	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9999960674427637	WITHOUT_CLASSIFICATION	3.932557236247804E-6	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999786411691803	WITHOUT_CLASSIFICATION	2.135883081967415E-5	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999970945960464	WITHOUT_CLASSIFICATION	2.9054039536280965E-6	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999791281255401	WITHOUT_CLASSIFICATION	2.0871874459796048E-5	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999875167107222	WITHOUT_CLASSIFICATION	1.248328927795363E-5	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.999984224673948	WITHOUT_CLASSIFICATION	1.577532605201861E-5	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999991188426826	WITHOUT_CLASSIFICATION	8.811573173855818E-7	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999918608790376	WITHOUT_CLASSIFICATION	8.139120962447772E-6	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.999991979519414	WITHOUT_CLASSIFICATION	8.020480585934781E-6	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999965893831908	WITHOUT_CLASSIFICATION	3.4106168092324384E-6	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9999832699096011	WITHOUT_CLASSIFICATION	1.6730090398944848E-5	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.999993011887687	WITHOUT_CLASSIFICATION	6.988112313087135E-6	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999871131772651	WITHOUT_CLASSIFICATION	1.288682273506218E-5	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999922223992423	WITHOUT_CLASSIFICATION	7.777600757605946E-6	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999909004873886	WITHOUT_CLASSIFICATION	9.099512611470224E-6	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999458343016816	WITHOUT_CLASSIFICATION	5.416569831841685E-5	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999931038360734	WITHOUT_CLASSIFICATION	6.896163926659755E-6	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.999998435702619	WITHOUT_CLASSIFICATION	1.564297380925896E-6	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999996676890753	WITHOUT_CLASSIFICATION	3.323109246484649E-7	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999989745539909	WITHOUT_CLASSIFICATION	1.0254460091103064E-6	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999951352123387	WITHOUT_CLASSIFICATION	4.864787661295011E-6	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999931329603616	WITHOUT_CLASSIFICATION	6.867039638389074E-6	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999957869365258	WITHOUT_CLASSIFICATION	4.2130634741554405E-6	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999859444577357	WITHOUT_CLASSIFICATION	1.4055542264384824E-5	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999982526549273	WITHOUT_CLASSIFICATION	1.7473450726525377E-6	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999977928338338	WITHOUT_CLASSIFICATION	2.2071661661906113E-6	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.999990329300169	WITHOUT_CLASSIFICATION	9.670699831041891E-6	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999903914893479	WITHOUT_CLASSIFICATION	9.608510652034157E-6	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999605965169834	WITHOUT_CLASSIFICATION	3.940348301655387E-5	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999896507564451	WITHOUT_CLASSIFICATION	1.0349243554978969E-5	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999990081472084	WITHOUT_CLASSIFICATION	9.918527915525735E-7	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999955285973167	WITHOUT_CLASSIFICATION	4.471402683368556E-6	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999975084638688	WITHOUT_CLASSIFICATION	2.4915361312279705E-6	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.999872445028582	WITHOUT_CLASSIFICATION	1.275549714179471E-4	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999988194498081	WITHOUT_CLASSIFICATION	1.1805501919015908E-6	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999999003529091	WITHOUT_CLASSIFICATION	9.964709080958162E-8	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999986727726246	WITHOUT_CLASSIFICATION	1.327227375456223E-6	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9999869961903919	WITHOUT_CLASSIFICATION	1.3003809608146609E-5	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999906374185122	WITHOUT_CLASSIFICATION	9.362581487709618E-6	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999565425795014	WITHOUT_CLASSIFICATION	4.3457420498633744E-5	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999983135315051	WITHOUT_CLASSIFICATION	1.6864684948893843E-6	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999953879433638	WITHOUT_CLASSIFICATION	4.6120566362597936E-6	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999882788104032	WITHOUT_CLASSIFICATION	1.172118959674842E-5	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999788633839636	WITHOUT_CLASSIFICATION	2.113661603640543E-5	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999964393992841	WITHOUT_CLASSIFICATION	3.5606007159103304E-6	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999788633839636	WITHOUT_CLASSIFICATION	2.113661603640543E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.999272778389402	WITHOUT_CLASSIFICATION	7.272216105979828E-4	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9752174397000589	WITHOUT_CLASSIFICATION	0.024782560299941	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.999999100360125	WITHOUT_CLASSIFICATION	8.99639875021251E-7	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.8482841960596207	WITHOUT_CLASSIFICATION	0.1517158039403794	IMPLEMENTATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999878087198474	WITHOUT_CLASSIFICATION	1.2191280152520476E-5	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9996818878600212	WITHOUT_CLASSIFICATION	3.181121399787475E-4	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9999948616821716	WITHOUT_CLASSIFICATION	5.1383178283831E-6	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999949141042208	WITHOUT_CLASSIFICATION	5.085895779122893E-6	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999991104229592	WITHOUT_CLASSIFICATION	8.895770408273444E-7	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9999591070906793	WITHOUT_CLASSIFICATION	4.089290932069564E-5	IMPLEMENTATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9912928003710433	WITHOUT_CLASSIFICATION	0.008707199628956738	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.999908984646034	WITHOUT_CLASSIFICATION	9.10153539659841E-5	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9998983913067487	WITHOUT_CLASSIFICATION	1.0160869325126766E-4	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999988465109981	WITHOUT_CLASSIFICATION	1.153489001788433E-6	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.997530677515235	WITHOUT_CLASSIFICATION	0.00246932248476495	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9399727907837547	WITHOUT_CLASSIFICATION	0.06002720921624524	IMPLEMENTATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999997837288341	WITHOUT_CLASSIFICATION	2.1627116588050354E-7	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999945757824914	WITHOUT_CLASSIFICATION	5.4242175085822565E-6	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999729878613216	WITHOUT_CLASSIFICATION	2.7012138678444293E-5	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999218799236054	WITHOUT_CLASSIFICATION	7.81200763946321E-5	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.999999150481	WITHOUT_CLASSIFICATION	8.495189999814155E-7	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.999990023141715	WITHOUT_CLASSIFICATION	9.976858284976572E-6	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999800389881147	WITHOUT_CLASSIFICATION	1.996101188531541E-5	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999633580176913	WITHOUT_CLASSIFICATION	3.664198230869132E-5	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999830980254109	WITHOUT_CLASSIFICATION	1.6901974589217108E-5	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999984986145233	WITHOUT_CLASSIFICATION	1.5013854767093695E-6	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999992023965931	WITHOUT_CLASSIFICATION	7.976034068217381E-7	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999932768067892	WITHOUT_CLASSIFICATION	6.723193210748124E-6	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.999996690263015	WITHOUT_CLASSIFICATION	3.3097369850294273E-6	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999982551306252	WITHOUT_CLASSIFICATION	1.744869374691795E-6	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999935959054031	WITHOUT_CLASSIFICATION	6.404094596901531E-5	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999343234741754	WITHOUT_CLASSIFICATION	6.567652582450515E-5	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999233717230558	WITHOUT_CLASSIFICATION	7.662827694421295E-5	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9999972641317031	WITHOUT_CLASSIFICATION	2.7358682968194816E-6	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999972912849396	WITHOUT_CLASSIFICATION	2.708715060386265E-6	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9999972580563817	WITHOUT_CLASSIFICATION	2.7419436183502333E-6	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999954704265659	WITHOUT_CLASSIFICATION	4.529573434155497E-6	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999989757384415	WITHOUT_CLASSIFICATION	1.024261558493415E-6	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999985740128052	WITHOUT_CLASSIFICATION	1.4259871946851843E-6	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9998351242374591	WITHOUT_CLASSIFICATION	1.6487576254087846E-4	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999764719111671	WITHOUT_CLASSIFICATION	2.3528088832875117E-5	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999912419590083	WITHOUT_CLASSIFICATION	8.7580409916963E-6	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999996102570644	WITHOUT_CLASSIFICATION	3.8974293564923376E-7	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999278018598391	WITHOUT_CLASSIFICATION	7.219814016090926E-5	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999278018598391	WITHOUT_CLASSIFICATION	7.219814016090926E-5	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999921331595186	WITHOUT_CLASSIFICATION	7.866840481300492E-6	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.999960746373626	WITHOUT_CLASSIFICATION	3.925362637393726E-5	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999983544998391	WITHOUT_CLASSIFICATION	1.6455001609722442E-6	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999989813090794	WITHOUT_CLASSIFICATION	1.018690920577197E-6	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999996909100765	WITHOUT_CLASSIFICATION	3.0908992353058934E-7	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999979086623786	WITHOUT_CLASSIFICATION	2.0913376213451377E-6	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999971003451735	WITHOUT_CLASSIFICATION	2.8996548263682787E-6	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999877389205473	WITHOUT_CLASSIFICATION	1.2261079452639751E-5	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999978793064267	WITHOUT_CLASSIFICATION	2.120693573211477E-6	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999934636223091	WITHOUT_CLASSIFICATION	6.536377690963493E-6	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999993916864114	WITHOUT_CLASSIFICATION	6.083135886784247E-7	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.999998498190893	WITHOUT_CLASSIFICATION	1.5018091070021668E-6	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999999931705983	WITHOUT_CLASSIFICATION	6.8294017400158185E-9	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999972101756008	WITHOUT_CLASSIFICATION	2.7898243992812023E-6	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999992210262145	WITHOUT_CLASSIFICATION	7.789737854264216E-7	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9998202106702133	WITHOUT_CLASSIFICATION	1.797893297867818E-4	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999760391092467	WITHOUT_CLASSIFICATION	2.3960890753233775E-5	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999893899147344	WITHOUT_CLASSIFICATION	1.061008526563919E-5	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999867425186888	WITHOUT_CLASSIFICATION	1.3257481311180526E-5	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999896454181514	WITHOUT_CLASSIFICATION	1.0354581848506292E-5	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.9999799584521716	WITHOUT_CLASSIFICATION	2.0041547828469986E-5	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.999992003266636	WITHOUT_CLASSIFICATION	7.996733364079302E-6	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9988659257691204	WITHOUT_CLASSIFICATION	0.0011340742308795775	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999998155801039	WITHOUT_CLASSIFICATION	1.8441989605494173E-7	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999966479350878	WITHOUT_CLASSIFICATION	3.3520649121957983E-6	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999991346493053	WITHOUT_CLASSIFICATION	8.653506945890754E-7	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999587605607	WITHOUT_CLASSIFICATION	4.123943942958239E-8	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999974878031999	WITHOUT_CLASSIFICATION	2.5121968001343607E-6	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.999991198595206	WITHOUT_CLASSIFICATION	8.8014047940239E-6	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999975902260139	WITHOUT_CLASSIFICATION	2.4097739861766424E-6	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999174989506724	WITHOUT_CLASSIFICATION	8.250104932763266E-5	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999838537063379	WITHOUT_CLASSIFICATION	1.6146293662049028E-5	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999986575506504	WITHOUT_CLASSIFICATION	1.3424493495641564E-6	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.999994623223906	WITHOUT_CLASSIFICATION	5.37677609405114E-6	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999990309884956	WITHOUT_CLASSIFICATION	9.690115044629367E-7	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9998093426806988	WITHOUT_CLASSIFICATION	1.9065731930120527E-4	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999483015805695	WITHOUT_CLASSIFICATION	5.169841943046693E-5	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999256415933631	WITHOUT_CLASSIFICATION	7.435840663697192E-5	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.999993447583547	WITHOUT_CLASSIFICATION	6.552416452952626E-6	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999423362144021	WITHOUT_CLASSIFICATION	5.766378559791826E-5	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999808237029008	WITHOUT_CLASSIFICATION	1.9176297099215144E-5	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.999987274393896	WITHOUT_CLASSIFICATION	1.2725606103930796E-5	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999933297932818	WITHOUT_CLASSIFICATION	6.670206718122399E-6	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999912307529147	WITHOUT_CLASSIFICATION	8.769247085245354E-6	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999672664329345	WITHOUT_CLASSIFICATION	3.2733567065335416E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999960525972321	WITHOUT_CLASSIFICATION	3.947402767835025E-6	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999984383117347	WITHOUT_CLASSIFICATION	1.5616882652940019E-6	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999999214731008	WITHOUT_CLASSIFICATION	7.852689910450605E-8	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.9999239758976738	WITHOUT_CLASSIFICATION	7.602410232619903E-5	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999818590118986	WITHOUT_CLASSIFICATION	1.8140988101365434E-5	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.999996802049424	WITHOUT_CLASSIFICATION	3.19795057598225E-6	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999803834449339	WITHOUT_CLASSIFICATION	1.9616555066078492E-5	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999909073021438	WITHOUT_CLASSIFICATION	9.092697856112902E-6	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999942469654505	WITHOUT_CLASSIFICATION	5.75303454952359E-6	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999204779648402	WITHOUT_CLASSIFICATION	7.952203515981904E-5	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999996829295046	WITHOUT_CLASSIFICATION	3.1707049534731423E-7	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999980750893762	WITHOUT_CLASSIFICATION	1.924910623853961E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999856928676699	WITHOUT_CLASSIFICATION	1.4307132330189406E-5	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9998963129682195	WITHOUT_CLASSIFICATION	1.0368703178046088E-4	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999896663623657	WITHOUT_CLASSIFICATION	1.033363763425207E-5	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999981940793272	WITHOUT_CLASSIFICATION	1.8059206727785594E-6	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999932666555357	WITHOUT_CLASSIFICATION	6.733344464356784E-6	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999983960913663	WITHOUT_CLASSIFICATION	1.6039086335997121E-6	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999990344742178	WITHOUT_CLASSIFICATION	9.655257821306735E-7	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9999859105084798	WITHOUT_CLASSIFICATION	1.4089491520110386E-5	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999173353963628	WITHOUT_CLASSIFICATION	8.266460363709903E-5	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999470794720354	WITHOUT_CLASSIFICATION	5.2920527964580056E-5	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999983126079498	WITHOUT_CLASSIFICATION	1.6873920501638662E-6	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.999940846592675	WITHOUT_CLASSIFICATION	5.915340732498744E-5	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.999975410779099	WITHOUT_CLASSIFICATION	2.4589220901015485E-5	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999841975055839	WITHOUT_CLASSIFICATION	1.5802494416166044E-5	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.999999344418501	WITHOUT_CLASSIFICATION	6.555814988695705E-7	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999245843384563	WITHOUT_CLASSIFICATION	7.541566154368059E-5	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9998760604202079	WITHOUT_CLASSIFICATION	1.2393957979207413E-4	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9999182145411406	WITHOUT_CLASSIFICATION	8.178545885943023E-5	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9999221524570773	WITHOUT_CLASSIFICATION	7.784754292271226E-5	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9999133937885033	WITHOUT_CLASSIFICATION	8.660621149675027E-5	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9999175621526533	WITHOUT_CLASSIFICATION	8.243784734676377E-5	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9999103402992993	WITHOUT_CLASSIFICATION	8.965970070077278E-5	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.999905933953221	WITHOUT_CLASSIFICATION	9.406604677896508E-5	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9999065502519844	WITHOUT_CLASSIFICATION	9.344974801560064E-5	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9999050441426535	WITHOUT_CLASSIFICATION	9.495585734651225E-5	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9999091401019949	WITHOUT_CLASSIFICATION	9.085989800496118E-5	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.999909782248594	WITHOUT_CLASSIFICATION	9.021775140599383E-5	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9999269575333862	WITHOUT_CLASSIFICATION	7.304246661375062E-5	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9999272343118449	WITHOUT_CLASSIFICATION	7.276568815506112E-5	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9999293650762822	WITHOUT_CLASSIFICATION	7.063492371786811E-5	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9999228915980244	WITHOUT_CLASSIFICATION	7.710840197559262E-5	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9999233079747475	WITHOUT_CLASSIFICATION	7.669202525249275E-5	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9999219978980382	WITHOUT_CLASSIFICATION	7.80021019619209E-5	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9999254672090477	WITHOUT_CLASSIFICATION	7.453279095218333E-5	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9999228758909233	WITHOUT_CLASSIFICATION	7.712410907662871E-5	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9999242082159536	WITHOUT_CLASSIFICATION	7.579178404634347E-5	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9999281355101205	WITHOUT_CLASSIFICATION	7.186448987947364E-5	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999702610168729	WITHOUT_CLASSIFICATION	2.973898312709564E-5	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999512596796333	WITHOUT_CLASSIFICATION	4.874032036661794E-5	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999980117865366	WITHOUT_CLASSIFICATION	1.9882134634751665E-6	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999731995462334	WITHOUT_CLASSIFICATION	2.680045376657668E-5	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999974733585174	WITHOUT_CLASSIFICATION	2.526641482564462E-6	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999941768527636	WITHOUT_CLASSIFICATION	5.8231472363647926E-6	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9999763328401705	WITHOUT_CLASSIFICATION	2.366715982946418E-5	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999934664492293	WITHOUT_CLASSIFICATION	6.533550770691027E-6	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999975925258591	WITHOUT_CLASSIFICATION	2.4074741410491566E-6	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9175230156408318	WITHOUT_CLASSIFICATION	0.08247698435916817	IMPLEMENTATION
// integer division	WITHOUT_CLASSIFICATION	0.9999922823320324	WITHOUT_CLASSIFICATION	7.71766796760975E-6	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.99999934418043	WITHOUT_CLASSIFICATION	6.558195698707646E-7	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999967064033681	WITHOUT_CLASSIFICATION	3.2935966319404165E-6	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999967064033681	WITHOUT_CLASSIFICATION	3.2935966319404165E-6	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999953265519166	WITHOUT_CLASSIFICATION	4.673448083418839E-6	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.999988747060099	WITHOUT_CLASSIFICATION	1.1252939901074192E-5	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.999999946214433	WITHOUT_CLASSIFICATION	5.378556701252254E-8	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999922134104487	WITHOUT_CLASSIFICATION	7.7865895511751E-6	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.999997124802107	WITHOUT_CLASSIFICATION	2.8751978929898033E-6	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999908913518092	WITHOUT_CLASSIFICATION	9.10864819085566E-6	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9999603341725267	WITHOUT_CLASSIFICATION	3.9665827473168335E-5	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999930958618294	WITHOUT_CLASSIFICATION	6.9041381706455245E-6	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9999033722237962	WITHOUT_CLASSIFICATION	9.66277762037929E-5	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9999668139500317	WITHOUT_CLASSIFICATION	3.318604996838946E-5	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999777497283949	WITHOUT_CLASSIFICATION	2.2250271605148625E-5	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999957251657045	WITHOUT_CLASSIFICATION	4.274834295592279E-6	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9999389346992958	WITHOUT_CLASSIFICATION	6.106530070411378E-5	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999599251263867	WITHOUT_CLASSIFICATION	4.007487361347967E-5	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999595528093638	WITHOUT_CLASSIFICATION	4.044719063615009E-5	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.9999501387688269	WITHOUT_CLASSIFICATION	4.9861231173173454E-5	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999915698398313	WITHOUT_CLASSIFICATION	8.430160168716352E-6	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999990212342602	WITHOUT_CLASSIFICATION	9.787657397715532E-7	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999931753521886	WITHOUT_CLASSIFICATION	6.8246478113977495E-6	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9997955795084027	WITHOUT_CLASSIFICATION	2.044204915973977E-4	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999918810960665	WITHOUT_CLASSIFICATION	8.118903933355914E-6	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999995350872045	WITHOUT_CLASSIFICATION	4.6491279553107687E-7	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999592379381407	WITHOUT_CLASSIFICATION	4.076206185937759E-5	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999953784037543	WITHOUT_CLASSIFICATION	4.6215962457576335E-6	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999918213880487	WITHOUT_CLASSIFICATION	8.178611951458093E-6	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999956531464019	WITHOUT_CLASSIFICATION	4.346853598179594E-6	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999963775214655	WITHOUT_CLASSIFICATION	3.62247853448732E-6	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999803679381539	WITHOUT_CLASSIFICATION	1.9632061846066918E-5	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999990795782608	WITHOUT_CLASSIFICATION	9.204217391341685E-7	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9997244238118049	WITHOUT_CLASSIFICATION	2.755761881950848E-4	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.999963069396484	WITHOUT_CLASSIFICATION	3.693060351594584E-5	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999965286933031	WITHOUT_CLASSIFICATION	3.471306696959382E-6	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9995403598858209	WITHOUT_CLASSIFICATION	4.5964011417905535E-4	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999342831986145	WITHOUT_CLASSIFICATION	6.571680138553232E-5	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999877232458798	WITHOUT_CLASSIFICATION	1.2276754120309051E-5	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999831520041588	WITHOUT_CLASSIFICATION	1.6847995841228598E-5	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999899967981545	WITHOUT_CLASSIFICATION	1.0003201845457837E-5	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999986105325838	WITHOUT_CLASSIFICATION	1.389467416284805E-6	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999987372108805	WITHOUT_CLASSIFICATION	1.2627891195689031E-6	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999985789775956	WITHOUT_CLASSIFICATION	1.4210224043642523E-6	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999990073193784	WITHOUT_CLASSIFICATION	9.926806216707825E-7	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999899174354568	WITHOUT_CLASSIFICATION	1.0082564543245528E-5	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999982667052174	WITHOUT_CLASSIFICATION	1.7332947824889397E-6	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999224564828901	WITHOUT_CLASSIFICATION	7.754351710982379E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999224564828901	WITHOUT_CLASSIFICATION	7.754351710982379E-5	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999941352803429	WITHOUT_CLASSIFICATION	5.8647196571958175E-6	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999890360613001	WITHOUT_CLASSIFICATION	1.096393869986035E-5	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999951516178671	WITHOUT_CLASSIFICATION	4.848382132825603E-6	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9999684608412991	WITHOUT_CLASSIFICATION	3.153915870091281E-5	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999947032482133	WITHOUT_CLASSIFICATION	5.29675178678503E-6	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9999843067942434	WITHOUT_CLASSIFICATION	1.5693205756539496E-5	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999984223382488	WITHOUT_CLASSIFICATION	1.5776617512227008E-6	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9998123510796428	WITHOUT_CLASSIFICATION	1.876489203571145E-4	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999627828341217	WITHOUT_CLASSIFICATION	3.7217165878301776E-5	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999775528019706	WITHOUT_CLASSIFICATION	2.2447198029396704E-5	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999878772149665	WITHOUT_CLASSIFICATION	1.2122785033480545E-5	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999978184127495	WITHOUT_CLASSIFICATION	2.181587250553739E-6	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999966855555784	WITHOUT_CLASSIFICATION	3.3144444216693077E-6	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.999992263137635	WITHOUT_CLASSIFICATION	7.736862365060797E-6	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.8675978915558332	WITHOUT_CLASSIFICATION	0.13240210844416686	IMPLEMENTATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9998280326910045	WITHOUT_CLASSIFICATION	1.7196730899562247E-4	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999926859063546	WITHOUT_CLASSIFICATION	7.314093645389865E-6	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999990022585487	WITHOUT_CLASSIFICATION	9.977414513365892E-7	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999999452971502	WITHOUT_CLASSIFICATION	5.4702849848080024E-8	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.999982196408132	WITHOUT_CLASSIFICATION	1.7803591867998482E-5	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999974052250623	WITHOUT_CLASSIFICATION	2.594774937682498E-6	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999974052250623	WITHOUT_CLASSIFICATION	2.594774937682498E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999974211562663	WITHOUT_CLASSIFICATION	2.578843733607931E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999974211562663	WITHOUT_CLASSIFICATION	2.578843733607931E-6	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999987195819423	WITHOUT_CLASSIFICATION	1.2804180577415583E-6	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999960028679225	WITHOUT_CLASSIFICATION	3.997132077554834E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999862653075673	WITHOUT_CLASSIFICATION	1.3734692432626803E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999832364849761	WITHOUT_CLASSIFICATION	1.6763515023825266E-5	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999954255206543	WITHOUT_CLASSIFICATION	4.574479345704039E-6	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999907917297216	WITHOUT_CLASSIFICATION	9.208270278499033E-6	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9999779495430148	WITHOUT_CLASSIFICATION	2.2050456985205635E-5	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9999964006689448	WITHOUT_CLASSIFICATION	3.5993310552423667E-6	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999700726980015	WITHOUT_CLASSIFICATION	2.9927301998396962E-5	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999821487160325	WITHOUT_CLASSIFICATION	1.7851283967578556E-5	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999147957286253	WITHOUT_CLASSIFICATION	8.520427137475522E-5	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999950334906713	WITHOUT_CLASSIFICATION	4.966509328760768E-6	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999943311179622	WITHOUT_CLASSIFICATION	5.668882037796267E-6	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999987676178058	WITHOUT_CLASSIFICATION	1.2323821941478981E-6	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999994861814273	WITHOUT_CLASSIFICATION	5.138185727162767E-7	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.99997297337117	WITHOUT_CLASSIFICATION	2.7026628830135097E-5	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9993701072298962	WITHOUT_CLASSIFICATION	6.298927701038403E-4	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999836147610923	WITHOUT_CLASSIFICATION	1.6385238907707192E-5	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9999943491099531	WITHOUT_CLASSIFICATION	5.650890046935556E-6	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999341459484785	WITHOUT_CLASSIFICATION	6.585405152151296E-5	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999843261712353	WITHOUT_CLASSIFICATION	1.567382876464568E-5	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999848721034424	WITHOUT_CLASSIFICATION	1.512789655764824E-5	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999945960393692	WITHOUT_CLASSIFICATION	5.4039606307050516E-6	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999992023965931	WITHOUT_CLASSIFICATION	7.976034068217381E-7	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999979086623786	WITHOUT_CLASSIFICATION	2.0913376213451377E-6	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999530579994905	WITHOUT_CLASSIFICATION	4.6942000509402855E-5	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.99999892040471	WITHOUT_CLASSIFICATION	1.0795952900176431E-6	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999963780046784	WITHOUT_CLASSIFICATION	3.621995321621561E-6	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999744916277976	WITHOUT_CLASSIFICATION	2.5508372202463366E-5	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999918590274374	WITHOUT_CLASSIFICATION	8.140972562550083E-6	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999918590274374	WITHOUT_CLASSIFICATION	8.140972562550083E-6	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999984703295927	WITHOUT_CLASSIFICATION	1.529670407361242E-6	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999965303688543	WITHOUT_CLASSIFICATION	3.469631145763336E-6	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999678835466063	WITHOUT_CLASSIFICATION	3.211645339377001E-5	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999939265338262	WITHOUT_CLASSIFICATION	6.073466173706968E-6	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999868250578627	WITHOUT_CLASSIFICATION	1.3174942137160335E-5	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9999078209654015	WITHOUT_CLASSIFICATION	9.217903459848829E-5	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999667963669608	WITHOUT_CLASSIFICATION	3.320363303916097E-5	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9998294732862135	WITHOUT_CLASSIFICATION	1.7052671378640585E-4	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999972223487048	WITHOUT_CLASSIFICATION	2.77765129514997E-6	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999884127494197	WITHOUT_CLASSIFICATION	1.15872505801957E-5	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9999910996968924	WITHOUT_CLASSIFICATION	8.900303107573694E-6	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999905092208229	WITHOUT_CLASSIFICATION	9.490779177071438E-6	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999745679880095	WITHOUT_CLASSIFICATION	2.5432011990447185E-5	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999984023908427	WITHOUT_CLASSIFICATION	1.5976091572752358E-6	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.999964700398594	WITHOUT_CLASSIFICATION	3.5299601405964324E-5	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999913439002163	WITHOUT_CLASSIFICATION	8.656099783720698E-6	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999837522719971	WITHOUT_CLASSIFICATION	1.624772800281959E-5	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999993147950951	WITHOUT_CLASSIFICATION	6.852049048918761E-7	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999986874405318	WITHOUT_CLASSIFICATION	1.3125594681780165E-6	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999989732209169	WITHOUT_CLASSIFICATION	1.02677908303919E-6	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999981466314959	WITHOUT_CLASSIFICATION	1.853368504086039E-6	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999979278395971	WITHOUT_CLASSIFICATION	2.072160402881774E-6	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999638754601036	WITHOUT_CLASSIFICATION	3.612453989638773E-5	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9999407084554384	WITHOUT_CLASSIFICATION	5.929154456173927E-5	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999955396898065	WITHOUT_CLASSIFICATION	4.460310193573823E-6	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999171041340638	WITHOUT_CLASSIFICATION	8.289586593624506E-5	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999972113062844	WITHOUT_CLASSIFICATION	2.788693715647751E-6	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999862298875215	WITHOUT_CLASSIFICATION	1.3770112478467136E-5	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999671866144976	WITHOUT_CLASSIFICATION	3.281338550237262E-5	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.999997046394373	WITHOUT_CLASSIFICATION	2.953605626939323E-6	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.999926671555429	WITHOUT_CLASSIFICATION	7.332844457099804E-5	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999861525809615	WITHOUT_CLASSIFICATION	1.3847419038655706E-5	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999790072652212	WITHOUT_CLASSIFICATION	2.0992734778787092E-5	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9999962543228309	WITHOUT_CLASSIFICATION	3.7456771690668826E-6	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999990099308627	WITHOUT_CLASSIFICATION	9.900691372900804E-7	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.999994266025834	WITHOUT_CLASSIFICATION	5.733974166011414E-6	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999791413191452	WITHOUT_CLASSIFICATION	2.0858680854765632E-5	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999290423222594	WITHOUT_CLASSIFICATION	7.095767774054267E-5	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999947510693578	WITHOUT_CLASSIFICATION	5.248930642247515E-6	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999809950181696	WITHOUT_CLASSIFICATION	1.9004981830350535E-5	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999996973393787	WITHOUT_CLASSIFICATION	3.026606214520272E-7	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999997689277397	WITHOUT_CLASSIFICATION	2.3107226035010943E-7	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9999877553628622	WITHOUT_CLASSIFICATION	1.2244637137740204E-5	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9999892598747366	WITHOUT_CLASSIFICATION	1.074012526336827E-5	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9998364229161958	WITHOUT_CLASSIFICATION	1.6357708380428644E-4	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999998127245427	WITHOUT_CLASSIFICATION	1.8727545724901806E-7	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999538024970778	WITHOUT_CLASSIFICATION	4.619750292216347E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999993820529157	WITHOUT_CLASSIFICATION	6.179470843545375E-7	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999844074775504	WITHOUT_CLASSIFICATION	1.559252244968738E-5	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9999616362038407	WITHOUT_CLASSIFICATION	3.836379615923539E-5	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999140173705333	WITHOUT_CLASSIFICATION	8.598262946657623E-5	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9998739713711787	WITHOUT_CLASSIFICATION	1.260286288212471E-4	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.999910736983011	WITHOUT_CLASSIFICATION	8.926301698901091E-5	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999181100322596	WITHOUT_CLASSIFICATION	8.188996774031383E-5	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999686956136755	WITHOUT_CLASSIFICATION	3.130438632450844E-5	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999259173153466	WITHOUT_CLASSIFICATION	7.408268465333582E-5	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999452417846966	WITHOUT_CLASSIFICATION	5.475821530340128E-5	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999995814028934	WITHOUT_CLASSIFICATION	4.185971065404423E-7	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999966382006726	WITHOUT_CLASSIFICATION	3.36179932727246E-6	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999988499446145	WITHOUT_CLASSIFICATION	1.1500553855497617E-6	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9998997338158001	WITHOUT_CLASSIFICATION	1.0026618419997766E-4	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999140173705333	WITHOUT_CLASSIFICATION	8.598262946657623E-5	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.999910736983011	WITHOUT_CLASSIFICATION	8.926301698901091E-5	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9998739713711787	WITHOUT_CLASSIFICATION	1.260286288212471E-4	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9998787738625374	WITHOUT_CLASSIFICATION	1.212261374626198E-4	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999403394235092	WITHOUT_CLASSIFICATION	5.9660576490722274E-5	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999905086643448	WITHOUT_CLASSIFICATION	9.491335655266163E-6	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9999911116337683	WITHOUT_CLASSIFICATION	8.888366231743578E-6	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9991722324117105	WITHOUT_CLASSIFICATION	8.277675882895363E-4	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999858924568323	WITHOUT_CLASSIFICATION	1.4107543167644662E-5	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999823560698151	WITHOUT_CLASSIFICATION	1.7643930184859978E-5	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999866583414899	WITHOUT_CLASSIFICATION	1.3341658510146705E-5	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.999968677827635	WITHOUT_CLASSIFICATION	3.132217236495384E-5	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.999984227755051	WITHOUT_CLASSIFICATION	1.5772244948977274E-5	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999870839145392	WITHOUT_CLASSIFICATION	1.2916085460838692E-5	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999765639675772	WITHOUT_CLASSIFICATION	2.3436032422856948E-5	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999863889648212	WITHOUT_CLASSIFICATION	1.3611035178894959E-5	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9999599026541041	WITHOUT_CLASSIFICATION	4.009734589589417E-5	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999998584776475	WITHOUT_CLASSIFICATION	1.415223524677687E-7	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9999527612438406	WITHOUT_CLASSIFICATION	4.7238756159312754E-5	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.9999979852491097	WITHOUT_CLASSIFICATION	2.0147508903878595E-6	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999823000571131	WITHOUT_CLASSIFICATION	1.769994288691998E-5	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999823000571131	WITHOUT_CLASSIFICATION	1.769994288691998E-5	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9997743938204885	WITHOUT_CLASSIFICATION	2.256061795115115E-4	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.9999810534191984	WITHOUT_CLASSIFICATION	1.8946580801556563E-5	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9998923028020976	WITHOUT_CLASSIFICATION	1.0769719790241228E-4	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9997464753973407	WITHOUT_CLASSIFICATION	2.535246026593056E-4	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999113012204236	WITHOUT_CLASSIFICATION	8.869877957634427E-5	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999918000192595	WITHOUT_CLASSIFICATION	8.199980740513157E-6	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999958537376572	WITHOUT_CLASSIFICATION	4.146262342741874E-6	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999876971479185	WITHOUT_CLASSIFICATION	1.2302852081566453E-5	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999985700590928	WITHOUT_CLASSIFICATION	1.429940907269556E-6	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999987819958278	WITHOUT_CLASSIFICATION	1.2180041721916542E-6	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.999982643202154	WITHOUT_CLASSIFICATION	1.735679784604164E-5	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9999507477052885	WITHOUT_CLASSIFICATION	4.9252294711660514E-5	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999245298938209	WITHOUT_CLASSIFICATION	7.547010617913701E-5	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999753784396868	WITHOUT_CLASSIFICATION	2.4621560313180626E-5	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999993810403692	WITHOUT_CLASSIFICATION	6.189596308995216E-7	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999972627410593	WITHOUT_CLASSIFICATION	2.737258940641719E-6	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999439023128286	WITHOUT_CLASSIFICATION	5.609768717131015E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999996942065551	WITHOUT_CLASSIFICATION	3.057934449282416E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999996942065551	WITHOUT_CLASSIFICATION	3.057934449282416E-7	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9999463172207158	WITHOUT_CLASSIFICATION	5.368277928408097E-5	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9999616139740815	WITHOUT_CLASSIFICATION	3.8386025918548735E-5	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.999958226162597	WITHOUT_CLASSIFICATION	4.177383740294323E-5	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9999720957797814	WITHOUT_CLASSIFICATION	2.790422021854433E-5	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999916710001733	WITHOUT_CLASSIFICATION	8.328999826694726E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999996942065551	WITHOUT_CLASSIFICATION	3.057934449282416E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999996942065551	WITHOUT_CLASSIFICATION	3.057934449282416E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999986589483193	WITHOUT_CLASSIFICATION	1.341051680687967E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999986589483193	WITHOUT_CLASSIFICATION	1.341051680687967E-6	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.999827588413754	WITHOUT_CLASSIFICATION	1.7241158624613744E-4	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999726252591946	WITHOUT_CLASSIFICATION	2.7374740805348762E-5	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999992354561742	WITHOUT_CLASSIFICATION	7.645438259036161E-7	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.999751006540089	WITHOUT_CLASSIFICATION	2.4899345991103133E-4	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999991529742658	WITHOUT_CLASSIFICATION	8.470257341041582E-7	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999991529742658	WITHOUT_CLASSIFICATION	8.470257341041582E-7	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999933835801774	WITHOUT_CLASSIFICATION	6.6164198225679915E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999987076374168	WITHOUT_CLASSIFICATION	1.2923625832111569E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999997877497444	WITHOUT_CLASSIFICATION	2.122502556009619E-6	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999918417006863	WITHOUT_CLASSIFICATION	8.158299313735049E-6	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999986462798575	WITHOUT_CLASSIFICATION	1.3537201424822163E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999870570893936	WITHOUT_CLASSIFICATION	1.294291060650166E-5	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999992784690153	WITHOUT_CLASSIFICATION	7.21530984795702E-7	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999984852272261	WITHOUT_CLASSIFICATION	1.5147727738306857E-6	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999710513172773	WITHOUT_CLASSIFICATION	2.894868272266836E-5	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999965398679797	WITHOUT_CLASSIFICATION	3.460132020326737E-6	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999422389032024	WITHOUT_CLASSIFICATION	5.7761096797505536E-5	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999867263937666	WITHOUT_CLASSIFICATION	1.3273606233339602E-5	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999183120589311	WITHOUT_CLASSIFICATION	8.168794106878998E-5	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999956168889658	WITHOUT_CLASSIFICATION	4.3831110342332725E-6	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999972627410593	WITHOUT_CLASSIFICATION	2.737258940641719E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999996942065551	WITHOUT_CLASSIFICATION	3.057934449282416E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999986589483193	WITHOUT_CLASSIFICATION	1.341051680687967E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999870570893936	WITHOUT_CLASSIFICATION	1.294291060650166E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999989196363732	WITHOUT_CLASSIFICATION	1.0803636268849093E-6	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999989196363732	WITHOUT_CLASSIFICATION	1.0803636268849093E-6	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999832131221289	WITHOUT_CLASSIFICATION	1.6786877871093254E-5	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999954623159775	WITHOUT_CLASSIFICATION	4.537684022580761E-6	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.999994532984166	WITHOUT_CLASSIFICATION	5.467015834133619E-6	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999973127330822	WITHOUT_CLASSIFICATION	2.6872669178064993E-6	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999992245114695	WITHOUT_CLASSIFICATION	7.754885304911871E-7	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999994153661149	WITHOUT_CLASSIFICATION	5.846338850967588E-7	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.999999134975809	WITHOUT_CLASSIFICATION	8.650241911850855E-7	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.999996519978047	WITHOUT_CLASSIFICATION	3.4800219530446937E-6	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999928010770414	WITHOUT_CLASSIFICATION	7.198922958632817E-6	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999755240415211	WITHOUT_CLASSIFICATION	2.447595847891552E-5	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.999995306888234	WITHOUT_CLASSIFICATION	4.693111765998164E-6	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999240256762	WITHOUT_CLASSIFICATION	7.597432381849774E-8	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999951053243817	WITHOUT_CLASSIFICATION	4.894675618307926E-6	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999439023128286	WITHOUT_CLASSIFICATION	5.609768717131015E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999986589483193	WITHOUT_CLASSIFICATION	1.341051680687967E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999987076374168	WITHOUT_CLASSIFICATION	1.2923625832111569E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999997877497444	WITHOUT_CLASSIFICATION	2.122502556009619E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999997877497444	WITHOUT_CLASSIFICATION	2.122502556009619E-6	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999986462798575	WITHOUT_CLASSIFICATION	1.3537201424822163E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999870570893936	WITHOUT_CLASSIFICATION	1.294291060650166E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999870570893936	WITHOUT_CLASSIFICATION	1.294291060650166E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999989196363732	WITHOUT_CLASSIFICATION	1.0803636268849093E-6	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.999795051013309	WITHOUT_CLASSIFICATION	2.0494898669089386E-4	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999939269754097	WITHOUT_CLASSIFICATION	6.073024590362306E-6	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999998078703678	WITHOUT_CLASSIFICATION	1.9212963210322036E-7	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999954296981682	WITHOUT_CLASSIFICATION	4.570301831757966E-6	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.999998044611592	WITHOUT_CLASSIFICATION	1.9553884079785597E-6	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999908989922014	WITHOUT_CLASSIFICATION	9.101007798583432E-6	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9998747312321746	WITHOUT_CLASSIFICATION	1.252687678253616E-4	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999949546387122	WITHOUT_CLASSIFICATION	5.045361287810841E-6	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999941878789916	WITHOUT_CLASSIFICATION	5.812121008282239E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999987076374168	WITHOUT_CLASSIFICATION	1.2923625832111569E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999997877497444	WITHOUT_CLASSIFICATION	2.122502556009619E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.999997877497444	WITHOUT_CLASSIFICATION	2.122502556009619E-6	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999986462798575	WITHOUT_CLASSIFICATION	1.3537201424822163E-6	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.999996519978047	WITHOUT_CLASSIFICATION	3.4800219530446937E-6	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999755240415211	WITHOUT_CLASSIFICATION	2.447595847891552E-5	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999989938471058	WITHOUT_CLASSIFICATION	1.0061528942560386E-6	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999829956297847	WITHOUT_CLASSIFICATION	1.7004370215440554E-5	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999670435213197	WITHOUT_CLASSIFICATION	3.295647868025703E-5	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999670435213197	WITHOUT_CLASSIFICATION	3.295647868025703E-5	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999847633801344	WITHOUT_CLASSIFICATION	1.5236619865540129E-5	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999977637074342	WITHOUT_CLASSIFICATION	2.236292565852713E-6	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999704690201736	WITHOUT_CLASSIFICATION	2.9530979826436885E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999549501776674	WITHOUT_CLASSIFICATION	4.504982233258077E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999935615061455	WITHOUT_CLASSIFICATION	6.438493854548369E-6	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999935615061455	WITHOUT_CLASSIFICATION	6.438493854548369E-6	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9998603333771301	WITHOUT_CLASSIFICATION	1.3966662286994376E-4	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9998603333771301	WITHOUT_CLASSIFICATION	1.3966662286994376E-4	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999937154341262	WITHOUT_CLASSIFICATION	6.284565873790486E-6	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999937154341262	WITHOUT_CLASSIFICATION	6.284565873790486E-6	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999552149111927	WITHOUT_CLASSIFICATION	4.47850888073661E-5	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9998583044841342	WITHOUT_CLASSIFICATION	1.4169551586590593E-4	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.99997605597208	WITHOUT_CLASSIFICATION	2.3944027920111183E-5	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999982043172996	WITHOUT_CLASSIFICATION	1.795682700401514E-6	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999973402394693	WITHOUT_CLASSIFICATION	2.659760530673379E-6	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.999969982193394	WITHOUT_CLASSIFICATION	3.0017806606130687E-5	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999693457558595	WITHOUT_CLASSIFICATION	3.065424414053295E-5	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9996723657534597	WITHOUT_CLASSIFICATION	3.276342465403053E-4	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9995464446999236	WITHOUT_CLASSIFICATION	4.53555300076501E-4	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9998742258550852	WITHOUT_CLASSIFICATION	1.2577414491479408E-4	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999886018374005	WITHOUT_CLASSIFICATION	1.1398162599420171E-5	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999886361300058	WITHOUT_CLASSIFICATION	1.1363869994297394E-5	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999933740617084	WITHOUT_CLASSIFICATION	6.62593829164338E-6	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999954968653372	WITHOUT_CLASSIFICATION	4.503134662880915E-6	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999954968653372	WITHOUT_CLASSIFICATION	4.503134662880915E-6	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999905774539521	WITHOUT_CLASSIFICATION	9.42254604784335E-6	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999907917297216	WITHOUT_CLASSIFICATION	9.208270278499033E-6	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999987406524351	WITHOUT_CLASSIFICATION	1.2593475648046522E-6	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999995011419317	WITHOUT_CLASSIFICATION	4.988580682298298E-7	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999991845978512	WITHOUT_CLASSIFICATION	8.154021487303185E-7	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999979235721487	WITHOUT_CLASSIFICATION	2.076427851239219E-6	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999983912183844	WITHOUT_CLASSIFICATION	1.6087816156146118E-6	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999998993097386	WITHOUT_CLASSIFICATION	1.0069026139633692E-6	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999986022684557	WITHOUT_CLASSIFICATION	1.397731544337255E-6	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999989920833248	WITHOUT_CLASSIFICATION	1.007916675266072E-6	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999976884372591	WITHOUT_CLASSIFICATION	2.3115627408592696E-6	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.999991384568923	WITHOUT_CLASSIFICATION	8.61543107704295E-6	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999996849177331	WITHOUT_CLASSIFICATION	3.150822669277607E-7	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999422562176936	WITHOUT_CLASSIFICATION	5.7743782306516604E-5	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999986471031219	WITHOUT_CLASSIFICATION	1.3528968780914936E-6	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999996854523132	WITHOUT_CLASSIFICATION	3.1454768672139037E-7	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9999955068969487	WITHOUT_CLASSIFICATION	4.4931030512903065E-6	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999952724580038	WITHOUT_CLASSIFICATION	4.727541996264575E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999979686492023	WITHOUT_CLASSIFICATION	2.031350797602256E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999979686492023	WITHOUT_CLASSIFICATION	2.031350797602256E-6	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999963282338022	WITHOUT_CLASSIFICATION	3.6717661977614164E-6	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999867562661954	WITHOUT_CLASSIFICATION	1.3243733804533676E-5	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9993486316695956	WITHOUT_CLASSIFICATION	6.513683304043079E-4	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9993486316695956	WITHOUT_CLASSIFICATION	6.513683304043079E-4	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.99998970875153	WITHOUT_CLASSIFICATION	1.0291248469908341E-5	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999242787455822	WITHOUT_CLASSIFICATION	7.572125441782837E-5	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9995140982053	WITHOUT_CLASSIFICATION	4.8590179470004834E-4	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9998007096348505	WITHOUT_CLASSIFICATION	1.9929036514947844E-4	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999990217970975	WITHOUT_CLASSIFICATION	9.782029024786837E-7	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999986173971432	WITHOUT_CLASSIFICATION	1.3826028567896095E-6	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999986173971432	WITHOUT_CLASSIFICATION	1.3826028567896095E-6	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999977201252012	WITHOUT_CLASSIFICATION	2.2798747988219136E-6	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.999998884278194	WITHOUT_CLASSIFICATION	1.1157218061014941E-6	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.99999874021695	WITHOUT_CLASSIFICATION	1.2597830500044614E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999887586329209	WITHOUT_CLASSIFICATION	1.1241367079178328E-5	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999867562661954	WITHOUT_CLASSIFICATION	1.3243733804533676E-5	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9998527192893817	WITHOUT_CLASSIFICATION	1.4728071061823666E-4	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999762680011895	WITHOUT_CLASSIFICATION	2.3731998810401995E-5	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999762680011895	WITHOUT_CLASSIFICATION	2.3731998810401995E-5	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999980114988187	WITHOUT_CLASSIFICATION	1.988501181326226E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993589666885	WITHOUT_CLASSIFICATION	6.410333114624537E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993589666885	WITHOUT_CLASSIFICATION	6.410333114624537E-7	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999693598833193	WITHOUT_CLASSIFICATION	3.064011668085926E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999693598833193	WITHOUT_CLASSIFICATION	3.064011668085926E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999693598833193	WITHOUT_CLASSIFICATION	3.064011668085926E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993589666885	WITHOUT_CLASSIFICATION	6.410333114624537E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993589666885	WITHOUT_CLASSIFICATION	6.410333114624537E-7	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999980114988187	WITHOUT_CLASSIFICATION	1.988501181326226E-6	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999946957623032	WITHOUT_CLASSIFICATION	5.304237696836376E-6	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9999849439390343	WITHOUT_CLASSIFICATION	1.5056060965604924E-5	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999946756635035	WITHOUT_CLASSIFICATION	5.32433649642361E-6	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9999167448460051	WITHOUT_CLASSIFICATION	8.325515399489385E-5	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999963010004671	WITHOUT_CLASSIFICATION	3.6989995330005374E-6	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999339473094383	WITHOUT_CLASSIFICATION	6.605269056168925E-5	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999905920806321	WITHOUT_CLASSIFICATION	9.407919367927569E-6	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999888616735864	WITHOUT_CLASSIFICATION	1.1138326413696955E-5	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999976884372591	WITHOUT_CLASSIFICATION	2.3115627408592696E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993589666885	WITHOUT_CLASSIFICATION	6.410333114624537E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993589666885	WITHOUT_CLASSIFICATION	6.410333114624537E-7	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999979363670057	WITHOUT_CLASSIFICATION	2.0636329943042746E-6	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.999987364479063	WITHOUT_CLASSIFICATION	1.2635520936905854E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999930067913985	WITHOUT_CLASSIFICATION	6.993208601473302E-6	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999980217487117	WITHOUT_CLASSIFICATION	1.978251288248571E-6	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999828551663421	WITHOUT_CLASSIFICATION	1.714483365784343E-5	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.99998553541319	WITHOUT_CLASSIFICATION	1.4464586809950821E-5	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999996956558108	WITHOUT_CLASSIFICATION	3.0434418916490317E-7	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999991191914255	WITHOUT_CLASSIFICATION	8.808085746109135E-7	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999523685468809	WITHOUT_CLASSIFICATION	4.763145311916156E-5	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999954081111968	WITHOUT_CLASSIFICATION	4.59188880322701E-6	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999149903780499	WITHOUT_CLASSIFICATION	8.500962195011126E-5	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999973024199807	WITHOUT_CLASSIFICATION	2.6975800193250445E-6	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999948879686804	WITHOUT_CLASSIFICATION	5.112031319614433E-6	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999957503433735	WITHOUT_CLASSIFICATION	4.249656626539666E-6	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999814164662981	WITHOUT_CLASSIFICATION	1.8583533701851943E-5	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999487572625757	WITHOUT_CLASSIFICATION	5.1242737424285625E-5	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999487572625757	WITHOUT_CLASSIFICATION	5.1242737424285625E-5	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999487572625757	WITHOUT_CLASSIFICATION	5.1242737424285625E-5	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999927193982676	WITHOUT_CLASSIFICATION	7.280601732416438E-6	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999977155195795	WITHOUT_CLASSIFICATION	2.2844804204648564E-6	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999941559116617	WITHOUT_CLASSIFICATION	5.8440883382538205E-6	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999970372856481	WITHOUT_CLASSIFICATION	2.962714351898242E-6	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9998624722711682	WITHOUT_CLASSIFICATION	1.375277288318277E-4	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999899790821485	WITHOUT_CLASSIFICATION	1.0020917851491399E-5	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999932897180468	WITHOUT_CLASSIFICATION	6.7102819531780396E-6	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999992323221872	WITHOUT_CLASSIFICATION	7.676778127058834E-7	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999742678702459	WITHOUT_CLASSIFICATION	2.573212975410874E-5	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999863324857172	WITHOUT_CLASSIFICATION	1.366751428275728E-5	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999762533148939	WITHOUT_CLASSIFICATION	2.3746685106075074E-5	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999914462350795	WITHOUT_CLASSIFICATION	8.553764920487132E-6	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999977201252012	WITHOUT_CLASSIFICATION	2.2798747988219136E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993589666885	WITHOUT_CLASSIFICATION	6.410333114624537E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999993589666885	WITHOUT_CLASSIFICATION	6.410333114624537E-7	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999980114988187	WITHOUT_CLASSIFICATION	1.988501181326226E-6	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999339473094383	WITHOUT_CLASSIFICATION	6.605269056168925E-5	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.999987364479063	WITHOUT_CLASSIFICATION	1.2635520936905854E-5	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999980217487117	WITHOUT_CLASSIFICATION	1.978251288248571E-6	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.99998553541319	WITHOUT_CLASSIFICATION	1.4464586809950821E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999930067913985	WITHOUT_CLASSIFICATION	6.993208601473302E-6	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999996956558108	WITHOUT_CLASSIFICATION	3.0434418916490317E-7	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999954081111968	WITHOUT_CLASSIFICATION	4.59188880322701E-6	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999523685468809	WITHOUT_CLASSIFICATION	4.763145311916156E-5	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999973024199807	WITHOUT_CLASSIFICATION	2.6975800193250445E-6	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999870324640137	WITHOUT_CLASSIFICATION	1.296753598636035E-5	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999630988179595	WITHOUT_CLASSIFICATION	3.690118204039924E-5	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999920346135307	WITHOUT_CLASSIFICATION	7.965386469379223E-6	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999983102137436	WITHOUT_CLASSIFICATION	1.6897862563502376E-6	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999952769871547	WITHOUT_CLASSIFICATION	4.7230128453571305E-6	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999281736371252	WITHOUT_CLASSIFICATION	7.182636287477461E-5	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999955022718338	WITHOUT_CLASSIFICATION	4.4977281662315255E-6	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999827048242942	WITHOUT_CLASSIFICATION	1.7295175705809836E-5	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999921047708373	WITHOUT_CLASSIFICATION	7.895229162626854E-6	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.999998832389123	WITHOUT_CLASSIFICATION	1.1676108769359014E-6	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999773022374978	WITHOUT_CLASSIFICATION	2.269776250223899E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999950931056288	WITHOUT_CLASSIFICATION	4.906894371144389E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999782245748238	WITHOUT_CLASSIFICATION	2.1775425176208142E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999887378427127	WITHOUT_CLASSIFICATION	1.1262157287248838E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999771505116294	WITHOUT_CLASSIFICATION	2.2849488370610968E-5	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999980414305203	WITHOUT_CLASSIFICATION	1.9585694796483505E-6	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999957628413878	WITHOUT_CLASSIFICATION	4.23715861220375E-6	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999062560916419	WITHOUT_CLASSIFICATION	9.374390835809668E-5	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999698669192528	WITHOUT_CLASSIFICATION	3.0133080747122704E-5	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999313426167754	WITHOUT_CLASSIFICATION	6.865738322463817E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999789876946779	WITHOUT_CLASSIFICATION	2.101230532218133E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999981671732359	WITHOUT_CLASSIFICATION	1.8328267642227721E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999981671732359	WITHOUT_CLASSIFICATION	1.8328267642227721E-6	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999824668656344	WITHOUT_CLASSIFICATION	1.7533134365609804E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999990772304327	WITHOUT_CLASSIFICATION	9.227695673231393E-7	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997409752302909	WITHOUT_CLASSIFICATION	2.59024769709015E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997409752302909	WITHOUT_CLASSIFICATION	2.59024769709015E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997409752302909	WITHOUT_CLASSIFICATION	2.59024769709015E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9997936540258132	WITHOUT_CLASSIFICATION	2.0634597418681835E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9997936540258132	WITHOUT_CLASSIFICATION	2.0634597418681835E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9997936540258132	WITHOUT_CLASSIFICATION	2.0634597418681835E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9997936540258132	WITHOUT_CLASSIFICATION	2.0634597418681835E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996925841927533	WITHOUT_CLASSIFICATION	3.074158072466679E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996925841927533	WITHOUT_CLASSIFICATION	3.074158072466679E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996925841927533	WITHOUT_CLASSIFICATION	3.074158072466679E-4	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9996753789129457	WITHOUT_CLASSIFICATION	3.246210870543802E-4	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9996753789129457	WITHOUT_CLASSIFICATION	3.246210870543802E-4	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9996485124523902	WITHOUT_CLASSIFICATION	3.5148754760989937E-4	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9996823101426164	WITHOUT_CLASSIFICATION	3.1768985738357013E-4	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999990772304327	WITHOUT_CLASSIFICATION	9.227695673231393E-7	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999994868561699	WITHOUT_CLASSIFICATION	5.131438299991885E-7	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997409752302909	WITHOUT_CLASSIFICATION	2.59024769709015E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997409752302909	WITHOUT_CLASSIFICATION	2.59024769709015E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9997936540258132	WITHOUT_CLASSIFICATION	2.0634597418681835E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9997936540258132	WITHOUT_CLASSIFICATION	2.0634597418681835E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9997936540258132	WITHOUT_CLASSIFICATION	2.0634597418681835E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996925841927533	WITHOUT_CLASSIFICATION	3.074158072466679E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9996925841927533	WITHOUT_CLASSIFICATION	3.074158072466679E-4	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9996753789129457	WITHOUT_CLASSIFICATION	3.246210870543802E-4	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9996823101426164	WITHOUT_CLASSIFICATION	3.1768985738357013E-4	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999915467648252	WITHOUT_CLASSIFICATION	8.45323517492962E-6	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999915467648252	WITHOUT_CLASSIFICATION	8.45323517492962E-6	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999913125304392	WITHOUT_CLASSIFICATION	8.687469560887477E-6	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999913125304392	WITHOUT_CLASSIFICATION	8.687469560887477E-6	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999619065438459	WITHOUT_CLASSIFICATION	3.80934561542031E-5	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999619065438459	WITHOUT_CLASSIFICATION	3.80934561542031E-5	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999829334985398	WITHOUT_CLASSIFICATION	1.7066501460103533E-5	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999977463918994	WITHOUT_CLASSIFICATION	2.253608100630274E-6	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999977463918994	WITHOUT_CLASSIFICATION	2.253608100630274E-6	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999839633882924	WITHOUT_CLASSIFICATION	1.603661170760488E-5	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999839633882924	WITHOUT_CLASSIFICATION	1.603661170760488E-5	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999659174952411	WITHOUT_CLASSIFICATION	3.408250475892204E-5	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999941304612947	WITHOUT_CLASSIFICATION	5.8695387052977604E-6	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999941304612947	WITHOUT_CLASSIFICATION	5.8695387052977604E-6	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999999619035483	WITHOUT_CLASSIFICATION	3.809645162928983E-8	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999839111547904	WITHOUT_CLASSIFICATION	1.6088845209692954E-5	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999901614456506	WITHOUT_CLASSIFICATION	9.838554349406819E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9997936540258132	WITHOUT_CLASSIFICATION	2.0634597418681835E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9997936540258132	WITHOUT_CLASSIFICATION	2.0634597418681835E-4	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999999619035483	WITHOUT_CLASSIFICATION	3.809645162928983E-8	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999745949324351	WITHOUT_CLASSIFICATION	2.540506756479269E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999884145703442	WITHOUT_CLASSIFICATION	1.1585429655756555E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999884145703442	WITHOUT_CLASSIFICATION	1.1585429655756555E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999884145703442	WITHOUT_CLASSIFICATION	1.1585429655756555E-5	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999627896658279	WITHOUT_CLASSIFICATION	3.721033417217794E-5	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999587495191894	WITHOUT_CLASSIFICATION	4.1250480810618004E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9997854652594369	WITHOUT_CLASSIFICATION	2.1453474056303746E-4	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9997854652594369	WITHOUT_CLASSIFICATION	2.1453474056303746E-4	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999085108927176	WITHOUT_CLASSIFICATION	9.148910728235451E-5	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999771407964815	WITHOUT_CLASSIFICATION	2.2859203518508076E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.999985887079205	WITHOUT_CLASSIFICATION	1.4112920795076722E-5	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999878072864213	WITHOUT_CLASSIFICATION	1.2192713578607295E-5	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.999948601644152	WITHOUT_CLASSIFICATION	5.139835584801529E-5	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999868300481422	WITHOUT_CLASSIFICATION	1.3169951857790025E-5	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999868300481422	WITHOUT_CLASSIFICATION	1.3169951857790025E-5	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.999992953903054	WITHOUT_CLASSIFICATION	7.046096946072596E-6	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9996398406719862	WITHOUT_CLASSIFICATION	3.6015932801383845E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9996398406719862	WITHOUT_CLASSIFICATION	3.6015932801383845E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9997936540258132	WITHOUT_CLASSIFICATION	2.0634597418681835E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999884145703442	WITHOUT_CLASSIFICATION	1.1585429655756555E-5	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999587495191894	WITHOUT_CLASSIFICATION	4.1250480810618004E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9997854652594369	WITHOUT_CLASSIFICATION	2.1453474056303746E-4	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999085108927176	WITHOUT_CLASSIFICATION	9.148910728235451E-5	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999771407964815	WITHOUT_CLASSIFICATION	2.2859203518508076E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.999985887079205	WITHOUT_CLASSIFICATION	1.4112920795076722E-5	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999878072864213	WITHOUT_CLASSIFICATION	1.2192713578607295E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9996398406719862	WITHOUT_CLASSIFICATION	3.6015932801383845E-4	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999955106312719	WITHOUT_CLASSIFICATION	4.489368728152495E-6	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999983607525536	WITHOUT_CLASSIFICATION	1.6392474465187722E-6	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999982878450856	WITHOUT_CLASSIFICATION	1.7121549143190504E-6	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999375884034696	WITHOUT_CLASSIFICATION	6.241159653041817E-5	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999982208044805	WITHOUT_CLASSIFICATION	1.7791955194860732E-6	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999989227008078	WITHOUT_CLASSIFICATION	1.0772991921694276E-6	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999923454978076	WITHOUT_CLASSIFICATION	7.654502192292859E-6	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999923454978076	WITHOUT_CLASSIFICATION	7.654502192292859E-6	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999501189655895	WITHOUT_CLASSIFICATION	4.988103441048068E-5	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9998745894105562	WITHOUT_CLASSIFICATION	1.254105894439332E-4	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9998938640328516	WITHOUT_CLASSIFICATION	1.0613596714835854E-4	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.999885659293468	WITHOUT_CLASSIFICATION	1.1434070653203003E-4	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9997924676344869	WITHOUT_CLASSIFICATION	2.0753236551296773E-4	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9997924676344869	WITHOUT_CLASSIFICATION	2.0753236551296773E-4	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9995245596003511	WITHOUT_CLASSIFICATION	4.7544039964884883E-4	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999226040261767	WITHOUT_CLASSIFICATION	7.739597382326668E-5	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9992637495525145	WITHOUT_CLASSIFICATION	7.362504474854837E-4	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9992637495525145	WITHOUT_CLASSIFICATION	7.362504474854837E-4	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9998871943431257	WITHOUT_CLASSIFICATION	1.1280565687431372E-4	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.999788439621847	WITHOUT_CLASSIFICATION	2.11560378152932E-4	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.999948601644152	WITHOUT_CLASSIFICATION	5.139835584801529E-5	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999915425214193	WITHOUT_CLASSIFICATION	8.457478580742292E-6	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999993135456396	WITHOUT_CLASSIFICATION	6.864543603490661E-7	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999874892379199	WITHOUT_CLASSIFICATION	1.2510762079941252E-5	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999959719267401	WITHOUT_CLASSIFICATION	4.028073259909857E-6	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.9999871344319676	WITHOUT_CLASSIFICATION	1.2865568032283038E-5	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.999997119883417	WITHOUT_CLASSIFICATION	2.8801165830672484E-6	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999934163599158	WITHOUT_CLASSIFICATION	6.5836400842705145E-6	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999890128077401	WITHOUT_CLASSIFICATION	1.0987192259958848E-5	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999976506268416	WITHOUT_CLASSIFICATION	2.3493731583093137E-6	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999976506268416	WITHOUT_CLASSIFICATION	2.3493731583093137E-6	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999718991116028	WITHOUT_CLASSIFICATION	2.810088839720631E-5	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999718991116028	WITHOUT_CLASSIFICATION	2.810088839720631E-5	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999995828699475	WITHOUT_CLASSIFICATION	4.1713005254450804E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999977746059767	WITHOUT_CLASSIFICATION	2.2253940232763364E-6	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999977746059767	WITHOUT_CLASSIFICATION	2.2253940232763364E-6	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999977746059767	WITHOUT_CLASSIFICATION	2.2253940232763364E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999741651003095	WITHOUT_CLASSIFICATION	2.5834899690578524E-5	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999981083801299	WITHOUT_CLASSIFICATION	1.891619870159684E-6	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999981083801299	WITHOUT_CLASSIFICATION	1.891619870159684E-6	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999965614560239	WITHOUT_CLASSIFICATION	3.438543976005454E-6	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999517061148457	WITHOUT_CLASSIFICATION	4.829388515427208E-5	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999657009497158	WITHOUT_CLASSIFICATION	3.429905028424012E-5	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9999026823068342	WITHOUT_CLASSIFICATION	9.731769316579656E-5	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999863627969565	WITHOUT_CLASSIFICATION	1.3637203043483096E-5	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9999526931712629	WITHOUT_CLASSIFICATION	4.730682873711056E-5	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9995606154244032	WITHOUT_CLASSIFICATION	4.39384575596719E-4	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999782245748238	WITHOUT_CLASSIFICATION	2.1775425176208142E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999782245748238	WITHOUT_CLASSIFICATION	2.1775425176208142E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999741651003095	WITHOUT_CLASSIFICATION	2.5834899690578524E-5	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999965614560239	WITHOUT_CLASSIFICATION	3.438543976005454E-6	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999283048371	WITHOUT_CLASSIFICATION	7.169516287349927E-8	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999517061148457	WITHOUT_CLASSIFICATION	4.829388515427208E-5	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999657009497158	WITHOUT_CLASSIFICATION	3.429905028424012E-5	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999882866038967	WITHOUT_CLASSIFICATION	1.1713396103278837E-5	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9999857607661926	WITHOUT_CLASSIFICATION	1.4239233807395838E-5	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999969314492317	WITHOUT_CLASSIFICATION	3.068550768145014E-6	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.9997782270866784	WITHOUT_CLASSIFICATION	2.2177291332155602E-4	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999965301602017	WITHOUT_CLASSIFICATION	3.469839798213451E-6	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999956845961969	WITHOUT_CLASSIFICATION	4.315403803128942E-6	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999843428050988	WITHOUT_CLASSIFICATION	1.5657194901067527E-5	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999882866038967	WITHOUT_CLASSIFICATION	1.1713396103278837E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9993937379961857	WITHOUT_CLASSIFICATION	6.062620038143578E-4	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9993937379961857	WITHOUT_CLASSIFICATION	6.062620038143578E-4	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999777468754155	WITHOUT_CLASSIFICATION	2.2253124584479023E-5	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999890146231833	WITHOUT_CLASSIFICATION	1.0985376816550516E-5	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9993555256646155	WITHOUT_CLASSIFICATION	6.444743353844824E-4	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9996933212402006	WITHOUT_CLASSIFICATION	3.0667875979945274E-4	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9998592399579532	WITHOUT_CLASSIFICATION	1.4076004204680527E-4	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999286101823691	WITHOUT_CLASSIFICATION	7.138981763087852E-5	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999932008235698	WITHOUT_CLASSIFICATION	6.799176430246865E-6	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9998419431417277	WITHOUT_CLASSIFICATION	1.5805685827222465E-4	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999977883758653	WITHOUT_CLASSIFICATION	2.2116241347802065E-6	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9999961760777573	WITHOUT_CLASSIFICATION	3.8239222427377E-6	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999911356542434	WITHOUT_CLASSIFICATION	8.86434575662375E-6	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9996933212402006	WITHOUT_CLASSIFICATION	3.0667875979945274E-4	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9998592399579532	WITHOUT_CLASSIFICATION	1.4076004204680527E-4	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.999988968978172	WITHOUT_CLASSIFICATION	1.1031021827922104E-5	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9999919938579377	WITHOUT_CLASSIFICATION	8.00614206226429E-6	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999995625597977	WITHOUT_CLASSIFICATION	4.374402023291652E-7	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999927027535498	WITHOUT_CLASSIFICATION	7.297246450242583E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999764611561579	WITHOUT_CLASSIFICATION	2.3538843842101457E-5	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999866273646454	WITHOUT_CLASSIFICATION	1.3372635354583645E-5	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9993350137817449	WITHOUT_CLASSIFICATION	6.64986218255056E-4	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9999937236949196	WITHOUT_CLASSIFICATION	6.2763050803744065E-6	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999845602628705	WITHOUT_CLASSIFICATION	1.543973712952126E-5	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999654949732316	WITHOUT_CLASSIFICATION	3.4505026768395296E-5	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999956845517747	WITHOUT_CLASSIFICATION	4.315448225330548E-6	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9999023331713044	WITHOUT_CLASSIFICATION	9.766682869560522E-5	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999403198919968	WITHOUT_CLASSIFICATION	5.968010800312397E-5	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999982589341438	WITHOUT_CLASSIFICATION	1.7410658561937941E-6	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.99999927605376	WITHOUT_CLASSIFICATION	7.23946239960594E-7	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999967186180674	WITHOUT_CLASSIFICATION	3.2813819326080677E-6	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9998810189088592	WITHOUT_CLASSIFICATION	1.1898109114086545E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999319644270784	WITHOUT_CLASSIFICATION	6.803557292156857E-5	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.99999196744457	WITHOUT_CLASSIFICATION	8.032555430004736E-6	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.999985979032317	WITHOUT_CLASSIFICATION	1.4020967683109536E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9998810189088592	WITHOUT_CLASSIFICATION	1.1898109114086545E-4	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999319644270784	WITHOUT_CLASSIFICATION	6.803557292156857E-5	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.99999196744457	WITHOUT_CLASSIFICATION	8.032555430004736E-6	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9999523008360234	WITHOUT_CLASSIFICATION	4.769916397667016E-5	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.999997638192139	WITHOUT_CLASSIFICATION	2.361807860847701E-6	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999996451405557	WITHOUT_CLASSIFICATION	3.5485944417714443E-7	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9998615563685227	WITHOUT_CLASSIFICATION	1.3844363147727496E-4	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999317281448937	WITHOUT_CLASSIFICATION	6.827185510628058E-5	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999563774516655	WITHOUT_CLASSIFICATION	4.362254833444442E-5	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999972477495043	WITHOUT_CLASSIFICATION	2.7522504957188053E-6	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.999997824440194	WITHOUT_CLASSIFICATION	2.1755598060286196E-6	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9999970131450254	WITHOUT_CLASSIFICATION	2.9868549744903996E-6	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9999919691823947	WITHOUT_CLASSIFICATION	8.030817605315832E-6	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9820293415892094	WITHOUT_CLASSIFICATION	0.017970658410790544	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999993224536777	WITHOUT_CLASSIFICATION	6.77546322251693E-7	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999990992486661	WITHOUT_CLASSIFICATION	9.007513337972314E-7	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.999940964561766	WITHOUT_CLASSIFICATION	5.903543823411284E-5	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.999986962988431	WITHOUT_CLASSIFICATION	1.3037011568957952E-5	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999881642693378	WITHOUT_CLASSIFICATION	1.1835730662227891E-5	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999977711102976	WITHOUT_CLASSIFICATION	2.2288897023789563E-6	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999935334248526	WITHOUT_CLASSIFICATION	6.466575147372989E-6	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999997974261926	WITHOUT_CLASSIFICATION	2.0257380740071928E-6	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999946353053722	WITHOUT_CLASSIFICATION	5.364694627741267E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999958801467217	WITHOUT_CLASSIFICATION	4.119853278259914E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999893589966655	WITHOUT_CLASSIFICATION	1.064100333435916E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999893589966655	WITHOUT_CLASSIFICATION	1.064100333435916E-5	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999882085707875	WITHOUT_CLASSIFICATION	1.1791429212353784E-5	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999882085707875	WITHOUT_CLASSIFICATION	1.1791429212353784E-5	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999597644423526	WITHOUT_CLASSIFICATION	4.023555764743924E-5	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999597644423526	WITHOUT_CLASSIFICATION	4.023555764743924E-5	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.999868080764982	WITHOUT_CLASSIFICATION	1.3191923501795045E-4	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999973266299027	WITHOUT_CLASSIFICATION	2.673370097311754E-6	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999988802838131	WITHOUT_CLASSIFICATION	1.1197161868430135E-6	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999981696540198	WITHOUT_CLASSIFICATION	1.8303459802806506E-6	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999844066732423	WITHOUT_CLASSIFICATION	1.5593326757722918E-5	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999184226454215	WITHOUT_CLASSIFICATION	8.157735457857002E-5	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999977161361687	WITHOUT_CLASSIFICATION	2.283863831230784E-6	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9999780722697986	WITHOUT_CLASSIFICATION	2.1927730201447175E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999782245748238	WITHOUT_CLASSIFICATION	2.1775425176208142E-5	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.999868080764982	WITHOUT_CLASSIFICATION	1.3191923501795045E-4	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999973266299027	WITHOUT_CLASSIFICATION	2.673370097311754E-6	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999988802838131	WITHOUT_CLASSIFICATION	1.1197161868430135E-6	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999844066732423	WITHOUT_CLASSIFICATION	1.5593326757722918E-5	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999184226454215	WITHOUT_CLASSIFICATION	8.157735457857002E-5	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.999991632651314	WITHOUT_CLASSIFICATION	8.367348686105129E-6	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9999972291654026	WITHOUT_CLASSIFICATION	2.7708345973922506E-6	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999978867145701	WITHOUT_CLASSIFICATION	2.1132854297936713E-6	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999978867145701	WITHOUT_CLASSIFICATION	2.1132854297936713E-6	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999977580459628	WITHOUT_CLASSIFICATION	2.241954037264209E-6	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999990001226731	WITHOUT_CLASSIFICATION	9.998773269606964E-7	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999897113952751	WITHOUT_CLASSIFICATION	1.0288604724938929E-5	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999904581164542	WITHOUT_CLASSIFICATION	9.541883545777974E-6	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999904581164542	WITHOUT_CLASSIFICATION	9.541883545777974E-6	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999951036609263	WITHOUT_CLASSIFICATION	4.896339073646621E-6	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999167828433	WITHOUT_CLASSIFICATION	8.32171566929102E-8	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999899111850175	WITHOUT_CLASSIFICATION	1.0088814982556768E-5	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999777410594909	WITHOUT_CLASSIFICATION	2.2258940509083502E-5	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999992411245971	WITHOUT_CLASSIFICATION	7.588754028367225E-7	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999887378427127	WITHOUT_CLASSIFICATION	1.1262157287248838E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999771505116294	WITHOUT_CLASSIFICATION	2.2849488370610968E-5	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999980414305203	WITHOUT_CLASSIFICATION	1.9585694796483505E-6	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999957628413878	WITHOUT_CLASSIFICATION	4.23715861220375E-6	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999313426167754	WITHOUT_CLASSIFICATION	6.865738322463817E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999789876946779	WITHOUT_CLASSIFICATION	2.101230532218133E-5	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999951036609263	WITHOUT_CLASSIFICATION	4.896339073646621E-6	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999167828433	WITHOUT_CLASSIFICATION	8.32171566929102E-8	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999777410594909	WITHOUT_CLASSIFICATION	2.2258940509083502E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999940104362347	WITHOUT_CLASSIFICATION	5.989563765248074E-6	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999897113952751	WITHOUT_CLASSIFICATION	1.0288604724938929E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999897113952751	WITHOUT_CLASSIFICATION	1.0288604724938929E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999911356542434	WITHOUT_CLASSIFICATION	8.86434575662375E-6	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999911356542434	WITHOUT_CLASSIFICATION	8.86434575662375E-6	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999996630594989	WITHOUT_CLASSIFICATION	3.369405011015312E-7	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999996630594989	WITHOUT_CLASSIFICATION	3.369405011015312E-7	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999845699875164	WITHOUT_CLASSIFICATION	1.5430012483624953E-5	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999963210986441	WITHOUT_CLASSIFICATION	3.6789013558252976E-6	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999748078146771	WITHOUT_CLASSIFICATION	2.519218532284774E-5	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999956066737933	WITHOUT_CLASSIFICATION	4.393326206808405E-6	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999927326118131	WITHOUT_CLASSIFICATION	7.267388186891618E-6	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999887724593406	WITHOUT_CLASSIFICATION	1.1227540659282189E-5	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.999999037139997	WITHOUT_CLASSIFICATION	9.628600029347785E-7	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999688802172005	WITHOUT_CLASSIFICATION	3.111978279941599E-5	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999967443449421	WITHOUT_CLASSIFICATION	3.2556550578777776E-6	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999942715298878	WITHOUT_CLASSIFICATION	5.728470112209998E-6	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999980140143827	WITHOUT_CLASSIFICATION	1.9859856174020454E-6	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9999986831495243	WITHOUT_CLASSIFICATION	1.316850475647675E-6	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999989541189908	WITHOUT_CLASSIFICATION	1.045881009228001E-6	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999998844702792	WITHOUT_CLASSIFICATION	1.1552972079138329E-7	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9994158383174634	WITHOUT_CLASSIFICATION	5.84161682536562E-4	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9999337617683364	WITHOUT_CLASSIFICATION	6.623823166362242E-5	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9999975635526939	WITHOUT_CLASSIFICATION	2.4364473062735344E-6	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999976599155095	WITHOUT_CLASSIFICATION	2.340084490416622E-6	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9998081779672529	WITHOUT_CLASSIFICATION	1.9182203274705712E-4	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999771505116294	WITHOUT_CLASSIFICATION	2.2849488370610968E-5	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999957628413878	WITHOUT_CLASSIFICATION	4.23715861220375E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999981671732359	WITHOUT_CLASSIFICATION	1.8328267642227721E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9997854652594369	WITHOUT_CLASSIFICATION	2.1453474056303746E-4	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9997854652594369	WITHOUT_CLASSIFICATION	2.1453474056303746E-4	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999940104362347	WITHOUT_CLASSIFICATION	5.989563765248074E-6	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999897113952751	WITHOUT_CLASSIFICATION	1.0288604724938929E-5	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999911356542434	WITHOUT_CLASSIFICATION	8.86434575662375E-6	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999996630594989	WITHOUT_CLASSIFICATION	3.369405011015312E-7	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999983406958279	WITHOUT_CLASSIFICATION	1.6593041720483601E-6	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9998496263522604	WITHOUT_CLASSIFICATION	1.503736477396844E-4	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999968970528129	WITHOUT_CLASSIFICATION	3.102947187136784E-6	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999970314189461	WITHOUT_CLASSIFICATION	2.968581053811008E-6	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999991412359015	WITHOUT_CLASSIFICATION	8.587640985348271E-7	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999991412359015	WITHOUT_CLASSIFICATION	8.587640985348271E-7	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999997434289892	WITHOUT_CLASSIFICATION	2.565710107670719E-7	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999956237737458	WITHOUT_CLASSIFICATION	4.37622625415462E-6	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.999952006062932	WITHOUT_CLASSIFICATION	4.799393706803183E-5	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999967369147346	WITHOUT_CLASSIFICATION	3.263085265364296E-6	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999905753785815	WITHOUT_CLASSIFICATION	9.424621418395741E-6	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999905753785815	WITHOUT_CLASSIFICATION	9.424621418395741E-6	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.999935884722525	WITHOUT_CLASSIFICATION	6.411527747496696E-5	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9999750917516007	WITHOUT_CLASSIFICATION	2.4908248399239392E-5	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999915614107856	WITHOUT_CLASSIFICATION	8.438589214355114E-6	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9998651371512824	WITHOUT_CLASSIFICATION	1.348628487175424E-4	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999872254718366	WITHOUT_CLASSIFICATION	1.2774528163353498E-5	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999976304363818	WITHOUT_CLASSIFICATION	2.369563618168693E-6	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999756562887626	WITHOUT_CLASSIFICATION	2.43437112374406E-5	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999870875592792	WITHOUT_CLASSIFICATION	1.2912440720868623E-5	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999894060083806	WITHOUT_CLASSIFICATION	1.0593991619517447E-5	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.999978237841219	WITHOUT_CLASSIFICATION	2.176215878099158E-5	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999974214782771	WITHOUT_CLASSIFICATION	2.5785217228847646E-6	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999529926290199	WITHOUT_CLASSIFICATION	4.700737097996535E-5	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999999707172876	WITHOUT_CLASSIFICATION	2.9282712366608974E-8	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999973562221299	WITHOUT_CLASSIFICATION	2.6437778700459765E-6	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999922307421576	WITHOUT_CLASSIFICATION	7.76925784241446E-6	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999752933696815	WITHOUT_CLASSIFICATION	2.4706630318453228E-5	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999997812867273	WITHOUT_CLASSIFICATION	2.1871327280244136E-7	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999940334206673	WITHOUT_CLASSIFICATION	5.966579332673587E-6	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999995543134771	WITHOUT_CLASSIFICATION	4.4568652296587257E-7	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999836549517677	WITHOUT_CLASSIFICATION	1.6345048232324073E-5	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999916152250296	WITHOUT_CLASSIFICATION	8.384774970550595E-6	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999956166910101	WITHOUT_CLASSIFICATION	4.383308989921853E-6	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999956166910101	WITHOUT_CLASSIFICATION	4.383308989921853E-6	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999776641872725	WITHOUT_CLASSIFICATION	2.233581272747521E-5	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.999998585280948	WITHOUT_CLASSIFICATION	1.4147190519963775E-6	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999998993097386	WITHOUT_CLASSIFICATION	1.0069026139633692E-6	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999998993097386	WITHOUT_CLASSIFICATION	1.0069026139633692E-6	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999895842338089	WITHOUT_CLASSIFICATION	1.0415766191157902E-5	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999988460781009	WITHOUT_CLASSIFICATION	1.1539218990945376E-6	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999759060772039	WITHOUT_CLASSIFICATION	2.4093922796068794E-5	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999988475538775	WITHOUT_CLASSIFICATION	1.1524461225871944E-6	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999988475538775	WITHOUT_CLASSIFICATION	1.1524461225871944E-6	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9998413517965122	WITHOUT_CLASSIFICATION	1.586482034878634E-4	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.999999838274262	WITHOUT_CLASSIFICATION	1.6172573809673813E-7	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999994071234005	WITHOUT_CLASSIFICATION	5.928765995239037E-7	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999941487117786	WITHOUT_CLASSIFICATION	5.851288221370003E-6	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999951272931414	WITHOUT_CLASSIFICATION	4.872706858501148E-6	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999769035737861	WITHOUT_CLASSIFICATION	2.309642621393957E-5	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999976960260929	WITHOUT_CLASSIFICATION	2.3039739070924106E-6	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.999995427803224	WITHOUT_CLASSIFICATION	4.572196775934771E-6	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9999954568308501	WITHOUT_CLASSIFICATION	4.543169149833349E-6	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.999987286826899	WITHOUT_CLASSIFICATION	1.271317310100587E-5	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999956476498515	WITHOUT_CLASSIFICATION	4.352350148468337E-6	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999880108505033	WITHOUT_CLASSIFICATION	1.1989149496731356E-5	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.99999737208351	WITHOUT_CLASSIFICATION	2.627916490047813E-6	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999979072148989	WITHOUT_CLASSIFICATION	2.0927851012100144E-6	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999874724424778	WITHOUT_CLASSIFICATION	1.2527557522348621E-5	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999996100681062	WITHOUT_CLASSIFICATION	3.8993189378513976E-7	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999984380172121	WITHOUT_CLASSIFICATION	1.5619827878870794E-6	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999882686124867	WITHOUT_CLASSIFICATION	1.1731387513284851E-5	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999871056127084	WITHOUT_CLASSIFICATION	1.2894387291603897E-5	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999994557580315	WITHOUT_CLASSIFICATION	5.442419685699567E-7	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9999936290778365	WITHOUT_CLASSIFICATION	6.370922163459787E-6	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9999918247677549	WITHOUT_CLASSIFICATION	8.175232245020853E-6	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999967744601138	WITHOUT_CLASSIFICATION	3.2255398861728256E-6	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999950886289454	WITHOUT_CLASSIFICATION	4.911371054718652E-6	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999284891896043	WITHOUT_CLASSIFICATION	7.151081039569437E-5	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.999999575598465	WITHOUT_CLASSIFICATION	4.244015351482894E-7	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999315396568804	WITHOUT_CLASSIFICATION	6.846034311955536E-5	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999887602290558	WITHOUT_CLASSIFICATION	1.1239770944213015E-5	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999912756742637	WITHOUT_CLASSIFICATION	8.724325736310598E-6	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999994019017394	WITHOUT_CLASSIFICATION	5.980982605707183E-7	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999961171540012	WITHOUT_CLASSIFICATION	3.882845998771237E-6	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999979072148989	WITHOUT_CLASSIFICATION	2.0927851012100144E-6	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999887602290558	WITHOUT_CLASSIFICATION	1.1239770944213015E-5	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999912756742637	WITHOUT_CLASSIFICATION	8.724325736310598E-6	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999961171540012	WITHOUT_CLASSIFICATION	3.882845998771237E-6	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999896347729822	WITHOUT_CLASSIFICATION	1.0365227017768514E-5	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9999929900261292	WITHOUT_CLASSIFICATION	7.009973870832587E-6	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999947401898758	WITHOUT_CLASSIFICATION	5.259810124179599E-6	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999994806466987	WITHOUT_CLASSIFICATION	5.193533011717663E-7	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999901738940972	WITHOUT_CLASSIFICATION	9.82610590273099E-6	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999998272529346	WITHOUT_CLASSIFICATION	1.727470653791563E-7	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9999788307614121	WITHOUT_CLASSIFICATION	2.1169238587867694E-5	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9999919505697258	WITHOUT_CLASSIFICATION	8.049430274127651E-6	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9999897945747318	WITHOUT_CLASSIFICATION	1.0205425268136527E-5	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999945474253347	WITHOUT_CLASSIFICATION	5.452574665318376E-6	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999727211530092	WITHOUT_CLASSIFICATION	2.7278846990851006E-5	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999727211530092	WITHOUT_CLASSIFICATION	2.7278846990851006E-5	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999995062725094	WITHOUT_CLASSIFICATION	4.937274906362451E-7	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999994937830121	WITHOUT_CLASSIFICATION	5.06216987864241E-7	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999991408383887	WITHOUT_CLASSIFICATION	8.591616113669175E-7	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999855120330547	WITHOUT_CLASSIFICATION	1.4487966945173899E-5	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999981891718668	WITHOUT_CLASSIFICATION	1.8108281332760165E-6	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999960813378077	WITHOUT_CLASSIFICATION	3.918662192342437E-6	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999990721137707	WITHOUT_CLASSIFICATION	9.278862292292932E-7	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999942224195967	WITHOUT_CLASSIFICATION	5.777580403346805E-6	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.999999477405313	WITHOUT_CLASSIFICATION	5.225946869044149E-7	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999982172997399	WITHOUT_CLASSIFICATION	1.7827002601527984E-6	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999927127057723	WITHOUT_CLASSIFICATION	7.287294227652744E-6	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999928267324754	WITHOUT_CLASSIFICATION	7.173267524579784E-6	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999878503977038	WITHOUT_CLASSIFICATION	1.2149602296256477E-5	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9997185684374293	WITHOUT_CLASSIFICATION	2.814315625706721E-4	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9999600960729329	WITHOUT_CLASSIFICATION	3.990392706717581E-5	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999819685437397	WITHOUT_CLASSIFICATION	1.803145626033765E-5	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9999903563090313	WITHOUT_CLASSIFICATION	9.643690968794857E-6	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.999990582949906	WITHOUT_CLASSIFICATION	9.417050093996063E-6	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9999913150201944	WITHOUT_CLASSIFICATION	8.68497980559811E-6	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9996443808477411	WITHOUT_CLASSIFICATION	3.556191522589111E-4	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9999454556853425	WITHOUT_CLASSIFICATION	5.45443146573607E-5	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9999867183139196	WITHOUT_CLASSIFICATION	1.328168608041397E-5	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999675262458636	WITHOUT_CLASSIFICATION	3.2473754136454475E-5	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9999854170301125	WITHOUT_CLASSIFICATION	1.4582969887581412E-5	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999883868135069	WITHOUT_CLASSIFICATION	1.1613186493041838E-5	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9999726933556008	WITHOUT_CLASSIFICATION	2.7306644399243238E-5	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999997512425783	WITHOUT_CLASSIFICATION	2.487574216474864E-7	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999986823262829	WITHOUT_CLASSIFICATION	1.3176737171583534E-6	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.9999837517702157	WITHOUT_CLASSIFICATION	1.6248229784295986E-5	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999988459326414	WITHOUT_CLASSIFICATION	1.1540673584782258E-6	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999991755277394	WITHOUT_CLASSIFICATION	8.244722605470347E-7	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9999972854959647	WITHOUT_CLASSIFICATION	2.7145040352821733E-6	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999946288032416	WITHOUT_CLASSIFICATION	5.3711967583181615E-6	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999920925313933	WITHOUT_CLASSIFICATION	7.907468606582185E-6	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.999980362313817	WITHOUT_CLASSIFICATION	1.9637686182949476E-5	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.999999323846851	WITHOUT_CLASSIFICATION	6.761531490983656E-7	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999903510620165	WITHOUT_CLASSIFICATION	9.64893798358184E-6	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999997912415296	WITHOUT_CLASSIFICATION	2.0875847050070768E-7	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999994117882972	WITHOUT_CLASSIFICATION	5.882117027749944E-7	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999997719348962	WITHOUT_CLASSIFICATION	2.2806510377381028E-7	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999994341546325	WITHOUT_CLASSIFICATION	5.658453674251896E-7	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999969649995357	WITHOUT_CLASSIFICATION	3.0350004642237045E-6	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.999989766300461	WITHOUT_CLASSIFICATION	1.0233699539059127E-5	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999997439172839	WITHOUT_CLASSIFICATION	2.560827160603166E-7	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999391731000971	WITHOUT_CLASSIFICATION	6.0826899902908576E-5	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999937562957102	WITHOUT_CLASSIFICATION	6.243704289863762E-6	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999980431803783	WITHOUT_CLASSIFICATION	1.9568196216103956E-6	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999998757760986	WITHOUT_CLASSIFICATION	1.242239014189093E-7	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999976380928803	WITHOUT_CLASSIFICATION	2.3619071196486437E-6	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999982622377963	WITHOUT_CLASSIFICATION	1.7377622036883057E-6	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999757658242489	WITHOUT_CLASSIFICATION	2.4234175751099206E-5	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999997902663089	WITHOUT_CLASSIFICATION	2.0973369110890624E-7	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999777617330887	WITHOUT_CLASSIFICATION	2.223826691133335E-5	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999952846575977	WITHOUT_CLASSIFICATION	4.715342402393016E-6	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.999995418521195	WITHOUT_CLASSIFICATION	4.581478804966732E-6	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999935528584645	WITHOUT_CLASSIFICATION	6.44714153544462E-6	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999910082114448	WITHOUT_CLASSIFICATION	8.99178855520908E-6	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9998473769675614	WITHOUT_CLASSIFICATION	1.526230324384693E-4	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9998976504444157	WITHOUT_CLASSIFICATION	1.023495555842903E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999954925426202	WITHOUT_CLASSIFICATION	4.507457379806081E-6	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999954925426202	WITHOUT_CLASSIFICATION	4.507457379806081E-6	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999986305946273	WITHOUT_CLASSIFICATION	1.3694053725532512E-6	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999963417678175	WITHOUT_CLASSIFICATION	3.6582321825188153E-6	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999975471332238	WITHOUT_CLASSIFICATION	2.4528667763474762E-6	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999967369431522	WITHOUT_CLASSIFICATION	3.2630568477882857E-6	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999941069856313	WITHOUT_CLASSIFICATION	5.8930143687565535E-6	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999854563921521	WITHOUT_CLASSIFICATION	1.4543607847900158E-5	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9998921345251796	WITHOUT_CLASSIFICATION	1.0786547482035351E-4	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999732668819744	WITHOUT_CLASSIFICATION	2.6733118025649146E-5	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999986225475018	WITHOUT_CLASSIFICATION	1.3774524981368452E-6	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999927645404951	WITHOUT_CLASSIFICATION	7.235459504944621E-6	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999970320925472	WITHOUT_CLASSIFICATION	2.967907452824387E-6	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9999963505949867	WITHOUT_CLASSIFICATION	3.6494050132798584E-6	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9998791246160768	WITHOUT_CLASSIFICATION	1.2087538392321779E-4	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9997129254018241	WITHOUT_CLASSIFICATION	2.8707459817599556E-4	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999733642213293	WITHOUT_CLASSIFICATION	2.663577867073891E-5	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999926766384535	WITHOUT_CLASSIFICATION	7.323361546592497E-6	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9998233719962907	WITHOUT_CLASSIFICATION	1.7662800370925327E-4	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999990966391192	WITHOUT_CLASSIFICATION	9.033608808490028E-7	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999994076857945	WITHOUT_CLASSIFICATION	5.923142053826152E-7	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.999998662921519	WITHOUT_CLASSIFICATION	1.3370784811218623E-6	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.999996870205743	WITHOUT_CLASSIFICATION	3.129794256993509E-6	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999995520143161	WITHOUT_CLASSIFICATION	4.479856838452819E-7	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999963715882687	WITHOUT_CLASSIFICATION	3.6284117311680883E-6	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999982089992601	WITHOUT_CLASSIFICATION	1.7910007399091072E-6	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999990637210686	WITHOUT_CLASSIFICATION	9.362789313376507E-7	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999922424122009	WITHOUT_CLASSIFICATION	7.757587799200939E-6	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999985339011285	WITHOUT_CLASSIFICATION	1.4660988715519886E-6	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999996382956617	WITHOUT_CLASSIFICATION	3.617043382650512E-7	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999856241051001	WITHOUT_CLASSIFICATION	1.4375894899955814E-5	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999999639168112	WITHOUT_CLASSIFICATION	3.608318871299386E-8	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.999998376517933	WITHOUT_CLASSIFICATION	1.6234820670588979E-6	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999976735948124	WITHOUT_CLASSIFICATION	2.326405187681512E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999809363664814	WITHOUT_CLASSIFICATION	1.906363351853258E-5	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999874183489115	WITHOUT_CLASSIFICATION	1.2581651088501627E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999809363664814	WITHOUT_CLASSIFICATION	1.906363351853258E-5	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.999994786925825	WITHOUT_CLASSIFICATION	5.213074174964922E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999989825024947	WITHOUT_CLASSIFICATION	1.0174975051959064E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999989825024947	WITHOUT_CLASSIFICATION	1.0174975051959064E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999989825024947	WITHOUT_CLASSIFICATION	1.0174975051959064E-6	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999950767427448	WITHOUT_CLASSIFICATION	4.923257255216214E-6	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999950767427448	WITHOUT_CLASSIFICATION	4.923257255216214E-6	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999931838829085	WITHOUT_CLASSIFICATION	6.8161170915667355E-6	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999977435107504	WITHOUT_CLASSIFICATION	2.2564892494935536E-6	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999998133059241	WITHOUT_CLASSIFICATION	1.866940759743816E-7	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9987891640003043	WITHOUT_CLASSIFICATION	0.0012108359996957623	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999972002123226	WITHOUT_CLASSIFICATION	2.799787677252111E-6	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999864832300797	WITHOUT_CLASSIFICATION	1.3516769920432963E-5	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999864308788401	WITHOUT_CLASSIFICATION	1.3569121159779883E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999799628714197	WITHOUT_CLASSIFICATION	2.0037128580418216E-5	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999939370070878	WITHOUT_CLASSIFICATION	6.062992912106925E-6	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999365189531174	WITHOUT_CLASSIFICATION	6.348104688260577E-5	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.999855123843726	WITHOUT_CLASSIFICATION	1.4487615627397643E-4	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999967440830484	WITHOUT_CLASSIFICATION	3.255916951551452E-6	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.99988783927428	WITHOUT_CLASSIFICATION	1.1216072571989994E-4	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.999994193287898	WITHOUT_CLASSIFICATION	5.806712102040587E-6	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999936001773815	WITHOUT_CLASSIFICATION	6.399822618422438E-6	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9999966380233322	WITHOUT_CLASSIFICATION	3.3619766677984233E-6	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999991004937753	WITHOUT_CLASSIFICATION	8.995062246484681E-7	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999698154383418	WITHOUT_CLASSIFICATION	3.0184561658105656E-5	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999698154383418	WITHOUT_CLASSIFICATION	3.0184561658105656E-5	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9999535927624723	WITHOUT_CLASSIFICATION	4.640723752777643E-5	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999895622587461	WITHOUT_CLASSIFICATION	1.0437741253799644E-5	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999895622587461	WITHOUT_CLASSIFICATION	1.0437741253799644E-5	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999548564366291	WITHOUT_CLASSIFICATION	4.51435633708446E-5	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9999871973633673	WITHOUT_CLASSIFICATION	1.2802636632640238E-5	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.999977380185072	WITHOUT_CLASSIFICATION	2.2619814927962783E-5	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9999750513802853	WITHOUT_CLASSIFICATION	2.4948619714698997E-5	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9999820987058349	WITHOUT_CLASSIFICATION	1.7901294165105015E-5	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999944935581662	WITHOUT_CLASSIFICATION	5.506441833755735E-6	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9999897929814594	WITHOUT_CLASSIFICATION	1.0207018540570022E-5	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999749411700956	WITHOUT_CLASSIFICATION	2.505882990448312E-5	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999847006955078	WITHOUT_CLASSIFICATION	1.5299304492169496E-5	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999672584959647	WITHOUT_CLASSIFICATION	3.2741504035356527E-5	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999930401572042	WITHOUT_CLASSIFICATION	6.959842795702611E-6	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999842519911781	WITHOUT_CLASSIFICATION	1.5748008821781503E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999530579994905	WITHOUT_CLASSIFICATION	4.6942000509402855E-5	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999893658159431	WITHOUT_CLASSIFICATION	1.0634184056907707E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999799628714197	WITHOUT_CLASSIFICATION	2.0037128580418216E-5	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9995605613270976	WITHOUT_CLASSIFICATION	4.3943867290241977E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999805892554786	WITHOUT_CLASSIFICATION	1.941074452135447E-5	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9995850094641917	WITHOUT_CLASSIFICATION	4.1499053580826604E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9995850094641917	WITHOUT_CLASSIFICATION	4.1499053580826604E-4	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999969892059135	WITHOUT_CLASSIFICATION	3.010794086442682E-6	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999959815152578	WITHOUT_CLASSIFICATION	4.018484742191027E-6	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999982127452677	WITHOUT_CLASSIFICATION	1.7872547322834252E-6	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9999934630393963	WITHOUT_CLASSIFICATION	6.536960603688431E-6	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999992491778218	WITHOUT_CLASSIFICATION	7.508221783184247E-7	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999987924288448	WITHOUT_CLASSIFICATION	1.2075711551901415E-6	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999947616657472	WITHOUT_CLASSIFICATION	5.238334252797549E-6	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999995265551537	WITHOUT_CLASSIFICATION	4.734448463304828E-7	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.999997921088821	WITHOUT_CLASSIFICATION	2.0789111789506E-6	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999999807962652	WITHOUT_CLASSIFICATION	1.92037348576085E-8	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.999993737007683	WITHOUT_CLASSIFICATION	6.262992316887004E-6	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999769783749449	WITHOUT_CLASSIFICATION	2.3021625055021155E-5	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999018998411557	WITHOUT_CLASSIFICATION	9.810015884418688E-5	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999850593280926	WITHOUT_CLASSIFICATION	1.4940671907587785E-5	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999997326249002	WITHOUT_CLASSIFICATION	2.673750998434985E-7	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999943224789787	WITHOUT_CLASSIFICATION	5.677521021292689E-6	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999660664487224	WITHOUT_CLASSIFICATION	3.39335512776293E-5	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999850899228094	WITHOUT_CLASSIFICATION	1.491007719069579E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999914931215294	WITHOUT_CLASSIFICATION	8.506878470648781E-6	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999978425471727	WITHOUT_CLASSIFICATION	2.15745282730292E-6	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9998718768785946	WITHOUT_CLASSIFICATION	1.281231214053332E-4	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999590210282129	WITHOUT_CLASSIFICATION	4.097897178711831E-5	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999957553262295	WITHOUT_CLASSIFICATION	4.2446737705140945E-6	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999990485220512	WITHOUT_CLASSIFICATION	9.514779486937037E-7	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.999994115183501	WITHOUT_CLASSIFICATION	5.884816498954238E-6	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999708329007875	WITHOUT_CLASSIFICATION	2.9167099212506717E-5	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999983442390594	WITHOUT_CLASSIFICATION	1.6557609405147877E-6	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999946511620965	WITHOUT_CLASSIFICATION	5.348837903520171E-6	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999994555387466	WITHOUT_CLASSIFICATION	5.444612534716773E-7	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999997750788192	WITHOUT_CLASSIFICATION	2.2492118074126378E-7	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999976083621562	WITHOUT_CLASSIFICATION	2.3916378437935367E-6	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999524220996424	WITHOUT_CLASSIFICATION	4.7577900357517303E-5	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999968860685853	WITHOUT_CLASSIFICATION	3.113931414661843E-6	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999965288978292	WITHOUT_CLASSIFICATION	3.4711021707472835E-6	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999669253423284	WITHOUT_CLASSIFICATION	3.307465767159073E-5	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.9999333083576134	WITHOUT_CLASSIFICATION	6.669164238664483E-5	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999946511620965	WITHOUT_CLASSIFICATION	5.348837903520171E-6	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999935694822876	WITHOUT_CLASSIFICATION	6.430517712510177E-6	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999669253423284	WITHOUT_CLASSIFICATION	3.307465767159073E-5	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.999998653579142	WITHOUT_CLASSIFICATION	1.3464208580161828E-6	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999708004761122	WITHOUT_CLASSIFICATION	2.9199523887704258E-5	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999953461067913	WITHOUT_CLASSIFICATION	4.65389320870176E-6	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999956448246705	WITHOUT_CLASSIFICATION	4.3551753295232936E-6	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999669458633268	WITHOUT_CLASSIFICATION	3.305413667330465E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999563145476902	WITHOUT_CLASSIFICATION	4.368545230986905E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999563145476902	WITHOUT_CLASSIFICATION	4.368545230986905E-5	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999642661834699	WITHOUT_CLASSIFICATION	3.573381653000977E-5	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999996424058186	WITHOUT_CLASSIFICATION	3.5759418139306293E-7	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9987297061709153	WITHOUT_CLASSIFICATION	0.0012702938290847748	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9987297061709153	WITHOUT_CLASSIFICATION	0.0012702938290847748	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999190796153891	WITHOUT_CLASSIFICATION	8.092038461098789E-5	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9981162985259286	WITHOUT_CLASSIFICATION	0.0018837014740713596	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9994786003023385	WITHOUT_CLASSIFICATION	5.213996976615106E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9994786003023385	WITHOUT_CLASSIFICATION	5.213996976615106E-4	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999801144307714	WITHOUT_CLASSIFICATION	1.9885569228590523E-5	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999896595151276	WITHOUT_CLASSIFICATION	1.0340484872314604E-5	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999908843607881	WITHOUT_CLASSIFICATION	9.11563921179351E-6	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999991310120464	WITHOUT_CLASSIFICATION	8.689879535762882E-7	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999985455267124	WITHOUT_CLASSIFICATION	1.4544732875857464E-6	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999949664243292	WITHOUT_CLASSIFICATION	5.033575670858374E-6	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999916113776756	WITHOUT_CLASSIFICATION	8.388622324510326E-6	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9998183084416412	WITHOUT_CLASSIFICATION	1.816915583588594E-4	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999849002727363	WITHOUT_CLASSIFICATION	1.5099727263609156E-5	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999940284550566	WITHOUT_CLASSIFICATION	5.971544943364135E-6	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9999943697195325	WITHOUT_CLASSIFICATION	5.630280467549331E-6	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999806065560723	WITHOUT_CLASSIFICATION	1.939344392765928E-5	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999995151624967	WITHOUT_CLASSIFICATION	4.84837503244912E-7	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999911822870635	WITHOUT_CLASSIFICATION	8.81771293641922E-6	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999833025477124	WITHOUT_CLASSIFICATION	1.6697452287564232E-5	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999947127190792	WITHOUT_CLASSIFICATION	5.287280920786518E-6	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999978075226451	WITHOUT_CLASSIFICATION	2.192477354853678E-6	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999883269514626	WITHOUT_CLASSIFICATION	1.1673048537510374E-5	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999995007252872	WITHOUT_CLASSIFICATION	4.992747127450332E-7	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9999224525050651	WITHOUT_CLASSIFICATION	7.754749493493567E-5	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999959681048983	WITHOUT_CLASSIFICATION	4.0318951017067E-6	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999682970341902	WITHOUT_CLASSIFICATION	3.170296580982234E-5	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999967594172907	WITHOUT_CLASSIFICATION	3.240582709388723E-6	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9998984147078889	WITHOUT_CLASSIFICATION	1.0158529211115709E-4	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.999896311078453	WITHOUT_CLASSIFICATION	1.0368892154707152E-4	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9998952125484026	WITHOUT_CLASSIFICATION	1.047874515973339E-4	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999991470924419	WITHOUT_CLASSIFICATION	8.529075582360697E-7	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9999884087165359	WITHOUT_CLASSIFICATION	1.1591283464005979E-5	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999896663623657	WITHOUT_CLASSIFICATION	1.033363763425207E-5	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999896663623657	WITHOUT_CLASSIFICATION	1.033363763425207E-5	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999994582741835	WITHOUT_CLASSIFICATION	5.417258165089058E-7	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999994069799037	WITHOUT_CLASSIFICATION	5.930200961871004E-7	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999893459550576	WITHOUT_CLASSIFICATION	1.0654044942359733E-5	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.999996310560633	WITHOUT_CLASSIFICATION	3.689439367116172E-6	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999731313990486	WITHOUT_CLASSIFICATION	2.6868600951368625E-5	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9999819874291674	WITHOUT_CLASSIFICATION	1.8012570832548774E-5	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999921414215903	WITHOUT_CLASSIFICATION	7.858578409685447E-6	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999948463729595	WITHOUT_CLASSIFICATION	5.15362704048321E-6	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999984683689946	WITHOUT_CLASSIFICATION	1.5316310052494684E-6	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999997013901056	WITHOUT_CLASSIFICATION	2.986098943835317E-7	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999812503770731	WITHOUT_CLASSIFICATION	1.8749622926936E-5	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999958722747947	WITHOUT_CLASSIFICATION	4.127725205293986E-6	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999772108064325	WITHOUT_CLASSIFICATION	2.278919356752599E-5	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9990887897858274	WITHOUT_CLASSIFICATION	9.112102141726929E-4	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999979480317868	WITHOUT_CLASSIFICATION	2.051968213238204E-6	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999926372509078	WITHOUT_CLASSIFICATION	7.362749092186349E-6	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.999996693367671	WITHOUT_CLASSIFICATION	3.306632328801095E-6	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999930088449669	WITHOUT_CLASSIFICATION	6.9911550330781955E-6	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9999751192238624	WITHOUT_CLASSIFICATION	2.488077613768515E-5	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.99999966230244	WITHOUT_CLASSIFICATION	3.376975600585675E-7	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999984833002092	WITHOUT_CLASSIFICATION	1.5166997906771756E-6	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999239697586496	WITHOUT_CLASSIFICATION	7.603024135037968E-5	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999960137463997	WITHOUT_CLASSIFICATION	3.986253600362892E-6	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999702925314389	WITHOUT_CLASSIFICATION	2.9707468561076985E-5	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999905913613223	WITHOUT_CLASSIFICATION	9.408638677713154E-6	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999933527673122	WITHOUT_CLASSIFICATION	6.6472326878277335E-6	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999977693063403	WITHOUT_CLASSIFICATION	2.230693659650368E-6	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999836678723988	WITHOUT_CLASSIFICATION	1.6332127601200228E-5	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9999710197697247	WITHOUT_CLASSIFICATION	2.898023027530399E-5	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9999966852281157	WITHOUT_CLASSIFICATION	3.314771884268464E-6	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999812306527883	WITHOUT_CLASSIFICATION	1.8769347211758293E-5	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999982209557772	WITHOUT_CLASSIFICATION	1.7790442227327493E-6	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999954471362281	WITHOUT_CLASSIFICATION	4.552863771799843E-6	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9999968547968702	WITHOUT_CLASSIFICATION	3.1452031299462567E-6	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999965637528833	WITHOUT_CLASSIFICATION	3.436247116784136E-6	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999907858895253	WITHOUT_CLASSIFICATION	9.214110474629074E-6	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999841030827814	WITHOUT_CLASSIFICATION	1.5896917218560115E-5	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9994583021322005	WITHOUT_CLASSIFICATION	5.416978677995163E-4	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999909920803168	WITHOUT_CLASSIFICATION	9.007919683219814E-6	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999999564461962	WITHOUT_CLASSIFICATION	4.355380369968926E-8	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999998338656063	WITHOUT_CLASSIFICATION	1.6613439357893253E-7	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999958517294482	WITHOUT_CLASSIFICATION	4.148270551775174E-6	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.999982404942851	WITHOUT_CLASSIFICATION	1.7595057149086844E-5	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.999982404942851	WITHOUT_CLASSIFICATION	1.7595057149086844E-5	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999751068393417	WITHOUT_CLASSIFICATION	2.489316065840998E-5	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999947661993206	WITHOUT_CLASSIFICATION	5.2338006793693955E-6	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999228380266584	WITHOUT_CLASSIFICATION	7.716197334159503E-5	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999870807705397	WITHOUT_CLASSIFICATION	1.291922946029135E-5	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999997974261926	WITHOUT_CLASSIFICATION	2.0257380740071928E-6	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999946353053722	WITHOUT_CLASSIFICATION	5.364694627741267E-6	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999978123139607	WITHOUT_CLASSIFICATION	2.187686039396565E-6	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999793898823323	WITHOUT_CLASSIFICATION	2.0610117667745357E-5	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999948331837102	WITHOUT_CLASSIFICATION	5.166816289831227E-6	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9999096021909917	WITHOUT_CLASSIFICATION	9.039780900841632E-5	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9999905376138423	WITHOUT_CLASSIFICATION	9.462386157641298E-6	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.9999344713816851	WITHOUT_CLASSIFICATION	6.552861831481768E-5	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9999893147770108	WITHOUT_CLASSIFICATION	1.068522298923219E-5	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999581663831848	WITHOUT_CLASSIFICATION	4.18336168150597E-5	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998775174019001	WITHOUT_CLASSIFICATION	1.2248259809980738E-4	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9999912733591121	WITHOUT_CLASSIFICATION	8.72664088793791E-6	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999304496114224	WITHOUT_CLASSIFICATION	6.955038857762016E-5	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9999761311175684	WITHOUT_CLASSIFICATION	2.386888243158185E-5	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998238640378383	WITHOUT_CLASSIFICATION	1.761359621616783E-4	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.999981722643333	WITHOUT_CLASSIFICATION	1.827735666709608E-5	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9998574324671576	WITHOUT_CLASSIFICATION	1.4256753284233999E-4	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9997247218127407	WITHOUT_CLASSIFICATION	2.752781872592138E-4	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999940186639509	WITHOUT_CLASSIFICATION	5.981336049129794E-6	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999927138707034	WITHOUT_CLASSIFICATION	7.286129296522513E-6	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999937057442926	WITHOUT_CLASSIFICATION	6.294255707464403E-6	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999769963186643	WITHOUT_CLASSIFICATION	2.3003681335557692E-5	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999811168269597	WITHOUT_CLASSIFICATION	1.8883173040350517E-5	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9998741835225774	WITHOUT_CLASSIFICATION	1.2581647742263054E-4	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999910097431964	WITHOUT_CLASSIFICATION	8.990256803545375E-6	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9998980463273821	WITHOUT_CLASSIFICATION	1.0195367261790893E-4	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999943463018643	WITHOUT_CLASSIFICATION	5.653698135726554E-6	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999759260998744	WITHOUT_CLASSIFICATION	2.4073900125665212E-5	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.999991325443253	WITHOUT_CLASSIFICATION	8.674556746983289E-6	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999506578567562	WITHOUT_CLASSIFICATION	4.9342143243739417E-5	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9994583021322005	WITHOUT_CLASSIFICATION	5.416978677995163E-4	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999982992318027	WITHOUT_CLASSIFICATION	1.7007681973625538E-6	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.99998806729585	WITHOUT_CLASSIFICATION	1.193270415001101E-5	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.99998806729585	WITHOUT_CLASSIFICATION	1.193270415001101E-5	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999994101351387	WITHOUT_CLASSIFICATION	5.898648612663265E-7	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999996515423321	WITHOUT_CLASSIFICATION	3.484576680078977E-7	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999843150027617	WITHOUT_CLASSIFICATION	1.568499723815833E-5	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.999967776738607	WITHOUT_CLASSIFICATION	3.222326139290419E-5	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999114750412542	WITHOUT_CLASSIFICATION	8.852495874574544E-5	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999049007196369	WITHOUT_CLASSIFICATION	9.509928036312266E-5	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999391872387454	WITHOUT_CLASSIFICATION	6.0812761254439083E-5	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9998821085532276	WITHOUT_CLASSIFICATION	1.1789144677238459E-4	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9998824660667087	WITHOUT_CLASSIFICATION	1.1753393329136596E-4	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.999924741705025	WITHOUT_CLASSIFICATION	7.525829497500195E-5	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9998542978361346	WITHOUT_CLASSIFICATION	1.45702163865534E-4	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9998174004397966	WITHOUT_CLASSIFICATION	1.8259956020334815E-4	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999518544847799	WITHOUT_CLASSIFICATION	4.814551522025016E-5	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999907188340051	WITHOUT_CLASSIFICATION	9.28116599491046E-6	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.999999816437381	WITHOUT_CLASSIFICATION	1.8356261896389616E-7	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.999989206050278	WITHOUT_CLASSIFICATION	1.0793949722004602E-5	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999167541773483	WITHOUT_CLASSIFICATION	8.324582265174816E-5	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9998109967248039	WITHOUT_CLASSIFICATION	1.8900327519618106E-4	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9998995939836579	WITHOUT_CLASSIFICATION	1.0040601634204976E-4	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999357092983654	WITHOUT_CLASSIFICATION	6.429070163459585E-5	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9998916776522397	WITHOUT_CLASSIFICATION	1.0832234776032165E-4	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9998954372700478	WITHOUT_CLASSIFICATION	1.0456272995207615E-4	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999996266287884	WITHOUT_CLASSIFICATION	3.733712115513803E-7	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.999972494389364	WITHOUT_CLASSIFICATION	2.7505610635986717E-5	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.999998350693002	WITHOUT_CLASSIFICATION	1.6493069979571147E-6	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999718499428227	WITHOUT_CLASSIFICATION	2.8150057177364622E-5	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999810993351221	WITHOUT_CLASSIFICATION	1.890066487789894E-5	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999925873072857	WITHOUT_CLASSIFICATION	7.412692714289975E-6	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999926128365133	WITHOUT_CLASSIFICATION	7.387163486771336E-6	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999914022557923	WITHOUT_CLASSIFICATION	8.597744207744186E-6	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.999997110072718	WITHOUT_CLASSIFICATION	2.889927282112967E-6	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999830945999233	WITHOUT_CLASSIFICATION	1.6905400076634983E-5	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9999857514120362	WITHOUT_CLASSIFICATION	1.4248587963818371E-5	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999937645772817	WITHOUT_CLASSIFICATION	6.235422718349627E-6	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.999995683070003	WITHOUT_CLASSIFICATION	4.316929997007293E-6	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9998845506846001	WITHOUT_CLASSIFICATION	1.154493153999707E-4	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999929749593947	WITHOUT_CLASSIFICATION	7.0250406054479825E-6	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999718499428227	WITHOUT_CLASSIFICATION	2.8150057177364622E-5	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999810993351221	WITHOUT_CLASSIFICATION	1.890066487789894E-5	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999925873072857	WITHOUT_CLASSIFICATION	7.412692714289975E-6	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999914022557923	WITHOUT_CLASSIFICATION	8.597744207744186E-6	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9996407346480379	WITHOUT_CLASSIFICATION	3.592653519620016E-4	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.999996021611796	WITHOUT_CLASSIFICATION	3.9783882040388296E-6	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999575350986799	WITHOUT_CLASSIFICATION	4.2464901320031385E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9998851367040329	WITHOUT_CLASSIFICATION	1.1486329596716243E-4	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999923994470937	WITHOUT_CLASSIFICATION	7.600552906342697E-6	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.999998238965359	WITHOUT_CLASSIFICATION	1.7610346409622803E-6	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999946229994617	WITHOUT_CLASSIFICATION	5.377000538199472E-6	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999900678581426	WITHOUT_CLASSIFICATION	9.932141857376282E-6	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999786756334966	WITHOUT_CLASSIFICATION	2.1324366503471084E-5	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999893968020541	WITHOUT_CLASSIFICATION	1.060319794597857E-5	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999881155440705	WITHOUT_CLASSIFICATION	1.1884455929426132E-5	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999774497332858	WITHOUT_CLASSIFICATION	2.2550266714119583E-5	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999968534393996	WITHOUT_CLASSIFICATION	3.1465606005134683E-6	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999851570297867	WITHOUT_CLASSIFICATION	1.4842970213398678E-5	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9999840989991304	WITHOUT_CLASSIFICATION	1.5901000869618212E-5	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9999931739246468	WITHOUT_CLASSIFICATION	6.8260753531713146E-6	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999728004072255	WITHOUT_CLASSIFICATION	2.7199592774579556E-5	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9994506363841363	WITHOUT_CLASSIFICATION	5.493636158636876E-4	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999925363401113	WITHOUT_CLASSIFICATION	7.4636598886976066E-6	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999929749593947	WITHOUT_CLASSIFICATION	7.0250406054479825E-6	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.999996021611796	WITHOUT_CLASSIFICATION	3.9783882040388296E-6	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999575350986799	WITHOUT_CLASSIFICATION	4.2464901320031385E-5	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999923994470937	WITHOUT_CLASSIFICATION	7.600552906342697E-6	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.999998238965359	WITHOUT_CLASSIFICATION	1.7610346409622803E-6	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999946229994617	WITHOUT_CLASSIFICATION	5.377000538199472E-6	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999900678581426	WITHOUT_CLASSIFICATION	9.932141857376282E-6	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999965954434582	WITHOUT_CLASSIFICATION	3.404556541774675E-6	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999442008923294	WITHOUT_CLASSIFICATION	5.579910767060246E-5	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999948024323158	WITHOUT_CLASSIFICATION	5.197567684214221E-6	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999997816000717	WITHOUT_CLASSIFICATION	2.183999281987903E-7	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.999988008820486	WITHOUT_CLASSIFICATION	1.1991179513931166E-5	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.999988008820486	WITHOUT_CLASSIFICATION	1.1991179513931166E-5	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9999977146704425	WITHOUT_CLASSIFICATION	2.2853295575928984E-6	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999597984086852	WITHOUT_CLASSIFICATION	4.0201591314769275E-5	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999970903454333	WITHOUT_CLASSIFICATION	2.9096545667885017E-6	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999979653312299	WITHOUT_CLASSIFICATION	2.034668770066461E-6	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999985683189996	WITHOUT_CLASSIFICATION	1.4316810003262886E-6	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999971774069648	WITHOUT_CLASSIFICATION	2.8225930352075605E-6	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9999891651177855	WITHOUT_CLASSIFICATION	1.083488221455889E-5	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999931174805994	WITHOUT_CLASSIFICATION	6.882519400635917E-6	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999850814691722	WITHOUT_CLASSIFICATION	1.491853082767458E-5	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9988424861908504	WITHOUT_CLASSIFICATION	0.0011575138091496088	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9998922360212169	WITHOUT_CLASSIFICATION	1.0776397878307003E-4	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9995114868102443	WITHOUT_CLASSIFICATION	4.885131897556732E-4	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999939011884669	WITHOUT_CLASSIFICATION	6.098811533103319E-6	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999767942438886	WITHOUT_CLASSIFICATION	2.3205756111265716E-5	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.999990511433944	WITHOUT_CLASSIFICATION	9.488566056038463E-6	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999260152648232	WITHOUT_CLASSIFICATION	7.398473517687018E-5	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9994852257698681	WITHOUT_CLASSIFICATION	5.147742301319141E-4	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9996385481136769	WITHOUT_CLASSIFICATION	3.614518863230395E-4	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9997181971146328	WITHOUT_CLASSIFICATION	2.818028853670838E-4	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999910710790298	WITHOUT_CLASSIFICATION	8.9289209701642E-6	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9936757998258714	WITHOUT_CLASSIFICATION	0.006324200174128604	IMPLEMENTATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999997740094941	WITHOUT_CLASSIFICATION	2.2599050585426296E-7	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999997189914678	WITHOUT_CLASSIFICATION	2.810085321919461E-7	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5327687869717694	WITHOUT_CLASSIFICATION	0.46723121302823056	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999921131643811	WITHOUT_CLASSIFICATION	7.886835618918461E-6	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999993578524433	WITHOUT_CLASSIFICATION	6.421475567514722E-7	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999980063629638	WITHOUT_CLASSIFICATION	1.9936370361974395E-6	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999980404402091	WITHOUT_CLASSIFICATION	1.9595597908385443E-6	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.999987887981201	WITHOUT_CLASSIFICATION	1.211201879902638E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999921131643811	WITHOUT_CLASSIFICATION	7.886835618918461E-6	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999993578524433	WITHOUT_CLASSIFICATION	6.421475567514722E-7	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999767942438886	WITHOUT_CLASSIFICATION	2.3205756111265716E-5	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999887399443503	WITHOUT_CLASSIFICATION	1.1260055649688736E-5	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999923351757143	WITHOUT_CLASSIFICATION	7.66482428563411E-6	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999968069627617	WITHOUT_CLASSIFICATION	3.1930372383403962E-6	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999960312428652	WITHOUT_CLASSIFICATION	3.968757134839842E-6	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999981826134487	WITHOUT_CLASSIFICATION	1.8173865512304455E-6	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999910093619714	WITHOUT_CLASSIFICATION	8.990638028714768E-6	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9998711493367883	WITHOUT_CLASSIFICATION	1.2885066321164903E-4	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999258820991596	WITHOUT_CLASSIFICATION	7.411790084037099E-5	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9997775077756128	WITHOUT_CLASSIFICATION	2.224922243871475E-4	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999994299811962	WITHOUT_CLASSIFICATION	5.700188037445985E-7	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999998962160127	WITHOUT_CLASSIFICATION	1.0378398729650209E-7	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999966963458171	WITHOUT_CLASSIFICATION	3.303654182808223E-6	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999994242009708	WITHOUT_CLASSIFICATION	5.757990291328457E-7	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.999998868852597	WITHOUT_CLASSIFICATION	1.1311474029867913E-6	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.99999962220556	WITHOUT_CLASSIFICATION	3.7779443994970055E-7	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999997890369069	WITHOUT_CLASSIFICATION	2.1096309318831983E-7	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9998601377764786	WITHOUT_CLASSIFICATION	1.3986222352141393E-4	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999673709659669	WITHOUT_CLASSIFICATION	3.2629034033107416E-5	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999341440099164	WITHOUT_CLASSIFICATION	6.585599008364235E-5	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999991237900626	WITHOUT_CLASSIFICATION	8.762099374866316E-7	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999975286914263	WITHOUT_CLASSIFICATION	2.4713085736603046E-6	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999990771609211	WITHOUT_CLASSIFICATION	9.228390789609376E-7	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999568231594453	WITHOUT_CLASSIFICATION	4.317684055462791E-5	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999996204591907	WITHOUT_CLASSIFICATION	3.7954080935506726E-7	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999989247262576	WITHOUT_CLASSIFICATION	1.07527374240181E-6	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999941050338673	WITHOUT_CLASSIFICATION	5.894966132701767E-6	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9998998447017301	WITHOUT_CLASSIFICATION	1.001552982698905E-4	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999285290756197	WITHOUT_CLASSIFICATION	7.147092438033547E-5	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999470301365029	WITHOUT_CLASSIFICATION	5.2969863497093856E-5	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999995195579533	WITHOUT_CLASSIFICATION	4.804420466322984E-7	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999595080892536	WITHOUT_CLASSIFICATION	4.04919107463167E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.997822160599077	WITHOUT_CLASSIFICATION	0.002177839400923008	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.997822160599077	WITHOUT_CLASSIFICATION	0.002177839400923008	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999939011884669	WITHOUT_CLASSIFICATION	6.098811533103319E-6	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999996962691504	WITHOUT_CLASSIFICATION	3.0373084957658945E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9997825765663321	WITHOUT_CLASSIFICATION	2.1742343366794848E-4	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.999991717398114	WITHOUT_CLASSIFICATION	8.282601886007451E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999660213655452	WITHOUT_CLASSIFICATION	3.397863445478395E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999660213655452	WITHOUT_CLASSIFICATION	3.397863445478395E-5	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999130163896914	WITHOUT_CLASSIFICATION	8.698361030854253E-5	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999450828477193	WITHOUT_CLASSIFICATION	5.491715228082757E-5	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999844965104253	WITHOUT_CLASSIFICATION	1.550348957467664E-5	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999982023540162	WITHOUT_CLASSIFICATION	1.7976459838679527E-6	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999990503715676	WITHOUT_CLASSIFICATION	9.496284324031182E-7	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999999017872171	WITHOUT_CLASSIFICATION	9.821278295873815E-8	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.999999761487683	WITHOUT_CLASSIFICATION	2.385123170904771E-7	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9996239869703724	WITHOUT_CLASSIFICATION	3.760130296275501E-4	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999990552234538	WITHOUT_CLASSIFICATION	9.447765462778104E-7	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999970472083183	WITHOUT_CLASSIFICATION	2.9527916817480014E-6	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999721445647229	WITHOUT_CLASSIFICATION	2.7855435277148676E-5	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999747053665193	WITHOUT_CLASSIFICATION	2.5294633480583665E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999395698155984	WITHOUT_CLASSIFICATION	6.04301844017197E-5	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999954235391582	WITHOUT_CLASSIFICATION	4.576460841933251E-6	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999400697207353	WITHOUT_CLASSIFICATION	5.993027926472487E-5	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.9999561902206913	WITHOUT_CLASSIFICATION	4.380977930875512E-5	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.999996259263108	WITHOUT_CLASSIFICATION	3.7407368919227447E-6	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.999996259263108	WITHOUT_CLASSIFICATION	3.7407368919227447E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999984256323204	WITHOUT_CLASSIFICATION	1.5743676794498711E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999984256323204	WITHOUT_CLASSIFICATION	1.5743676794498711E-6	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.999999134256639	WITHOUT_CLASSIFICATION	8.65743361101401E-7	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999997630999682	WITHOUT_CLASSIFICATION	2.3690003175437164E-7	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999993986856529	WITHOUT_CLASSIFICATION	6.013143471955946E-7	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9999992924221808	WITHOUT_CLASSIFICATION	7.075778191647213E-7	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999991380600921	WITHOUT_CLASSIFICATION	8.619399078183303E-7	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999947909880027	WITHOUT_CLASSIFICATION	5.209011997209915E-6	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999978794652187	WITHOUT_CLASSIFICATION	2.1205347813787344E-6	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999747053665193	WITHOUT_CLASSIFICATION	2.5294633480583665E-5	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999395698155984	WITHOUT_CLASSIFICATION	6.04301844017197E-5	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999400697207353	WITHOUT_CLASSIFICATION	5.993027926472487E-5	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999858045792804	WITHOUT_CLASSIFICATION	1.4195420719597717E-5	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999888054730262	WITHOUT_CLASSIFICATION	1.1194526973769361E-5	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999990491350856	WITHOUT_CLASSIFICATION	9.508649144347571E-7	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999774117360555	WITHOUT_CLASSIFICATION	2.2588263944436482E-5	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999998251064349	WITHOUT_CLASSIFICATION	1.7489356508809893E-7	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999999883412852	WITHOUT_CLASSIFICATION	1.1658714796082442E-8	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999876567612421	WITHOUT_CLASSIFICATION	1.234323875794304E-5	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999768153182221	WITHOUT_CLASSIFICATION	2.318468177791514E-5	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999930266092194	WITHOUT_CLASSIFICATION	6.973390780647415E-6	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999998299380085	WITHOUT_CLASSIFICATION	1.7006199143019533E-7	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999967062241486	WITHOUT_CLASSIFICATION	3.293775851390219E-6	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999896897511289	WITHOUT_CLASSIFICATION	1.031024887111365E-5	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999801144251531	WITHOUT_CLASSIFICATION	1.9885574846804527E-5	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999968714727704	WITHOUT_CLASSIFICATION	3.1285272295525443E-6	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999867500965727	WITHOUT_CLASSIFICATION	1.3249903427242576E-5	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999987879285719	WITHOUT_CLASSIFICATION	1.2120714280794982E-6	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999945333127908	WITHOUT_CLASSIFICATION	5.466687209208517E-6	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999529417659677	WITHOUT_CLASSIFICATION	4.705823403238464E-5	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999990164481855	WITHOUT_CLASSIFICATION	9.835518145228092E-7	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999976229654212	WITHOUT_CLASSIFICATION	2.37703457872395E-6	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999995023101406	WITHOUT_CLASSIFICATION	4.976898594986807E-7	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999967975414709	WITHOUT_CLASSIFICATION	3.20245852907704E-6	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999538621251396	WITHOUT_CLASSIFICATION	4.613787486027474E-5	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999959329374107	WITHOUT_CLASSIFICATION	4.067062589215156E-6	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999623225229826	WITHOUT_CLASSIFICATION	3.7677477017444844E-5	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999607480476989	WITHOUT_CLASSIFICATION	3.925195230117565E-5	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9997954396044062	WITHOUT_CLASSIFICATION	2.045603955937677E-4	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.999898633668897	WITHOUT_CLASSIFICATION	1.0136633110295964E-4	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999990873619776	WITHOUT_CLASSIFICATION	9.126380223183813E-7	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999997420252741	WITHOUT_CLASSIFICATION	2.579747259032607E-7	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999978116864041	WITHOUT_CLASSIFICATION	2.1883135957997894E-6	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999972922125645	WITHOUT_CLASSIFICATION	2.707787435408342E-6	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999963252898884	WITHOUT_CLASSIFICATION	3.6747101116908325E-6	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999990111861314	WITHOUT_CLASSIFICATION	9.88813868559836E-7	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999990439040172	WITHOUT_CLASSIFICATION	9.56095982850139E-7	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9996727754686948	WITHOUT_CLASSIFICATION	3.2722453130517063E-4	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9998862817655989	WITHOUT_CLASSIFICATION	1.13718234400996E-4	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999365791047587	WITHOUT_CLASSIFICATION	6.342089524131866E-5	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.99997760449932	WITHOUT_CLASSIFICATION	2.2395500679927173E-5	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.999998915969646	WITHOUT_CLASSIFICATION	1.084030353988274E-6	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999995967638987	WITHOUT_CLASSIFICATION	4.032361012158781E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9997825765663321	WITHOUT_CLASSIFICATION	2.1742343366794848E-4	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9998862817655989	WITHOUT_CLASSIFICATION	1.13718234400996E-4	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999976346093757	WITHOUT_CLASSIFICATION	2.3653906243181372E-6	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999441826492372	WITHOUT_CLASSIFICATION	5.5817350762791504E-5	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999994138759101	WITHOUT_CLASSIFICATION	5.861240899078301E-7	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999974515132006	WITHOUT_CLASSIFICATION	2.5484867992606523E-6	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999974515132006	WITHOUT_CLASSIFICATION	2.5484867992606523E-6	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999880311134878	WITHOUT_CLASSIFICATION	1.196888651229703E-5	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999999258352048	WITHOUT_CLASSIFICATION	7.416479513684969E-8	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999807844815151	WITHOUT_CLASSIFICATION	1.9215518484980198E-5	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.999999316932865	WITHOUT_CLASSIFICATION	6.830671348368616E-7	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9998881622391441	WITHOUT_CLASSIFICATION	1.1183776085596579E-4	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999117085654432	WITHOUT_CLASSIFICATION	8.829143455676148E-5	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999748432879381	WITHOUT_CLASSIFICATION	2.515671206189863E-5	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999776299228917	WITHOUT_CLASSIFICATION	2.2370077108281597E-5	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999980005419332	WITHOUT_CLASSIFICATION	1.9994580667729085E-6	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999980005419332	WITHOUT_CLASSIFICATION	1.9994580667729085E-6	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999792610592906	WITHOUT_CLASSIFICATION	2.07389407095033E-5	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999990276607678	WITHOUT_CLASSIFICATION	9.723392322157016E-7	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999995256602728	WITHOUT_CLASSIFICATION	4.7433972711701984E-7	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9999965358522374	WITHOUT_CLASSIFICATION	3.4641477625966964E-6	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999942315397662	WITHOUT_CLASSIFICATION	5.768460233700996E-6	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999960137126679	WITHOUT_CLASSIFICATION	3.9862873320882435E-6	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999991232575622	WITHOUT_CLASSIFICATION	8.76742437807293E-7	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.99999941242893	WITHOUT_CLASSIFICATION	5.875710700421611E-7	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9999579998586886	WITHOUT_CLASSIFICATION	4.2000141311416756E-5	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999984366152891	WITHOUT_CLASSIFICATION	1.5633847108945207E-6	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999619596164399	WITHOUT_CLASSIFICATION	3.8040383560134326E-5	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.999992316138622	WITHOUT_CLASSIFICATION	7.68386137789139E-6	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999506918053906	WITHOUT_CLASSIFICATION	4.930819460943437E-5	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999806599366806	WITHOUT_CLASSIFICATION	1.934006331947636E-5	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999806599366806	WITHOUT_CLASSIFICATION	1.934006331947636E-5	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999977637074342	WITHOUT_CLASSIFICATION	2.236292565852713E-6	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999900678581426	WITHOUT_CLASSIFICATION	9.932141857376282E-6	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999994314439224	WITHOUT_CLASSIFICATION	5.685560776578631E-7	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999985876710332	WITHOUT_CLASSIFICATION	1.412328966853421E-6	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999998825667424	WITHOUT_CLASSIFICATION	1.1743325754185871E-7	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999597175715594	WITHOUT_CLASSIFICATION	4.028242844060745E-5	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9998286494615692	WITHOUT_CLASSIFICATION	1.7135053843072412E-4	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999866024676581	WITHOUT_CLASSIFICATION	1.3397532341950268E-5	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999433087907925	WITHOUT_CLASSIFICATION	5.669120920751944E-5	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9999896285772445	WITHOUT_CLASSIFICATION	1.0371422755544467E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.999821053654384	WITHOUT_CLASSIFICATION	1.7894634561607615E-4	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999965520560653	WITHOUT_CLASSIFICATION	3.4479439347319525E-6	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9982215564013327	WITHOUT_CLASSIFICATION	0.0017784435986673468	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999999633373445	WITHOUT_CLASSIFICATION	3.6662655451141614E-8	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.999998926586556	WITHOUT_CLASSIFICATION	1.0734134439555837E-6	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999928247298349	WITHOUT_CLASSIFICATION	7.17527016518019E-6	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999963120478813	WITHOUT_CLASSIFICATION	3.6879521185410985E-6	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.999929287764089	WITHOUT_CLASSIFICATION	7.07122359110403E-5	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999964475129873	WITHOUT_CLASSIFICATION	3.5524870126745734E-6	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999598242447668	WITHOUT_CLASSIFICATION	4.0175755233151625E-5	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9999864181238906	WITHOUT_CLASSIFICATION	1.358187610940439E-5	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9999899825498624	WITHOUT_CLASSIFICATION	1.0017450137678379E-5	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999801745011209	WITHOUT_CLASSIFICATION	1.982549887920912E-5	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999885826747017	WITHOUT_CLASSIFICATION	1.1417325298311753E-5	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.7149843905336454	IMPLEMENTATION	0.2850156094663545	WITHOUT_CLASSIFICATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999480589319899	WITHOUT_CLASSIFICATION	5.194106801007013E-5	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9999709353209626	WITHOUT_CLASSIFICATION	2.9064679037337567E-5	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.999846009379515	WITHOUT_CLASSIFICATION	1.539906204850996E-4	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9999888418715511	WITHOUT_CLASSIFICATION	1.1158128448864977E-5	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9999797787178584	WITHOUT_CLASSIFICATION	2.022128214158658E-5	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999964933362019	WITHOUT_CLASSIFICATION	3.506663798070446E-6	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9999904511079015	WITHOUT_CLASSIFICATION	9.54889209857418E-6	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999978790723383	WITHOUT_CLASSIFICATION	2.1209276617878776E-6	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.999991079558927	WITHOUT_CLASSIFICATION	8.92044107297692E-6	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.99997798707169	WITHOUT_CLASSIFICATION	2.2012928309860004E-5	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999942527590521	WITHOUT_CLASSIFICATION	5.7472409478667716E-6	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999813004447832	WITHOUT_CLASSIFICATION	1.8699555216855583E-5	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999995460943963	WITHOUT_CLASSIFICATION	4.5390560369433435E-7	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999988797125102	WITHOUT_CLASSIFICATION	1.1202874897078025E-6	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999995973785533	WITHOUT_CLASSIFICATION	4.026214466816865E-7	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999383396041781	WITHOUT_CLASSIFICATION	6.166039582192881E-5	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999993964086396	WITHOUT_CLASSIFICATION	6.035913605081628E-7	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9998135977833539	WITHOUT_CLASSIFICATION	1.864022166462507E-4	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999077499914267	WITHOUT_CLASSIFICATION	9.225000857326435E-5	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9999256088588617	WITHOUT_CLASSIFICATION	7.439114113830924E-5	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999862653075673	WITHOUT_CLASSIFICATION	1.3734692432626803E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999832364849761	WITHOUT_CLASSIFICATION	1.6763515023825266E-5	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999928010770414	WITHOUT_CLASSIFICATION	7.198922958632817E-6	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999954296981682	WITHOUT_CLASSIFICATION	4.570301831757966E-6	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999921131643811	WITHOUT_CLASSIFICATION	7.886835618918461E-6	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999921131643811	WITHOUT_CLASSIFICATION	7.886835618918461E-6	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999968030213158	WITHOUT_CLASSIFICATION	3.1969786842116462E-6	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999981195977691	WITHOUT_CLASSIFICATION	1.8804022309001735E-6	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.999998456270159	WITHOUT_CLASSIFICATION	1.5437298409245208E-6	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999997029384337	WITHOUT_CLASSIFICATION	2.97061566301743E-7	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999957741264341	WITHOUT_CLASSIFICATION	4.225873565867316E-6	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999996517147223	WITHOUT_CLASSIFICATION	3.482852777764423E-7	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999997574630083	WITHOUT_CLASSIFICATION	2.4253699171007623E-7	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999991414851228	WITHOUT_CLASSIFICATION	8.585148773302589E-7	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999715861201	WITHOUT_CLASSIFICATION	2.8413879959552496E-8	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999923147076286	WITHOUT_CLASSIFICATION	7.685292371451207E-6	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999942711963122	WITHOUT_CLASSIFICATION	5.728803687816008E-6	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999942711963122	WITHOUT_CLASSIFICATION	5.728803687816008E-6	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999942711963122	WITHOUT_CLASSIFICATION	5.728803687816008E-6	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999999313374662	WITHOUT_CLASSIFICATION	6.866253372722057E-8	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.999995658733329	WITHOUT_CLASSIFICATION	4.341266671058551E-6	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9999974451677143	WITHOUT_CLASSIFICATION	2.5548322856850512E-6	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999972186332736	WITHOUT_CLASSIFICATION	2.781366726362329E-6	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999972186332736	WITHOUT_CLASSIFICATION	2.781366726362329E-6	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999988963719514	WITHOUT_CLASSIFICATION	1.103628048668221E-6	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999777585699873	WITHOUT_CLASSIFICATION	2.224143001276147E-5	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999974414973528	WITHOUT_CLASSIFICATION	2.558502647058055E-6	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999942555340398	WITHOUT_CLASSIFICATION	5.744465960233252E-6	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999881594710314	WITHOUT_CLASSIFICATION	1.1840528968585483E-5	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999977623347142	WITHOUT_CLASSIFICATION	2.2376652857761206E-6	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999946652113313	WITHOUT_CLASSIFICATION	5.334788668751754E-6	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.999987281812974	WITHOUT_CLASSIFICATION	1.2718187025910156E-5	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999982715485172	WITHOUT_CLASSIFICATION	1.7284514828776738E-6	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999986206375358	WITHOUT_CLASSIFICATION	1.3793624641883044E-6	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999986206375358	WITHOUT_CLASSIFICATION	1.3793624641883044E-6	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999940352701083	WITHOUT_CLASSIFICATION	5.964729891641741E-6	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999777684786217	WITHOUT_CLASSIFICATION	2.2231521378292297E-5	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.999997142328522	WITHOUT_CLASSIFICATION	2.8576714779682797E-6	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999532477447819	WITHOUT_CLASSIFICATION	4.675225521807575E-5	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999981655652599	WITHOUT_CLASSIFICATION	1.8344347401669527E-6	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999954413615099	WITHOUT_CLASSIFICATION	4.558638490146056E-6	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999630807977786	WITHOUT_CLASSIFICATION	3.691920222136996E-5	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9998279702730094	WITHOUT_CLASSIFICATION	1.7202972699046097E-4	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999456763082155	WITHOUT_CLASSIFICATION	5.432369178446039E-5	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9998834142234915	WITHOUT_CLASSIFICATION	1.1658577650855926E-4	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999149781884343	WITHOUT_CLASSIFICATION	8.502181156565865E-5	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9998899113791407	WITHOUT_CLASSIFICATION	1.100886208592146E-4	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9999458581635219	WITHOUT_CLASSIFICATION	5.414183647812542E-5	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9998923285815695	WITHOUT_CLASSIFICATION	1.0767141843052094E-4	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9997841870571751	WITHOUT_CLASSIFICATION	2.1581294282503458E-4	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999505935462983	WITHOUT_CLASSIFICATION	4.9406453701584895E-5	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999855113716781	WITHOUT_CLASSIFICATION	1.4488628321899692E-5	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.999987872962855	WITHOUT_CLASSIFICATION	1.2127037145006149E-5	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999993534206383	WITHOUT_CLASSIFICATION	6.465793617957984E-7	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999990830756771	WITHOUT_CLASSIFICATION	9.169243228298656E-7	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9997227060864897	WITHOUT_CLASSIFICATION	2.772939135103116E-4	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999914501931654	WITHOUT_CLASSIFICATION	8.549806834626961E-6	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999938501556297	WITHOUT_CLASSIFICATION	6.1498443703182495E-6	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.999998042568661	WITHOUT_CLASSIFICATION	1.957431338962136E-6	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999816170447527	WITHOUT_CLASSIFICATION	1.838295524725084E-5	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999887795767437	WITHOUT_CLASSIFICATION	1.1220423256422699E-5	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999777440903284	WITHOUT_CLASSIFICATION	2.2255909671679986E-5	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999801604422823	WITHOUT_CLASSIFICATION	1.9839557717679068E-5	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999977770561067	WITHOUT_CLASSIFICATION	2.222943893343342E-6	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999369886743942	WITHOUT_CLASSIFICATION	6.301132560582423E-5	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9998959964481847	WITHOUT_CLASSIFICATION	1.0400355181529574E-4	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999976826886683	WITHOUT_CLASSIFICATION	2.3173113317124555E-6	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999964365841604	WITHOUT_CLASSIFICATION	3.563415839557897E-6	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9998959964481847	WITHOUT_CLASSIFICATION	1.0400355181529574E-4	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999463053941112	WITHOUT_CLASSIFICATION	5.369460588890155E-5	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999993709168659	WITHOUT_CLASSIFICATION	6.290831341306319E-7	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9998872008374087	WITHOUT_CLASSIFICATION	1.127991625912555E-4	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999668584870587	WITHOUT_CLASSIFICATION	3.314151294135254E-5	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.999952729841389	WITHOUT_CLASSIFICATION	4.7270158610869684E-5	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999973460524787	WITHOUT_CLASSIFICATION	2.6539475212896307E-6	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999906428875018	WITHOUT_CLASSIFICATION	9.357112498210893E-6	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999711328070319	WITHOUT_CLASSIFICATION	2.8867192968070684E-5	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999263181928356	WITHOUT_CLASSIFICATION	7.368180716438613E-5	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999073411355845	WITHOUT_CLASSIFICATION	9.265886441553566E-5	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9998908456401338	WITHOUT_CLASSIFICATION	1.0915435986626255E-4	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9998947756524784	WITHOUT_CLASSIFICATION	1.0522434752150002E-4	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999209403077286	WITHOUT_CLASSIFICATION	7.905969227140484E-5	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999464401932041	WITHOUT_CLASSIFICATION	5.35598067958129E-5	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999488108399328	WITHOUT_CLASSIFICATION	5.118916006721274E-5	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999407811116586	WITHOUT_CLASSIFICATION	5.921888834143985E-5	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999438150310715	WITHOUT_CLASSIFICATION	5.6184968928440075E-5	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999953494322872	WITHOUT_CLASSIFICATION	4.650567712860439E-6	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999937675728617	WITHOUT_CLASSIFICATION	6.232427138298325E-6	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999698932709495	WITHOUT_CLASSIFICATION	3.0106729050406043E-5	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999808565773649	WITHOUT_CLASSIFICATION	1.914342263511844E-5	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999534982476063	WITHOUT_CLASSIFICATION	4.6501752393786604E-5	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999505727911298	WITHOUT_CLASSIFICATION	4.942720887021008E-5	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999739597059182	WITHOUT_CLASSIFICATION	2.6040294081731035E-5	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999530773422705	WITHOUT_CLASSIFICATION	4.692265772956196E-5	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999983262503127	WITHOUT_CLASSIFICATION	1.6737496873156493E-6	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999735482820852	WITHOUT_CLASSIFICATION	2.645171791477052E-5	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999874161260034	WITHOUT_CLASSIFICATION	1.2583873996684493E-5	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9999474598329812	WITHOUT_CLASSIFICATION	5.2540167018898476E-5	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9999140399870384	WITHOUT_CLASSIFICATION	8.596001296158353E-5	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.999914926426936	WITHOUT_CLASSIFICATION	8.50735730639499E-5	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9999821863166302	WITHOUT_CLASSIFICATION	1.7813683369831433E-5	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9999451051561127	WITHOUT_CLASSIFICATION	5.489484388738181E-5	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999987917759688	WITHOUT_CLASSIFICATION	1.2082240311351968E-6	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999013194345195	WITHOUT_CLASSIFICATION	9.868056548049112E-5	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9999870131729234	WITHOUT_CLASSIFICATION	1.2986827076726785E-5	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9999792809967001	WITHOUT_CLASSIFICATION	2.071900329995643E-5	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9997669256660032	WITHOUT_CLASSIFICATION	2.3307433399676053E-4	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999984222584304	WITHOUT_CLASSIFICATION	1.5777415696421554E-6	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9999688942461311	WITHOUT_CLASSIFICATION	3.1105753868929035E-5	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9999612151289022	WITHOUT_CLASSIFICATION	3.8784871097761964E-5	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999865024889558	WITHOUT_CLASSIFICATION	1.3497511044215402E-5	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9999191813344582	WITHOUT_CLASSIFICATION	8.081866554185E-5	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9999918802914516	WITHOUT_CLASSIFICATION	8.119708548438146E-6	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999797836493328	WITHOUT_CLASSIFICATION	2.0216350667256518E-5	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9999806365172018	WITHOUT_CLASSIFICATION	1.936348279817421E-5	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9998620808923967	WITHOUT_CLASSIFICATION	1.37919107603361E-4	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999642031532009	WITHOUT_CLASSIFICATION	3.579684679919971E-5	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999993022318319	WITHOUT_CLASSIFICATION	6.977681680775989E-7	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.999966832442943	WITHOUT_CLASSIFICATION	3.316755705689355E-5	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999202756902991	WITHOUT_CLASSIFICATION	7.972430970094857E-5	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999997960809276	WITHOUT_CLASSIFICATION	2.0391907231299046E-7	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999963275333518	WITHOUT_CLASSIFICATION	3.672466648246579E-6	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999993022318319	WITHOUT_CLASSIFICATION	6.977681680775989E-7	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.99967200886277	WITHOUT_CLASSIFICATION	3.279911372300094E-4	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.99967200886277	WITHOUT_CLASSIFICATION	3.279911372300094E-4	IMPLEMENTATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999518028989002	WITHOUT_CLASSIFICATION	4.819710109989568E-5	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999873060223333	WITHOUT_CLASSIFICATION	1.2693977666805698E-5	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999995774785495	WITHOUT_CLASSIFICATION	4.225214505857935E-7	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999989140808456	WITHOUT_CLASSIFICATION	1.0859191543698462E-6	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999976009401726	WITHOUT_CLASSIFICATION	2.399059827243987E-6	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999880023128717	WITHOUT_CLASSIFICATION	1.1997687128263202E-5	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.999991554044396	WITHOUT_CLASSIFICATION	8.445955603934778E-6	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.7471793610060594	IMPLEMENTATION	0.2528206389939405	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999928727037919	WITHOUT_CLASSIFICATION	7.1272962080622325E-6	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999996396633561	WITHOUT_CLASSIFICATION	3.6033664390652553E-7	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999999205754789	WITHOUT_CLASSIFICATION	7.942452102389426E-8	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999596977426	WITHOUT_CLASSIFICATION	4.030225748587636E-8	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999953136218881	WITHOUT_CLASSIFICATION	4.6863781119336925E-6	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999931413556599	WITHOUT_CLASSIFICATION	6.858644340031422E-6	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999988892296908	WITHOUT_CLASSIFICATION	1.1107703091075694E-6	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999991740366229	WITHOUT_CLASSIFICATION	8.259633772317323E-7	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999959057232813	WITHOUT_CLASSIFICATION	4.0942767186951705E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998725655345531	WITHOUT_CLASSIFICATION	1.274344654469642E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998725655345531	WITHOUT_CLASSIFICATION	1.274344654469642E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998725655345531	WITHOUT_CLASSIFICATION	1.274344654469642E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998725655345531	WITHOUT_CLASSIFICATION	1.274344654469642E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998725655345531	WITHOUT_CLASSIFICATION	1.274344654469642E-4	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9999884157147245	WITHOUT_CLASSIFICATION	1.1584285275427578E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999523936302569	WITHOUT_CLASSIFICATION	4.760636974297196E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999657312883065	WITHOUT_CLASSIFICATION	3.426871169348354E-5	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999979708503123	WITHOUT_CLASSIFICATION	2.0291496877298223E-6	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999215399502859	WITHOUT_CLASSIFICATION	7.846004971404511E-5	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999962086706246	WITHOUT_CLASSIFICATION	3.7913293753046485E-6	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999622724646284	WITHOUT_CLASSIFICATION	3.772753537144883E-5	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999813717075692	WITHOUT_CLASSIFICATION	1.862829243079186E-5	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999633644375499	WITHOUT_CLASSIFICATION	3.663556245021264E-5	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9999882606686238	WITHOUT_CLASSIFICATION	1.1739331376160535E-5	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9999869819705359	WITHOUT_CLASSIFICATION	1.3018029464013155E-5	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9999890469663401	WITHOUT_CLASSIFICATION	1.0953033659839512E-5	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9999894345177086	WITHOUT_CLASSIFICATION	1.0565482291410962E-5	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9999893500966383	WITHOUT_CLASSIFICATION	1.0649903361791544E-5	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9999887888914827	WITHOUT_CLASSIFICATION	1.121110851728895E-5	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9999882154248562	WITHOUT_CLASSIFICATION	1.1784575143918256E-5	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9999879439076768	WITHOUT_CLASSIFICATION	1.2056092323204114E-5	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9999894076273868	WITHOUT_CLASSIFICATION	1.0592372613276806E-5	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9999878984855176	WITHOUT_CLASSIFICATION	1.2101514482461055E-5	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999889813895779	WITHOUT_CLASSIFICATION	1.1018610422002081E-5	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9999875676010281	WITHOUT_CLASSIFICATION	1.2432398971844876E-5	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9999871569017008	WITHOUT_CLASSIFICATION	1.2843098299221352E-5	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999880636244975	WITHOUT_CLASSIFICATION	1.1936375502456222E-5	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.999987534749842	WITHOUT_CLASSIFICATION	1.2465250158039906E-5	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.999988545342397	WITHOUT_CLASSIFICATION	1.1454657603050873E-5	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.999987516172056	WITHOUT_CLASSIFICATION	1.2483827944026412E-5	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9999884694076345	WITHOUT_CLASSIFICATION	1.1530592365436814E-5	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9999882506638327	WITHOUT_CLASSIFICATION	1.1749336167352319E-5	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999877648070302	WITHOUT_CLASSIFICATION	1.223519296973221E-5	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999881689664275	WITHOUT_CLASSIFICATION	1.1831033572457628E-5	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999864071836783	WITHOUT_CLASSIFICATION	1.3592816321805959E-5	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9999877745934287	WITHOUT_CLASSIFICATION	1.2225406571273065E-5	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9999875198457084	WITHOUT_CLASSIFICATION	1.2480154291473828E-5	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.999985960134968	WITHOUT_CLASSIFICATION	1.4039865032065669E-5	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9999866569712729	WITHOUT_CLASSIFICATION	1.3343028727155441E-5	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9999854253910315	WITHOUT_CLASSIFICATION	1.4574608968336784E-5	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9999864028039214	WITHOUT_CLASSIFICATION	1.3597196078759907E-5	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.999985671759965	WITHOUT_CLASSIFICATION	1.4328240035135063E-5	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.999987556252627	WITHOUT_CLASSIFICATION	1.2443747372866791E-5	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9999862216625008	WITHOUT_CLASSIFICATION	1.3778337499122893E-5	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.999986689557583	WITHOUT_CLASSIFICATION	1.3310442417066967E-5	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.999986277616649	WITHOUT_CLASSIFICATION	1.372238335109627E-5	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9999870328736702	WITHOUT_CLASSIFICATION	1.2967126329801037E-5	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9999866021674761	WITHOUT_CLASSIFICATION	1.3397832523846081E-5	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9999887353164358	WITHOUT_CLASSIFICATION	1.1264683564050396E-5	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9999875548260135	WITHOUT_CLASSIFICATION	1.2445173986430481E-5	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.999986841791607	WITHOUT_CLASSIFICATION	1.3158208393011625E-5	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9999889543361706	WITHOUT_CLASSIFICATION	1.1045663829392694E-5	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9999877501140314	WITHOUT_CLASSIFICATION	1.2249885968612821E-5	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.999986457302533	WITHOUT_CLASSIFICATION	1.3542697467099453E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999657312883065	WITHOUT_CLASSIFICATION	3.426871169348354E-5	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999868656049167	WITHOUT_CLASSIFICATION	1.3134395083362191E-5	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.99998732801604	WITHOUT_CLASSIFICATION	1.2671983960143274E-5	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999870395285181	WITHOUT_CLASSIFICATION	1.29604714819175E-5	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999854197908786	WITHOUT_CLASSIFICATION	1.4580209121243445E-5	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9999852952513816	WITHOUT_CLASSIFICATION	1.4704748618354754E-5	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9999860625921465	WITHOUT_CLASSIFICATION	1.3937407853387782E-5	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9999866252971679	WITHOUT_CLASSIFICATION	1.3374702832114594E-5	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.999985677570479	WITHOUT_CLASSIFICATION	1.4322429521051069E-5	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.999985610241499	WITHOUT_CLASSIFICATION	1.4389758501050658E-5	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9999855305929205	WITHOUT_CLASSIFICATION	1.4469407079627165E-5	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9999852241680474	WITHOUT_CLASSIFICATION	1.4775831952728375E-5	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.9999856455040371	WITHOUT_CLASSIFICATION	1.4354495962927301E-5	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.9999859876710173	WITHOUT_CLASSIFICATION	1.4012328982784834E-5	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9999876560573663	WITHOUT_CLASSIFICATION	1.2343942633739237E-5	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9999869888087781	WITHOUT_CLASSIFICATION	1.301119122184571E-5	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999890327974158	WITHOUT_CLASSIFICATION	1.0967202584256431E-5	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9999885010113537	WITHOUT_CLASSIFICATION	1.1498988646168921E-5	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9999877945491162	WITHOUT_CLASSIFICATION	1.2205450883736467E-5	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9999874941524599	WITHOUT_CLASSIFICATION	1.2505847540044512E-5	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9999874733376937	WITHOUT_CLASSIFICATION	1.2526662306260401E-5	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9999874892080592	WITHOUT_CLASSIFICATION	1.2510791940764032E-5	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9999863207213686	WITHOUT_CLASSIFICATION	1.3679278631346188E-5	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9999858222067908	WITHOUT_CLASSIFICATION	1.4177793209200462E-5	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9999876421111533	WITHOUT_CLASSIFICATION	1.2357888846644716E-5	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9999858996207771	WITHOUT_CLASSIFICATION	1.4100379222931139E-5	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9999871396372186	WITHOUT_CLASSIFICATION	1.286036278141279E-5	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999861672465084	WITHOUT_CLASSIFICATION	1.3832753491600535E-5	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999864514511216	WITHOUT_CLASSIFICATION	1.354854887847303E-5	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9999887126252447	WITHOUT_CLASSIFICATION	1.1287374755379232E-5	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9999875282136581	WITHOUT_CLASSIFICATION	1.2471786341893068E-5	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9999877435564171	WITHOUT_CLASSIFICATION	1.225644358300257E-5	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9999859184259086	WITHOUT_CLASSIFICATION	1.4081574091395334E-5	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9999865319738924	WITHOUT_CLASSIFICATION	1.3468026107567375E-5	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999874903513616	WITHOUT_CLASSIFICATION	1.2509648638458417E-5	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9999867278375828	WITHOUT_CLASSIFICATION	1.3272162417208249E-5	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9999871974651768	WITHOUT_CLASSIFICATION	1.2802534823172157E-5	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9999873637472091	WITHOUT_CLASSIFICATION	1.263625279101529E-5	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9999856999835499	WITHOUT_CLASSIFICATION	1.4300016450076061E-5	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9999855216988954	WITHOUT_CLASSIFICATION	1.447830110458907E-5	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9999868597155405	WITHOUT_CLASSIFICATION	1.3140284459562504E-5	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9999867536316365	WITHOUT_CLASSIFICATION	1.3246368363560271E-5	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9999857483156063	WITHOUT_CLASSIFICATION	1.4251684393798049E-5	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999865466505264	WITHOUT_CLASSIFICATION	1.3453349473475811E-5	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.999985884336044	WITHOUT_CLASSIFICATION	1.4115663955950732E-5	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999862798992168	WITHOUT_CLASSIFICATION	1.3720100783139122E-5	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999859606609023	WITHOUT_CLASSIFICATION	1.4039339097718167E-5	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999877107125531	WITHOUT_CLASSIFICATION	1.2289287446971813E-5	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999863530320083	WITHOUT_CLASSIFICATION	1.3646967991671044E-5	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9999862339689224	WITHOUT_CLASSIFICATION	1.3766031077632218E-5	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9999884798188176	WITHOUT_CLASSIFICATION	1.1520181182501954E-5	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9999871767149346	WITHOUT_CLASSIFICATION	1.28232850653305E-5	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9999876544475483	WITHOUT_CLASSIFICATION	1.2345552451681913E-5	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9999877647908737	WITHOUT_CLASSIFICATION	1.2235209126271488E-5	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9999881032406422	WITHOUT_CLASSIFICATION	1.1896759357725714E-5	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9999885428057946	WITHOUT_CLASSIFICATION	1.145719420528009E-5	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9999873175888194	WITHOUT_CLASSIFICATION	1.2682411180590693E-5	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9999887765328019	WITHOUT_CLASSIFICATION	1.1223467198063996E-5	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.999987546392789	WITHOUT_CLASSIFICATION	1.2453607211084539E-5	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9999873755626765	WITHOUT_CLASSIFICATION	1.2624437323611294E-5	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999877730120807	WITHOUT_CLASSIFICATION	1.2226987919134964E-5	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999869918536515	WITHOUT_CLASSIFICATION	1.3008146348509135E-5	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.999986669418945	WITHOUT_CLASSIFICATION	1.3330581055030515E-5	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.999986771807536	WITHOUT_CLASSIFICATION	1.322819246396217E-5	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9999863301450799	WITHOUT_CLASSIFICATION	1.3669854920248366E-5	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9999878502733419	WITHOUT_CLASSIFICATION	1.214972665817685E-5	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9999863712003593	WITHOUT_CLASSIFICATION	1.3628799640845663E-5	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9999877339943508	WITHOUT_CLASSIFICATION	1.2266005649101035E-5	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.99998578334677	WITHOUT_CLASSIFICATION	1.4216653229858298E-5	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9999863032455049	WITHOUT_CLASSIFICATION	1.3696754495128622E-5	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9999877644205584	WITHOUT_CLASSIFICATION	1.223557944154794E-5	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999877069092895	WITHOUT_CLASSIFICATION	1.2293090710518624E-5	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999865049164419	WITHOUT_CLASSIFICATION	1.3495083558150777E-5	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999868575297546	WITHOUT_CLASSIFICATION	1.3142470245373023E-5	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9999887511063729	WITHOUT_CLASSIFICATION	1.1248893627213954E-5	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9999874383590618	WITHOUT_CLASSIFICATION	1.2561640938273472E-5	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9999878591113742	WITHOUT_CLASSIFICATION	1.2140888625705948E-5	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9999883881549584	WITHOUT_CLASSIFICATION	1.1611845041672507E-5	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9999880478426971	WITHOUT_CLASSIFICATION	1.1952157302874235E-5	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9999866715626742	WITHOUT_CLASSIFICATION	1.332843732595277E-5	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999880841970297	WITHOUT_CLASSIFICATION	1.1915802970245056E-5	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9999873286953852	WITHOUT_CLASSIFICATION	1.2671304614786192E-5	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9999880978039738	WITHOUT_CLASSIFICATION	1.1902196026182568E-5	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999867117683038	WITHOUT_CLASSIFICATION	1.3288231696121574E-5	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9999867014412442	WITHOUT_CLASSIFICATION	1.3298558755796935E-5	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9999858315841149	WITHOUT_CLASSIFICATION	1.4168415885112463E-5	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999876671058329	WITHOUT_CLASSIFICATION	1.2332894167141758E-5	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9999867775653902	WITHOUT_CLASSIFICATION	1.3222434609848167E-5	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9999859281397135	WITHOUT_CLASSIFICATION	1.4071860286481575E-5	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999867597104098	WITHOUT_CLASSIFICATION	1.324028959014818E-5	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9999861730629757	WITHOUT_CLASSIFICATION	1.3826937024296772E-5	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999877822356685	WITHOUT_CLASSIFICATION	1.2217764331426327E-5	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9999869800717587	WITHOUT_CLASSIFICATION	1.3019928241316712E-5	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9999864436665359	WITHOUT_CLASSIFICATION	1.3556333464262625E-5	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9999865365286706	WITHOUT_CLASSIFICATION	1.3463471329422414E-5	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.9999905923579737	WITHOUT_CLASSIFICATION	9.407642026230485E-6	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.999990572493818	WITHOUT_CLASSIFICATION	9.427506182158043E-6	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9999903707755973	WITHOUT_CLASSIFICATION	9.629224402789157E-6	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.99999021870065	WITHOUT_CLASSIFICATION	9.78129935003983E-6	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9999903694459759	WITHOUT_CLASSIFICATION	9.630554024085986E-6	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9999910211729377	WITHOUT_CLASSIFICATION	8.978827062329897E-6	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9999908214565943	WITHOUT_CLASSIFICATION	9.178543405735493E-6	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.999989740031332	WITHOUT_CLASSIFICATION	1.02599686678884E-5	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9999900011002212	WITHOUT_CLASSIFICATION	9.998899778815391E-6	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.999989890737799	WITHOUT_CLASSIFICATION	1.0109262200919802E-5	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9999897181070437	WITHOUT_CLASSIFICATION	1.0281892956258312E-5	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9999899100126022	WITHOUT_CLASSIFICATION	1.0089987397809355E-5	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9999903509589092	WITHOUT_CLASSIFICATION	9.649041090865758E-6	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9999892953306029	WITHOUT_CLASSIFICATION	1.0704669397149837E-5	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9999896934405975	WITHOUT_CLASSIFICATION	1.0306559402441647E-5	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9999902193793824	WITHOUT_CLASSIFICATION	9.780620617657237E-6	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9999900484223081	WITHOUT_CLASSIFICATION	9.95157769178639E-6	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.999989719243952	WITHOUT_CLASSIFICATION	1.0280756048088316E-5	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.999990578307519	WITHOUT_CLASSIFICATION	9.421692480904058E-6	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9999908495322766	WITHOUT_CLASSIFICATION	9.150467723407175E-6	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9999897788244759	WITHOUT_CLASSIFICATION	1.0221175523979416E-5	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999892052759538	WITHOUT_CLASSIFICATION	1.079472404609696E-5	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.9999897819161867	WITHOUT_CLASSIFICATION	1.0218083813223857E-5	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9999888314708261	WITHOUT_CLASSIFICATION	1.1168529173990736E-5	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9999891919849309	WITHOUT_CLASSIFICATION	1.080801506915595E-5	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999904962116557	WITHOUT_CLASSIFICATION	9.503788344216596E-6	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.999989499222157	WITHOUT_CLASSIFICATION	1.0500777842981052E-5	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9999893796966787	WITHOUT_CLASSIFICATION	1.0620303321355532E-5	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9999893985758097	WITHOUT_CLASSIFICATION	1.0601424190314462E-5	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.999990058228037	WITHOUT_CLASSIFICATION	9.941771963058227E-6	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9999887872076941	WITHOUT_CLASSIFICATION	1.1212792305865922E-5	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9999885723330425	WITHOUT_CLASSIFICATION	1.1427666957497429E-5	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999885957327286	WITHOUT_CLASSIFICATION	1.1404267271513528E-5	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9999889497338522	WITHOUT_CLASSIFICATION	1.1050266147828139E-5	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9999883491906179	WITHOUT_CLASSIFICATION	1.1650809382013098E-5	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9999883976369135	WITHOUT_CLASSIFICATION	1.1602363086525386E-5	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9999885606140339	WITHOUT_CLASSIFICATION	1.1439385966012897E-5	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9999890559771464	WITHOUT_CLASSIFICATION	1.0944022853671274E-5	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9999897904711128	WITHOUT_CLASSIFICATION	1.0209528887107427E-5	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999901676666993	WITHOUT_CLASSIFICATION	9.832333300614845E-6	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999896138672113	WITHOUT_CLASSIFICATION	1.0386132788635053E-5	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999902660600579	WITHOUT_CLASSIFICATION	9.73393994205734E-6	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9999892649540054	WITHOUT_CLASSIFICATION	1.0735045994563384E-5	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9999899208532738	WITHOUT_CLASSIFICATION	1.0079146726237774E-5	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9999898278801078	WITHOUT_CLASSIFICATION	1.017211989219779E-5	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.9999899360462132	WITHOUT_CLASSIFICATION	1.0063953786693551E-5	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999886005569593	WITHOUT_CLASSIFICATION	1.1399443040787017E-5	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.999988740863129	WITHOUT_CLASSIFICATION	1.125913687086606E-5	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9999894684796636	WITHOUT_CLASSIFICATION	1.0531520336247086E-5	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.999988669201186	WITHOUT_CLASSIFICATION	1.1330798814057263E-5	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9999898369013962	WITHOUT_CLASSIFICATION	1.016309860392682E-5	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9999898654754108	WITHOUT_CLASSIFICATION	1.0134524589096165E-5	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9999900441884709	WITHOUT_CLASSIFICATION	9.955811529163199E-6	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9999888291920861	WITHOUT_CLASSIFICATION	1.1170807913888654E-5	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.999989121075014	WITHOUT_CLASSIFICATION	1.0878924985997638E-5	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9999904682098005	WITHOUT_CLASSIFICATION	9.531790199438099E-6	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9999902173263059	WITHOUT_CLASSIFICATION	9.782673694044787E-6	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9999894060618996	WITHOUT_CLASSIFICATION	1.0593938100468578E-5	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9999891277502041	WITHOUT_CLASSIFICATION	1.0872249795829062E-5	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999906574504903	WITHOUT_CLASSIFICATION	9.342549509654664E-6	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9999896779882506	WITHOUT_CLASSIFICATION	1.032201174949755E-5	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.999988939884921	WITHOUT_CLASSIFICATION	1.106011507897221E-5	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999892890875697	WITHOUT_CLASSIFICATION	1.0710912430314247E-5	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.999989396587848	WITHOUT_CLASSIFICATION	1.0603412152008785E-5	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9999890047701179	WITHOUT_CLASSIFICATION	1.0995229882096993E-5	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9999892517374266	WITHOUT_CLASSIFICATION	1.0748262573334323E-5	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9999895882621025	WITHOUT_CLASSIFICATION	1.0411737897584334E-5	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999890885126399	WITHOUT_CLASSIFICATION	1.0911487360007954E-5	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999897595019639	WITHOUT_CLASSIFICATION	1.024049803601247E-5	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9999886048170545	WITHOUT_CLASSIFICATION	1.1395182945522736E-5	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9999896541552648	WITHOUT_CLASSIFICATION	1.0345844735231873E-5	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9999895785616699	WITHOUT_CLASSIFICATION	1.0421438330020232E-5	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9999895963922343	WITHOUT_CLASSIFICATION	1.0403607765768024E-5	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9999893595455026	WITHOUT_CLASSIFICATION	1.0640454497462157E-5	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9999890743703692	WITHOUT_CLASSIFICATION	1.0925629630778399E-5	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.999987655767732	WITHOUT_CLASSIFICATION	1.2344232268105122E-5	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999886230548082	WITHOUT_CLASSIFICATION	1.137694519172769E-5	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9999880716756178	WITHOUT_CLASSIFICATION	1.1928324382156566E-5	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.999989380697572	WITHOUT_CLASSIFICATION	1.0619302427965638E-5	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9999881946910293	WITHOUT_CLASSIFICATION	1.1805308970803562E-5	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9999894381641568	WITHOUT_CLASSIFICATION	1.0561835843161307E-5	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9999883515617445	WITHOUT_CLASSIFICATION	1.164843825551536E-5	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9999886351368957	WITHOUT_CLASSIFICATION	1.1364863104227559E-5	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999882994768307	WITHOUT_CLASSIFICATION	1.1700523169351894E-5	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999896202076277	WITHOUT_CLASSIFICATION	1.037979237222161E-5	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9999896454269502	WITHOUT_CLASSIFICATION	1.03545730497008E-5	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999891433462128	WITHOUT_CLASSIFICATION	1.0856653787207644E-5	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9999881435466291	WITHOUT_CLASSIFICATION	1.185645337089207E-5	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9999890128475268	WITHOUT_CLASSIFICATION	1.0987152473064707E-5	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9999891673310226	WITHOUT_CLASSIFICATION	1.083266897736562E-5	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.999988964172357	WITHOUT_CLASSIFICATION	1.1035827643027631E-5	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9999875705511111	WITHOUT_CLASSIFICATION	1.2429448888829528E-5	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.9999877701808609	WITHOUT_CLASSIFICATION	1.2229819138951569E-5	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9999877419982723	WITHOUT_CLASSIFICATION	1.2258001727672249E-5	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9999878320804493	WITHOUT_CLASSIFICATION	1.2167919550583856E-5	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.999987836914964	WITHOUT_CLASSIFICATION	1.2163085036080193E-5	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.999987703201822	WITHOUT_CLASSIFICATION	1.2296798177940794E-5	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9999878780032588	WITHOUT_CLASSIFICATION	1.2121996741125746E-5	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999885259931708	WITHOUT_CLASSIFICATION	1.1474006829200876E-5	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999884605307913	WITHOUT_CLASSIFICATION	1.1539469208695876E-5	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9999896852254074	WITHOUT_CLASSIFICATION	1.031477459253179E-5	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9999894207832132	WITHOUT_CLASSIFICATION	1.0579216786804042E-5	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9999895472812973	WITHOUT_CLASSIFICATION	1.0452718702801364E-5	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9999886601728717	WITHOUT_CLASSIFICATION	1.1339827128261303E-5	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.999988841039374	WITHOUT_CLASSIFICATION	1.1158960626017799E-5	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999896623425457	WITHOUT_CLASSIFICATION	1.0337657454262574E-5	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9999894203082674	WITHOUT_CLASSIFICATION	1.0579691732640558E-5	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9999888105792006	WITHOUT_CLASSIFICATION	1.1189420799370354E-5	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9999884827448754	WITHOUT_CLASSIFICATION	1.1517255124623193E-5	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9999884465807094	WITHOUT_CLASSIFICATION	1.1553419290566686E-5	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9999880326711803	WITHOUT_CLASSIFICATION	1.1967328819663318E-5	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9999881591549415	WITHOUT_CLASSIFICATION	1.184084505845739E-5	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9999887336265302	WITHOUT_CLASSIFICATION	1.1266373469722667E-5	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9999883281547243	WITHOUT_CLASSIFICATION	1.1671845275798566E-5	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9999879878178503	WITHOUT_CLASSIFICATION	1.201218214971144E-5	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.999987993823915	WITHOUT_CLASSIFICATION	1.2006176085103873E-5	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9999886586616871	WITHOUT_CLASSIFICATION	1.1341338312855663E-5	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.999989002844562	WITHOUT_CLASSIFICATION	1.0997155437857618E-5	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999892107686265	WITHOUT_CLASSIFICATION	1.0789231373595257E-5	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999881370091495	WITHOUT_CLASSIFICATION	1.1862990850453248E-5	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9999888979463138	WITHOUT_CLASSIFICATION	1.1102053686223403E-5	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999884759302222	WITHOUT_CLASSIFICATION	1.152406977784892E-5	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9999878464451036	WITHOUT_CLASSIFICATION	1.2153554896442628E-5	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999881340334875	WITHOUT_CLASSIFICATION	1.1865966512544901E-5	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9999877511654762	WITHOUT_CLASSIFICATION	1.224883452381121E-5	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9999879428866363	WITHOUT_CLASSIFICATION	1.2057113363813608E-5	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999886304829546	WITHOUT_CLASSIFICATION	1.136951704532211E-5	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9999880643603323	WITHOUT_CLASSIFICATION	1.193563966777922E-5	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9999882370595521	WITHOUT_CLASSIFICATION	1.1762940447864847E-5	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9999894622919856	WITHOUT_CLASSIFICATION	1.0537708014355583E-5	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.9999888777040978	WITHOUT_CLASSIFICATION	1.112229590211539E-5	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999887243048872	WITHOUT_CLASSIFICATION	1.1275695112874744E-5	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999891182102185	WITHOUT_CLASSIFICATION	1.0881789781475204E-5	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999655018150175	WITHOUT_CLASSIFICATION	3.4498184982476786E-5	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9969913663181579	WITHOUT_CLASSIFICATION	0.003008633681842116	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9997050577010669	WITHOUT_CLASSIFICATION	2.9494229893309846E-4	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9998641113876755	WITHOUT_CLASSIFICATION	1.3588861232454802E-4	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999817052781084	WITHOUT_CLASSIFICATION	1.829472189159226E-5	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999939429050579	WITHOUT_CLASSIFICATION	6.057094941993916E-6	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9996955157291789	WITHOUT_CLASSIFICATION	3.0448427082104267E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9996895475722126	WITHOUT_CLASSIFICATION	3.1045242778737065E-4	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.999944351920997	WITHOUT_CLASSIFICATION	5.564807900297922E-5	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9996811895254768	WITHOUT_CLASSIFICATION	3.1881047452319894E-4	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9999959494215839	WITHOUT_CLASSIFICATION	4.0505784161450665E-6	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9999866684930928	WITHOUT_CLASSIFICATION	1.3331506907164342E-5	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999912770305611	WITHOUT_CLASSIFICATION	8.722969438761977E-6	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9991413716896479	WITHOUT_CLASSIFICATION	8.586283103521559E-4	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999901145848678	WITHOUT_CLASSIFICATION	9.885415132218487E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999472128098151	WITHOUT_CLASSIFICATION	5.278719018473585E-5	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.999920623848923	WITHOUT_CLASSIFICATION	7.937615107700116E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999827037400916	WITHOUT_CLASSIFICATION	1.7296259908410906E-5	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999972364602712	WITHOUT_CLASSIFICATION	2.7635397288091786E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999970937042167	WITHOUT_CLASSIFICATION	2.906295783289697E-6	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999874233114221	WITHOUT_CLASSIFICATION	1.257668857790704E-5	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999886885642413	WITHOUT_CLASSIFICATION	1.1311435758624389E-5	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999974635317576	WITHOUT_CLASSIFICATION	2.5364682424028603E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999884749201235	WITHOUT_CLASSIFICATION	1.152507987639731E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999884749201235	WITHOUT_CLASSIFICATION	1.152507987639731E-5	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999997867428246	WITHOUT_CLASSIFICATION	2.1325717547125677E-7	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999859993972942	WITHOUT_CLASSIFICATION	1.4000602705756933E-5	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999820837219495	WITHOUT_CLASSIFICATION	1.7916278050471813E-5	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999994292214252	WITHOUT_CLASSIFICATION	5.707785749005218E-7	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999880458944601	WITHOUT_CLASSIFICATION	1.1954105539793314E-5	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.99999961669025	WITHOUT_CLASSIFICATION	3.833097500677413E-7	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999894751673145	WITHOUT_CLASSIFICATION	1.0524832685483156E-5	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999900836875445	WITHOUT_CLASSIFICATION	9.916312455520163E-6	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999794608345332	WITHOUT_CLASSIFICATION	2.0539165466815865E-5	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.999992872001042	WITHOUT_CLASSIFICATION	7.127998957947034E-6	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9999593809251823	WITHOUT_CLASSIFICATION	4.061907481756076E-5	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999985528163863	WITHOUT_CLASSIFICATION	1.4471836136650429E-6	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999991528208503	WITHOUT_CLASSIFICATION	8.471791497591236E-7	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999121160115522	WITHOUT_CLASSIFICATION	8.788398844788767E-5	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999109995709783	WITHOUT_CLASSIFICATION	8.900042902166019E-5	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999570984201103	WITHOUT_CLASSIFICATION	4.290157988975158E-5	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999982431806537	WITHOUT_CLASSIFICATION	1.7568193463324593E-6	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.999944676405153	WITHOUT_CLASSIFICATION	5.532359484686147E-5	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999997124038429	WITHOUT_CLASSIFICATION	2.8759615713644837E-7	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999866358586225	WITHOUT_CLASSIFICATION	1.3364141377500333E-5	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999974361754372	WITHOUT_CLASSIFICATION	2.5638245627174016E-6	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9999213635262122	WITHOUT_CLASSIFICATION	7.863647378776501E-5	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999996234295067	WITHOUT_CLASSIFICATION	3.7657049333295444E-7	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999876900128919	WITHOUT_CLASSIFICATION	1.2309987108157756E-5	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999996234295067	WITHOUT_CLASSIFICATION	3.7657049333295444E-7	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999965521888536	WITHOUT_CLASSIFICATION	3.4478111464701116E-6	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999968652551283	WITHOUT_CLASSIFICATION	3.134744871674245E-6	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999962559993077	WITHOUT_CLASSIFICATION	3.744000692209875E-6	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999582284922558	WITHOUT_CLASSIFICATION	4.177150774419894E-5	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.999978349281693	WITHOUT_CLASSIFICATION	2.1650718306853855E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9998741349182184	WITHOUT_CLASSIFICATION	1.2586508178155585E-4	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9998741349182184	WITHOUT_CLASSIFICATION	1.2586508178155585E-4	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9998741349182184	WITHOUT_CLASSIFICATION	1.2586508178155585E-4	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999977116558961	WITHOUT_CLASSIFICATION	2.288344103897642E-6	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9987553795479029	WITHOUT_CLASSIFICATION	0.0012446204520970984	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.999983994989625	WITHOUT_CLASSIFICATION	1.6005010375080007E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998721173353105	WITHOUT_CLASSIFICATION	1.278826646895216E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998721173353105	WITHOUT_CLASSIFICATION	1.278826646895216E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998721173353105	WITHOUT_CLASSIFICATION	1.278826646895216E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998721173353105	WITHOUT_CLASSIFICATION	1.278826646895216E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998721173353105	WITHOUT_CLASSIFICATION	1.278826646895216E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998721173353105	WITHOUT_CLASSIFICATION	1.278826646895216E-4	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999081362918428	WITHOUT_CLASSIFICATION	9.186370815717777E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999081362918428	WITHOUT_CLASSIFICATION	9.186370815717777E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999081362918428	WITHOUT_CLASSIFICATION	9.186370815717777E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999081362918428	WITHOUT_CLASSIFICATION	9.186370815717777E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999081362918428	WITHOUT_CLASSIFICATION	9.186370815717777E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998307049542727	WITHOUT_CLASSIFICATION	1.6929504572722853E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998307049542727	WITHOUT_CLASSIFICATION	1.6929504572722853E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998307049542727	WITHOUT_CLASSIFICATION	1.6929504572722853E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998307049542727	WITHOUT_CLASSIFICATION	1.6929504572722853E-4	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9998307049542727	WITHOUT_CLASSIFICATION	1.6929504572722853E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998500308193066	WITHOUT_CLASSIFICATION	1.499691806933989E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998500308193066	WITHOUT_CLASSIFICATION	1.499691806933989E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998500308193066	WITHOUT_CLASSIFICATION	1.499691806933989E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998500308193066	WITHOUT_CLASSIFICATION	1.499691806933989E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998500308193066	WITHOUT_CLASSIFICATION	1.499691806933989E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9998500308193066	WITHOUT_CLASSIFICATION	1.499691806933989E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999686825572566	WITHOUT_CLASSIFICATION	3.131744274342301E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999686825572566	WITHOUT_CLASSIFICATION	3.131744274342301E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999686825572566	WITHOUT_CLASSIFICATION	3.131744274342301E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999686825572566	WITHOUT_CLASSIFICATION	3.131744274342301E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999686825572566	WITHOUT_CLASSIFICATION	3.131744274342301E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999616820217191	WITHOUT_CLASSIFICATION	3.831797828093192E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999616820217191	WITHOUT_CLASSIFICATION	3.831797828093192E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999616820217191	WITHOUT_CLASSIFICATION	3.831797828093192E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999616820217191	WITHOUT_CLASSIFICATION	3.831797828093192E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999616820217191	WITHOUT_CLASSIFICATION	3.831797828093192E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999657312883065	WITHOUT_CLASSIFICATION	3.426871169348354E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999657312883065	WITHOUT_CLASSIFICATION	3.426871169348354E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999657312883065	WITHOUT_CLASSIFICATION	3.426871169348354E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999657312883065	WITHOUT_CLASSIFICATION	3.426871169348354E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999657312883065	WITHOUT_CLASSIFICATION	3.426871169348354E-5	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999979708503123	WITHOUT_CLASSIFICATION	2.0291496877298223E-6	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999962086706246	WITHOUT_CLASSIFICATION	3.7913293753046485E-6	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999622724646284	WITHOUT_CLASSIFICATION	3.772753537144883E-5	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999813717075692	WITHOUT_CLASSIFICATION	1.862829243079186E-5	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999633644375499	WITHOUT_CLASSIFICATION	3.663556245021264E-5	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999896595151276	WITHOUT_CLASSIFICATION	1.0340484872314604E-5	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999889813895779	WITHOUT_CLASSIFICATION	1.1018610422002081E-5	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.999988545342397	WITHOUT_CLASSIFICATION	1.1454657603050873E-5	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999877648070302	WITHOUT_CLASSIFICATION	1.223519296973221E-5	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999881689664275	WITHOUT_CLASSIFICATION	1.1831033572457628E-5	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999878222304123	WITHOUT_CLASSIFICATION	1.2177769587670189E-5	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999864071836783	WITHOUT_CLASSIFICATION	1.3592816321805959E-5	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9999882097795396	WITHOUT_CLASSIFICATION	1.1790220460360055E-5	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9999882429282279	WITHOUT_CLASSIFICATION	1.1757071772072334E-5	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9999870337900068	WITHOUT_CLASSIFICATION	1.2966209993230467E-5	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9999885536387702	WITHOUT_CLASSIFICATION	1.1446361229841637E-5	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9999879308844907	WITHOUT_CLASSIFICATION	1.2069115509383731E-5	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.999989118145049	WITHOUT_CLASSIFICATION	1.0881854951021496E-5	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9999878466654666	WITHOUT_CLASSIFICATION	1.2153334533446233E-5	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9999874682433891	WITHOUT_CLASSIFICATION	1.2531756610927216E-5	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9999882166441156	WITHOUT_CLASSIFICATION	1.1783355884315578E-5	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.999987580052016	WITHOUT_CLASSIFICATION	1.2419947983954361E-5	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9999878890807139	WITHOUT_CLASSIFICATION	1.2110919286162963E-5	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9999875306116094	WITHOUT_CLASSIFICATION	1.2469388390509424E-5	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9999876444716084	WITHOUT_CLASSIFICATION	1.2355528391696762E-5	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9999877155743373	WITHOUT_CLASSIFICATION	1.2284425662683003E-5	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9999882892329105	WITHOUT_CLASSIFICATION	1.1710767089571877E-5	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9999884318236979	WITHOUT_CLASSIFICATION	1.1568176302163703E-5	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9999876392048368	WITHOUT_CLASSIFICATION	1.2360795163213503E-5	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9999869994362838	WITHOUT_CLASSIFICATION	1.3000563716147303E-5	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9999881522698004	WITHOUT_CLASSIFICATION	1.1847730199476095E-5	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.999987400998934	WITHOUT_CLASSIFICATION	1.2599001066037753E-5	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9999860100873132	WITHOUT_CLASSIFICATION	1.3989912686643228E-5	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9999863660647831	WITHOUT_CLASSIFICATION	1.3633935216821524E-5	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.99998599204987	WITHOUT_CLASSIFICATION	1.4007950129898173E-5	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9999863272536903	WITHOUT_CLASSIFICATION	1.3672746309653973E-5	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9999863863533625	WITHOUT_CLASSIFICATION	1.3613646637618583E-5	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9999863223562875	WITHOUT_CLASSIFICATION	1.3677643712525965E-5	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.999985962861081	WITHOUT_CLASSIFICATION	1.4037138919110883E-5	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9999880929293704	WITHOUT_CLASSIFICATION	1.1907070629621007E-5	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.99998669227581	WITHOUT_CLASSIFICATION	1.3307724189885727E-5	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9999866336948081	WITHOUT_CLASSIFICATION	1.3366305191921347E-5	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9999861444040212	WITHOUT_CLASSIFICATION	1.385559597881192E-5	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9999882129334711	WITHOUT_CLASSIFICATION	1.1787066528928766E-5	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9999868903080916	WITHOUT_CLASSIFICATION	1.3109691908282396E-5	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9999873854729682	WITHOUT_CLASSIFICATION	1.2614527031831959E-5	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9999880958813235	WITHOUT_CLASSIFICATION	1.190411867640054E-5	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.9999880937000297	WITHOUT_CLASSIFICATION	1.1906299970283602E-5	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.9999860539325036	WITHOUT_CLASSIFICATION	1.3946067496383777E-5	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.99998732801604	WITHOUT_CLASSIFICATION	1.2671983960143274E-5	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999870395285181	WITHOUT_CLASSIFICATION	1.29604714819175E-5	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999854197908786	WITHOUT_CLASSIFICATION	1.4580209121243445E-5	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.999985677570479	WITHOUT_CLASSIFICATION	1.4322429521051069E-5	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999890327974158	WITHOUT_CLASSIFICATION	1.0967202584256431E-5	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999861672465084	WITHOUT_CLASSIFICATION	1.3832753491600535E-5	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999878961378555	WITHOUT_CLASSIFICATION	1.2103862144435254E-5	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999864514511216	WITHOUT_CLASSIFICATION	1.354854887847303E-5	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999865466505264	WITHOUT_CLASSIFICATION	1.3453349473475811E-5	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999862798992168	WITHOUT_CLASSIFICATION	1.3720100783139122E-5	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.999985610353401	WITHOUT_CLASSIFICATION	1.4389646598887113E-5	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999859606609023	WITHOUT_CLASSIFICATION	1.4039339097718167E-5	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999877107125531	WITHOUT_CLASSIFICATION	1.2289287446971813E-5	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.999987327960999	WITHOUT_CLASSIFICATION	1.2672039000967391E-5	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9999858154474436	WITHOUT_CLASSIFICATION	1.4184552556434983E-5	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.999986398691942	WITHOUT_CLASSIFICATION	1.3601308058019289E-5	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.999985905518643	WITHOUT_CLASSIFICATION	1.4094481357063759E-5	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9999871096241434	WITHOUT_CLASSIFICATION	1.2890375856647277E-5	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9999870115987961	WITHOUT_CLASSIFICATION	1.2988401203893523E-5	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.99998559684865	WITHOUT_CLASSIFICATION	1.440315134994246E-5	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9999854965884842	WITHOUT_CLASSIFICATION	1.4503411515759E-5	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9999857708999895	WITHOUT_CLASSIFICATION	1.4229100010417457E-5	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9999862691525363	WITHOUT_CLASSIFICATION	1.3730847463627029E-5	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9999867746675369	WITHOUT_CLASSIFICATION	1.3225332463067874E-5	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9999864001083884	WITHOUT_CLASSIFICATION	1.359989161160669E-5	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9999863225174146	WITHOUT_CLASSIFICATION	1.367748258532384E-5	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9999875805893652	WITHOUT_CLASSIFICATION	1.2419410634899986E-5	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9999861864203115	WITHOUT_CLASSIFICATION	1.3813579688621623E-5	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9999884282897127	WITHOUT_CLASSIFICATION	1.1571710287364893E-5	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.9999871599812575	WITHOUT_CLASSIFICATION	1.2840018742478988E-5	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9999873936320225	WITHOUT_CLASSIFICATION	1.2606367977460649E-5	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9999863325947449	WITHOUT_CLASSIFICATION	1.3667405255150023E-5	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9999852129315591	WITHOUT_CLASSIFICATION	1.4787068440992917E-5	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9999879423892432	WITHOUT_CLASSIFICATION	1.2057610756907063E-5	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9999864909375303	WITHOUT_CLASSIFICATION	1.3509062469670691E-5	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9999855585377017	WITHOUT_CLASSIFICATION	1.4441462298402663E-5	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9999866210315216	WITHOUT_CLASSIFICATION	1.33789684783466E-5	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9999863215297587	WITHOUT_CLASSIFICATION	1.3678470241365099E-5	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.999986424407406	WITHOUT_CLASSIFICATION	1.3575592593889681E-5	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9999868639004277	WITHOUT_CLASSIFICATION	1.3136099572173417E-5	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9999872469677249	WITHOUT_CLASSIFICATION	1.2753032275106829E-5	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9999864799929415	WITHOUT_CLASSIFICATION	1.3520007058508667E-5	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9999872346973695	WITHOUT_CLASSIFICATION	1.2765302630406096E-5	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9999867924255753	WITHOUT_CLASSIFICATION	1.3207574424683174E-5	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9999862021985431	WITHOUT_CLASSIFICATION	1.3797801456949138E-5	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9999889814159096	WITHOUT_CLASSIFICATION	1.101858409035161E-5	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9999875870115081	WITHOUT_CLASSIFICATION	1.2412988491800045E-5	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9999883233449658	WITHOUT_CLASSIFICATION	1.1676655034290314E-5	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9999876094855965	WITHOUT_CLASSIFICATION	1.2390514403502245E-5	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999869918536515	WITHOUT_CLASSIFICATION	1.3008146348509135E-5	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999862813041764	WITHOUT_CLASSIFICATION	1.371869582352231E-5	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.999986669418945	WITHOUT_CLASSIFICATION	1.3330581055030515E-5	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999877069092895	WITHOUT_CLASSIFICATION	1.2293090710518624E-5	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999868575297546	WITHOUT_CLASSIFICATION	1.3142470245373023E-5	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999880841970297	WITHOUT_CLASSIFICATION	1.1915802970245056E-5	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999867117683038	WITHOUT_CLASSIFICATION	1.3288231696121574E-5	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999876671058329	WITHOUT_CLASSIFICATION	1.2332894167141758E-5	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999877822356685	WITHOUT_CLASSIFICATION	1.2217764331426327E-5	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.999990572493818	WITHOUT_CLASSIFICATION	9.427506182158043E-6	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.999990806179751	WITHOUT_CLASSIFICATION	9.19382024893431E-6	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9999883194278687	WITHOUT_CLASSIFICATION	1.1680572131263486E-5	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9999865800503313	WITHOUT_CLASSIFICATION	1.3419949668716571E-5	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9999871647710606	WITHOUT_CLASSIFICATION	1.2835228939396271E-5	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.999988128269984	WITHOUT_CLASSIFICATION	1.187173001606E-5	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9999878491733913	WITHOUT_CLASSIFICATION	1.2150826608707907E-5	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9999855508266896	WITHOUT_CLASSIFICATION	1.4449173310355652E-5	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9999875477012619	WITHOUT_CLASSIFICATION	1.2452298738240272E-5	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9999873937742487	WITHOUT_CLASSIFICATION	1.2606225751195372E-5	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9999865005008376	WITHOUT_CLASSIFICATION	1.3499499162428114E-5	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.9999864370403571	WITHOUT_CLASSIFICATION	1.3562959643016981E-5	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9999859877108107	WITHOUT_CLASSIFICATION	1.401228918923799E-5	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9999869243242518	WITHOUT_CLASSIFICATION	1.3075675748270841E-5	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9999862656436309	WITHOUT_CLASSIFICATION	1.3734356369002185E-5	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9999879727103468	WITHOUT_CLASSIFICATION	1.2027289653194957E-5	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9999882714330087	WITHOUT_CLASSIFICATION	1.1728566991284505E-5	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9999879071506026	WITHOUT_CLASSIFICATION	1.2092849397336125E-5	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9999885679206595	WITHOUT_CLASSIFICATION	1.1432079340548917E-5	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9999878693858847	WITHOUT_CLASSIFICATION	1.213061411527933E-5	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9999872886495824	WITHOUT_CLASSIFICATION	1.2711350417586757E-5	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9999871742378417	WITHOUT_CLASSIFICATION	1.2825762158363197E-5	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9999883689002289	WITHOUT_CLASSIFICATION	1.1631099771152383E-5	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9999862114635956	WITHOUT_CLASSIFICATION	1.3788536404357182E-5	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9999879627130606	WITHOUT_CLASSIFICATION	1.2037286939372534E-5	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9999862672320615	WITHOUT_CLASSIFICATION	1.3732767938501775E-5	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9999862675125937	WITHOUT_CLASSIFICATION	1.3732487406251015E-5	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9999865334775522	WITHOUT_CLASSIFICATION	1.3466522447675555E-5	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9999863736402224	WITHOUT_CLASSIFICATION	1.362635977772407E-5	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9999878165863995	WITHOUT_CLASSIFICATION	1.2183413600658805E-5	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9999907063529743	WITHOUT_CLASSIFICATION	9.293647025844348E-6	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9999909789571088	WITHOUT_CLASSIFICATION	9.021042891176498E-6	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.999990468927176	WITHOUT_CLASSIFICATION	9.531072824002775E-6	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9999902984113336	WITHOUT_CLASSIFICATION	9.701588666507476E-6	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9999908472666467	WITHOUT_CLASSIFICATION	9.152733353407268E-6	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9999896875158389	WITHOUT_CLASSIFICATION	1.0312484161094265E-5	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9999891636683648	WITHOUT_CLASSIFICATION	1.0836331635173185E-5	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9999897496830895	WITHOUT_CLASSIFICATION	1.0250316910484078E-5	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9999896937789218	WITHOUT_CLASSIFICATION	1.030622107819516E-5	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9999894492104949	WITHOUT_CLASSIFICATION	1.0550789505111295E-5	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.999989938938107	WITHOUT_CLASSIFICATION	1.0061061892972554E-5	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999892052759538	WITHOUT_CLASSIFICATION	1.079472404609696E-5	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.999989402304	WITHOUT_CLASSIFICATION	1.0597695999926651E-5	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999904962116557	WITHOUT_CLASSIFICATION	9.503788344216596E-6	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.999990058228037	WITHOUT_CLASSIFICATION	9.941771963058227E-6	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999885957327286	WITHOUT_CLASSIFICATION	1.1404267271513528E-5	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999901676666993	WITHOUT_CLASSIFICATION	9.832333300614845E-6	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999896138672113	WITHOUT_CLASSIFICATION	1.0386132788635053E-5	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999886005569593	WITHOUT_CLASSIFICATION	1.1399443040787017E-5	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.999988740863129	WITHOUT_CLASSIFICATION	1.125913687086606E-5	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.999988739776379	WITHOUT_CLASSIFICATION	1.1260223621011295E-5	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.99998950363023	WITHOUT_CLASSIFICATION	1.0496369770078898E-5	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9999900968481014	WITHOUT_CLASSIFICATION	9.903151898667357E-6	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.999989597980119	WITHOUT_CLASSIFICATION	1.0402019880909168E-5	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9999901725527334	WITHOUT_CLASSIFICATION	9.827447266538084E-6	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9999907226506474	WITHOUT_CLASSIFICATION	9.277349352609385E-6	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9999892457577273	WITHOUT_CLASSIFICATION	1.075424227269498E-5	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9999888409224639	WITHOUT_CLASSIFICATION	1.1159077536266994E-5	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9999891086122588	WITHOUT_CLASSIFICATION	1.0891387741287189E-5	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9999894891544524	WITHOUT_CLASSIFICATION	1.0510845547569459E-5	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9999888779007376	WITHOUT_CLASSIFICATION	1.1122099262436417E-5	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.999989755490773	WITHOUT_CLASSIFICATION	1.0244509227032599E-5	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9999889004853235	WITHOUT_CLASSIFICATION	1.1099514676507245E-5	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9999888715426634	WITHOUT_CLASSIFICATION	1.112845733664605E-5	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9999884695101061	WITHOUT_CLASSIFICATION	1.1530489893840951E-5	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9999890673962726	WITHOUT_CLASSIFICATION	1.0932603727450568E-5	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9999893449538555	WITHOUT_CLASSIFICATION	1.0655046144529589E-5	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.99998861154911	WITHOUT_CLASSIFICATION	1.1388450890062659E-5	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9999892439831449	WITHOUT_CLASSIFICATION	1.0756016855098089E-5	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9999900112218719	WITHOUT_CLASSIFICATION	9.988778128095276E-6	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.999988792727659	WITHOUT_CLASSIFICATION	1.1207272341057147E-5	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9999898070190738	WITHOUT_CLASSIFICATION	1.019298092627126E-5	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9999887078453326	WITHOUT_CLASSIFICATION	1.1292154667401114E-5	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9999898825862454	WITHOUT_CLASSIFICATION	1.0117413754474831E-5	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9999894972253629	WITHOUT_CLASSIFICATION	1.0502774637089925E-5	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9999890141765043	WITHOUT_CLASSIFICATION	1.0985823495639017E-5	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9999885139175068	WITHOUT_CLASSIFICATION	1.1486082493217572E-5	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9999885479900624	WITHOUT_CLASSIFICATION	1.1452009937500441E-5	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9999888467356862	WITHOUT_CLASSIFICATION	1.1153264313725337E-5	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9999897937523631	WITHOUT_CLASSIFICATION	1.0206247636940197E-5	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9999894268956682	WITHOUT_CLASSIFICATION	1.05731043319042E-5	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9999882702995807	WITHOUT_CLASSIFICATION	1.1729700419267415E-5	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9999886991310515	WITHOUT_CLASSIFICATION	1.1300868948406206E-5	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9999890411229904	WITHOUT_CLASSIFICATION	1.0958877009642088E-5	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9999891166764604	WITHOUT_CLASSIFICATION	1.0883323539709098E-5	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9999891876624811	WITHOUT_CLASSIFICATION	1.0812337518995567E-5	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9999888826954163	WITHOUT_CLASSIFICATION	1.111730458360938E-5	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.999989096136658	WITHOUT_CLASSIFICATION	1.090386334199287E-5	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9999899384931661	WITHOUT_CLASSIFICATION	1.0061506833854085E-5	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999892890875697	WITHOUT_CLASSIFICATION	1.0710912430314247E-5	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999890885126399	WITHOUT_CLASSIFICATION	1.0911487360007954E-5	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999897595019639	WITHOUT_CLASSIFICATION	1.024049803601247E-5	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999883758414695	WITHOUT_CLASSIFICATION	1.1624158530549196E-5	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999886230548082	WITHOUT_CLASSIFICATION	1.137694519172769E-5	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.999989380697572	WITHOUT_CLASSIFICATION	1.0619302427965638E-5	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999882994768307	WITHOUT_CLASSIFICATION	1.1700523169351894E-5	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999896202076277	WITHOUT_CLASSIFICATION	1.037979237222161E-5	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999885259931708	WITHOUT_CLASSIFICATION	1.1474006829200876E-5	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999884605307913	WITHOUT_CLASSIFICATION	1.1539469208695876E-5	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.999990128727025	WITHOUT_CLASSIFICATION	9.871272975131546E-6	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9999896238047649	WITHOUT_CLASSIFICATION	1.0376195235235065E-5	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.999988989745199	WITHOUT_CLASSIFICATION	1.1010254801044662E-5	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9999897277094412	WITHOUT_CLASSIFICATION	1.0272290558848794E-5	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9999892662288765	WITHOUT_CLASSIFICATION	1.0733771123510573E-5	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9999897339113015	WITHOUT_CLASSIFICATION	1.0266088698506991E-5	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9999889538178268	WITHOUT_CLASSIFICATION	1.1046182173176139E-5	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9999895787854538	WITHOUT_CLASSIFICATION	1.0421214546215165E-5	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9999890157818035	WITHOUT_CLASSIFICATION	1.0984218196340985E-5	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9999889720565805	WITHOUT_CLASSIFICATION	1.1027943419411572E-5	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9999891391579877	WITHOUT_CLASSIFICATION	1.0860842012441199E-5	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9999891931158891	WITHOUT_CLASSIFICATION	1.0806884110887642E-5	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9999891423131219	WITHOUT_CLASSIFICATION	1.0857686878191952E-5	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9999891832108507	WITHOUT_CLASSIFICATION	1.0816789149134612E-5	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.999989133577765	WITHOUT_CLASSIFICATION	1.0866422235105882E-5	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9999897183778275	WITHOUT_CLASSIFICATION	1.0281622172513108E-5	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9999894435595357	WITHOUT_CLASSIFICATION	1.0556440464287973E-5	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9999898652678582	WITHOUT_CLASSIFICATION	1.0134732141821373E-5	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9999893183906745	WITHOUT_CLASSIFICATION	1.0681609325525772E-5	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9999884384304865	WITHOUT_CLASSIFICATION	1.1561569513580164E-5	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9999889389273379	WITHOUT_CLASSIFICATION	1.1061072662190402E-5	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.9999884518263039	WITHOUT_CLASSIFICATION	1.1548173696133777E-5	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9999904519340799	WITHOUT_CLASSIFICATION	9.5480659200779E-6	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9999894128459202	WITHOUT_CLASSIFICATION	1.0587154079700752E-5	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9999892600937971	WITHOUT_CLASSIFICATION	1.0739906202904711E-5	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9999886901232515	WITHOUT_CLASSIFICATION	1.1309876748466064E-5	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9999880723379682	WITHOUT_CLASSIFICATION	1.1927662031944129E-5	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.999988199441483	WITHOUT_CLASSIFICATION	1.1800558517100633E-5	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9999884010109005	WITHOUT_CLASSIFICATION	1.1598989099513226E-5	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.999988689682361	WITHOUT_CLASSIFICATION	1.1310317638940505E-5	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9999893416317824	WITHOUT_CLASSIFICATION	1.0658368217628668E-5	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9999888850800226	WITHOUT_CLASSIFICATION	1.1114919977467411E-5	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9999885165481559	WITHOUT_CLASSIFICATION	1.148345184396422E-5	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9999895262074147	WITHOUT_CLASSIFICATION	1.0473792585336263E-5	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9999892867289432	WITHOUT_CLASSIFICATION	1.0713271056728277E-5	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9999883880661384	WITHOUT_CLASSIFICATION	1.161193386160687E-5	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.999987442087987	WITHOUT_CLASSIFICATION	1.2557912013010163E-5	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9999885409899385	WITHOUT_CLASSIFICATION	1.1459010061567175E-5	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9999886124306302	WITHOUT_CLASSIFICATION	1.1387569369868264E-5	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999882125459052	WITHOUT_CLASSIFICATION	1.178745409469199E-5	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.999988841039374	WITHOUT_CLASSIFICATION	1.1158960626017799E-5	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999896623425457	WITHOUT_CLASSIFICATION	1.0337657454262574E-5	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.999989002844562	WITHOUT_CLASSIFICATION	1.0997155437857618E-5	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999880140495822	WITHOUT_CLASSIFICATION	1.198595041791085E-5	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999881370091495	WITHOUT_CLASSIFICATION	1.1862990850453248E-5	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999884759302222	WITHOUT_CLASSIFICATION	1.152406977784892E-5	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999881340334875	WITHOUT_CLASSIFICATION	1.1865966512544901E-5	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999887243048872	WITHOUT_CLASSIFICATION	1.1275695112874744E-5	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999891182102185	WITHOUT_CLASSIFICATION	1.0881789781475204E-5	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9999889836469761	WITHOUT_CLASSIFICATION	1.1016353023852371E-5	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9999897143978618	WITHOUT_CLASSIFICATION	1.0285602138279956E-5	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9999888827915793	WITHOUT_CLASSIFICATION	1.1117208420699438E-5	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9999883818945806	WITHOUT_CLASSIFICATION	1.161810541937325E-5	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9999893154661673	WITHOUT_CLASSIFICATION	1.0684533832646812E-5	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9999893529908078	WITHOUT_CLASSIFICATION	1.064700919217588E-5	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.999988042770446	WITHOUT_CLASSIFICATION	1.1957229554128543E-5	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9999883579598602	WITHOUT_CLASSIFICATION	1.164204013977072E-5	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9999875206526996	WITHOUT_CLASSIFICATION	1.2479347300488532E-5	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9999895913923301	WITHOUT_CLASSIFICATION	1.0408607669788567E-5	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9999894627277971	WITHOUT_CLASSIFICATION	1.0537272202832608E-5	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9999878145352887	WITHOUT_CLASSIFICATION	1.218546471128307E-5	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.9999895818205644	WITHOUT_CLASSIFICATION	1.0418179435625949E-5	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9999885512281914	WITHOUT_CLASSIFICATION	1.1448771808566927E-5	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9999884070810878	WITHOUT_CLASSIFICATION	1.1592918912210286E-5	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.999988648520568	WITHOUT_CLASSIFICATION	1.135147943195999E-5	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9999891585923674	WITHOUT_CLASSIFICATION	1.0841407632718143E-5	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9999891868861497	WITHOUT_CLASSIFICATION	1.0813113850205747E-5	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9999891688887437	WITHOUT_CLASSIFICATION	1.0831111256440198E-5	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9999878030495724	WITHOUT_CLASSIFICATION	1.2196950427547241E-5	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9999874174959237	WITHOUT_CLASSIFICATION	1.2582504076224784E-5	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9999879378847353	WITHOUT_CLASSIFICATION	1.2062115264609788E-5	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9999880179857092	WITHOUT_CLASSIFICATION	1.1982014290659991E-5	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9999878300984851	WITHOUT_CLASSIFICATION	1.2169901514938908E-5	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9999878902830879	WITHOUT_CLASSIFICATION	1.2109716912139385E-5	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9999883926143469	WITHOUT_CLASSIFICATION	1.1607385653017902E-5	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9999878261685285	WITHOUT_CLASSIFICATION	1.2173831471415131E-5	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9999881225339518	WITHOUT_CLASSIFICATION	1.1877466048350958E-5	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9999884661050583	WITHOUT_CLASSIFICATION	1.1533894941572334E-5	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9999883538174094	WITHOUT_CLASSIFICATION	1.1646182590638855E-5	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9999897922174412	WITHOUT_CLASSIFICATION	1.0207782558757464E-5	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9999902202205956	WITHOUT_CLASSIFICATION	9.779779404430758E-6	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9999891139799035	WITHOUT_CLASSIFICATION	1.0886020096498313E-5	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9999895195402967	WITHOUT_CLASSIFICATION	1.04804597033409E-5	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9999884492387885	WITHOUT_CLASSIFICATION	1.1550761211568611E-5	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9999885374619815	WITHOUT_CLASSIFICATION	1.1462538018476216E-5	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9999889628083173	WITHOUT_CLASSIFICATION	1.1037191682703767E-5	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.9999896509092532	WITHOUT_CLASSIFICATION	1.0349090746881613E-5	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9999881972643935	WITHOUT_CLASSIFICATION	1.180273560649547E-5	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9996955157291789	WITHOUT_CLASSIFICATION	3.0448427082104267E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9996895475722126	WITHOUT_CLASSIFICATION	3.1045242778737065E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999912770305611	WITHOUT_CLASSIFICATION	8.722969438761977E-6	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999901145848678	WITHOUT_CLASSIFICATION	9.885415132218487E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999472128098151	WITHOUT_CLASSIFICATION	5.278719018473585E-5	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.999920623848923	WITHOUT_CLASSIFICATION	7.937615107700116E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999827037400916	WITHOUT_CLASSIFICATION	1.7296259908410906E-5	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999162079860693	WITHOUT_CLASSIFICATION	8.379201393077735E-5	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.9999882983028959	WITHOUT_CLASSIFICATION	1.1701697104114583E-5	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9999884564435344	WITHOUT_CLASSIFICATION	1.1543556465495158E-5	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9999886290775596	WITHOUT_CLASSIFICATION	1.137092244033861E-5	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9999882975151285	WITHOUT_CLASSIFICATION	1.1702484871465114E-5	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9999884347715484	WITHOUT_CLASSIFICATION	1.1565228451534606E-5	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9999888229760606	WITHOUT_CLASSIFICATION	1.1177023939439723E-5	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9999899818433443	WITHOUT_CLASSIFICATION	1.0018156655746353E-5	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9999894250978231	WITHOUT_CLASSIFICATION	1.0574902176912058E-5	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9999890757067871	WITHOUT_CLASSIFICATION	1.0924293212926226E-5	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9999888377539748	WITHOUT_CLASSIFICATION	1.1162246025146186E-5	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9999892411245096	WITHOUT_CLASSIFICATION	1.0758875490487596E-5	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9999896218218595	WITHOUT_CLASSIFICATION	1.037817814050645E-5	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.999988988463071	WITHOUT_CLASSIFICATION	1.1011536928984338E-5	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9999886824715392	WITHOUT_CLASSIFICATION	1.1317528460780593E-5	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9999895048333795	WITHOUT_CLASSIFICATION	1.0495166620572335E-5	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9999893750988715	WITHOUT_CLASSIFICATION	1.0624901128487678E-5	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9999884796025519	WITHOUT_CLASSIFICATION	1.152039744825059E-5	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9999887321234611	WITHOUT_CLASSIFICATION	1.1267876538833257E-5	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9999890459110938	WITHOUT_CLASSIFICATION	1.0954088906132822E-5	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9999885946266668	WITHOUT_CLASSIFICATION	1.140537333319697E-5	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9999889939517559	WITHOUT_CLASSIFICATION	1.1006048244004106E-5	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9999883692921357	WITHOUT_CLASSIFICATION	1.1630707864331718E-5	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9999899593443974	WITHOUT_CLASSIFICATION	1.0040655602532613E-5	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9997136290025469	WITHOUT_CLASSIFICATION	2.863709974532113E-4	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999917834222798	WITHOUT_CLASSIFICATION	8.216577720321806E-6	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999958988195471	WITHOUT_CLASSIFICATION	4.1011804529435875E-6	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999894327146743	WITHOUT_CLASSIFICATION	1.05672853257094E-5	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999985294947082	WITHOUT_CLASSIFICATION	1.470505291713634E-6	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999770053144242	WITHOUT_CLASSIFICATION	2.2994685575686065E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999970937042167	WITHOUT_CLASSIFICATION	2.906295783289697E-6	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999874233114221	WITHOUT_CLASSIFICATION	1.257668857790704E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999884749201235	WITHOUT_CLASSIFICATION	1.152507987639731E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999884749201235	WITHOUT_CLASSIFICATION	1.152507987639731E-5	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999979873963583	WITHOUT_CLASSIFICATION	2.012603641850358E-6	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999729514575915	WITHOUT_CLASSIFICATION	2.704854240844931E-5	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999969370193093	WITHOUT_CLASSIFICATION	3.0629806906763073E-6	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999893283508631	WITHOUT_CLASSIFICATION	1.0671649136915627E-5	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999992523131479	WITHOUT_CLASSIFICATION	7.476868521829518E-7	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999919745377208	WITHOUT_CLASSIFICATION	8.02546227920679E-6	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999575807822942	WITHOUT_CLASSIFICATION	4.24192177058499E-5	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999937135331087	WITHOUT_CLASSIFICATION	6.286466891206377E-6	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999964980501276	WITHOUT_CLASSIFICATION	3.501949872511832E-6	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999929807300952	WITHOUT_CLASSIFICATION	7.019269904797719E-6	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999955179727683	WITHOUT_CLASSIFICATION	4.4820272316829625E-6	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999906387740898	WITHOUT_CLASSIFICATION	9.361225910260897E-6	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999983312997128	WITHOUT_CLASSIFICATION	1.6687002872091499E-6	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9998242927213962	WITHOUT_CLASSIFICATION	1.7570727860390025E-4	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.999998251276911	WITHOUT_CLASSIFICATION	1.7487230889724821E-6	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.999998251276911	WITHOUT_CLASSIFICATION	1.7487230889724821E-6	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999845409618786	WITHOUT_CLASSIFICATION	1.545903812137571E-5	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999990570016353	WITHOUT_CLASSIFICATION	9.429983648392307E-7	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999977976330188	WITHOUT_CLASSIFICATION	2.202366981301016E-6	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999978496685467	WITHOUT_CLASSIFICATION	2.150331453212853E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999904678333924	WITHOUT_CLASSIFICATION	9.532166607647276E-6	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999888549998207	WITHOUT_CLASSIFICATION	1.1145000179281636E-5	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999703092032561	WITHOUT_CLASSIFICATION	2.9690796743806485E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999888549998207	WITHOUT_CLASSIFICATION	1.1145000179281636E-5	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999976865154375	WITHOUT_CLASSIFICATION	2.3134845624323126E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999781460490531	WITHOUT_CLASSIFICATION	2.1853950946853166E-5	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9999942608771956	WITHOUT_CLASSIFICATION	5.739122804369992E-6	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9999686267677618	WITHOUT_CLASSIFICATION	3.1373232238187536E-5	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999881249996337	WITHOUT_CLASSIFICATION	1.1875000366168234E-5	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999953543560611	WITHOUT_CLASSIFICATION	4.6456439389531475E-6	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999754391726914	WITHOUT_CLASSIFICATION	2.456082730865506E-5	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999908457170181	WITHOUT_CLASSIFICATION	9.154282981870019E-6	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999876192870633	WITHOUT_CLASSIFICATION	1.2380712936785752E-5	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999999208745226	WITHOUT_CLASSIFICATION	7.912547733960922E-8	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999993618108923	WITHOUT_CLASSIFICATION	6.381891076818477E-7	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999320553253942	WITHOUT_CLASSIFICATION	6.794467460579726E-5	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999446131288697	WITHOUT_CLASSIFICATION	5.538687113021353E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999784857621781	WITHOUT_CLASSIFICATION	2.1514237821945714E-5	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999933251750954	WITHOUT_CLASSIFICATION	6.674824904637237E-6	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999933251750954	WITHOUT_CLASSIFICATION	6.674824904637237E-6	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999887639636965	WITHOUT_CLASSIFICATION	1.1236036303515538E-5	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9998872442529678	WITHOUT_CLASSIFICATION	1.127557470321725E-4	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999649925551415	WITHOUT_CLASSIFICATION	3.500744485847326E-5	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999960904073978	WITHOUT_CLASSIFICATION	3.9095926022622565E-6	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.999994081618921	WITHOUT_CLASSIFICATION	5.918381078949881E-6	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999888549998207	WITHOUT_CLASSIFICATION	1.1145000179281636E-5	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999977286517862	WITHOUT_CLASSIFICATION	2.2713482138829904E-6	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999990843138903	WITHOUT_CLASSIFICATION	9.156861097491492E-7	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999992019599379	WITHOUT_CLASSIFICATION	7.980400620804067E-7	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999973561563219	WITHOUT_CLASSIFICATION	2.643843678148545E-6	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999998794468737	WITHOUT_CLASSIFICATION	1.2055312633144938E-7	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.999994989251689	WITHOUT_CLASSIFICATION	5.010748311047332E-6	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999986277312284	WITHOUT_CLASSIFICATION	1.3722687716756721E-6	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999973291455759	WITHOUT_CLASSIFICATION	2.670854424100806E-6	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.999964026017072	WITHOUT_CLASSIFICATION	3.597398292800638E-5	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9997649090629327	WITHOUT_CLASSIFICATION	2.350909370673794E-4	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9998071353808367	WITHOUT_CLASSIFICATION	1.928646191633293E-4	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999994479312595	WITHOUT_CLASSIFICATION	5.520687405347514E-7	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999989024314531	WITHOUT_CLASSIFICATION	1.097568546991329E-6	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999937370907621	WITHOUT_CLASSIFICATION	6.262909237913158E-6	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9999914491339218	WITHOUT_CLASSIFICATION	8.550866078187883E-6	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999691399002422	WITHOUT_CLASSIFICATION	3.0860099757875496E-5	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999966846574075	WITHOUT_CLASSIFICATION	3.3153425923764534E-6	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9999863681060828	WITHOUT_CLASSIFICATION	1.3631893917192893E-5	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9999771221928687	WITHOUT_CLASSIFICATION	2.287780713131557E-5	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.999704393891566	WITHOUT_CLASSIFICATION	2.956061084340184E-4	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999813440080098	WITHOUT_CLASSIFICATION	1.8655991990336903E-5	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999829366179106	WITHOUT_CLASSIFICATION	1.7063382089428875E-5	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999961745042205	WITHOUT_CLASSIFICATION	3.825495779462896E-6	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.99999005646556	WITHOUT_CLASSIFICATION	9.943534439959015E-6	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999959554295269	WITHOUT_CLASSIFICATION	4.044570473040245E-6	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999800155582504	WITHOUT_CLASSIFICATION	1.998444174960646E-5	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.999999321726133	WITHOUT_CLASSIFICATION	6.782738670445647E-7	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999962129550981	WITHOUT_CLASSIFICATION	3.7870449019104914E-6	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9993907443662023	WITHOUT_CLASSIFICATION	6.092556337975561E-4	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999957476979087	WITHOUT_CLASSIFICATION	4.252302091320694E-6	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999785913500978	WITHOUT_CLASSIFICATION	2.140864990228423E-5	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9999920512424865	WITHOUT_CLASSIFICATION	7.948757513535315E-6	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999976119438787	WITHOUT_CLASSIFICATION	2.3880561213255084E-6	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999997939649763	WITHOUT_CLASSIFICATION	2.0603502360877426E-7	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999922732393682	WITHOUT_CLASSIFICATION	7.726760631812872E-6	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999945672499704	WITHOUT_CLASSIFICATION	5.432750029647034E-6	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999742849409055	WITHOUT_CLASSIFICATION	2.571505909450206E-5	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9999959470694844	WITHOUT_CLASSIFICATION	4.05293051565824E-6	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9999920570889592	WITHOUT_CLASSIFICATION	7.942911040687505E-6	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999921100190675	WITHOUT_CLASSIFICATION	7.889980932437215E-6	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999162079860693	WITHOUT_CLASSIFICATION	8.379201393077735E-5	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999995993569368	WITHOUT_CLASSIFICATION	4.0064306325055125E-7	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999960028679225	WITHOUT_CLASSIFICATION	3.997132077554834E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999862653075673	WITHOUT_CLASSIFICATION	1.3734692432626803E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999832364849761	WITHOUT_CLASSIFICATION	1.6763515023825266E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999781460490531	WITHOUT_CLASSIFICATION	2.1853950946853166E-5	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999856526632411	WITHOUT_CLASSIFICATION	1.4347336758919089E-5	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999994580496347	WITHOUT_CLASSIFICATION	5.419503652710849E-7	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.999999958695124	WITHOUT_CLASSIFICATION	4.1304875982118054E-8	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999957422968736	WITHOUT_CLASSIFICATION	4.257703126484259E-6	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999957422968736	WITHOUT_CLASSIFICATION	4.257703126484259E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999864983304723	WITHOUT_CLASSIFICATION	1.350166952768438E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999864983304723	WITHOUT_CLASSIFICATION	1.350166952768438E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999864983304723	WITHOUT_CLASSIFICATION	1.350166952768438E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999548361038354	WITHOUT_CLASSIFICATION	4.516389616463482E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999548361038354	WITHOUT_CLASSIFICATION	4.516389616463482E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999695536092793	WITHOUT_CLASSIFICATION	3.0446390720658697E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999695536092793	WITHOUT_CLASSIFICATION	3.0446390720658697E-5	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999979648310157	WITHOUT_CLASSIFICATION	2.0351689843805564E-6	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999977937961622	WITHOUT_CLASSIFICATION	2.2062038378093993E-6	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999940878542435	WITHOUT_CLASSIFICATION	5.912145756418806E-6	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999940878542435	WITHOUT_CLASSIFICATION	5.912145756418806E-6	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999974054213377	WITHOUT_CLASSIFICATION	2.5945786623213232E-6	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999945782032238	WITHOUT_CLASSIFICATION	5.421796776239997E-6	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999983981717626	WITHOUT_CLASSIFICATION	1.601828237344869E-6	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999981625200197	WITHOUT_CLASSIFICATION	1.837479980272203E-6	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999968433177935	WITHOUT_CLASSIFICATION	3.1566822063857124E-6	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999987616403918	WITHOUT_CLASSIFICATION	1.2383596081701544E-6	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.99999270826708	WITHOUT_CLASSIFICATION	7.2917329200031094E-6	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999959330596149	WITHOUT_CLASSIFICATION	4.066940385165031E-6	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9999879600651729	WITHOUT_CLASSIFICATION	1.203993482704457E-5	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9999868489730429	WITHOUT_CLASSIFICATION	1.3151026957009816E-5	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9997604870246538	WITHOUT_CLASSIFICATION	2.395129753462325E-4	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.999939375476391	WITHOUT_CLASSIFICATION	6.06245236088928E-5	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9999720458056274	WITHOUT_CLASSIFICATION	2.795419437262419E-5	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9999822212686946	WITHOUT_CLASSIFICATION	1.777873130530027E-5	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999958587979174	WITHOUT_CLASSIFICATION	4.141202082610473E-6	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999292644118479	WITHOUT_CLASSIFICATION	7.073558815208081E-5	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9995043449546216	WITHOUT_CLASSIFICATION	4.956550453784074E-4	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999745389821446	WITHOUT_CLASSIFICATION	2.546101785546614E-5	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999694350460473	WITHOUT_CLASSIFICATION	3.0564953952610584E-5	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999163689171215	WITHOUT_CLASSIFICATION	8.363108287841722E-5	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999888789728834	WITHOUT_CLASSIFICATION	1.1121027116547298E-5	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999872843497608	WITHOUT_CLASSIFICATION	1.2715650239188749E-5	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9999910460749435	WITHOUT_CLASSIFICATION	8.953925056639556E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999981739561412	WITHOUT_CLASSIFICATION	1.82604385882029E-6	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999979501898422	WITHOUT_CLASSIFICATION	2.0498101578410573E-6	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999981958085357	WITHOUT_CLASSIFICATION	1.8041914643194153E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999982032851631	WITHOUT_CLASSIFICATION	1.7967148369340414E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999963355143798	WITHOUT_CLASSIFICATION	3.6644856201683158E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999980396078199	WITHOUT_CLASSIFICATION	1.9603921801103526E-6	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999977993783015	WITHOUT_CLASSIFICATION	2.200621698419602E-6	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999998063067967	WITHOUT_CLASSIFICATION	1.9369320329716304E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999979966432877	WITHOUT_CLASSIFICATION	2.0033567121906445E-6	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999977511488405	WITHOUT_CLASSIFICATION	2.2488511594970247E-6	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999980871514644	WITHOUT_CLASSIFICATION	1.912848535660262E-6	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999977511488405	WITHOUT_CLASSIFICATION	2.2488511594970247E-6	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999977511488405	WITHOUT_CLASSIFICATION	2.2488511594970247E-6	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999977511488405	WITHOUT_CLASSIFICATION	2.2488511594970247E-6	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999977511488405	WITHOUT_CLASSIFICATION	2.2488511594970247E-6	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999977511488405	WITHOUT_CLASSIFICATION	2.2488511594970247E-6	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999977511488405	WITHOUT_CLASSIFICATION	2.2488511594970247E-6	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999980871514644	WITHOUT_CLASSIFICATION	1.912848535660262E-6	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999980871514644	WITHOUT_CLASSIFICATION	1.912848535660262E-6	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999980871514644	WITHOUT_CLASSIFICATION	1.912848535660262E-6	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999980871514644	WITHOUT_CLASSIFICATION	1.912848535660262E-6	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999980871514644	WITHOUT_CLASSIFICATION	1.912848535660262E-6	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999980871514644	WITHOUT_CLASSIFICATION	1.912848535660262E-6	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999935689645012	WITHOUT_CLASSIFICATION	6.431035498891927E-6	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999891618193363	WITHOUT_CLASSIFICATION	1.0838180663632438E-5	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999589458126602	WITHOUT_CLASSIFICATION	4.105418733992502E-5	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999962091108294	WITHOUT_CLASSIFICATION	3.7908891705834417E-6	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.999999866295526	WITHOUT_CLASSIFICATION	1.3370447395697948E-7	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999965810234073	WITHOUT_CLASSIFICATION	3.418976592721595E-6	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.999985690483809	WITHOUT_CLASSIFICATION	1.4309516190955102E-5	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.999998906021462	WITHOUT_CLASSIFICATION	1.0939785379246205E-6	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999638290517212	WITHOUT_CLASSIFICATION	3.617094827884428E-5	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9997189593638313	WITHOUT_CLASSIFICATION	2.8104063616878733E-4	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9998299766979721	WITHOUT_CLASSIFICATION	1.7002330202790442E-4	IMPLEMENTATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999988752226908	WITHOUT_CLASSIFICATION	1.1247773091015192E-6	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.999951713421886	WITHOUT_CLASSIFICATION	4.828657811396253E-5	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999014130388	WITHOUT_CLASSIFICATION	9.858696115515485E-8	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999862821449602	WITHOUT_CLASSIFICATION	1.3717855039885678E-5	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.99999958731515	WITHOUT_CLASSIFICATION	4.126848500023239E-7	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.999997007356426	WITHOUT_CLASSIFICATION	2.9926435738540607E-6	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999982158864072	WITHOUT_CLASSIFICATION	1.7841135926747267E-6	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999984664316754	WITHOUT_CLASSIFICATION	1.5335683246432172E-6	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999946496511397	WITHOUT_CLASSIFICATION	5.350348860297149E-6	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999883766685115	WITHOUT_CLASSIFICATION	1.1623331488564776E-5	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999915203667938	WITHOUT_CLASSIFICATION	8.479633206089424E-6	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999703092032561	WITHOUT_CLASSIFICATION	2.9690796743806485E-5	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999998510268889	WITHOUT_CLASSIFICATION	1.4897311104408491E-7	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999735202299408	WITHOUT_CLASSIFICATION	2.6479770059166056E-5	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999999671894765	WITHOUT_CLASSIFICATION	3.281052341461729E-8	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999610264433	WITHOUT_CLASSIFICATION	3.8973556795748344E-8	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9998119501077989	WITHOUT_CLASSIFICATION	1.880498922011758E-4	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.9996805278565819	WITHOUT_CLASSIFICATION	3.194721434180423E-4	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999973602880919	WITHOUT_CLASSIFICATION	2.6397119081407116E-6	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.9999127108557809	WITHOUT_CLASSIFICATION	8.72891442190646E-5	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999953677550159	WITHOUT_CLASSIFICATION	4.6322449841772095E-6	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999984798045147	WITHOUT_CLASSIFICATION	1.520195485268242E-6	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9999987331045818	WITHOUT_CLASSIFICATION	1.266895418196242E-6	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999945110723835	WITHOUT_CLASSIFICATION	5.488927616609392E-6	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999980118869418	WITHOUT_CLASSIFICATION	1.9881130582099462E-6	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.999978419615371	WITHOUT_CLASSIFICATION	2.158038462896405E-5	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999989852400306	WITHOUT_CLASSIFICATION	1.0147599694264402E-6	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999990636337924	WITHOUT_CLASSIFICATION	9.363662074804386E-7	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999990070163247	WITHOUT_CLASSIFICATION	9.929836752309772E-7	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.99999419183049	WITHOUT_CLASSIFICATION	5.808169510023596E-6	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.999992755439821	WITHOUT_CLASSIFICATION	7.244560178957301E-6	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.999998869555841	WITHOUT_CLASSIFICATION	1.1304441589018016E-6	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999951922939534	WITHOUT_CLASSIFICATION	4.807706046548747E-6	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999951922939534	WITHOUT_CLASSIFICATION	4.807706046548747E-6	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999982689822778	WITHOUT_CLASSIFICATION	1.7310177222011571E-6	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999982689822778	WITHOUT_CLASSIFICATION	1.7310177222011571E-6	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.999994807984994	WITHOUT_CLASSIFICATION	5.192015006006225E-6	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.999994807984994	WITHOUT_CLASSIFICATION	5.192015006006225E-6	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.999996550939983	WITHOUT_CLASSIFICATION	3.4490600169904136E-6	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999984693840682	WITHOUT_CLASSIFICATION	1.5306159318167448E-6	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999704453661873	WITHOUT_CLASSIFICATION	2.955463381258933E-5	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999993973791166	WITHOUT_CLASSIFICATION	6.026208834617098E-7	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999994671955289	WITHOUT_CLASSIFICATION	5.328044709765053E-7	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999965290325671	WITHOUT_CLASSIFICATION	3.4709674328889597E-6	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9999833155958279	WITHOUT_CLASSIFICATION	1.6684404172054218E-5	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999939666008223	WITHOUT_CLASSIFICATION	6.03339917775994E-6	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999999015934369	WITHOUT_CLASSIFICATION	9.840656316747384E-8	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999989287083578	WITHOUT_CLASSIFICATION	1.071291642128539E-6	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999999908406384	WITHOUT_CLASSIFICATION	9.159361693537859E-9	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999993991628771	WITHOUT_CLASSIFICATION	6.008371230111943E-7	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999993310191218	WITHOUT_CLASSIFICATION	6.689808783095458E-7	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999883986606898	WITHOUT_CLASSIFICATION	1.1601339310230904E-5	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999917456552664	WITHOUT_CLASSIFICATION	8.254344733652961E-6	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9999951752515616	WITHOUT_CLASSIFICATION	4.824748438377187E-6	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999998872738436	WITHOUT_CLASSIFICATION	1.1272615644610958E-7	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999998771676164	WITHOUT_CLASSIFICATION	1.228323836745234E-7	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999894925471813	WITHOUT_CLASSIFICATION	1.0507452818670504E-5	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9999794168003912	WITHOUT_CLASSIFICATION	2.0583199608849387E-5	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9999812289633278	WITHOUT_CLASSIFICATION	1.877103667226218E-5	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999968227594238	WITHOUT_CLASSIFICATION	3.1772405761511285E-6	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999878882325965	WITHOUT_CLASSIFICATION	1.2111767403504163E-5	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999980527100073	WITHOUT_CLASSIFICATION	1.9472899926800367E-6	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999991676998564	WITHOUT_CLASSIFICATION	8.32300143544106E-7	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999996138514681	WITHOUT_CLASSIFICATION	3.861485319663616E-7	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9999412886981743	WITHOUT_CLASSIFICATION	5.871130182573943E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999776357756559	WITHOUT_CLASSIFICATION	2.2364224344148108E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999776357756559	WITHOUT_CLASSIFICATION	2.2364224344148108E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999776357756559	WITHOUT_CLASSIFICATION	2.2364224344148108E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999959263336057	WITHOUT_CLASSIFICATION	4.073666394324138E-6	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999959263336057	WITHOUT_CLASSIFICATION	4.073666394324138E-6	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999937370907621	WITHOUT_CLASSIFICATION	6.262909237913158E-6	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999937370907621	WITHOUT_CLASSIFICATION	6.262909237913158E-6	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999992940647868	WITHOUT_CLASSIFICATION	7.059352132440234E-7	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9955190632989952	WITHOUT_CLASSIFICATION	0.0044809367010048146	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999873690005263	WITHOUT_CLASSIFICATION	1.2630999473607043E-5	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999922583563365	WITHOUT_CLASSIFICATION	7.741643663412435E-6	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999776357756559	WITHOUT_CLASSIFICATION	2.2364224344148108E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999776357756559	WITHOUT_CLASSIFICATION	2.2364224344148108E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999776357756559	WITHOUT_CLASSIFICATION	2.2364224344148108E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999959263336057	WITHOUT_CLASSIFICATION	4.073666394324138E-6	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999959263336057	WITHOUT_CLASSIFICATION	4.073666394324138E-6	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999959263336057	WITHOUT_CLASSIFICATION	4.073666394324138E-6	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999937370907621	WITHOUT_CLASSIFICATION	6.262909237913158E-6	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999937370907621	WITHOUT_CLASSIFICATION	6.262909237913158E-6	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999964447428342	WITHOUT_CLASSIFICATION	3.555257165774666E-6	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999943239113456	WITHOUT_CLASSIFICATION	5.676088654496708E-6	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999113548640326	WITHOUT_CLASSIFICATION	8.86451359673343E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999113548640326	WITHOUT_CLASSIFICATION	8.86451359673343E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999113548640326	WITHOUT_CLASSIFICATION	8.86451359673343E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999113548640326	WITHOUT_CLASSIFICATION	8.86451359673343E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999113548640326	WITHOUT_CLASSIFICATION	8.86451359673343E-5	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999955159199185	WITHOUT_CLASSIFICATION	4.484080081365027E-6	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999947644704658	WITHOUT_CLASSIFICATION	5.2355295343148556E-6	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9997266836743297	WITHOUT_CLASSIFICATION	2.733163256703029E-4	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999857763927859	WITHOUT_CLASSIFICATION	1.4223607214153991E-5	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999963583929913	WITHOUT_CLASSIFICATION	3.641607008707756E-6	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9992065029684116	WITHOUT_CLASSIFICATION	7.934970315884524E-4	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9999712883295137	WITHOUT_CLASSIFICATION	2.8711670486444496E-5	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999975090419378	WITHOUT_CLASSIFICATION	2.4909580620929696E-6	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999793768160914	WITHOUT_CLASSIFICATION	2.0623183908709512E-5	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999982549081736	WITHOUT_CLASSIFICATION	1.7450918263302162E-6	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999845445700721	WITHOUT_CLASSIFICATION	1.5455429927943246E-5	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999969465013684	WITHOUT_CLASSIFICATION	3.0534986315239355E-6	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999939454731042	WITHOUT_CLASSIFICATION	6.054526895837228E-6	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999995890724145	WITHOUT_CLASSIFICATION	4.109275855203245E-7	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999595592727453	WITHOUT_CLASSIFICATION	4.0440727254776825E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9996060962566844	WITHOUT_CLASSIFICATION	3.9390374331565184E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9996060962566844	WITHOUT_CLASSIFICATION	3.9390374331565184E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9996060962566844	WITHOUT_CLASSIFICATION	3.9390374331565184E-4	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999921756843022	WITHOUT_CLASSIFICATION	7.824315697745826E-6	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999921756843022	WITHOUT_CLASSIFICATION	7.824315697745826E-6	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999836283853024	WITHOUT_CLASSIFICATION	1.6371614697538838E-5	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.999991628367325	WITHOUT_CLASSIFICATION	8.37163267496779E-6	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999785432950132	WITHOUT_CLASSIFICATION	2.145670498672588E-5	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999986034995318	WITHOUT_CLASSIFICATION	1.3965004681475933E-6	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999977891162513	WITHOUT_CLASSIFICATION	2.2108837487434732E-6	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9999968579098201	WITHOUT_CLASSIFICATION	3.142090179869181E-6	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.999997191644858	WITHOUT_CLASSIFICATION	2.8083551419862673E-6	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999992801765717	WITHOUT_CLASSIFICATION	7.19823428327122E-7	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999986650877377	WITHOUT_CLASSIFICATION	1.3349122622830845E-6	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999988016334754	WITHOUT_CLASSIFICATION	1.1983665245149166E-6	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999962903433529	WITHOUT_CLASSIFICATION	3.7096566470263912E-6	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9999668819801265	WITHOUT_CLASSIFICATION	3.311801987346292E-5	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9999764634511589	WITHOUT_CLASSIFICATION	2.3536548841133643E-5	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999951078831957	WITHOUT_CLASSIFICATION	4.892116804325185E-6	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999943280186198	WITHOUT_CLASSIFICATION	5.671981380308091E-6	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999905579014527	WITHOUT_CLASSIFICATION	9.442098547128783E-6	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9999839431525376	WITHOUT_CLASSIFICATION	1.605684746242298E-5	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999977935270662	WITHOUT_CLASSIFICATION	2.206472933761688E-6	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999973688443043	WITHOUT_CLASSIFICATION	2.6311556956623097E-6	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.999940704173593	WITHOUT_CLASSIFICATION	5.929582640695501E-5	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9996845721629845	WITHOUT_CLASSIFICATION	3.1542783701548883E-4	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999958135155944	WITHOUT_CLASSIFICATION	4.186484405524388E-6	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9999843271756194	WITHOUT_CLASSIFICATION	1.5672824380612577E-5	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9999851281024971	WITHOUT_CLASSIFICATION	1.4871897503080522E-5	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9999902262723278	WITHOUT_CLASSIFICATION	9.773727672278893E-6	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.999993260432606	WITHOUT_CLASSIFICATION	6.73956739410479E-6	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999706108160125	WITHOUT_CLASSIFICATION	2.938918398757128E-5	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9999233525088919	WITHOUT_CLASSIFICATION	7.664749110814387E-5	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9999152116324997	WITHOUT_CLASSIFICATION	8.478836750024637E-5	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9999206896979238	WITHOUT_CLASSIFICATION	7.931030207627904E-5	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.9999122767204889	WITHOUT_CLASSIFICATION	8.772327951119247E-5	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9999066848027898	WITHOUT_CLASSIFICATION	9.33151972102962E-5	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9999077238124547	WITHOUT_CLASSIFICATION	9.227618754518795E-5	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9999054606029079	WITHOUT_CLASSIFICATION	9.45393970921149E-5	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999895842421872	WITHOUT_CLASSIFICATION	1.0415757812804354E-5	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999244412998579	WITHOUT_CLASSIFICATION	7.5558700142078E-5	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999999736785223	WITHOUT_CLASSIFICATION	2.6321477589066788E-8	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999123787362681	WITHOUT_CLASSIFICATION	8.762126373190298E-5	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999984726965172	WITHOUT_CLASSIFICATION	1.5273034828130516E-6	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999998626773372	WITHOUT_CLASSIFICATION	1.3732266272530575E-7	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999820669906322	WITHOUT_CLASSIFICATION	1.793300936791159E-5	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999600389402418	WITHOUT_CLASSIFICATION	3.996105975823688E-5	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999946556222382	WITHOUT_CLASSIFICATION	5.344377761727982E-6	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999989699740618	WITHOUT_CLASSIFICATION	1.030025938201327E-6	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999100138525276	WITHOUT_CLASSIFICATION	8.998614747232968E-5	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999100138525276	WITHOUT_CLASSIFICATION	8.998614747232968E-5	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999908590624339	WITHOUT_CLASSIFICATION	9.140937566128208E-6	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999988480430578	WITHOUT_CLASSIFICATION	1.1519569421389532E-6	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999988699287584	WITHOUT_CLASSIFICATION	1.1300712416171359E-6	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999791462818427	WITHOUT_CLASSIFICATION	2.0853718157264436E-5	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999989348187749	WITHOUT_CLASSIFICATION	1.0651812251679865E-6	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999972409852826	WITHOUT_CLASSIFICATION	2.759014717225306E-6	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999218070698583	WITHOUT_CLASSIFICATION	7.819293014175257E-5	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.999999596855799	WITHOUT_CLASSIFICATION	4.0314420098549746E-7	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999983409468626	WITHOUT_CLASSIFICATION	1.6590531374529772E-6	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999979433916503	WITHOUT_CLASSIFICATION	2.056608349742143E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999967224184148	WITHOUT_CLASSIFICATION	3.2775815852498067E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999967224184148	WITHOUT_CLASSIFICATION	3.2775815852498067E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999967224184148	WITHOUT_CLASSIFICATION	3.2775815852498067E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999967224184148	WITHOUT_CLASSIFICATION	3.2775815852498067E-6	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9999804290501826	WITHOUT_CLASSIFICATION	1.957094981748875E-5	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9999746062776574	WITHOUT_CLASSIFICATION	2.5393722342596733E-5	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9999945059188583	WITHOUT_CLASSIFICATION	5.494081141662601E-6	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9999696034881328	WITHOUT_CLASSIFICATION	3.0396511867140242E-5	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999951587471995	WITHOUT_CLASSIFICATION	4.841252800466099E-6	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999996850816845	WITHOUT_CLASSIFICATION	3.1491831545841756E-7	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999982776402049	WITHOUT_CLASSIFICATION	1.7223597951672775E-6	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999988051055397	WITHOUT_CLASSIFICATION	1.1948944602814633E-6	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999988051055397	WITHOUT_CLASSIFICATION	1.1948944602814633E-6	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.999998629088739	WITHOUT_CLASSIFICATION	1.3709112609280498E-6	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999957611223488	WITHOUT_CLASSIFICATION	4.238877651223487E-6	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999886914568474	WITHOUT_CLASSIFICATION	1.1308543152535017E-5	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.999999985322557	WITHOUT_CLASSIFICATION	1.467744299501619E-8	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.999999985322557	WITHOUT_CLASSIFICATION	1.467744299501619E-8	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999999882031019	WITHOUT_CLASSIFICATION	1.1796898131653853E-8	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999242827302537	WITHOUT_CLASSIFICATION	7.571726974629951E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999242827302537	WITHOUT_CLASSIFICATION	7.571726974629951E-5	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.999999580853036	WITHOUT_CLASSIFICATION	4.191469640058159E-7	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.999998307714217	WITHOUT_CLASSIFICATION	1.6922857828741642E-6	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999992428657661	WITHOUT_CLASSIFICATION	7.571342339175726E-7	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999988295729672	WITHOUT_CLASSIFICATION	1.1704270328024064E-6	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999878072138505	WITHOUT_CLASSIFICATION	1.2192786149480505E-5	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999880998993	WITHOUT_CLASSIFICATION	1.1900100650910015E-8	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999972721952056	WITHOUT_CLASSIFICATION	2.727804794474833E-6	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9997052826683273	WITHOUT_CLASSIFICATION	2.9471733167277844E-4	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.999991483205487	WITHOUT_CLASSIFICATION	8.516794512951428E-6	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999976730690529	WITHOUT_CLASSIFICATION	2.3269309472301366E-6	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999973752059856	WITHOUT_CLASSIFICATION	2.6247940143677634E-6	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999930122710665	WITHOUT_CLASSIFICATION	6.987728933503694E-6	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999986985122227	WITHOUT_CLASSIFICATION	1.3014877772774522E-6	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.999998478029071	WITHOUT_CLASSIFICATION	1.5219709290271918E-6	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9998534179116533	WITHOUT_CLASSIFICATION	1.4658208834677984E-4	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999997931268829	WITHOUT_CLASSIFICATION	2.0687311719980655E-7	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9999485084530003	WITHOUT_CLASSIFICATION	5.1491546999690117E-5	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9999781611984938	WITHOUT_CLASSIFICATION	2.183880150612633E-5	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.999969587155522	WITHOUT_CLASSIFICATION	3.04128444780131E-5	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999995878346449	WITHOUT_CLASSIFICATION	4.121653550610335E-7	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999912548734351	WITHOUT_CLASSIFICATION	8.745126564947714E-6	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999920866518359	WITHOUT_CLASSIFICATION	7.91334816401694E-6	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999599975382888	WITHOUT_CLASSIFICATION	4.000246171120179E-5	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999983924158734	WITHOUT_CLASSIFICATION	1.6075841267120526E-6	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999999007167056	WITHOUT_CLASSIFICATION	9.928329432300893E-8	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999987591813285	WITHOUT_CLASSIFICATION	1.2408186714928731E-6	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999904289973582	WITHOUT_CLASSIFICATION	9.571002641844844E-6	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999992586463231	WITHOUT_CLASSIFICATION	7.413536769577786E-7	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.999998926734747	WITHOUT_CLASSIFICATION	1.0732652531069604E-6	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999598422275046	WITHOUT_CLASSIFICATION	4.015777249545463E-5	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9998452019869699	WITHOUT_CLASSIFICATION	1.5479801303005877E-4	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999698568576868	WITHOUT_CLASSIFICATION	3.014314231313097E-5	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9999913245104955	WITHOUT_CLASSIFICATION	8.675489504477948E-6	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999820069916188	WITHOUT_CLASSIFICATION	1.7993008381263774E-5	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999650089099663	WITHOUT_CLASSIFICATION	3.4991090033758604E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.999989671415734	WITHOUT_CLASSIFICATION	1.0328584265930906E-5	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999851195681198	WITHOUT_CLASSIFICATION	1.4880431880193361E-5	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999915295772481	WITHOUT_CLASSIFICATION	8.47042275193053E-6	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999284955893576	WITHOUT_CLASSIFICATION	7.15044106423427E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.999989671415734	WITHOUT_CLASSIFICATION	1.0328584265930906E-5	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999851195681198	WITHOUT_CLASSIFICATION	1.4880431880193361E-5	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999785811657557	WITHOUT_CLASSIFICATION	2.1418834244316925E-5	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999955842041961	WITHOUT_CLASSIFICATION	4.415795803916009E-6	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999955842041961	WITHOUT_CLASSIFICATION	4.415795803916009E-6	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999987604465465	WITHOUT_CLASSIFICATION	1.239553453542646E-6	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999750561877	WITHOUT_CLASSIFICATION	2.4943812336419323E-8	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999459742020346	WITHOUT_CLASSIFICATION	5.4025797965408985E-5	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999665618698341	WITHOUT_CLASSIFICATION	3.3438130165891196E-5	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999975201361537	WITHOUT_CLASSIFICATION	2.479863846284959E-6	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999966723842667	WITHOUT_CLASSIFICATION	3.3276157332897466E-6	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999977214507982	WITHOUT_CLASSIFICATION	2.2785492017439223E-6	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999967480060562	WITHOUT_CLASSIFICATION	3.2519939437846516E-6	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9998990083844874	WITHOUT_CLASSIFICATION	1.0099161551261612E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9998833500494955	WITHOUT_CLASSIFICATION	1.1664995050459276E-4	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999955452946782	WITHOUT_CLASSIFICATION	4.454705321822549E-6	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999984820137868	WITHOUT_CLASSIFICATION	1.5179862131247895E-6	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999987378021971	WITHOUT_CLASSIFICATION	1.262197802902393E-6	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999972270457975	WITHOUT_CLASSIFICATION	2.7729542025076887E-6	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999972270457975	WITHOUT_CLASSIFICATION	2.7729542025076887E-6	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999338102564502	WITHOUT_CLASSIFICATION	6.618974354978012E-5	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999338102564502	WITHOUT_CLASSIFICATION	6.618974354978012E-5	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999989617356897	WITHOUT_CLASSIFICATION	1.0382643102672548E-6	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999952210666369	WITHOUT_CLASSIFICATION	4.7789333631279775E-6	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999853254644522	WITHOUT_CLASSIFICATION	1.4674535547937381E-5	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999950388287859	WITHOUT_CLASSIFICATION	4.961171214069206E-6	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999982820078531	WITHOUT_CLASSIFICATION	1.7179921468904095E-6	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.999988076545222	WITHOUT_CLASSIFICATION	1.1923454777959231E-5	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999459742020346	WITHOUT_CLASSIFICATION	5.4025797965408985E-5	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999665618698341	WITHOUT_CLASSIFICATION	3.3438130165891196E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9998990083844874	WITHOUT_CLASSIFICATION	1.0099161551261612E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9998833500494955	WITHOUT_CLASSIFICATION	1.1664995050459276E-4	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999756354678472	WITHOUT_CLASSIFICATION	2.4364532152730887E-5	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999978998124335	WITHOUT_CLASSIFICATION	2.1001875665768085E-6	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9998857752131196	WITHOUT_CLASSIFICATION	1.142247868804171E-4	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999733010191347	WITHOUT_CLASSIFICATION	2.6698980865233515E-5	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999956157879255	WITHOUT_CLASSIFICATION	4.384212074456361E-6	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9998960207433013	WITHOUT_CLASSIFICATION	1.0397925669864245E-4	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999914257756218	WITHOUT_CLASSIFICATION	8.574224378224118E-6	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.999925705516555	WITHOUT_CLASSIFICATION	7.429448344507518E-5	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999991896781169	WITHOUT_CLASSIFICATION	8.103218831071268E-7	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999571981104012	WITHOUT_CLASSIFICATION	4.280188959886652E-5	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999698982660118	WITHOUT_CLASSIFICATION	3.0101733988272666E-5	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9998814502431518	WITHOUT_CLASSIFICATION	1.1854975684826308E-4	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.9999276808707427	WITHOUT_CLASSIFICATION	7.231912925737512E-5	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9998662353012014	WITHOUT_CLASSIFICATION	1.3376469879861105E-4	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999995929394312	WITHOUT_CLASSIFICATION	4.0706056877944145E-7	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9992062656814378	WITHOUT_CLASSIFICATION	7.937343185622364E-4	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999407182378593	WITHOUT_CLASSIFICATION	5.928176214070981E-5	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999971208557383	WITHOUT_CLASSIFICATION	2.8791442616039015E-6	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999990813231817	WITHOUT_CLASSIFICATION	9.186768182995166E-7	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999464518012985	WITHOUT_CLASSIFICATION	5.354819870150968E-5	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999589561762717	WITHOUT_CLASSIFICATION	4.10438237281746E-5	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999589561762717	WITHOUT_CLASSIFICATION	4.10438237281746E-5	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999976034030256	WITHOUT_CLASSIFICATION	2.3965969743921304E-6	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999738696482887	WITHOUT_CLASSIFICATION	2.6130351711169654E-5	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.999999830385662	WITHOUT_CLASSIFICATION	1.6961433810975046E-7	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999946182268145	WITHOUT_CLASSIFICATION	5.381773185592261E-6	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999946182268145	WITHOUT_CLASSIFICATION	5.381773185592261E-6	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9998857752131196	WITHOUT_CLASSIFICATION	1.142247868804171E-4	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.999976688698592	WITHOUT_CLASSIFICATION	2.3311301407895303E-5	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.999990013035274	WITHOUT_CLASSIFICATION	9.986964725942734E-6	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999972351374766	WITHOUT_CLASSIFICATION	2.7648625232789683E-6	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999962982390742	WITHOUT_CLASSIFICATION	3.7017609257703213E-6	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999677329695928	WITHOUT_CLASSIFICATION	3.2267030407144814E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9998522959776966	WITHOUT_CLASSIFICATION	1.477040223033574E-4	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999597478258342	WITHOUT_CLASSIFICATION	4.025217416581142E-5	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9999868395624252	WITHOUT_CLASSIFICATION	1.3160437574795789E-5	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.999993452301324	WITHOUT_CLASSIFICATION	6.547698676075435E-6	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.999998051567544	WITHOUT_CLASSIFICATION	1.948432455973493E-6	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999840380920788	WITHOUT_CLASSIFICATION	1.5961907921257323E-5	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999989575721658	WITHOUT_CLASSIFICATION	1.0424278342132267E-6	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.999998239219025	WITHOUT_CLASSIFICATION	1.7607809750288102E-6	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999869138922545	WITHOUT_CLASSIFICATION	1.3086107745542317E-5	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9999907338937579	WITHOUT_CLASSIFICATION	9.266106242082312E-6	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999932154906345	WITHOUT_CLASSIFICATION	6.784509365583038E-6	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9999402553503471	WITHOUT_CLASSIFICATION	5.974464965283035E-5	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999992286555425	WITHOUT_CLASSIFICATION	7.713444575858755E-7	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999751577460926	WITHOUT_CLASSIFICATION	2.48422539075072E-5	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.999995563314515	WITHOUT_CLASSIFICATION	4.43668548507187E-6	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999930322512376	WITHOUT_CLASSIFICATION	6.967748762343331E-6	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999987542507567	WITHOUT_CLASSIFICATION	1.2457492432636972E-6	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999886585052354	WITHOUT_CLASSIFICATION	1.134149476460545E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999984728317255	WITHOUT_CLASSIFICATION	1.5271682745144925E-6	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999975569433434	WITHOUT_CLASSIFICATION	2.4430566566055407E-6	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.999993936996281	WITHOUT_CLASSIFICATION	6.063003719033293E-6	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999935132140542	WITHOUT_CLASSIFICATION	6.486785945764157E-6	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999967294061937	WITHOUT_CLASSIFICATION	3.2705938062643643E-6	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999870754909416	WITHOUT_CLASSIFICATION	1.2924509058449618E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999992423804521	WITHOUT_CLASSIFICATION	7.576195478253036E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999992423804521	WITHOUT_CLASSIFICATION	7.576195478253036E-7	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999996196304767	WITHOUT_CLASSIFICATION	3.803695233347538E-7	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999971965426181	WITHOUT_CLASSIFICATION	2.803457381934053E-6	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999971965426181	WITHOUT_CLASSIFICATION	2.803457381934053E-6	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999989986000538	WITHOUT_CLASSIFICATION	1.0013999461206506E-6	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999989986000538	WITHOUT_CLASSIFICATION	1.0013999461206506E-6	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.999988995379841	WITHOUT_CLASSIFICATION	1.1004620159047948E-5	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999980923121964	WITHOUT_CLASSIFICATION	1.907687803562054E-6	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999992939384825	WITHOUT_CLASSIFICATION	7.060615174713057E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999882816517097	WITHOUT_CLASSIFICATION	1.1718348290271664E-5	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999956290111026	WITHOUT_CLASSIFICATION	4.370988897392233E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9997854652594369	WITHOUT_CLASSIFICATION	2.1453474056303746E-4	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9997854652594369	WITHOUT_CLASSIFICATION	2.1453474056303746E-4	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999984728317255	WITHOUT_CLASSIFICATION	1.5271682745144925E-6	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999984728317255	WITHOUT_CLASSIFICATION	1.5271682745144925E-6	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999984728317255	WITHOUT_CLASSIFICATION	1.5271682745144925E-6	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999975569433434	WITHOUT_CLASSIFICATION	2.4430566566055407E-6	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999992423804521	WITHOUT_CLASSIFICATION	7.576195478253036E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999992423804521	WITHOUT_CLASSIFICATION	7.576195478253036E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999992423804521	WITHOUT_CLASSIFICATION	7.576195478253036E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.999988995379841	WITHOUT_CLASSIFICATION	1.1004620159047948E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.999988995379841	WITHOUT_CLASSIFICATION	1.1004620159047948E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.999988995379841	WITHOUT_CLASSIFICATION	1.1004620159047948E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999882816517097	WITHOUT_CLASSIFICATION	1.1718348290271664E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999882816517097	WITHOUT_CLASSIFICATION	1.1718348290271664E-5	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999986104400231	WITHOUT_CLASSIFICATION	1.38955997680226E-6	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999927696512197	WITHOUT_CLASSIFICATION	7.2303487802669555E-6	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999993432821683	WITHOUT_CLASSIFICATION	6.567178317078829E-6	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.95294205322187	WITHOUT_CLASSIFICATION	0.047057946778129946	IMPLEMENTATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9999949290756606	WITHOUT_CLASSIFICATION	5.07092433950769E-6	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.999969000995694	WITHOUT_CLASSIFICATION	3.099900430607615E-5	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.999969000995694	WITHOUT_CLASSIFICATION	3.099900430607615E-5	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999976210749093	WITHOUT_CLASSIFICATION	2.3789250906826077E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9998522959776966	WITHOUT_CLASSIFICATION	1.477040223033574E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9998522959776966	WITHOUT_CLASSIFICATION	1.477040223033574E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9998522959776966	WITHOUT_CLASSIFICATION	1.477040223033574E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9998522959776966	WITHOUT_CLASSIFICATION	1.477040223033574E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9998522959776966	WITHOUT_CLASSIFICATION	1.477040223033574E-4	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999842546153611	WITHOUT_CLASSIFICATION	1.5745384638944484E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999842546153611	WITHOUT_CLASSIFICATION	1.5745384638944484E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999842546153611	WITHOUT_CLASSIFICATION	1.5745384638944484E-5	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999976695689056	WITHOUT_CLASSIFICATION	2.330431094398736E-6	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.999985794657488	WITHOUT_CLASSIFICATION	1.420534251192778E-5	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999975569433434	WITHOUT_CLASSIFICATION	2.4430566566055407E-6	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.999988995379841	WITHOUT_CLASSIFICATION	1.1004620159047948E-5	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.999988995379841	WITHOUT_CLASSIFICATION	1.1004620159047948E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9998522959776966	WITHOUT_CLASSIFICATION	1.477040223033574E-4	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9998522959776966	WITHOUT_CLASSIFICATION	1.477040223033574E-4	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999842546153611	WITHOUT_CLASSIFICATION	1.5745384638944484E-5	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999976210749093	WITHOUT_CLASSIFICATION	2.3789250906826077E-6	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.999994940821047	WITHOUT_CLASSIFICATION	5.059178953104167E-6	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.9999961229720735	WITHOUT_CLASSIFICATION	3.877027926380285E-6	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.999999896851011	WITHOUT_CLASSIFICATION	1.0314898896302535E-7	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999587868097602	WITHOUT_CLASSIFICATION	4.1213190239749145E-5	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999907927561277	WITHOUT_CLASSIFICATION	9.207243872329262E-6	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999937774148107	WITHOUT_CLASSIFICATION	6.2225851893684025E-6	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999481148544762	WITHOUT_CLASSIFICATION	5.1885145523704275E-5	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999946054819852	WITHOUT_CLASSIFICATION	5.394518014782223E-6	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999879760274797	WITHOUT_CLASSIFICATION	1.2023972520294274E-5	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999978916124174	WITHOUT_CLASSIFICATION	2.108387582637366E-6	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.999996953413558	WITHOUT_CLASSIFICATION	3.0465864420727863E-6	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999933703812727	WITHOUT_CLASSIFICATION	6.629618727321555E-6	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999962572843903	WITHOUT_CLASSIFICATION	3.7427156096867052E-6	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9999901789015508	WITHOUT_CLASSIFICATION	9.821098449066875E-6	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999934615557259	WITHOUT_CLASSIFICATION	6.538444274021932E-6	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999724068380672	WITHOUT_CLASSIFICATION	2.7593161932774225E-5	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999885066573974	WITHOUT_CLASSIFICATION	1.1493342602627601E-5	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999940071340767	WITHOUT_CLASSIFICATION	5.992865923229285E-6	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999597170534243	WITHOUT_CLASSIFICATION	4.0282946575783656E-5	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999997298152953	WITHOUT_CLASSIFICATION	2.7018470480578675E-7	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999991562593711	WITHOUT_CLASSIFICATION	8.43740628899655E-7	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999430256839249	WITHOUT_CLASSIFICATION	5.6974316075045836E-5	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9998939207147212	WITHOUT_CLASSIFICATION	1.0607928527875434E-4	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.999993487412682	WITHOUT_CLASSIFICATION	6.512587318089348E-6	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999961100686053	WITHOUT_CLASSIFICATION	3.889931394584732E-6	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.999985721398551	WITHOUT_CLASSIFICATION	1.4278601448893301E-5	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.999990028697967	WITHOUT_CLASSIFICATION	9.971302032856052E-6	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999981255299936	WITHOUT_CLASSIFICATION	1.8744700063757991E-6	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999972141351342	WITHOUT_CLASSIFICATION	2.785864865748132E-6	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999986001433504	WITHOUT_CLASSIFICATION	1.3998566495489315E-6	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999974447921687	WITHOUT_CLASSIFICATION	2.5552078312896885E-6	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999997648394823	WITHOUT_CLASSIFICATION	2.3516051763544498E-7	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999965424102661	WITHOUT_CLASSIFICATION	3.4575897337806184E-6	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999986592712209	WITHOUT_CLASSIFICATION	1.3407287791122107E-6	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.999994940821047	WITHOUT_CLASSIFICATION	5.059178953104167E-6	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999733107059352	WITHOUT_CLASSIFICATION	2.668929406483348E-5	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999866788025802	WITHOUT_CLASSIFICATION	1.3321197419693398E-5	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999964282752495	WITHOUT_CLASSIFICATION	3.5717247504908453E-6	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999827637880646	WITHOUT_CLASSIFICATION	1.723621193544082E-5	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999827637880646	WITHOUT_CLASSIFICATION	1.723621193544082E-5	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9999814292586032	WITHOUT_CLASSIFICATION	1.857074139684158E-5	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9999814292586032	WITHOUT_CLASSIFICATION	1.857074139684158E-5	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999998635520702	WITHOUT_CLASSIFICATION	1.3644792978159424E-7	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999947835143674	WITHOUT_CLASSIFICATION	5.216485632555969E-6	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.999961441041351	WITHOUT_CLASSIFICATION	3.855895864897586E-5	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.999697557501899	WITHOUT_CLASSIFICATION	3.0244249810097945E-4	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999974339807781	WITHOUT_CLASSIFICATION	2.5660192219858085E-6	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999754649213132	WITHOUT_CLASSIFICATION	2.4535078686895078E-5	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999976486403314	WITHOUT_CLASSIFICATION	2.3513596685873617E-6	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999971224024458	WITHOUT_CLASSIFICATION	2.8775975542251892E-6	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999996065630972	WITHOUT_CLASSIFICATION	3.9343690286592564E-7	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999997836226441	WITHOUT_CLASSIFICATION	2.1637735605162385E-7	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999985305652185	WITHOUT_CLASSIFICATION	1.46943478148152E-6	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999906110542788	WITHOUT_CLASSIFICATION	9.388945721185678E-6	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999906110542788	WITHOUT_CLASSIFICATION	9.388945721185678E-6	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999994241632911	WITHOUT_CLASSIFICATION	5.758367089388525E-7	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999995530664026	WITHOUT_CLASSIFICATION	4.4693359736086517E-7	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999959698346351	WITHOUT_CLASSIFICATION	4.030165364909505E-6	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999959698346351	WITHOUT_CLASSIFICATION	4.030165364909505E-6	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999990860132488	WITHOUT_CLASSIFICATION	9.139867512728707E-7	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999430184439	WITHOUT_CLASSIFICATION	5.698155599228806E-8	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999906274616741	WITHOUT_CLASSIFICATION	9.372538325869448E-6	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999931212408109	WITHOUT_CLASSIFICATION	6.878759189094183E-6	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999981842676329	WITHOUT_CLASSIFICATION	1.8157323671908344E-6	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999939694973579	WITHOUT_CLASSIFICATION	6.03050264204185E-6	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9999806416777427	WITHOUT_CLASSIFICATION	1.9358322257273008E-5	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999994246551608	WITHOUT_CLASSIFICATION	5.753448393086347E-7	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999997236526379	WITHOUT_CLASSIFICATION	2.763473621824122E-7	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9999952000176402	WITHOUT_CLASSIFICATION	4.799982359737963E-6	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999793635192011	WITHOUT_CLASSIFICATION	2.0636480798826693E-5	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999118498044599	WITHOUT_CLASSIFICATION	8.815019554017889E-5	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999883528501785	WITHOUT_CLASSIFICATION	1.164714982159164E-5	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999706301096978	WITHOUT_CLASSIFICATION	2.9369890302231473E-5	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999997504322815	WITHOUT_CLASSIFICATION	2.495677184808168E-7	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.999984387086684	WITHOUT_CLASSIFICATION	1.5612913315945668E-5	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999937987168771	WITHOUT_CLASSIFICATION	6.201283122836433E-6	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999653298283414	WITHOUT_CLASSIFICATION	3.467017165851533E-5	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999969045227528	WITHOUT_CLASSIFICATION	3.0954772472163957E-6	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999525590416	WITHOUT_CLASSIFICATION	4.74409585176311E-8	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.5240000459571884	WITHOUT_CLASSIFICATION	0.47599995404281153	IMPLEMENTATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999977115288806	WITHOUT_CLASSIFICATION	2.288471119367008E-6	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999980861712221	WITHOUT_CLASSIFICATION	1.913828777908623E-6	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999326357843193	WITHOUT_CLASSIFICATION	6.736421568060329E-5	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.999996512379531	WITHOUT_CLASSIFICATION	3.487620468933203E-6	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.999997995561201	WITHOUT_CLASSIFICATION	2.0044387990787326E-6	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9999955233062868	WITHOUT_CLASSIFICATION	4.476693713113303E-6	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999505781327733	WITHOUT_CLASSIFICATION	4.9421867226577646E-5	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999942349432984	WITHOUT_CLASSIFICATION	5.765056701657154E-6	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999952763372478	WITHOUT_CLASSIFICATION	4.7236627521730155E-6	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999794226152183	WITHOUT_CLASSIFICATION	2.0577384781733924E-5	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999762553238518	WITHOUT_CLASSIFICATION	2.3744676148188005E-5	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999895471368857	WITHOUT_CLASSIFICATION	1.045286311420692E-5	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999905379543739	WITHOUT_CLASSIFICATION	9.462045626185003E-6	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999905379543739	WITHOUT_CLASSIFICATION	9.462045626185003E-6	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999857084078755	WITHOUT_CLASSIFICATION	1.4291592124595845E-5	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999986133561551	WITHOUT_CLASSIFICATION	1.3866438448607714E-6	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999986351529738	WITHOUT_CLASSIFICATION	1.364847026109228E-6	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9999731743743239	WITHOUT_CLASSIFICATION	2.682562567607743E-5	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9998899359650774	WITHOUT_CLASSIFICATION	1.1006403492262365E-4	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999860264943199	WITHOUT_CLASSIFICATION	1.397350568013244E-5	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999933729539169	WITHOUT_CLASSIFICATION	6.627046083153987E-6	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.999996898184136	WITHOUT_CLASSIFICATION	3.1018158639751964E-6	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999640513891567	WITHOUT_CLASSIFICATION	3.594861084332065E-5	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9999257640261727	WITHOUT_CLASSIFICATION	7.423597382734798E-5	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999997822087339	WITHOUT_CLASSIFICATION	2.1779126607601507E-7	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999883887309267	WITHOUT_CLASSIFICATION	1.1611269073270512E-5	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999799109932068	WITHOUT_CLASSIFICATION	2.0089006793167954E-5	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999213614523591	WITHOUT_CLASSIFICATION	7.86385476408085E-5	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999932663546099	WITHOUT_CLASSIFICATION	6.7336453900466596E-6	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999963925616661	WITHOUT_CLASSIFICATION	3.607438333842651E-6	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999993028797077	WITHOUT_CLASSIFICATION	6.971202922168848E-7	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999954258323974	WITHOUT_CLASSIFICATION	4.574167602613019E-6	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999831463483629	WITHOUT_CLASSIFICATION	1.6853651637085894E-5	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.999985413856481	WITHOUT_CLASSIFICATION	1.458614351903843E-5	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999981650304473	WITHOUT_CLASSIFICATION	1.8349695526642173E-6	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999598962797768	WITHOUT_CLASSIFICATION	4.010372022312994E-5	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999751160834722	WITHOUT_CLASSIFICATION	2.4883916527806532E-5	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9998081291082398	WITHOUT_CLASSIFICATION	1.9187089176023403E-4	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999986809038358	WITHOUT_CLASSIFICATION	1.3190961641226767E-6	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999981205197823	WITHOUT_CLASSIFICATION	1.8794802176754102E-6	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.999992769173805	WITHOUT_CLASSIFICATION	7.23082619500221E-6	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999954792046608	WITHOUT_CLASSIFICATION	4.5207953392529004E-6	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9999891645326968	WITHOUT_CLASSIFICATION	1.0835467303160647E-5	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999950221481584	WITHOUT_CLASSIFICATION	4.977851841546869E-6	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999994183213587	WITHOUT_CLASSIFICATION	5.816786412706785E-7	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999997712039381	WITHOUT_CLASSIFICATION	2.287960617801366E-7	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999981480931136	WITHOUT_CLASSIFICATION	1.8519068863725924E-6	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999932989991792	WITHOUT_CLASSIFICATION	6.70100082072775E-6	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999608840057623	WITHOUT_CLASSIFICATION	3.911599423763711E-5	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.999998684413581	WITHOUT_CLASSIFICATION	1.3155864190896063E-6	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9995600203550764	WITHOUT_CLASSIFICATION	4.3997964492357083E-4	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9999795585675558	WITHOUT_CLASSIFICATION	2.044143244420157E-5	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.999965373176483	WITHOUT_CLASSIFICATION	3.4626823516909264E-5	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999942136188128	WITHOUT_CLASSIFICATION	5.786381187215554E-6	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999902117784485	WITHOUT_CLASSIFICATION	9.788221551576227E-6	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999642214759034	WITHOUT_CLASSIFICATION	3.577852409667045E-5	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999642214759034	WITHOUT_CLASSIFICATION	3.577852409667045E-5	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999661903836584	WITHOUT_CLASSIFICATION	3.3809616341592314E-5	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999923601606785	WITHOUT_CLASSIFICATION	7.639839321552795E-6	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.999972560042357	WITHOUT_CLASSIFICATION	2.7439957642866156E-5	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999962854977766	WITHOUT_CLASSIFICATION	3.714502223328819E-6	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999974408042526	WITHOUT_CLASSIFICATION	2.5591957474311503E-6	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999972294028499	WITHOUT_CLASSIFICATION	2.7705971500097767E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999981671732359	WITHOUT_CLASSIFICATION	1.8328267642227721E-6	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999924161755827	WITHOUT_CLASSIFICATION	7.583824417392009E-6	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.999999531563891	WITHOUT_CLASSIFICATION	4.6843610892337983E-7	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999998424580119	WITHOUT_CLASSIFICATION	1.575419881234214E-7	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999887586329209	WITHOUT_CLASSIFICATION	1.1241367079178328E-5	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999994868561699	WITHOUT_CLASSIFICATION	5.131438299991885E-7	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999924224031504	WITHOUT_CLASSIFICATION	7.577596849533052E-6	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999534138312656	WITHOUT_CLASSIFICATION	4.658616873451787E-5	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999996960312857	WITHOUT_CLASSIFICATION	3.0396871439780424E-7	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9999028904515443	WITHOUT_CLASSIFICATION	9.710954845568642E-5	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999441826492372	WITHOUT_CLASSIFICATION	5.5817350762791504E-5	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999703499965449	WITHOUT_CLASSIFICATION	2.9650003455139816E-5	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.999992390592789	WITHOUT_CLASSIFICATION	7.6094072110503844E-6	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999938815935906	WITHOUT_CLASSIFICATION	6.118406409440288E-6	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999894501382666	WITHOUT_CLASSIFICATION	1.0549861733334955E-5	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9997203817292436	WITHOUT_CLASSIFICATION	2.7961827075637623E-4	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999822785955	WITHOUT_CLASSIFICATION	1.7721404488752705E-8	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.999998613596649	WITHOUT_CLASSIFICATION	1.3864033510187099E-6	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999990552234538	WITHOUT_CLASSIFICATION	9.447765462778104E-7	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999989262139113	WITHOUT_CLASSIFICATION	1.0737860887236454E-6	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999871762399632	WITHOUT_CLASSIFICATION	1.2823760036768236E-5	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999972298685976	WITHOUT_CLASSIFICATION	2.7701314023373946E-6	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999916160555264	WITHOUT_CLASSIFICATION	8.38394447352284E-6	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999950006844537	WITHOUT_CLASSIFICATION	4.99931554640244E-6	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999918073805074	WITHOUT_CLASSIFICATION	8.192619492633858E-6	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999880470947707	WITHOUT_CLASSIFICATION	1.1952905229218738E-5	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999950006844537	WITHOUT_CLASSIFICATION	4.99931554640244E-6	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999940622809311	WITHOUT_CLASSIFICATION	5.937719068798302E-6	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999999007167056	WITHOUT_CLASSIFICATION	9.928329432300893E-8	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9969999691138401	WITHOUT_CLASSIFICATION	0.0030000308861597305	IMPLEMENTATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9879985498227063	WITHOUT_CLASSIFICATION	0.01200145017729364	IMPLEMENTATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999932516558401	WITHOUT_CLASSIFICATION	6.748344159966052E-6	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999113548640326	WITHOUT_CLASSIFICATION	8.86451359673343E-5	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999953690064701	WITHOUT_CLASSIFICATION	4.630993529874535E-6	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999985725230197	WITHOUT_CLASSIFICATION	1.4274769802089503E-6	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999750561877	WITHOUT_CLASSIFICATION	2.4943812336419323E-8	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999525590416	WITHOUT_CLASSIFICATION	4.74409585176311E-8	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999993432821683	WITHOUT_CLASSIFICATION	6.567178317078829E-6	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999989196363732	WITHOUT_CLASSIFICATION	1.0803636268849093E-6	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999990279746531	WITHOUT_CLASSIFICATION	9.720253469163537E-7	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999998608473284	WITHOUT_CLASSIFICATION	1.391526715697255E-7	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999312988466984	WITHOUT_CLASSIFICATION	6.870115330162914E-5	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.999997695284636	WITHOUT_CLASSIFICATION	2.3047153640746083E-6	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9999820071028169	WITHOUT_CLASSIFICATION	1.7992897183078542E-5	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.999996674621139	WITHOUT_CLASSIFICATION	3.325378860973922E-6	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.999999936935484	WITHOUT_CLASSIFICATION	6.306451604601511E-8	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.999999918498805	WITHOUT_CLASSIFICATION	8.150119503261945E-8	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9999894042976354	WITHOUT_CLASSIFICATION	1.05957023646019E-5	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9999653518575522	WITHOUT_CLASSIFICATION	3.46481424478166E-5	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9999785470302239	WITHOUT_CLASSIFICATION	2.1452969776095308E-5	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999971270806289	WITHOUT_CLASSIFICATION	2.8729193709794363E-6	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999923488613962	WITHOUT_CLASSIFICATION	7.651138603893459E-6	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999878222304123	WITHOUT_CLASSIFICATION	1.2177769587670189E-5	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.999986277616649	WITHOUT_CLASSIFICATION	1.372238335109627E-5	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999997888114573	WITHOUT_CLASSIFICATION	2.1118854264944224E-7	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999918608790376	WITHOUT_CLASSIFICATION	8.139120962447772E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999856928676699	WITHOUT_CLASSIFICATION	1.4307132330189406E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999856928676699	WITHOUT_CLASSIFICATION	1.4307132330189406E-5	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999979686492023	WITHOUT_CLASSIFICATION	2.031350797602256E-6	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999992925920751	WITHOUT_CLASSIFICATION	7.074079248133715E-7	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999996424058186	WITHOUT_CLASSIFICATION	3.5759418139306293E-7	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5327687869717694	WITHOUT_CLASSIFICATION	0.46723121302823056	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5327687869717694	WITHOUT_CLASSIFICATION	0.46723121302823056	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5327687869717694	WITHOUT_CLASSIFICATION	0.46723121302823056	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5327687869717694	WITHOUT_CLASSIFICATION	0.46723121302823056	IMPLEMENTATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999189417267115	WITHOUT_CLASSIFICATION	8.105827328850414E-5	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999957503433735	WITHOUT_CLASSIFICATION	4.249656626539666E-6	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9999846834693432	WITHOUT_CLASSIFICATION	1.5316530656737397E-5	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9999959876325125	WITHOUT_CLASSIFICATION	4.0123674875682145E-6	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999921131643811	WITHOUT_CLASSIFICATION	7.886835618918461E-6	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999635557607605	WITHOUT_CLASSIFICATION	3.6444239239556116E-5	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999680145408721	WITHOUT_CLASSIFICATION	3.198545912780212E-5	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999680145408721	WITHOUT_CLASSIFICATION	3.198545912780212E-5	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999870854397924	WITHOUT_CLASSIFICATION	1.2914560207537967E-5	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9999337360321968	WITHOUT_CLASSIFICATION	6.626396780309218E-5	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999996459454901	WITHOUT_CLASSIFICATION	3.5405450993576486E-7	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999999169653297	WITHOUT_CLASSIFICATION	8.303467036683936E-8	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999948879686804	WITHOUT_CLASSIFICATION	5.112031319614433E-6	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999953762124387	WITHOUT_CLASSIFICATION	4.6237875612401726E-6	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999997100420637	WITHOUT_CLASSIFICATION	2.8995793635637076E-7	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999759712562782	WITHOUT_CLASSIFICATION	2.40287437216875E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998725655345531	WITHOUT_CLASSIFICATION	1.274344654469642E-4	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9998725655345531	WITHOUT_CLASSIFICATION	1.274344654469642E-4	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999880470947707	WITHOUT_CLASSIFICATION	1.1952905229218738E-5	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.999986341128659	WITHOUT_CLASSIFICATION	1.3658871341032117E-5	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9999863392457014	WITHOUT_CLASSIFICATION	1.3660754298708594E-5	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.999985627253807	WITHOUT_CLASSIFICATION	1.4372746193048517E-5	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999998371447076	WITHOUT_CLASSIFICATION	1.628552923994204E-7	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9999257155298664	WITHOUT_CLASSIFICATION	7.428447013356517E-5	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999939648948816	WITHOUT_CLASSIFICATION	6.035105118480647E-6	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9996801809469616	WITHOUT_CLASSIFICATION	3.1981905303837756E-4	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999958801467217	WITHOUT_CLASSIFICATION	4.119853278259914E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999958801467217	WITHOUT_CLASSIFICATION	4.119853278259914E-6	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999997518112215	WITHOUT_CLASSIFICATION	2.4818877848115777E-7	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999999204781554	WITHOUT_CLASSIFICATION	7.952184456250601E-8	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999923068511559	WITHOUT_CLASSIFICATION	7.693148844008901E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999893589966655	WITHOUT_CLASSIFICATION	1.064100333435916E-5	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999826368095447	WITHOUT_CLASSIFICATION	1.7363190455276997E-5	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9999249877498424	WITHOUT_CLASSIFICATION	7.501225015757949E-5	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999993810403692	WITHOUT_CLASSIFICATION	6.189596308995216E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999950931056288	WITHOUT_CLASSIFICATION	4.906894371144389E-6	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999950931056288	WITHOUT_CLASSIFICATION	4.906894371144389E-6	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999950931056288	WITHOUT_CLASSIFICATION	4.906894371144389E-6	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999950931056288	WITHOUT_CLASSIFICATION	4.906894371144389E-6	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999988475538775	WITHOUT_CLASSIFICATION	1.1524461225871944E-6	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999997505639452	WITHOUT_CLASSIFICATION	2.494360548740671E-7	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999978075226451	WITHOUT_CLASSIFICATION	2.192477354853678E-6	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9997954393618363	WITHOUT_CLASSIFICATION	2.045606381637573E-4	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.999975318106825	WITHOUT_CLASSIFICATION	2.468189317495917E-5	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9999156747817686	WITHOUT_CLASSIFICATION	8.43252182314698E-5	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999972627410593	WITHOUT_CLASSIFICATION	2.737258940641719E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999782245748238	WITHOUT_CLASSIFICATION	2.1775425176208142E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999782245748238	WITHOUT_CLASSIFICATION	2.1775425176208142E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999782245748238	WITHOUT_CLASSIFICATION	2.1775425176208142E-5	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999990001226731	WITHOUT_CLASSIFICATION	9.998773269606964E-7	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.999994612579337	WITHOUT_CLASSIFICATION	5.38742066297547E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999809363664814	WITHOUT_CLASSIFICATION	1.906363351853258E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999809363664814	WITHOUT_CLASSIFICATION	1.906363351853258E-5	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9998984147078889	WITHOUT_CLASSIFICATION	1.0158529211115709E-4	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999806665248605	WITHOUT_CLASSIFICATION	1.933347513946682E-5	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999925896198034	WITHOUT_CLASSIFICATION	7.41038019653949E-6	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9999432037173558	WITHOUT_CLASSIFICATION	5.67962826442015E-5	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999995186348547	WITHOUT_CLASSIFICATION	4.813651453489047E-7	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999439023128286	WITHOUT_CLASSIFICATION	5.609768717131015E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999887378427127	WITHOUT_CLASSIFICATION	1.1262157287248838E-5	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999887378427127	WITHOUT_CLASSIFICATION	1.1262157287248838E-5	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999904581164542	WITHOUT_CLASSIFICATION	9.541883545777974E-6	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999016927230828	WITHOUT_CLASSIFICATION	9.830727691718208E-5	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999820085466123	WITHOUT_CLASSIFICATION	1.7991453387749325E-5	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999928016996812	WITHOUT_CLASSIFICATION	7.198300318836177E-6	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9997637627756808	WITHOUT_CLASSIFICATION	2.3623722431929538E-4	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999982667488013	WITHOUT_CLASSIFICATION	1.7332511987743626E-6	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.999996666722004	WITHOUT_CLASSIFICATION	3.333277995951493E-6	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998545137635385	WITHOUT_CLASSIFICATION	1.4548623646148278E-4	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999215399502859	WITHOUT_CLASSIFICATION	7.846004971404511E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999866127464165	WITHOUT_CLASSIFICATION	1.3387253583480763E-5	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999986088180883	WITHOUT_CLASSIFICATION	1.3911819116584534E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999771505116294	WITHOUT_CLASSIFICATION	2.2849488370610968E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999996630594989	WITHOUT_CLASSIFICATION	3.369405011015312E-7	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999174209860461	WITHOUT_CLASSIFICATION	8.257901395396031E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999997013901056	WITHOUT_CLASSIFICATION	2.986098943835317E-7	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999999291536424	WITHOUT_CLASSIFICATION	7.084635755562979E-8	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999949390015603	WITHOUT_CLASSIFICATION	5.060998439739589E-6	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999984559842348	WITHOUT_CLASSIFICATION	1.54401576523984E-6	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999698669192528	WITHOUT_CLASSIFICATION	3.0133080747122704E-5	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999930437401864	WITHOUT_CLASSIFICATION	6.956259813689941E-6	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999994019017394	WITHOUT_CLASSIFICATION	5.980982605707183E-7	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9996407346480379	WITHOUT_CLASSIFICATION	3.592653519620016E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.997822160599077	WITHOUT_CLASSIFICATION	0.002177839400923008	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.997822160599077	WITHOUT_CLASSIFICATION	0.002177839400923008	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.997822160599077	WITHOUT_CLASSIFICATION	0.002177839400923008	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.997822160599077	WITHOUT_CLASSIFICATION	0.002177839400923008	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.997822160599077	WITHOUT_CLASSIFICATION	0.002177839400923008	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.997822160599077	WITHOUT_CLASSIFICATION	0.002177839400923008	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.997822160599077	WITHOUT_CLASSIFICATION	0.002177839400923008	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.997822160599077	WITHOUT_CLASSIFICATION	0.002177839400923008	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999993986856529	WITHOUT_CLASSIFICATION	6.013143471955946E-7	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9999961333401317	WITHOUT_CLASSIFICATION	3.866659868306501E-6	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999991157230372	WITHOUT_CLASSIFICATION	8.84276962697962E-7	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.999272778389402	WITHOUT_CLASSIFICATION	7.272216105979828E-4	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999981671732359	WITHOUT_CLASSIFICATION	1.8328267642227721E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999981671732359	WITHOUT_CLASSIFICATION	1.8328267642227721E-6	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9998771236409483	WITHOUT_CLASSIFICATION	1.2287635905180048E-4	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999991901097277	WITHOUT_CLASSIFICATION	8.098902723167504E-7	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999992339720912	WITHOUT_CLASSIFICATION	7.660279086826949E-7	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999995650157674	WITHOUT_CLASSIFICATION	4.349842327020024E-7	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9998845506846001	WITHOUT_CLASSIFICATION	1.154493153999707E-4	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9999686227326557	WITHOUT_CLASSIFICATION	3.137726734431654E-5	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9999738911048919	WITHOUT_CLASSIFICATION	2.6108895108111914E-5	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9994490881239348	WITHOUT_CLASSIFICATION	5.509118760650736E-4	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999975925258591	WITHOUT_CLASSIFICATION	2.4074741410491566E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999996942065551	WITHOUT_CLASSIFICATION	3.057934449282416E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999996942065551	WITHOUT_CLASSIFICATION	3.057934449282416E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999996942065551	WITHOUT_CLASSIFICATION	3.057934449282416E-7	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997409752302909	WITHOUT_CLASSIFICATION	2.59024769709015E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997409752302909	WITHOUT_CLASSIFICATION	2.59024769709015E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997409752302909	WITHOUT_CLASSIFICATION	2.59024769709015E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997409752302909	WITHOUT_CLASSIFICATION	2.59024769709015E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997409752302909	WITHOUT_CLASSIFICATION	2.59024769709015E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997409752302909	WITHOUT_CLASSIFICATION	2.59024769709015E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997409752302909	WITHOUT_CLASSIFICATION	2.59024769709015E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997409752302909	WITHOUT_CLASSIFICATION	2.59024769709015E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997409752302909	WITHOUT_CLASSIFICATION	2.59024769709015E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999991412359015	WITHOUT_CLASSIFICATION	8.587640985348271E-7	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999842519911781	WITHOUT_CLASSIFICATION	1.5748008821781503E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999268718262647	WITHOUT_CLASSIFICATION	7.312817373523577E-5	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9996818878600212	WITHOUT_CLASSIFICATION	3.181121399787475E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997409752302909	WITHOUT_CLASSIFICATION	2.59024769709015E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997409752302909	WITHOUT_CLASSIFICATION	2.59024769709015E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997409752302909	WITHOUT_CLASSIFICATION	2.59024769709015E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.999952006062932	WITHOUT_CLASSIFICATION	4.799393706803183E-5	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999901738940972	WITHOUT_CLASSIFICATION	9.82610590273099E-6	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999997699859275	WITHOUT_CLASSIFICATION	2.3001407237322485E-7	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999933527673122	WITHOUT_CLASSIFICATION	6.6472326878277335E-6	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999933527673122	WITHOUT_CLASSIFICATION	6.6472326878277335E-6	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9998851367040329	WITHOUT_CLASSIFICATION	1.1486329596716243E-4	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9997825765663321	WITHOUT_CLASSIFICATION	2.1742343366794848E-4	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999736789131404	WITHOUT_CLASSIFICATION	2.6321086859666684E-5	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999643896620066	WITHOUT_CLASSIFICATION	3.5610337993325114E-5	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.99983686188354	WITHOUT_CLASSIFICATION	1.6313811646000536E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.99983686188354	WITHOUT_CLASSIFICATION	1.6313811646000536E-4	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999998602297766	WITHOUT_CLASSIFICATION	1.3977022334196907E-7	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999998902362913	WITHOUT_CLASSIFICATION	1.0976370864682865E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999987076374168	WITHOUT_CLASSIFICATION	1.2923625832111569E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9997936540258132	WITHOUT_CLASSIFICATION	2.0634597418681835E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9997936540258132	WITHOUT_CLASSIFICATION	2.0634597418681835E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9997936540258132	WITHOUT_CLASSIFICATION	2.0634597418681835E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999905753785815	WITHOUT_CLASSIFICATION	9.424621418395741E-6	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999805892554786	WITHOUT_CLASSIFICATION	1.941074452135447E-5	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999805892554786	WITHOUT_CLASSIFICATION	1.941074452135447E-5	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.999968114702184	WITHOUT_CLASSIFICATION	3.188529781581888E-5	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.999968114702184	WITHOUT_CLASSIFICATION	3.188529781581888E-5	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999965954434582	WITHOUT_CLASSIFICATION	3.404556541774675E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999660213655452	WITHOUT_CLASSIFICATION	3.397863445478395E-5	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999154017830753	WITHOUT_CLASSIFICATION	8.459821692467589E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999088270893208	WITHOUT_CLASSIFICATION	9.117291067910339E-5	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999800389881147	WITHOUT_CLASSIFICATION	1.996101188531541E-5	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999994476283309	WITHOUT_CLASSIFICATION	5.523716690500767E-7	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999986462798575	WITHOUT_CLASSIFICATION	1.3537201424822163E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9997854652594369	WITHOUT_CLASSIFICATION	2.1453474056303746E-4	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999981279337818	WITHOUT_CLASSIFICATION	1.872066218167764E-6	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999987885918195	WITHOUT_CLASSIFICATION	1.2114081805326427E-6	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999018998411557	WITHOUT_CLASSIFICATION	9.810015884418688E-5	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999836678723988	WITHOUT_CLASSIFICATION	1.6332127601200228E-5	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.999999580752544	WITHOUT_CLASSIFICATION	4.192474560521918E-7	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.999999761487683	WITHOUT_CLASSIFICATION	2.385123170904771E-7	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999998584503096	WITHOUT_CLASSIFICATION	1.4154969044670507E-7	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999989329862785	WITHOUT_CLASSIFICATION	1.0670137214937059E-6	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.999988309625671	WITHOUT_CLASSIFICATION	1.169037432898678E-5	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999976361180534	WITHOUT_CLASSIFICATION	2.36388194664636E-6	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999999092316768	WITHOUT_CLASSIFICATION	9.076832324357356E-8	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999991173701687	WITHOUT_CLASSIFICATION	8.826298314437686E-7	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999989196363732	WITHOUT_CLASSIFICATION	1.0803636268849093E-6	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9996398406719862	WITHOUT_CLASSIFICATION	3.6015932801383845E-4	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999958561554173	WITHOUT_CLASSIFICATION	4.143844582642495E-6	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999974120666308	WITHOUT_CLASSIFICATION	2.5879333691879478E-6	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999885818935713	WITHOUT_CLASSIFICATION	1.1418106428635957E-5	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999893047369645	WITHOUT_CLASSIFICATION	1.0695263035537507E-5	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.99997760449932	WITHOUT_CLASSIFICATION	2.2395500679927173E-5	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999996221636178	WITHOUT_CLASSIFICATION	3.778363821750767E-7	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999972837853353	WITHOUT_CLASSIFICATION	2.7162146648597246E-6	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999937367525796	WITHOUT_CLASSIFICATION	6.263247420387216E-6	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999885738706026	WITHOUT_CLASSIFICATION	1.1426129397419114E-5	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999737777674373	WITHOUT_CLASSIFICATION	2.6222232562602965E-5	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999983607525536	WITHOUT_CLASSIFICATION	1.6392474465187722E-6	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999962003732428	WITHOUT_CLASSIFICATION	3.7996267573376616E-6	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999768970326428	WITHOUT_CLASSIFICATION	2.3102967357123844E-5	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.999973461920796	WITHOUT_CLASSIFICATION	2.6538079204042826E-5	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999859381606399	WITHOUT_CLASSIFICATION	1.4061839360207639E-5	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999963872930346	WITHOUT_CLASSIFICATION	3.612706965361649E-6	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999989227008078	WITHOUT_CLASSIFICATION	1.0772991921694276E-6	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999942224195967	WITHOUT_CLASSIFICATION	5.777580403346805E-6	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.99999207649924	WITHOUT_CLASSIFICATION	7.923500759955893E-6	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999812306527883	WITHOUT_CLASSIFICATION	1.8769347211758293E-5	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999677644100005	WITHOUT_CLASSIFICATION	3.223558999964853E-5	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999988619082724	WITHOUT_CLASSIFICATION	1.138091727614078E-6	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.999999798129954	WITHOUT_CLASSIFICATION	2.0187004603239372E-7	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999954296981682	WITHOUT_CLASSIFICATION	4.570301831757966E-6	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9999977009844878	WITHOUT_CLASSIFICATION	2.29901551213515E-6	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999560950845	WITHOUT_CLASSIFICATION	4.390491541803671E-8	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999997297404765	WITHOUT_CLASSIFICATION	2.7025952355062473E-7	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999935959054031	WITHOUT_CLASSIFICATION	6.404094596901531E-5	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999985603180447	WITHOUT_CLASSIFICATION	1.4396819554159415E-6	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999549501776674	WITHOUT_CLASSIFICATION	4.504982233258077E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999549501776674	WITHOUT_CLASSIFICATION	4.504982233258077E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999993135456396	WITHOUT_CLASSIFICATION	6.864543603490661E-7	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999993135456396	WITHOUT_CLASSIFICATION	6.864543603490661E-7	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999969649995357	WITHOUT_CLASSIFICATION	3.0350004642237045E-6	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999969649995357	WITHOUT_CLASSIFICATION	3.0350004642237045E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999928802195021	WITHOUT_CLASSIFICATION	7.119780497873935E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999928802195021	WITHOUT_CLASSIFICATION	7.119780497873935E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999974211562663	WITHOUT_CLASSIFICATION	2.578843733607931E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999974211562663	WITHOUT_CLASSIFICATION	2.578843733607931E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999974211562663	WITHOUT_CLASSIFICATION	2.578843733607931E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999974211562663	WITHOUT_CLASSIFICATION	2.578843733607931E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999974211562663	WITHOUT_CLASSIFICATION	2.578843733607931E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999974211562663	WITHOUT_CLASSIFICATION	2.578843733607931E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999974211562663	WITHOUT_CLASSIFICATION	2.578843733607931E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999974211562663	WITHOUT_CLASSIFICATION	2.578843733607931E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999974211562663	WITHOUT_CLASSIFICATION	2.578843733607931E-6	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999874892379199	WITHOUT_CLASSIFICATION	1.2510762079941252E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999874892379199	WITHOUT_CLASSIFICATION	1.2510762079941252E-5	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999874892379199	WITHOUT_CLASSIFICATION	1.2510762079941252E-5	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999970472083183	WITHOUT_CLASSIFICATION	2.9527916817480014E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999851908403494	WITHOUT_CLASSIFICATION	1.4809159650539513E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999851908403494	WITHOUT_CLASSIFICATION	1.4809159650539513E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999851908403494	WITHOUT_CLASSIFICATION	1.4809159650539513E-5	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999999154802818	WITHOUT_CLASSIFICATION	8.451971819099118E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999999154802818	WITHOUT_CLASSIFICATION	8.451971819099118E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999999154802818	WITHOUT_CLASSIFICATION	8.451971819099118E-7	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999343234741754	WITHOUT_CLASSIFICATION	6.567652582450515E-5	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9999752474693521	WITHOUT_CLASSIFICATION	2.475253064790836E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999698356858409	WITHOUT_CLASSIFICATION	3.0164314159132656E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999667869065701	WITHOUT_CLASSIFICATION	3.3213093429894845E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999667869065701	WITHOUT_CLASSIFICATION	3.3213093429894845E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999667869065701	WITHOUT_CLASSIFICATION	3.3213093429894845E-5	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999946010158403	WITHOUT_CLASSIFICATION	5.398984159690938E-6	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999949644918111	WITHOUT_CLASSIFICATION	5.035508188859597E-6	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999949644918111	WITHOUT_CLASSIFICATION	5.035508188859597E-6	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999869672179755	WITHOUT_CLASSIFICATION	1.3032782024522855E-5	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9996790940105383	WITHOUT_CLASSIFICATION	3.2090598946160035E-4	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9996790940105383	WITHOUT_CLASSIFICATION	3.2090598946160035E-4	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.7561505762983507	IMPLEMENTATION	0.24384942370164925	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999995993569368	WITHOUT_CLASSIFICATION	4.0064306325055125E-7	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999549907821625	WITHOUT_CLASSIFICATION	4.500921783745615E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999741651003095	WITHOUT_CLASSIFICATION	2.5834899690578524E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999741651003095	WITHOUT_CLASSIFICATION	2.5834899690578524E-5	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999990756299335	WITHOUT_CLASSIFICATION	9.24370066637497E-7	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999970990265197	WITHOUT_CLASSIFICATION	2.900973480263714E-6	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9996057938252504	WITHOUT_CLASSIFICATION	3.9420617474964794E-4	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999963077877195	WITHOUT_CLASSIFICATION	3.6922122804511624E-6	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999940587565475	WITHOUT_CLASSIFICATION	5.941243452522818E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999741651003095	WITHOUT_CLASSIFICATION	2.5834899690578524E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999741651003095	WITHOUT_CLASSIFICATION	2.5834899690578524E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999741651003095	WITHOUT_CLASSIFICATION	2.5834899690578524E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999741651003095	WITHOUT_CLASSIFICATION	2.5834899690578524E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999741651003095	WITHOUT_CLASSIFICATION	2.5834899690578524E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999914931215294	WITHOUT_CLASSIFICATION	8.506878470648781E-6	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999841030827814	WITHOUT_CLASSIFICATION	1.5896917218560115E-5	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999993335982772	WITHOUT_CLASSIFICATION	6.664017228024972E-7	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999721445647229	WITHOUT_CLASSIFICATION	2.7855435277148676E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999999990886793	WITHOUT_CLASSIFICATION	9.113207230959412E-10	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999855271119347	WITHOUT_CLASSIFICATION	1.4472888065362983E-5	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999988321676769	WITHOUT_CLASSIFICATION	1.1678323231101961E-6	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999744916277976	WITHOUT_CLASSIFICATION	2.5508372202463366E-5	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999283048371	WITHOUT_CLASSIFICATION	7.169516287349927E-8	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999836549517677	WITHOUT_CLASSIFICATION	1.6345048232324073E-5	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999978425471727	WITHOUT_CLASSIFICATION	2.15745282730292E-6	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9997203817292436	WITHOUT_CLASSIFICATION	2.7961827075637623E-4	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999962789981021	WITHOUT_CLASSIFICATION	3.7210018977914634E-6	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999894696354243	WITHOUT_CLASSIFICATION	1.0530364575627274E-5	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999993331650595	WITHOUT_CLASSIFICATION	6.668349405469029E-7	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9999983205788715	WITHOUT_CLASSIFICATION	1.6794211285297928E-6	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9998900156446351	WITHOUT_CLASSIFICATION	1.0998435536488892E-4	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999993921985474	WITHOUT_CLASSIFICATION	6.078014526177945E-7	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999989327685023	WITHOUT_CLASSIFICATION	1.0672314977334659E-6	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.999979251698217	WITHOUT_CLASSIFICATION	2.0748301782952996E-5	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999993381944478	WITHOUT_CLASSIFICATION	6.618055521775576E-7	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999884127494197	WITHOUT_CLASSIFICATION	1.15872505801957E-5	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999998424580119	WITHOUT_CLASSIFICATION	1.575419881234214E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999969314492317	WITHOUT_CLASSIFICATION	3.068550768145014E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999969314492317	WITHOUT_CLASSIFICATION	3.068550768145014E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999969314492317	WITHOUT_CLASSIFICATION	3.068550768145014E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999969314492317	WITHOUT_CLASSIFICATION	3.068550768145014E-6	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999993901237093	WITHOUT_CLASSIFICATION	6.098762907639103E-7	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.999978208784076	WITHOUT_CLASSIFICATION	2.1791215924077763E-5	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999989912297685	WITHOUT_CLASSIFICATION	1.0087702314088688E-6	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999989912297685	WITHOUT_CLASSIFICATION	1.0087702314088688E-6	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999967186180674	WITHOUT_CLASSIFICATION	3.2813819326080677E-6	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999941326921571	WITHOUT_CLASSIFICATION	5.867307842912961E-6	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999935694822876	WITHOUT_CLASSIFICATION	6.430517712510177E-6	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999988914887082	WITHOUT_CLASSIFICATION	1.1085112918012058E-5	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999997630999682	WITHOUT_CLASSIFICATION	2.3690003175437164E-7	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999977005716132	WITHOUT_CLASSIFICATION	2.299428386857313E-6	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999916225575078	WITHOUT_CLASSIFICATION	8.377442492071828E-6	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999898342120718	WITHOUT_CLASSIFICATION	1.0165787928221319E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999898342120718	WITHOUT_CLASSIFICATION	1.0165787928221319E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999898342120718	WITHOUT_CLASSIFICATION	1.0165787928221319E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999898342120718	WITHOUT_CLASSIFICATION	1.0165787928221319E-5	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9998548638170397	WITHOUT_CLASSIFICATION	1.4513618296042809E-4	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999587605607	WITHOUT_CLASSIFICATION	4.123943942958239E-8	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999587605607	WITHOUT_CLASSIFICATION	4.123943942958239E-8	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999587605607	WITHOUT_CLASSIFICATION	4.123943942958239E-8	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999983912183844	WITHOUT_CLASSIFICATION	1.6087816156146118E-6	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999420077204547	WITHOUT_CLASSIFICATION	5.7992279545163245E-5	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999764209427385	WITHOUT_CLASSIFICATION	2.357905726150433E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5327687869717694	WITHOUT_CLASSIFICATION	0.46723121302823056	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5327687869717694	WITHOUT_CLASSIFICATION	0.46723121302823056	IMPLEMENTATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999145952227	WITHOUT_CLASSIFICATION	8.540477725306151E-8	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999998003690667	WITHOUT_CLASSIFICATION	1.9963093324302703E-7	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999786211463655	WITHOUT_CLASSIFICATION	2.1378853634468976E-5	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999786211463655	WITHOUT_CLASSIFICATION	2.1378853634468976E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999837522719971	WITHOUT_CLASSIFICATION	1.624772800281959E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999837522719971	WITHOUT_CLASSIFICATION	1.624772800281959E-5	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999993830764334	WITHOUT_CLASSIFICATION	6.169235665300787E-7	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9996710935204621	WITHOUT_CLASSIFICATION	3.2890647953778905E-4	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999944845813632	WITHOUT_CLASSIFICATION	5.515418636765131E-6	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999181340659821	WITHOUT_CLASSIFICATION	8.186593401792994E-5	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999070768339414	WITHOUT_CLASSIFICATION	9.292316605858036E-5	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999967356178433	WITHOUT_CLASSIFICATION	3.264382156696775E-6	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999890033169689	WITHOUT_CLASSIFICATION	1.0996683031031392E-5	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999921160186092	WITHOUT_CLASSIFICATION	7.883981390877388E-6	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999992541283456	WITHOUT_CLASSIFICATION	7.458716545581039E-7	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999993820529157	WITHOUT_CLASSIFICATION	6.179470843545375E-7	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999993820529157	WITHOUT_CLASSIFICATION	6.179470843545375E-7	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.999978720199467	WITHOUT_CLASSIFICATION	2.127980053300799E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.999978720199467	WITHOUT_CLASSIFICATION	2.127980053300799E-5	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999971985483337	WITHOUT_CLASSIFICATION	2.801451666303911E-6	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999960525972321	WITHOUT_CLASSIFICATION	3.947402767835025E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999181100322596	WITHOUT_CLASSIFICATION	8.188996774031383E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999523936302569	WITHOUT_CLASSIFICATION	4.760636974297196E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999523936302569	WITHOUT_CLASSIFICATION	4.760636974297196E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999523936302569	WITHOUT_CLASSIFICATION	4.760636974297196E-5	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9999869180511811	WITHOUT_CLASSIFICATION	1.3081948818864273E-5	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9999856986670987	WITHOUT_CLASSIFICATION	1.4301332901312694E-5	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9999884187456641	WITHOUT_CLASSIFICATION	1.1581254335785435E-5	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9999882745119497	WITHOUT_CLASSIFICATION	1.1725488050305717E-5	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9999869893490199	WITHOUT_CLASSIFICATION	1.3010650980212836E-5	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999868656049167	WITHOUT_CLASSIFICATION	1.3134395083362191E-5	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9999875064456963	WITHOUT_CLASSIFICATION	1.2493554303590975E-5	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9999888243420588	WITHOUT_CLASSIFICATION	1.1175657941198826E-5	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999995667530778	WITHOUT_CLASSIFICATION	4.3324692235240445E-7	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.999997638192139	WITHOUT_CLASSIFICATION	2.361807860847701E-6	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999371930510493	WITHOUT_CLASSIFICATION	6.280694895071779E-5	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999961574539074	WITHOUT_CLASSIFICATION	3.842546092632691E-6	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999863007702892	WITHOUT_CLASSIFICATION	1.3699229710840864E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5327687869717694	WITHOUT_CLASSIFICATION	0.46723121302823056	IMPLEMENTATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999977622952021	WITHOUT_CLASSIFICATION	2.2377047979634052E-6	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999489085968094	WITHOUT_CLASSIFICATION	5.1091403190535554E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999856928676699	WITHOUT_CLASSIFICATION	1.4307132330189406E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.999754185975398	WITHOUT_CLASSIFICATION	2.458140246019504E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.999754185975398	WITHOUT_CLASSIFICATION	2.458140246019504E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.999754185975398	WITHOUT_CLASSIFICATION	2.458140246019504E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.999754185975398	WITHOUT_CLASSIFICATION	2.458140246019504E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.999754185975398	WITHOUT_CLASSIFICATION	2.458140246019504E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9998721173353105	WITHOUT_CLASSIFICATION	1.278826646895216E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.999754185975398	WITHOUT_CLASSIFICATION	2.458140246019504E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.999754185975398	WITHOUT_CLASSIFICATION	2.458140246019504E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.999754185975398	WITHOUT_CLASSIFICATION	2.458140246019504E-4	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999996795855463	WITHOUT_CLASSIFICATION	3.204144538394852E-7	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999918706122324	WITHOUT_CLASSIFICATION	8.129387767549857E-6	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999998090878883	WITHOUT_CLASSIFICATION	1.9091211171305871E-7	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999952764522403	WITHOUT_CLASSIFICATION	4.723547759739626E-6	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999922860935385	WITHOUT_CLASSIFICATION	7.713906461542312E-6	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999997960809276	WITHOUT_CLASSIFICATION	2.0391907231299046E-7	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999989374317751	WITHOUT_CLASSIFICATION	1.0625682248277589E-6	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9999858510744988	WITHOUT_CLASSIFICATION	1.4148925501147563E-5	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999888409344692	WITHOUT_CLASSIFICATION	1.1159065530725748E-5	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999888409344692	WITHOUT_CLASSIFICATION	1.1159065530725748E-5	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9999861959367254	WITHOUT_CLASSIFICATION	1.38040632745084E-5	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9999863075974056	WITHOUT_CLASSIFICATION	1.3692402594379745E-5	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999878961378555	WITHOUT_CLASSIFICATION	1.2103862144435254E-5	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.999987384352927	WITHOUT_CLASSIFICATION	1.2615647072852206E-5	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999874903513616	WITHOUT_CLASSIFICATION	1.2509648638458417E-5	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9999856343205559	WITHOUT_CLASSIFICATION	1.4365679444147887E-5	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9999858149985534	WITHOUT_CLASSIFICATION	1.4185001446665071E-5	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.999985610353401	WITHOUT_CLASSIFICATION	1.4389646598887113E-5	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999863530320083	WITHOUT_CLASSIFICATION	1.3646967991671044E-5	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9999879610374198	WITHOUT_CLASSIFICATION	1.2038962580187913E-5	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9999884791067143	WITHOUT_CLASSIFICATION	1.1520893285671846E-5	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9999866274431335	WITHOUT_CLASSIFICATION	1.3372556866517381E-5	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999877730120807	WITHOUT_CLASSIFICATION	1.2226987919134964E-5	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999862813041764	WITHOUT_CLASSIFICATION	1.371869582352231E-5	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9999866495485845	WITHOUT_CLASSIFICATION	1.3350451415476428E-5	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9999863856223304	WITHOUT_CLASSIFICATION	1.361437766949518E-5	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999865049164419	WITHOUT_CLASSIFICATION	1.3495083558150777E-5	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9999884130478633	WITHOUT_CLASSIFICATION	1.1586952136604662E-5	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9999871896331284	WITHOUT_CLASSIFICATION	1.2810366871568543E-5	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.999986894778932	WITHOUT_CLASSIFICATION	1.3105221067912281E-5	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9999877426625423	WITHOUT_CLASSIFICATION	1.2257337457662091E-5	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999867597104098	WITHOUT_CLASSIFICATION	1.324028959014818E-5	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9999882931561116	WITHOUT_CLASSIFICATION	1.170684388838494E-5	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9999903199190541	WITHOUT_CLASSIFICATION	9.680080945975866E-6	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9999899307157073	WITHOUT_CLASSIFICATION	1.0069284292769095E-5	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.999990806179751	WITHOUT_CLASSIFICATION	9.19382024893431E-6	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9999892035473179	WITHOUT_CLASSIFICATION	1.0796452682120672E-5	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9999897509206463	WITHOUT_CLASSIFICATION	1.0249079353642382E-5	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.999989719243952	WITHOUT_CLASSIFICATION	1.0280756048088316E-5	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.999989938938107	WITHOUT_CLASSIFICATION	1.0061061892972554E-5	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.999989402304	WITHOUT_CLASSIFICATION	1.0597695999926651E-5	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.999989499222157	WITHOUT_CLASSIFICATION	1.0500777842981052E-5	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9999886018286476	WITHOUT_CLASSIFICATION	1.1398171352348628E-5	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.999988773838829	WITHOUT_CLASSIFICATION	1.122616117095209E-5	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9999901394131161	WITHOUT_CLASSIFICATION	9.860586883950331E-6	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999902660600579	WITHOUT_CLASSIFICATION	9.73393994205734E-6	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9999891449973524	WITHOUT_CLASSIFICATION	1.0855002647624884E-5	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.999988739776379	WITHOUT_CLASSIFICATION	1.1260223621011295E-5	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.9999886240607709	WITHOUT_CLASSIFICATION	1.1375939229149149E-5	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9999898241662621	WITHOUT_CLASSIFICATION	1.0175833737837292E-5	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9999897911701611	WITHOUT_CLASSIFICATION	1.0208829838840449E-5	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999906574504903	WITHOUT_CLASSIFICATION	9.342549509654664E-6	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9999893115040797	WITHOUT_CLASSIFICATION	1.0688495920281093E-5	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9999892198546545	WITHOUT_CLASSIFICATION	1.0780145345462316E-5	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9999894193604207	WITHOUT_CLASSIFICATION	1.0580639579161248E-5	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999883758414695	WITHOUT_CLASSIFICATION	1.1624158530549196E-5	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.999987655767732	WITHOUT_CLASSIFICATION	1.2344232268105122E-5	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9999889989940643	WITHOUT_CLASSIFICATION	1.100100593576862E-5	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9999889462338676	WITHOUT_CLASSIFICATION	1.1053766132367495E-5	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999891433462128	WITHOUT_CLASSIFICATION	1.0856653787207644E-5	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9999894489093409	WITHOUT_CLASSIFICATION	1.0551090658986197E-5	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9999881398503234	WITHOUT_CLASSIFICATION	1.186014967651816E-5	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.9999886021498908	WITHOUT_CLASSIFICATION	1.1397850109197012E-5	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999901200335303	WITHOUT_CLASSIFICATION	9.879966469768983E-6	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999901200335303	WITHOUT_CLASSIFICATION	9.879966469768983E-6	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999882125459052	WITHOUT_CLASSIFICATION	1.178745409469199E-5	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9999898449006667	WITHOUT_CLASSIFICATION	1.0155099333402721E-5	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9999890322189794	WITHOUT_CLASSIFICATION	1.0967781020595999E-5	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.999988575181646	WITHOUT_CLASSIFICATION	1.1424818354052364E-5	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9999885437098817	WITHOUT_CLASSIFICATION	1.1456290118244488E-5	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999892107686265	WITHOUT_CLASSIFICATION	1.0789231373595257E-5	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999880140495822	WITHOUT_CLASSIFICATION	1.198595041791085E-5	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9999878043811293	WITHOUT_CLASSIFICATION	1.2195618870811608E-5	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999886304829546	WITHOUT_CLASSIFICATION	1.136951704532211E-5	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9999881829673559	WITHOUT_CLASSIFICATION	1.1817032644051862E-5	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9998384452973513	WITHOUT_CLASSIFICATION	1.6155470264862112E-4	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9998384452973513	WITHOUT_CLASSIFICATION	1.6155470264862112E-4	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999655018150175	WITHOUT_CLASSIFICATION	3.4498184982476786E-5	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999817052781084	WITHOUT_CLASSIFICATION	1.829472189159226E-5	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999939429050579	WITHOUT_CLASSIFICATION	6.057094941993916E-6	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999226778118	WITHOUT_CLASSIFICATION	7.732218815734547E-8	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999970937042167	WITHOUT_CLASSIFICATION	2.906295783289697E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999970937042167	WITHOUT_CLASSIFICATION	2.906295783289697E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999970937042167	WITHOUT_CLASSIFICATION	2.906295783289697E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999970937042167	WITHOUT_CLASSIFICATION	2.906295783289697E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999996234295067	WITHOUT_CLASSIFICATION	3.7657049333295444E-7	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999857216503569	WITHOUT_CLASSIFICATION	1.4278349642990855E-5	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9999891806577704	WITHOUT_CLASSIFICATION	1.0819342229602497E-5	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9999878627750044	WITHOUT_CLASSIFICATION	1.2137224995658204E-5	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.9999890175257311	WITHOUT_CLASSIFICATION	1.098247426890531E-5	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9999889463325733	WITHOUT_CLASSIFICATION	1.1053667426651565E-5	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9999877436898157	WITHOUT_CLASSIFICATION	1.2256310184232955E-5	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.999986558426813	WITHOUT_CLASSIFICATION	1.3441573186971454E-5	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9999876771914553	WITHOUT_CLASSIFICATION	1.2322808544590449E-5	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.999987655565598	WITHOUT_CLASSIFICATION	1.23444344019736E-5	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9999860361865608	WITHOUT_CLASSIFICATION	1.3963813439193069E-5	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9999865030144215	WITHOUT_CLASSIFICATION	1.3496985578597238E-5	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9999878834507706	WITHOUT_CLASSIFICATION	1.2116549229261142E-5	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9999873492018462	WITHOUT_CLASSIFICATION	1.2650798153795603E-5	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9999865398708596	WITHOUT_CLASSIFICATION	1.3460129140383081E-5	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9999881891900217	WITHOUT_CLASSIFICATION	1.1810809978115934E-5	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9999856784643423	WITHOUT_CLASSIFICATION	1.4321535657608856E-5	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9999882186448764	WITHOUT_CLASSIFICATION	1.1781355123628229E-5	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9999879771014236	WITHOUT_CLASSIFICATION	1.202289857625579E-5	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.999986249322931	WITHOUT_CLASSIFICATION	1.3750677069055744E-5	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9999866380158262	WITHOUT_CLASSIFICATION	1.3361984173696996E-5	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9999876196349209	WITHOUT_CLASSIFICATION	1.2380365079195089E-5	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9999867152839115	WITHOUT_CLASSIFICATION	1.3284716088476612E-5	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9999864175623789	WITHOUT_CLASSIFICATION	1.3582437621115647E-5	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9999872626733963	WITHOUT_CLASSIFICATION	1.2737326603680507E-5	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9999896326953245	WITHOUT_CLASSIFICATION	1.0367304675423876E-5	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9999899388702419	WITHOUT_CLASSIFICATION	1.006112975796666E-5	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9999900743960465	WITHOUT_CLASSIFICATION	9.925603953434058E-6	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9999901167895481	WITHOUT_CLASSIFICATION	9.883210451922042E-6	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9999893551793442	WITHOUT_CLASSIFICATION	1.0644820655742699E-5	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9999886863071534	WITHOUT_CLASSIFICATION	1.1313692846520797E-5	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9999894347494335	WITHOUT_CLASSIFICATION	1.0565250566491092E-5	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9999893325489893	WITHOUT_CLASSIFICATION	1.0667451010768557E-5	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.99998813023451	WITHOUT_CLASSIFICATION	1.1869765489836474E-5	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9999887234373669	WITHOUT_CLASSIFICATION	1.1276562633073449E-5	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9999903076939131	WITHOUT_CLASSIFICATION	9.692306086896832E-6	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9999895408961336	WITHOUT_CLASSIFICATION	1.0459103866494138E-5	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9999892372231428	WITHOUT_CLASSIFICATION	1.0762776857320793E-5	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9999894128053366	WITHOUT_CLASSIFICATION	1.058719466350325E-5	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9999892117232136	WITHOUT_CLASSIFICATION	1.0788276786402121E-5	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.9999899129802885	WITHOUT_CLASSIFICATION	1.0087019711426608E-5	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9999895982139847	WITHOUT_CLASSIFICATION	1.0401786015354738E-5	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9999877954593568	WITHOUT_CLASSIFICATION	1.2204540643091907E-5	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9999891748535441	WITHOUT_CLASSIFICATION	1.0825146455904516E-5	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9999883469969527	WITHOUT_CLASSIFICATION	1.1653003047350185E-5	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9999885050454721	WITHOUT_CLASSIFICATION	1.1494954527999777E-5	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9999894436058776	WITHOUT_CLASSIFICATION	1.0556394122310075E-5	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9999886630127925	WITHOUT_CLASSIFICATION	1.1336987207459575E-5	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.999988543763614	WITHOUT_CLASSIFICATION	1.1456236386021306E-5	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9999888262192668	WITHOUT_CLASSIFICATION	1.1173780733247193E-5	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9999883331326939	WITHOUT_CLASSIFICATION	1.1666867306204997E-5	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9999884545460322	WITHOUT_CLASSIFICATION	1.1545453967758955E-5	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9999891235956333	WITHOUT_CLASSIFICATION	1.0876404366750933E-5	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.999989405818806	WITHOUT_CLASSIFICATION	1.0594181193872891E-5	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9999885702612441	WITHOUT_CLASSIFICATION	1.1429738755893472E-5	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9999887188379996	WITHOUT_CLASSIFICATION	1.1281162000364311E-5	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9999894906658838	WITHOUT_CLASSIFICATION	1.0509334116235186E-5	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9999891737383837	WITHOUT_CLASSIFICATION	1.0826261616264157E-5	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9999897719379699	WITHOUT_CLASSIFICATION	1.0228062030116333E-5	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.999981326293088	WITHOUT_CLASSIFICATION	1.867370691198751E-5	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999990570016353	WITHOUT_CLASSIFICATION	9.429983648392307E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999904678333924	WITHOUT_CLASSIFICATION	9.532166607647276E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999904678333924	WITHOUT_CLASSIFICATION	9.532166607647276E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999904678333924	WITHOUT_CLASSIFICATION	9.532166607647276E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999904678333924	WITHOUT_CLASSIFICATION	9.532166607647276E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999904678333924	WITHOUT_CLASSIFICATION	9.532166607647276E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999904678333924	WITHOUT_CLASSIFICATION	9.532166607647276E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999904678333924	WITHOUT_CLASSIFICATION	9.532166607647276E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999781460490531	WITHOUT_CLASSIFICATION	2.1853950946853166E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999781460490531	WITHOUT_CLASSIFICATION	2.1853950946853166E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999781460490531	WITHOUT_CLASSIFICATION	2.1853950946853166E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999781460490531	WITHOUT_CLASSIFICATION	2.1853950946853166E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999784857621781	WITHOUT_CLASSIFICATION	2.1514237821945714E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999784857621781	WITHOUT_CLASSIFICATION	2.1514237821945714E-5	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999999992075228	WITHOUT_CLASSIFICATION	7.924772076692262E-10	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999957422968736	WITHOUT_CLASSIFICATION	4.257703126484259E-6	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999957422968736	WITHOUT_CLASSIFICATION	4.257703126484259E-6	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999965175050485	WITHOUT_CLASSIFICATION	3.4824949514693292E-6	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999808621186796	WITHOUT_CLASSIFICATION	1.913788132038129E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999979966432877	WITHOUT_CLASSIFICATION	2.0033567121906445E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999979966432877	WITHOUT_CLASSIFICATION	2.0033567121906445E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999979966432877	WITHOUT_CLASSIFICATION	2.0033567121906445E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999979966432877	WITHOUT_CLASSIFICATION	2.0033567121906445E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999979966432877	WITHOUT_CLASSIFICATION	2.0033567121906445E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999979966432877	WITHOUT_CLASSIFICATION	2.0033567121906445E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999979966432877	WITHOUT_CLASSIFICATION	2.0033567121906445E-6	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999977511488405	WITHOUT_CLASSIFICATION	2.2488511594970247E-6	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999980871514644	WITHOUT_CLASSIFICATION	1.912848535660262E-6	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9998119501077989	WITHOUT_CLASSIFICATION	1.880498922011758E-4	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9998119501077989	WITHOUT_CLASSIFICATION	1.880498922011758E-4	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.99999580792255	WITHOUT_CLASSIFICATION	4.192077449977242E-6	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.99999419183049	WITHOUT_CLASSIFICATION	5.808169510023596E-6	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.99999419183049	WITHOUT_CLASSIFICATION	5.808169510023596E-6	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999999972417913	WITHOUT_CLASSIFICATION	2.7582085672446893E-9	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9999526171600566	WITHOUT_CLASSIFICATION	4.7382839943487547E-5	IMPLEMENTATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999986752975933	WITHOUT_CLASSIFICATION	1.3247024067251377E-6	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999998726788937	WITHOUT_CLASSIFICATION	1.2732110630253734E-7	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999989289174074	WITHOUT_CLASSIFICATION	1.0710825926849894E-6	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999978761805731	WITHOUT_CLASSIFICATION	2.1238194269086087E-6	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.99986217185859	WITHOUT_CLASSIFICATION	1.3782814140993874E-4	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999843976598002	WITHOUT_CLASSIFICATION	1.5602340199723814E-5	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999886914568474	WITHOUT_CLASSIFICATION	1.1308543152535017E-5	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9998149262822681	WITHOUT_CLASSIFICATION	1.850737177319492E-4	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999791462818427	WITHOUT_CLASSIFICATION	2.0853718157264436E-5	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999999823755986	WITHOUT_CLASSIFICATION	1.7624401393256256E-8	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.999999596855799	WITHOUT_CLASSIFICATION	4.0314420098549746E-7	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999974137232064	WITHOUT_CLASSIFICATION	2.5862767935693155E-6	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999987604465465	WITHOUT_CLASSIFICATION	1.239553453542646E-6	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999998579192043	WITHOUT_CLASSIFICATION	1.4208079560049367E-7	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.999995027473699	WITHOUT_CLASSIFICATION	4.9725263010594726E-6	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999975201361537	WITHOUT_CLASSIFICATION	2.479863846284959E-6	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9998990083844874	WITHOUT_CLASSIFICATION	1.0099161551261612E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9998990083844874	WITHOUT_CLASSIFICATION	1.0099161551261612E-4	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999701941188289	WITHOUT_CLASSIFICATION	2.9805881171058626E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999992423804521	WITHOUT_CLASSIFICATION	7.576195478253036E-7	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.999938651462105	WITHOUT_CLASSIFICATION	6.134853789505529E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9998522959776966	WITHOUT_CLASSIFICATION	1.477040223033574E-4	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999481148544762	WITHOUT_CLASSIFICATION	5.1885145523704275E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999481148544762	WITHOUT_CLASSIFICATION	5.1885145523704275E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999481148544762	WITHOUT_CLASSIFICATION	5.1885145523704275E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.999996953413558	WITHOUT_CLASSIFICATION	3.0465864420727863E-6	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999991562593711	WITHOUT_CLASSIFICATION	8.43740628899655E-7	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.99999972230811	WITHOUT_CLASSIFICATION	2.776918900391985E-7	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999997882183702	WITHOUT_CLASSIFICATION	2.1178162981917108E-7	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999972481080188	WITHOUT_CLASSIFICATION	2.7518919811207156E-6	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999997757380936	WITHOUT_CLASSIFICATION	2.2426190636421769E-7	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999992585964442	WITHOUT_CLASSIFICATION	7.414035557512039E-7	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999997836226441	WITHOUT_CLASSIFICATION	2.1637735605162385E-7	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999996065630972	WITHOUT_CLASSIFICATION	3.9343690286592564E-7	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999889081364021	WITHOUT_CLASSIFICATION	1.1091863597857005E-5	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9999955268041762	WITHOUT_CLASSIFICATION	4.473195823745397E-6	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999988937323046	WITHOUT_CLASSIFICATION	1.1062676954167808E-6	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.5240000459571884	WITHOUT_CLASSIFICATION	0.47599995404281153	IMPLEMENTATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999897829339867	WITHOUT_CLASSIFICATION	1.021706601330511E-5	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.999960545740997	WITHOUT_CLASSIFICATION	3.945425900298411E-5	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.999998969594706	WITHOUT_CLASSIFICATION	1.0304052939403918E-6	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999977745034074	WITHOUT_CLASSIFICATION	2.2254965925792634E-6	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999994183213587	WITHOUT_CLASSIFICATION	5.816786412706785E-7	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999359330232556	WITHOUT_CLASSIFICATION	6.406697674438823E-5	IMPLEMENTATION
