// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.5285253403640786	WITHOUT_CLASSIFICATION	0.4714746596359215	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.9759544339322576	IMPLEMENTATION	0.02404556606774248	WITHOUT_CLASSIFICATION
// TODO: Someday, enable.	IMPLEMENTATION	0.9636891927638039	IMPLEMENTATION	0.03631080723619603	WITHOUT_CLASSIFICATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.515702797426292	IMPLEMENTATION	0.48429720257370795	WITHOUT_CLASSIFICATION
// TODO: non-strict option	IMPLEMENTATION	0.9836830089326151	IMPLEMENTATION	0.016316991067384948	WITHOUT_CLASSIFICATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.9795097245800081	IMPLEMENTATION	0.020490275419991943	WITHOUT_CLASSIFICATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.8884732960903725	IMPLEMENTATION	0.11152670390962761	WITHOUT_CLASSIFICATION
// TODO: rescan code range ?	IMPLEMENTATION	0.9420564047502893	IMPLEMENTATION	0.057943595249710676	WITHOUT_CLASSIFICATION
// TODO: rescan code range ?	IMPLEMENTATION	0.9420564047502893	IMPLEMENTATION	0.057943595249710676	WITHOUT_CLASSIFICATION
// TODO: pass this in?	IMPLEMENTATION	0.9953416618761006	IMPLEMENTATION	0.004658338123899447	WITHOUT_CLASSIFICATION
// FIXME: Pass block down?	IMPLEMENTATION	0.6208457856588325	WITHOUT_CLASSIFICATION	0.3791542143411675	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.998384432965265	IMPLEMENTATION	0.0016155670347349528	WITHOUT_CLASSIFICATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.7092589159880073	IMPLEMENTATION	0.2907410840119928	WITHOUT_CLASSIFICATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.8945067251472693	WITHOUT_CLASSIFICATION	0.1054932748527307	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.777121746829357	IMPLEMENTATION	0.22287825317064294	WITHOUT_CLASSIFICATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.7321167323982922	IMPLEMENTATION	0.2678832676017077	WITHOUT_CLASSIFICATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.5006638643556622	IMPLEMENTATION	0.4993361356443378	WITHOUT_CLASSIFICATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.9691737301326346	IMPLEMENTATION	0.030826269867365322	WITHOUT_CLASSIFICATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.9503507462715735	WITHOUT_CLASSIFICATION	0.04964925372842653	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.8868906904303354	WITHOUT_CLASSIFICATION	0.11310930956966458	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.8237741776893278	IMPLEMENTATION	0.17622582231067213	WITHOUT_CLASSIFICATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.5550038964566771	IMPLEMENTATION	0.4449961035433229	WITHOUT_CLASSIFICATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.969854025961543	IMPLEMENTATION	0.030145974038456955	WITHOUT_CLASSIFICATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.8749180293315967	IMPLEMENTATION	0.12508197066840332	WITHOUT_CLASSIFICATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.9985350409707849	IMPLEMENTATION	0.0014649590292150026	WITHOUT_CLASSIFICATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.9887838820146007	IMPLEMENTATION	0.011216117985399244	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.999958496532482	IMPLEMENTATION	4.1503467518076274E-5	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9999138979350749	IMPLEMENTATION	8.610206492507307E-5	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.999958496532482	IMPLEMENTATION	4.1503467518076274E-5	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9999138979350749	IMPLEMENTATION	8.610206492507307E-5	WITHOUT_CLASSIFICATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.9999329835049112	IMPLEMENTATION	6.701649508878438E-5	WITHOUT_CLASSIFICATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.6053855424931135	WITHOUT_CLASSIFICATION	0.39461445750688656	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.9995402326931988	IMPLEMENTATION	4.5976730680123733E-4	WITHOUT_CLASSIFICATION
// TODO: make threadsafe	IMPLEMENTATION	0.999722184148717	IMPLEMENTATION	2.7781585128296886E-4	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9880494302845856	IMPLEMENTATION	0.011950569715414422	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9880494302845856	IMPLEMENTATION	0.011950569715414422	WITHOUT_CLASSIFICATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.994839870652123	WITHOUT_CLASSIFICATION	0.0051601293478769706	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.960395415214761	IMPLEMENTATION	0.03960458478523896	WITHOUT_CLASSIFICATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.9973516157969268	IMPLEMENTATION	0.00264838420307316	WITHOUT_CLASSIFICATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.9458030782547578	IMPLEMENTATION	0.05419692174524224	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9831173614039752	IMPLEMENTATION	0.016882638596024808	WITHOUT_CLASSIFICATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.9650517846297768	IMPLEMENTATION	0.034948215370223176	WITHOUT_CLASSIFICATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.8726830646611967	IMPLEMENTATION	0.1273169353388034	WITHOUT_CLASSIFICATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.9955996048727515	WITHOUT_CLASSIFICATION	0.004400395127248557	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.64831539281946	IMPLEMENTATION	0.35168460718053984	WITHOUT_CLASSIFICATION
// TODO: add trace call?	IMPLEMENTATION	0.9897590671276177	IMPLEMENTATION	0.010240932872382352	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9261751651849113	WITHOUT_CLASSIFICATION	0.07382483481508863	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.9376179900114917	WITHOUT_CLASSIFICATION	0.062382009988508305	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.7044362819114716	WITHOUT_CLASSIFICATION	0.2955637180885284	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.9667477719372947	IMPLEMENTATION	0.033252228062705357	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9261751651849113	WITHOUT_CLASSIFICATION	0.07382483481508863	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.998561083090287	WITHOUT_CLASSIFICATION	0.0014389169097129956	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.7833446179611249	IMPLEMENTATION	0.2166553820388752	WITHOUT_CLASSIFICATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.8940010652748358	IMPLEMENTATION	0.10599893472516411	WITHOUT_CLASSIFICATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.9121821742577431	IMPLEMENTATION	0.08781782574225694	WITHOUT_CLASSIFICATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.7767237156468274	WITHOUT_CLASSIFICATION	0.2232762843531725	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.5911822502164017	WITHOUT_CLASSIFICATION	0.4088177497835982	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.9962506136417059	WITHOUT_CLASSIFICATION	0.003749386358294188	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.961796663273326	WITHOUT_CLASSIFICATION	0.0382033367266739	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9998066056541934	WITHOUT_CLASSIFICATION	1.9339434580658625E-4	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.992558925729873	WITHOUT_CLASSIFICATION	0.00744107427012696	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9989806858151659	IMPLEMENTATION	0.001019314184834185	WITHOUT_CLASSIFICATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9989806858151659	IMPLEMENTATION	0.001019314184834185	WITHOUT_CLASSIFICATION
// TODO: validate port as numeric	IMPLEMENTATION	0.9835805224493648	IMPLEMENTATION	0.016419477550635244	WITHOUT_CLASSIFICATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9999969471671974	IMPLEMENTATION	3.0528328026567648E-6	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.9812911173818071	IMPLEMENTATION	0.018708882618192955	WITHOUT_CLASSIFICATION
// TODO: deal with varargs	IMPLEMENTATION	0.8767450294231127	IMPLEMENTATION	0.12325497057688727	WITHOUT_CLASSIFICATION
// TODO: deal with varargs	IMPLEMENTATION	0.8767450294231127	IMPLEMENTATION	0.12325497057688727	WITHOUT_CLASSIFICATION
// TODO: other reserved names?	IMPLEMENTATION	0.9866016820525848	IMPLEMENTATION	0.013398317947415177	WITHOUT_CLASSIFICATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.969595308412478	IMPLEMENTATION	0.030404691587522018	WITHOUT_CLASSIFICATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.9915113292790885	IMPLEMENTATION	0.008488670720911511	WITHOUT_CLASSIFICATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.90456480719521	WITHOUT_CLASSIFICATION	0.09543519280479001	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.5128607334102663	IMPLEMENTATION	0.4871392665897339	WITHOUT_CLASSIFICATION
// TODO: call ruby method	IMPLEMENTATION	0.5128607334102663	IMPLEMENTATION	0.4871392665897339	WITHOUT_CLASSIFICATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.9960939844507632	IMPLEMENTATION	0.003906015549236735	WITHOUT_CLASSIFICATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9333153181162118	IMPLEMENTATION	0.06668468188378811	WITHOUT_CLASSIFICATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9999588329971729	WITHOUT_CLASSIFICATION	4.116700282702834E-5	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.999932329599919	IMPLEMENTATION	6.767040008110209E-5	WITHOUT_CLASSIFICATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.9425045749146455	IMPLEMENTATION	0.05749542508535466	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.9926059569200703	IMPLEMENTATION	0.0073940430799297385	WITHOUT_CLASSIFICATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.9972990664163864	IMPLEMENTATION	0.002700933583613576	WITHOUT_CLASSIFICATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.9606675397757186	WITHOUT_CLASSIFICATION	0.039332460224281336	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9337990993421079	WITHOUT_CLASSIFICATION	0.0662009006578922	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9337990993421079	WITHOUT_CLASSIFICATION	0.0662009006578922	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.554525588447573	WITHOUT_CLASSIFICATION	0.445474411552427	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.786978662142789	IMPLEMENTATION	0.213021337857211	WITHOUT_CLASSIFICATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9984177538918192	WITHOUT_CLASSIFICATION	0.001582246108180772	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9984177538918192	WITHOUT_CLASSIFICATION	0.001582246108180772	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.9699006345528869	IMPLEMENTATION	0.030099365447113023	WITHOUT_CLASSIFICATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.6815864368845903	IMPLEMENTATION	0.31841356311540964	WITHOUT_CLASSIFICATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.6815864368845903	IMPLEMENTATION	0.31841356311540964	WITHOUT_CLASSIFICATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.6815864368845903	IMPLEMENTATION	0.31841356311540964	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.9329407510240454	IMPLEMENTATION	0.0670592489759546	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.9329407510240454	IMPLEMENTATION	0.0670592489759546	WITHOUT_CLASSIFICATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.9971298967273668	IMPLEMENTATION	0.0028701032726331423	WITHOUT_CLASSIFICATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9895229095661163	WITHOUT_CLASSIFICATION	0.01047709043388363	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.917756827701827	IMPLEMENTATION	0.0822431722981731	WITHOUT_CLASSIFICATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9999493511600386	IMPLEMENTATION	5.064883996148058E-5	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9998503940738493	IMPLEMENTATION	1.4960592615070957E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9998503940738493	IMPLEMENTATION	1.4960592615070957E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9998503940738493	IMPLEMENTATION	1.4960592615070957E-4	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9831173614039752	IMPLEMENTATION	0.016882638596024808	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9831173614039752	IMPLEMENTATION	0.016882638596024808	WITHOUT_CLASSIFICATION
// TODO: check for ascii string	IMPLEMENTATION	0.7316941323174836	IMPLEMENTATION	0.2683058676825164	WITHOUT_CLASSIFICATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.9988310137868825	IMPLEMENTATION	0.0011689862131173934	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9880494302845856	IMPLEMENTATION	0.011950569715414422	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9880494302845856	IMPLEMENTATION	0.011950569715414422	WITHOUT_CLASSIFICATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.9627605168493404	IMPLEMENTATION	0.03723948315065967	WITHOUT_CLASSIFICATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.5353609799702259	IMPLEMENTATION	0.4646390200297742	WITHOUT_CLASSIFICATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.7321167323982922	IMPLEMENTATION	0.2678832676017077	WITHOUT_CLASSIFICATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.999460033534026	WITHOUT_CLASSIFICATION	5.399664659740674E-4	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.999779527142366	IMPLEMENTATION	2.2047285763405436E-4	WITHOUT_CLASSIFICATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.9586096650852658	IMPLEMENTATION	0.04139033491473434	WITHOUT_CLASSIFICATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.9865870154120654	WITHOUT_CLASSIFICATION	0.013412984587934575	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999122019131171	WITHOUT_CLASSIFICATION	8.779808688286126E-5	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9999965803992735	WITHOUT_CLASSIFICATION	3.419600726559302E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999946394695859	WITHOUT_CLASSIFICATION	5.36053041409513E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999946394695859	WITHOUT_CLASSIFICATION	5.36053041409513E-6	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999735517785521	WITHOUT_CLASSIFICATION	2.6448221448020208E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999735517785521	WITHOUT_CLASSIFICATION	2.6448221448020208E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999617198717086	WITHOUT_CLASSIFICATION	3.82801282913432E-5	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999999757278747	WITHOUT_CLASSIFICATION	2.4272125317092886E-8	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9999969564906123	WITHOUT_CLASSIFICATION	3.0435093876702076E-6	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999968994981794	WITHOUT_CLASSIFICATION	3.1005018205906763E-6	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999787884959767	WITHOUT_CLASSIFICATION	2.121150402333252E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999787884959767	WITHOUT_CLASSIFICATION	2.121150402333252E-5	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9999966562133604	WITHOUT_CLASSIFICATION	3.3437866394776508E-6	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999633209819633	WITHOUT_CLASSIFICATION	3.667901803670951E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999633209819633	WITHOUT_CLASSIFICATION	3.667901803670951E-5	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9999909433308419	WITHOUT_CLASSIFICATION	9.056669158083727E-6	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999969637299345	WITHOUT_CLASSIFICATION	3.036270065341244E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999937295321291	WITHOUT_CLASSIFICATION	6.270467870849527E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999937295321291	WITHOUT_CLASSIFICATION	6.270467870849527E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999937295321291	WITHOUT_CLASSIFICATION	6.270467870849527E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999937295321291	WITHOUT_CLASSIFICATION	6.270467870849527E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999937295321291	WITHOUT_CLASSIFICATION	6.270467870849527E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999937295321291	WITHOUT_CLASSIFICATION	6.270467870849527E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999937295321291	WITHOUT_CLASSIFICATION	6.270467870849527E-6	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999643345794118	WITHOUT_CLASSIFICATION	3.5665420588207475E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999643345794118	WITHOUT_CLASSIFICATION	3.5665420588207475E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999643345794118	WITHOUT_CLASSIFICATION	3.5665420588207475E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999643345794118	WITHOUT_CLASSIFICATION	3.5665420588207475E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999643345794118	WITHOUT_CLASSIFICATION	3.5665420588207475E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999643345794118	WITHOUT_CLASSIFICATION	3.5665420588207475E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999643345794118	WITHOUT_CLASSIFICATION	3.5665420588207475E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999554596645298	WITHOUT_CLASSIFICATION	4.454033547031864E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999554596645298	WITHOUT_CLASSIFICATION	4.454033547031864E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999554596645298	WITHOUT_CLASSIFICATION	4.454033547031864E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999554596645298	WITHOUT_CLASSIFICATION	4.454033547031864E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999554596645298	WITHOUT_CLASSIFICATION	4.454033547031864E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999554596645298	WITHOUT_CLASSIFICATION	4.454033547031864E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999713867585783	WITHOUT_CLASSIFICATION	2.861324142176407E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999713867585783	WITHOUT_CLASSIFICATION	2.861324142176407E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999713867585783	WITHOUT_CLASSIFICATION	2.861324142176407E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999713867585783	WITHOUT_CLASSIFICATION	2.861324142176407E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999713867585783	WITHOUT_CLASSIFICATION	2.861324142176407E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999713867585783	WITHOUT_CLASSIFICATION	2.861324142176407E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999505221349521	WITHOUT_CLASSIFICATION	4.947786504797366E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999505221349521	WITHOUT_CLASSIFICATION	4.947786504797366E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999505221349521	WITHOUT_CLASSIFICATION	4.947786504797366E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999505221349521	WITHOUT_CLASSIFICATION	4.947786504797366E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999505221349521	WITHOUT_CLASSIFICATION	4.947786504797366E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999505221349521	WITHOUT_CLASSIFICATION	4.947786504797366E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999505221349521	WITHOUT_CLASSIFICATION	4.947786504797366E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999973786192462	WITHOUT_CLASSIFICATION	2.6213807538041876E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999973786192462	WITHOUT_CLASSIFICATION	2.6213807538041876E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999973786192462	WITHOUT_CLASSIFICATION	2.6213807538041876E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999973786192462	WITHOUT_CLASSIFICATION	2.6213807538041876E-5	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999764898987713	WITHOUT_CLASSIFICATION	2.351010122866598E-5	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999764898987713	WITHOUT_CLASSIFICATION	2.351010122866598E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999777361519	WITHOUT_CLASSIFICATION	2.226384810279114E-7	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9999995087277297	WITHOUT_CLASSIFICATION	4.912722703913595E-7	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9999882572046767	WITHOUT_CLASSIFICATION	1.1742795323229003E-5	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999997279441434	WITHOUT_CLASSIFICATION	2.720558566683724E-7	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999997284780077	WITHOUT_CLASSIFICATION	2.715219924232537E-7	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999982120015074	WITHOUT_CLASSIFICATION	1.7879984926154996E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999982120015074	WITHOUT_CLASSIFICATION	1.7879984926154996E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999982120015074	WITHOUT_CLASSIFICATION	1.7879984926154996E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999982120015074	WITHOUT_CLASSIFICATION	1.7879984926154996E-6	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.999999151964724	WITHOUT_CLASSIFICATION	8.480352760898607E-7	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999997242041159	WITHOUT_CLASSIFICATION	2.7579588407187654E-7	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999989605904295	WITHOUT_CLASSIFICATION	1.0394095704631436E-6	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999948389663429	WITHOUT_CLASSIFICATION	5.161033657082313E-6	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9999983588349359	WITHOUT_CLASSIFICATION	1.6411650640540413E-6	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999986368575687	WITHOUT_CLASSIFICATION	1.3631424312335945E-6	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999998690669079	WITHOUT_CLASSIFICATION	1.3093309210863887E-7	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.999999951917187	WITHOUT_CLASSIFICATION	4.808281307148453E-8	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999127332543	WITHOUT_CLASSIFICATION	8.726674577266386E-8	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999983166766301	WITHOUT_CLASSIFICATION	1.6833233699489274E-6	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999993763925668	WITHOUT_CLASSIFICATION	6.236074332945709E-7	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999999672358441	WITHOUT_CLASSIFICATION	3.2764155964354145E-8	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999815405947852	WITHOUT_CLASSIFICATION	1.845940521482179E-5	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999998636678408	WITHOUT_CLASSIFICATION	1.3633215910452352E-7	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999993695519057	WITHOUT_CLASSIFICATION	6.304480941674997E-7	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999989945192485	WITHOUT_CLASSIFICATION	1.005480751476524E-6	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999905245985776	WITHOUT_CLASSIFICATION	9.475401422307463E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999982120015074	WITHOUT_CLASSIFICATION	1.7879984926154996E-6	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999996613537017	WITHOUT_CLASSIFICATION	3.3864629835386744E-7	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999999605194237	WITHOUT_CLASSIFICATION	3.9480576201514086E-8	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999997966116946	WITHOUT_CLASSIFICATION	2.0338830549986113E-7	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999167602914651	WITHOUT_CLASSIFICATION	8.323970853489424E-5	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999995750167504	WITHOUT_CLASSIFICATION	4.249832496430088E-7	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999985739869199	WITHOUT_CLASSIFICATION	1.4260130800554368E-6	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999987113448617	WITHOUT_CLASSIFICATION	1.2886551382341675E-6	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999537120977577	WITHOUT_CLASSIFICATION	4.62879022421649E-5	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999253214494427	WITHOUT_CLASSIFICATION	7.467855055727442E-5	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999996798629386	WITHOUT_CLASSIFICATION	3.201370614248058E-7	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999949815207076	WITHOUT_CLASSIFICATION	5.0184792923303184E-6	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999991476670512	WITHOUT_CLASSIFICATION	8.523329487575408E-7	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9998498034461657	WITHOUT_CLASSIFICATION	1.5019655383425904E-4	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999806366072933	WITHOUT_CLASSIFICATION	1.9363392706677192E-5	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999945581390906	WITHOUT_CLASSIFICATION	5.441860909472353E-6	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.999998315169497	WITHOUT_CLASSIFICATION	1.6848305030190825E-6	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9999991874912767	WITHOUT_CLASSIFICATION	8.125087232268642E-7	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999999318441432	WITHOUT_CLASSIFICATION	6.815585674817285E-8	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.999999944696324	WITHOUT_CLASSIFICATION	5.5303675827343106E-8	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999999709494815	WITHOUT_CLASSIFICATION	2.9050518542179402E-8	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999940705582538	WITHOUT_CLASSIFICATION	5.929441746102224E-6	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999973390122686	WITHOUT_CLASSIFICATION	2.660987731332342E-6	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999999680018422	WITHOUT_CLASSIFICATION	3.199815778555084E-8	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9999136500528686	WITHOUT_CLASSIFICATION	8.634994713134132E-5	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999946788320193	WITHOUT_CLASSIFICATION	5.32116798077354E-6	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9999991280740872	WITHOUT_CLASSIFICATION	8.719259129556229E-7	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999976671900039	WITHOUT_CLASSIFICATION	2.332809995960688E-6	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999997959299106	WITHOUT_CLASSIFICATION	2.040700893864219E-7	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999999831275873	WITHOUT_CLASSIFICATION	1.687241261008633E-8	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999992746128951	WITHOUT_CLASSIFICATION	7.253871048514836E-7	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999989347423747	WITHOUT_CLASSIFICATION	1.0652576253544773E-6	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999986819018674	WITHOUT_CLASSIFICATION	1.3180981326089082E-6	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999988477369642	WITHOUT_CLASSIFICATION	1.152263035743277E-6	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999956639307864	WITHOUT_CLASSIFICATION	4.336069213560839E-6	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999958053865198	WITHOUT_CLASSIFICATION	4.194613480231826E-6	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999814656025722	WITHOUT_CLASSIFICATION	1.853439742792556E-5	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.999999978280408	WITHOUT_CLASSIFICATION	2.171959198983535E-8	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999999797774844	WITHOUT_CLASSIFICATION	2.0222515576497843E-8	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.99999204962709	WITHOUT_CLASSIFICATION	7.950372910085071E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999933732625897	WITHOUT_CLASSIFICATION	6.626737410157508E-6	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.999999737842753	WITHOUT_CLASSIFICATION	2.621572469484863E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999963555336836	WITHOUT_CLASSIFICATION	3.644466316488989E-6	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999710290866509	WITHOUT_CLASSIFICATION	2.897091334902008E-5	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9131196882053509	WITHOUT_CLASSIFICATION	0.08688031179464897	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9131196882053509	WITHOUT_CLASSIFICATION	0.08688031179464897	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9840559407521096	WITHOUT_CLASSIFICATION	0.01594405924789043	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999998521502074	WITHOUT_CLASSIFICATION	1.478497925657178E-7	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999977192332015	WITHOUT_CLASSIFICATION	2.2807667985648366E-6	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999996479183377	WITHOUT_CLASSIFICATION	3.520816622415188E-7	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.999999455756751	WITHOUT_CLASSIFICATION	5.442432489730117E-7	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999902114496345	WITHOUT_CLASSIFICATION	9.788550365533195E-6	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.999999126642569	WITHOUT_CLASSIFICATION	8.73357431044312E-7	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9999928962152242	WITHOUT_CLASSIFICATION	7.10378477577845E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999963555336836	WITHOUT_CLASSIFICATION	3.644466316488989E-6	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999992856447689	WITHOUT_CLASSIFICATION	7.143552311385381E-7	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999864797199376	WITHOUT_CLASSIFICATION	1.3520280062450842E-5	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999957698911488	WITHOUT_CLASSIFICATION	4.230108851178265E-6	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999989111550717	WITHOUT_CLASSIFICATION	1.0888449282699947E-6	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.999999594384646	WITHOUT_CLASSIFICATION	4.0561535405475177E-7	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999995459429815	WITHOUT_CLASSIFICATION	4.540570185541054E-7	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999995459429815	WITHOUT_CLASSIFICATION	4.540570185541054E-7	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999995459429815	WITHOUT_CLASSIFICATION	4.540570185541054E-7	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999967778175877	WITHOUT_CLASSIFICATION	3.2221824122240097E-6	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999999997774651	WITHOUT_CLASSIFICATION	2.2253481065940135E-10	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999999699479659	WITHOUT_CLASSIFICATION	3.0052034017321725E-8	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999999209830811	WITHOUT_CLASSIFICATION	7.901691885737751E-8	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999999835619419	WITHOUT_CLASSIFICATION	1.6438058169510328E-8	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999999964841794	WITHOUT_CLASSIFICATION	3.5158205914316775E-9	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999977780714844	WITHOUT_CLASSIFICATION	2.221928515495847E-6	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999998073299831	WITHOUT_CLASSIFICATION	1.926700169611522E-7	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999993905990651	WITHOUT_CLASSIFICATION	6.094009349865271E-7	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999993905990651	WITHOUT_CLASSIFICATION	6.094009349865271E-7	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999995083746733	WITHOUT_CLASSIFICATION	4.916253265996939E-7	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999782495492	WITHOUT_CLASSIFICATION	2.1750450750810822E-8	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999997857975762	WITHOUT_CLASSIFICATION	2.142024238048604E-7	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999997857975762	WITHOUT_CLASSIFICATION	2.142024238048604E-7	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999999009354893	WITHOUT_CLASSIFICATION	9.906451071624697E-8	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.999998847252871	WITHOUT_CLASSIFICATION	1.1527471290145077E-6	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999869001913992	WITHOUT_CLASSIFICATION	1.3099808600691466E-5	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999999553060097	WITHOUT_CLASSIFICATION	4.469399025635491E-8	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999994130908667	WITHOUT_CLASSIFICATION	5.869091333575558E-7	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.9999997467378294	WITHOUT_CLASSIFICATION	2.532621705859509E-7	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999961442880226	WITHOUT_CLASSIFICATION	3.855711977341199E-6	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9999968090578033	WITHOUT_CLASSIFICATION	3.190942196772772E-6	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.99998256450864	WITHOUT_CLASSIFICATION	1.743549136002361E-5	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999991034905107	WITHOUT_CLASSIFICATION	8.965094892558777E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999963555336836	WITHOUT_CLASSIFICATION	3.644466316488989E-6	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.999996888656444	WITHOUT_CLASSIFICATION	3.111343555915947E-6	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999416704515	WITHOUT_CLASSIFICATION	5.832954847732781E-8	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999982460397303	WITHOUT_CLASSIFICATION	1.75396026966024E-6	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.999985748190278	WITHOUT_CLASSIFICATION	1.4251809722045237E-5	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999999645209284	WITHOUT_CLASSIFICATION	3.5479071599187165E-8	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999895303383415	WITHOUT_CLASSIFICATION	1.0469661658585553E-5	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999992570257481	WITHOUT_CLASSIFICATION	7.429742520189267E-7	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999992676032793	WITHOUT_CLASSIFICATION	7.323967208054848E-7	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999977465369803	WITHOUT_CLASSIFICATION	2.2534630197803E-6	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999994209093636	WITHOUT_CLASSIFICATION	5.790906364725833E-7	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.999999695450451	WITHOUT_CLASSIFICATION	3.045495489964117E-7	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999999799161866	WITHOUT_CLASSIFICATION	2.0083813349538985E-8	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999993710216517	WITHOUT_CLASSIFICATION	6.289783483548999E-7	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999997464605844	WITHOUT_CLASSIFICATION	2.535394155683072E-7	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999998711622874	WITHOUT_CLASSIFICATION	1.288377125394099E-7	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9999727931679064	WITHOUT_CLASSIFICATION	2.7206832093540745E-5	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999816922367711	WITHOUT_CLASSIFICATION	1.830776322888506E-5	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9999996666122987	WITHOUT_CLASSIFICATION	3.333877013607839E-7	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999599492604115	WITHOUT_CLASSIFICATION	4.005073958835092E-5	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999592491833398	WITHOUT_CLASSIFICATION	4.0750816660320716E-5	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999982384197864	WITHOUT_CLASSIFICATION	1.761580213567215E-6	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999997192652768	WITHOUT_CLASSIFICATION	2.807347231693498E-7	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999999602439109	WITHOUT_CLASSIFICATION	3.9756089087054394E-8	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.99999997788882	WITHOUT_CLASSIFICATION	2.2111180024050723E-8	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999999226440591	WITHOUT_CLASSIFICATION	7.73559409103694E-8	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999996740346586	WITHOUT_CLASSIFICATION	3.2596534139693334E-7	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.999999264724433	WITHOUT_CLASSIFICATION	7.352755671328742E-7	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999997684935243	WITHOUT_CLASSIFICATION	2.3150647552006035E-7	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999999941303663	WITHOUT_CLASSIFICATION	5.869633602299665E-9	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999968881617187	WITHOUT_CLASSIFICATION	3.1118382813557003E-6	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999999865706588	WITHOUT_CLASSIFICATION	1.3429341097668388E-8	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9999998732358981	WITHOUT_CLASSIFICATION	1.2676410181744816E-7	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999371705848005	WITHOUT_CLASSIFICATION	6.282941519954772E-5	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.999999399132577	WITHOUT_CLASSIFICATION	6.008674229590563E-7	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999958333708219	WITHOUT_CLASSIFICATION	4.1666291781530875E-6	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.999999855114107	WITHOUT_CLASSIFICATION	1.4488589302135497E-7	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999981145719946	WITHOUT_CLASSIFICATION	1.8854280053612808E-6	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.999907608635274	WITHOUT_CLASSIFICATION	9.239136472607031E-5	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999993713991876	WITHOUT_CLASSIFICATION	6.286008124773453E-7	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999997093712164	WITHOUT_CLASSIFICATION	2.9062878351772685E-7	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999998787119003	WITHOUT_CLASSIFICATION	1.2128809975893266E-7	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9999998462829398	WITHOUT_CLASSIFICATION	1.5371706020939603E-7	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999982902863642	WITHOUT_CLASSIFICATION	1.7097136357850891E-6	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.999999773265354	WITHOUT_CLASSIFICATION	2.2673464590685077E-7	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9999989461058071	WITHOUT_CLASSIFICATION	1.0538941928893705E-6	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9999998262934688	WITHOUT_CLASSIFICATION	1.7370653116500355E-7	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9999928283049342	WITHOUT_CLASSIFICATION	7.171695065880981E-6	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999959332206724	WITHOUT_CLASSIFICATION	4.066779327576775E-6	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999945950235918	WITHOUT_CLASSIFICATION	5.4049764083084884E-6	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.999999384924618	WITHOUT_CLASSIFICATION	6.150753820414688E-7	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.99999938569751	WITHOUT_CLASSIFICATION	6.143024899373056E-7	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999956274763206	WITHOUT_CLASSIFICATION	4.372523679360506E-6	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999974123696698	WITHOUT_CLASSIFICATION	2.5876303303674985E-6	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999998518107595	WITHOUT_CLASSIFICATION	1.481892405941915E-7	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999886619551069	WITHOUT_CLASSIFICATION	1.1338044893136902E-5	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999973151922905	WITHOUT_CLASSIFICATION	2.6848077095395105E-6	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.999968124930358	WITHOUT_CLASSIFICATION	3.187506964184964E-5	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999994431895178	WITHOUT_CLASSIFICATION	5.568104820513364E-7	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999969089062819	WITHOUT_CLASSIFICATION	3.0910937180191783E-6	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9999627661518361	WITHOUT_CLASSIFICATION	3.723384816383965E-5	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999985711274704	WITHOUT_CLASSIFICATION	1.4288725297010135E-6	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999985711274704	WITHOUT_CLASSIFICATION	1.4288725297010135E-6	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999963424798256	WITHOUT_CLASSIFICATION	3.657520174448963E-6	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999963424798256	WITHOUT_CLASSIFICATION	3.657520174448963E-6	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999997150957716	WITHOUT_CLASSIFICATION	2.8490422845831974E-7	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999997150957716	WITHOUT_CLASSIFICATION	2.8490422845831974E-7	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.999998401655818	WITHOUT_CLASSIFICATION	1.5983441820440093E-6	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.999998401655818	WITHOUT_CLASSIFICATION	1.5983441820440093E-6	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9999515964301938	WITHOUT_CLASSIFICATION	4.840356980616663E-5	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9999236981724758	WITHOUT_CLASSIFICATION	7.630182752411042E-5	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999978155308423	WITHOUT_CLASSIFICATION	2.184469157571994E-6	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999999381846084	WITHOUT_CLASSIFICATION	6.181539161698322E-8	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999999119110959	WITHOUT_CLASSIFICATION	8.808890410460771E-8	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999998315356127	WITHOUT_CLASSIFICATION	1.6846438729067708E-7	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999981867802654	WITHOUT_CLASSIFICATION	1.8132197345952946E-6	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999998943665573	WITHOUT_CLASSIFICATION	1.0563344263734473E-7	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999993944103167	WITHOUT_CLASSIFICATION	6.055896832169099E-7	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999998823708407	WITHOUT_CLASSIFICATION	1.1762915930172989E-7	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999987814696931	WITHOUT_CLASSIFICATION	1.2185303068042865E-6	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999982095403103	WITHOUT_CLASSIFICATION	1.7904596896593957E-6	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999995198059921	WITHOUT_CLASSIFICATION	4.801940078534356E-7	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999937300349525	WITHOUT_CLASSIFICATION	6.269965047400855E-6	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999998236068562	WITHOUT_CLASSIFICATION	1.7639314370991695E-7	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999992863939018	WITHOUT_CLASSIFICATION	7.136060982506105E-7	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999999319556836	WITHOUT_CLASSIFICATION	6.804431636652606E-8	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.999999837626046	WITHOUT_CLASSIFICATION	1.6237395409369477E-7	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999997474916219	WITHOUT_CLASSIFICATION	2.525083781226846E-7	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999933127609468	WITHOUT_CLASSIFICATION	6.687239053160214E-6	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.999997909940368	WITHOUT_CLASSIFICATION	2.0900596321004105E-6	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999995238392677	WITHOUT_CLASSIFICATION	4.7616073218950065E-7	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999937559002602	WITHOUT_CLASSIFICATION	6.244099739794293E-6	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999995142550356	WITHOUT_CLASSIFICATION	4.857449644414119E-7	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999969308101613	WITHOUT_CLASSIFICATION	3.0691898386897563E-6	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999982223244342	WITHOUT_CLASSIFICATION	1.7776755657671877E-6	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999810519453071	WITHOUT_CLASSIFICATION	1.8948054692911697E-5	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9997348664479971	WITHOUT_CLASSIFICATION	2.651335520028004E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9997348664479971	WITHOUT_CLASSIFICATION	2.651335520028004E-4	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999998578222022	WITHOUT_CLASSIFICATION	1.421777976861305E-7	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9999967341357637	WITHOUT_CLASSIFICATION	3.2658642362524287E-6	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9999949902044958	WITHOUT_CLASSIFICATION	5.009795504139219E-6	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999998735940151	WITHOUT_CLASSIFICATION	1.2640598492441692E-7	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999990321474278	WITHOUT_CLASSIFICATION	9.678525722949254E-7	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999994059316575	WITHOUT_CLASSIFICATION	5.94068342504832E-7	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999752495148861	WITHOUT_CLASSIFICATION	2.4750485113870714E-5	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999752495148861	WITHOUT_CLASSIFICATION	2.4750485113870714E-5	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999990857588478	WITHOUT_CLASSIFICATION	9.142411522674547E-7	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.5408365161075233	IMPLEMENTATION	0.4591634838924767	WITHOUT_CLASSIFICATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999997003724777	WITHOUT_CLASSIFICATION	2.99627522269846E-7	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999997003724777	WITHOUT_CLASSIFICATION	2.99627522269846E-7	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.999999757782691	WITHOUT_CLASSIFICATION	2.422173089481117E-7	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999992557125887	WITHOUT_CLASSIFICATION	7.442874111967563E-7	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999992557125887	WITHOUT_CLASSIFICATION	7.442874111967563E-7	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9998872215911456	WITHOUT_CLASSIFICATION	1.1277840885437612E-4	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9998872215911456	WITHOUT_CLASSIFICATION	1.1277840885437612E-4	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999992890668334	WITHOUT_CLASSIFICATION	7.109331664917282E-7	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999992890668334	WITHOUT_CLASSIFICATION	7.109331664917282E-7	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9999988629105279	WITHOUT_CLASSIFICATION	1.1370894721791452E-6	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999999111966261	WITHOUT_CLASSIFICATION	8.880337395582101E-8	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999999893780438	WITHOUT_CLASSIFICATION	1.0621956238416938E-8	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.999999679700777	WITHOUT_CLASSIFICATION	3.2029922314451347E-7	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999999952768848	WITHOUT_CLASSIFICATION	4.7231152038659095E-9	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999997815478656	WITHOUT_CLASSIFICATION	2.184521343722836E-7	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999996915596728	WITHOUT_CLASSIFICATION	3.084403272112685E-7	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999999412284645	WITHOUT_CLASSIFICATION	5.877153542711797E-8	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999996915596728	WITHOUT_CLASSIFICATION	3.084403272112685E-7	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9975871305136964	WITHOUT_CLASSIFICATION	0.0024128694863036326	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999892550461129	WITHOUT_CLASSIFICATION	1.0744953886993718E-5	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999999619883311	WITHOUT_CLASSIFICATION	3.80116689108307E-8	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999994559289194	WITHOUT_CLASSIFICATION	5.440710806305962E-7	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999999018819428	WITHOUT_CLASSIFICATION	9.811805717592007E-8	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999876698381897	WITHOUT_CLASSIFICATION	1.233016181033252E-5	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999967525896843	WITHOUT_CLASSIFICATION	3.2474103156779273E-6	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999959506477994	WITHOUT_CLASSIFICATION	4.049352200519392E-6	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999897788872	WITHOUT_CLASSIFICATION	1.0221112907081715E-8	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999998383983346	WITHOUT_CLASSIFICATION	1.6160166544408195E-7	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999997490902175	WITHOUT_CLASSIFICATION	2.5090978253406244E-7	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999999788185641	WITHOUT_CLASSIFICATION	2.1181435832790935E-8	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.9998595237730391	WITHOUT_CLASSIFICATION	1.4047622696081725E-4	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9999992580831445	WITHOUT_CLASSIFICATION	7.419168554702376E-7	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999988605321537	WITHOUT_CLASSIFICATION	1.1394678463203215E-6	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999999713009812	WITHOUT_CLASSIFICATION	2.869901886339413E-8	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999902946542178	WITHOUT_CLASSIFICATION	9.7053457821347E-6	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999907986292952	WITHOUT_CLASSIFICATION	9.201370704809081E-6	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9998629166521966	WITHOUT_CLASSIFICATION	1.3708334780343604E-4	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.999956980631736	WITHOUT_CLASSIFICATION	4.301936826397221E-5	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.999999184988103	WITHOUT_CLASSIFICATION	8.150118968809128E-7	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999972801568913	WITHOUT_CLASSIFICATION	2.719843108655794E-6	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999963760525667	WITHOUT_CLASSIFICATION	3.6239474332871367E-6	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999543915130074	WITHOUT_CLASSIFICATION	4.560848699272902E-5	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.999997182134296	WITHOUT_CLASSIFICATION	2.8178657039166323E-6	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999997442150886	WITHOUT_CLASSIFICATION	2.5578491143071996E-7	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999999965202522	WITHOUT_CLASSIFICATION	3.4797478148207367E-9	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.999990678861774	WITHOUT_CLASSIFICATION	9.321138226043024E-6	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999999976814222	WITHOUT_CLASSIFICATION	2.3185777205497854E-9	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999999419635107	WITHOUT_CLASSIFICATION	5.8036489355371705E-8	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999999931018817	WITHOUT_CLASSIFICATION	6.898118325220033E-9	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999997600717	WITHOUT_CLASSIFICATION	2.3992838412842415E-10	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999999871539179	WITHOUT_CLASSIFICATION	1.2846082191111317E-8	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999986618706979	WITHOUT_CLASSIFICATION	1.338129302058059E-6	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999999973879087	WITHOUT_CLASSIFICATION	2.6120912162272386E-9	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999999986234224	WITHOUT_CLASSIFICATION	1.3765776141221155E-9	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999999954961334	WITHOUT_CLASSIFICATION	4.503866588802943E-9	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999999868870111	WITHOUT_CLASSIFICATION	1.311298906390128E-8	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999999857396988	WITHOUT_CLASSIFICATION	1.4260301264781017E-8	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999999966750701	WITHOUT_CLASSIFICATION	3.3249298376777853E-9	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.999999988578774	WITHOUT_CLASSIFICATION	1.1421226029442233E-8	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999906770147	WITHOUT_CLASSIFICATION	9.322985303142546E-9	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999999937559141	WITHOUT_CLASSIFICATION	6.244085965627689E-9	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999999923315974	WITHOUT_CLASSIFICATION	7.668402617605152E-9	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999978912467	WITHOUT_CLASSIFICATION	2.108753277457562E-9	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999999870468681	WITHOUT_CLASSIFICATION	1.2953131946911132E-8	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999999838743545	WITHOUT_CLASSIFICATION	1.6125645445963923E-8	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999999769651144	WITHOUT_CLASSIFICATION	2.3034885555215284E-8	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999090820408	WITHOUT_CLASSIFICATION	9.091795911674956E-8	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999990516910587	WITHOUT_CLASSIFICATION	9.483089413077251E-7	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999987039533291	WITHOUT_CLASSIFICATION	1.296046670816085E-6	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999993173917445	WITHOUT_CLASSIFICATION	6.826082555626644E-7	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999830218060536	WITHOUT_CLASSIFICATION	1.697819394645582E-5	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9997834189122882	WITHOUT_CLASSIFICATION	2.1658108771177117E-4	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999999621937501	WITHOUT_CLASSIFICATION	3.780624997266621E-8	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999999621937501	WITHOUT_CLASSIFICATION	3.780624997266621E-8	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999997675848659	WITHOUT_CLASSIFICATION	2.3241513412382954E-7	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.999999299251755	WITHOUT_CLASSIFICATION	7.007482449157445E-7	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999993900781555	WITHOUT_CLASSIFICATION	6.099218445401891E-7	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999993920186632	WITHOUT_CLASSIFICATION	6.079813367981705E-7	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999992696312606	WITHOUT_CLASSIFICATION	7.303687392895879E-7	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999927236788378	WITHOUT_CLASSIFICATION	7.276321162124247E-6	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999997968503979	WITHOUT_CLASSIFICATION	2.0314960219215046E-7	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999977012924532	WITHOUT_CLASSIFICATION	2.298707546672929E-6	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999336962183352	WITHOUT_CLASSIFICATION	6.630378166485182E-5	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.999999870661686	WITHOUT_CLASSIFICATION	1.2933831389902151E-7	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999999057292512	WITHOUT_CLASSIFICATION	9.42707487509722E-8	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999999057292512	WITHOUT_CLASSIFICATION	9.42707487509722E-8	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9968132053589016	WITHOUT_CLASSIFICATION	0.0031867946410984007	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999991213822523	WITHOUT_CLASSIFICATION	8.786177477021794E-7	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999925257526925	WITHOUT_CLASSIFICATION	7.474247307478271E-6	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999998870994914	WITHOUT_CLASSIFICATION	1.1290050862734127E-7	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999998899867611	WITHOUT_CLASSIFICATION	1.1001323885033983E-7	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999979708101999	WITHOUT_CLASSIFICATION	2.029189800197738E-6	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999996271286242	WITHOUT_CLASSIFICATION	3.7287137572523886E-7	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999988793232732	WITHOUT_CLASSIFICATION	1.1206767267878952E-6	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999998013763925	WITHOUT_CLASSIFICATION	1.9862360751632283E-7	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9995823545874628	WITHOUT_CLASSIFICATION	4.176454125371688E-4	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999999921157452	WITHOUT_CLASSIFICATION	7.88425486026644E-9	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999998412551002	WITHOUT_CLASSIFICATION	1.58744899746238E-7	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999986566474462	WITHOUT_CLASSIFICATION	1.343352553809789E-6	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999986566474462	WITHOUT_CLASSIFICATION	1.343352553809789E-6	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999998859492959	WITHOUT_CLASSIFICATION	1.1405070419975109E-7	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999962783903513	WITHOUT_CLASSIFICATION	3.7216096488168234E-6	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999995486859123	WITHOUT_CLASSIFICATION	4.5131408766920223E-7	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999941841630825	WITHOUT_CLASSIFICATION	5.815836917466441E-6	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999955627595679	WITHOUT_CLASSIFICATION	4.437240432104571E-6	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999995235878313	WITHOUT_CLASSIFICATION	4.764121687434139E-7	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999989089106761	WITHOUT_CLASSIFICATION	1.0910893238700326E-6	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999990386717508	WITHOUT_CLASSIFICATION	9.61328249209627E-7	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9994281353749961	WITHOUT_CLASSIFICATION	5.718646250039224E-4	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999992526415243	WITHOUT_CLASSIFICATION	7.473584755804744E-7	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999925257526925	WITHOUT_CLASSIFICATION	7.474247307478271E-6	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999966777848116	WITHOUT_CLASSIFICATION	3.322215188284773E-6	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.999994887432264	WITHOUT_CLASSIFICATION	5.1125677361219234E-6	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999996641894969	WITHOUT_CLASSIFICATION	3.3581050306717687E-7	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.999999966078603	WITHOUT_CLASSIFICATION	3.392139693738978E-8	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999995951927411	WITHOUT_CLASSIFICATION	4.048072589554576E-7	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999998984954387	WITHOUT_CLASSIFICATION	1.0150456131091152E-7	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999550395838329	WITHOUT_CLASSIFICATION	4.4960416167033984E-5	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999944043897752	WITHOUT_CLASSIFICATION	5.595610224742968E-6	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999988920458763	WITHOUT_CLASSIFICATION	1.10795412372838E-6	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999927992586661	WITHOUT_CLASSIFICATION	7.20074133392866E-6	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999858960712908	WITHOUT_CLASSIFICATION	1.4103928709207653E-5	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999999876058212	WITHOUT_CLASSIFICATION	1.2394178701119449E-8	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999994849114645	WITHOUT_CLASSIFICATION	5.150885354501112E-7	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999997164131217	WITHOUT_CLASSIFICATION	2.83586878282301E-7	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999997604637412	WITHOUT_CLASSIFICATION	2.395362587871329E-7	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999999169743472	WITHOUT_CLASSIFICATION	8.302565282501523E-8	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999989859642523	WITHOUT_CLASSIFICATION	1.0140357477623154E-6	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999971465180346	WITHOUT_CLASSIFICATION	2.8534819653548733E-6	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999498170125418	WITHOUT_CLASSIFICATION	5.01829874581481E-5	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.9999999469536055	WITHOUT_CLASSIFICATION	5.304639443552187E-8	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999999992345586	WITHOUT_CLASSIFICATION	7.654412599187862E-10	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999982185174622	WITHOUT_CLASSIFICATION	1.7814825377756925E-6	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999995256961502	WITHOUT_CLASSIFICATION	4.7430384979890135E-7	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999753281396994	WITHOUT_CLASSIFICATION	2.4671860300580325E-5	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999956575509955	WITHOUT_CLASSIFICATION	4.342449004528317E-6	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999999932713757	WITHOUT_CLASSIFICATION	6.728624251564779E-9	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9999986550578436	WITHOUT_CLASSIFICATION	1.3449421564660056E-6	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.999997951952552	WITHOUT_CLASSIFICATION	2.048047447913048E-6	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9999984582712671	WITHOUT_CLASSIFICATION	1.5417287329146317E-6	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999997184689373	WITHOUT_CLASSIFICATION	2.8153106266270624E-7	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999978507429135	WITHOUT_CLASSIFICATION	2.149257086505251E-6	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999978507429135	WITHOUT_CLASSIFICATION	2.149257086505251E-6	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9993888987037075	WITHOUT_CLASSIFICATION	6.11101296292501E-4	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9996990314615186	WITHOUT_CLASSIFICATION	3.0096853848141645E-4	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.9999999482178462	WITHOUT_CLASSIFICATION	5.178215375345095E-8	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9998171265827848	WITHOUT_CLASSIFICATION	1.828734172152578E-4	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999983015588978	WITHOUT_CLASSIFICATION	1.6984411023136423E-6	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999987933347316	WITHOUT_CLASSIFICATION	1.2066652684006868E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999963555336836	WITHOUT_CLASSIFICATION	3.644466316488989E-6	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999953594389859	WITHOUT_CLASSIFICATION	4.640561014208363E-6	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999982779408502	WITHOUT_CLASSIFICATION	1.7220591499512397E-6	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999999623301795	WITHOUT_CLASSIFICATION	3.766982045101213E-8	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999999441679548	WITHOUT_CLASSIFICATION	5.583204529881042E-8	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9999991008010559	WITHOUT_CLASSIFICATION	8.991989440149378E-7	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999999838345484	WITHOUT_CLASSIFICATION	1.6165451691252015E-8	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999997093712164	WITHOUT_CLASSIFICATION	2.9062878351772685E-7	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999999844139579	WITHOUT_CLASSIFICATION	1.55860421110481E-8	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999877280392838	WITHOUT_CLASSIFICATION	1.2271960716167786E-5	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999998883002	WITHOUT_CLASSIFICATION	1.1169977265667549E-10	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999999169665852	WITHOUT_CLASSIFICATION	8.303341477321038E-8	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.999999474600515	WITHOUT_CLASSIFICATION	5.253994849769365E-7	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999994645973846	WITHOUT_CLASSIFICATION	5.354026153401581E-7	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999456229769597	WITHOUT_CLASSIFICATION	5.4377023040315835E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999456229769597	WITHOUT_CLASSIFICATION	5.4377023040315835E-5	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9999992227363392	WITHOUT_CLASSIFICATION	7.7726366063765E-7	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.999998714235204	WITHOUT_CLASSIFICATION	1.2857647959596086E-6	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999699196570858	WITHOUT_CLASSIFICATION	3.0080342914231848E-5	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999998757780788	WITHOUT_CLASSIFICATION	1.2422192118271773E-7	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999978796299253	WITHOUT_CLASSIFICATION	2.1203700747659343E-6	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9996234938274777	WITHOUT_CLASSIFICATION	3.76506172522388E-4	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.999999899026012	WITHOUT_CLASSIFICATION	1.0097398788088414E-7	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999901588148	WITHOUT_CLASSIFICATION	9.841185178208376E-9	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999995920469145	WITHOUT_CLASSIFICATION	4.079530854619863E-7	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999982870408214	WITHOUT_CLASSIFICATION	1.7129591786256587E-6	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9999991274708396	WITHOUT_CLASSIFICATION	8.725291604620948E-7	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999996584214101	WITHOUT_CLASSIFICATION	3.415785898379843E-7	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999976462524709	WITHOUT_CLASSIFICATION	2.3537475291294698E-6	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999999438109012	WITHOUT_CLASSIFICATION	5.618909878343461E-8	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999980746200628	WITHOUT_CLASSIFICATION	1.925379937111519E-6	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999990965040852	WITHOUT_CLASSIFICATION	9.034959146717196E-7	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999983694782991	WITHOUT_CLASSIFICATION	1.6305217008672578E-6	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9999998060593901	WITHOUT_CLASSIFICATION	1.93940609769728E-7	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999995812220689	WITHOUT_CLASSIFICATION	4.1877793109771283E-7	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999999670531187	WITHOUT_CLASSIFICATION	3.294688140887836E-8	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999918020238042	WITHOUT_CLASSIFICATION	8.197976195772009E-6	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.999999462880457	WITHOUT_CLASSIFICATION	5.371195429406162E-7	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.999999846431378	WITHOUT_CLASSIFICATION	1.5356862200985986E-7	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999997007845033	WITHOUT_CLASSIFICATION	2.992154967171258E-7	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999999442872455	WITHOUT_CLASSIFICATION	5.571275447865647E-8	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999818277102765	WITHOUT_CLASSIFICATION	1.8172289723481918E-5	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.9999997862736979	WITHOUT_CLASSIFICATION	2.1372630207501083E-7	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999998806610084	WITHOUT_CLASSIFICATION	1.1933899160991873E-7	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999925227864442	WITHOUT_CLASSIFICATION	7.47721355564421E-6	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999961368324135	WITHOUT_CLASSIFICATION	3.8631675864128986E-6	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999989207805754	WITHOUT_CLASSIFICATION	1.0792194246446782E-6	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999975337177924	WITHOUT_CLASSIFICATION	2.466282207573766E-6	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.999999793298473	WITHOUT_CLASSIFICATION	2.0670152706165942E-7	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.9999984425697342	WITHOUT_CLASSIFICATION	1.5574302658174985E-6	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999999358362134	WITHOUT_CLASSIFICATION	6.41637865719802E-8	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999999997164077	WITHOUT_CLASSIFICATION	2.8359221320282164E-10	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999999851229074	WITHOUT_CLASSIFICATION	1.4877092475613382E-8	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9999746799064961	WITHOUT_CLASSIFICATION	2.5320093503898144E-5	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.999999733007709	WITHOUT_CLASSIFICATION	2.6699229108335597E-7	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999079737618201	WITHOUT_CLASSIFICATION	9.202623817997696E-5	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999999931691446	WITHOUT_CLASSIFICATION	6.830855386951928E-9	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.999999777513211	WITHOUT_CLASSIFICATION	2.2248678895523137E-7	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999999725636639	WITHOUT_CLASSIFICATION	2.7436336154357937E-8	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999996183813408	WITHOUT_CLASSIFICATION	3.8161865916155163E-7	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999977515985706	WITHOUT_CLASSIFICATION	2.2484014294123855E-6	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999996183813408	WITHOUT_CLASSIFICATION	3.8161865916155163E-7	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999966312327553	WITHOUT_CLASSIFICATION	3.368767244819481E-6	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9021957322146889	WITHOUT_CLASSIFICATION	0.09780426778531108	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999949129082267	WITHOUT_CLASSIFICATION	5.08709177331217E-6	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.9064581430604273	IMPLEMENTATION	0.09354185693957265	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999971110652974	WITHOUT_CLASSIFICATION	2.888934702578929E-6	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.999982616944904	WITHOUT_CLASSIFICATION	1.738305509609495E-5	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9999999433414682	WITHOUT_CLASSIFICATION	5.6658531638564E-8	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999999940938541	WITHOUT_CLASSIFICATION	5.906145975243499E-9	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999994971217129	WITHOUT_CLASSIFICATION	5.028782871921442E-7	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.7381055292502021	IMPLEMENTATION	0.2618944707497978	WITHOUT_CLASSIFICATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9999647006774164	WITHOUT_CLASSIFICATION	3.529932258367436E-5	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999914398741503	WITHOUT_CLASSIFICATION	8.560125849789268E-6	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9998835928632708	WITHOUT_CLASSIFICATION	1.1640713672921465E-4	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999991697825013	WITHOUT_CLASSIFICATION	8.302174986114239E-7	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9889451858021723	WITHOUT_CLASSIFICATION	0.011054814197827664	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.5349324042830287	IMPLEMENTATION	0.46506759571697137	WITHOUT_CLASSIFICATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999999989002428	WITHOUT_CLASSIFICATION	1.0997572308529744E-9	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999993464021829	WITHOUT_CLASSIFICATION	6.535978171384022E-7	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999989535018198	WITHOUT_CLASSIFICATION	1.046498180231017E-6	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999977473960007	WITHOUT_CLASSIFICATION	2.25260399927943E-6	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999990561690784	WITHOUT_CLASSIFICATION	9.438309216408178E-7	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999994581914691	WITHOUT_CLASSIFICATION	5.418085309633555E-7	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999965146540463	WITHOUT_CLASSIFICATION	3.4853459536269387E-6	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999993600875583	WITHOUT_CLASSIFICATION	6.399124418061653E-7	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999989433023005	WITHOUT_CLASSIFICATION	1.0566976994346067E-6	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999999041967372	WITHOUT_CLASSIFICATION	9.580326274498697E-8	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999998985151354	WITHOUT_CLASSIFICATION	1.0148486462519916E-7	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999993617474973	WITHOUT_CLASSIFICATION	6.382525028434367E-7	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999993763925668	WITHOUT_CLASSIFICATION	6.236074332945709E-7	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999999998461689	WITHOUT_CLASSIFICATION	1.5383108035053206E-10	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999974825342386	WITHOUT_CLASSIFICATION	2.517465761484118E-6	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999978997459411	WITHOUT_CLASSIFICATION	2.1002540589060864E-6	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999947507363595	WITHOUT_CLASSIFICATION	5.2492636406384165E-6	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9999995019193835	WITHOUT_CLASSIFICATION	4.98080616634766E-7	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999995165092739	WITHOUT_CLASSIFICATION	4.834907261641955E-7	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9999998540762755	WITHOUT_CLASSIFICATION	1.459237245117364E-7	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999996033031539	WITHOUT_CLASSIFICATION	3.9669684614203953E-7	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999723255681	WITHOUT_CLASSIFICATION	2.7674431807193052E-8	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999938131896964	WITHOUT_CLASSIFICATION	6.186810303567129E-6	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999993107214376	WITHOUT_CLASSIFICATION	6.892785623961704E-7	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999947550795572	WITHOUT_CLASSIFICATION	5.2449204428727885E-6	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999999448682554	WITHOUT_CLASSIFICATION	5.513174468751583E-8	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999996386799443	WITHOUT_CLASSIFICATION	3.61320055739616E-7	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999915967515608	WITHOUT_CLASSIFICATION	8.403248439166792E-6	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999915967515608	WITHOUT_CLASSIFICATION	8.403248439166792E-6	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999985511478925	WITHOUT_CLASSIFICATION	1.4488521075088667E-6	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999986731577506	WITHOUT_CLASSIFICATION	1.3268422494174096E-6	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999999968349117	WITHOUT_CLASSIFICATION	3.1650883507616205E-9	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999999399379711	WITHOUT_CLASSIFICATION	6.006202886522972E-8	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999995602099	WITHOUT_CLASSIFICATION	4.3978997990772904E-10	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999990254539771	WITHOUT_CLASSIFICATION	9.745460229477905E-7	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999804595700842	WITHOUT_CLASSIFICATION	1.9540429915823637E-5	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999998576619354	WITHOUT_CLASSIFICATION	1.4233806457004363E-7	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.99999986124429	WITHOUT_CLASSIFICATION	1.3875570997302969E-7	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999999654421864	WITHOUT_CLASSIFICATION	3.455781366189015E-8	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999998759262838	WITHOUT_CLASSIFICATION	1.240737161607957E-7	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999973927495049	WITHOUT_CLASSIFICATION	2.6072504950685365E-6	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999999404669945	WITHOUT_CLASSIFICATION	5.953300561366776E-8	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999661168929961	WITHOUT_CLASSIFICATION	3.388310700390122E-5	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999999505209639	WITHOUT_CLASSIFICATION	4.9479035992751205E-8	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.999890813859083	WITHOUT_CLASSIFICATION	1.0918614091700011E-4	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999982191101963	WITHOUT_CLASSIFICATION	1.780889803723447E-6	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999999170410028	WITHOUT_CLASSIFICATION	8.295899719013531E-8	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999998985336936	WITHOUT_CLASSIFICATION	1.0146630637504369E-7	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999996773881589	WITHOUT_CLASSIFICATION	3.226118411982907E-7	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.9997676753173789	WITHOUT_CLASSIFICATION	2.323246826211574E-4	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.999367001383983	WITHOUT_CLASSIFICATION	6.329986160169222E-4	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999654146711328	WITHOUT_CLASSIFICATION	3.4585328867201885E-5	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999996286763669	WITHOUT_CLASSIFICATION	3.713236330458527E-7	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999999706527147	WITHOUT_CLASSIFICATION	2.9347285212536034E-8	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999967127505964	WITHOUT_CLASSIFICATION	3.2872494035660596E-6	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999940511165	WITHOUT_CLASSIFICATION	5.9488836020041694E-9	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999983616321461	WITHOUT_CLASSIFICATION	1.6383678539245477E-6	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.999997614359594	WITHOUT_CLASSIFICATION	2.3856404061070987E-6	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999997630519943	WITHOUT_CLASSIFICATION	2.3694800575849593E-7	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999978084355685	WITHOUT_CLASSIFICATION	2.191564431603819E-6	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999996005868178	WITHOUT_CLASSIFICATION	3.99413182271446E-7	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.999999966032445	WITHOUT_CLASSIFICATION	3.39675551000793E-8	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999988290815407	WITHOUT_CLASSIFICATION	1.1709184593164062E-6	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999999210306347	WITHOUT_CLASSIFICATION	7.896936526582117E-8	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999991381923485	WITHOUT_CLASSIFICATION	8.618076513476024E-7	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999977905307994	WITHOUT_CLASSIFICATION	2.209469200565081E-6	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999982464045957	WITHOUT_CLASSIFICATION	1.7535954043095233E-6	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9997941226320161	WITHOUT_CLASSIFICATION	2.0587736798401723E-4	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999983624056779	WITHOUT_CLASSIFICATION	1.6375943221325312E-6	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.999997460551986	WITHOUT_CLASSIFICATION	2.539448013973349E-6	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.999986826860177	WITHOUT_CLASSIFICATION	1.317313982289915E-5	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999947130870276	WITHOUT_CLASSIFICATION	5.286912972412061E-6	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999998336548973	WITHOUT_CLASSIFICATION	1.6634510281368145E-7	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999880180102793	WITHOUT_CLASSIFICATION	1.1981989720843623E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999845949195457	WITHOUT_CLASSIFICATION	1.5405080454355488E-5	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999932737971217	WITHOUT_CLASSIFICATION	6.726202878465224E-6	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999999738717331	WITHOUT_CLASSIFICATION	2.6128266828157062E-8	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.9999946600503593	WITHOUT_CLASSIFICATION	5.3399496406885615E-6	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999923155959558	WITHOUT_CLASSIFICATION	7.684404044239789E-6	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999999833996823	WITHOUT_CLASSIFICATION	1.660031759215373E-8	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999992659667154	WITHOUT_CLASSIFICATION	7.340332846117871E-7	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999999330889005	WITHOUT_CLASSIFICATION	6.691109957999898E-8	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999970073656462	WITHOUT_CLASSIFICATION	2.992634353899377E-6	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999970381829383	WITHOUT_CLASSIFICATION	2.9618170617138177E-6	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999999436558284	WITHOUT_CLASSIFICATION	5.6344171472503065E-8	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999994500203676	WITHOUT_CLASSIFICATION	5.499796324183348E-7	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.99999956354507	WITHOUT_CLASSIFICATION	4.36454930001182E-7	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999836776273169	WITHOUT_CLASSIFICATION	1.632237268307773E-5	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999993614007623	WITHOUT_CLASSIFICATION	6.385992377995308E-7	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999999419738468	WITHOUT_CLASSIFICATION	5.8026153167595824E-8	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999999102220344	WITHOUT_CLASSIFICATION	8.977796557278103E-8	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999435205	WITHOUT_CLASSIFICATION	5.647949995267698E-8	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999998013544624	WITHOUT_CLASSIFICATION	1.9864553748678005E-7	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9999852338067604	WITHOUT_CLASSIFICATION	1.4766193239674051E-5	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999983962970411	WITHOUT_CLASSIFICATION	1.603702958826051E-6	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999985811654155	WITHOUT_CLASSIFICATION	1.4188345844774451E-6	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.999999281427456	WITHOUT_CLASSIFICATION	7.185725439579806E-7	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.9999908727072314	WITHOUT_CLASSIFICATION	9.127292768657517E-6	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999970100937613	WITHOUT_CLASSIFICATION	2.9899062388029245E-6	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999772545902132	WITHOUT_CLASSIFICATION	2.2745409786726982E-5	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999982964034958	WITHOUT_CLASSIFICATION	1.7035965042819109E-6	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999977854574598	WITHOUT_CLASSIFICATION	2.2145425401686158E-6	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999976420706794	WITHOUT_CLASSIFICATION	2.3579293205029863E-6	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9999984769160917	WITHOUT_CLASSIFICATION	1.5230839083159504E-6	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9999981061735607	WITHOUT_CLASSIFICATION	1.8938264393627335E-6	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9999980845142667	WITHOUT_CLASSIFICATION	1.915485733131934E-6	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9999978292701581	WITHOUT_CLASSIFICATION	2.1707298418427016E-6	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9999980340046629	WITHOUT_CLASSIFICATION	1.9659953370685968E-6	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9999977367791536	WITHOUT_CLASSIFICATION	2.263220846313548E-6	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9999974701682689	WITHOUT_CLASSIFICATION	2.5298317310769656E-6	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9999974100144243	WITHOUT_CLASSIFICATION	2.5899855757758314E-6	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.999997189760116	WITHOUT_CLASSIFICATION	2.8102398840169763E-6	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9999973835353259	WITHOUT_CLASSIFICATION	2.616464674207456E-6	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9999982765097857	WITHOUT_CLASSIFICATION	1.7234902142554293E-6	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9999986631137032	WITHOUT_CLASSIFICATION	1.3368862968186136E-6	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9999984802700101	WITHOUT_CLASSIFICATION	1.5197299897971786E-6	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9999984491987606	WITHOUT_CLASSIFICATION	1.5508012393848742E-6	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9999983260542186	WITHOUT_CLASSIFICATION	1.6739457813147576E-6	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9999983215534166	WITHOUT_CLASSIFICATION	1.6784465834197084E-6	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9999982541629333	WITHOUT_CLASSIFICATION	1.7458370667536874E-6	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9999988790994321	WITHOUT_CLASSIFICATION	1.1209005679440974E-6	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9999984953785469	WITHOUT_CLASSIFICATION	1.5046214531538616E-6	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9999952622553884	WITHOUT_CLASSIFICATION	4.737744611645335E-6	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999941371425719	WITHOUT_CLASSIFICATION	5.862857428147429E-6	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.999978531557883	WITHOUT_CLASSIFICATION	2.1468442117052307E-5	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999807093861548	WITHOUT_CLASSIFICATION	1.9290613845190464E-5	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.999996956844897	WITHOUT_CLASSIFICATION	3.043155102980946E-6	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999985025715995	WITHOUT_CLASSIFICATION	1.4974284004205613E-6	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.999978234636885	WITHOUT_CLASSIFICATION	2.1765363115132305E-5	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9983779788177496	WITHOUT_CLASSIFICATION	0.0016220211822503302	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999946008810717	WITHOUT_CLASSIFICATION	5.399118928365507E-6	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999981453853892	WITHOUT_CLASSIFICATION	1.854614610729175E-6	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.5577217640271781	IMPLEMENTATION	0.4422782359728218	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9999981420817536	WITHOUT_CLASSIFICATION	1.8579182463776934E-6	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999999117287564	WITHOUT_CLASSIFICATION	8.827124364325661E-8	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999999408798724	WITHOUT_CLASSIFICATION	5.912012756841485E-8	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999999408798724	WITHOUT_CLASSIFICATION	5.912012756841485E-8	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999995200267997	WITHOUT_CLASSIFICATION	4.79973200210186E-7	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999761930601206	WITHOUT_CLASSIFICATION	2.3806939879347207E-5	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999999665132	WITHOUT_CLASSIFICATION	3.348672194079788E-11	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999996646461661	WITHOUT_CLASSIFICATION	3.353538338611675E-7	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.999999913367073	WITHOUT_CLASSIFICATION	8.663292703663317E-8	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999976000329037	WITHOUT_CLASSIFICATION	2.399967096184218E-6	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9999988820772971	WITHOUT_CLASSIFICATION	1.1179227028070976E-6	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999940685497283	WITHOUT_CLASSIFICATION	5.931450271755399E-6	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9998432112016836	WITHOUT_CLASSIFICATION	1.5678879831636258E-4	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9999995427988474	WITHOUT_CLASSIFICATION	4.5720115257116426E-7	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999911556248166	WITHOUT_CLASSIFICATION	8.844375183336915E-6	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999997594026241	WITHOUT_CLASSIFICATION	2.405973758393541E-7	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9999991200269616	WITHOUT_CLASSIFICATION	8.799730385347896E-7	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999814050492477	WITHOUT_CLASSIFICATION	1.8594950752345598E-5	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999991641051145	WITHOUT_CLASSIFICATION	8.358948854530666E-7	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.9999953283921558	WITHOUT_CLASSIFICATION	4.671607844209289E-6	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999985739869199	WITHOUT_CLASSIFICATION	1.4260130800554368E-6	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999999477900775	WITHOUT_CLASSIFICATION	5.220992253876424E-8	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999993380425987	WITHOUT_CLASSIFICATION	6.619574013336315E-7	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999994533116053	WITHOUT_CLASSIFICATION	5.466883947511307E-7	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999999168266699	WITHOUT_CLASSIFICATION	8.317333001630265E-8	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999999786209752	WITHOUT_CLASSIFICATION	2.1379024845311475E-8	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.999997465831944	WITHOUT_CLASSIFICATION	2.534168055998357E-6	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999999964046487	WITHOUT_CLASSIFICATION	3.5953512682813624E-9	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999985173109649	WITHOUT_CLASSIFICATION	1.4826890350116748E-6	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999973958842947	WITHOUT_CLASSIFICATION	2.6041157053643075E-6	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999998486656598	WITHOUT_CLASSIFICATION	1.5133434016003032E-7	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.999996123573986	WITHOUT_CLASSIFICATION	3.876426013987127E-6	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.999998011965699	WITHOUT_CLASSIFICATION	1.988034300970482E-6	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999959070060609	WITHOUT_CLASSIFICATION	4.0929939391382525E-6	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999983976461708	WITHOUT_CLASSIFICATION	1.6023538291313297E-6	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999962322038894	WITHOUT_CLASSIFICATION	3.7677961106098377E-6	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.999995037218615	WITHOUT_CLASSIFICATION	4.962781384991704E-6	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999989891447474	WITHOUT_CLASSIFICATION	1.0108552525858089E-6	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999982279334093	WITHOUT_CLASSIFICATION	1.7720665906892153E-6	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999887012857851	WITHOUT_CLASSIFICATION	1.1298714214857994E-5	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999955562590924	WITHOUT_CLASSIFICATION	4.443740907652634E-6	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.999999981795697	WITHOUT_CLASSIFICATION	1.8204302888896398E-8	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999981522840259	WITHOUT_CLASSIFICATION	1.8477159742006164E-6	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.999997004427489	WITHOUT_CLASSIFICATION	2.9955725110313543E-6	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999992263995278	WITHOUT_CLASSIFICATION	7.736004722986973E-7	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.999998952085697	WITHOUT_CLASSIFICATION	1.0479143029924483E-6	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999791293577585	WITHOUT_CLASSIFICATION	2.08706422415709E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999988431643826	WITHOUT_CLASSIFICATION	1.1568356173524693E-6	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999988431643826	WITHOUT_CLASSIFICATION	1.1568356173524693E-6	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999996081261052	WITHOUT_CLASSIFICATION	3.9187389468562316E-7	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999999327216914	WITHOUT_CLASSIFICATION	6.727830849731916E-8	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999998715275085	WITHOUT_CLASSIFICATION	1.284724915146106E-7	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9999882425287254	WITHOUT_CLASSIFICATION	1.175747127452036E-5	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999999449443179	WITHOUT_CLASSIFICATION	5.5055681999069823E-8	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9999997282427937	WITHOUT_CLASSIFICATION	2.717572062667315E-7	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.999997148785968	WITHOUT_CLASSIFICATION	2.8512140319578305E-6	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999992540044184	WITHOUT_CLASSIFICATION	7.459955816636624E-7	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999852003715901	WITHOUT_CLASSIFICATION	1.479962840979906E-5	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999962664232643	WITHOUT_CLASSIFICATION	3.73357673552209E-6	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999981002631616	WITHOUT_CLASSIFICATION	1.8997368384397293E-6	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999992740061906	WITHOUT_CLASSIFICATION	7.259938094276119E-7	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.999983081664735	WITHOUT_CLASSIFICATION	1.6918335264968524E-5	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.999999883474159	WITHOUT_CLASSIFICATION	1.16525841001912E-7	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.5036085827963375	WITHOUT_CLASSIFICATION	0.4963914172036625	IMPLEMENTATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999810451148209	WITHOUT_CLASSIFICATION	1.8954885179028517E-5	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999953724702202	WITHOUT_CLASSIFICATION	4.627529779835173E-6	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999999023432126	WITHOUT_CLASSIFICATION	9.765678734945983E-8	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999999993961703	WITHOUT_CLASSIFICATION	6.038296648953587E-10	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.999907608635274	WITHOUT_CLASSIFICATION	9.239136472607031E-5	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999988598089998	WITHOUT_CLASSIFICATION	1.1401910001010088E-6	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999988598089998	WITHOUT_CLASSIFICATION	1.1401910001010088E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999995860256303	WITHOUT_CLASSIFICATION	4.1397436960635024E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999995860256303	WITHOUT_CLASSIFICATION	4.1397436960635024E-7	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999983137730222	WITHOUT_CLASSIFICATION	1.686226977772543E-6	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999961159812829	WITHOUT_CLASSIFICATION	3.884018717031198E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999862888662027	WITHOUT_CLASSIFICATION	1.3711133797379168E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999998227968272	WITHOUT_CLASSIFICATION	1.7720317284411525E-7	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999999893780438	WITHOUT_CLASSIFICATION	1.0621956238416938E-8	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999610112547	WITHOUT_CLASSIFICATION	3.8988745294507976E-8	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9988978696136052	WITHOUT_CLASSIFICATION	0.0011021303863949128	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9999990683447888	WITHOUT_CLASSIFICATION	9.316552111730236E-7	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999994554820624	WITHOUT_CLASSIFICATION	5.445179376500408E-7	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999999522120523	WITHOUT_CLASSIFICATION	4.7787947679565505E-8	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999996179858592	WITHOUT_CLASSIFICATION	3.8201414079181275E-7	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999961600752112	WITHOUT_CLASSIFICATION	3.839924788837185E-6	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999999967669939	WITHOUT_CLASSIFICATION	3.2330060416934583E-9	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.999999729583611	WITHOUT_CLASSIFICATION	2.704163888655885E-7	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999999964489321	WITHOUT_CLASSIFICATION	3.551067843464634E-9	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.9999996446886716	WITHOUT_CLASSIFICATION	3.5531132830461673E-7	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9998963934668568	WITHOUT_CLASSIFICATION	1.0360653314314164E-4	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999999157154777	WITHOUT_CLASSIFICATION	8.428452230456395E-8	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9999969853500349	WITHOUT_CLASSIFICATION	3.0146499650704746E-6	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999963453023434	WITHOUT_CLASSIFICATION	3.6546976566442163E-6	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999993568924757	WITHOUT_CLASSIFICATION	6.431075243433222E-7	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999828233788461	WITHOUT_CLASSIFICATION	1.7176621153873762E-5	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999998196714213	WITHOUT_CLASSIFICATION	1.803285786467187E-7	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999998985151354	WITHOUT_CLASSIFICATION	1.0148486462519916E-7	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999990254539771	WITHOUT_CLASSIFICATION	9.745460229477905E-7	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999922538357299	WITHOUT_CLASSIFICATION	7.746164270188028E-6	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999999959585846	WITHOUT_CLASSIFICATION	4.041415352869795E-9	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999981897549292	WITHOUT_CLASSIFICATION	1.8102450708265778E-6	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999781487330265	WITHOUT_CLASSIFICATION	2.185126697346355E-5	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999998424729039	WITHOUT_CLASSIFICATION	1.5752709619835961E-7	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999998424729039	WITHOUT_CLASSIFICATION	1.5752709619835961E-7	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999989868847727	WITHOUT_CLASSIFICATION	1.0131152272189074E-6	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999845914122693	WITHOUT_CLASSIFICATION	1.5408587730775047E-5	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999611556992779	WITHOUT_CLASSIFICATION	3.884430072217843E-5	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999998023604592	WITHOUT_CLASSIFICATION	1.976395407953602E-7	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.999998878721327	WITHOUT_CLASSIFICATION	1.1212786730188907E-6	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9999583236027447	WITHOUT_CLASSIFICATION	4.1676397255186346E-5	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999973372729575	WITHOUT_CLASSIFICATION	2.6627270425773046E-6	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9997863146110527	WITHOUT_CLASSIFICATION	2.136853889472353E-4	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999966067109204	WITHOUT_CLASSIFICATION	3.393289079619819E-6	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999996690630341	WITHOUT_CLASSIFICATION	3.309369659856711E-7	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9999997459570282	WITHOUT_CLASSIFICATION	2.5404297179210005E-7	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.99999786923856	WITHOUT_CLASSIFICATION	2.130761439988647E-6	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999933494215253	WITHOUT_CLASSIFICATION	6.650578474737224E-6	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999999509349801	WITHOUT_CLASSIFICATION	4.9065019970925584E-8	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999998670146413	WITHOUT_CLASSIFICATION	1.3298535869935312E-7	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999978155308423	WITHOUT_CLASSIFICATION	2.184469157571994E-6	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999991843403705	WITHOUT_CLASSIFICATION	8.156596295387672E-7	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999989374683118	WITHOUT_CLASSIFICATION	1.0625316881148146E-6	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999992980821812	WITHOUT_CLASSIFICATION	7.019178188309706E-7	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999888258648855	WITHOUT_CLASSIFICATION	1.1174135114546628E-5	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999999766621526	WITHOUT_CLASSIFICATION	2.3337847388632855E-8	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999999912074458	WITHOUT_CLASSIFICATION	8.792554360932951E-9	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999998732889215	WITHOUT_CLASSIFICATION	1.2671107852628073E-7	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9999972067321268	WITHOUT_CLASSIFICATION	2.7932678732218352E-6	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999997680541675	WITHOUT_CLASSIFICATION	2.3194583252638254E-7	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.999992566932908	WITHOUT_CLASSIFICATION	7.43306709212409E-6	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999943178870173	WITHOUT_CLASSIFICATION	5.682112982707712E-6	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999989382361555	WITHOUT_CLASSIFICATION	1.061763844498874E-6	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999999643462223	WITHOUT_CLASSIFICATION	3.565377776801446E-8	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999987073290761	WITHOUT_CLASSIFICATION	1.2926709238230113E-6	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999959339879649	WITHOUT_CLASSIFICATION	4.066012035088766E-6	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999986406955479	WITHOUT_CLASSIFICATION	1.359304452034223E-6	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999999628987731	WITHOUT_CLASSIFICATION	3.710122678289881E-8	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9999796076321007	WITHOUT_CLASSIFICATION	2.0392367899300577E-5	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999996931043412	WITHOUT_CLASSIFICATION	3.0689565877754194E-7	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999999390593456	WITHOUT_CLASSIFICATION	6.094065432177322E-8	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999934573421205	WITHOUT_CLASSIFICATION	6.542657879443923E-6	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999911512357491	WITHOUT_CLASSIFICATION	8.848764250848115E-6	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999983895562078	WITHOUT_CLASSIFICATION	1.6104437922324427E-6	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9998968776996339	WITHOUT_CLASSIFICATION	1.03122300366068E-4	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999000744811	WITHOUT_CLASSIFICATION	9.992551894616906E-8	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.99999964110916	WITHOUT_CLASSIFICATION	3.5889084001627006E-7	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9999997087918232	WITHOUT_CLASSIFICATION	2.912081767901692E-7	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.999999624930681	WITHOUT_CLASSIFICATION	3.750693189991332E-7	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999888797741879	WITHOUT_CLASSIFICATION	1.1120225812015757E-5	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999999974410285	WITHOUT_CLASSIFICATION	2.55897142277577E-9	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999993490674165	WITHOUT_CLASSIFICATION	6.509325834567231E-7	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999952169197	WITHOUT_CLASSIFICATION	4.783080273279164E-9	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999991025400612	WITHOUT_CLASSIFICATION	8.974599386555676E-7	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9999944598035422	WITHOUT_CLASSIFICATION	5.5401964578637755E-6	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999978732526306	WITHOUT_CLASSIFICATION	2.1267473694322385E-6	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999987925129166	WITHOUT_CLASSIFICATION	1.207487083445908E-6	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.99999335805774	WITHOUT_CLASSIFICATION	6.641942259980582E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999965726613511	WITHOUT_CLASSIFICATION	3.427338648950961E-6	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999960187033777	WITHOUT_CLASSIFICATION	3.981296622215444E-6	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999965761148059	WITHOUT_CLASSIFICATION	3.423885194047631E-6	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999942239374553	WITHOUT_CLASSIFICATION	5.776062544755941E-6	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.999999992413341	WITHOUT_CLASSIFICATION	7.586658870947747E-9	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999975938146203	WITHOUT_CLASSIFICATION	2.4061853797553136E-6	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999958760170313	WITHOUT_CLASSIFICATION	4.12398296863294E-6	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999910228443861	WITHOUT_CLASSIFICATION	8.977155613957396E-6	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999978732526306	WITHOUT_CLASSIFICATION	2.1267473694322385E-6	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.99999335805774	WITHOUT_CLASSIFICATION	6.641942259980582E-6	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999987925129166	WITHOUT_CLASSIFICATION	1.207487083445908E-6	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999979974271334	WITHOUT_CLASSIFICATION	2.002572866775886E-6	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999955926406474	WITHOUT_CLASSIFICATION	4.407359352627319E-6	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999986072332653	WITHOUT_CLASSIFICATION	1.3927667346847434E-6	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9999997944768401	WITHOUT_CLASSIFICATION	2.0552315999647786E-7	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9998146368940988	WITHOUT_CLASSIFICATION	1.853631059012221E-4	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999996935377454	WITHOUT_CLASSIFICATION	3.0646225453531696E-7	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999994120181401	WITHOUT_CLASSIFICATION	5.879818599375112E-7	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999998111870173	WITHOUT_CLASSIFICATION	1.888129826938053E-7	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999979505923327	WITHOUT_CLASSIFICATION	2.0494076673656364E-6	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999993686239002	WITHOUT_CLASSIFICATION	6.313760998120646E-7	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999971419581725	WITHOUT_CLASSIFICATION	2.8580418274938653E-6	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9998947428791174	WITHOUT_CLASSIFICATION	1.0525712088260206E-4	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999990537198011	WITHOUT_CLASSIFICATION	9.462801988394483E-7	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9999911559241565	WITHOUT_CLASSIFICATION	8.844075843552357E-6	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999999874229458	WITHOUT_CLASSIFICATION	1.2577054285639491E-8	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9999741933221836	WITHOUT_CLASSIFICATION	2.580667781645771E-5	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.9999662154504666	WITHOUT_CLASSIFICATION	3.378454953336503E-5	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999992541004032	WITHOUT_CLASSIFICATION	7.458995966879185E-7	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999992541004032	WITHOUT_CLASSIFICATION	7.458995966879185E-7	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999992445042548	WITHOUT_CLASSIFICATION	7.554957451374696E-7	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.9999990026931682	WITHOUT_CLASSIFICATION	9.973068317747294E-7	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999986082610216	WITHOUT_CLASSIFICATION	1.391738978420274E-6	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999629757865173	WITHOUT_CLASSIFICATION	3.7024213482840546E-5	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.999999224860484	WITHOUT_CLASSIFICATION	7.751395160406802E-7	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999920709739706	WITHOUT_CLASSIFICATION	7.929026029397448E-6	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999998881101397	WITHOUT_CLASSIFICATION	1.1188986033099195E-7	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999992657178973	WITHOUT_CLASSIFICATION	7.342821027881006E-7	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.999997294785719	WITHOUT_CLASSIFICATION	2.7052142811176474E-6	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999999153647747	WITHOUT_CLASSIFICATION	8.463522518794527E-8	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999984309904918	WITHOUT_CLASSIFICATION	1.5690095081258199E-6	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9999963360302705	WITHOUT_CLASSIFICATION	3.6639697295731154E-6	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999932376835305	WITHOUT_CLASSIFICATION	6.762316469457947E-6	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999996664244721	WITHOUT_CLASSIFICATION	3.3357552783994416E-7	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999977771718088	WITHOUT_CLASSIFICATION	2.2228281911077193E-6	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999920336385	WITHOUT_CLASSIFICATION	7.966361410366406E-9	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.999995716498479	WITHOUT_CLASSIFICATION	4.283501521096897E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999962560874	WITHOUT_CLASSIFICATION	3.743912586009394E-9	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999962560874	WITHOUT_CLASSIFICATION	3.743912586009394E-9	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9999946827744965	WITHOUT_CLASSIFICATION	5.31722550345072E-6	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9999982270761388	WITHOUT_CLASSIFICATION	1.7729238611170592E-6	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999999718274649	WITHOUT_CLASSIFICATION	2.8172535193319935E-8	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9999961435887915	WITHOUT_CLASSIFICATION	3.856411208404232E-6	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999991787087282	WITHOUT_CLASSIFICATION	8.212912718366652E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999962560874	WITHOUT_CLASSIFICATION	3.743912586009394E-9	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999962560874	WITHOUT_CLASSIFICATION	3.743912586009394E-9	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999622691362418	WITHOUT_CLASSIFICATION	3.773086375820015E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999622691362418	WITHOUT_CLASSIFICATION	3.773086375820015E-5	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999658838913777	WITHOUT_CLASSIFICATION	3.4116108622187786E-5	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999958454834107	WITHOUT_CLASSIFICATION	4.154516589244284E-6	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999998680527568	WITHOUT_CLASSIFICATION	1.3194724329718807E-7	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999999034470574	WITHOUT_CLASSIFICATION	9.65529425519246E-8	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999998044953088	WITHOUT_CLASSIFICATION	1.9550469123665568E-7	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999998044953088	WITHOUT_CLASSIFICATION	1.9550469123665568E-7	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999999092616247	WITHOUT_CLASSIFICATION	9.07383751692767E-8	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999903945115989	WITHOUT_CLASSIFICATION	9.60548840111541E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999996281116301	WITHOUT_CLASSIFICATION	3.7188836998854324E-7	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.999994334643053	WITHOUT_CLASSIFICATION	5.665356947054595E-6	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999641771168067	WITHOUT_CLASSIFICATION	3.582288319330005E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999375495221723	WITHOUT_CLASSIFICATION	6.245047782770306E-5	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999979640300118	WITHOUT_CLASSIFICATION	2.0359699881311377E-6	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999998895315633	WITHOUT_CLASSIFICATION	1.1046843662537671E-7	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.999999641414217	WITHOUT_CLASSIFICATION	3.5858578290940473E-7	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999956210973858	WITHOUT_CLASSIFICATION	4.378902614205849E-6	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999987410577406	WITHOUT_CLASSIFICATION	1.2589422594386244E-6	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999999377543217	WITHOUT_CLASSIFICATION	6.224567830327379E-8	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999867379516579	WITHOUT_CLASSIFICATION	1.3262048342053374E-5	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999998480878561	WITHOUT_CLASSIFICATION	1.5191214387444715E-7	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999920336385	WITHOUT_CLASSIFICATION	7.966361410366406E-9	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999962560874	WITHOUT_CLASSIFICATION	3.743912586009394E-9	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999622691362418	WITHOUT_CLASSIFICATION	3.773086375820015E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999375495221723	WITHOUT_CLASSIFICATION	6.245047782770306E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999301632486	WITHOUT_CLASSIFICATION	6.983675129013064E-8	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999301632486	WITHOUT_CLASSIFICATION	6.983675129013064E-8	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9998236656589344	WITHOUT_CLASSIFICATION	1.7633434106559715E-4	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999998797616428	WITHOUT_CLASSIFICATION	1.202383572766846E-7	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999999723858953	WITHOUT_CLASSIFICATION	2.7614104694675194E-8	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999989721806273	WITHOUT_CLASSIFICATION	1.0278193727414978E-6	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999946060004584	WITHOUT_CLASSIFICATION	5.393999541595029E-6	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999999983718405	WITHOUT_CLASSIFICATION	1.628159467777299E-9	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999999261229638	WITHOUT_CLASSIFICATION	7.387703625403644E-8	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999963856182623	WITHOUT_CLASSIFICATION	3.61438173768412E-6	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999580057884	WITHOUT_CLASSIFICATION	4.199421153298786E-8	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999996708262119	WITHOUT_CLASSIFICATION	3.291737881071378E-7	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.999992991517008	WITHOUT_CLASSIFICATION	7.008482991996135E-6	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999497382797	WITHOUT_CLASSIFICATION	5.026172038012046E-8	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999999765613121	WITHOUT_CLASSIFICATION	2.343868786421131E-8	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.999995716498479	WITHOUT_CLASSIFICATION	4.283501521096897E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999622691362418	WITHOUT_CLASSIFICATION	3.773086375820015E-5	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999903945115989	WITHOUT_CLASSIFICATION	9.60548840111541E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999996281116301	WITHOUT_CLASSIFICATION	3.7188836998854324E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999996281116301	WITHOUT_CLASSIFICATION	3.7188836998854324E-7	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999641771168067	WITHOUT_CLASSIFICATION	3.582288319330005E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999375495221723	WITHOUT_CLASSIFICATION	6.245047782770306E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999375495221723	WITHOUT_CLASSIFICATION	6.245047782770306E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999301632486	WITHOUT_CLASSIFICATION	6.983675129013064E-8	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.999984955657844	WITHOUT_CLASSIFICATION	1.5044342156006898E-5	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999917227596733	WITHOUT_CLASSIFICATION	8.277240326697481E-6	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.999999982945168	WITHOUT_CLASSIFICATION	1.705483196090775E-8	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999979178060294	WITHOUT_CLASSIFICATION	2.082193970565379E-6	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999754721355236	WITHOUT_CLASSIFICATION	2.45278644764809E-5	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9998034923630513	WITHOUT_CLASSIFICATION	1.965076369487176E-4	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999985544846426	WITHOUT_CLASSIFICATION	1.4455153573754563E-6	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999998743538292	WITHOUT_CLASSIFICATION	1.256461708136623E-7	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999997561160675	WITHOUT_CLASSIFICATION	2.4388393241713615E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999903945115989	WITHOUT_CLASSIFICATION	9.60548840111541E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999996281116301	WITHOUT_CLASSIFICATION	3.7188836998854324E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999996281116301	WITHOUT_CLASSIFICATION	3.7188836998854324E-7	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999641771168067	WITHOUT_CLASSIFICATION	3.582288319330005E-5	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999963856182623	WITHOUT_CLASSIFICATION	3.61438173768412E-6	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999996708262119	WITHOUT_CLASSIFICATION	3.291737881071378E-7	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.999991093199162	WITHOUT_CLASSIFICATION	8.906800837971523E-6	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.999999023019867	WITHOUT_CLASSIFICATION	9.769801330485229E-7	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999919521978065	WITHOUT_CLASSIFICATION	8.047802193588296E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999919521978065	WITHOUT_CLASSIFICATION	8.047802193588296E-6	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999994371347793	WITHOUT_CLASSIFICATION	5.628652206793395E-7	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999999965785477	WITHOUT_CLASSIFICATION	3.421452287796164E-9	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999999118084599	WITHOUT_CLASSIFICATION	8.819154007642926E-8	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999781989551151	WITHOUT_CLASSIFICATION	2.180104488492458E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999998411667554	WITHOUT_CLASSIFICATION	1.5883324456263074E-7	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999998411667554	WITHOUT_CLASSIFICATION	1.5883324456263074E-7	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9994902844181851	WITHOUT_CLASSIFICATION	5.09715581814869E-4	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9994902844181851	WITHOUT_CLASSIFICATION	5.09715581814869E-4	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999994464295281	WITHOUT_CLASSIFICATION	5.53570471879125E-7	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999994464295281	WITHOUT_CLASSIFICATION	5.53570471879125E-7	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999991940711013	WITHOUT_CLASSIFICATION	8.059288988324105E-7	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999970008044693	WITHOUT_CLASSIFICATION	2.9991955307909095E-6	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999326431139087	WITHOUT_CLASSIFICATION	6.735688609130878E-5	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.999999733914083	WITHOUT_CLASSIFICATION	2.6608591694400147E-7	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999999882404125	WITHOUT_CLASSIFICATION	1.1759587487727952E-8	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.9999996631865123	WITHOUT_CLASSIFICATION	3.3681348768457325E-7	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999998964230286	WITHOUT_CLASSIFICATION	1.0357697145303233E-7	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999996671161964	WITHOUT_CLASSIFICATION	3.328838036844255E-7	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999944363076539	WITHOUT_CLASSIFICATION	5.56369234604256E-6	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999991882680599	WITHOUT_CLASSIFICATION	8.117319402214548E-7	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999925388190826	WITHOUT_CLASSIFICATION	7.461180917432918E-6	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999998261554061	WITHOUT_CLASSIFICATION	1.7384459399174788E-7	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999984433167798	WITHOUT_CLASSIFICATION	1.5566832201370897E-6	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999995472501922	WITHOUT_CLASSIFICATION	4.5274980786074997E-7	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999995472501922	WITHOUT_CLASSIFICATION	4.5274980786074997E-7	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.999980115021159	WITHOUT_CLASSIFICATION	1.9884978840997692E-5	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999610112547	WITHOUT_CLASSIFICATION	3.8988745294507976E-8	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.999981509480605	WITHOUT_CLASSIFICATION	1.8490519394954527E-5	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999998486422	WITHOUT_CLASSIFICATION	1.5135772909019402E-10	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999999728878771	WITHOUT_CLASSIFICATION	2.711212291833238E-8	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999999688296848	WITHOUT_CLASSIFICATION	3.117031528544849E-8	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999999876586897	WITHOUT_CLASSIFICATION	1.2341310443863003E-8	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999989714254455	WITHOUT_CLASSIFICATION	1.0285745544955789E-6	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999998749633696	WITHOUT_CLASSIFICATION	1.2503663040140845E-7	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999999620980142	WITHOUT_CLASSIFICATION	3.7901985747607826E-8	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999990867528353	WITHOUT_CLASSIFICATION	9.132471647922239E-7	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999993543407935	WITHOUT_CLASSIFICATION	6.456592064898739E-7	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999999971851901	WITHOUT_CLASSIFICATION	2.8148099900801107E-9	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.938415010444686	WITHOUT_CLASSIFICATION	0.061584989555314044	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999999650050617	WITHOUT_CLASSIFICATION	3.4994938196721294E-8	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999999544401537	WITHOUT_CLASSIFICATION	4.555984636438359E-8	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9999963479915478	WITHOUT_CLASSIFICATION	3.6520084521551905E-6	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999990208407419	WITHOUT_CLASSIFICATION	9.791592580237988E-7	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999998330638975	WITHOUT_CLASSIFICATION	1.669361023761628E-7	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999998330638975	WITHOUT_CLASSIFICATION	1.669361023761628E-7	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.999998771988945	WITHOUT_CLASSIFICATION	1.228011054906406E-6	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999998781508954	WITHOUT_CLASSIFICATION	1.2184910455842863E-7	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.999988377026993	WITHOUT_CLASSIFICATION	1.1622973007072652E-5	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.999988377026993	WITHOUT_CLASSIFICATION	1.1622973007072652E-5	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999998364727231	WITHOUT_CLASSIFICATION	1.6352727683054582E-7	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999996236104298	WITHOUT_CLASSIFICATION	3.763895702154885E-7	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.999980114935406	WITHOUT_CLASSIFICATION	1.9885064594070063E-5	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999984349508301	WITHOUT_CLASSIFICATION	1.5650491699613525E-6	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999999965066245	WITHOUT_CLASSIFICATION	3.4933753761484108E-9	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999999875316847	WITHOUT_CLASSIFICATION	1.2468315375478576E-8	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999999875316847	WITHOUT_CLASSIFICATION	1.2468315375478576E-8	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999373110879	WITHOUT_CLASSIFICATION	6.268891199598529E-8	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999999941277801	WITHOUT_CLASSIFICATION	5.872220015449479E-9	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999962561129057	WITHOUT_CLASSIFICATION	3.7438870945075797E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.999999918744572	WITHOUT_CLASSIFICATION	8.125542805150397E-8	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999998781508954	WITHOUT_CLASSIFICATION	1.2184910455842863E-7	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999956088873161	WITHOUT_CLASSIFICATION	4.391112683848035E-6	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999997963958235	WITHOUT_CLASSIFICATION	2.0360417645100744E-7	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999997963958235	WITHOUT_CLASSIFICATION	2.0360417645100744E-7	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999493645496306	WITHOUT_CLASSIFICATION	5.0635450369400836E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997395184697	WITHOUT_CLASSIFICATION	2.6048153032647086E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997395184697	WITHOUT_CLASSIFICATION	2.6048153032647086E-7	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9988245926653537	WITHOUT_CLASSIFICATION	0.0011754073346462882	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9988245926653537	WITHOUT_CLASSIFICATION	0.0011754073346462882	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9988245926653537	WITHOUT_CLASSIFICATION	0.0011754073346462882	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997395184697	WITHOUT_CLASSIFICATION	2.6048153032647086E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997395184697	WITHOUT_CLASSIFICATION	2.6048153032647086E-7	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999493645496306	WITHOUT_CLASSIFICATION	5.0635450369400836E-5	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999999887398522	WITHOUT_CLASSIFICATION	1.1260147801305068E-8	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9999998736702363	WITHOUT_CLASSIFICATION	1.2632976373604533E-7	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999994721142033	WITHOUT_CLASSIFICATION	5.278857966945734E-7	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.999984943275214	WITHOUT_CLASSIFICATION	1.5056724786004979E-5	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999779708078	WITHOUT_CLASSIFICATION	2.2029192337505357E-8	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999714947494968	WITHOUT_CLASSIFICATION	2.8505250503205394E-5	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999992077120249	WITHOUT_CLASSIFICATION	7.922879750466726E-7	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999997670286329	WITHOUT_CLASSIFICATION	2.3297136696133007E-7	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999990867528353	WITHOUT_CLASSIFICATION	9.132471647922239E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997395184697	WITHOUT_CLASSIFICATION	2.6048153032647086E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997395184697	WITHOUT_CLASSIFICATION	2.6048153032647086E-7	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999720833469	WITHOUT_CLASSIFICATION	2.7916653018729288E-8	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999939032252325	WITHOUT_CLASSIFICATION	6.096774767491515E-6	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999994016748243	WITHOUT_CLASSIFICATION	5.98325175734811E-7	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999885326185	WITHOUT_CLASSIFICATION	1.1467381363879888E-8	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9998739236478164	WITHOUT_CLASSIFICATION	1.2607635218358633E-4	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999812563057671	WITHOUT_CLASSIFICATION	1.8743694232852137E-5	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999744195098	WITHOUT_CLASSIFICATION	2.5580490244475198E-8	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999902902306808	WITHOUT_CLASSIFICATION	9.709769319267575E-6	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999956102830818	WITHOUT_CLASSIFICATION	4.389716918230241E-6	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999537166869	WITHOUT_CLASSIFICATION	4.628331315926444E-8	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999781051139848	WITHOUT_CLASSIFICATION	2.1894886015257768E-5	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999967929573714	WITHOUT_CLASSIFICATION	3.207042628565007E-6	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999996409920688	WITHOUT_CLASSIFICATION	3.5900793106813374E-7	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.999855019836394	WITHOUT_CLASSIFICATION	1.449801636060158E-4	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999965776730753	WITHOUT_CLASSIFICATION	3.422326924770225E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999998287732774	WITHOUT_CLASSIFICATION	1.712267226116133E-7	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999998287732774	WITHOUT_CLASSIFICATION	1.712267226116133E-7	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999998287732774	WITHOUT_CLASSIFICATION	1.712267226116133E-7	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999995040011718	WITHOUT_CLASSIFICATION	4.959988282395324E-7	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999116105385	WITHOUT_CLASSIFICATION	8.838946155030908E-8	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999988610686996	WITHOUT_CLASSIFICATION	1.1389313004720128E-6	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999996579677886	WITHOUT_CLASSIFICATION	3.42032211474464E-7	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9997314260437516	WITHOUT_CLASSIFICATION	2.685739562483318E-4	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999998418263607	WITHOUT_CLASSIFICATION	1.581736392906404E-7	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999999997764375	WITHOUT_CLASSIFICATION	2.2356248813097065E-10	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999999468569164	WITHOUT_CLASSIFICATION	5.3143083609946193E-8	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999999416327843	WITHOUT_CLASSIFICATION	5.836721574901979E-8	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999999709189982	WITHOUT_CLASSIFICATION	2.9081001782838485E-8	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999991358378756	WITHOUT_CLASSIFICATION	8.641621244269197E-7	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999946803503554	WITHOUT_CLASSIFICATION	5.319649644499519E-6	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999999373110879	WITHOUT_CLASSIFICATION	6.268891199598529E-8	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997395184697	WITHOUT_CLASSIFICATION	2.6048153032647086E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999997395184697	WITHOUT_CLASSIFICATION	2.6048153032647086E-7	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999493645496306	WITHOUT_CLASSIFICATION	5.0635450369400836E-5	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999714947494968	WITHOUT_CLASSIFICATION	2.8505250503205394E-5	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999939032252325	WITHOUT_CLASSIFICATION	6.096774767491515E-6	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999885326185	WITHOUT_CLASSIFICATION	1.1467381363879888E-8	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999812563057671	WITHOUT_CLASSIFICATION	1.8743694232852137E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999994016748243	WITHOUT_CLASSIFICATION	5.98325175734811E-7	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999744195098	WITHOUT_CLASSIFICATION	2.5580490244475198E-8	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999537166869	WITHOUT_CLASSIFICATION	4.628331315926444E-8	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999956102830818	WITHOUT_CLASSIFICATION	4.389716918230241E-6	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999967929573714	WITHOUT_CLASSIFICATION	3.207042628565007E-6	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.999988039575048	WITHOUT_CLASSIFICATION	1.1960424951908752E-5	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9992804921729468	WITHOUT_CLASSIFICATION	7.195078270531525E-4	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999961332588312	WITHOUT_CLASSIFICATION	3.866741168789295E-6	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999999981020228	WITHOUT_CLASSIFICATION	1.897977246963921E-9	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999983609863557	WITHOUT_CLASSIFICATION	1.6390136441621721E-6	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999442625996431	WITHOUT_CLASSIFICATION	5.573740035691725E-5	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.999999947549753	WITHOUT_CLASSIFICATION	5.245024697654292E-8	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999958624928877	WITHOUT_CLASSIFICATION	4.137507112288456E-6	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999998497093668	WITHOUT_CLASSIFICATION	1.5029063322241754E-7	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.999982993397339	WITHOUT_CLASSIFICATION	1.700660266099929E-5	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9998648539087281	WITHOUT_CLASSIFICATION	1.3514609127186878E-4	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999997895197485	WITHOUT_CLASSIFICATION	2.1048025146460639E-7	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999998295651199	WITHOUT_CLASSIFICATION	1.7043488004609815E-7	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999997631603116	WITHOUT_CLASSIFICATION	2.368396883940507E-7	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999996514548398	WITHOUT_CLASSIFICATION	3.4854516015242347E-7	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.999999709308217	WITHOUT_CLASSIFICATION	2.906917830183266E-7	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999933280019	WITHOUT_CLASSIFICATION	6.671997982737824E-9	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.999961274747976	WITHOUT_CLASSIFICATION	3.8725252023927714E-5	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999979285728372	WITHOUT_CLASSIFICATION	2.0714271628337106E-6	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999988881080941	WITHOUT_CLASSIFICATION	1.111891905853318E-6	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999999375472887	WITHOUT_CLASSIFICATION	6.245271134772454E-8	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999998360427	WITHOUT_CLASSIFICATION	1.639572857371571E-10	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999998360427	WITHOUT_CLASSIFICATION	1.639572857371571E-10	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999997705598573	WITHOUT_CLASSIFICATION	2.2944014259654652E-7	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999999578684686	WITHOUT_CLASSIFICATION	4.2131531321263367E-8	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999264452617446	WITHOUT_CLASSIFICATION	7.355473825541849E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999264452617446	WITHOUT_CLASSIFICATION	7.355473825541849E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999264452617446	WITHOUT_CLASSIFICATION	7.355473825541849E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999836991165912	WITHOUT_CLASSIFICATION	1.6300883408705413E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999836991165912	WITHOUT_CLASSIFICATION	1.6300883408705413E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999836991165912	WITHOUT_CLASSIFICATION	1.6300883408705413E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999836991165912	WITHOUT_CLASSIFICATION	1.6300883408705413E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999817133394595	WITHOUT_CLASSIFICATION	1.828666054045319E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999817133394595	WITHOUT_CLASSIFICATION	1.828666054045319E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999817133394595	WITHOUT_CLASSIFICATION	1.828666054045319E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999743337028311	WITHOUT_CLASSIFICATION	2.5666297168897055E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999743337028311	WITHOUT_CLASSIFICATION	2.5666297168897055E-5	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999760279533673	WITHOUT_CLASSIFICATION	2.3972046632781827E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999785949783674	WITHOUT_CLASSIFICATION	2.1405021632659184E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999999578684686	WITHOUT_CLASSIFICATION	4.2131531321263367E-8	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.999999886444797	WITHOUT_CLASSIFICATION	1.1355520291400341E-7	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999264452617446	WITHOUT_CLASSIFICATION	7.355473825541849E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999264452617446	WITHOUT_CLASSIFICATION	7.355473825541849E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999836991165912	WITHOUT_CLASSIFICATION	1.6300883408705413E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999836991165912	WITHOUT_CLASSIFICATION	1.6300883408705413E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999836991165912	WITHOUT_CLASSIFICATION	1.6300883408705413E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999817133394595	WITHOUT_CLASSIFICATION	1.828666054045319E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999817133394595	WITHOUT_CLASSIFICATION	1.828666054045319E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999743337028311	WITHOUT_CLASSIFICATION	2.5666297168897055E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999785949783674	WITHOUT_CLASSIFICATION	2.1405021632659184E-5	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999981046307839	WITHOUT_CLASSIFICATION	1.8953692161300564E-6	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999981046307839	WITHOUT_CLASSIFICATION	1.8953692161300564E-6	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999996933924904	WITHOUT_CLASSIFICATION	3.066075096647553E-7	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999996933924904	WITHOUT_CLASSIFICATION	3.066075096647553E-7	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999976488847595	WITHOUT_CLASSIFICATION	2.351115240386852E-6	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999976488847595	WITHOUT_CLASSIFICATION	2.351115240386852E-6	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999996338524382	WITHOUT_CLASSIFICATION	3.6614756190876177E-7	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.999997752443401	WITHOUT_CLASSIFICATION	2.2475565990574836E-6	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.999997752443401	WITHOUT_CLASSIFICATION	2.2475565990574836E-6	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999946561315299	WITHOUT_CLASSIFICATION	5.343868470096781E-6	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999946561315299	WITHOUT_CLASSIFICATION	5.343868470096781E-6	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999996578564095	WITHOUT_CLASSIFICATION	3.42143590477356E-7	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999997647544786	WITHOUT_CLASSIFICATION	2.352455213675826E-7	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999997647544786	WITHOUT_CLASSIFICATION	2.352455213675826E-7	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999982231562827	WITHOUT_CLASSIFICATION	1.7768437172924605E-6	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999993317833678	WITHOUT_CLASSIFICATION	6.682166321644003E-7	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999999322770915	WITHOUT_CLASSIFICATION	6.772290847992447E-8	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999836991165912	WITHOUT_CLASSIFICATION	1.6300883408705413E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999836991165912	WITHOUT_CLASSIFICATION	1.6300883408705413E-5	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999982231562827	WITHOUT_CLASSIFICATION	1.7768437172924605E-6	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999998126973457	WITHOUT_CLASSIFICATION	1.8730265427328855E-7	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999996868154207	WITHOUT_CLASSIFICATION	3.1318457932841213E-7	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999996868154207	WITHOUT_CLASSIFICATION	3.1318457932841213E-7	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999996868154207	WITHOUT_CLASSIFICATION	3.1318457932841213E-7	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9998098748236837	WITHOUT_CLASSIFICATION	1.9012517631627644E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999993811685205	WITHOUT_CLASSIFICATION	6.188314794561207E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999810485011587	WITHOUT_CLASSIFICATION	1.8951498841357573E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999810485011587	WITHOUT_CLASSIFICATION	1.8951498841357573E-5	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999663746203645	WITHOUT_CLASSIFICATION	3.3625379635518454E-5	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999886267750386	WITHOUT_CLASSIFICATION	1.1373224961286901E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999996386971691	WITHOUT_CLASSIFICATION	3.613028308695914E-7	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999989541123019	WITHOUT_CLASSIFICATION	1.0458876981744838E-6	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999961917433453	WITHOUT_CLASSIFICATION	3.808256654798853E-6	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999999409264401	WITHOUT_CLASSIFICATION	5.907355997135238E-8	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999999409264401	WITHOUT_CLASSIFICATION	5.907355997135238E-8	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999817851735732	WITHOUT_CLASSIFICATION	1.8214826426916462E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999708353846843	WITHOUT_CLASSIFICATION	2.916461531566805E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999708353846843	WITHOUT_CLASSIFICATION	2.916461531566805E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999836991165912	WITHOUT_CLASSIFICATION	1.6300883408705413E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999996868154207	WITHOUT_CLASSIFICATION	3.1318457932841213E-7	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999993811685205	WITHOUT_CLASSIFICATION	6.188314794561207E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999810485011587	WITHOUT_CLASSIFICATION	1.8951498841357573E-5	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999663746203645	WITHOUT_CLASSIFICATION	3.3625379635518454E-5	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999886267750386	WITHOUT_CLASSIFICATION	1.1373224961286901E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999996386971691	WITHOUT_CLASSIFICATION	3.613028308695914E-7	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999989541123019	WITHOUT_CLASSIFICATION	1.0458876981744838E-6	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999708353846843	WITHOUT_CLASSIFICATION	2.916461531566805E-5	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999999604789069	WITHOUT_CLASSIFICATION	3.952109296217585E-8	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999998742629118	WITHOUT_CLASSIFICATION	1.257370881343755E-7	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999999930822039	WITHOUT_CLASSIFICATION	6.917796142787238E-9	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999865219378061	WITHOUT_CLASSIFICATION	1.3478062193871378E-5	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999987564268282	WITHOUT_CLASSIFICATION	1.2435731717455262E-6	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999996443702927	WITHOUT_CLASSIFICATION	3.5562970729941155E-7	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999998887332807	WITHOUT_CLASSIFICATION	1.1126671935371938E-7	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999998887332807	WITHOUT_CLASSIFICATION	1.1126671935371938E-7	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999828522192296	WITHOUT_CLASSIFICATION	1.7147780770467468E-5	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999839101630286	WITHOUT_CLASSIFICATION	1.6089836971426283E-5	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999646338336357	WITHOUT_CLASSIFICATION	3.5366166364357064E-5	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999720547838334	WITHOUT_CLASSIFICATION	2.7945216166541763E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.999937498104523	WITHOUT_CLASSIFICATION	6.25018954769661E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.999937498104523	WITHOUT_CLASSIFICATION	6.25018954769661E-5	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999672329017116	WITHOUT_CLASSIFICATION	3.276709828843304E-5	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999956759414241	WITHOUT_CLASSIFICATION	4.324058575852879E-6	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9995213903294994	WITHOUT_CLASSIFICATION	4.7860967050066563E-4	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9995213903294994	WITHOUT_CLASSIFICATION	4.7860967050066563E-4	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999702423209311	WITHOUT_CLASSIFICATION	2.9757679068892727E-5	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9998082997051676	WITHOUT_CLASSIFICATION	1.9170029483250354E-4	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999961917433453	WITHOUT_CLASSIFICATION	3.808256654798853E-6	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999997654682526	WITHOUT_CLASSIFICATION	2.3453174742574232E-7	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999951451438	WITHOUT_CLASSIFICATION	4.854856225004007E-9	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999996362348077	WITHOUT_CLASSIFICATION	3.6376519228944996E-7	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999968690576526	WITHOUT_CLASSIFICATION	3.1309423474254824E-6	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.999999970355244	WITHOUT_CLASSIFICATION	2.9644755867622273E-8	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.999999114365904	WITHOUT_CLASSIFICATION	8.85634096020956E-7	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999990639842906	WITHOUT_CLASSIFICATION	9.36015709409656E-7	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999995393100471	WITHOUT_CLASSIFICATION	4.6068995288860375E-7	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999998034743014	WITHOUT_CLASSIFICATION	1.965256986452407E-7	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999998034743014	WITHOUT_CLASSIFICATION	1.965256986452407E-7	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999965369834546	WITHOUT_CLASSIFICATION	3.46301654550883E-6	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999965369834546	WITHOUT_CLASSIFICATION	3.46301654550883E-6	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999998119630348	WITHOUT_CLASSIFICATION	1.8803696519818804E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999997481946313	WITHOUT_CLASSIFICATION	2.518053687062072E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999997481946313	WITHOUT_CLASSIFICATION	2.518053687062072E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999997481946313	WITHOUT_CLASSIFICATION	2.518053687062072E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999828386712	WITHOUT_CLASSIFICATION	1.7161328691401297E-8	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999999573903418	WITHOUT_CLASSIFICATION	4.260965815480495E-8	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999999573903418	WITHOUT_CLASSIFICATION	4.260965815480495E-8	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999845496439	WITHOUT_CLASSIFICATION	1.5450356171243202E-8	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.999990236796162	WITHOUT_CLASSIFICATION	9.763203838106031E-6	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999901730831153	WITHOUT_CLASSIFICATION	9.826916884696678E-6	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9999930721685372	WITHOUT_CLASSIFICATION	6.927831462781839E-6	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999908002172397	WITHOUT_CLASSIFICATION	9.199782760195879E-6	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.999980889999765	WITHOUT_CLASSIFICATION	1.9110000234916533E-5	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.999967029209897	WITHOUT_CLASSIFICATION	3.297079010303408E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999998295651199	WITHOUT_CLASSIFICATION	1.7043488004609815E-7	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999998295651199	WITHOUT_CLASSIFICATION	1.7043488004609815E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999828386712	WITHOUT_CLASSIFICATION	1.7161328691401297E-8	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999845496439	WITHOUT_CLASSIFICATION	1.5450356171243202E-8	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999978713442	WITHOUT_CLASSIFICATION	2.128655785014159E-9	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.999990236796162	WITHOUT_CLASSIFICATION	9.763203838106031E-6	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999901730831153	WITHOUT_CLASSIFICATION	9.826916884696678E-6	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999866613290332	WITHOUT_CLASSIFICATION	1.3338670966680562E-5	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9999994773579469	WITHOUT_CLASSIFICATION	5.226420531176011E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999998791657918	WITHOUT_CLASSIFICATION	1.2083420820148772E-6	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.9999962236835936	WITHOUT_CLASSIFICATION	3.7763164064091302E-6	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.99999147567174	WITHOUT_CLASSIFICATION	8.524328259970746E-6	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999999932204714	WITHOUT_CLASSIFICATION	6.779528652921277E-9	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999998584000783	WITHOUT_CLASSIFICATION	1.4159992172530299E-7	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999866613290332	WITHOUT_CLASSIFICATION	1.3338670966680562E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999966530949619	WITHOUT_CLASSIFICATION	3.346905038241278E-6	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999966530949619	WITHOUT_CLASSIFICATION	3.346905038241278E-6	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999997449333293	WITHOUT_CLASSIFICATION	2.5506667068239453E-7	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999712110716075	WITHOUT_CLASSIFICATION	2.878892839258206E-5	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999998084982191	WITHOUT_CLASSIFICATION	1.9150178091629405E-7	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999851646237308	WITHOUT_CLASSIFICATION	1.4835376269366582E-5	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.999993181363724	WITHOUT_CLASSIFICATION	6.81863627608677E-6	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9998042431738766	WITHOUT_CLASSIFICATION	1.9575682612339777E-4	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999994777357613	WITHOUT_CLASSIFICATION	5.222642386453979E-7	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999728758787655	WITHOUT_CLASSIFICATION	2.7124121234514167E-5	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999999861487193	WITHOUT_CLASSIFICATION	1.385128059133479E-8	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9999999275251632	WITHOUT_CLASSIFICATION	7.247483678222168E-8	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999995664197768	WITHOUT_CLASSIFICATION	4.335802231259249E-7	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999851646237308	WITHOUT_CLASSIFICATION	1.4835376269366582E-5	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.999993181363724	WITHOUT_CLASSIFICATION	6.81863627608677E-6	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.999959148206764	WITHOUT_CLASSIFICATION	4.0851793236093766E-5	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9999999194401061	WITHOUT_CLASSIFICATION	8.055989392504423E-8	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.999999999068361	WITHOUT_CLASSIFICATION	9.31638975011717E-10	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.999999437008058	WITHOUT_CLASSIFICATION	5.629919419079092E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999999983547186	WITHOUT_CLASSIFICATION	1.6452812497474873E-9	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999999125914352	WITHOUT_CLASSIFICATION	8.740856480805107E-8	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9999903261300533	WITHOUT_CLASSIFICATION	9.673869946666752E-6	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9999989979903229	WITHOUT_CLASSIFICATION	1.002009677128936E-6	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999999091784442	WITHOUT_CLASSIFICATION	9.082155583306601E-8	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999999031627615	WITHOUT_CLASSIFICATION	9.683723849136036E-8	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999995951664611	WITHOUT_CLASSIFICATION	4.0483353889637445E-7	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9999925592066269	WITHOUT_CLASSIFICATION	7.44079337315125E-6	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999979986375235	WITHOUT_CLASSIFICATION	2.00136247651183E-6	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999998688081665	WITHOUT_CLASSIFICATION	1.311918335500338E-7	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999997734033801	WITHOUT_CLASSIFICATION	2.2659661995181235E-7	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999436419114	WITHOUT_CLASSIFICATION	5.63580886432276E-8	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999951973551909	WITHOUT_CLASSIFICATION	4.802644809047652E-6	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999922116329978	WITHOUT_CLASSIFICATION	7.78836700214125E-6	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999799023520205	WITHOUT_CLASSIFICATION	2.009764797941556E-5	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999911532476475	WITHOUT_CLASSIFICATION	8.846752352371683E-6	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999951973551909	WITHOUT_CLASSIFICATION	4.802644809047652E-6	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999922116329978	WITHOUT_CLASSIFICATION	7.78836700214125E-6	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999799023520205	WITHOUT_CLASSIFICATION	2.009764797941556E-5	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9999993016383044	WITHOUT_CLASSIFICATION	6.983616956478401E-7	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999942329470559	WITHOUT_CLASSIFICATION	5.767052944030594E-6	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999994349334969	WITHOUT_CLASSIFICATION	5.650665032006537E-7	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999969527659668	WITHOUT_CLASSIFICATION	3.0472340332655617E-6	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999960883996077	WITHOUT_CLASSIFICATION	3.911600392190028E-6	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999920805465029	WITHOUT_CLASSIFICATION	7.919453497073744E-6	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.999999753197781	WITHOUT_CLASSIFICATION	2.4680221896284703E-7	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999972761591307	WITHOUT_CLASSIFICATION	2.723840869358255E-6	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9999999207066154	WITHOUT_CLASSIFICATION	7.92933845206408E-8	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9999992057069724	WITHOUT_CLASSIFICATION	7.94293027643568E-7	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.896256702132895	WITHOUT_CLASSIFICATION	0.10374329786710498	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.999999961161384	WITHOUT_CLASSIFICATION	3.883861609496315E-8	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.999999292242135	WITHOUT_CLASSIFICATION	7.077578650768515E-7	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999607346105276	WITHOUT_CLASSIFICATION	3.9265389472383764E-5	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999985185124022	WITHOUT_CLASSIFICATION	1.4814875978602415E-6	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999998489401601	WITHOUT_CLASSIFICATION	1.5105983988991712E-7	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999998377774593	WITHOUT_CLASSIFICATION	1.622225407365497E-7	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999997548703377	WITHOUT_CLASSIFICATION	2.451296622966621E-7	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9998338652185247	WITHOUT_CLASSIFICATION	1.6613478147537515E-4	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999803327900953	WITHOUT_CLASSIFICATION	1.966720990455037E-5	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999999300482514	WITHOUT_CLASSIFICATION	6.995174866266913E-8	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999965242474315	WITHOUT_CLASSIFICATION	3.475752568483229E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999965242474315	WITHOUT_CLASSIFICATION	3.475752568483229E-6	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.999997835211145	WITHOUT_CLASSIFICATION	2.1647888549438857E-6	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.999997835211145	WITHOUT_CLASSIFICATION	2.1647888549438857E-6	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999994755066308	WITHOUT_CLASSIFICATION	5.244933692001764E-7	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999994755066308	WITHOUT_CLASSIFICATION	5.244933692001764E-7	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999790232291611	WITHOUT_CLASSIFICATION	2.097677083890514E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999886276506	WITHOUT_CLASSIFICATION	1.1372349384987929E-8	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999987880115	WITHOUT_CLASSIFICATION	1.2119885438586118E-9	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999989352733964	WITHOUT_CLASSIFICATION	1.0647266035783708E-6	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999808591258296	WITHOUT_CLASSIFICATION	1.914087417046298E-5	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999791852100325	WITHOUT_CLASSIFICATION	2.0814789967518623E-5	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999987028754588	WITHOUT_CLASSIFICATION	1.2971245412849872E-6	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9999921346802799	WITHOUT_CLASSIFICATION	7.865319720022335E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999998295651199	WITHOUT_CLASSIFICATION	1.7043488004609815E-7	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999790232291611	WITHOUT_CLASSIFICATION	2.097677083890514E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999886276506	WITHOUT_CLASSIFICATION	1.1372349384987929E-8	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999987880115	WITHOUT_CLASSIFICATION	1.2119885438586118E-9	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999808591258296	WITHOUT_CLASSIFICATION	1.914087417046298E-5	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999791852100325	WITHOUT_CLASSIFICATION	2.0814789967518623E-5	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999974176245824	WITHOUT_CLASSIFICATION	2.5823754175495716E-6	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9999999252013001	WITHOUT_CLASSIFICATION	7.479869991204398E-8	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999915229388733	WITHOUT_CLASSIFICATION	8.477061126752753E-6	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999915229388733	WITHOUT_CLASSIFICATION	8.477061126752753E-6	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999839195353358	WITHOUT_CLASSIFICATION	1.60804646641641E-5	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999989663002308	WITHOUT_CLASSIFICATION	1.0336997692917144E-6	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999996871208399	WITHOUT_CLASSIFICATION	3.1287916014511866E-7	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999551480839	WITHOUT_CLASSIFICATION	4.4851916074060336E-8	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999551480839	WITHOUT_CLASSIFICATION	4.4851916074060336E-8	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999997903228706	WITHOUT_CLASSIFICATION	2.0967712942399181E-7	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.999999989976137	WITHOUT_CLASSIFICATION	1.0023863012372467E-8	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999936708954213	WITHOUT_CLASSIFICATION	6.32910457871349E-6	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999985985197243	WITHOUT_CLASSIFICATION	1.4014802757391141E-6	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999998649587184	WITHOUT_CLASSIFICATION	1.3504128165677358E-7	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999997631603116	WITHOUT_CLASSIFICATION	2.368396883940507E-7	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999996514548398	WITHOUT_CLASSIFICATION	3.4854516015242347E-7	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.999999709308217	WITHOUT_CLASSIFICATION	2.906917830183266E-7	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999933280019	WITHOUT_CLASSIFICATION	6.671997982737824E-9	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999988881080941	WITHOUT_CLASSIFICATION	1.111891905853318E-6	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999999375472887	WITHOUT_CLASSIFICATION	6.245271134772454E-8	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999997903228706	WITHOUT_CLASSIFICATION	2.0967712942399181E-7	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.999999989976137	WITHOUT_CLASSIFICATION	1.0023863012372467E-8	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999985985197243	WITHOUT_CLASSIFICATION	1.4014802757391141E-6	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999995693513815	WITHOUT_CLASSIFICATION	4.3064861857073E-7	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999996871208399	WITHOUT_CLASSIFICATION	3.1287916014511866E-7	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999996871208399	WITHOUT_CLASSIFICATION	3.1287916014511866E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999995664197768	WITHOUT_CLASSIFICATION	4.335802231259249E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999995664197768	WITHOUT_CLASSIFICATION	4.335802231259249E-7	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999992659609996	WITHOUT_CLASSIFICATION	7.340390003973928E-7	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999992659609996	WITHOUT_CLASSIFICATION	7.340390003973928E-7	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999994439616482	WITHOUT_CLASSIFICATION	5.560383519411471E-7	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999998086353216	WITHOUT_CLASSIFICATION	1.9136467856486292E-7	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999998227128201	WITHOUT_CLASSIFICATION	1.7728717982255545E-7	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999984278893981	WITHOUT_CLASSIFICATION	1.5721106019155572E-6	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999965035449824	WITHOUT_CLASSIFICATION	3.496455017529316E-6	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999934788186636	WITHOUT_CLASSIFICATION	6.521181336282043E-6	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999999881384086	WITHOUT_CLASSIFICATION	1.1861591413004375E-8	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999977138668964	WITHOUT_CLASSIFICATION	2.286133103565726E-6	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999998774441368	WITHOUT_CLASSIFICATION	1.2255586320680938E-7	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999998541373585	WITHOUT_CLASSIFICATION	1.4586264149131183E-7	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999997041685816	WITHOUT_CLASSIFICATION	2.9583141841358933E-7	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9999997882335656	WITHOUT_CLASSIFICATION	2.1176643440468413E-7	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999999625955704	WITHOUT_CLASSIFICATION	3.74044294729245E-8	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.999979881286988	WITHOUT_CLASSIFICATION	2.0118713011991293E-5	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999873671780952	WITHOUT_CLASSIFICATION	1.2632821904771627E-5	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9999562060034081	WITHOUT_CLASSIFICATION	4.379399659197854E-5	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9999992706504841	WITHOUT_CLASSIFICATION	7.293495158803416E-7	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999956993822913	WITHOUT_CLASSIFICATION	4.300617708645502E-6	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999981661622852	WITHOUT_CLASSIFICATION	1.833837714904572E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999996514548398	WITHOUT_CLASSIFICATION	3.4854516015242347E-7	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999933280019	WITHOUT_CLASSIFICATION	6.671997982737824E-9	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999998360427	WITHOUT_CLASSIFICATION	1.639572857371571E-10	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999810485011587	WITHOUT_CLASSIFICATION	1.8951498841357573E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999810485011587	WITHOUT_CLASSIFICATION	1.8951498841357573E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999995693513815	WITHOUT_CLASSIFICATION	4.3064861857073E-7	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999996871208399	WITHOUT_CLASSIFICATION	3.1287916014511866E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999995664197768	WITHOUT_CLASSIFICATION	4.335802231259249E-7	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999992659609996	WITHOUT_CLASSIFICATION	7.340390003973928E-7	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999994706872087	WITHOUT_CLASSIFICATION	5.293127912227171E-7	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999905269128541	WITHOUT_CLASSIFICATION	9.473087145853697E-6	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9998714838634163	WITHOUT_CLASSIFICATION	1.2851613658363623E-4	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.999999911814861	WITHOUT_CLASSIFICATION	8.81851389423639E-8	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.999999870205989	WITHOUT_CLASSIFICATION	1.297940108560968E-7	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.999999870205989	WITHOUT_CLASSIFICATION	1.297940108560968E-7	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999999339970734	WITHOUT_CLASSIFICATION	6.600292649089552E-8	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999972219190999	WITHOUT_CLASSIFICATION	2.7780809000786435E-6	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999984695925489	WITHOUT_CLASSIFICATION	1.5304074511500805E-6	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999984108703206	WITHOUT_CLASSIFICATION	1.589129679386724E-6	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999985683913718	WITHOUT_CLASSIFICATION	1.431608628211334E-6	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999985683913718	WITHOUT_CLASSIFICATION	1.431608628211334E-6	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999459277241434	WITHOUT_CLASSIFICATION	5.407227585650828E-5	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9999948363466996	WITHOUT_CLASSIFICATION	5.163653300401218E-6	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999995468135545	WITHOUT_CLASSIFICATION	4.5318644545105094E-7	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9997775377576593	WITHOUT_CLASSIFICATION	2.2246224234064968E-4	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.999935784412134	WITHOUT_CLASSIFICATION	6.421558786591759E-5	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999989860505741	WITHOUT_CLASSIFICATION	1.0139494258768646E-6	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999962038159698	WITHOUT_CLASSIFICATION	3.796184030299758E-6	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999999288054896	WITHOUT_CLASSIFICATION	7.119451031182507E-8	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9998606796618325	WITHOUT_CLASSIFICATION	1.3932033816760645E-4	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9999972260429758	WITHOUT_CLASSIFICATION	2.773957024159713E-6	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999999993007425	WITHOUT_CLASSIFICATION	6.992575194316152E-10	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999920898604128	WITHOUT_CLASSIFICATION	7.910139587235012E-6	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9979449102829753	WITHOUT_CLASSIFICATION	0.002055089717024684	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999982897988388	WITHOUT_CLASSIFICATION	1.7102011612017533E-6	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999988256795114	WITHOUT_CLASSIFICATION	1.174320488565643E-6	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999925474927142	WITHOUT_CLASSIFICATION	7.452507285786139E-6	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999998723898591	WITHOUT_CLASSIFICATION	1.276101409412535E-7	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999997628568928	WITHOUT_CLASSIFICATION	2.3714310706142644E-7	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999883251009156	WITHOUT_CLASSIFICATION	1.1674899084299793E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999996924901473	WITHOUT_CLASSIFICATION	3.0750985276379414E-7	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999998320054895	WITHOUT_CLASSIFICATION	1.6799451054320412E-7	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999998491354828	WITHOUT_CLASSIFICATION	1.5086451727821296E-7	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999998491354828	WITHOUT_CLASSIFICATION	1.5086451727821296E-7	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.999999866041802	WITHOUT_CLASSIFICATION	1.339581979621854E-7	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999998996458651	WITHOUT_CLASSIFICATION	1.0035413488704626E-7	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999989714254455	WITHOUT_CLASSIFICATION	1.0285745544955789E-6	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999989714254455	WITHOUT_CLASSIFICATION	1.0285745544955789E-6	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9979664535766292	WITHOUT_CLASSIFICATION	0.0020335464233708156	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999994459497616	WITHOUT_CLASSIFICATION	5.540502383898536E-7	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999953808767195	WITHOUT_CLASSIFICATION	4.6191232805347346E-6	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999988733887899	WITHOUT_CLASSIFICATION	1.1266112101451496E-6	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999988733887899	WITHOUT_CLASSIFICATION	1.1266112101451496E-6	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999962336063685	WITHOUT_CLASSIFICATION	3.766393631507098E-6	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.999999987979431	WITHOUT_CLASSIFICATION	1.2020568921990435E-8	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999999674232857	WITHOUT_CLASSIFICATION	3.257671421053357E-8	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999498610628735	WITHOUT_CLASSIFICATION	5.0138937126526065E-5	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999999913999398	WITHOUT_CLASSIFICATION	8.600060142971588E-9	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999996970785953	WITHOUT_CLASSIFICATION	3.029214047674495E-7	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999993344513497	WITHOUT_CLASSIFICATION	6.655486502462721E-7	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999989576075533	WITHOUT_CLASSIFICATION	1.0423924466469194E-6	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9999995081649071	WITHOUT_CLASSIFICATION	4.918350928910941E-7	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999975134228334	WITHOUT_CLASSIFICATION	2.486577166543886E-6	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999999106453434	WITHOUT_CLASSIFICATION	8.935465661386845E-8	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9998493896008249	WITHOUT_CLASSIFICATION	1.5061039917515275E-4	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9999960603375139	WITHOUT_CLASSIFICATION	3.939662486172661E-6	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999998542934161	WITHOUT_CLASSIFICATION	1.457065838199184E-7	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999980276564633	WITHOUT_CLASSIFICATION	1.9723435366084764E-6	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999999605850556	WITHOUT_CLASSIFICATION	3.941494433829514E-8	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999819739471	WITHOUT_CLASSIFICATION	1.8026052857681414E-8	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999803107191494	WITHOUT_CLASSIFICATION	1.968928085062062E-5	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.999998663277583	WITHOUT_CLASSIFICATION	1.3367224169768738E-6	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.999999996981538	WITHOUT_CLASSIFICATION	3.018462121204453E-9	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9999967502057501	WITHOUT_CLASSIFICATION	3.2497942500436128E-6	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9999957009755754	WITHOUT_CLASSIFICATION	4.299024424529596E-6	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999963208136656	WITHOUT_CLASSIFICATION	3.6791863343802797E-6	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.999999473572479	WITHOUT_CLASSIFICATION	5.264275211283209E-7	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999624178736515	WITHOUT_CLASSIFICATION	3.7582126348424E-5	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999998939174993	WITHOUT_CLASSIFICATION	1.0608250060117546E-7	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9999448318181466	WITHOUT_CLASSIFICATION	5.5168181853475025E-5	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999997284676246	WITHOUT_CLASSIFICATION	2.71532375361037E-7	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999974972969812	WITHOUT_CLASSIFICATION	2.502703018890016E-6	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.999999936801569	WITHOUT_CLASSIFICATION	6.319843107335195E-8	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999997972212269	WITHOUT_CLASSIFICATION	2.02778773018546E-7	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999998542934161	WITHOUT_CLASSIFICATION	1.457065838199184E-7	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999997284676246	WITHOUT_CLASSIFICATION	2.71532375361037E-7	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999974972969812	WITHOUT_CLASSIFICATION	2.502703018890016E-6	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999997972212269	WITHOUT_CLASSIFICATION	2.02778773018546E-7	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999975274024142	WITHOUT_CLASSIFICATION	2.472597585844353E-6	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9999832343994866	WITHOUT_CLASSIFICATION	1.6765600513440287E-5	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999991455106098	WITHOUT_CLASSIFICATION	8.544893901674275E-7	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.999997090322766	WITHOUT_CLASSIFICATION	2.909677234115362E-6	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999991829304484	WITHOUT_CLASSIFICATION	8.170695515900483E-7	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.999999999692784	WITHOUT_CLASSIFICATION	3.0721610455905826E-10	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9999991839608872	WITHOUT_CLASSIFICATION	8.160391127978877E-7	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9999983618514248	WITHOUT_CLASSIFICATION	1.638148575271935E-6	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.99999984958796	WITHOUT_CLASSIFICATION	1.5041204003139331E-7	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999998917741882	WITHOUT_CLASSIFICATION	1.0822581180663217E-7	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999868430453392	WITHOUT_CLASSIFICATION	1.3156954660731219E-5	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999868430453392	WITHOUT_CLASSIFICATION	1.3156954660731219E-5	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999999897149519	WITHOUT_CLASSIFICATION	1.0285048040176428E-8	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999997894754429	WITHOUT_CLASSIFICATION	2.105245571774956E-7	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999836931102	WITHOUT_CLASSIFICATION	1.6306889895169104E-8	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.999999554856484	WITHOUT_CLASSIFICATION	4.451435160784641E-7	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999999164676245	WITHOUT_CLASSIFICATION	8.353237545264785E-8	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999996494850681	WITHOUT_CLASSIFICATION	3.505149317589128E-7	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999844021225011	WITHOUT_CLASSIFICATION	1.5597877498995728E-5	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999601626571	WITHOUT_CLASSIFICATION	3.983734286746841E-8	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999997806155718	WITHOUT_CLASSIFICATION	2.1938442820149005E-7	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999999502128059	WITHOUT_CLASSIFICATION	4.97871941134004E-8	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999999295415491	WITHOUT_CLASSIFICATION	7.045845090374905E-8	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999998877627841	WITHOUT_CLASSIFICATION	1.1223721590869987E-7	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999830226249232	WITHOUT_CLASSIFICATION	1.697737507678986E-5	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999672870170823	WITHOUT_CLASSIFICATION	3.27129829177251E-5	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9999860930071851	WITHOUT_CLASSIFICATION	1.3906992814933928E-5	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999919285699969	WITHOUT_CLASSIFICATION	8.071430003094532E-6	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9999976737126798	WITHOUT_CLASSIFICATION	2.3262873202813524E-6	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9999986856455845	WITHOUT_CLASSIFICATION	1.3143544155476093E-6	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9999886832004079	WITHOUT_CLASSIFICATION	1.1316799592029874E-5	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.999983251887327	WITHOUT_CLASSIFICATION	1.6748112673100474E-5	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9999970939275692	WITHOUT_CLASSIFICATION	2.9060724309095048E-6	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9999987288894456	WITHOUT_CLASSIFICATION	1.2711105544760276E-6	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999990395282341	WITHOUT_CLASSIFICATION	9.604717659160675E-7	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9999962716114487	WITHOUT_CLASSIFICATION	3.7283885513105445E-6	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999999839616195	WITHOUT_CLASSIFICATION	1.603838051536597E-8	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9999877936127055	WITHOUT_CLASSIFICATION	1.2206387294531955E-5	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999999999445053	WITHOUT_CLASSIFICATION	5.5494689943672425E-11	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.999999908494435	WITHOUT_CLASSIFICATION	9.150556501074371E-8	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.9999999106831892	WITHOUT_CLASSIFICATION	8.931681072669842E-8	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999999130492674	WITHOUT_CLASSIFICATION	8.695073258408111E-8	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999998907014004	WITHOUT_CLASSIFICATION	1.0929859952425382E-7	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9999998974015193	WITHOUT_CLASSIFICATION	1.0259848063407E-7	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999984124504308	WITHOUT_CLASSIFICATION	1.5875495692131895E-6	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999938570382416	WITHOUT_CLASSIFICATION	6.142961758432999E-6	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999997194535434	WITHOUT_CLASSIFICATION	2.805464566547739E-7	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999991111645209	WITHOUT_CLASSIFICATION	8.888354790663211E-7	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999998310802705	WITHOUT_CLASSIFICATION	1.6891972953186695E-7	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999997913268105	WITHOUT_CLASSIFICATION	2.0867318944241262E-7	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999978200268298	WITHOUT_CLASSIFICATION	2.1799731701756066E-6	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999955258977505	WITHOUT_CLASSIFICATION	4.474102249484269E-6	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999996999302784	WITHOUT_CLASSIFICATION	3.0006972165383744E-7	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998985487787705	WITHOUT_CLASSIFICATION	1.0145122122963208E-4	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.9999943033972255	WITHOUT_CLASSIFICATION	5.696602774450035E-6	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.999999972687335	WITHOUT_CLASSIFICATION	2.731266492945155E-8	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999970912005636	WITHOUT_CLASSIFICATION	2.908799436352243E-6	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.999999754380741	WITHOUT_CLASSIFICATION	2.456192590874852E-7	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999971562624297	WITHOUT_CLASSIFICATION	2.843737570250717E-6	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999999894704568	WITHOUT_CLASSIFICATION	1.0529543298883054E-8	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999999550548956	WITHOUT_CLASSIFICATION	4.4945104424281956E-8	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999993271602626	WITHOUT_CLASSIFICATION	6.728397374862434E-7	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9998640295243091	WITHOUT_CLASSIFICATION	1.3597047569087982E-4	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999965057342461	WITHOUT_CLASSIFICATION	3.4942657538516598E-6	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999999082096299	WITHOUT_CLASSIFICATION	9.179037005628616E-8	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999999754640007	WITHOUT_CLASSIFICATION	2.45359993549376E-8	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999865160476221	WITHOUT_CLASSIFICATION	1.348395237781942E-5	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999992587721569	WITHOUT_CLASSIFICATION	7.412278431225159E-7	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999952326481808	WITHOUT_CLASSIFICATION	4.767351819219373E-6	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9998683525643007	WITHOUT_CLASSIFICATION	1.316474356992283E-4	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9986786679430786	WITHOUT_CLASSIFICATION	0.0013213320569214304	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9997866422488164	WITHOUT_CLASSIFICATION	2.1335775118367143E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9997866422488164	WITHOUT_CLASSIFICATION	2.1335775118367143E-4	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999998575856989	WITHOUT_CLASSIFICATION	1.4241430119464277E-7	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.999998628378251	WITHOUT_CLASSIFICATION	1.3716217489518391E-6	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999501621061	WITHOUT_CLASSIFICATION	4.9837893931932874E-8	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999995569892178	WITHOUT_CLASSIFICATION	4.430107821633788E-7	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999983703670071	WITHOUT_CLASSIFICATION	1.6296329928750573E-6	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999997490297419	WITHOUT_CLASSIFICATION	2.509702580686066E-7	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999654727203434	WITHOUT_CLASSIFICATION	3.452727965652708E-5	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9998719233988105	WITHOUT_CLASSIFICATION	1.2807660118947946E-4	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999997541508219	WITHOUT_CLASSIFICATION	2.458491780540714E-7	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999992259482481	WITHOUT_CLASSIFICATION	7.740517517924164E-7	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999995011806889	WITHOUT_CLASSIFICATION	4.988193110835226E-7	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.999998400283018	WITHOUT_CLASSIFICATION	1.59971698201808E-6	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999975611309613	WITHOUT_CLASSIFICATION	2.4388690388116644E-6	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9977287853548329	WITHOUT_CLASSIFICATION	0.0022712146451670987	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.999997461327991	WITHOUT_CLASSIFICATION	2.5386720090511264E-6	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999970749541328	WITHOUT_CLASSIFICATION	2.9250458672653293E-6	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9999968518446779	WITHOUT_CLASSIFICATION	3.148155322156998E-6	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999791829746	WITHOUT_CLASSIFICATION	2.0817025488394087E-8	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.999999428578091	WITHOUT_CLASSIFICATION	5.714219090947551E-7	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999788690174847	WITHOUT_CLASSIFICATION	2.1130982515297124E-5	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999998592076661	WITHOUT_CLASSIFICATION	1.4079233387820685E-7	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999994155366835	WITHOUT_CLASSIFICATION	5.844633164445706E-7	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9992171789307074	WITHOUT_CLASSIFICATION	7.828210692926141E-4	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999974360857284	WITHOUT_CLASSIFICATION	2.563914271607113E-6	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999999795768564	WITHOUT_CLASSIFICATION	2.042314360511714E-8	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.999980692897866	WITHOUT_CLASSIFICATION	1.930710213401972E-5	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999998058759126	WITHOUT_CLASSIFICATION	1.941240872555613E-7	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999999999483253	WITHOUT_CLASSIFICATION	5.167472114008407E-11	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999999073445714	WITHOUT_CLASSIFICATION	9.265542862181269E-8	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999999999014105	WITHOUT_CLASSIFICATION	9.858952638253557E-11	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999992579898831	WITHOUT_CLASSIFICATION	7.420101169508691E-7	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999986971227691	WITHOUT_CLASSIFICATION	1.3028772309063899E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999980138706304	WITHOUT_CLASSIFICATION	1.986129369643203E-6	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999662376958296	WITHOUT_CLASSIFICATION	3.376230417037486E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999980138706304	WITHOUT_CLASSIFICATION	1.986129369643203E-6	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999995733349342	WITHOUT_CLASSIFICATION	4.266650657292435E-7	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.999999685586067	WITHOUT_CLASSIFICATION	3.144139329160476E-7	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.999999685586067	WITHOUT_CLASSIFICATION	3.144139329160476E-7	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.999999685586067	WITHOUT_CLASSIFICATION	3.144139329160476E-7	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999988702954417	WITHOUT_CLASSIFICATION	1.1297045583075665E-6	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999988702954417	WITHOUT_CLASSIFICATION	1.1297045583075665E-6	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999950593621257	WITHOUT_CLASSIFICATION	4.940637874270565E-6	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999999968065694	WITHOUT_CLASSIFICATION	3.1934306088569103E-9	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999939527975399	WITHOUT_CLASSIFICATION	6.04720246016275E-6	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.999980263398865	WITHOUT_CLASSIFICATION	1.9736601135017725E-5	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999998596602147	WITHOUT_CLASSIFICATION	1.4033978525305378E-7	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999444391725829	WITHOUT_CLASSIFICATION	5.556082741697422E-5	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999879615966666	WITHOUT_CLASSIFICATION	1.2038403333479172E-5	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999989021571449	WITHOUT_CLASSIFICATION	1.0978428551595755E-6	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999877810396588	WITHOUT_CLASSIFICATION	1.2218960341178471E-5	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999967613047295	WITHOUT_CLASSIFICATION	3.238695270528841E-6	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999983533406978	WITHOUT_CLASSIFICATION	1.6466593021723683E-6	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999992076846125	WITHOUT_CLASSIFICATION	7.923153875666965E-7	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999989371984387	WITHOUT_CLASSIFICATION	1.0628015613242263E-6	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9999990302130557	WITHOUT_CLASSIFICATION	9.697869442090887E-7	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999997714647696	WITHOUT_CLASSIFICATION	2.2853523031082582E-7	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9999999271047044	WITHOUT_CLASSIFICATION	7.289529557236129E-8	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.999999972720623	WITHOUT_CLASSIFICATION	2.7279376962223313E-8	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999990576323304	WITHOUT_CLASSIFICATION	9.423676695624935E-7	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999990576323304	WITHOUT_CLASSIFICATION	9.423676695624935E-7	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9999987742336238	WITHOUT_CLASSIFICATION	1.2257663762144677E-6	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999988204251725	WITHOUT_CLASSIFICATION	1.1795748274819888E-6	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999988204251725	WITHOUT_CLASSIFICATION	1.1795748274819888E-6	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999993784547295	WITHOUT_CLASSIFICATION	6.215452704463503E-7	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9999997308933501	WITHOUT_CLASSIFICATION	2.691066498141109E-7	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9999299505072222	WITHOUT_CLASSIFICATION	7.00494927777521E-5	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9999992201273599	WITHOUT_CLASSIFICATION	7.798726401118988E-7	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.999998276261455	WITHOUT_CLASSIFICATION	1.7237385449101722E-6	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999998365460085	WITHOUT_CLASSIFICATION	1.6345399150060293E-7	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9999998085406595	WITHOUT_CLASSIFICATION	1.9145934046934263E-7	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999826553111811	WITHOUT_CLASSIFICATION	1.734468881878904E-5	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999935751336249	WITHOUT_CLASSIFICATION	6.424866375062917E-6	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999896306655888	WITHOUT_CLASSIFICATION	1.0369334411302425E-5	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999846679211881	WITHOUT_CLASSIFICATION	1.533207881187179E-5	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999769789888519	WITHOUT_CLASSIFICATION	2.3021011148130022E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999922538357299	WITHOUT_CLASSIFICATION	7.746164270188028E-6	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999999823949015	WITHOUT_CLASSIFICATION	1.7605098448489866E-8	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999989021571449	WITHOUT_CLASSIFICATION	1.0978428551595755E-6	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999907253968039	WITHOUT_CLASSIFICATION	9.27460319620659E-6	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999997569657922	WITHOUT_CLASSIFICATION	2.430342077918959E-7	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999887239117768	WITHOUT_CLASSIFICATION	1.1276088223184866E-5	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999887239117768	WITHOUT_CLASSIFICATION	1.1276088223184866E-5	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999999038955685	WITHOUT_CLASSIFICATION	9.610443159633428E-8	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999996394643702	WITHOUT_CLASSIFICATION	3.6053562989923146E-7	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999999378456799	WITHOUT_CLASSIFICATION	6.215432008750593E-8	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.999995526905275	WITHOUT_CLASSIFICATION	4.4730947249483435E-6	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999999998507335	WITHOUT_CLASSIFICATION	1.492665144282254E-10	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999990407936254	WITHOUT_CLASSIFICATION	9.592063745471063E-7	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999972572981602	WITHOUT_CLASSIFICATION	2.742701839650089E-6	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999985795195805	WITHOUT_CLASSIFICATION	1.4204804194878743E-6	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999961222109918	WITHOUT_CLASSIFICATION	3.877789008173518E-6	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999995076489125	WITHOUT_CLASSIFICATION	4.923510874243689E-7	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999574958457097	WITHOUT_CLASSIFICATION	4.250415429030859E-5	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999886470709803	WITHOUT_CLASSIFICATION	1.1352929019644507E-5	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9322370776437661	WITHOUT_CLASSIFICATION	0.067762922356234	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999994201325401	WITHOUT_CLASSIFICATION	5.798674599411691E-7	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999999839647284	WITHOUT_CLASSIFICATION	1.603527156136441E-8	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999999692179989	WITHOUT_CLASSIFICATION	3.0782001115375914E-8	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999840804819677	WITHOUT_CLASSIFICATION	1.591951803225357E-5	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999544887989976	WITHOUT_CLASSIFICATION	4.5511201002251856E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999986092664889	WITHOUT_CLASSIFICATION	1.3907335110698163E-6	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999202463412	WITHOUT_CLASSIFICATION	7.975365873300937E-8	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999985516337282	WITHOUT_CLASSIFICATION	1.448366271816246E-6	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999899590908042	WITHOUT_CLASSIFICATION	1.0040909195766225E-5	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999999556908906	WITHOUT_CLASSIFICATION	4.430910933940493E-8	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999842111137	WITHOUT_CLASSIFICATION	1.5788886331178438E-8	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999882297757644	WITHOUT_CLASSIFICATION	1.1770224235588914E-5	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999962249968462	WITHOUT_CLASSIFICATION	3.7750031538081264E-6	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999995047486355	WITHOUT_CLASSIFICATION	4.952513644301392E-7	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999953559805262	WITHOUT_CLASSIFICATION	4.64401947374903E-6	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999999942903871	WITHOUT_CLASSIFICATION	5.709612950466688E-9	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999999988056905	WITHOUT_CLASSIFICATION	1.194309563934783E-9	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999999315752874	WITHOUT_CLASSIFICATION	6.842471255401282E-8	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999261454585143	WITHOUT_CLASSIFICATION	7.385454148558E-5	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999971992261609	WITHOUT_CLASSIFICATION	2.800773839039505E-6	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999998492909281	WITHOUT_CLASSIFICATION	1.5070907185065605E-7	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999998690070053	WITHOUT_CLASSIFICATION	1.3099299471486353E-7	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.9999988248358372	WITHOUT_CLASSIFICATION	1.175164162766683E-6	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999953559805262	WITHOUT_CLASSIFICATION	4.64401947374903E-6	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999938851979	WITHOUT_CLASSIFICATION	6.114802101378428E-9	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999998690070053	WITHOUT_CLASSIFICATION	1.3099299471486353E-7	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999643011208568	WITHOUT_CLASSIFICATION	3.569887914317239E-5	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999995806166343	WITHOUT_CLASSIFICATION	4.193833656956011E-7	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999853394882392	WITHOUT_CLASSIFICATION	1.4660511760840346E-5	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999993940255997	WITHOUT_CLASSIFICATION	6.059744003112074E-7	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999997847066548	WITHOUT_CLASSIFICATION	2.1529334508666738E-7	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999894178320021	WITHOUT_CLASSIFICATION	1.0582167997836508E-5	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999894178320021	WITHOUT_CLASSIFICATION	1.0582167997836508E-5	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9960495472604258	WITHOUT_CLASSIFICATION	0.00395045273957414	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.999990473980811	WITHOUT_CLASSIFICATION	9.526019189098117E-6	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9998883747691828	WITHOUT_CLASSIFICATION	1.1162523081724428E-4	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9998883747691828	WITHOUT_CLASSIFICATION	1.1162523081724428E-4	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999987260127841	WITHOUT_CLASSIFICATION	1.2739872158915042E-6	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9997727200708689	WITHOUT_CLASSIFICATION	2.2727992913105613E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999718966900993	WITHOUT_CLASSIFICATION	2.8103309900633274E-5	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999718966900993	WITHOUT_CLASSIFICATION	2.8103309900633274E-5	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999898530654647	WITHOUT_CLASSIFICATION	1.0146934535290666E-5	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999972538426101	WITHOUT_CLASSIFICATION	2.7461573899597683E-6	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.999999963319357	WITHOUT_CLASSIFICATION	3.668064300503804E-8	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999984522152251	WITHOUT_CLASSIFICATION	1.5477847749679254E-6	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999972436275231	WITHOUT_CLASSIFICATION	2.7563724769219167E-6	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999404084542514	WITHOUT_CLASSIFICATION	5.9591545748740774E-5	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999998990244182	WITHOUT_CLASSIFICATION	1.009755818019225E-7	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999988041700401	WITHOUT_CLASSIFICATION	1.1958299599029894E-6	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.999993784242647	WITHOUT_CLASSIFICATION	6.215757353107613E-6	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999917884279549	WITHOUT_CLASSIFICATION	8.21157204521303E-6	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9999910976687717	WITHOUT_CLASSIFICATION	8.90233122828978E-6	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999931617956589	WITHOUT_CLASSIFICATION	6.838204341067446E-6	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999999266654612	WITHOUT_CLASSIFICATION	7.33345388154237E-8	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999859288215134	WITHOUT_CLASSIFICATION	1.4071178486647716E-5	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999617510120736	WITHOUT_CLASSIFICATION	3.824898792644704E-5	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999998411934755	WITHOUT_CLASSIFICATION	1.58806524573513E-7	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999996982594966	WITHOUT_CLASSIFICATION	3.017405033321582E-7	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999986148819228	WITHOUT_CLASSIFICATION	1.3851180771688947E-6	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999995447112715	WITHOUT_CLASSIFICATION	4.552887285308886E-7	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.8606676808136434	WITHOUT_CLASSIFICATION	0.1393323191863565	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999988182010074	WITHOUT_CLASSIFICATION	1.181798992463721E-6	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999996068416961	WITHOUT_CLASSIFICATION	3.931583039518533E-7	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999993374950857	WITHOUT_CLASSIFICATION	6.625049142905092E-7	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999980794121412	WITHOUT_CLASSIFICATION	1.9205878587767454E-6	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.999997974845049	WITHOUT_CLASSIFICATION	2.0251549509273736E-6	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999995655845292	WITHOUT_CLASSIFICATION	4.344154708126326E-7	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999996206868703	WITHOUT_CLASSIFICATION	3.7931312960567567E-7	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9999969682224314	WITHOUT_CLASSIFICATION	3.0317775686123615E-6	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999993614007623	WITHOUT_CLASSIFICATION	6.385992377995308E-7	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999993614007623	WITHOUT_CLASSIFICATION	6.385992377995308E-7	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999999995633999	WITHOUT_CLASSIFICATION	4.366001275277228E-10	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.999999991937346	WITHOUT_CLASSIFICATION	8.062654081817837E-9	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999999241016077	WITHOUT_CLASSIFICATION	7.589839238507985E-8	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999988192229686	WITHOUT_CLASSIFICATION	1.1807770313226772E-6	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999964352786634	WITHOUT_CLASSIFICATION	3.5647213366272447E-6	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9999958305240664	WITHOUT_CLASSIFICATION	4.169475933532123E-6	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999910317125781	WITHOUT_CLASSIFICATION	8.968287421918015E-6	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999999542534425	WITHOUT_CLASSIFICATION	4.574655757334276E-8	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999999737085309	WITHOUT_CLASSIFICATION	2.6291469123762533E-8	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999999464714424	WITHOUT_CLASSIFICATION	5.352855753414359E-8	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999897349565281	WITHOUT_CLASSIFICATION	1.0265043471798832E-5	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.999999751963113	WITHOUT_CLASSIFICATION	2.4803688701338204E-7	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999937998989092	WITHOUT_CLASSIFICATION	6.200101090753838E-6	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999826894061975	WITHOUT_CLASSIFICATION	1.7310593802485236E-5	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999999685105732	WITHOUT_CLASSIFICATION	3.1489426888581675E-8	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999984405991247	WITHOUT_CLASSIFICATION	1.5594008753018897E-6	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999950813256948	WITHOUT_CLASSIFICATION	4.918674305121266E-6	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999938055807143	WITHOUT_CLASSIFICATION	6.194419285776379E-6	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9999990003680098	WITHOUT_CLASSIFICATION	9.99631990198486E-7	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999998071188102	WITHOUT_CLASSIFICATION	1.9288118978545594E-7	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999987261136715	WITHOUT_CLASSIFICATION	1.2738863285295262E-6	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999768445766166	WITHOUT_CLASSIFICATION	2.315542338338488E-5	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999998402230832	WITHOUT_CLASSIFICATION	1.5977691673729925E-7	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999997608143599	WITHOUT_CLASSIFICATION	2.3918564005538746E-7	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999855877341466	WITHOUT_CLASSIFICATION	1.4412265853507562E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999274492540123	WITHOUT_CLASSIFICATION	7.2550745987668E-5	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999999760564774	WITHOUT_CLASSIFICATION	2.3943522548579428E-8	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999989816792145	WITHOUT_CLASSIFICATION	1.018320785557579E-6	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9999976597855961	WITHOUT_CLASSIFICATION	2.340214403937651E-6	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9999990926076685	WITHOUT_CLASSIFICATION	9.073923315436989E-7	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999999767643392	WITHOUT_CLASSIFICATION	2.323566084237884E-8	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999978589256701	WITHOUT_CLASSIFICATION	2.141074329966908E-6	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999976890006163	WITHOUT_CLASSIFICATION	2.3109993837014826E-6	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9999970337185843	WITHOUT_CLASSIFICATION	2.966281415859492E-6	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999987496988987	WITHOUT_CLASSIFICATION	1.2503011012825261E-6	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999533836547778	WITHOUT_CLASSIFICATION	4.6616345222309434E-5	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999947209870363	WITHOUT_CLASSIFICATION	5.27901296363348E-6	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999822362002913	WITHOUT_CLASSIFICATION	1.7763799708727085E-5	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.999998877612855	WITHOUT_CLASSIFICATION	1.1223871450628228E-6	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999999949380357	WITHOUT_CLASSIFICATION	5.0619642323177425E-9	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999999722196016	WITHOUT_CLASSIFICATION	2.778039848541239E-8	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.999999418185656	WITHOUT_CLASSIFICATION	5.818143440863783E-7	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999927994299788	WITHOUT_CLASSIFICATION	7.200570021152509E-6	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999927994299788	WITHOUT_CLASSIFICATION	7.200570021152509E-6	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999893193706141	WITHOUT_CLASSIFICATION	1.0680629385855744E-5	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999999956774351	WITHOUT_CLASSIFICATION	4.322564875930488E-9	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9976964176920818	WITHOUT_CLASSIFICATION	0.002303582307918095	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.999999552413134	WITHOUT_CLASSIFICATION	4.475868660088361E-7	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9998338652185247	WITHOUT_CLASSIFICATION	1.6613478147537515E-4	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999803327900953	WITHOUT_CLASSIFICATION	1.966720990455037E-5	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9996705398814132	WITHOUT_CLASSIFICATION	3.2946011858677127E-4	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999666122541382	WITHOUT_CLASSIFICATION	3.3387745861755466E-5	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999948418107352	WITHOUT_CLASSIFICATION	5.158189264851838E-6	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9999981194992429	WITHOUT_CLASSIFICATION	1.8805007571017966E-6	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9999983281666571	WITHOUT_CLASSIFICATION	1.6718333429394208E-6	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.9999853615424066	WITHOUT_CLASSIFICATION	1.4638457593430256E-5	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9999969632578398	WITHOUT_CLASSIFICATION	3.0367421600934965E-6	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999999125704273	WITHOUT_CLASSIFICATION	8.742957272547438E-8	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999982386615319	WITHOUT_CLASSIFICATION	1.7613384680713244E-6	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9999927597580169	WITHOUT_CLASSIFICATION	7.240241983077997E-6	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999994595723664	WITHOUT_CLASSIFICATION	5.404276335905424E-7	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9999891105578249	WITHOUT_CLASSIFICATION	1.0889442175007108E-5	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999982971982321	WITHOUT_CLASSIFICATION	1.7028017679658331E-6	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9999599549714322	WITHOUT_CLASSIFICATION	4.0045028567676464E-5	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999918015980274	WITHOUT_CLASSIFICATION	8.198401972630664E-6	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999288998344966	WITHOUT_CLASSIFICATION	7.110016550332465E-5	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999938904917937	WITHOUT_CLASSIFICATION	6.109508206339534E-6	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999941565735421	WITHOUT_CLASSIFICATION	5.8434264579048366E-6	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999998536600541	WITHOUT_CLASSIFICATION	1.4633994583650137E-7	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999996031096805	WITHOUT_CLASSIFICATION	3.9689031953470384E-7	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999983915652553	WITHOUT_CLASSIFICATION	1.6084347448168965E-6	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999989522551376	WITHOUT_CLASSIFICATION	1.0477448624547814E-6	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999998544576589	WITHOUT_CLASSIFICATION	1.4554234108201684E-7	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9999909419311802	WITHOUT_CLASSIFICATION	9.058068819817399E-6	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999997447894424	WITHOUT_CLASSIFICATION	2.552105575213768E-7	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999999898452278	WITHOUT_CLASSIFICATION	1.0154772266258819E-8	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999952474574948	WITHOUT_CLASSIFICATION	4.752542505196168E-6	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9977374154363787	WITHOUT_CLASSIFICATION	0.002262584563621224	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999822362002913	WITHOUT_CLASSIFICATION	1.7763799708727085E-5	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.999994078501375	WITHOUT_CLASSIFICATION	5.921498625070206E-6	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.999999920462509	WITHOUT_CLASSIFICATION	7.953749098605736E-8	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.999999920462509	WITHOUT_CLASSIFICATION	7.953749098605736E-8	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999999512085698	WITHOUT_CLASSIFICATION	4.879143031179087E-8	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999999791911869	WITHOUT_CLASSIFICATION	2.080881306253892E-8	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.999980497262429	WITHOUT_CLASSIFICATION	1.9502737570929002E-5	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.9999247438461943	WITHOUT_CLASSIFICATION	7.52561538056271E-5	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9950744704181081	WITHOUT_CLASSIFICATION	0.004925529581891756	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.995849528144812	WITHOUT_CLASSIFICATION	0.004150471855188002	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9959232613848993	WITHOUT_CLASSIFICATION	0.00407673861510068	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9972630712739169	WITHOUT_CLASSIFICATION	0.002736928726083205	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9891995497440659	WITHOUT_CLASSIFICATION	0.010800450255934065	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9921964669245595	WITHOUT_CLASSIFICATION	0.007803533075440501	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9928616687957397	WITHOUT_CLASSIFICATION	0.007138331204260318	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9764827472833765	WITHOUT_CLASSIFICATION	0.023517252716623603	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9989404845438746	WITHOUT_CLASSIFICATION	0.0010595154561253287	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999985762646951	WITHOUT_CLASSIFICATION	1.423735304896559E-6	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999999997303788	WITHOUT_CLASSIFICATION	2.6962121036558463E-10	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9998270184224325	WITHOUT_CLASSIFICATION	1.7298157756748776E-4	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9989402977645016	WITHOUT_CLASSIFICATION	0.0010597022354984138	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9832358621520562	WITHOUT_CLASSIFICATION	0.016764137847943856	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9939115935417989	WITHOUT_CLASSIFICATION	0.006088406458201014	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9956068160236679	WITHOUT_CLASSIFICATION	0.004393183976332156	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9971934402645953	WITHOUT_CLASSIFICATION	0.00280655973540462	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9948009392376268	WITHOUT_CLASSIFICATION	0.005199060762373174	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999994074548243	WITHOUT_CLASSIFICATION	5.925451757264774E-7	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999998937289667	WITHOUT_CLASSIFICATION	1.0627103333786482E-7	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999999979852778	WITHOUT_CLASSIFICATION	2.0147220815261594E-9	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9986656759494723	WITHOUT_CLASSIFICATION	0.001334324050527624	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999992215126089	WITHOUT_CLASSIFICATION	7.784873911389989E-7	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.999999347806247	WITHOUT_CLASSIFICATION	6.521937530045554E-7	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999940722419717	WITHOUT_CLASSIFICATION	5.9277580283021045E-6	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999985025060196	WITHOUT_CLASSIFICATION	1.4974939803515196E-6	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9999999305021294	WITHOUT_CLASSIFICATION	6.949787063613713E-8	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999991593313001	WITHOUT_CLASSIFICATION	8.406686999460773E-7	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9999997136507269	WITHOUT_CLASSIFICATION	2.863492730098214E-7	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999999951975097	WITHOUT_CLASSIFICATION	4.802490392242287E-9	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999961368997142	WITHOUT_CLASSIFICATION	3.8631002857809165E-6	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999979811919759	WITHOUT_CLASSIFICATION	2.018808024032712E-6	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999669825697	WITHOUT_CLASSIFICATION	3.301743034342451E-8	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9986656759494723	WITHOUT_CLASSIFICATION	0.001334324050527624	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999992215126089	WITHOUT_CLASSIFICATION	7.784873911389989E-7	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.999999347806247	WITHOUT_CLASSIFICATION	6.521937530045554E-7	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999985025060196	WITHOUT_CLASSIFICATION	1.4974939803515196E-6	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9998976237692736	WITHOUT_CLASSIFICATION	1.023762307263944E-4	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999695329793	WITHOUT_CLASSIFICATION	3.0467020677869526E-8	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999897372138661	WITHOUT_CLASSIFICATION	1.0262786133923498E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999978669946106	WITHOUT_CLASSIFICATION	2.1330053894823168E-6	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999889721521	WITHOUT_CLASSIFICATION	1.1027847899999388E-5	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.999999988814512	WITHOUT_CLASSIFICATION	1.1185488107719756E-8	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999992618240656	WITHOUT_CLASSIFICATION	7.381759343738703E-7	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999989625267841	WITHOUT_CLASSIFICATION	1.0374732159848138E-6	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999995952018343	WITHOUT_CLASSIFICATION	4.047981656278955E-7	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999848925551089	WITHOUT_CLASSIFICATION	1.5107444891093872E-5	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999994572113984	WITHOUT_CLASSIFICATION	5.427886015640692E-7	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999993677020319	WITHOUT_CLASSIFICATION	6.322979680736243E-7	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999999515154819	WITHOUT_CLASSIFICATION	4.848451812774386E-8	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999996150492418	WITHOUT_CLASSIFICATION	3.849507581685583E-7	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9999946981043971	WITHOUT_CLASSIFICATION	5.301895602920054E-6	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9999838297143377	WITHOUT_CLASSIFICATION	1.6170285662246305E-5	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999999382268103	WITHOUT_CLASSIFICATION	6.177318964336713E-8	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999738986004317	WITHOUT_CLASSIFICATION	2.6101399568255368E-5	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999996276057802	WITHOUT_CLASSIFICATION	3.7239421983812504E-7	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999669825697	WITHOUT_CLASSIFICATION	3.301743034342451E-8	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999695329793	WITHOUT_CLASSIFICATION	3.0467020677869526E-8	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999897372138661	WITHOUT_CLASSIFICATION	1.0262786133923498E-5	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999889721521	WITHOUT_CLASSIFICATION	1.1027847899999388E-5	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.999999988814512	WITHOUT_CLASSIFICATION	1.1185488107719756E-8	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999992618240656	WITHOUT_CLASSIFICATION	7.381759343738703E-7	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999989625267841	WITHOUT_CLASSIFICATION	1.0374732159848138E-6	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999978344397166	WITHOUT_CLASSIFICATION	2.1655602834525952E-6	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999964476841058	WITHOUT_CLASSIFICATION	3.552315894358338E-6	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999998123882613	WITHOUT_CLASSIFICATION	1.876117387362197E-7	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999936769914	WITHOUT_CLASSIFICATION	6.323008584205611E-9	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999997372944261	WITHOUT_CLASSIFICATION	2.627055739252348E-7	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999997372944261	WITHOUT_CLASSIFICATION	2.627055739252348E-7	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9999998896965102	WITHOUT_CLASSIFICATION	1.1030348977386075E-7	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999531131222661	WITHOUT_CLASSIFICATION	4.688687773392844E-5	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999998047877948	WITHOUT_CLASSIFICATION	1.9521220517073928E-7	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999986027991659	WITHOUT_CLASSIFICATION	1.3972008341234254E-6	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999998532234765	WITHOUT_CLASSIFICATION	1.4677652352730928E-7	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999844238111595	WITHOUT_CLASSIFICATION	1.5576188840449898E-5	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9999992378538309	WITHOUT_CLASSIFICATION	7.621461690254173E-7	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999999208650556	WITHOUT_CLASSIFICATION	7.913494444067058E-8	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999999591088526	WITHOUT_CLASSIFICATION	4.089114739516348E-8	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999659032780207	WITHOUT_CLASSIFICATION	3.40967219792443E-5	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999478990995536	WITHOUT_CLASSIFICATION	5.210090044633946E-5	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.999943236888191	WITHOUT_CLASSIFICATION	5.6763111808974926E-5	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999929711071243	WITHOUT_CLASSIFICATION	7.028892875668236E-6	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999977510547403	WITHOUT_CLASSIFICATION	2.248945259789077E-6	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999945189522899	WITHOUT_CLASSIFICATION	5.481047710212042E-6	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999979999125491	WITHOUT_CLASSIFICATION	2.000087450875589E-6	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9999996765108673	WITHOUT_CLASSIFICATION	3.2348913266373456E-7	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999979819647543	WITHOUT_CLASSIFICATION	2.0180352456164073E-6	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999992536613608	WITHOUT_CLASSIFICATION	7.463386391966256E-7	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999734447932319	WITHOUT_CLASSIFICATION	2.655520676797184E-5	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.6655449557465125	IMPLEMENTATION	0.3344550442534875	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.999999954995975	WITHOUT_CLASSIFICATION	4.5004024997533085E-8	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.999999980068368	WITHOUT_CLASSIFICATION	1.9931631970212033E-8	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9689426524057075	IMPLEMENTATION	0.031057347594292465	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999867925029725	WITHOUT_CLASSIFICATION	1.320749702751043E-5	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999900380633093	WITHOUT_CLASSIFICATION	9.961936690698843E-6	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999984495473	WITHOUT_CLASSIFICATION	1.5504526402838068E-9	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999999476692498	WITHOUT_CLASSIFICATION	5.233075010333713E-8	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9999968985911434	WITHOUT_CLASSIFICATION	3.101408856601114E-6	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999867925029725	WITHOUT_CLASSIFICATION	1.320749702751043E-5	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999900380633093	WITHOUT_CLASSIFICATION	9.961936690698843E-6	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999977510547403	WITHOUT_CLASSIFICATION	2.248945259789077E-6	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999340292211535	WITHOUT_CLASSIFICATION	6.59707788464743E-5	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999975270057205	WITHOUT_CLASSIFICATION	2.4729942794194524E-6	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999970194233883	WITHOUT_CLASSIFICATION	2.980576611827049E-6	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999997728505797	WITHOUT_CLASSIFICATION	2.2714942029012078E-7	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999944859155675	WITHOUT_CLASSIFICATION	5.514084432488674E-6	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999957842792575	WITHOUT_CLASSIFICATION	4.215720742576332E-6	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999657101636259	WITHOUT_CLASSIFICATION	3.428983637415448E-5	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999901304952944	WITHOUT_CLASSIFICATION	9.869504705605674E-6	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9997059641655365	WITHOUT_CLASSIFICATION	2.9403583446356335E-4	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999999973285233	WITHOUT_CLASSIFICATION	2.6714767107566097E-9	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999997965010674	WITHOUT_CLASSIFICATION	2.034989325905386E-7	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999338391864001	WITHOUT_CLASSIFICATION	6.616081359987336E-5	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.999998466404219	WITHOUT_CLASSIFICATION	1.533595780988546E-6	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999999979214502	WITHOUT_CLASSIFICATION	2.0785498381310765E-9	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999999986705493	WITHOUT_CLASSIFICATION	1.3294507153282068E-9	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999980237589925	WITHOUT_CLASSIFICATION	1.97624100746231E-6	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999875576309892	WITHOUT_CLASSIFICATION	1.2442369010823577E-5	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999905606862858	WITHOUT_CLASSIFICATION	9.439313714218613E-6	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9984777616786434	WITHOUT_CLASSIFICATION	0.001522238321356459	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999999574271247	WITHOUT_CLASSIFICATION	4.257287525148949E-8	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999999556450048	WITHOUT_CLASSIFICATION	4.435499527126094E-8	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999980922624954	WITHOUT_CLASSIFICATION	1.907737504642928E-6	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999948825597875	WITHOUT_CLASSIFICATION	5.117440212500832E-6	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999998333794531	WITHOUT_CLASSIFICATION	1.6662054685544233E-7	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999999880248296	WITHOUT_CLASSIFICATION	1.1975170314900775E-8	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.999999793576604	WITHOUT_CLASSIFICATION	2.0642339604631711E-7	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.999988472806192	WITHOUT_CLASSIFICATION	1.1527193808098359E-5	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999631281566884	WITHOUT_CLASSIFICATION	3.6871843311478375E-5	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999976799052323	WITHOUT_CLASSIFICATION	2.3200947677893252E-6	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999999998203288	WITHOUT_CLASSIFICATION	1.7967112288000325E-10	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999967467707046	WITHOUT_CLASSIFICATION	3.253229295476033E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9987672795941497	WITHOUT_CLASSIFICATION	0.0012327204058503365	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9987672795941497	WITHOUT_CLASSIFICATION	0.0012327204058503365	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999929711071243	WITHOUT_CLASSIFICATION	7.028892875668236E-6	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999999855503863	WITHOUT_CLASSIFICATION	1.4449613794549042E-8	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9998256989283899	WITHOUT_CLASSIFICATION	1.7430107161013516E-4	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999997831445471	WITHOUT_CLASSIFICATION	2.168554528547874E-7	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999936339583293	WITHOUT_CLASSIFICATION	6.366041670710036E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999936339583293	WITHOUT_CLASSIFICATION	6.366041670710036E-6	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999996984209333	WITHOUT_CLASSIFICATION	3.015790666941456E-7	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999943252384578	WITHOUT_CLASSIFICATION	5.674761542226187E-6	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999979923169654	WITHOUT_CLASSIFICATION	2.007683034591686E-6	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999994284169136	WITHOUT_CLASSIFICATION	5.715830864538582E-7	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999999936129074	WITHOUT_CLASSIFICATION	6.387092716546653E-9	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999999363438472	WITHOUT_CLASSIFICATION	6.365615279330227E-8	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999999405714214	WITHOUT_CLASSIFICATION	5.942857863053643E-8	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9997933727638385	WITHOUT_CLASSIFICATION	2.06627236161434E-4	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999998655983356	WITHOUT_CLASSIFICATION	1.3440166436816482E-7	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999917435194378	WITHOUT_CLASSIFICATION	8.256480562172345E-6	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999989739254878	WITHOUT_CLASSIFICATION	1.0260745123307607E-6	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999994918783507	WITHOUT_CLASSIFICATION	5.081216493719272E-7	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999992273179449	WITHOUT_CLASSIFICATION	7.726820552148596E-7	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999999417177162	WITHOUT_CLASSIFICATION	5.8282283808790104E-8	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999999564148485	WITHOUT_CLASSIFICATION	4.3585151439770984E-8	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.9999983043612171	WITHOUT_CLASSIFICATION	1.6956387828874472E-6	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999990953808344	WITHOUT_CLASSIFICATION	9.046191655088526E-7	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999990953808344	WITHOUT_CLASSIFICATION	9.046191655088526E-7	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999947707773468	WITHOUT_CLASSIFICATION	5.229222653167014E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999947707773468	WITHOUT_CLASSIFICATION	5.229222653167014E-6	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999655391072	WITHOUT_CLASSIFICATION	3.44608928291085E-8	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999999870630327	WITHOUT_CLASSIFICATION	1.2936967264122988E-8	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999999957382054	WITHOUT_CLASSIFICATION	4.26179453472847E-9	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9927046859934848	WITHOUT_CLASSIFICATION	0.007295314006515185	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999998972952842	WITHOUT_CLASSIFICATION	1.0270471582236197E-7	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999979733437697	WITHOUT_CLASSIFICATION	2.0266562302943993E-6	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999958698327323	WITHOUT_CLASSIFICATION	4.1301672678464525E-6	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999994918783507	WITHOUT_CLASSIFICATION	5.081216493719272E-7	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999992273179449	WITHOUT_CLASSIFICATION	7.726820552148596E-7	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999999564148485	WITHOUT_CLASSIFICATION	4.3585151439770984E-8	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999930693027738	WITHOUT_CLASSIFICATION	6.930697226274071E-6	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999949765809992	WITHOUT_CLASSIFICATION	5.023419000782272E-6	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999992188802291	WITHOUT_CLASSIFICATION	7.811197709299661E-7	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999913666997142	WITHOUT_CLASSIFICATION	8.633300285777667E-6	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999998995649941	WITHOUT_CLASSIFICATION	1.0043500582615573E-7	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999999739261086	WITHOUT_CLASSIFICATION	2.6073891433927727E-8	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999998768362802	WITHOUT_CLASSIFICATION	1.231637198315939E-7	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999986765382328	WITHOUT_CLASSIFICATION	1.3234617671385346E-6	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999995057027052	WITHOUT_CLASSIFICATION	4.942972948387349E-7	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999988108587	WITHOUT_CLASSIFICATION	1.18914135763643E-9	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999963695912261	WITHOUT_CLASSIFICATION	3.6304087738937044E-6	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999995659360665	WITHOUT_CLASSIFICATION	4.34063933380805E-7	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999992840431572	WITHOUT_CLASSIFICATION	7.159568427156588E-7	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999998677367016	WITHOUT_CLASSIFICATION	1.322632984136605E-7	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9995445551688896	WITHOUT_CLASSIFICATION	4.5544483111035436E-4	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999999765540356	WITHOUT_CLASSIFICATION	2.3445964287474097E-8	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999998786481725	WITHOUT_CLASSIFICATION	1.2135182742275777E-7	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9922905816259278	WITHOUT_CLASSIFICATION	0.007709418374072276	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999902537474641	WITHOUT_CLASSIFICATION	9.74625253596941E-6	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999999871078389	WITHOUT_CLASSIFICATION	1.2892161083110923E-8	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999999942630013	WITHOUT_CLASSIFICATION	5.7369986351368175E-9	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999760902591085	WITHOUT_CLASSIFICATION	2.390974089148721E-5	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999993334861523	WITHOUT_CLASSIFICATION	6.66513847702534E-7	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999996199899287	WITHOUT_CLASSIFICATION	3.800100713060322E-7	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999804202737315	WITHOUT_CLASSIFICATION	1.957972626851278E-5	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999981233414608	WITHOUT_CLASSIFICATION	1.8766585392510311E-6	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9998668835285901	WITHOUT_CLASSIFICATION	1.3311647140984198E-4	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999749553836458	WITHOUT_CLASSIFICATION	2.5044616354309665E-5	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999999998977679	WITHOUT_CLASSIFICATION	1.0223207390093928E-10	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999953269657494	WITHOUT_CLASSIFICATION	4.6730342505190155E-6	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999997752861375	WITHOUT_CLASSIFICATION	2.2471386251601394E-7	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.999999126031573	WITHOUT_CLASSIFICATION	8.739684269433132E-7	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999975408807293	WITHOUT_CLASSIFICATION	2.459119270674177E-6	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999995316120159	WITHOUT_CLASSIFICATION	4.6838798404508907E-7	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999903156414509	WITHOUT_CLASSIFICATION	9.684358549024461E-6	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.999999161064479	WITHOUT_CLASSIFICATION	8.389355210130516E-7	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999882203684572	WITHOUT_CLASSIFICATION	1.1779631542791802E-5	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.999996011686471	WITHOUT_CLASSIFICATION	3.988313529050434E-6	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999992678248286	WITHOUT_CLASSIFICATION	7.321751712696045E-7	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999999623405692	WITHOUT_CLASSIFICATION	3.7659430873629317E-8	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999995102104445	WITHOUT_CLASSIFICATION	4.897895554301352E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9998256989283899	WITHOUT_CLASSIFICATION	1.7430107161013516E-4	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999882203684572	WITHOUT_CLASSIFICATION	1.1779631542791802E-5	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999989920771696	WITHOUT_CLASSIFICATION	1.0079228304239766E-6	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999992267976896	WITHOUT_CLASSIFICATION	7.732023104899048E-7	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999736792817981	WITHOUT_CLASSIFICATION	2.6320718201816455E-5	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999500995436814	WITHOUT_CLASSIFICATION	4.990045631866025E-5	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999500995436814	WITHOUT_CLASSIFICATION	4.990045631866025E-5	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9986834851536285	WITHOUT_CLASSIFICATION	0.0013165148463715316	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999850554798282	WITHOUT_CLASSIFICATION	1.4944520171887243E-5	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999339932279004	WITHOUT_CLASSIFICATION	6.600677209956735E-5	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999999847837164	WITHOUT_CLASSIFICATION	1.5216283548689288E-8	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9982331532563058	WITHOUT_CLASSIFICATION	0.0017668467436941827	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999769415256241	WITHOUT_CLASSIFICATION	2.3058474375930856E-5	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999999374344452	WITHOUT_CLASSIFICATION	6.256555484179545E-8	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999935772486656	WITHOUT_CLASSIFICATION	6.422751334455975E-6	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999079133495	WITHOUT_CLASSIFICATION	9.208665056103416E-8	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999079133495	WITHOUT_CLASSIFICATION	9.208665056103416E-8	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.999998974145733	WITHOUT_CLASSIFICATION	1.0258542669473052E-6	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999491939309986	WITHOUT_CLASSIFICATION	5.080606900139815E-5	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999998513302406	WITHOUT_CLASSIFICATION	1.4866975944608135E-7	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9999995893440068	WITHOUT_CLASSIFICATION	4.10655993172681E-7	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999997737525411	WITHOUT_CLASSIFICATION	2.2624745878919197E-7	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999999398199759	WITHOUT_CLASSIFICATION	6.018002409026524E-8	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999999643388795	WITHOUT_CLASSIFICATION	3.566112048877787E-8	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999999959381778	WITHOUT_CLASSIFICATION	4.061822242287782E-9	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9999993345314006	WITHOUT_CLASSIFICATION	6.654685994714126E-7	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999999906915116	WITHOUT_CLASSIFICATION	9.308488380774612E-9	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999858055081725	WITHOUT_CLASSIFICATION	1.4194491827600864E-5	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.999999436790465	WITHOUT_CLASSIFICATION	5.632095350197655E-7	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999602421214604	WITHOUT_CLASSIFICATION	3.975787853965066E-5	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997494824442	WITHOUT_CLASSIFICATION	2.505175558276269E-7	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997494824442	WITHOUT_CLASSIFICATION	2.505175558276269E-7	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999999965785477	WITHOUT_CLASSIFICATION	3.421452287796164E-9	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999989625267841	WITHOUT_CLASSIFICATION	1.0374732159848138E-6	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999999967000359	WITHOUT_CLASSIFICATION	3.299964142956467E-9	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999999003647425	WITHOUT_CLASSIFICATION	9.963525740292331E-8	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999991154754	WITHOUT_CLASSIFICATION	8.845246251149244E-10	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999994660573893	WITHOUT_CLASSIFICATION	5.339426107000962E-7	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999992709045635	WITHOUT_CLASSIFICATION	7.290954364753556E-7	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.999994210720828	WITHOUT_CLASSIFICATION	5.7892791719419656E-6	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999736672106874	WITHOUT_CLASSIFICATION	2.6332789312574514E-5	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9999882974802136	WITHOUT_CLASSIFICATION	1.1702519786375892E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999421728868383	WITHOUT_CLASSIFICATION	5.782711316166945E-5	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999998170258966	WITHOUT_CLASSIFICATION	1.829741034210613E-7	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9996756545469465	WITHOUT_CLASSIFICATION	3.2434545305349714E-4	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999999967765517	WITHOUT_CLASSIFICATION	3.223448314747761E-9	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999992389454362	WITHOUT_CLASSIFICATION	7.610545637476644E-7	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999999663017883	WITHOUT_CLASSIFICATION	3.369821168180723E-8	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.999999586482481	WITHOUT_CLASSIFICATION	4.1351751907461875E-7	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.999999387908597	WITHOUT_CLASSIFICATION	6.12091403107045E-7	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999983241698528	WITHOUT_CLASSIFICATION	1.6758301472584296E-6	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.999870243562541	WITHOUT_CLASSIFICATION	1.2975643745909924E-4	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9999524488403955	WITHOUT_CLASSIFICATION	4.755115960447289E-5	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.999999555146081	WITHOUT_CLASSIFICATION	4.4485391900467927E-7	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9997903979121512	WITHOUT_CLASSIFICATION	2.096020878488299E-4	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999934783442653	WITHOUT_CLASSIFICATION	6.521655734755735E-6	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9989025989738988	IMPLEMENTATION	0.001097401026101295	WITHOUT_CLASSIFICATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999995347018054	WITHOUT_CLASSIFICATION	4.6529819467862806E-7	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.999998778544957	WITHOUT_CLASSIFICATION	1.2214550430919591E-6	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9999962159230915	WITHOUT_CLASSIFICATION	3.784076908574942E-6	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9999977667928587	WITHOUT_CLASSIFICATION	2.2332071413668017E-6	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9994931876696509	WITHOUT_CLASSIFICATION	5.068123303491503E-4	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999926998264796	WITHOUT_CLASSIFICATION	7.300173520376925E-6	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9999995299822513	WITHOUT_CLASSIFICATION	4.700177487915378E-7	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999986964903563	WITHOUT_CLASSIFICATION	1.3035096437571425E-6	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9982876900748674	WITHOUT_CLASSIFICATION	0.0017123099251325745	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999955527462886	WITHOUT_CLASSIFICATION	4.447253711355551E-6	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999988385602164	WITHOUT_CLASSIFICATION	1.1614397835488824E-6	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999972151283478	WITHOUT_CLASSIFICATION	2.784871652156182E-6	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999999194846496	WITHOUT_CLASSIFICATION	8.051535039812485E-8	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999999979383573	WITHOUT_CLASSIFICATION	2.0616427234690065E-9	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999999245381213	WITHOUT_CLASSIFICATION	7.546187873437516E-8	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999944706268687	WITHOUT_CLASSIFICATION	5.529373131198584E-6	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9977022286000712	WITHOUT_CLASSIFICATION	0.0022977713999288445	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9988551218738589	WITHOUT_CLASSIFICATION	0.0011448781261410841	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999746555165476	WITHOUT_CLASSIFICATION	2.5344483452407586E-5	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9999975429992826	WITHOUT_CLASSIFICATION	2.4570007174880323E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999862888662027	WITHOUT_CLASSIFICATION	1.3711133797379168E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999998227968272	WITHOUT_CLASSIFICATION	1.7720317284411525E-7	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999580057884	WITHOUT_CLASSIFICATION	4.199421153298786E-8	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999979178060294	WITHOUT_CLASSIFICATION	2.082193970565379E-6	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999867925029725	WITHOUT_CLASSIFICATION	1.320749702751043E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999867925029725	WITHOUT_CLASSIFICATION	1.320749702751043E-5	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.999995185936866	WITHOUT_CLASSIFICATION	4.8140631340003275E-6	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999991031627983	WITHOUT_CLASSIFICATION	8.968372016386631E-7	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999996449854859	WITHOUT_CLASSIFICATION	3.550145141534227E-7	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999999994746999	WITHOUT_CLASSIFICATION	5.253000492619345E-10	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999999551205504	WITHOUT_CLASSIFICATION	4.487944954769331E-8	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999999091358378	WITHOUT_CLASSIFICATION	9.086416217040195E-8	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999999987027267	WITHOUT_CLASSIFICATION	1.2972732780031144E-9	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999953812932	WITHOUT_CLASSIFICATION	4.6187067176293636E-9	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999996594736	WITHOUT_CLASSIFICATION	3.4052633419799724E-10	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999999853138615	WITHOUT_CLASSIFICATION	1.4686138565473155E-8	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999996856784358	WITHOUT_CLASSIFICATION	3.1432156420576223E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999996856784358	WITHOUT_CLASSIFICATION	3.1432156420576223E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999996856784358	WITHOUT_CLASSIFICATION	3.1432156420576223E-7	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.999999426060678	WITHOUT_CLASSIFICATION	5.739393219592119E-7	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999999920057397	WITHOUT_CLASSIFICATION	7.994260224219444E-9	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.999997649294909	WITHOUT_CLASSIFICATION	2.350705090958756E-6	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999998294080231	WITHOUT_CLASSIFICATION	1.7059197694097024E-7	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999998294080231	WITHOUT_CLASSIFICATION	1.7059197694097024E-7	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999986765920655	WITHOUT_CLASSIFICATION	1.3234079344693887E-6	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999710005138799	WITHOUT_CLASSIFICATION	2.8999486120197696E-5	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999999717785185	WITHOUT_CLASSIFICATION	2.8221481480323624E-8	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999981465032206	WITHOUT_CLASSIFICATION	1.853496779411047E-6	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999992999088702	WITHOUT_CLASSIFICATION	7.000911298313782E-7	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9996141622112529	WITHOUT_CLASSIFICATION	3.858377887471196E-4	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999994727469405	WITHOUT_CLASSIFICATION	5.272530595872998E-7	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999680324544532	WITHOUT_CLASSIFICATION	3.196754554681543E-5	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999999879208626	WITHOUT_CLASSIFICATION	1.2079137466476148E-8	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999999899098285	WITHOUT_CLASSIFICATION	1.0090171551113106E-8	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999999899098285	WITHOUT_CLASSIFICATION	1.0090171551113106E-8	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999994668333138	WITHOUT_CLASSIFICATION	5.331666863306359E-7	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999994565312537	WITHOUT_CLASSIFICATION	5.434687463604899E-7	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999995525512052	WITHOUT_CLASSIFICATION	4.4744879480052567E-7	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999993824874551	WITHOUT_CLASSIFICATION	6.175125448970048E-7	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999999701881933	WITHOUT_CLASSIFICATION	2.981180670502554E-8	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.999988699372798	WITHOUT_CLASSIFICATION	1.1300627202064486E-5	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999958324469611	WITHOUT_CLASSIFICATION	4.1675530389381E-6	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999486468312949	WITHOUT_CLASSIFICATION	5.135316870518162E-5	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999985831449558	WITHOUT_CLASSIFICATION	1.4168550442097206E-6	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9999983668653774	WITHOUT_CLASSIFICATION	1.6331346226756014E-6	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999778364088615	WITHOUT_CLASSIFICATION	2.216359113841027E-5	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999990460256866	WITHOUT_CLASSIFICATION	9.539743135231593E-7	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9999994771661528	WITHOUT_CLASSIFICATION	5.228338472295887E-7	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999671024649468	WITHOUT_CLASSIFICATION	3.289753505324343E-5	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9961316336082024	WITHOUT_CLASSIFICATION	0.0038683663917974155	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9995407564255007	WITHOUT_CLASSIFICATION	4.5924357449926047E-4	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999977049746173	WITHOUT_CLASSIFICATION	2.295025382651246E-6	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999949215711449	WITHOUT_CLASSIFICATION	5.078428855032914E-6	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999998805517359	WITHOUT_CLASSIFICATION	1.1944826415459707E-7	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999999652296191	WITHOUT_CLASSIFICATION	3.477038085504279E-8	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9995690557894495	WITHOUT_CLASSIFICATION	4.309442105503587E-4	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999801353764652	WITHOUT_CLASSIFICATION	1.986462353468401E-5	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999998493753827	WITHOUT_CLASSIFICATION	1.5062461728038167E-7	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999996438653906	WITHOUT_CLASSIFICATION	3.5613460934936466E-7	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999975117380063	WITHOUT_CLASSIFICATION	2.4882619936083815E-6	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999983684374286	WITHOUT_CLASSIFICATION	1.6315625714381012E-6	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999984046349526	WITHOUT_CLASSIFICATION	1.5953650474436184E-6	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999995091015768	WITHOUT_CLASSIFICATION	4.908984232929209E-7	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.999997820643567	WITHOUT_CLASSIFICATION	2.179356432975624E-6	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999975524723366	WITHOUT_CLASSIFICATION	2.4475276634354604E-6	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999976265218287	WITHOUT_CLASSIFICATION	2.373478171417887E-6	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999944760476711	WITHOUT_CLASSIFICATION	5.523952328846056E-6	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999992403307619	WITHOUT_CLASSIFICATION	7.596692381207346E-7	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999976265218287	WITHOUT_CLASSIFICATION	2.373478171417887E-6	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999889248068379	WITHOUT_CLASSIFICATION	1.1075193162077995E-5	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999989641709516	WITHOUT_CLASSIFICATION	1.0358290484301439E-6	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999678427371108	WITHOUT_CLASSIFICATION	3.2157262889145034E-5	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999905121128513	WITHOUT_CLASSIFICATION	9.487887148726865E-6	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999999352062917	WITHOUT_CLASSIFICATION	6.47937082834716E-8	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999994772995798	WITHOUT_CLASSIFICATION	5.227004200582514E-7	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999996561504932	WITHOUT_CLASSIFICATION	3.4384950672993107E-7	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999827366140508	WITHOUT_CLASSIFICATION	1.7263385949162976E-5	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999487507627636	WITHOUT_CLASSIFICATION	5.124923723646485E-5	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.999913419213348	WITHOUT_CLASSIFICATION	8.658078665191627E-5	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999186513305137	WITHOUT_CLASSIFICATION	8.134866948628841E-5	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999704690095599	WITHOUT_CLASSIFICATION	2.953099044014565E-5	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999348264584959	WITHOUT_CLASSIFICATION	6.517354150418166E-5	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9998633872015509	WITHOUT_CLASSIFICATION	1.3661279844910947E-4	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.999962589721747	WITHOUT_CLASSIFICATION	3.741027825296519E-5	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999822817751063	WITHOUT_CLASSIFICATION	1.7718224893675425E-5	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999670918158007	WITHOUT_CLASSIFICATION	3.2908184199271264E-5	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999946307302082	WITHOUT_CLASSIFICATION	5.369269791742022E-6	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999825638602531	WITHOUT_CLASSIFICATION	1.74361397468782E-5	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9994880201145635	WITHOUT_CLASSIFICATION	5.119798854363997E-4	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999701181511151	WITHOUT_CLASSIFICATION	2.9881848884885407E-5	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.999998166260313	WITHOUT_CLASSIFICATION	1.8337396870317457E-6	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999141496615084	WITHOUT_CLASSIFICATION	8.585033849164954E-5	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999260946078472	WITHOUT_CLASSIFICATION	7.39053921527608E-5	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999829424256336	WITHOUT_CLASSIFICATION	1.705757436637183E-5	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.999999995465017	WITHOUT_CLASSIFICATION	4.534982945201604E-9	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999985454326202	WITHOUT_CLASSIFICATION	1.4545673798122918E-6	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999995467535084	WITHOUT_CLASSIFICATION	4.532464915397855E-7	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9999417539658496	WITHOUT_CLASSIFICATION	5.824603415039473E-5	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9999128254255325	WITHOUT_CLASSIFICATION	8.717457446742634E-5	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9999995176787874	WITHOUT_CLASSIFICATION	4.823212125728247E-7	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9999392049662774	WITHOUT_CLASSIFICATION	6.07950337225607E-5	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9330958084507939	WITHOUT_CLASSIFICATION	0.0669041915492062	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.999999954563017	WITHOUT_CLASSIFICATION	4.543698309076685E-8	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999876881601714	WITHOUT_CLASSIFICATION	1.2311839828595284E-5	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9999998435741927	WITHOUT_CLASSIFICATION	1.5642580734031795E-7	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.999999719637837	WITHOUT_CLASSIFICATION	2.8036216309422835E-7	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9999990520429501	WITHOUT_CLASSIFICATION	9.479570498430158E-7	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999938310605536	WITHOUT_CLASSIFICATION	6.168939446332387E-6	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9999962392090519	WITHOUT_CLASSIFICATION	3.7607909482011303E-6	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9999916395322691	WITHOUT_CLASSIFICATION	8.360467730832252E-6	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999985926666843	WITHOUT_CLASSIFICATION	1.4073333156891347E-6	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9999027115829952	WITHOUT_CLASSIFICATION	9.728841700489156E-5	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9999997019093924	WITHOUT_CLASSIFICATION	2.98090607645058E-7	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999985689005176	WITHOUT_CLASSIFICATION	1.4310994823280374E-6	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9999998483575946	WITHOUT_CLASSIFICATION	1.5164240549253612E-7	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9999906406558057	WITHOUT_CLASSIFICATION	9.359344194312096E-6	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999998753136041	WITHOUT_CLASSIFICATION	1.2468639591987237E-7	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999997670803522	WITHOUT_CLASSIFICATION	2.3291964782936947E-7	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.9999997764439552	WITHOUT_CLASSIFICATION	2.2355604471821252E-7	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.999998006545637	WITHOUT_CLASSIFICATION	1.9934543631201764E-6	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999999930200647	WITHOUT_CLASSIFICATION	6.97993530052988E-9	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999798507026514	WITHOUT_CLASSIFICATION	2.0149297348545024E-5	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999997670803522	WITHOUT_CLASSIFICATION	2.3291964782936947E-7	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.6119041891965683	IMPLEMENTATION	0.38809581080343164	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.6119041891965683	IMPLEMENTATION	0.38809581080343164	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999993385836645	WITHOUT_CLASSIFICATION	6.614163356207114E-7	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999997853137976	WITHOUT_CLASSIFICATION	2.1468620239725058E-7	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999997590258557	WITHOUT_CLASSIFICATION	2.409741442565895E-7	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999997023350242	WITHOUT_CLASSIFICATION	2.976649757583958E-7	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999989228765116	WITHOUT_CLASSIFICATION	1.0771234883065574E-6	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999953196144261	WITHOUT_CLASSIFICATION	4.680385573973676E-6	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999995262916386	WITHOUT_CLASSIFICATION	4.7370836131418893E-7	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9999400857653347	IMPLEMENTATION	5.9914234665319304E-5	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999989196586182	WITHOUT_CLASSIFICATION	1.0803413818062906E-6	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999973981251444	WITHOUT_CLASSIFICATION	2.601874855633497E-6	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999999999988356	WITHOUT_CLASSIFICATION	1.1644656005918363E-12	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999995841648461	WITHOUT_CLASSIFICATION	4.1583515389399334E-7	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999990616815779	WITHOUT_CLASSIFICATION	9.383184220311741E-7	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999993281156125	WITHOUT_CLASSIFICATION	6.718843874332892E-7	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999993924145164	WITHOUT_CLASSIFICATION	6.075854835326792E-7	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999991282304301	WITHOUT_CLASSIFICATION	8.71769569999863E-7	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999999924964718	WITHOUT_CLASSIFICATION	7.503528232800716E-9	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999940024611503	WITHOUT_CLASSIFICATION	5.997538849744522E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999940024611503	WITHOUT_CLASSIFICATION	5.997538849744522E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999940024611503	WITHOUT_CLASSIFICATION	5.997538849744522E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999940024611503	WITHOUT_CLASSIFICATION	5.997538849744522E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999940024611503	WITHOUT_CLASSIFICATION	5.997538849744522E-6	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9999968953240042	WITHOUT_CLASSIFICATION	3.104675995809214E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999992916986299	WITHOUT_CLASSIFICATION	7.083013700330771E-7	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999774698051912	WITHOUT_CLASSIFICATION	2.2530194808755864E-5	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999937263289	WITHOUT_CLASSIFICATION	6.273671075148783E-9	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999956994192887	WITHOUT_CLASSIFICATION	4.300580711388127E-6	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999679139422	WITHOUT_CLASSIFICATION	3.208605786288905E-8	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999920071144462	WITHOUT_CLASSIFICATION	7.992885553691644E-6	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999975322723077	WITHOUT_CLASSIFICATION	2.467727692307363E-6	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.99999713403766	WITHOUT_CLASSIFICATION	2.865962340009099E-6	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9999970745551565	WITHOUT_CLASSIFICATION	2.925444843475549E-6	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9999971504331231	WITHOUT_CLASSIFICATION	2.849566876921075E-6	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9999975152494185	WITHOUT_CLASSIFICATION	2.4847505814548526E-6	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9999966509509558	WITHOUT_CLASSIFICATION	3.349049044227228E-6	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9999970944449634	WITHOUT_CLASSIFICATION	2.9055550365431617E-6	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9999965647211937	WITHOUT_CLASSIFICATION	3.4352788062038808E-6	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9999968336372786	WITHOUT_CLASSIFICATION	3.1663627214267907E-6	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9999958215385529	WITHOUT_CLASSIFICATION	4.178461447122538E-6	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9999971984445719	WITHOUT_CLASSIFICATION	2.801555428066069E-6	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9999967747649495	WITHOUT_CLASSIFICATION	3.225235050497051E-6	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999971784425784	WITHOUT_CLASSIFICATION	2.8215574215454416E-6	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9999963390567916	WITHOUT_CLASSIFICATION	3.660943208387655E-6	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9999962167599575	WITHOUT_CLASSIFICATION	3.7832400424567335E-6	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999968994981794	WITHOUT_CLASSIFICATION	3.1005018205906763E-6	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9999959777946721	WITHOUT_CLASSIFICATION	4.022205327861391E-6	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999966170206438	WITHOUT_CLASSIFICATION	3.3829793561355063E-6	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9999975654336146	WITHOUT_CLASSIFICATION	2.4345663853804384E-6	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9999970431950549	WITHOUT_CLASSIFICATION	2.9568049451253645E-6	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9999970125032868	WITHOUT_CLASSIFICATION	2.9874967132207296E-6	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999969670267991	WITHOUT_CLASSIFICATION	3.0329732010282245E-6	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.999998341535265	WITHOUT_CLASSIFICATION	1.6584647349254365E-6	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999972073567952	WITHOUT_CLASSIFICATION	2.792643204816009E-6	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.999997131788421	WITHOUT_CLASSIFICATION	2.8682115789909224E-6	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9999970105044828	WITHOUT_CLASSIFICATION	2.989495517327831E-6	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9999966502007364	WITHOUT_CLASSIFICATION	3.349799263601352E-6	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.999997549400552	WITHOUT_CLASSIFICATION	2.450599448037537E-6	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9999968425438635	WITHOUT_CLASSIFICATION	3.15745613663172E-6	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9999967217627042	WITHOUT_CLASSIFICATION	3.2782372959748283E-6	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9999966392409275	WITHOUT_CLASSIFICATION	3.3607590723911245E-6	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.9999979862655157	WITHOUT_CLASSIFICATION	2.0137344842986876E-6	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9999966333670147	WITHOUT_CLASSIFICATION	3.3666329853758224E-6	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9999962979127321	WITHOUT_CLASSIFICATION	3.7020872679378643E-6	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.999996403383397	WITHOUT_CLASSIFICATION	3.596616602957659E-6	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9999972132916194	WITHOUT_CLASSIFICATION	2.7867083806230027E-6	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9999963127704992	WITHOUT_CLASSIFICATION	3.6872295008111856E-6	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.999997778651394	WITHOUT_CLASSIFICATION	2.221348605853339E-6	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9999977605203523	WITHOUT_CLASSIFICATION	2.239479647674865E-6	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9999971034848616	WITHOUT_CLASSIFICATION	2.8965151383447956E-6	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9999980019725888	WITHOUT_CLASSIFICATION	1.9980274112002905E-6	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.999996530476363	WITHOUT_CLASSIFICATION	3.469523636838325E-6	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9999966462014492	WITHOUT_CLASSIFICATION	3.353798550757967E-6	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999774698051912	WITHOUT_CLASSIFICATION	2.2530194808755864E-5	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999963768574671	WITHOUT_CLASSIFICATION	3.623142532958496E-6	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999979384237282	WITHOUT_CLASSIFICATION	2.0615762718822165E-6	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999969433638437	WITHOUT_CLASSIFICATION	3.056636156325596E-6	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999965749987233	WITHOUT_CLASSIFICATION	3.425001276632389E-6	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9999960986341752	WITHOUT_CLASSIFICATION	3.901365824829903E-6	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9999959900734506	WITHOUT_CLASSIFICATION	4.0099265492879116E-6	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9999966573269311	WITHOUT_CLASSIFICATION	3.34267306891067E-6	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.999996173255221	WITHOUT_CLASSIFICATION	3.82674477899175E-6	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9999961854708048	WITHOUT_CLASSIFICATION	3.81452919522342E-6	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9999959636334377	WITHOUT_CLASSIFICATION	4.036366562315674E-6	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9999957245098653	WITHOUT_CLASSIFICATION	4.275490134744566E-6	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.9999954785016334	WITHOUT_CLASSIFICATION	4.521498366637993E-6	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.9999961469402137	WITHOUT_CLASSIFICATION	3.853059786349954E-6	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9999975145419888	WITHOUT_CLASSIFICATION	2.485458011193854E-6	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9999967889605088	WITHOUT_CLASSIFICATION	3.2110394913089905E-6	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999977370676295	WITHOUT_CLASSIFICATION	2.262932370537814E-6	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9999965658957364	WITHOUT_CLASSIFICATION	3.434104263676885E-6	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9999960867620131	WITHOUT_CLASSIFICATION	3.913237986893486E-6	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9999968015139451	WITHOUT_CLASSIFICATION	3.1984860549405496E-6	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9999958667629196	WITHOUT_CLASSIFICATION	4.133237080288333E-6	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9999967039069954	WITHOUT_CLASSIFICATION	3.296093004603712E-6	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9999961930671405	WITHOUT_CLASSIFICATION	3.80693285957598E-6	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9999959924724132	WITHOUT_CLASSIFICATION	4.007527586798668E-6	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9999973925841033	WITHOUT_CLASSIFICATION	2.6074158967828044E-6	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9999955413726868	WITHOUT_CLASSIFICATION	4.458627313281478E-6	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9999974449318582	WITHOUT_CLASSIFICATION	2.5550681418116484E-6	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999964913652457	WITHOUT_CLASSIFICATION	3.5086347543297896E-6	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999956069659702	WITHOUT_CLASSIFICATION	4.393034029702617E-6	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9999974751385146	WITHOUT_CLASSIFICATION	2.5248614854654985E-6	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9999958967046809	WITHOUT_CLASSIFICATION	4.103295319127661E-6	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9999978155319552	WITHOUT_CLASSIFICATION	2.1844680448291895E-6	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9999963253994395	WITHOUT_CLASSIFICATION	3.6746005604229374E-6	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9999963176120079	WITHOUT_CLASSIFICATION	3.682387992024751E-6	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999967716565716	WITHOUT_CLASSIFICATION	3.2283434283551123E-6	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9999965165615082	WITHOUT_CLASSIFICATION	3.4834384916447225E-6	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9999957435382235	WITHOUT_CLASSIFICATION	4.256461776539126E-6	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9999965230795762	WITHOUT_CLASSIFICATION	3.476920423862195E-6	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9999964599079533	WITHOUT_CLASSIFICATION	3.5400920467672445E-6	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9999956930320556	WITHOUT_CLASSIFICATION	4.306967944325565E-6	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9999973595760232	WITHOUT_CLASSIFICATION	2.6404239767911985E-6	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9999961588877149	WITHOUT_CLASSIFICATION	3.841112285081034E-6	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9999956167613024	WITHOUT_CLASSIFICATION	4.383238697524526E-6	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999963005921125	WITHOUT_CLASSIFICATION	3.6994078874001477E-6	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9999959316527901	WITHOUT_CLASSIFICATION	4.068347209902642E-6	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999960272664444	WITHOUT_CLASSIFICATION	3.972733555646562E-6	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999952265879005	WITHOUT_CLASSIFICATION	4.773412099489137E-6	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999960518500102	WITHOUT_CLASSIFICATION	3.948149989879633E-6	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999961222672973	WITHOUT_CLASSIFICATION	3.877732702771578E-6	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9999952967622026	WITHOUT_CLASSIFICATION	4.703237797453383E-6	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.999997175934724	WITHOUT_CLASSIFICATION	2.824065276020693E-6	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.999996851167497	WITHOUT_CLASSIFICATION	3.1488325029662484E-6	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9999968085124026	WITHOUT_CLASSIFICATION	3.1914875974382257E-6	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9999960931709877	WITHOUT_CLASSIFICATION	3.906829012338484E-6	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9999950735891814	WITHOUT_CLASSIFICATION	4.926410818642478E-6	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9999964256867727	WITHOUT_CLASSIFICATION	3.5743132272784833E-6	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9999964995811469	WITHOUT_CLASSIFICATION	3.5004188531821486E-6	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9999974751002011	WITHOUT_CLASSIFICATION	2.524899798967523E-6	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9999956445062901	WITHOUT_CLASSIFICATION	4.355493709939075E-6	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9999958233155296	WITHOUT_CLASSIFICATION	4.176684470421153E-6	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999957387155681	WITHOUT_CLASSIFICATION	4.261284431894133E-6	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999964787050527	WITHOUT_CLASSIFICATION	3.52129494730734E-6	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999957079013923	WITHOUT_CLASSIFICATION	4.2920986077757395E-6	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9999963842543642	WITHOUT_CLASSIFICATION	3.615745635679796E-6	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9999955583001775	WITHOUT_CLASSIFICATION	4.441699822509607E-6	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9999957969895995	WITHOUT_CLASSIFICATION	4.203010400519395E-6	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9999952073349289	WITHOUT_CLASSIFICATION	4.7926650711644725E-6	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.999995702727801	WITHOUT_CLASSIFICATION	4.297272198992222E-6	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9999952223462736	WITHOUT_CLASSIFICATION	4.777653726356771E-6	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9999951550502374	WITHOUT_CLASSIFICATION	4.844949762704226E-6	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.999995718819744	WITHOUT_CLASSIFICATION	4.281180255887247E-6	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999958502719768	WITHOUT_CLASSIFICATION	4.149728023104564E-6	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.999995388559193	WITHOUT_CLASSIFICATION	4.6114408069451494E-6	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999952542738488	WITHOUT_CLASSIFICATION	4.745726151157968E-6	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9999974075299805	WITHOUT_CLASSIFICATION	2.5924700195202747E-6	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9999964957732742	WITHOUT_CLASSIFICATION	3.5042267257684674E-6	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9999963619114669	WITHOUT_CLASSIFICATION	3.6380885329840904E-6	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9999977962298099	WITHOUT_CLASSIFICATION	2.203770190121515E-6	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9999968287413034	WITHOUT_CLASSIFICATION	3.1712586965890764E-6	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9999962933856423	WITHOUT_CLASSIFICATION	3.7066143577159424E-6	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.999996725812497	WITHOUT_CLASSIFICATION	3.274187503094962E-6	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9999960991033696	WITHOUT_CLASSIFICATION	3.9008966302978575E-6	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.999997673336552	WITHOUT_CLASSIFICATION	2.326663448038952E-6	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999960147066662	WITHOUT_CLASSIFICATION	3.985293333835264E-6	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9999956780129191	WITHOUT_CLASSIFICATION	4.321987080855776E-6	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9999960616128021	WITHOUT_CLASSIFICATION	3.938387197981815E-6	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999973573532118	WITHOUT_CLASSIFICATION	2.642646788293519E-6	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9999962145509298	WITHOUT_CLASSIFICATION	3.785449070296039E-6	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9999954811287032	WITHOUT_CLASSIFICATION	4.518871296849253E-6	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999962868778005	WITHOUT_CLASSIFICATION	3.7131221995757595E-6	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9999951805203297	WITHOUT_CLASSIFICATION	4.819479670321338E-6	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999970627943232	WITHOUT_CLASSIFICATION	2.9372056767090507E-6	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9999957391383126	WITHOUT_CLASSIFICATION	4.260861687376422E-6	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.999995184977199	WITHOUT_CLASSIFICATION	4.815022800948995E-6	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9999955357371707	WITHOUT_CLASSIFICATION	4.464262829339022E-6	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.9999980947109834	WITHOUT_CLASSIFICATION	1.905289016657217E-6	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999982912511532	WITHOUT_CLASSIFICATION	1.7087488467583795E-6	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9999978299871487	WITHOUT_CLASSIFICATION	2.1700128512791237E-6	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9999982097627443	WITHOUT_CLASSIFICATION	1.7902372556449584E-6	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9999982116504781	WITHOUT_CLASSIFICATION	1.788349521944608E-6	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9999984617600229	WITHOUT_CLASSIFICATION	1.5382399771334147E-6	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9999984310281992	WITHOUT_CLASSIFICATION	1.5689718007786784E-6	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9999983616107176	WITHOUT_CLASSIFICATION	1.638389282401773E-6	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9999979759992352	WITHOUT_CLASSIFICATION	2.0240007646686887E-6	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9999981302384441	WITHOUT_CLASSIFICATION	1.8697615559471879E-6	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9999979099906168	WITHOUT_CLASSIFICATION	2.0900093831481996E-6	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9999980393442123	WITHOUT_CLASSIFICATION	1.960655787752565E-6	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9999981000647816	WITHOUT_CLASSIFICATION	1.8999352183721283E-6	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9999978682877755	WITHOUT_CLASSIFICATION	2.1317122245088586E-6	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9999978397984147	WITHOUT_CLASSIFICATION	2.160201585212752E-6	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9999980630337251	WITHOUT_CLASSIFICATION	1.9369662749593395E-6	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9999977441288478	WITHOUT_CLASSIFICATION	2.2558711522793204E-6	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999977787729317	WITHOUT_CLASSIFICATION	2.221227068236947E-6	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9999981675150599	WITHOUT_CLASSIFICATION	1.832484940094174E-6	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9999980995594204	WITHOUT_CLASSIFICATION	1.900440579560251E-6	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.999997592463344	WITHOUT_CLASSIFICATION	2.407536656027382E-6	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999966083658486	WITHOUT_CLASSIFICATION	3.3916341513742096E-6	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.9999970072019329	WITHOUT_CLASSIFICATION	2.9927980671651242E-6	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9999969301848921	WITHOUT_CLASSIFICATION	3.0698151078101918E-6	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9999965752179077	WITHOUT_CLASSIFICATION	3.4247820921885136E-6	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999982344047285	WITHOUT_CLASSIFICATION	1.7655952715087057E-6	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999969607806459	WITHOUT_CLASSIFICATION	3.0392193540161374E-6	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9999973601385767	WITHOUT_CLASSIFICATION	2.6398614233275572E-6	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.99999689781923	WITHOUT_CLASSIFICATION	3.1021807699562076E-6	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999982694011376	WITHOUT_CLASSIFICATION	1.73059886252018E-6	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9999970216506724	WITHOUT_CLASSIFICATION	2.978349327553574E-6	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9999973249696217	WITHOUT_CLASSIFICATION	2.675030378389564E-6	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999966688949611	WITHOUT_CLASSIFICATION	3.3311050389317494E-6	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9999971851373808	WITHOUT_CLASSIFICATION	2.814862619218898E-6	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9999970387705127	WITHOUT_CLASSIFICATION	2.9612294872414396E-6	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9999964964466098	WITHOUT_CLASSIFICATION	3.5035533900618503E-6	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9999956588973791	WITHOUT_CLASSIFICATION	4.341102620866106E-6	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9999959799555768	WITHOUT_CLASSIFICATION	4.020044423257228E-6	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9999969859559021	WITHOUT_CLASSIFICATION	3.0140440978212667E-6	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999985307195208	WITHOUT_CLASSIFICATION	1.469280479192036E-6	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999981028799199	WITHOUT_CLASSIFICATION	1.8971200801548927E-6	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999984696883362	WITHOUT_CLASSIFICATION	1.530311663765965E-6	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9999977245330122	WITHOUT_CLASSIFICATION	2.2754669878756646E-6	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9999983365747048	WITHOUT_CLASSIFICATION	1.663425295250685E-6	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9999979016760147	WITHOUT_CLASSIFICATION	2.098323985401662E-6	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.99999800955386	WITHOUT_CLASSIFICATION	1.9904461400574984E-6	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999976068576178	WITHOUT_CLASSIFICATION	2.393142382196258E-6	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999976517867061	WITHOUT_CLASSIFICATION	2.348213293861727E-6	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9999977281627143	WITHOUT_CLASSIFICATION	2.271837285814021E-6	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9999974075198609	WITHOUT_CLASSIFICATION	2.5924801391215024E-6	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9999983005479915	WITHOUT_CLASSIFICATION	1.6994520084091635E-6	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9999974992095458	WITHOUT_CLASSIFICATION	2.500790454282265E-6	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9999984561229093	WITHOUT_CLASSIFICATION	1.5438770907261917E-6	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9999974410657912	WITHOUT_CLASSIFICATION	2.5589342087621007E-6	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9999973665493653	WITHOUT_CLASSIFICATION	2.633450634596555E-6	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9999983628016148	WITHOUT_CLASSIFICATION	1.637198385213808E-6	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9999980599679816	WITHOUT_CLASSIFICATION	1.9400320183505784E-6	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9999969826506415	WITHOUT_CLASSIFICATION	3.017349358548961E-6	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9999972908963956	WITHOUT_CLASSIFICATION	2.709103604349361E-6	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999985509484239	WITHOUT_CLASSIFICATION	1.449051576110751E-6	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9999973308277287	WITHOUT_CLASSIFICATION	2.6691722712861706E-6	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9999973026122868	WITHOUT_CLASSIFICATION	2.6973877131791746E-6	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999972506274016	WITHOUT_CLASSIFICATION	2.74937259824159E-6	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9999978328208997	WITHOUT_CLASSIFICATION	2.1671791002372283E-6	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9999971223230608	WITHOUT_CLASSIFICATION	2.8776769392102495E-6	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9999974489464872	WITHOUT_CLASSIFICATION	2.5510535127117257E-6	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9999967777670967	WITHOUT_CLASSIFICATION	3.222232903427336E-6	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999966309242014	WITHOUT_CLASSIFICATION	3.3690757985643918E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999975549279039	WITHOUT_CLASSIFICATION	2.4450720960267185E-6	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.999997354873167	WITHOUT_CLASSIFICATION	2.645126832933248E-6	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9999974348898725	WITHOUT_CLASSIFICATION	2.565110127484983E-6	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9999974971054647	WITHOUT_CLASSIFICATION	2.5028945353558334E-6	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9999982416656257	WITHOUT_CLASSIFICATION	1.758334374314553E-6	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9999973910902715	WITHOUT_CLASSIFICATION	2.608909728501549E-6	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9999977238997201	WITHOUT_CLASSIFICATION	2.2761002800030386E-6	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999975537086713	WITHOUT_CLASSIFICATION	2.4462913287921406E-6	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999976376168725	WITHOUT_CLASSIFICATION	2.362383127554444E-6	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9999974195317197	WITHOUT_CLASSIFICATION	2.580468280171828E-6	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999982434850171	WITHOUT_CLASSIFICATION	1.75651498297561E-6	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9999968964178748	WITHOUT_CLASSIFICATION	3.1035821251771977E-6	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9999980787561583	WITHOUT_CLASSIFICATION	1.9212438416816998E-6	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9999970886594102	WITHOUT_CLASSIFICATION	2.91134058986839E-6	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9999967737162839	WITHOUT_CLASSIFICATION	3.2262837160755504E-6	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999971067603527	WITHOUT_CLASSIFICATION	2.8932396472195882E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999983223415754	WITHOUT_CLASSIFICATION	1.6776584246742999E-6	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9999982612161917	WITHOUT_CLASSIFICATION	1.7387838082636787E-6	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999973613693036	WITHOUT_CLASSIFICATION	2.6386306964410276E-6	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9999970816779348	WITHOUT_CLASSIFICATION	2.918322065124708E-6	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9999972758506978	WITHOUT_CLASSIFICATION	2.724149302355139E-6	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9999981528709364	WITHOUT_CLASSIFICATION	1.8471290636090873E-6	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9999972772587351	WITHOUT_CLASSIFICATION	2.7227412648703653E-6	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9999970020667465	WITHOUT_CLASSIFICATION	2.997933253592949E-6	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.9999970280346726	WITHOUT_CLASSIFICATION	2.9719653273802443E-6	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9999967907669977	WITHOUT_CLASSIFICATION	3.209233002368963E-6	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9999969143349614	WITHOUT_CLASSIFICATION	3.0856650385920633E-6	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9999973457122925	WITHOUT_CLASSIFICATION	2.6542877075484662E-6	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9999967528343406	WITHOUT_CLASSIFICATION	3.247165659260435E-6	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9999965255371122	WITHOUT_CLASSIFICATION	3.4744628879209837E-6	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999969572611642	WITHOUT_CLASSIFICATION	3.0427388358151918E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999967165633109	WITHOUT_CLASSIFICATION	3.283436689155886E-6	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9999981315959804	WITHOUT_CLASSIFICATION	1.8684040195404318E-6	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9999978449597042	WITHOUT_CLASSIFICATION	2.1550402958916113E-6	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9999976981192956	WITHOUT_CLASSIFICATION	2.3018807043330405E-6	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9999972243321946	WITHOUT_CLASSIFICATION	2.775667805335539E-6	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999973078814495	WITHOUT_CLASSIFICATION	2.6921185506407976E-6	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999976472315307	WITHOUT_CLASSIFICATION	2.352768469235245E-6	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9999968984410994	WITHOUT_CLASSIFICATION	3.1015589006258147E-6	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9999971898127749	WITHOUT_CLASSIFICATION	2.8101872250691585E-6	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9999971442924811	WITHOUT_CLASSIFICATION	2.8557075188993076E-6	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9999971526586243	WITHOUT_CLASSIFICATION	2.847341375560389E-6	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9999969930791618	WITHOUT_CLASSIFICATION	3.0069208381451407E-6	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.999996785187591	WITHOUT_CLASSIFICATION	3.2148124090218947E-6	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9999967296512217	WITHOUT_CLASSIFICATION	3.270348778408162E-6	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9999973690250614	WITHOUT_CLASSIFICATION	2.6309749385362784E-6	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.999996625729636	WITHOUT_CLASSIFICATION	3.374270364037378E-6	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.999996265114724	WITHOUT_CLASSIFICATION	3.7348852760018143E-6	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9999971661689399	WITHOUT_CLASSIFICATION	2.8338310601737937E-6	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999980471506991	WITHOUT_CLASSIFICATION	1.952849301007338E-6	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999976267730142	WITHOUT_CLASSIFICATION	2.3732269858076827E-6	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999975077134088	WITHOUT_CLASSIFICATION	2.492286591194969E-6	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9999970565826289	WITHOUT_CLASSIFICATION	2.943417371040796E-6	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999976287976539	WITHOUT_CLASSIFICATION	2.3712023460883965E-6	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.99999747048436	WITHOUT_CLASSIFICATION	2.5295156399848644E-6	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999971287925324	WITHOUT_CLASSIFICATION	2.871207467457959E-6	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9999968427255002	WITHOUT_CLASSIFICATION	3.1572744998785614E-6	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9999967830226143	WITHOUT_CLASSIFICATION	3.2169773857398315E-6	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999972922657225	WITHOUT_CLASSIFICATION	2.7077342775620018E-6	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9999970181803726	WITHOUT_CLASSIFICATION	2.9818196275360424E-6	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9999969639999322	WITHOUT_CLASSIFICATION	3.036000067913914E-6	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9999972306483879	WITHOUT_CLASSIFICATION	2.769351612098701E-6	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.9999963861902902	WITHOUT_CLASSIFICATION	3.613809709854186E-6	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999957762273466	WITHOUT_CLASSIFICATION	4.223772653380582E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999965487569514	WITHOUT_CLASSIFICATION	3.4512430485235235E-6	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999900478292821	WITHOUT_CLASSIFICATION	9.952170717842288E-6	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.999752701367214	WITHOUT_CLASSIFICATION	2.472986327861061E-4	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999901448323003	WITHOUT_CLASSIFICATION	9.855167699714856E-6	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999928949079292	WITHOUT_CLASSIFICATION	7.105092070908943E-6	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999369775201785	WITHOUT_CLASSIFICATION	6.302247982147519E-5	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999960339183662	WITHOUT_CLASSIFICATION	3.966081633723438E-6	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9930029074040979	WITHOUT_CLASSIFICATION	0.006997092595902163	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9944150819935247	WITHOUT_CLASSIFICATION	0.005584918006475348	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999892324570133	WITHOUT_CLASSIFICATION	1.0767542986570522E-5	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9997833648599463	WITHOUT_CLASSIFICATION	2.166351400536135E-4	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9998520528388714	WITHOUT_CLASSIFICATION	1.4794716112865946E-4	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9999967436844585	WITHOUT_CLASSIFICATION	3.2563155415408204E-6	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999997667821967	WITHOUT_CLASSIFICATION	2.3321780320321826E-7	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9998383333702874	WITHOUT_CLASSIFICATION	1.6166662971258536E-4	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999966458759023	WITHOUT_CLASSIFICATION	3.3541240976950874E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9970773736291222	WITHOUT_CLASSIFICATION	0.002922626370877784	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.999919234757499	WITHOUT_CLASSIFICATION	8.076524250109649E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998278707902094	WITHOUT_CLASSIFICATION	1.7212920979047677E-4	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999932241502	WITHOUT_CLASSIFICATION	6.775849779682129E-9	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999999979136999	WITHOUT_CLASSIFICATION	2.0863000991582345E-8	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999998883543905	WITHOUT_CLASSIFICATION	1.1164560946492662E-7	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999988146462867	WITHOUT_CLASSIFICATION	1.1853537133028253E-6	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999999613615117	WITHOUT_CLASSIFICATION	3.8638488264273745E-8	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999996224864086	WITHOUT_CLASSIFICATION	3.775135914268363E-7	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999996224864086	WITHOUT_CLASSIFICATION	3.775135914268363E-7	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999999423479778	WITHOUT_CLASSIFICATION	5.765202212886387E-8	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9997618959288087	WITHOUT_CLASSIFICATION	2.3810407119127076E-4	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999987585043909	WITHOUT_CLASSIFICATION	1.2414956090085435E-6	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.999998714170051	WITHOUT_CLASSIFICATION	1.2858299489568807E-6	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999965979658212	WITHOUT_CLASSIFICATION	3.4020341788161276E-6	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999999978418374	WITHOUT_CLASSIFICATION	2.158162586581056E-9	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999992146209404	WITHOUT_CLASSIFICATION	7.853790595700829E-7	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.999999977016028	WITHOUT_CLASSIFICATION	2.2983971906901855E-8	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9999885813003914	WITHOUT_CLASSIFICATION	1.1418699608521626E-5	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.999996030419667	WITHOUT_CLASSIFICATION	3.969580332917826E-6	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9999999038911034	WITHOUT_CLASSIFICATION	9.610889653458034E-8	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999999962211084	WITHOUT_CLASSIFICATION	3.778891631542263E-9	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999999805237015	WITHOUT_CLASSIFICATION	1.9476298489765727E-8	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999970851972309	WITHOUT_CLASSIFICATION	2.914802769127727E-6	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999980023058074	WITHOUT_CLASSIFICATION	1.99769419257729E-6	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999962054556929	WITHOUT_CLASSIFICATION	3.7945443070176036E-6	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999999755189362	WITHOUT_CLASSIFICATION	2.448106391525986E-8	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9997361666855813	WITHOUT_CLASSIFICATION	2.638333144186899E-4	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999999177172433	WITHOUT_CLASSIFICATION	8.228275677700087E-8	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.999990769567066	WITHOUT_CLASSIFICATION	9.230432934021067E-6	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999577963607	WITHOUT_CLASSIFICATION	4.220363916428129E-8	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9999839242001299	WITHOUT_CLASSIFICATION	1.6075799870110523E-5	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.8983358290762956	WITHOUT_CLASSIFICATION	0.10166417092370432	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999670250279051	WITHOUT_CLASSIFICATION	3.297497209488256E-5	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.8983358290762956	WITHOUT_CLASSIFICATION	0.10166417092370432	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999885139118673	WITHOUT_CLASSIFICATION	1.1486088132761512E-5	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999731877840662	WITHOUT_CLASSIFICATION	2.681221593375585E-5	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9682969574118693	WITHOUT_CLASSIFICATION	0.03170304258813073	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9998770633060275	WITHOUT_CLASSIFICATION	1.2293669397246196E-4	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.999994012926094	WITHOUT_CLASSIFICATION	5.987073906028365E-6	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.999995411785406	WITHOUT_CLASSIFICATION	4.588214593989301E-6	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.999995411785406	WITHOUT_CLASSIFICATION	4.588214593989301E-6	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.999995411785406	WITHOUT_CLASSIFICATION	4.588214593989301E-6	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999992914479454	WITHOUT_CLASSIFICATION	7.085520546267072E-7	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9997344739974535	WITHOUT_CLASSIFICATION	2.655260025464279E-4	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999984643469979	WITHOUT_CLASSIFICATION	1.5356530021587132E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999948913287201	WITHOUT_CLASSIFICATION	5.1086712798824E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999948913287201	WITHOUT_CLASSIFICATION	5.1086712798824E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999948913287201	WITHOUT_CLASSIFICATION	5.1086712798824E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999948913287201	WITHOUT_CLASSIFICATION	5.1086712798824E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999948913287201	WITHOUT_CLASSIFICATION	5.1086712798824E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999948913287201	WITHOUT_CLASSIFICATION	5.1086712798824E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999946394695859	WITHOUT_CLASSIFICATION	5.36053041409513E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999946394695859	WITHOUT_CLASSIFICATION	5.36053041409513E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999946394695859	WITHOUT_CLASSIFICATION	5.36053041409513E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999946394695859	WITHOUT_CLASSIFICATION	5.36053041409513E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999946394695859	WITHOUT_CLASSIFICATION	5.36053041409513E-6	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999735517785521	WITHOUT_CLASSIFICATION	2.6448221448020208E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999735517785521	WITHOUT_CLASSIFICATION	2.6448221448020208E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999735517785521	WITHOUT_CLASSIFICATION	2.6448221448020208E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999735517785521	WITHOUT_CLASSIFICATION	2.6448221448020208E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999735517785521	WITHOUT_CLASSIFICATION	2.6448221448020208E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999617198717086	WITHOUT_CLASSIFICATION	3.82801282913432E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999617198717086	WITHOUT_CLASSIFICATION	3.82801282913432E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999617198717086	WITHOUT_CLASSIFICATION	3.82801282913432E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999617198717086	WITHOUT_CLASSIFICATION	3.82801282913432E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999617198717086	WITHOUT_CLASSIFICATION	3.82801282913432E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999617198717086	WITHOUT_CLASSIFICATION	3.82801282913432E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999787884959767	WITHOUT_CLASSIFICATION	2.121150402333252E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999787884959767	WITHOUT_CLASSIFICATION	2.121150402333252E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999787884959767	WITHOUT_CLASSIFICATION	2.121150402333252E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999787884959767	WITHOUT_CLASSIFICATION	2.121150402333252E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999787884959767	WITHOUT_CLASSIFICATION	2.121150402333252E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999633209819633	WITHOUT_CLASSIFICATION	3.667901803670951E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999633209819633	WITHOUT_CLASSIFICATION	3.667901803670951E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999633209819633	WITHOUT_CLASSIFICATION	3.667901803670951E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999633209819633	WITHOUT_CLASSIFICATION	3.667901803670951E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999633209819633	WITHOUT_CLASSIFICATION	3.667901803670951E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999774698051912	WITHOUT_CLASSIFICATION	2.2530194808755864E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999774698051912	WITHOUT_CLASSIFICATION	2.2530194808755864E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999774698051912	WITHOUT_CLASSIFICATION	2.2530194808755864E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999774698051912	WITHOUT_CLASSIFICATION	2.2530194808755864E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999774698051912	WITHOUT_CLASSIFICATION	2.2530194808755864E-5	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999937263289	WITHOUT_CLASSIFICATION	6.273671075148783E-9	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999679139422	WITHOUT_CLASSIFICATION	3.208605786288905E-8	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999920071144462	WITHOUT_CLASSIFICATION	7.992885553691644E-6	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999975322723077	WITHOUT_CLASSIFICATION	2.467727692307363E-6	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.99999713403766	WITHOUT_CLASSIFICATION	2.865962340009099E-6	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999972538426101	WITHOUT_CLASSIFICATION	2.7461573899597683E-6	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999971784425784	WITHOUT_CLASSIFICATION	2.8215574215454416E-6	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999966170206438	WITHOUT_CLASSIFICATION	3.3829793561355063E-6	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999969670267991	WITHOUT_CLASSIFICATION	3.0329732010282245E-6	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.999998341535265	WITHOUT_CLASSIFICATION	1.6584647349254365E-6	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999976136188934	WITHOUT_CLASSIFICATION	2.3863811065804264E-6	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999972073567952	WITHOUT_CLASSIFICATION	2.792643204816009E-6	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9999978423672361	WITHOUT_CLASSIFICATION	2.157632763959076E-6	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9999968216041814	WITHOUT_CLASSIFICATION	3.17839581860564E-6	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9999967434843152	WITHOUT_CLASSIFICATION	3.2565156848938423E-6	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.999997307723654	WITHOUT_CLASSIFICATION	2.692276346057564E-6	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9999967573111722	WITHOUT_CLASSIFICATION	3.242688827818992E-6	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9999965958637447	WITHOUT_CLASSIFICATION	3.404136255385175E-6	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9999961149022115	WITHOUT_CLASSIFICATION	3.885097788437783E-6	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9999962235256612	WITHOUT_CLASSIFICATION	3.776474338873422E-6	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9999973454122254	WITHOUT_CLASSIFICATION	2.654587774573468E-6	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9999972484950592	WITHOUT_CLASSIFICATION	2.7515049407175987E-6	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9999965022837848	WITHOUT_CLASSIFICATION	3.4977162151951336E-6	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9999970602475641	WITHOUT_CLASSIFICATION	2.939752435974921E-6	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.999995965592133	WITHOUT_CLASSIFICATION	4.03440786693384E-6	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9999960235539055	WITHOUT_CLASSIFICATION	3.9764460945079575E-6	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9999959126031532	WITHOUT_CLASSIFICATION	4.08739684677196E-6	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9999968911195969	WITHOUT_CLASSIFICATION	3.108880403180945E-6	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9999960401924257	WITHOUT_CLASSIFICATION	3.959807574374529E-6	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9999972044149201	WITHOUT_CLASSIFICATION	2.7955850797350185E-6	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9999975828805749	WITHOUT_CLASSIFICATION	2.4171194249444865E-6	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9999971201719432	WITHOUT_CLASSIFICATION	2.8798280568911092E-6	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9999969675968997	WITHOUT_CLASSIFICATION	3.0324031003164322E-6	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9999962545202632	WITHOUT_CLASSIFICATION	3.745479736881044E-6	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.9999969602347276	WITHOUT_CLASSIFICATION	3.0397652723608122E-6	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9999970442498466	WITHOUT_CLASSIFICATION	2.95575015335934E-6	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9999967199780362	WITHOUT_CLASSIFICATION	3.280021963744633E-6	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9999967268072953	WITHOUT_CLASSIFICATION	3.2731927045271125E-6	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.9999964176376828	WITHOUT_CLASSIFICATION	3.582362317340419E-6	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9999967564380376	WITHOUT_CLASSIFICATION	3.2435619623433275E-6	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9999963126138844	WITHOUT_CLASSIFICATION	3.687386115615227E-6	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9999965809632599	WITHOUT_CLASSIFICATION	3.4190367399836464E-6	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9999964530598576	WITHOUT_CLASSIFICATION	3.546940142451977E-6	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9999977105107294	WITHOUT_CLASSIFICATION	2.289489270560932E-6	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9999974473334209	WITHOUT_CLASSIFICATION	2.5526665790286057E-6	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9999974135416884	WITHOUT_CLASSIFICATION	2.5864583115225776E-6	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9999972581788857	WITHOUT_CLASSIFICATION	2.741821114254279E-6	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.9999971165714198	WITHOUT_CLASSIFICATION	2.8834285802861838E-6	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.9999967470335398	WITHOUT_CLASSIFICATION	3.2529664600477116E-6	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999979384237282	WITHOUT_CLASSIFICATION	2.0615762718822165E-6	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999969433638437	WITHOUT_CLASSIFICATION	3.056636156325596E-6	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999965749987233	WITHOUT_CLASSIFICATION	3.425001276632389E-6	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.999996173255221	WITHOUT_CLASSIFICATION	3.82674477899175E-6	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999977370676295	WITHOUT_CLASSIFICATION	2.262932370537814E-6	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999964913652457	WITHOUT_CLASSIFICATION	3.5086347543297896E-6	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999961512390548	WITHOUT_CLASSIFICATION	3.848760945144226E-6	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999956069659702	WITHOUT_CLASSIFICATION	4.393034029702617E-6	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999963005921125	WITHOUT_CLASSIFICATION	3.6994078874001477E-6	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999960272664444	WITHOUT_CLASSIFICATION	3.972733555646562E-6	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999956719031385	WITHOUT_CLASSIFICATION	4.328096861507073E-6	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999952265879005	WITHOUT_CLASSIFICATION	4.773412099489137E-6	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999960518500102	WITHOUT_CLASSIFICATION	3.948149989879633E-6	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9999970892439669	WITHOUT_CLASSIFICATION	2.910756033125453E-6	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9999964807214464	WITHOUT_CLASSIFICATION	3.5192785536259924E-6	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9999966752327989	WITHOUT_CLASSIFICATION	3.3247672011343003E-6	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9999955861511369	WITHOUT_CLASSIFICATION	4.41384886309357E-6	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9999966104321555	WITHOUT_CLASSIFICATION	3.3895678444793177E-6	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9999964535894407	WITHOUT_CLASSIFICATION	3.5464105592646198E-6	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.9999965455734888	WITHOUT_CLASSIFICATION	3.454426511218175E-6	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9999960012983313	WITHOUT_CLASSIFICATION	3.998701668664592E-6	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9999957660456396	WITHOUT_CLASSIFICATION	4.233954360496192E-6	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9999958129844045	WITHOUT_CLASSIFICATION	4.1870155955084195E-6	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9999967688342539	WITHOUT_CLASSIFICATION	3.2311657461902615E-6	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9999960310966622	WITHOUT_CLASSIFICATION	3.9689033378215575E-6	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9999957193880757	WITHOUT_CLASSIFICATION	4.280611924192975E-6	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9999969316569737	WITHOUT_CLASSIFICATION	3.0683430262023192E-6	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9999962464687717	WITHOUT_CLASSIFICATION	3.7535312283835115E-6	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9999977424212944	WITHOUT_CLASSIFICATION	2.257578705609628E-6	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.9999961056641247	WITHOUT_CLASSIFICATION	3.894335875299896E-6	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9999961898986021	WITHOUT_CLASSIFICATION	3.8101013978235075E-6	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9999958684749147	WITHOUT_CLASSIFICATION	4.131525085212061E-6	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9999958425231048	WITHOUT_CLASSIFICATION	4.1574768952834555E-6	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9999961411773459	WITHOUT_CLASSIFICATION	3.858822654105927E-6	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9999955935301481	WITHOUT_CLASSIFICATION	4.406469851811481E-6	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.999995575840814	WITHOUT_CLASSIFICATION	4.424159186069883E-6	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.999996034930016	WITHOUT_CLASSIFICATION	3.965069984081736E-6	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9999952115653182	WITHOUT_CLASSIFICATION	4.788434681840421E-6	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9999956120792863	WITHOUT_CLASSIFICATION	4.387920713727592E-6	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9999970984891566	WITHOUT_CLASSIFICATION	2.9015108433164466E-6	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9999967669131233	WITHOUT_CLASSIFICATION	3.233086876577942E-6	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9999961269224011	WITHOUT_CLASSIFICATION	3.873077598840171E-6	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9999958713453991	WITHOUT_CLASSIFICATION	4.128654600903117E-6	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9999964618692975	WITHOUT_CLASSIFICATION	3.5381307024571325E-6	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9999954997825496	WITHOUT_CLASSIFICATION	4.500217450394197E-6	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9999972607457288	WITHOUT_CLASSIFICATION	2.7392542712470677E-6	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9999967553476462	WITHOUT_CLASSIFICATION	3.244652353822225E-6	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9999957014120705	WITHOUT_CLASSIFICATION	4.29858792941882E-6	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9999955953460511	WITHOUT_CLASSIFICATION	4.4046539489168596E-6	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999964787050527	WITHOUT_CLASSIFICATION	3.52129494730734E-6	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999962437386626	WITHOUT_CLASSIFICATION	3.756261337296443E-6	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999957079013923	WITHOUT_CLASSIFICATION	4.2920986077757395E-6	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999958502719768	WITHOUT_CLASSIFICATION	4.149728023104564E-6	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999952542738488	WITHOUT_CLASSIFICATION	4.745726151157968E-6	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.999996725812497	WITHOUT_CLASSIFICATION	3.274187503094962E-6	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999960147066662	WITHOUT_CLASSIFICATION	3.985293333835264E-6	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999973573532118	WITHOUT_CLASSIFICATION	2.642646788293519E-6	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999970627943232	WITHOUT_CLASSIFICATION	2.9372056767090507E-6	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999982912511532	WITHOUT_CLASSIFICATION	1.7087488467583795E-6	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999979696816402	WITHOUT_CLASSIFICATION	2.0303183597225183E-6	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9999976054008622	WITHOUT_CLASSIFICATION	2.39459913776905E-6	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9999959676395346	WITHOUT_CLASSIFICATION	4.032360465417037E-6	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9999959650108526	WITHOUT_CLASSIFICATION	4.034989147344668E-6	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.999996493363202	WITHOUT_CLASSIFICATION	3.5066367979349427E-6	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9999962091705408	WITHOUT_CLASSIFICATION	3.7908294593143174E-6	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9999953415377095	WITHOUT_CLASSIFICATION	4.658462290439049E-6	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9999971630449682	WITHOUT_CLASSIFICATION	2.836955031736255E-6	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9999958552198132	WITHOUT_CLASSIFICATION	4.144780186784317E-6	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9999952550880553	WITHOUT_CLASSIFICATION	4.744911944752E-6	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.9999952721233043	WITHOUT_CLASSIFICATION	4.727876695706216E-6	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9999956200030957	WITHOUT_CLASSIFICATION	4.3799969042795626E-6	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9999957761578893	WITHOUT_CLASSIFICATION	4.22384211069281E-6	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9999949026461906	WITHOUT_CLASSIFICATION	5.097353809376957E-6	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9999972953068063	WITHOUT_CLASSIFICATION	2.704693193739922E-6	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9999975298016571	WITHOUT_CLASSIFICATION	2.470198342917633E-6	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9999970382732665	WITHOUT_CLASSIFICATION	2.961726733480287E-6	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9999967925027475	WITHOUT_CLASSIFICATION	3.2074972525183532E-6	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9999960772283161	WITHOUT_CLASSIFICATION	3.922771683977234E-6	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9999962750282053	WITHOUT_CLASSIFICATION	3.7249717946113675E-6	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9999959437817442	WITHOUT_CLASSIFICATION	4.056218255866323E-6	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9999965382302027	WITHOUT_CLASSIFICATION	3.4617697971773874E-6	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9999958592710546	WITHOUT_CLASSIFICATION	4.1407289454196975E-6	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9999964815391575	WITHOUT_CLASSIFICATION	3.518460842432514E-6	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9999958309373495	WITHOUT_CLASSIFICATION	4.169062650503954E-6	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9999960291456161	WITHOUT_CLASSIFICATION	3.970854383779065E-6	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9999955558461385	WITHOUT_CLASSIFICATION	4.444153861506845E-6	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9999952362761614	WITHOUT_CLASSIFICATION	4.763723838698873E-6	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9999956812976334	WITHOUT_CLASSIFICATION	4.31870236667139E-6	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9999981727145529	WITHOUT_CLASSIFICATION	1.8272854470919633E-6	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9999984747397171	WITHOUT_CLASSIFICATION	1.5252602828540506E-6	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9999983384118931	WITHOUT_CLASSIFICATION	1.6615881068541156E-6	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9999981642642872	WITHOUT_CLASSIFICATION	1.8357357127645815E-6	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9999983845078315	WITHOUT_CLASSIFICATION	1.615492168489344E-6	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9999983201797578	WITHOUT_CLASSIFICATION	1.6798202421872785E-6	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9999979703848715	WITHOUT_CLASSIFICATION	2.0296151286423913E-6	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9999980987193825	WITHOUT_CLASSIFICATION	1.9012806174945404E-6	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9999979127849445	WITHOUT_CLASSIFICATION	2.087215055459864E-6	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9999980456101025	WITHOUT_CLASSIFICATION	1.954389897462701E-6	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999980552839053	WITHOUT_CLASSIFICATION	1.944716094812683E-6	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999966083658486	WITHOUT_CLASSIFICATION	3.3916341513742096E-6	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999973068804415	WITHOUT_CLASSIFICATION	2.693119558483689E-6	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999982344047285	WITHOUT_CLASSIFICATION	1.7655952715087057E-6	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999982694011376	WITHOUT_CLASSIFICATION	1.73059886252018E-6	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999966688949611	WITHOUT_CLASSIFICATION	3.3311050389317494E-6	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999985307195208	WITHOUT_CLASSIFICATION	1.469280479192036E-6	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999981028799199	WITHOUT_CLASSIFICATION	1.8971200801548927E-6	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999976068576178	WITHOUT_CLASSIFICATION	2.393142382196258E-6	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999976517867061	WITHOUT_CLASSIFICATION	2.348213293861727E-6	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999973913229838	WITHOUT_CLASSIFICATION	2.6086770161336857E-6	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9999977021067784	WITHOUT_CLASSIFICATION	2.2978932217120603E-6	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9999979814833413	WITHOUT_CLASSIFICATION	2.018516658777872E-6	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9999975640764567	WITHOUT_CLASSIFICATION	2.4359235433124313E-6	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9999980982790718	WITHOUT_CLASSIFICATION	1.901720928092121E-6	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9999981285880959	WITHOUT_CLASSIFICATION	1.8714119040033172E-6	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9999970660874016	WITHOUT_CLASSIFICATION	2.9339125983358953E-6	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9999966915338105	WITHOUT_CLASSIFICATION	3.3084661894200235E-6	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9999958203324905	WITHOUT_CLASSIFICATION	4.1796675095401425E-6	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9999976685714814	WITHOUT_CLASSIFICATION	2.3314285186772453E-6	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9999973141734149	WITHOUT_CLASSIFICATION	2.685826585103407E-6	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9999967743161321	WITHOUT_CLASSIFICATION	3.2256838678783604E-6	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.999997033776328	WITHOUT_CLASSIFICATION	2.966223671983525E-6	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9999970441744626	WITHOUT_CLASSIFICATION	2.9558255374352995E-6	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9999968837876898	WITHOUT_CLASSIFICATION	3.11621231005594E-6	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9999972971918474	WITHOUT_CLASSIFICATION	2.7028081525557245E-6	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.999997117948807	WITHOUT_CLASSIFICATION	2.882051193044175E-6	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9999967207651077	WITHOUT_CLASSIFICATION	3.2792348922665145E-6	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9999965516910858	WITHOUT_CLASSIFICATION	3.4483089142439387E-6	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9999979405203596	WITHOUT_CLASSIFICATION	2.0594796403980455E-6	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9999966507034902	WITHOUT_CLASSIFICATION	3.3492965098352907E-6	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9999976766831918	WITHOUT_CLASSIFICATION	2.323316808289039E-6	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9999973102590235	WITHOUT_CLASSIFICATION	2.6897409765305546E-6	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.999997899402535	WITHOUT_CLASSIFICATION	2.100597464978561E-6	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9999979444632602	WITHOUT_CLASSIFICATION	2.0555367398631554E-6	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9999977007079971	WITHOUT_CLASSIFICATION	2.2992920029431718E-6	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9999978914399851	WITHOUT_CLASSIFICATION	2.108560014843498E-6	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9999973764885307	WITHOUT_CLASSIFICATION	2.623511469281521E-6	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9999977678123346	WITHOUT_CLASSIFICATION	2.232187665356989E-6	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9999984532369788	WITHOUT_CLASSIFICATION	1.5467630212915548E-6	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9999977368464378	WITHOUT_CLASSIFICATION	2.263153562208816E-6	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9999974481551629	WITHOUT_CLASSIFICATION	2.551844837078436E-6	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9999974120215779	WITHOUT_CLASSIFICATION	2.5879784220813206E-6	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9999971158284822	WITHOUT_CLASSIFICATION	2.884171517832221E-6	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9999972416574772	WITHOUT_CLASSIFICATION	2.758342522761711E-6	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9999973829660417	WITHOUT_CLASSIFICATION	2.617033958260181E-6	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9999976383174171	WITHOUT_CLASSIFICATION	2.361682582970309E-6	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9999971571150027	WITHOUT_CLASSIFICATION	2.8428849972818227E-6	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9999982463530933	WITHOUT_CLASSIFICATION	1.7536469066385876E-6	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999972506274016	WITHOUT_CLASSIFICATION	2.74937259824159E-6	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999966309242014	WITHOUT_CLASSIFICATION	3.3690757985643918E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999975549279039	WITHOUT_CLASSIFICATION	2.4450720960267185E-6	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999967313483472	WITHOUT_CLASSIFICATION	3.268651652850689E-6	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999976376168725	WITHOUT_CLASSIFICATION	2.362383127554444E-6	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999982434850171	WITHOUT_CLASSIFICATION	1.75651498297561E-6	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999971067603527	WITHOUT_CLASSIFICATION	2.8932396472195882E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999983223415754	WITHOUT_CLASSIFICATION	1.6776584246742999E-6	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999969572611642	WITHOUT_CLASSIFICATION	3.0427388358151918E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999967165633109	WITHOUT_CLASSIFICATION	3.283436689155886E-6	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9999978685876296	WITHOUT_CLASSIFICATION	2.1314123704780987E-6	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9999970192241333	WITHOUT_CLASSIFICATION	2.980775866747269E-6	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9999969424574249	WITHOUT_CLASSIFICATION	3.057542575033182E-6	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9999976130233226	WITHOUT_CLASSIFICATION	2.3869766774426693E-6	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9999975582001618	WITHOUT_CLASSIFICATION	2.4417998381392362E-6	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9999975556278776	WITHOUT_CLASSIFICATION	2.444372122422319E-6	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9999968249963213	WITHOUT_CLASSIFICATION	3.175003678829689E-6	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9999979133671455	WITHOUT_CLASSIFICATION	2.0866328545373658E-6	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9999978371855763	WITHOUT_CLASSIFICATION	2.162814423681009E-6	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9999976892139525	WITHOUT_CLASSIFICATION	2.3107860475077394E-6	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.999997389301096	WITHOUT_CLASSIFICATION	2.610698904037981E-6	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9999970940525059	WITHOUT_CLASSIFICATION	2.9059474940595758E-6	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9999971064095772	WITHOUT_CLASSIFICATION	2.893590422816042E-6	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9999970311593644	WITHOUT_CLASSIFICATION	2.9688406356052592E-6	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9999968791274852	WITHOUT_CLASSIFICATION	3.120872514637281E-6	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9999967659995262	WITHOUT_CLASSIFICATION	3.2340004737242434E-6	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9999970024585002	WITHOUT_CLASSIFICATION	2.997541499876721E-6	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.999998151851809	WITHOUT_CLASSIFICATION	1.8481481910719804E-6	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9999981208831923	WITHOUT_CLASSIFICATION	1.879116807648391E-6	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9999970074361132	WITHOUT_CLASSIFICATION	2.9925638868021775E-6	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9999975390214336	WITHOUT_CLASSIFICATION	2.4609785664350583E-6	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.9999974519136914	WITHOUT_CLASSIFICATION	2.548086308614663E-6	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9999984812464633	WITHOUT_CLASSIFICATION	1.518753536692715E-6	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9999973802328371	WITHOUT_CLASSIFICATION	2.619767162898965E-6	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9999974869685452	WITHOUT_CLASSIFICATION	2.513031454798593E-6	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.999997519183434	WITHOUT_CLASSIFICATION	2.4808165659671412E-6	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9999973536451396	WITHOUT_CLASSIFICATION	2.6463548603814095E-6	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9999971603529281	WITHOUT_CLASSIFICATION	2.839647071970988E-6	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9999971355747781	WITHOUT_CLASSIFICATION	2.864425221871224E-6	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9999968878380092	WITHOUT_CLASSIFICATION	3.1121619907578162E-6	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9999973947202433	WITHOUT_CLASSIFICATION	2.605279756751399E-6	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.99999777483413	WITHOUT_CLASSIFICATION	2.2251658700017775E-6	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9999969805758775	WITHOUT_CLASSIFICATION	3.019424122394904E-6	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9999978067558228	WITHOUT_CLASSIFICATION	2.1932441771758056E-6	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9999971126383793	WITHOUT_CLASSIFICATION	2.887361620721119E-6	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9999977668712805	WITHOUT_CLASSIFICATION	2.2331287195413874E-6	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9999967083677084	WITHOUT_CLASSIFICATION	3.291632291567777E-6	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9999972997551778	WITHOUT_CLASSIFICATION	2.700244822254495E-6	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9999969790442137	WITHOUT_CLASSIFICATION	3.0209557862731434E-6	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999970068392848	WITHOUT_CLASSIFICATION	2.9931607151760083E-6	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999973078814495	WITHOUT_CLASSIFICATION	2.6921185506407976E-6	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999976472315307	WITHOUT_CLASSIFICATION	2.352768469235245E-6	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999980471506991	WITHOUT_CLASSIFICATION	1.952849301007338E-6	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999967645804827	WITHOUT_CLASSIFICATION	3.2354195172440217E-6	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999975077134088	WITHOUT_CLASSIFICATION	2.492286591194969E-6	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999976287976539	WITHOUT_CLASSIFICATION	2.3712023460883965E-6	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999971287925324	WITHOUT_CLASSIFICATION	2.871207467457959E-6	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999957762273466	WITHOUT_CLASSIFICATION	4.223772653380582E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999965487569514	WITHOUT_CLASSIFICATION	3.4512430485235235E-6	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9999975951657847	WITHOUT_CLASSIFICATION	2.404834215188455E-6	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9999980771152593	WITHOUT_CLASSIFICATION	1.9228847407338308E-6	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9999972956980857	WITHOUT_CLASSIFICATION	2.7043019143953925E-6	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9999975124841108	WITHOUT_CLASSIFICATION	2.487515889133655E-6	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9999971118826178	WITHOUT_CLASSIFICATION	2.88811738225831E-6	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9999971409206102	WITHOUT_CLASSIFICATION	2.859079389837695E-6	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9999970302052155	WITHOUT_CLASSIFICATION	2.9697947845442014E-6	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9999971256282385	WITHOUT_CLASSIFICATION	2.8743717615630612E-6	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9999968806531555	WITHOUT_CLASSIFICATION	3.1193468444893212E-6	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9999980485307483	WITHOUT_CLASSIFICATION	1.9514692518547615E-6	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.999997151960743	WITHOUT_CLASSIFICATION	2.8480392569290408E-6	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9999966825117395	WITHOUT_CLASSIFICATION	3.317488260627619E-6	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.9999981773262026	WITHOUT_CLASSIFICATION	1.8226737974019064E-6	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9999966984756432	WITHOUT_CLASSIFICATION	3.301524356867139E-6	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9999966526091952	WITHOUT_CLASSIFICATION	3.347390804839612E-6	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9999972904638595	WITHOUT_CLASSIFICATION	2.7095361405119686E-6	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9999971180938984	WITHOUT_CLASSIFICATION	2.881906101684342E-6	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9999975941439507	WITHOUT_CLASSIFICATION	2.405856049267701E-6	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9999968759958133	WITHOUT_CLASSIFICATION	3.1240041866208648E-6	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9999972086962803	WITHOUT_CLASSIFICATION	2.7913037197035124E-6	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9999971441183838	WITHOUT_CLASSIFICATION	2.855881616186336E-6	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9999967683707511	WITHOUT_CLASSIFICATION	3.231629248796725E-6	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9999967628970625	WITHOUT_CLASSIFICATION	3.2371029374609365E-6	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9999966738350399	WITHOUT_CLASSIFICATION	3.326164960256182E-6	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9999967474626639	WITHOUT_CLASSIFICATION	3.2525373361116873E-6	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9999970866379638	WITHOUT_CLASSIFICATION	2.9133620360350878E-6	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9999968260357502	WITHOUT_CLASSIFICATION	3.173964249768587E-6	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9999964994680949	WITHOUT_CLASSIFICATION	3.5005319051551707E-6	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9999967164879215	WITHOUT_CLASSIFICATION	3.283512078546615E-6	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9999965420680996	WITHOUT_CLASSIFICATION	3.457931900270093E-6	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9999976406721114	WITHOUT_CLASSIFICATION	2.359327888581201E-6	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9999975896248997	WITHOUT_CLASSIFICATION	2.410375100358105E-6	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9999973124318741	WITHOUT_CLASSIFICATION	2.6875681259488037E-6	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9999972760251976	WITHOUT_CLASSIFICATION	2.7239748023278597E-6	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9999962187942132	WITHOUT_CLASSIFICATION	3.7812057867608168E-6	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9999968211328821	WITHOUT_CLASSIFICATION	3.178867117746945E-6	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9999965183943215	WITHOUT_CLASSIFICATION	3.4816056784886735E-6	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.99999636756231	WITHOUT_CLASSIFICATION	3.6324376900252482E-6	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9999961965130612	WITHOUT_CLASSIFICATION	3.8034869387515757E-6	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9930029074040979	WITHOUT_CLASSIFICATION	0.006997092595902163	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9944150819935247	WITHOUT_CLASSIFICATION	0.005584918006475348	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999997667821967	WITHOUT_CLASSIFICATION	2.3321780320321826E-7	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999966458759023	WITHOUT_CLASSIFICATION	3.3541240976950874E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9970773736291222	WITHOUT_CLASSIFICATION	0.002922626370877784	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.999919234757499	WITHOUT_CLASSIFICATION	8.076524250109649E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998278707902094	WITHOUT_CLASSIFICATION	1.7212920979047677E-4	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999931583748906	WITHOUT_CLASSIFICATION	6.841625109362564E-6	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.9999967048277041	WITHOUT_CLASSIFICATION	3.295172295931619E-6	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9999959565271183	WITHOUT_CLASSIFICATION	4.043472881800054E-6	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9999965878680253	WITHOUT_CLASSIFICATION	3.412131974658866E-6	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9999956238833405	WITHOUT_CLASSIFICATION	4.376116659540619E-6	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.999995920995787	WITHOUT_CLASSIFICATION	4.079004212972756E-6	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9999959580198616	WITHOUT_CLASSIFICATION	4.041980138446502E-6	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9999980913230329	WITHOUT_CLASSIFICATION	1.908676967168852E-6	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9999979527807312	WITHOUT_CLASSIFICATION	2.0472192687384925E-6	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9999965812472768	WITHOUT_CLASSIFICATION	3.4187527231901237E-6	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9999957648203484	WITHOUT_CLASSIFICATION	4.235179651652904E-6	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9999973272546477	WITHOUT_CLASSIFICATION	2.6727453522069454E-6	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9999967341453162	WITHOUT_CLASSIFICATION	3.2658546837209245E-6	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.9999975180879964	WITHOUT_CLASSIFICATION	2.481912003569211E-6	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9999967309398473	WITHOUT_CLASSIFICATION	3.2690601526057493E-6	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9999980005992686	WITHOUT_CLASSIFICATION	1.9994007314329982E-6	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.999997081989049	WITHOUT_CLASSIFICATION	2.918010951021839E-6	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9999963540827105	WITHOUT_CLASSIFICATION	3.6459172896035665E-6	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.999997192494898	WITHOUT_CLASSIFICATION	2.8075051020433133E-6	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9999969046062422	WITHOUT_CLASSIFICATION	3.095393757643632E-6	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9999968823699253	WITHOUT_CLASSIFICATION	3.117630074784037E-6	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9999981178903349	WITHOUT_CLASSIFICATION	1.882109665050962E-6	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9999979523861617	WITHOUT_CLASSIFICATION	2.0476138382672805E-6	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9999983508372993	WITHOUT_CLASSIFICATION	1.6491627007477054E-6	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999880318667174	WITHOUT_CLASSIFICATION	1.1968133282603451E-5	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999939082270778	WITHOUT_CLASSIFICATION	6.09177292222127E-6	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999999357219034	WITHOUT_CLASSIFICATION	6.427809664873023E-8	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999973798521237	WITHOUT_CLASSIFICATION	2.6201478763382255E-6	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999997210600992	WITHOUT_CLASSIFICATION	2.789399008232357E-7	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999174691784807	WITHOUT_CLASSIFICATION	8.253082151926926E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999999979136999	WITHOUT_CLASSIFICATION	2.0863000991582345E-8	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999998883543905	WITHOUT_CLASSIFICATION	1.1164560946492662E-7	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999996224864086	WITHOUT_CLASSIFICATION	3.775135914268363E-7	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999996224864086	WITHOUT_CLASSIFICATION	3.775135914268363E-7	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999754577840615	WITHOUT_CLASSIFICATION	2.4542215938577705E-5	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999965894695496	WITHOUT_CLASSIFICATION	3.410530450371311E-6	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999999978039377	WITHOUT_CLASSIFICATION	2.196062220526812E-9	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999989009804205	WITHOUT_CLASSIFICATION	1.0990195794274107E-6	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999999970498236	WITHOUT_CLASSIFICATION	2.9501763139061567E-9	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999781624506398	WITHOUT_CLASSIFICATION	2.1837549360316286E-5	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999440690675686	WITHOUT_CLASSIFICATION	5.593093243146094E-5	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999966864529741	WITHOUT_CLASSIFICATION	3.3135470258006765E-6	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999974404730722	WITHOUT_CLASSIFICATION	2.559526927852946E-6	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999973444043418	WITHOUT_CLASSIFICATION	2.655595658251437E-6	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999846935389765	WITHOUT_CLASSIFICATION	1.530646102355642E-5	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999688455684743	WITHOUT_CLASSIFICATION	3.115443152565439E-5	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.999999378281469	WITHOUT_CLASSIFICATION	6.217185309179668E-7	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999999268435151	WITHOUT_CLASSIFICATION	7.315648483277866E-8	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999906664541188	WITHOUT_CLASSIFICATION	9.333545881273081E-6	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999906664541188	WITHOUT_CLASSIFICATION	9.333545881273081E-6	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999954261935468	WITHOUT_CLASSIFICATION	4.5738064531672295E-6	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999998256220897	WITHOUT_CLASSIFICATION	1.7437791025796904E-7	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999998617925615	WITHOUT_CLASSIFICATION	1.3820743853893156E-7	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999533218875296	WITHOUT_CLASSIFICATION	4.667811247042782E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998251578333	WITHOUT_CLASSIFICATION	1.748421667981547E-7	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.99999966923137	WITHOUT_CLASSIFICATION	3.307686300913509E-7	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.999996355607734	WITHOUT_CLASSIFICATION	3.6443922660155713E-6	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.99999966923137	WITHOUT_CLASSIFICATION	3.307686300913509E-7	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999992183896491	WITHOUT_CLASSIFICATION	7.816103508419434E-7	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999996429915005	WITHOUT_CLASSIFICATION	3.570084995419547E-7	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9999870913938732	WITHOUT_CLASSIFICATION	1.2908606126860594E-5	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9999227427988617	WITHOUT_CLASSIFICATION	7.725720113818636E-5	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999989816976399	WITHOUT_CLASSIFICATION	1.0183023600002356E-6	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999992923295787	WITHOUT_CLASSIFICATION	7.076704212656607E-7	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9942506723272209	WITHOUT_CLASSIFICATION	0.005749327672779162	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999908748738484	WITHOUT_CLASSIFICATION	9.125126151674257E-6	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999988279854775	WITHOUT_CLASSIFICATION	1.172014522478303E-6	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999996326386145	WITHOUT_CLASSIFICATION	3.673613855642667E-7	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999998365051862	WITHOUT_CLASSIFICATION	1.634948137941093E-7	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999997848754394	WITHOUT_CLASSIFICATION	2.1512456065248267E-7	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999978231239097	WITHOUT_CLASSIFICATION	2.1768760902037624E-6	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998770961155817	WITHOUT_CLASSIFICATION	1.2290388441832295E-4	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999509399137	WITHOUT_CLASSIFICATION	4.906008622262831E-8	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999509399137	WITHOUT_CLASSIFICATION	4.906008622262831E-8	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999994007219017	WITHOUT_CLASSIFICATION	5.992780983048231E-7	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999976768976917	WITHOUT_CLASSIFICATION	2.3231023082469712E-6	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.999997558867697	WITHOUT_CLASSIFICATION	2.441132303031998E-6	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999999936864367	WITHOUT_CLASSIFICATION	6.313563310684641E-9	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9999999551295442	WITHOUT_CLASSIFICATION	4.487045588256833E-8	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.99999966923137	WITHOUT_CLASSIFICATION	3.307686300913509E-7	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999999059795694	WITHOUT_CLASSIFICATION	9.402043048771158E-8	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999998916485812	WITHOUT_CLASSIFICATION	1.0835141880573886E-7	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999992046797799	WITHOUT_CLASSIFICATION	7.953202202076392E-7	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.999999912912304	WITHOUT_CLASSIFICATION	8.708769599030105E-8	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999990142692	WITHOUT_CLASSIFICATION	9.857308031980166E-10	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9998164538949041	WITHOUT_CLASSIFICATION	1.8354610509591565E-4	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999912534542856	WITHOUT_CLASSIFICATION	8.746545714338468E-6	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999996876409749	WITHOUT_CLASSIFICATION	3.1235902507634476E-7	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9994516837387463	WITHOUT_CLASSIFICATION	5.483162612536909E-4	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999310565666736	WITHOUT_CLASSIFICATION	6.894343332634312E-5	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999573422653848	WITHOUT_CLASSIFICATION	4.265773461517532E-5	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999998194081016	WITHOUT_CLASSIFICATION	1.8059189843120608E-7	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.999999921816459	WITHOUT_CLASSIFICATION	7.818354094800272E-8	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999969300853991	WITHOUT_CLASSIFICATION	3.069914600816945E-6	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9997280824189955	WITHOUT_CLASSIFICATION	2.7191758100453825E-4	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999996540813626	WITHOUT_CLASSIFICATION	3.4591863739192394E-7	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999999109872891	WITHOUT_CLASSIFICATION	8.901271085332301E-8	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9999996948154712	WITHOUT_CLASSIFICATION	3.051845287291702E-7	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9999854923683642	WITHOUT_CLASSIFICATION	1.4507631635707354E-5	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9998394737146405	WITHOUT_CLASSIFICATION	1.6052628535940427E-4	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999961626835835	WITHOUT_CLASSIFICATION	3.837316416581067E-6	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999948450860997	WITHOUT_CLASSIFICATION	5.154913900274502E-6	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999999371728124	WITHOUT_CLASSIFICATION	6.282718761307838E-8	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999999156270828	WITHOUT_CLASSIFICATION	8.437291717494932E-8	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999998332851139	WITHOUT_CLASSIFICATION	1.667148861241683E-7	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999998009635195	WITHOUT_CLASSIFICATION	1.9903648047396047E-7	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999993586102954	WITHOUT_CLASSIFICATION	6.41389704596771E-7	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999997028576594	WITHOUT_CLASSIFICATION	2.97142340540513E-7	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.999984591857901	WITHOUT_CLASSIFICATION	1.540814209900476E-5	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999998940472713	WITHOUT_CLASSIFICATION	1.0595272870442368E-7	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999996592631674	WITHOUT_CLASSIFICATION	3.407368325558188E-7	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9999982239084111	WITHOUT_CLASSIFICATION	1.776091588833836E-6	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999895631593877	WITHOUT_CLASSIFICATION	1.0436840612210919E-5	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999998424856906	WITHOUT_CLASSIFICATION	1.5751430948144008E-7	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999823701857592	WITHOUT_CLASSIFICATION	1.7629814240731836E-5	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999987017745858	WITHOUT_CLASSIFICATION	1.2982254141688662E-6	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999987425511081	WITHOUT_CLASSIFICATION	1.257448891894424E-6	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9999980205938404	WITHOUT_CLASSIFICATION	1.97940615968295E-6	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9999997774518168	WITHOUT_CLASSIFICATION	2.225481832502985E-7	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999998058492798	WITHOUT_CLASSIFICATION	1.941507201892795E-7	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999931583748906	WITHOUT_CLASSIFICATION	6.841625109362564E-6	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9994156404489155	WITHOUT_CLASSIFICATION	5.843595510845804E-4	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999961159812829	WITHOUT_CLASSIFICATION	3.884018717031198E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999862888662027	WITHOUT_CLASSIFICATION	1.3711133797379168E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999998227968272	WITHOUT_CLASSIFICATION	1.7720317284411525E-7	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999996429915005	WITHOUT_CLASSIFICATION	3.570084995419547E-7	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999314887676434	WITHOUT_CLASSIFICATION	6.851123235659502E-5	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999995514545877	WITHOUT_CLASSIFICATION	4.48545412274107E-7	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999999720469702	WITHOUT_CLASSIFICATION	2.7953029832561182E-8	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999861787762736	WITHOUT_CLASSIFICATION	1.3821223726395134E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999861787762736	WITHOUT_CLASSIFICATION	1.3821223726395134E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999977834809206	WITHOUT_CLASSIFICATION	2.216519079353642E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999977834809206	WITHOUT_CLASSIFICATION	2.216519079353642E-6	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999977834809206	WITHOUT_CLASSIFICATION	2.216519079353642E-6	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999908490555167	WITHOUT_CLASSIFICATION	9.150944483316537E-6	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999908490555167	WITHOUT_CLASSIFICATION	9.150944483316537E-6	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999981952371397	WITHOUT_CLASSIFICATION	1.8047628602547062E-6	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999981952371397	WITHOUT_CLASSIFICATION	1.8047628602547062E-6	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999983696317134	WITHOUT_CLASSIFICATION	1.6303682866956585E-6	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999983274807882	WITHOUT_CLASSIFICATION	1.672519211757414E-6	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999987080412958	WITHOUT_CLASSIFICATION	1.2919587041258854E-6	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999987080412958	WITHOUT_CLASSIFICATION	1.2919587041258854E-6	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999999664574406	WITHOUT_CLASSIFICATION	3.354255946217123E-8	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999984528555138	WITHOUT_CLASSIFICATION	1.547144486156008E-6	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999998396948394	WITHOUT_CLASSIFICATION	1.6030516053724674E-7	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.999999721474839	WITHOUT_CLASSIFICATION	2.7852516093702815E-7	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999992442914061	WITHOUT_CLASSIFICATION	7.557085939531785E-7	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.999999683900799	WITHOUT_CLASSIFICATION	3.1609920108108095E-7	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.999999566609564	WITHOUT_CLASSIFICATION	4.3339043589973405E-7	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999996997719889	WITHOUT_CLASSIFICATION	3.002280110778826E-7	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9999998290871117	WITHOUT_CLASSIFICATION	1.709128883629179E-7	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9999705104717406	WITHOUT_CLASSIFICATION	2.948952825937805E-5	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999998943788002	WITHOUT_CLASSIFICATION	1.0562119978553584E-7	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9999997140769165	WITHOUT_CLASSIFICATION	2.859230834546862E-7	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9999979232125201	WITHOUT_CLASSIFICATION	2.0767874799755555E-6	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9999980983016773	WITHOUT_CLASSIFICATION	1.9016983227488417E-6	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999998628466508	WITHOUT_CLASSIFICATION	1.3715334922260424E-7	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999914005833309	WITHOUT_CLASSIFICATION	8.599416669036266E-6	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9914829035395741	WITHOUT_CLASSIFICATION	0.00851709646042591	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999834616084362	WITHOUT_CLASSIFICATION	1.6538391563784916E-5	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999981741354996	WITHOUT_CLASSIFICATION	1.8258645003790444E-6	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999829664857081	WITHOUT_CLASSIFICATION	1.7033514291943743E-5	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999973548553478	WITHOUT_CLASSIFICATION	2.6451446521269047E-6	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.999995886645053	WITHOUT_CLASSIFICATION	4.113354946919378E-6	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9999984686593786	WITHOUT_CLASSIFICATION	1.5313406214856477E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999781043474	WITHOUT_CLASSIFICATION	2.1895652525883795E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999638425553	WITHOUT_CLASSIFICATION	3.61574446301738E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999839825806	WITHOUT_CLASSIFICATION	1.6017419406592416E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999769242381	WITHOUT_CLASSIFICATION	2.307576184872249E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999472929532	WITHOUT_CLASSIFICATION	5.270704698955825E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999633790358	WITHOUT_CLASSIFICATION	3.662096403926439E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999395258732	WITHOUT_CLASSIFICATION	6.047412678328992E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999732105109	WITHOUT_CLASSIFICATION	2.6789488996324376E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998885402306	WITHOUT_CLASSIFICATION	1.1145976937659395E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998159406212	WITHOUT_CLASSIFICATION	1.840593789043142E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999371005748	WITHOUT_CLASSIFICATION	6.289942522353096E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998159406212	WITHOUT_CLASSIFICATION	1.840593789043142E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998159406212	WITHOUT_CLASSIFICATION	1.840593789043142E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998159406212	WITHOUT_CLASSIFICATION	1.840593789043142E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998159406212	WITHOUT_CLASSIFICATION	1.840593789043142E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998159406212	WITHOUT_CLASSIFICATION	1.840593789043142E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998159406212	WITHOUT_CLASSIFICATION	1.840593789043142E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999371005748	WITHOUT_CLASSIFICATION	6.289942522353096E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999371005748	WITHOUT_CLASSIFICATION	6.289942522353096E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999371005748	WITHOUT_CLASSIFICATION	6.289942522353096E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999371005748	WITHOUT_CLASSIFICATION	6.289942522353096E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999371005748	WITHOUT_CLASSIFICATION	6.289942522353096E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999371005748	WITHOUT_CLASSIFICATION	6.289942522353096E-8	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999971830948309	WITHOUT_CLASSIFICATION	2.8169051691047497E-6	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999992664130768	WITHOUT_CLASSIFICATION	7.335869231093173E-7	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.999970502155876	WITHOUT_CLASSIFICATION	2.949784412405932E-5	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998654904748	WITHOUT_CLASSIFICATION	1.3450952521469255E-7	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999999927776966	WITHOUT_CLASSIFICATION	7.222303356328187E-9	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999120731996	WITHOUT_CLASSIFICATION	8.792680044177278E-8	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999978845771756	WITHOUT_CLASSIFICATION	2.115422824355773E-6	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999999973429131	WITHOUT_CLASSIFICATION	2.657086892063163E-9	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999975819076782	WITHOUT_CLASSIFICATION	2.4180923219155204E-6	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999794197907234	WITHOUT_CLASSIFICATION	2.0580209276608913E-5	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.9906750710664333	WITHOUT_CLASSIFICATION	0.009324928933566795	IMPLEMENTATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999994554913	WITHOUT_CLASSIFICATION	5.445085779894636E-10	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999969829287936	WITHOUT_CLASSIFICATION	3.0170712064412155E-6	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999968371295	WITHOUT_CLASSIFICATION	3.1628705157050484E-9	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.999999764517369	WITHOUT_CLASSIFICATION	2.3548263109250225E-7	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999996103147766	WITHOUT_CLASSIFICATION	3.896852234406355E-7	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999995985012045	WITHOUT_CLASSIFICATION	4.0149879565047256E-7	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.99999988944283	WITHOUT_CLASSIFICATION	1.1055717004406583E-7	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999999524277265	WITHOUT_CLASSIFICATION	4.757227347117401E-8	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999999856236518	WITHOUT_CLASSIFICATION	1.437634813375056E-8	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999999922914011	WITHOUT_CLASSIFICATION	7.708598935350736E-9	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999994265893856	WITHOUT_CLASSIFICATION	5.734106144631115E-7	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.999996355607734	WITHOUT_CLASSIFICATION	3.6443922660155713E-6	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999999871178815	WITHOUT_CLASSIFICATION	1.2882118456487021E-8	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999993818035269	WITHOUT_CLASSIFICATION	6.181964731637123E-7	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999999894863482	WITHOUT_CLASSIFICATION	1.051365183327458E-8	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999991387752	WITHOUT_CLASSIFICATION	8.612248334469695E-10	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999838929683484	WITHOUT_CLASSIFICATION	1.6107031651568146E-5	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.9999881181919648	WITHOUT_CLASSIFICATION	1.1881808035272443E-5	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999999971648978	WITHOUT_CLASSIFICATION	2.835102169163643E-9	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.999997127832368	WITHOUT_CLASSIFICATION	2.872167631891508E-6	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999999702611095	WITHOUT_CLASSIFICATION	2.9738890426407153E-8	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999999993691283	WITHOUT_CLASSIFICATION	6.308717416102663E-10	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.999999955088469	WITHOUT_CLASSIFICATION	4.491153112524918E-8	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999997739577388	WITHOUT_CLASSIFICATION	2.2604226128291478E-7	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999970800528545	WITHOUT_CLASSIFICATION	2.9199471454940536E-6	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999935351073369	WITHOUT_CLASSIFICATION	6.464892663050238E-6	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999999193818223	WITHOUT_CLASSIFICATION	8.061817764673064E-8	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999999782211193	WITHOUT_CLASSIFICATION	2.177888072298922E-8	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.999999995492201	WITHOUT_CLASSIFICATION	4.507798972660025E-9	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999992183282268	WITHOUT_CLASSIFICATION	7.816717732509858E-7	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999998231468975	WITHOUT_CLASSIFICATION	1.7685310251494116E-7	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999999992101796	WITHOUT_CLASSIFICATION	7.898204827513107E-10	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999999608839291	WITHOUT_CLASSIFICATION	3.9116070992241433E-8	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999999608839291	WITHOUT_CLASSIFICATION	3.9116070992241433E-8	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999998050479895	WITHOUT_CLASSIFICATION	1.9495201047252159E-7	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999998050479895	WITHOUT_CLASSIFICATION	1.9495201047252159E-7	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.99999979760535	WITHOUT_CLASSIFICATION	2.0239464997106475E-7	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.99999979760535	WITHOUT_CLASSIFICATION	2.0239464997106475E-7	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999991526172498	WITHOUT_CLASSIFICATION	8.473827501139088E-7	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999983472261353	WITHOUT_CLASSIFICATION	1.6527738647464329E-6	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999999570346566	WITHOUT_CLASSIFICATION	4.29653434875061E-8	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999999994101051	WITHOUT_CLASSIFICATION	5.898950262014471E-10	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999999856315887	WITHOUT_CLASSIFICATION	1.4368411399880046E-8	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999836789710982	WITHOUT_CLASSIFICATION	1.632102890182579E-5	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9999978223143184	WITHOUT_CLASSIFICATION	2.177685681511606E-6	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999982187066	WITHOUT_CLASSIFICATION	1.7812934625916876E-9	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.999999997406813	WITHOUT_CLASSIFICATION	2.593186913372853E-9	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999999419147726	WITHOUT_CLASSIFICATION	5.8085227376818564E-8	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999999505203698	WITHOUT_CLASSIFICATION	4.9479630219881996E-8	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999997829386568	WITHOUT_CLASSIFICATION	2.1706134320094521E-7	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.999999994059208	WITHOUT_CLASSIFICATION	5.940791934175207E-9	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999998218288146	WITHOUT_CLASSIFICATION	1.7817118532999628E-7	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999963795796828	WITHOUT_CLASSIFICATION	3.620420317177526E-6	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9999999657930826	WITHOUT_CLASSIFICATION	3.4206917536298646E-8	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999875492302237	WITHOUT_CLASSIFICATION	1.2450769776302767E-5	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999998969755803	WITHOUT_CLASSIFICATION	1.0302441958780317E-7	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999959223554721	WITHOUT_CLASSIFICATION	4.077644527972927E-6	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9999992828899565	WITHOUT_CLASSIFICATION	7.171100434803752E-7	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.999998309384415	WITHOUT_CLASSIFICATION	1.6906155850657351E-6	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.999997701487034	WITHOUT_CLASSIFICATION	2.2985129658488532E-6	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999988801843083	WITHOUT_CLASSIFICATION	1.1198156918077187E-6	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999999780254688	WITHOUT_CLASSIFICATION	2.1974531194298144E-8	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999999924155286	WITHOUT_CLASSIFICATION	7.584471327719193E-9	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999999990231647	WITHOUT_CLASSIFICATION	9.768352038097073E-10	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9999996983210189	WITHOUT_CLASSIFICATION	3.0167898117689557E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999992042814885	WITHOUT_CLASSIFICATION	7.957185115563278E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999992042814885	WITHOUT_CLASSIFICATION	7.957185115563278E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999992042814885	WITHOUT_CLASSIFICATION	7.957185115563278E-7	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9993555648632586	WITHOUT_CLASSIFICATION	6.444351367414266E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9993555648632586	WITHOUT_CLASSIFICATION	6.444351367414266E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999969300853991	WITHOUT_CLASSIFICATION	3.069914600816945E-6	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999969300853991	WITHOUT_CLASSIFICATION	3.069914600816945E-6	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.999999517370038	WITHOUT_CLASSIFICATION	4.82629961936524E-7	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.995848506307943	WITHOUT_CLASSIFICATION	0.0041514936920570055	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999987107685706	WITHOUT_CLASSIFICATION	1.2892314294064888E-6	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999999057972567	WITHOUT_CLASSIFICATION	9.420274329396562E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999992042814885	WITHOUT_CLASSIFICATION	7.957185115563278E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999992042814885	WITHOUT_CLASSIFICATION	7.957185115563278E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999992042814885	WITHOUT_CLASSIFICATION	7.957185115563278E-7	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9993555648632586	WITHOUT_CLASSIFICATION	6.444351367414266E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9993555648632586	WITHOUT_CLASSIFICATION	6.444351367414266E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9993555648632586	WITHOUT_CLASSIFICATION	6.444351367414266E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999969300853991	WITHOUT_CLASSIFICATION	3.069914600816945E-6	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999969300853991	WITHOUT_CLASSIFICATION	3.069914600816945E-6	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999999790282049	WITHOUT_CLASSIFICATION	2.0971795146788376E-8	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999979498174476	WITHOUT_CLASSIFICATION	2.0501825524322165E-6	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998200045497	WITHOUT_CLASSIFICATION	1.799954502911877E-7	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998200045497	WITHOUT_CLASSIFICATION	1.799954502911877E-7	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998200045497	WITHOUT_CLASSIFICATION	1.799954502911877E-7	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998200045497	WITHOUT_CLASSIFICATION	1.799954502911877E-7	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998200045497	WITHOUT_CLASSIFICATION	1.799954502911877E-7	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999976382250665	WITHOUT_CLASSIFICATION	2.361774933556228E-6	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999998520552013	WITHOUT_CLASSIFICATION	1.4794479867259165E-7	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999686153561178	WITHOUT_CLASSIFICATION	3.138464388229615E-5	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999986840294606	WITHOUT_CLASSIFICATION	1.3159705395104836E-6	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999975748021847	WITHOUT_CLASSIFICATION	2.4251978152784247E-6	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999951779945878	WITHOUT_CLASSIFICATION	4.82200541226673E-6	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9987945258388694	WITHOUT_CLASSIFICATION	0.0012054741611305221	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999996289373441	WITHOUT_CLASSIFICATION	3.7106265591943906E-7	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999993597595679	WITHOUT_CLASSIFICATION	6.402404320774547E-7	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999979942076068	WITHOUT_CLASSIFICATION	2.0057923931860357E-6	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999967362150888	WITHOUT_CLASSIFICATION	3.263784911270781E-6	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999997329578654	WITHOUT_CLASSIFICATION	2.670421346067896E-7	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999905660178164	WITHOUT_CLASSIFICATION	9.433982183663606E-6	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999995981432035	WITHOUT_CLASSIFICATION	4.0185679658499933E-7	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999997570331314	WITHOUT_CLASSIFICATION	2.429668686856755E-7	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999801387221501	WITHOUT_CLASSIFICATION	1.986127784996241E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999801387221501	WITHOUT_CLASSIFICATION	1.986127784996241E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999801387221501	WITHOUT_CLASSIFICATION	1.986127784996241E-5	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.999999973965044	WITHOUT_CLASSIFICATION	2.6034955907185866E-8	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999999739635884	WITHOUT_CLASSIFICATION	2.6036411598403635E-8	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999954445850542	WITHOUT_CLASSIFICATION	4.555414945825563E-6	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999959461878	WITHOUT_CLASSIFICATION	4.053812186796561E-9	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999996725584397	WITHOUT_CLASSIFICATION	3.274415602551725E-7	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999998544573565	WITHOUT_CLASSIFICATION	1.4554264356365365E-7	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999998524590477	WITHOUT_CLASSIFICATION	1.4754095243035864E-7	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9999998589625653	WITHOUT_CLASSIFICATION	1.410374347680313E-7	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999997485979116	WITHOUT_CLASSIFICATION	2.514020883465407E-7	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999999524914551	WITHOUT_CLASSIFICATION	4.750854494393406E-8	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999999289701841	WITHOUT_CLASSIFICATION	7.102981588087871E-8	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999999203280784	WITHOUT_CLASSIFICATION	7.967192162688665E-8	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999994023205311	WITHOUT_CLASSIFICATION	5.976794689424403E-7	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9999997144827364	WITHOUT_CLASSIFICATION	2.855172635914627E-7	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9999997885856091	WITHOUT_CLASSIFICATION	2.1141439095709776E-7	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999995440617967	WITHOUT_CLASSIFICATION	4.559382033356525E-7	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999989219524053	WITHOUT_CLASSIFICATION	1.0780475946853466E-6	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999999541395007	WITHOUT_CLASSIFICATION	4.58604991444706E-8	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9999997270324379	WITHOUT_CLASSIFICATION	2.729675620919803E-7	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999973195881977	WITHOUT_CLASSIFICATION	2.680411802265644E-6	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999976386942167	WITHOUT_CLASSIFICATION	2.3613057833917553E-6	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999952197360171	WITHOUT_CLASSIFICATION	4.780263982867484E-6	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9998034582626135	WITHOUT_CLASSIFICATION	1.9654173738634095E-4	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999997797382238	WITHOUT_CLASSIFICATION	2.2026177603045306E-7	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9999989204406965	WITHOUT_CLASSIFICATION	1.0795593035660116E-6	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9999989797295918	WITHOUT_CLASSIFICATION	1.0202704081030778E-6	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9999997128274394	WITHOUT_CLASSIFICATION	2.8717256054608137E-7	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9999966401025405	WITHOUT_CLASSIFICATION	3.3598974595734278E-6	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999870421205351	WITHOUT_CLASSIFICATION	1.2957879464899342E-5	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9999978549240189	WITHOUT_CLASSIFICATION	2.1450759810103817E-6	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9999977982286946	WITHOUT_CLASSIFICATION	2.201771305337734E-6	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9999976888952946	WITHOUT_CLASSIFICATION	2.3111047054239195E-6	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.9999978460000145	WITHOUT_CLASSIFICATION	2.1539999856075635E-6	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9999976004982355	WITHOUT_CLASSIFICATION	2.399501764563115E-6	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9999969828465834	WITHOUT_CLASSIFICATION	3.017153416461938E-6	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9999969849297674	WITHOUT_CLASSIFICATION	3.0150702326941305E-6	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999997434522845	WITHOUT_CLASSIFICATION	2.565477154873643E-7	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999970207224128	WITHOUT_CLASSIFICATION	2.979277587148758E-6	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999999928902753	WITHOUT_CLASSIFICATION	7.1097246279129496E-9	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999965042436277	WITHOUT_CLASSIFICATION	3.495756372347106E-6	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999999766798116	WITHOUT_CLASSIFICATION	2.3320188405735366E-8	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999996006387918	WITHOUT_CLASSIFICATION	3.993612082567757E-7	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9998535332548713	WITHOUT_CLASSIFICATION	1.4646674512882338E-4	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999983152068602	WITHOUT_CLASSIFICATION	1.6847931397561452E-6	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.999999507558115	WITHOUT_CLASSIFICATION	4.924418851453134E-7	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.999995282163999	WITHOUT_CLASSIFICATION	4.717836000873558E-6	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.999909676968017	WITHOUT_CLASSIFICATION	9.032303198295961E-5	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.999909676968017	WITHOUT_CLASSIFICATION	9.032303198295961E-5	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.999997109505011	WITHOUT_CLASSIFICATION	2.890494988953453E-6	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.999999781526123	WITHOUT_CLASSIFICATION	2.184738769041037E-7	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999947365737722	WITHOUT_CLASSIFICATION	5.263426227679112E-6	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999901964868492	WITHOUT_CLASSIFICATION	9.803513150822174E-6	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999998484262257	WITHOUT_CLASSIFICATION	1.515737743747357E-7	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999992301325462	WITHOUT_CLASSIFICATION	7.698674538395647E-7	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999980321483479	WITHOUT_CLASSIFICATION	1.96785165194302E-6	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.999999993010436	WITHOUT_CLASSIFICATION	6.989564075583119E-9	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999999411485203	WITHOUT_CLASSIFICATION	5.885147971774897E-8	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.999999878763144	WITHOUT_CLASSIFICATION	1.212368560069272E-7	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999562536763	WITHOUT_CLASSIFICATION	4.374632361483314E-8	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999562536763	WITHOUT_CLASSIFICATION	4.374632361483314E-8	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999562536763	WITHOUT_CLASSIFICATION	4.374632361483314E-8	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999562536763	WITHOUT_CLASSIFICATION	4.374632361483314E-8	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9999971580769095	WITHOUT_CLASSIFICATION	2.8419230905401838E-6	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9999965086578847	WITHOUT_CLASSIFICATION	3.491342115250226E-6	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9999955828208443	WITHOUT_CLASSIFICATION	4.4171791557637795E-6	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9999949590190258	WITHOUT_CLASSIFICATION	5.040980974115357E-6	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999836168600493	WITHOUT_CLASSIFICATION	1.638313995068007E-5	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999999052660642	WITHOUT_CLASSIFICATION	9.473393579252727E-8	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999991420956784	WITHOUT_CLASSIFICATION	8.579043215605955E-7	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999955605123185	WITHOUT_CLASSIFICATION	4.4394876814695765E-6	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999955605123185	WITHOUT_CLASSIFICATION	4.4394876814695765E-6	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999996941420892	WITHOUT_CLASSIFICATION	3.058579107986704E-7	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999985639423584	WITHOUT_CLASSIFICATION	1.4360576415554553E-6	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999984448491193	WITHOUT_CLASSIFICATION	1.5551508807280708E-6	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999968614082	WITHOUT_CLASSIFICATION	3.138591805898898E-9	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999968614082	WITHOUT_CLASSIFICATION	3.138591805898898E-9	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999999981039338	WITHOUT_CLASSIFICATION	1.896066134340825E-9	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999909484248909	WITHOUT_CLASSIFICATION	9.051575109186526E-6	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999909484248909	WITHOUT_CLASSIFICATION	9.051575109186526E-6	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999999346572954	WITHOUT_CLASSIFICATION	6.534270462630131E-8	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999994499811701	WITHOUT_CLASSIFICATION	5.500188299153533E-7	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999997863870456	WITHOUT_CLASSIFICATION	2.1361295452564926E-7	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999980829163208	WITHOUT_CLASSIFICATION	1.9170836792136937E-6	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.999777133459576	WITHOUT_CLASSIFICATION	2.228665404241073E-4	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999972112894	WITHOUT_CLASSIFICATION	2.788710545057765E-9	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999998767294012	WITHOUT_CLASSIFICATION	1.2327059884741606E-7	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9999880386376707	WITHOUT_CLASSIFICATION	1.1961362329259282E-5	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999998493688091	WITHOUT_CLASSIFICATION	1.5063119080180797E-7	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999990779720304	WITHOUT_CLASSIFICATION	9.220279696610123E-7	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999994716973285	WITHOUT_CLASSIFICATION	5.283026715690746E-7	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999956893498037	WITHOUT_CLASSIFICATION	4.3106501963796286E-6	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999948839169541	WITHOUT_CLASSIFICATION	5.116083045838869E-6	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999802111355097	WITHOUT_CLASSIFICATION	1.9788864490281445E-5	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999855348483461	WITHOUT_CLASSIFICATION	1.4465151653999037E-5	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999999597708454	WITHOUT_CLASSIFICATION	4.022915458111878E-8	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.999999497592779	WITHOUT_CLASSIFICATION	5.024072211199125E-7	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9999984218955057	WITHOUT_CLASSIFICATION	1.5781044943435254E-6	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999884171334	WITHOUT_CLASSIFICATION	1.1582866444423264E-8	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999999873037508	WITHOUT_CLASSIFICATION	1.2696249147429497E-8	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999997207091401	WITHOUT_CLASSIFICATION	2.7929085978085093E-7	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999939492893277	WITHOUT_CLASSIFICATION	6.050710672353359E-6	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999897966790138	WITHOUT_CLASSIFICATION	1.0203320986205318E-5	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999994552785892	WITHOUT_CLASSIFICATION	5.447214107680374E-7	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999999872218753	WITHOUT_CLASSIFICATION	1.277812457376576E-8	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999999084540535	WITHOUT_CLASSIFICATION	9.154594660540169E-8	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999993650940092	WITHOUT_CLASSIFICATION	6.349059907983445E-7	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999999649501364	WITHOUT_CLASSIFICATION	3.5049863476497536E-8	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999995784378	WITHOUT_CLASSIFICATION	4.2156213150531084E-10	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999884861011408	WITHOUT_CLASSIFICATION	1.151389885916384E-5	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9999992396268103	WITHOUT_CLASSIFICATION	7.60373189626091E-7	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999992703728472	WITHOUT_CLASSIFICATION	7.296271527322747E-7	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.7587502137964092	WITHOUT_CLASSIFICATION	0.24124978620359072	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.999999650049237	WITHOUT_CLASSIFICATION	3.4995076310451216E-7	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999956955769578	WITHOUT_CLASSIFICATION	4.304423042178087E-6	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999999080607024	WITHOUT_CLASSIFICATION	9.193929759554082E-8	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999939143729905	WITHOUT_CLASSIFICATION	6.085627009529739E-6	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999999812909285	WITHOUT_CLASSIFICATION	1.87090715855309E-8	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999995386288699	WITHOUT_CLASSIFICATION	4.6137113010435073E-7	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999999080607024	WITHOUT_CLASSIFICATION	9.193929759554082E-8	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999939143729905	WITHOUT_CLASSIFICATION	6.085627009529739E-6	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999853342045485	WITHOUT_CLASSIFICATION	1.4665795451529028E-5	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999999017900462	WITHOUT_CLASSIFICATION	9.820995385109456E-8	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999999017900462	WITHOUT_CLASSIFICATION	9.820995385109456E-8	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999630143034645	WITHOUT_CLASSIFICATION	3.6985696535471505E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999999824047	WITHOUT_CLASSIFICATION	1.7595213401101358E-11	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999996048919492	WITHOUT_CLASSIFICATION	3.951080507925141E-7	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999991696559346	WITHOUT_CLASSIFICATION	8.303440653455351E-7	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999903509339002	WITHOUT_CLASSIFICATION	9.649066099807702E-6	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999977573913896	WITHOUT_CLASSIFICATION	2.242608610392008E-6	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999637597388987	WITHOUT_CLASSIFICATION	3.6240261101252725E-5	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999928070634341	WITHOUT_CLASSIFICATION	7.192936565910849E-6	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999356307440974	WITHOUT_CLASSIFICATION	6.436925590256516E-5	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.99999920942233	WITHOUT_CLASSIFICATION	7.905776699868155E-7	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999994493867861	WITHOUT_CLASSIFICATION	5.506132138286983E-7	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999998016006724	WITHOUT_CLASSIFICATION	1.983993275661013E-7	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999999395050255	WITHOUT_CLASSIFICATION	6.04949744439479E-8	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999962046707	WITHOUT_CLASSIFICATION	3.7953292759950815E-9	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999962046707	WITHOUT_CLASSIFICATION	3.7953292759950815E-9	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999989904169614	WITHOUT_CLASSIFICATION	1.0095830386171759E-6	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999989904169614	WITHOUT_CLASSIFICATION	1.0095830386171759E-6	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999999134060791	WITHOUT_CLASSIFICATION	8.659392098984212E-8	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999996468665151	WITHOUT_CLASSIFICATION	3.5313348488665236E-7	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999920272094743	WITHOUT_CLASSIFICATION	7.972790525606214E-6	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999999549257444	WITHOUT_CLASSIFICATION	4.5074255460090876E-8	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999991832347677	WITHOUT_CLASSIFICATION	8.16765232433803E-7	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999999391151165	WITHOUT_CLASSIFICATION	6.088488347927263E-8	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999996048919492	WITHOUT_CLASSIFICATION	3.951080507925141E-7	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999991696559346	WITHOUT_CLASSIFICATION	8.303440653455351E-7	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999356307440974	WITHOUT_CLASSIFICATION	6.436925590256516E-5	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.99999920942233	WITHOUT_CLASSIFICATION	7.905776699868155E-7	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999996120669679	WITHOUT_CLASSIFICATION	3.879330321878668E-7	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999938454660777	WITHOUT_CLASSIFICATION	6.154533922314249E-6	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999986679121629	WITHOUT_CLASSIFICATION	1.332087837068599E-6	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999998916447931	WITHOUT_CLASSIFICATION	1.0835520688901625E-7	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999997061047066	WITHOUT_CLASSIFICATION	2.9389529337194496E-7	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999999021513424	WITHOUT_CLASSIFICATION	9.784865764140267E-8	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999948737679729	WITHOUT_CLASSIFICATION	5.126232027033763E-6	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999996538353119	WITHOUT_CLASSIFICATION	3.461646880410377E-7	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999943167406931	WITHOUT_CLASSIFICATION	5.6832593069470005E-6	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999641535944044	WITHOUT_CLASSIFICATION	3.584640559556457E-5	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999432322503	WITHOUT_CLASSIFICATION	5.676774971395225E-8	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999997727587854	WITHOUT_CLASSIFICATION	2.2724121454832643E-7	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.9999885587932441	WITHOUT_CLASSIFICATION	1.1441206755941607E-5	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999971764788849	WITHOUT_CLASSIFICATION	2.8235211151125624E-6	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999999034003343	WITHOUT_CLASSIFICATION	9.659966572206003E-8	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.999975552363902	WITHOUT_CLASSIFICATION	2.4447636097957434E-5	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999984535175496	WITHOUT_CLASSIFICATION	1.5464824503507504E-6	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999996060021105	WITHOUT_CLASSIFICATION	3.939978895890564E-7	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.99999996501738	WITHOUT_CLASSIFICATION	3.498262002611915E-8	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999999481759759	WITHOUT_CLASSIFICATION	5.1824024140682E-8	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999998736257502	WITHOUT_CLASSIFICATION	1.2637424981523106E-7	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999998736257502	WITHOUT_CLASSIFICATION	1.2637424981523106E-7	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999964823326264	WITHOUT_CLASSIFICATION	3.5176673737314108E-6	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999875118860823	WITHOUT_CLASSIFICATION	1.2488113917747527E-5	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999997347979234	WITHOUT_CLASSIFICATION	2.6520207670681403E-7	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999999697386794	WITHOUT_CLASSIFICATION	3.026132057535892E-8	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999999697386794	WITHOUT_CLASSIFICATION	3.026132057535892E-8	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999986679121629	WITHOUT_CLASSIFICATION	1.332087837068599E-6	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999998777958816	WITHOUT_CLASSIFICATION	1.2220411831865796E-7	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999999623480944	WITHOUT_CLASSIFICATION	3.76519055539279E-8	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999888206011	WITHOUT_CLASSIFICATION	1.1179398724342468E-8	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999883428154	WITHOUT_CLASSIFICATION	1.1657184609641993E-8	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999846520429	WITHOUT_CLASSIFICATION	1.5347957092928473E-8	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999972945371888	WITHOUT_CLASSIFICATION	2.7054628111510536E-6	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999998843864759	WITHOUT_CLASSIFICATION	1.1561352419757262E-7	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9999926683392575	WITHOUT_CLASSIFICATION	7.331660742463139E-6	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999971344236414	WITHOUT_CLASSIFICATION	2.8655763585627316E-6	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999999890237319	WITHOUT_CLASSIFICATION	1.0976268057423857E-8	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999988579886165	WITHOUT_CLASSIFICATION	1.142011383444982E-6	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.999999988982929	WITHOUT_CLASSIFICATION	1.101707108716454E-8	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999925953626427	WITHOUT_CLASSIFICATION	7.40463735723205E-6	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999996335948946	WITHOUT_CLASSIFICATION	3.6640510530768307E-7	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9999994363862666	WITHOUT_CLASSIFICATION	5.636137334069061E-7	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999945585890202	WITHOUT_CLASSIFICATION	5.4414109797928874E-6	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9999991250805814	WITHOUT_CLASSIFICATION	8.749194186813107E-7	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999999796309149	WITHOUT_CLASSIFICATION	2.0369085058890183E-8	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999926713571984	WITHOUT_CLASSIFICATION	7.3286428016991005E-6	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.999999999032959	WITHOUT_CLASSIFICATION	9.670410100196933E-10	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.999999684523166	WITHOUT_CLASSIFICATION	3.1547683401056517E-7	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999931894317553	WITHOUT_CLASSIFICATION	6.810568244785865E-6	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999984992960516	WITHOUT_CLASSIFICATION	1.500703948434808E-6	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999762437539	WITHOUT_CLASSIFICATION	2.3756245989021944E-8	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999997191416686	WITHOUT_CLASSIFICATION	2.8085833137178766E-7	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999998553666797	WITHOUT_CLASSIFICATION	1.44633320350496E-7	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999992159307117	WITHOUT_CLASSIFICATION	7.840692883218675E-7	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999998912338586	WITHOUT_CLASSIFICATION	1.0876614142488433E-7	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999989512864854	WITHOUT_CLASSIFICATION	1.0487135146215978E-6	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999989833108	WITHOUT_CLASSIFICATION	1.0166892002349259E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999989833108	WITHOUT_CLASSIFICATION	1.0166892002349259E-8	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999999278572079	WITHOUT_CLASSIFICATION	7.214279212253688E-8	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999997153435259	WITHOUT_CLASSIFICATION	2.846564739677603E-7	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999997153435259	WITHOUT_CLASSIFICATION	2.846564739677603E-7	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999949738875	WITHOUT_CLASSIFICATION	5.026112459258405E-9	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999949738875	WITHOUT_CLASSIFICATION	5.026112459258405E-9	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999991846099909	WITHOUT_CLASSIFICATION	8.153900090571905E-7	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999998960660527	WITHOUT_CLASSIFICATION	1.039339472803534E-7	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999999975071374	WITHOUT_CLASSIFICATION	2.4928626101338672E-8	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999996489061218	WITHOUT_CLASSIFICATION	3.510938781249695E-7	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999631555004	WITHOUT_CLASSIFICATION	3.6844499601125584E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999810485011587	WITHOUT_CLASSIFICATION	1.8951498841357573E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999810485011587	WITHOUT_CLASSIFICATION	1.8951498841357573E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999762437539	WITHOUT_CLASSIFICATION	2.3756245989021944E-8	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999762437539	WITHOUT_CLASSIFICATION	2.3756245989021944E-8	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999762437539	WITHOUT_CLASSIFICATION	2.3756245989021944E-8	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999997191416686	WITHOUT_CLASSIFICATION	2.8085833137178766E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999989833108	WITHOUT_CLASSIFICATION	1.0166892002349259E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999989833108	WITHOUT_CLASSIFICATION	1.0166892002349259E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999989833108	WITHOUT_CLASSIFICATION	1.0166892002349259E-8	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999991846099909	WITHOUT_CLASSIFICATION	8.153900090571905E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999991846099909	WITHOUT_CLASSIFICATION	8.153900090571905E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999991846099909	WITHOUT_CLASSIFICATION	8.153900090571905E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999996489061218	WITHOUT_CLASSIFICATION	3.510938781249695E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999996489061218	WITHOUT_CLASSIFICATION	3.510938781249695E-7	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999998804615658	WITHOUT_CLASSIFICATION	1.1953843412413322E-7	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999999380662478	WITHOUT_CLASSIFICATION	6.193375232902175E-8	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999999607909611	WITHOUT_CLASSIFICATION	3.9209038963212525E-8	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9338662161644568	WITHOUT_CLASSIFICATION	0.06613378383554314	IMPLEMENTATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9999731675310639	WITHOUT_CLASSIFICATION	2.6832468936042652E-5	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9999882720578188	WITHOUT_CLASSIFICATION	1.1727942181131504E-5	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9999882720578188	WITHOUT_CLASSIFICATION	1.1727942181131504E-5	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999997367119617	WITHOUT_CLASSIFICATION	2.63288038246467E-7	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999972945371888	WITHOUT_CLASSIFICATION	2.7054628111510536E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999972945371888	WITHOUT_CLASSIFICATION	2.7054628111510536E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999972945371888	WITHOUT_CLASSIFICATION	2.7054628111510536E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999972945371888	WITHOUT_CLASSIFICATION	2.7054628111510536E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999972945371888	WITHOUT_CLASSIFICATION	2.7054628111510536E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999381243707	WITHOUT_CLASSIFICATION	6.187562923306488E-8	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999381243707	WITHOUT_CLASSIFICATION	6.187562923306488E-8	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999381243707	WITHOUT_CLASSIFICATION	6.187562923306488E-8	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999999885878906	WITHOUT_CLASSIFICATION	1.1412109245997696E-8	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999988399889546	WITHOUT_CLASSIFICATION	1.1600110454507465E-6	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999997191416686	WITHOUT_CLASSIFICATION	2.8085833137178766E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999991846099909	WITHOUT_CLASSIFICATION	8.153900090571905E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999991846099909	WITHOUT_CLASSIFICATION	8.153900090571905E-7	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999972945371888	WITHOUT_CLASSIFICATION	2.7054628111510536E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999972945371888	WITHOUT_CLASSIFICATION	2.7054628111510536E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999381243707	WITHOUT_CLASSIFICATION	6.187562923306488E-8	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999997367119617	WITHOUT_CLASSIFICATION	2.63288038246467E-7	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999991434591708	WITHOUT_CLASSIFICATION	8.565408292546979E-7	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.9999996138410463	WITHOUT_CLASSIFICATION	3.861589537434428E-7	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999995593696569	WITHOUT_CLASSIFICATION	4.4063034305038445E-7	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999998182187815	WITHOUT_CLASSIFICATION	1.8178121854675892E-7	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999994255576755	WITHOUT_CLASSIFICATION	5.744423244155752E-7	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999999372665211	WITHOUT_CLASSIFICATION	6.27334789331351E-8	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999741394322526	WITHOUT_CLASSIFICATION	2.5860567747446237E-5	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999988103642058	WITHOUT_CLASSIFICATION	1.1896357941324455E-6	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999903029081889	WITHOUT_CLASSIFICATION	9.697091811119444E-6	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999997987920782	WITHOUT_CLASSIFICATION	2.0120792179337377E-7	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999365190125085	WITHOUT_CLASSIFICATION	6.348098749154601E-5	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999998042513852	WITHOUT_CLASSIFICATION	1.9574861471166905E-7	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999859301668163	WITHOUT_CLASSIFICATION	1.4069833183684962E-5	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9976485897767342	WITHOUT_CLASSIFICATION	0.0023514102232658537	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999998668953611	WITHOUT_CLASSIFICATION	1.331046387903236E-7	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999959925817218	WITHOUT_CLASSIFICATION	4.007418278156477E-6	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999983180056004	WITHOUT_CLASSIFICATION	1.6819943996294518E-6	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999996090538383	WITHOUT_CLASSIFICATION	3.90946161584819E-7	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999419717586162	WITHOUT_CLASSIFICATION	5.8028241383855755E-5	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999999304517977	WITHOUT_CLASSIFICATION	6.954820230836539E-8	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999992622263179	WITHOUT_CLASSIFICATION	7.37773682143098E-7	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999998065746144	WITHOUT_CLASSIFICATION	1.9342538555726493E-7	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999643402487	WITHOUT_CLASSIFICATION	3.565975120985034E-8	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999999181174694	WITHOUT_CLASSIFICATION	8.18825306120175E-8	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999972783602296	WITHOUT_CLASSIFICATION	2.721639770505092E-6	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999998588112982	WITHOUT_CLASSIFICATION	1.411887018461885E-7	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9999991581271932	WITHOUT_CLASSIFICATION	8.418728067189741E-7	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999998494172244	WITHOUT_CLASSIFICATION	1.5058277563464557E-7	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999999258609328	WITHOUT_CLASSIFICATION	7.413906717616479E-8	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999943455181309	WITHOUT_CLASSIFICATION	5.654481868993356E-6	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999999987770337	WITHOUT_CLASSIFICATION	1.2229662373107494E-9	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.999999977499624	WITHOUT_CLASSIFICATION	2.250037593881317E-8	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999999402615134	WITHOUT_CLASSIFICATION	5.973848660016598E-8	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999520101165	WITHOUT_CLASSIFICATION	4.798988360007955E-8	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999991434591708	WITHOUT_CLASSIFICATION	8.565408292546979E-7	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999762438482308	WITHOUT_CLASSIFICATION	2.3756151769102532E-5	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999941836402555	WITHOUT_CLASSIFICATION	5.816359744477982E-6	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999994561070256	WITHOUT_CLASSIFICATION	5.438929744033909E-7	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.999999585063627	WITHOUT_CLASSIFICATION	4.1493637306629966E-7	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.999999585063627	WITHOUT_CLASSIFICATION	4.1493637306629966E-7	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9999922576204503	WITHOUT_CLASSIFICATION	7.742379549613963E-6	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9999922576204503	WITHOUT_CLASSIFICATION	7.742379549613963E-6	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999999935614523	WITHOUT_CLASSIFICATION	6.438547694732779E-9	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999999404626455	WITHOUT_CLASSIFICATION	5.9537354392272055E-8	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.999999955583632	WITHOUT_CLASSIFICATION	4.441636789087762E-8	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999996603352094	WITHOUT_CLASSIFICATION	3.396647906842302E-7	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.999999904233674	WITHOUT_CLASSIFICATION	9.57663260437171E-8	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999996446936265	WITHOUT_CLASSIFICATION	3.5530637347413463E-7	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999998893346459	WITHOUT_CLASSIFICATION	1.1066535405007019E-7	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999972556842496	WITHOUT_CLASSIFICATION	2.7443157503704036E-6	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999994260383872	WITHOUT_CLASSIFICATION	5.739616128551364E-7	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999954137199	WITHOUT_CLASSIFICATION	4.586280092073851E-9	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999595962596	WITHOUT_CLASSIFICATION	4.0403740290767735E-8	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999991222000023	WITHOUT_CLASSIFICATION	8.777999976522663E-7	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999991222000023	WITHOUT_CLASSIFICATION	8.777999976522663E-7	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999999933585115	WITHOUT_CLASSIFICATION	6.641488465220828E-9	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999999351037877	WITHOUT_CLASSIFICATION	6.489621229387299E-8	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999983590042364	WITHOUT_CLASSIFICATION	1.640995763562503E-6	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999983590042364	WITHOUT_CLASSIFICATION	1.640995763562503E-6	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999999859874394	WITHOUT_CLASSIFICATION	1.4012560549044032E-8	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999917084724	WITHOUT_CLASSIFICATION	8.291527541504782E-9	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999980808343107	WITHOUT_CLASSIFICATION	1.9191656892407697E-6	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.999999934258634	WITHOUT_CLASSIFICATION	6.574136611115629E-8	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999998963933259	WITHOUT_CLASSIFICATION	1.0360667402799274E-7	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999991408680529	WITHOUT_CLASSIFICATION	8.591319470824253E-7	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9999620044253644	WITHOUT_CLASSIFICATION	3.799557463555105E-5	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999999525316084	WITHOUT_CLASSIFICATION	4.746839160000696E-8	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999998975323715	WITHOUT_CLASSIFICATION	1.024676285374306E-7	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9999993088980131	WITHOUT_CLASSIFICATION	6.911019869196246E-7	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999838548609156	WITHOUT_CLASSIFICATION	1.6145139084412887E-5	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999219060390766	WITHOUT_CLASSIFICATION	7.809396092343482E-5	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.999993984158276	WITHOUT_CLASSIFICATION	6.015841723967419E-6	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999983546515605	WITHOUT_CLASSIFICATION	1.6453484395344676E-6	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999971281044	WITHOUT_CLASSIFICATION	2.8718956068881557E-9	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999998513879003	WITHOUT_CLASSIFICATION	1.4861209986859343E-7	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999991959854645	WITHOUT_CLASSIFICATION	8.040145355834016E-7	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999996493464461	WITHOUT_CLASSIFICATION	3.506535539232989E-7	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999999957228916	WITHOUT_CLASSIFICATION	4.277108463531814E-9	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999586590691	WITHOUT_CLASSIFICATION	4.134093096236253E-8	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9665765148616472	IMPLEMENTATION	0.0334234851383528	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999993584910654	WITHOUT_CLASSIFICATION	6.415089346531315E-7	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999993479692041	WITHOUT_CLASSIFICATION	6.520307958882918E-7	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999986030725212	WITHOUT_CLASSIFICATION	1.3969274787511097E-6	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999999038035426	WITHOUT_CLASSIFICATION	9.619645737260556E-8	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999994923622351	WITHOUT_CLASSIFICATION	5.076377649254793E-7	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9999999217580613	WITHOUT_CLASSIFICATION	7.824193877063204E-8	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999972881421424	WITHOUT_CLASSIFICATION	2.7118578576311168E-6	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999999718718273	WITHOUT_CLASSIFICATION	2.812817261928646E-8	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999998542612073	WITHOUT_CLASSIFICATION	1.4573879257851892E-7	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999994285603566	WITHOUT_CLASSIFICATION	5.714396433633645E-7	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999987566221862	WITHOUT_CLASSIFICATION	1.2433778138517265E-6	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999999932833981	WITHOUT_CLASSIFICATION	6.716601981958522E-9	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999109205355	WITHOUT_CLASSIFICATION	8.907946446512177E-8	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999109205355	WITHOUT_CLASSIFICATION	8.907946446512177E-8	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999996598319288	WITHOUT_CLASSIFICATION	3.401680711326923E-7	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999908383725575	WITHOUT_CLASSIFICATION	9.161627442492115E-6	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.999999994970745	WITHOUT_CLASSIFICATION	5.029254995393335E-9	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.999998334752483	WITHOUT_CLASSIFICATION	1.6652475169510324E-6	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9999929257390396	WITHOUT_CLASSIFICATION	7.074260960367003E-6	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999988367384726	WITHOUT_CLASSIFICATION	1.1632615274179301E-6	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999983371847795	WITHOUT_CLASSIFICATION	1.6628152205003023E-6	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999995007664764	WITHOUT_CLASSIFICATION	4.99233523736717E-7	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999999781982118	WITHOUT_CLASSIFICATION	2.1801788221741447E-8	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9999969794164152	WITHOUT_CLASSIFICATION	3.0205835847319183E-6	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999997629664543	WITHOUT_CLASSIFICATION	2.3703354575169912E-7	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999925909357688	WITHOUT_CLASSIFICATION	7.409064231228358E-6	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999978197114405	WITHOUT_CLASSIFICATION	2.1802885594869578E-6	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999987285153996	WITHOUT_CLASSIFICATION	1.271484600373177E-6	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999952554093973	WITHOUT_CLASSIFICATION	4.7445906026841035E-6	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999998912523156	WITHOUT_CLASSIFICATION	1.0874768432940045E-7	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999999720128545	WITHOUT_CLASSIFICATION	2.7987145487605568E-8	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999920547292661	WITHOUT_CLASSIFICATION	7.945270733895972E-6	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9971690838395054	WITHOUT_CLASSIFICATION	0.002830916160494613	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999591743658613	WITHOUT_CLASSIFICATION	4.082563413852564E-5	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999999859155142	WITHOUT_CLASSIFICATION	1.4084485849524006E-8	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999982223244342	WITHOUT_CLASSIFICATION	1.7776755657671877E-6	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999775336917558	WITHOUT_CLASSIFICATION	2.2466308244200087E-5	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999973973615551	WITHOUT_CLASSIFICATION	2.6026384448361918E-6	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999309635318727	WITHOUT_CLASSIFICATION	6.903646812722436E-5	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9997956935235679	WITHOUT_CLASSIFICATION	2.043064764321018E-4	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.999999996101606	WITHOUT_CLASSIFICATION	3.898394007125131E-9	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999999899544229	WITHOUT_CLASSIFICATION	1.0045577133860405E-8	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9999984078851631	WITHOUT_CLASSIFICATION	1.592114836860466E-6	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999998487081588	WITHOUT_CLASSIFICATION	1.5129184118849896E-7	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999999742279736	WITHOUT_CLASSIFICATION	2.5772026428164467E-8	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999964500597274	WITHOUT_CLASSIFICATION	3.54994027264971E-6	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999979110369295	WITHOUT_CLASSIFICATION	2.0889630704933106E-6	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999998930818375	WITHOUT_CLASSIFICATION	1.0691816262305287E-7	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999993471466027	WITHOUT_CLASSIFICATION	6.528533972927363E-7	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999999295887775	WITHOUT_CLASSIFICATION	7.041122257013606E-8	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999860234189508	WITHOUT_CLASSIFICATION	1.3976581049220057E-5	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9999994424782563	WITHOUT_CLASSIFICATION	5.575217436383514E-7	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9999950645411563	WITHOUT_CLASSIFICATION	4.935458843743337E-6	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999998820655315	WITHOUT_CLASSIFICATION	1.1793446853405783E-7	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999978538932014	WITHOUT_CLASSIFICATION	2.1461067985156406E-6	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999996734363119	WITHOUT_CLASSIFICATION	3.265636880923583E-7	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999996734363119	WITHOUT_CLASSIFICATION	3.265636880923583E-7	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999995026708564	WITHOUT_CLASSIFICATION	4.973291436780974E-7	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999997262930816	WITHOUT_CLASSIFICATION	2.737069183476542E-7	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999946526056038	WITHOUT_CLASSIFICATION	5.347394396113075E-6	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.999999053838709	WITHOUT_CLASSIFICATION	9.461612910171297E-7	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999997071142351	WITHOUT_CLASSIFICATION	2.928857648741674E-7	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999999962197831	WITHOUT_CLASSIFICATION	3.780216953457368E-9	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999998360427	WITHOUT_CLASSIFICATION	1.639572857371571E-10	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.999818666465738	WITHOUT_CLASSIFICATION	1.8133353426198195E-4	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999999709644368	WITHOUT_CLASSIFICATION	2.9035563236873947E-8	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999997512654747	WITHOUT_CLASSIFICATION	2.4873452532834553E-7	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.999999918744572	WITHOUT_CLASSIFICATION	8.125542805150397E-8	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.999999886444797	WITHOUT_CLASSIFICATION	1.1355520291400341E-7	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999992329582187	WITHOUT_CLASSIFICATION	7.670417813008194E-7	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999694722765893	WITHOUT_CLASSIFICATION	3.052772341072884E-5	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999999751067201	WITHOUT_CLASSIFICATION	2.4893279947034166E-8	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9998607594906256	WITHOUT_CLASSIFICATION	1.3924050937449086E-4	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999992267976896	WITHOUT_CLASSIFICATION	7.732023104899048E-7	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999999245809893	WITHOUT_CLASSIFICATION	7.54190107213269E-8	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999981398081258	WITHOUT_CLASSIFICATION	1.8601918742264932E-6	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9469688511784846	WITHOUT_CLASSIFICATION	0.05303114882151539	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999999633447267	WITHOUT_CLASSIFICATION	3.665527333085807E-8	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999792886855186	WITHOUT_CLASSIFICATION	2.0711314481465322E-5	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999996779441	WITHOUT_CLASSIFICATION	3.2205594457356007E-10	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.999999929271275	WITHOUT_CLASSIFICATION	7.072872497281443E-8	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999998655983356	WITHOUT_CLASSIFICATION	1.3440166436816482E-7	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9991779383168813	WITHOUT_CLASSIFICATION	8.220616831185893E-4	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999999969513136	WITHOUT_CLASSIFICATION	3.048686329604201E-9	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.999996540644747	WITHOUT_CLASSIFICATION	3.459355253016113E-6	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999009756684	WITHOUT_CLASSIFICATION	9.9024331647833E-8	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999997353664843	WITHOUT_CLASSIFICATION	2.646335156413489E-7	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999200311874	WITHOUT_CLASSIFICATION	7.996881249566559E-8	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999440212658	WITHOUT_CLASSIFICATION	5.5978734077402204E-8	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999997353664843	WITHOUT_CLASSIFICATION	2.646335156413489E-7	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999841696400178	WITHOUT_CLASSIFICATION	1.5830359982202717E-5	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999999872218753	WITHOUT_CLASSIFICATION	1.277812457376576E-8	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9995881837342893	WITHOUT_CLASSIFICATION	4.1181626571077805E-4	IMPLEMENTATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9955438733207957	IMPLEMENTATION	0.004456126679204269	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999995623081118	WITHOUT_CLASSIFICATION	4.376918882277773E-7	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999998200045497	WITHOUT_CLASSIFICATION	1.799954502911877E-7	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999999082616451	WITHOUT_CLASSIFICATION	9.173835492499693E-8	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999999083515042	WITHOUT_CLASSIFICATION	9.164849581513825E-8	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999999824047	WITHOUT_CLASSIFICATION	1.7595213401101358E-11	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999586590691	WITHOUT_CLASSIFICATION	4.134093096236253E-8	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999999607909611	WITHOUT_CLASSIFICATION	3.9209038963212525E-8	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999301632486	WITHOUT_CLASSIFICATION	6.983675129013064E-8	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.999989695287605	WITHOUT_CLASSIFICATION	1.0304712395044562E-5	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999955530628137	WITHOUT_CLASSIFICATION	4.446937186359437E-6	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999929176160697	WITHOUT_CLASSIFICATION	7.082383930344257E-6	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9999997313217575	WITHOUT_CLASSIFICATION	2.686782426187647E-7	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9894913326933616	WITHOUT_CLASSIFICATION	0.010508667306638485	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999991197216413	WITHOUT_CLASSIFICATION	8.802783586958835E-7	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999999992618545	WITHOUT_CLASSIFICATION	7.381455728634527E-10	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999999998711305	WITHOUT_CLASSIFICATION	1.288695544349287E-10	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9999946266173847	WITHOUT_CLASSIFICATION	5.3733826153212764E-6	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9999942759753182	WITHOUT_CLASSIFICATION	5.724024681785618E-6	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9999921558517827	WITHOUT_CLASSIFICATION	7.84414821734164E-6	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999995191963008	WITHOUT_CLASSIFICATION	4.808036991956602E-7	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9938768929775019	WITHOUT_CLASSIFICATION	0.00612310702249811	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999976136188934	WITHOUT_CLASSIFICATION	2.3863811065804264E-6	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.999996403383397	WITHOUT_CLASSIFICATION	3.596616602957659E-6	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999999467815659	WITHOUT_CLASSIFICATION	5.321843419496099E-8	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999901588148	WITHOUT_CLASSIFICATION	9.841185178208376E-9	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.99999956354507	WITHOUT_CLASSIFICATION	4.36454930001182E-7	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.99999956354507	WITHOUT_CLASSIFICATION	4.36454930001182E-7	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999998330638975	WITHOUT_CLASSIFICATION	1.669361023761628E-7	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999905559813	WITHOUT_CLASSIFICATION	9.444018655626632E-9	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.999990473980811	WITHOUT_CLASSIFICATION	9.526019189098117E-6	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9689426524057075	IMPLEMENTATION	0.031057347594292465	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9689426524057075	IMPLEMENTATION	0.031057347594292465	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9689426524057075	IMPLEMENTATION	0.031057347594292465	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9689426524057075	IMPLEMENTATION	0.031057347594292465	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.999997302136655	WITHOUT_CLASSIFICATION	2.6978633448438113E-6	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.999855019836394	WITHOUT_CLASSIFICATION	1.449801636060158E-4	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9999999126517887	WITHOUT_CLASSIFICATION	8.734821137980541E-8	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9982337287758574	WITHOUT_CLASSIFICATION	0.0017662712241426925	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999867925029725	WITHOUT_CLASSIFICATION	1.320749702751043E-5	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999934679218421	WITHOUT_CLASSIFICATION	6.532078157934114E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999371705848005	WITHOUT_CLASSIFICATION	6.282941519954772E-5	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999371705848005	WITHOUT_CLASSIFICATION	6.282941519954772E-5	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999999950076556	WITHOUT_CLASSIFICATION	4.992344357179435E-9	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.999998906109813	WITHOUT_CLASSIFICATION	1.0938901870274573E-6	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999997824087133	WITHOUT_CLASSIFICATION	2.1759128659865603E-7	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9996334908146851	WITHOUT_CLASSIFICATION	3.6650918531478966E-4	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999996409920688	WITHOUT_CLASSIFICATION	3.5900793106813374E-7	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999997160073716	WITHOUT_CLASSIFICATION	2.83992628385718E-7	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999999913528163	WITHOUT_CLASSIFICATION	8.647183742070375E-9	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999996116358585	WITHOUT_CLASSIFICATION	3.883641415048699E-7	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999940024611503	WITHOUT_CLASSIFICATION	5.997538849744522E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999940024611503	WITHOUT_CLASSIFICATION	5.997538849744522E-6	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999440212658	WITHOUT_CLASSIFICATION	5.5978734077402204E-8	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9999965586585754	WITHOUT_CLASSIFICATION	3.441341424648728E-6	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9999969398399834	WITHOUT_CLASSIFICATION	3.060160016545646E-6	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999996888162408	WITHOUT_CLASSIFICATION	3.111837591672645E-7	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999993567538	WITHOUT_CLASSIFICATION	6.432461275066126E-10	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9999985122189926	WITHOUT_CLASSIFICATION	1.4877810074707502E-6	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999968681771728	WITHOUT_CLASSIFICATION	3.131822827136715E-6	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999978392098019	WITHOUT_CLASSIFICATION	2.1607901981427987E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999999300482514	WITHOUT_CLASSIFICATION	6.995174866266913E-8	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999999300482514	WITHOUT_CLASSIFICATION	6.995174866266913E-8	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999978442167332	WITHOUT_CLASSIFICATION	2.155783266672291E-6	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999999609779069	WITHOUT_CLASSIFICATION	3.9022093167247665E-8	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999999921740865	WITHOUT_CLASSIFICATION	7.825913442944278E-9	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999965242474315	WITHOUT_CLASSIFICATION	3.475752568483229E-6	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999973597870708	WITHOUT_CLASSIFICATION	2.6402129292290186E-6	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9999978820997243	WITHOUT_CLASSIFICATION	2.117900275721281E-6	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9999977771718088	WITHOUT_CLASSIFICATION	2.2228281911077193E-6	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999997895197485	WITHOUT_CLASSIFICATION	2.1048025146460639E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999997895197485	WITHOUT_CLASSIFICATION	2.1048025146460639E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999997895197485	WITHOUT_CLASSIFICATION	2.1048025146460639E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999997895197485	WITHOUT_CLASSIFICATION	2.1048025146460639E-7	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999988733887899	WITHOUT_CLASSIFICATION	1.1266112101451496E-6	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999999938678	WITHOUT_CLASSIFICATION	6.132233237036722E-12	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999996982594966	WITHOUT_CLASSIFICATION	3.017405033321582E-7	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999997813655888	WITHOUT_CLASSIFICATION	2.18634411207724E-7	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999999606341113	WITHOUT_CLASSIFICATION	3.936588870220985E-8	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.999998301405262	WITHOUT_CLASSIFICATION	1.698594738029106E-6	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999920336385	WITHOUT_CLASSIFICATION	7.966361410366406E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999998295651199	WITHOUT_CLASSIFICATION	1.7043488004609815E-7	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999998295651199	WITHOUT_CLASSIFICATION	1.7043488004609815E-7	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999998295651199	WITHOUT_CLASSIFICATION	1.7043488004609815E-7	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999989663002308	WITHOUT_CLASSIFICATION	1.0336997692917144E-6	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999991421725883	WITHOUT_CLASSIFICATION	8.57827411696062E-7	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999980138706304	WITHOUT_CLASSIFICATION	1.986129369643203E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999980138706304	WITHOUT_CLASSIFICATION	1.986129369643203E-6	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999980794121412	WITHOUT_CLASSIFICATION	1.9205878587767454E-6	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999899223015545	WITHOUT_CLASSIFICATION	1.0077698445545013E-5	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.999995037122225	WITHOUT_CLASSIFICATION	4.962877774903346E-6	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.999999511284059	WITHOUT_CLASSIFICATION	4.887159411095098E-7	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999965182209	WITHOUT_CLASSIFICATION	3.4817791455092324E-9	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.999995716498479	WITHOUT_CLASSIFICATION	4.283501521096897E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999997631603116	WITHOUT_CLASSIFICATION	2.368396883940507E-7	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999997631603116	WITHOUT_CLASSIFICATION	2.368396883940507E-7	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999551480839	WITHOUT_CLASSIFICATION	4.4851916074060336E-8	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9998967971152881	WITHOUT_CLASSIFICATION	1.0320288471182978E-4	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999994758381883	WITHOUT_CLASSIFICATION	5.241618118047543E-7	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999987336595757	WITHOUT_CLASSIFICATION	1.266340424286749E-6	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9747489043275414	WITHOUT_CLASSIFICATION	0.0252510956724586	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999920645497	WITHOUT_CLASSIFICATION	7.935450233404717E-9	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.999999369990403	WITHOUT_CLASSIFICATION	6.300095970388518E-7	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999554596645298	WITHOUT_CLASSIFICATION	4.454033547031864E-5	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999956994192887	WITHOUT_CLASSIFICATION	4.300580711388127E-6	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999958793585348	WITHOUT_CLASSIFICATION	4.120641465124659E-6	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.999999980825748	WITHOUT_CLASSIFICATION	1.917425186113277E-8	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999996514548398	WITHOUT_CLASSIFICATION	3.4854516015242347E-7	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999992659609996	WITHOUT_CLASSIFICATION	7.340390003973928E-7	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999535173699065	WITHOUT_CLASSIFICATION	4.6482630093449753E-5	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999999464714424	WITHOUT_CLASSIFICATION	5.352855753414359E-8	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999981997356557	WITHOUT_CLASSIFICATION	1.8002643442183064E-6	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999822813652985	WITHOUT_CLASSIFICATION	1.7718634701463E-5	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999999859133226	WITHOUT_CLASSIFICATION	1.4086677353487688E-8	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999979285728372	WITHOUT_CLASSIFICATION	2.0714271628337106E-6	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.999999795020978	WITHOUT_CLASSIFICATION	2.0497902194155107E-7	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.999999936801569	WITHOUT_CLASSIFICATION	6.319843107335195E-8	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9998976237692736	WITHOUT_CLASSIFICATION	1.023762307263944E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9987672795941497	WITHOUT_CLASSIFICATION	0.0012327204058503365	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9987672795941497	WITHOUT_CLASSIFICATION	0.0012327204058503365	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9987672795941497	WITHOUT_CLASSIFICATION	0.0012327204058503365	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9987672795941497	WITHOUT_CLASSIFICATION	0.0012327204058503365	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9987672795941497	WITHOUT_CLASSIFICATION	0.0012327204058503365	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9987672795941497	WITHOUT_CLASSIFICATION	0.0012327204058503365	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9987672795941497	WITHOUT_CLASSIFICATION	0.0012327204058503365	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9987672795941497	WITHOUT_CLASSIFICATION	0.0012327204058503365	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999999957382054	WITHOUT_CLASSIFICATION	4.26179453472847E-9	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9999995824583964	WITHOUT_CLASSIFICATION	4.175416037054809E-7	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999999385003571	WITHOUT_CLASSIFICATION	6.149964291255298E-8	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999966312327553	WITHOUT_CLASSIFICATION	3.368767244819481E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999998360427	WITHOUT_CLASSIFICATION	1.639572857371571E-10	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999998360427	WITHOUT_CLASSIFICATION	1.639572857371571E-10	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999991100785173	WITHOUT_CLASSIFICATION	8.899214827340647E-7	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999999850690902	WITHOUT_CLASSIFICATION	1.493090993368683E-8	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999989665935463	WITHOUT_CLASSIFICATION	1.0334064537739939E-6	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.999999972153404	WITHOUT_CLASSIFICATION	2.7846595992659118E-8	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999979811919759	WITHOUT_CLASSIFICATION	2.018808024032712E-6	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9999993126782748	WITHOUT_CLASSIFICATION	6.873217250971439E-7	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9999987814682788	WITHOUT_CLASSIFICATION	1.2185317212130741E-6	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999933127609468	WITHOUT_CLASSIFICATION	6.687239053160214E-6	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999981453853892	WITHOUT_CLASSIFICATION	1.854614610729175E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999962560874	WITHOUT_CLASSIFICATION	3.743912586009394E-9	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999962560874	WITHOUT_CLASSIFICATION	3.743912586009394E-9	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999962560874	WITHOUT_CLASSIFICATION	3.743912586009394E-9	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999264452617446	WITHOUT_CLASSIFICATION	7.355473825541849E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999264452617446	WITHOUT_CLASSIFICATION	7.355473825541849E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999264452617446	WITHOUT_CLASSIFICATION	7.355473825541849E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999264452617446	WITHOUT_CLASSIFICATION	7.355473825541849E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999264452617446	WITHOUT_CLASSIFICATION	7.355473825541849E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999264452617446	WITHOUT_CLASSIFICATION	7.355473825541849E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999264452617446	WITHOUT_CLASSIFICATION	7.355473825541849E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999264452617446	WITHOUT_CLASSIFICATION	7.355473825541849E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999264452617446	WITHOUT_CLASSIFICATION	7.355473825541849E-5	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.999999870205989	WITHOUT_CLASSIFICATION	1.297940108560968E-7	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999769789888519	WITHOUT_CLASSIFICATION	2.3021011148130022E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999969308101613	WITHOUT_CLASSIFICATION	3.0691898386897563E-6	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.999982616944904	WITHOUT_CLASSIFICATION	1.738305509609495E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999264452617446	WITHOUT_CLASSIFICATION	7.355473825541849E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999264452617446	WITHOUT_CLASSIFICATION	7.355473825541849E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9999264452617446	WITHOUT_CLASSIFICATION	7.355473825541849E-5	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999984695925489	WITHOUT_CLASSIFICATION	1.5304074511500805E-6	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999991829304484	WITHOUT_CLASSIFICATION	8.170695515900483E-7	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999980462210888	WITHOUT_CLASSIFICATION	1.9537789110936773E-6	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999274492540123	WITHOUT_CLASSIFICATION	7.2550745987668E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999274492540123	WITHOUT_CLASSIFICATION	7.2550745987668E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999978669946106	WITHOUT_CLASSIFICATION	2.1330053894823168E-6	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9998256989283899	WITHOUT_CLASSIFICATION	1.7430107161013516E-4	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999999833565419	WITHOUT_CLASSIFICATION	1.6643457984444385E-8	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999999999486234	WITHOUT_CLASSIFICATION	5.137657504645425E-11	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9997348664479971	WITHOUT_CLASSIFICATION	2.651335520028004E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9997348664479971	WITHOUT_CLASSIFICATION	2.651335520028004E-4	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999999942116485	WITHOUT_CLASSIFICATION	5.7883514555939005E-9	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999998646516592	WITHOUT_CLASSIFICATION	1.3534834088374017E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999903945115989	WITHOUT_CLASSIFICATION	9.60548840111541E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999836991165912	WITHOUT_CLASSIFICATION	1.6300883408705413E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999836991165912	WITHOUT_CLASSIFICATION	1.6300883408705413E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999836991165912	WITHOUT_CLASSIFICATION	1.6300883408705413E-5	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999985683913718	WITHOUT_CLASSIFICATION	1.431608628211334E-6	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999997569657922	WITHOUT_CLASSIFICATION	2.430342077918959E-7	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999997569657922	WITHOUT_CLASSIFICATION	2.430342077918959E-7	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999993592174062	WITHOUT_CLASSIFICATION	6.407825938122447E-7	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999993592174062	WITHOUT_CLASSIFICATION	6.407825938122447E-7	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999978344397166	WITHOUT_CLASSIFICATION	2.1655602834525952E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999936339583293	WITHOUT_CLASSIFICATION	6.366041670710036E-6	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999972475552107	WITHOUT_CLASSIFICATION	2.7524447892919E-6	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999992890668334	WITHOUT_CLASSIFICATION	7.109331664917282E-7	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999965146540463	WITHOUT_CLASSIFICATION	3.4853459536269387E-6	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999973054183369	WITHOUT_CLASSIFICATION	2.694581663005898E-6	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999641771168067	WITHOUT_CLASSIFICATION	3.582288319330005E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999810485011587	WITHOUT_CLASSIFICATION	1.8951498841357573E-5	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.999999635597873	WITHOUT_CLASSIFICATION	3.6440212701919715E-7	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.999999998959464	WITHOUT_CLASSIFICATION	1.0405359450196263E-9	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9322370776437661	WITHOUT_CLASSIFICATION	0.067762922356234	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999989816792145	WITHOUT_CLASSIFICATION	1.018320785557579E-6	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999999888828366	WITHOUT_CLASSIFICATION	1.1117163384303107E-8	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999999405714214	WITHOUT_CLASSIFICATION	5.942857863053643E-8	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999957726723497	WITHOUT_CLASSIFICATION	4.227327650218625E-6	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999999611601422	WITHOUT_CLASSIFICATION	3.883985782647874E-8	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999977142332859	WITHOUT_CLASSIFICATION	2.2857667141831535E-6	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999897788872	WITHOUT_CLASSIFICATION	1.0221112907081715E-8	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.999999980355106	WITHOUT_CLASSIFICATION	1.9644894081311948E-8	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999990420020566	WITHOUT_CLASSIFICATION	9.579979434068266E-7	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999301632486	WITHOUT_CLASSIFICATION	6.983675129013064E-8	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999708353846843	WITHOUT_CLASSIFICATION	2.916461531566805E-5	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999992979118377	WITHOUT_CLASSIFICATION	7.020881622555367E-7	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999996720663435	WITHOUT_CLASSIFICATION	3.279336564148847E-7	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999963483239629	WITHOUT_CLASSIFICATION	3.6516760371983246E-6	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999985315918001	WITHOUT_CLASSIFICATION	1.4684081999130653E-6	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999992678248286	WITHOUT_CLASSIFICATION	7.321751712696045E-7	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999999923602246	WITHOUT_CLASSIFICATION	7.639775306420958E-9	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999957530473026	WITHOUT_CLASSIFICATION	4.246952697389186E-6	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.999999976745867	WITHOUT_CLASSIFICATION	2.325413303699927E-8	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999979928367834	WITHOUT_CLASSIFICATION	2.007163216646735E-6	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999999179729538	WITHOUT_CLASSIFICATION	8.20270461155382E-8	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999998742629118	WITHOUT_CLASSIFICATION	1.257370881343755E-7	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999999984251537	WITHOUT_CLASSIFICATION	1.5748461937683451E-9	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999972801568913	WITHOUT_CLASSIFICATION	2.719843108655794E-6	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999997081678973	WITHOUT_CLASSIFICATION	2.918321027133463E-7	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999989762670713	WITHOUT_CLASSIFICATION	1.023732928725828E-6	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999962395765594	WITHOUT_CLASSIFICATION	3.7604234405094873E-6	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999996443702927	WITHOUT_CLASSIFICATION	3.5562970729941155E-7	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999601626571	WITHOUT_CLASSIFICATION	3.983734286746841E-8	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999999013697776	WITHOUT_CLASSIFICATION	9.86302224400968E-8	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999999767643392	WITHOUT_CLASSIFICATION	2.323566084237884E-8	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999999944793679	WITHOUT_CLASSIFICATION	5.520632094852378E-9	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999999952301696	WITHOUT_CLASSIFICATION	4.769830390692135E-9	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999999791222969	WITHOUT_CLASSIFICATION	2.0877703187122473E-8	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999979178060294	WITHOUT_CLASSIFICATION	2.082193970565379E-6	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9999999087117972	WITHOUT_CLASSIFICATION	9.128820274293413E-8	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999993920345	WITHOUT_CLASSIFICATION	6.079655064129398E-10	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999978379782	WITHOUT_CLASSIFICATION	2.1620217493542963E-9	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999974825342386	WITHOUT_CLASSIFICATION	2.517465761484118E-6	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999998819272049	WITHOUT_CLASSIFICATION	1.1807279506321703E-7	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999781989551151	WITHOUT_CLASSIFICATION	2.180104488492458E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999781989551151	WITHOUT_CLASSIFICATION	2.180104488492458E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999951451438	WITHOUT_CLASSIFICATION	4.854856225004007E-9	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999951451438	WITHOUT_CLASSIFICATION	4.854856225004007E-9	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998985487787705	WITHOUT_CLASSIFICATION	1.0145122122963208E-4	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9998985487787705	WITHOUT_CLASSIFICATION	1.0145122122963208E-4	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999933732625897	WITHOUT_CLASSIFICATION	6.626737410157508E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999933732625897	WITHOUT_CLASSIFICATION	6.626737410157508E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999995860256303	WITHOUT_CLASSIFICATION	4.1397436960635024E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999995860256303	WITHOUT_CLASSIFICATION	4.1397436960635024E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999995860256303	WITHOUT_CLASSIFICATION	4.1397436960635024E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999995860256303	WITHOUT_CLASSIFICATION	4.1397436960635024E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999995860256303	WITHOUT_CLASSIFICATION	4.1397436960635024E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999995860256303	WITHOUT_CLASSIFICATION	4.1397436960635024E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999995860256303	WITHOUT_CLASSIFICATION	4.1397436960635024E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999995860256303	WITHOUT_CLASSIFICATION	4.1397436960635024E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999995860256303	WITHOUT_CLASSIFICATION	4.1397436960635024E-7	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999996362348077	WITHOUT_CLASSIFICATION	3.6376519228944996E-7	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999996362348077	WITHOUT_CLASSIFICATION	3.6376519228944996E-7	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999996362348077	WITHOUT_CLASSIFICATION	3.6376519228944996E-7	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999917435194378	WITHOUT_CLASSIFICATION	8.256480562172345E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999963555336836	WITHOUT_CLASSIFICATION	3.644466316488989E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999963555336836	WITHOUT_CLASSIFICATION	3.644466316488989E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999963555336836	WITHOUT_CLASSIFICATION	3.644466316488989E-6	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999090820408	WITHOUT_CLASSIFICATION	9.091795911674956E-8	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999090820408	WITHOUT_CLASSIFICATION	9.091795911674956E-8	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999090820408	WITHOUT_CLASSIFICATION	9.091795911674956E-8	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999978997459411	WITHOUT_CLASSIFICATION	2.1002540589060864E-6	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9999982219331726	WITHOUT_CLASSIFICATION	1.7780668275293787E-6	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999713867585783	WITHOUT_CLASSIFICATION	2.861324142176407E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999973786192462	WITHOUT_CLASSIFICATION	2.6213807538041876E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999973786192462	WITHOUT_CLASSIFICATION	2.6213807538041876E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.999973786192462	WITHOUT_CLASSIFICATION	2.6213807538041876E-5	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999990505503298	WITHOUT_CLASSIFICATION	9.494496702643961E-7	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999998497889466	WITHOUT_CLASSIFICATION	1.5021105341095757E-7	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999998497889466	WITHOUT_CLASSIFICATION	1.5021105341095757E-7	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999710290866509	WITHOUT_CLASSIFICATION	2.897091334902008E-5	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9998010300216883	WITHOUT_CLASSIFICATION	1.9896997831174714E-4	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9998010300216883	WITHOUT_CLASSIFICATION	1.9896997831174714E-4	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9986908868556045	IMPLEMENTATION	0.0013091131443954405	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9994156404489155	WITHOUT_CLASSIFICATION	5.843595510845804E-4	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9998241290936482	WITHOUT_CLASSIFICATION	1.7587090635186884E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999828386712	WITHOUT_CLASSIFICATION	1.7161328691401297E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999828386712	WITHOUT_CLASSIFICATION	1.7161328691401297E-8	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.999999455756751	WITHOUT_CLASSIFICATION	5.442432489730117E-7	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999925627945725	WITHOUT_CLASSIFICATION	7.437205427438425E-6	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999860608505786	WITHOUT_CLASSIFICATION	1.393914942147014E-5	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999971515770516	WITHOUT_CLASSIFICATION	2.8484229484419872E-6	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999809532079648	WITHOUT_CLASSIFICATION	1.9046792035179376E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999828386712	WITHOUT_CLASSIFICATION	1.7161328691401297E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999828386712	WITHOUT_CLASSIFICATION	1.7161328691401297E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999828386712	WITHOUT_CLASSIFICATION	1.7161328691401297E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999828386712	WITHOUT_CLASSIFICATION	1.7161328691401297E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999828386712	WITHOUT_CLASSIFICATION	1.7161328691401297E-8	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999986092664889	WITHOUT_CLASSIFICATION	1.3907335110698163E-6	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999947209870363	WITHOUT_CLASSIFICATION	5.27901296363348E-6	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999595072651	WITHOUT_CLASSIFICATION	4.049273499777261E-8	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999989739254878	WITHOUT_CLASSIFICATION	1.0260745123307607E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999999995471919	WITHOUT_CLASSIFICATION	4.5280821411269444E-10	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9976966471768599	WITHOUT_CLASSIFICATION	0.002303352823139967	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.999999988600988	WITHOUT_CLASSIFICATION	1.139901197711959E-8	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999781487330265	WITHOUT_CLASSIFICATION	2.185126697346355E-5	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999978713442	WITHOUT_CLASSIFICATION	2.128655785014159E-9	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999996924901473	WITHOUT_CLASSIFICATION	3.0750985276379414E-7	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999202463412	WITHOUT_CLASSIFICATION	7.975365873300937E-8	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999792886855186	WITHOUT_CLASSIFICATION	2.0711314481465322E-5	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999994951639138	WITHOUT_CLASSIFICATION	5.048360860597177E-7	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999999782495492	WITHOUT_CLASSIFICATION	2.1750450750810822E-8	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999999423293243	WITHOUT_CLASSIFICATION	5.7670675714530074E-8	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9989428507981315	WITHOUT_CLASSIFICATION	0.0010571492018684528	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999979501174338	WITHOUT_CLASSIFICATION	2.049882566169963E-6	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999986303316463	WITHOUT_CLASSIFICATION	1.3696683536856156E-6	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999990647545699	WITHOUT_CLASSIFICATION	9.352454301920222E-7	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999996271286242	WITHOUT_CLASSIFICATION	3.7287137572523886E-7	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999999799034957	WITHOUT_CLASSIFICATION	2.009650432555939E-8	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999996690630341	WITHOUT_CLASSIFICATION	3.309369659856711E-7	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999997512654747	WITHOUT_CLASSIFICATION	2.4873452532834553E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999998791657918	WITHOUT_CLASSIFICATION	1.2083420820148772E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999998791657918	WITHOUT_CLASSIFICATION	1.2083420820148772E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999998791657918	WITHOUT_CLASSIFICATION	1.2083420820148772E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.999998791657918	WITHOUT_CLASSIFICATION	1.2083420820148772E-6	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999870215943263	WITHOUT_CLASSIFICATION	1.2978405673687319E-5	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999999714051515	WITHOUT_CLASSIFICATION	2.8594848532667178E-8	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999999966022401	WITHOUT_CLASSIFICATION	3.397759800334378E-9	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999999966022401	WITHOUT_CLASSIFICATION	3.397759800334378E-9	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999436419114	WITHOUT_CLASSIFICATION	5.63580886432276E-8	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999997397555971	WITHOUT_CLASSIFICATION	2.6024440292436E-7	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999938851979	WITHOUT_CLASSIFICATION	6.114802101378428E-9	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999995230547266	WITHOUT_CLASSIFICATION	4.769452734776197E-7	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999999870630327	WITHOUT_CLASSIFICATION	1.2936967264122988E-8	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999850744692518	WITHOUT_CLASSIFICATION	1.4925530748227337E-5	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999661971386087	WITHOUT_CLASSIFICATION	3.380286139135862E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999985778218964	WITHOUT_CLASSIFICATION	1.4221781036586988E-6	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999985778218964	WITHOUT_CLASSIFICATION	1.4221781036586988E-6	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999985778218964	WITHOUT_CLASSIFICATION	1.4221781036586988E-6	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999985778218964	WITHOUT_CLASSIFICATION	1.4221781036586988E-6	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999828578571957	WITHOUT_CLASSIFICATION	1.7142142804305537E-5	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999940511165	WITHOUT_CLASSIFICATION	5.9488836020041694E-9	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999940511165	WITHOUT_CLASSIFICATION	5.9488836020041694E-9	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999940511165	WITHOUT_CLASSIFICATION	5.9488836020041694E-9	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999999876586897	WITHOUT_CLASSIFICATION	1.2341310443863003E-8	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999997794208685	WITHOUT_CLASSIFICATION	2.205791314085775E-7	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999995934092021	WITHOUT_CLASSIFICATION	4.0659079789756166E-7	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9689426524057075	IMPLEMENTATION	0.031057347594292465	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9689426524057075	IMPLEMENTATION	0.031057347594292465	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999779825124	WITHOUT_CLASSIFICATION	2.2017487620256903E-8	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999999953862718	WITHOUT_CLASSIFICATION	4.613728195012411E-9	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999429363071529	WITHOUT_CLASSIFICATION	5.706369284707855E-5	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999429363071529	WITHOUT_CLASSIFICATION	5.706369284707855E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999991843403705	WITHOUT_CLASSIFICATION	8.156596295387672E-7	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999991843403705	WITHOUT_CLASSIFICATION	8.156596295387672E-7	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999999957033555	WITHOUT_CLASSIFICATION	4.296644563618891E-9	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9953242182337841	WITHOUT_CLASSIFICATION	0.0046757817662158785	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999999524461776	WITHOUT_CLASSIFICATION	4.7553822393885024E-8	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999991961641839	WITHOUT_CLASSIFICATION	8.038358161943304E-7	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999979505822034	WITHOUT_CLASSIFICATION	2.0494177965728793E-6	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999970537058721	WITHOUT_CLASSIFICATION	2.9462941278519953E-6	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999416704515	WITHOUT_CLASSIFICATION	5.832954847732781E-8	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999933985752132	WITHOUT_CLASSIFICATION	6.601424786849342E-6	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999998991226193	WITHOUT_CLASSIFICATION	1.008773806544517E-7	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999952169197	WITHOUT_CLASSIFICATION	4.783080273279164E-9	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999952169197	WITHOUT_CLASSIFICATION	4.783080273279164E-9	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999997464605844	WITHOUT_CLASSIFICATION	2.535394155683072E-7	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999997464605844	WITHOUT_CLASSIFICATION	2.535394155683072E-7	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999999588107891	WITHOUT_CLASSIFICATION	4.118921086350583E-8	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999845949195457	WITHOUT_CLASSIFICATION	1.5405080454355488E-5	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999965726613511	WITHOUT_CLASSIFICATION	3.427338648950961E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999992916986299	WITHOUT_CLASSIFICATION	7.083013700330771E-7	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999992916986299	WITHOUT_CLASSIFICATION	7.083013700330771E-7	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999992916986299	WITHOUT_CLASSIFICATION	7.083013700330771E-7	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9999964562973586	WITHOUT_CLASSIFICATION	3.5437026414050145E-6	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9999966801293956	WITHOUT_CLASSIFICATION	3.319870604520007E-6	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9999969679636266	WITHOUT_CLASSIFICATION	3.032036373443669E-6	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9999979471674426	WITHOUT_CLASSIFICATION	2.0528325573912364E-6	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9999964559913163	WITHOUT_CLASSIFICATION	3.5440086837675467E-6	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999963768574671	WITHOUT_CLASSIFICATION	3.623142532958496E-6	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.99999651423886	WITHOUT_CLASSIFICATION	3.4857611400081804E-6	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9999970444327023	WITHOUT_CLASSIFICATION	2.9555672977615004E-6	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999992166349496	WITHOUT_CLASSIFICATION	7.833650503399357E-7	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999942329470559	WITHOUT_CLASSIFICATION	5.767052944030594E-6	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9993404663821757	WITHOUT_CLASSIFICATION	6.595336178243311E-4	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999999963063483	WITHOUT_CLASSIFICATION	3.6936517426686673E-9	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999999967986977	WITHOUT_CLASSIFICATION	3.201302268055645E-9	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.9689426524057075	IMPLEMENTATION	0.031057347594292465	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999968842260049	WITHOUT_CLASSIFICATION	3.115773995126385E-6	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999994645973846	WITHOUT_CLASSIFICATION	5.354026153401581E-7	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.99999956354507	WITHOUT_CLASSIFICATION	4.36454930001182E-7	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999822877818046	WITHOUT_CLASSIFICATION	1.7712218195366044E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999822877818046	WITHOUT_CLASSIFICATION	1.7712218195366044E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999822877818046	WITHOUT_CLASSIFICATION	1.7712218195366044E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999822877818046	WITHOUT_CLASSIFICATION	1.7712218195366044E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999822877818046	WITHOUT_CLASSIFICATION	1.7712218195366044E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999948913287201	WITHOUT_CLASSIFICATION	5.1086712798824E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999822877818046	WITHOUT_CLASSIFICATION	1.7712218195366044E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999822877818046	WITHOUT_CLASSIFICATION	1.7712218195366044E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999822877818046	WITHOUT_CLASSIFICATION	1.7712218195366044E-5	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999981513797062	WITHOUT_CLASSIFICATION	1.8486202938432444E-6	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999996550178687	WITHOUT_CLASSIFICATION	3.4498213121727847E-7	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999999987712168	WITHOUT_CLASSIFICATION	1.2287832219227036E-9	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.999996963528473	WITHOUT_CLASSIFICATION	3.0364715269531678E-6	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999986847826388	WITHOUT_CLASSIFICATION	1.3152173612387906E-6	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999999930200647	WITHOUT_CLASSIFICATION	6.97993530052988E-9	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999999602705518	WITHOUT_CLASSIFICATION	3.9729448295352244E-8	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9999967048950985	WITHOUT_CLASSIFICATION	3.295104901512418E-6	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999975351722283	WITHOUT_CLASSIFICATION	2.4648277715484735E-6	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999975351722283	WITHOUT_CLASSIFICATION	2.4648277715484735E-6	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9999966842106349	WITHOUT_CLASSIFICATION	3.3157893651238302E-6	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9999962032057423	WITHOUT_CLASSIFICATION	3.7967942576331593E-6	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999961512390548	WITHOUT_CLASSIFICATION	3.848760945144226E-6	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9999968566214151	WITHOUT_CLASSIFICATION	3.1433785849158066E-6	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999967716565716	WITHOUT_CLASSIFICATION	3.2283434283551123E-6	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9999965532738541	WITHOUT_CLASSIFICATION	3.4467261458661728E-6	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9999956027530723	WITHOUT_CLASSIFICATION	4.397246927704785E-6	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999956719031385	WITHOUT_CLASSIFICATION	4.328096861507073E-6	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999961222672973	WITHOUT_CLASSIFICATION	3.877732702771578E-6	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9999972336616075	WITHOUT_CLASSIFICATION	2.7663383923773934E-6	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9999965555917106	WITHOUT_CLASSIFICATION	3.4444082894084997E-6	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.999995804148616	WITHOUT_CLASSIFICATION	4.195851384043528E-6	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999957387155681	WITHOUT_CLASSIFICATION	4.261284431894133E-6	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999962437386626	WITHOUT_CLASSIFICATION	3.756261337296443E-6	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.99999592755715	WITHOUT_CLASSIFICATION	4.072442850002449E-6	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9999952270133384	WITHOUT_CLASSIFICATION	4.7729866615494835E-6	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.999995388559193	WITHOUT_CLASSIFICATION	4.6114408069451494E-6	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.999996001337199	WITHOUT_CLASSIFICATION	3.998662800992752E-6	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9999962483178024	WITHOUT_CLASSIFICATION	3.751682197538054E-6	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.9999966472526213	WITHOUT_CLASSIFICATION	3.3527473788148307E-6	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9999973038915222	WITHOUT_CLASSIFICATION	2.696108477869239E-6	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999962868778005	WITHOUT_CLASSIFICATION	3.7131221995757595E-6	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9999959696347697	WITHOUT_CLASSIFICATION	4.030365230391872E-6	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.999997945121268	WITHOUT_CLASSIFICATION	2.0548787319213576E-6	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9999982131758043	WITHOUT_CLASSIFICATION	1.7868241957008698E-6	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999979696816402	WITHOUT_CLASSIFICATION	2.0303183597225183E-6	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9999978569464772	WITHOUT_CLASSIFICATION	2.1430535227965164E-6	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9999978896801537	WITHOUT_CLASSIFICATION	2.110319846270749E-6	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999977787729317	WITHOUT_CLASSIFICATION	2.221227068236947E-6	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999980552839053	WITHOUT_CLASSIFICATION	1.944716094812683E-6	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999973068804415	WITHOUT_CLASSIFICATION	2.693119558483689E-6	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999969607806459	WITHOUT_CLASSIFICATION	3.0392193540161374E-6	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9999973956615116	WITHOUT_CLASSIFICATION	2.6043384883822038E-6	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9999967304849657	WITHOUT_CLASSIFICATION	3.2695150341305527E-6	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9999983504862462	WITHOUT_CLASSIFICATION	1.6495137538698453E-6	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999984696883362	WITHOUT_CLASSIFICATION	1.530311663765965E-6	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9999973895040973	WITHOUT_CLASSIFICATION	2.610495902729219E-6	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999973913229838	WITHOUT_CLASSIFICATION	2.6086770161336857E-6	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.9999970224238509	WITHOUT_CLASSIFICATION	2.977576149031912E-6	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9999976972752643	WITHOUT_CLASSIFICATION	2.302724735652765E-6	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9999978387847651	WITHOUT_CLASSIFICATION	2.161215234950454E-6	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999985509484239	WITHOUT_CLASSIFICATION	1.449051576110751E-6	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9999977453440285	WITHOUT_CLASSIFICATION	2.2546559715983532E-6	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9999970961473418	WITHOUT_CLASSIFICATION	2.9038526581470837E-6	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9999967640686329	WITHOUT_CLASSIFICATION	3.235931367015782E-6	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999967313483472	WITHOUT_CLASSIFICATION	3.268651652850689E-6	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999975537086713	WITHOUT_CLASSIFICATION	2.4462913287921406E-6	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9999974191717367	WITHOUT_CLASSIFICATION	2.5808282634063082E-6	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9999975681431027	WITHOUT_CLASSIFICATION	2.4318568973091244E-6	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999973613693036	WITHOUT_CLASSIFICATION	2.6386306964410276E-6	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9999978635973853	WITHOUT_CLASSIFICATION	2.1364026146517007E-6	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9999975788954686	WITHOUT_CLASSIFICATION	2.421104531500278E-6	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.9999972371592015	WITHOUT_CLASSIFICATION	2.7628407984013344E-6	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999980956412773	WITHOUT_CLASSIFICATION	1.9043587227341467E-6	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999980956412773	WITHOUT_CLASSIFICATION	1.9043587227341467E-6	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999970068392848	WITHOUT_CLASSIFICATION	2.9931607151760083E-6	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9999984001882979	WITHOUT_CLASSIFICATION	1.5998117021247478E-6	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9999974617045425	WITHOUT_CLASSIFICATION	2.538295457524964E-6	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9999975788661256	WITHOUT_CLASSIFICATION	2.4211338743001028E-6	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.999996427878346	WITHOUT_CLASSIFICATION	3.572121654144952E-6	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999976267730142	WITHOUT_CLASSIFICATION	2.3732269858076827E-6	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999967645804827	WITHOUT_CLASSIFICATION	3.2354195172440217E-6	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9999969768462225	WITHOUT_CLASSIFICATION	3.023153777594978E-6	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999972922657225	WITHOUT_CLASSIFICATION	2.7077342775620018E-6	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9999967026655884	WITHOUT_CLASSIFICATION	3.297334411521745E-6	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999914672473621	WITHOUT_CLASSIFICATION	8.532752637954307E-6	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999914672473621	WITHOUT_CLASSIFICATION	8.532752637954307E-6	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999900478292821	WITHOUT_CLASSIFICATION	9.952170717842288E-6	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999369775201785	WITHOUT_CLASSIFICATION	6.302247982147519E-5	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999960339183662	WITHOUT_CLASSIFICATION	3.966081633723438E-6	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999977627183619	WITHOUT_CLASSIFICATION	2.237281638134301E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999999979136999	WITHOUT_CLASSIFICATION	2.0863000991582345E-8	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999999979136999	WITHOUT_CLASSIFICATION	2.0863000991582345E-8	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999999979136999	WITHOUT_CLASSIFICATION	2.0863000991582345E-8	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.999999979136999	WITHOUT_CLASSIFICATION	2.0863000991582345E-8	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.8983358290762956	WITHOUT_CLASSIFICATION	0.10166417092370432	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999996915570482	WITHOUT_CLASSIFICATION	3.084429518499131E-7	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9999966085924683	WITHOUT_CLASSIFICATION	3.391407531787729E-6	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9999961481465164	WITHOUT_CLASSIFICATION	3.851853483624285E-6	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.9999967256966833	WITHOUT_CLASSIFICATION	3.2743033167493246E-6	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9999973801033529	WITHOUT_CLASSIFICATION	2.619896647092742E-6	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.999997430616876	WITHOUT_CLASSIFICATION	2.569383124045398E-6	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9999972257476208	WITHOUT_CLASSIFICATION	2.774252379181728E-6	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9999977529184677	WITHOUT_CLASSIFICATION	2.2470815322217905E-6	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9999965281729982	WITHOUT_CLASSIFICATION	3.471827001867659E-6	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9999959161585753	WITHOUT_CLASSIFICATION	4.083841424693991E-6	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9999964045715154	WITHOUT_CLASSIFICATION	3.5954284846793606E-6	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9999960708960852	WITHOUT_CLASSIFICATION	3.9291039147927955E-6	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9999961512016743	WITHOUT_CLASSIFICATION	3.8487983257987E-6	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9999956621629696	WITHOUT_CLASSIFICATION	4.337837030370174E-6	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9999973968637492	WITHOUT_CLASSIFICATION	2.6031362507441317E-6	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9999955622902978	WITHOUT_CLASSIFICATION	4.437709702141383E-6	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9999962661284537	WITHOUT_CLASSIFICATION	3.733871546341525E-6	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9999965579147067	WITHOUT_CLASSIFICATION	3.4420852933188295E-6	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9999961444006364	WITHOUT_CLASSIFICATION	3.855599363625037E-6	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.999996007549097	WITHOUT_CLASSIFICATION	3.9924509029912245E-6	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.999997350501145	WITHOUT_CLASSIFICATION	2.649498855016449E-6	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.999996573288598	WITHOUT_CLASSIFICATION	3.4267114018977015E-6	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9999955434408145	WITHOUT_CLASSIFICATION	4.456559185522067E-6	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9999962510663153	WITHOUT_CLASSIFICATION	3.74893368464556E-6	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9999980588607019	WITHOUT_CLASSIFICATION	1.941139298099027E-6	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9999982192941064	WITHOUT_CLASSIFICATION	1.7807058935355887E-6	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.999997670457526	WITHOUT_CLASSIFICATION	2.3295424740387937E-6	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.999997636431068	WITHOUT_CLASSIFICATION	2.363568931965413E-6	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9999970848075913	WITHOUT_CLASSIFICATION	2.915192408595917E-6	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9999964201480962	WITHOUT_CLASSIFICATION	3.579851903842865E-6	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9999971883109993	WITHOUT_CLASSIFICATION	2.811689000833874E-6	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9999977370547974	WITHOUT_CLASSIFICATION	2.2629452025169915E-6	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9999973385871375	WITHOUT_CLASSIFICATION	2.6614128625637596E-6	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9999972117826305	WITHOUT_CLASSIFICATION	2.7882173695121153E-6	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9999981154111558	WITHOUT_CLASSIFICATION	1.8845888442217728E-6	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9999974139501107	WITHOUT_CLASSIFICATION	2.5860498892930403E-6	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9999969353428286	WITHOUT_CLASSIFICATION	3.0646571713039805E-6	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9999976074502234	WITHOUT_CLASSIFICATION	2.3925497766216494E-6	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9999973115288314	WITHOUT_CLASSIFICATION	2.688471168626183E-6	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.9999985527116658	WITHOUT_CLASSIFICATION	1.44728833414139E-6	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9999974368078957	WITHOUT_CLASSIFICATION	2.5631921043645325E-6	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9999971041552856	WITHOUT_CLASSIFICATION	2.895844714417639E-6	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9999973611132866	WITHOUT_CLASSIFICATION	2.6388867133820807E-6	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9999966643850067	WITHOUT_CLASSIFICATION	3.3356149934051544E-6	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9999959203612107	WITHOUT_CLASSIFICATION	4.079638789343013E-6	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9999975293195884	WITHOUT_CLASSIFICATION	2.4706804115363892E-6	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9999967568825533	WITHOUT_CLASSIFICATION	3.2431174467105047E-6	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9999970488431035	WITHOUT_CLASSIFICATION	2.9511568964645765E-6	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9999974061904742	WITHOUT_CLASSIFICATION	2.5938095258229084E-6	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9999967016487097	WITHOUT_CLASSIFICATION	3.298351290377661E-6	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9999971520318715	WITHOUT_CLASSIFICATION	2.8479681284533986E-6	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9999966663459494	WITHOUT_CLASSIFICATION	3.333654050661231E-6	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9999962018841307	WITHOUT_CLASSIFICATION	3.7981158691314226E-6	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9999963623711376	WITHOUT_CLASSIFICATION	3.637628862296119E-6	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.999997407668485	WITHOUT_CLASSIFICATION	2.5923315150799047E-6	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9999981633319567	WITHOUT_CLASSIFICATION	1.8366680434013256E-6	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9999971639765112	WITHOUT_CLASSIFICATION	2.8360234888193444E-6	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9999983851389576	WITHOUT_CLASSIFICATION	1.6148610424572196E-6	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999999101715897	WITHOUT_CLASSIFICATION	8.982841024947565E-8	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999998256220897	WITHOUT_CLASSIFICATION	1.7437791025796904E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998251578333	WITHOUT_CLASSIFICATION	1.748421667981547E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998251578333	WITHOUT_CLASSIFICATION	1.748421667981547E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998251578333	WITHOUT_CLASSIFICATION	1.748421667981547E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998251578333	WITHOUT_CLASSIFICATION	1.748421667981547E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998251578333	WITHOUT_CLASSIFICATION	1.748421667981547E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998251578333	WITHOUT_CLASSIFICATION	1.748421667981547E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999998251578333	WITHOUT_CLASSIFICATION	1.748421667981547E-7	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999996429915005	WITHOUT_CLASSIFICATION	3.570084995419547E-7	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999996429915005	WITHOUT_CLASSIFICATION	3.570084995419547E-7	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999996429915005	WITHOUT_CLASSIFICATION	3.570084995419547E-7	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999996429915005	WITHOUT_CLASSIFICATION	3.570084995419547E-7	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998770961155817	WITHOUT_CLASSIFICATION	1.2290388441832295E-4	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9998770961155817	WITHOUT_CLASSIFICATION	1.2290388441832295E-4	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.99999999922527	WITHOUT_CLASSIFICATION	7.747298813096306E-10	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999861787762736	WITHOUT_CLASSIFICATION	1.3821223726395134E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999861787762736	WITHOUT_CLASSIFICATION	1.3821223726395134E-5	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999949069061111	WITHOUT_CLASSIFICATION	5.093093888883977E-6	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999973995224304	WITHOUT_CLASSIFICATION	2.600477569595054E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998885402306	WITHOUT_CLASSIFICATION	1.1145976937659395E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998885402306	WITHOUT_CLASSIFICATION	1.1145976937659395E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998885402306	WITHOUT_CLASSIFICATION	1.1145976937659395E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998885402306	WITHOUT_CLASSIFICATION	1.1145976937659395E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998885402306	WITHOUT_CLASSIFICATION	1.1145976937659395E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998885402306	WITHOUT_CLASSIFICATION	1.1145976937659395E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998885402306	WITHOUT_CLASSIFICATION	1.1145976937659395E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998159406212	WITHOUT_CLASSIFICATION	1.840593789043142E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999371005748	WITHOUT_CLASSIFICATION	6.289942522353096E-8	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999838929683484	WITHOUT_CLASSIFICATION	1.6107031651568146E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999838929683484	WITHOUT_CLASSIFICATION	1.6107031651568146E-5	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999578139814	WITHOUT_CLASSIFICATION	4.218601851329479E-8	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999992183282268	WITHOUT_CLASSIFICATION	7.816717732509858E-7	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999992183282268	WITHOUT_CLASSIFICATION	7.816717732509858E-7	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999999998269703	WITHOUT_CLASSIFICATION	1.730296912518426E-10	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.999225196410515	IMPLEMENTATION	7.748035894849199E-4	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999997999396926	WITHOUT_CLASSIFICATION	2.0006030742229016E-7	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999999286866205	WITHOUT_CLASSIFICATION	7.131337948337392E-8	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999998579831768	WITHOUT_CLASSIFICATION	1.420168232238883E-7	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999980265490571	WITHOUT_CLASSIFICATION	1.973450942788822E-6	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999913693730883	WITHOUT_CLASSIFICATION	8.630626911627717E-6	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.999999003801418	WITHOUT_CLASSIFICATION	9.961985819612902E-7	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999984448491193	WITHOUT_CLASSIFICATION	1.5551508807280708E-6	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9998782754679216	WITHOUT_CLASSIFICATION	1.2172453207841956E-4	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999901964868492	WITHOUT_CLASSIFICATION	9.803513150822174E-6	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999999863838163	WITHOUT_CLASSIFICATION	1.3616183777043164E-8	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.999999993010436	WITHOUT_CLASSIFICATION	6.989564075583119E-9	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9991351079974702	WITHOUT_CLASSIFICATION	8.648920025296836E-4	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999630143034645	WITHOUT_CLASSIFICATION	3.6985696535471505E-5	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999973902295002	WITHOUT_CLASSIFICATION	2.609770499806926E-6	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999482499821	WITHOUT_CLASSIFICATION	5.175001786151939E-8	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999903509339002	WITHOUT_CLASSIFICATION	9.649066099807702E-6	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999356307440974	WITHOUT_CLASSIFICATION	6.436925590256516E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999356307440974	WITHOUT_CLASSIFICATION	6.436925590256516E-5	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9998387007628166	WITHOUT_CLASSIFICATION	1.6129923718346498E-4	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.999999989833108	WITHOUT_CLASSIFICATION	1.0166892002349259E-8	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.999999867612021	WITHOUT_CLASSIFICATION	1.3238797905112364E-7	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999972945371888	WITHOUT_CLASSIFICATION	2.7054628111510536E-6	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999741394322526	WITHOUT_CLASSIFICATION	2.5860567747446237E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999741394322526	WITHOUT_CLASSIFICATION	2.5860567747446237E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999741394322526	WITHOUT_CLASSIFICATION	2.5860567747446237E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999365190125085	WITHOUT_CLASSIFICATION	6.348098749154601E-5	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999992622263179	WITHOUT_CLASSIFICATION	7.37773682143098E-7	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999998656257015	WITHOUT_CLASSIFICATION	1.343742985141668E-7	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999999932986497	WITHOUT_CLASSIFICATION	6.701350226019422E-9	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999999750347862	WITHOUT_CLASSIFICATION	2.4965213810455147E-8	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999996455628831	WITHOUT_CLASSIFICATION	3.5443711685370006E-7	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999999668446126	WITHOUT_CLASSIFICATION	3.3155387472658846E-8	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999954137199	WITHOUT_CLASSIFICATION	4.586280092073851E-9	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999994260383872	WITHOUT_CLASSIFICATION	5.739616128551364E-7	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999991245484875	WITHOUT_CLASSIFICATION	8.754515124296923E-7	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9999999489910445	WITHOUT_CLASSIFICATION	5.100895557545538E-8	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999999854018826	WITHOUT_CLASSIFICATION	1.4598117407190713E-8	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.9665765148616472	IMPLEMENTATION	0.0334234851383528	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999999808013937	WITHOUT_CLASSIFICATION	1.919860631003006E-8	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999575442908529	WITHOUT_CLASSIFICATION	4.245570914710329E-5	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999999984759222	WITHOUT_CLASSIFICATION	1.5240777113169347E-9	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999999485468845	WITHOUT_CLASSIFICATION	5.1453115597131E-8	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999999742279736	WITHOUT_CLASSIFICATION	2.5772026428164467E-8	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9998821843072889	WITHOUT_CLASSIFICATION	1.1781569271107456E-4	IMPLEMENTATION
