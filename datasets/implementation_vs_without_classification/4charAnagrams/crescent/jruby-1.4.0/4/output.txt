// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.7914204683610135	WITHOUT_CLASSIFICATION	0.20857953163898646	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.8582320081881394	IMPLEMENTATION	0.14176799181186064	WITHOUT_CLASSIFICATION
// TODO: Someday, enable.	IMPLEMENTATION	0.5967314403822049	IMPLEMENTATION	0.4032685596177952	WITHOUT_CLASSIFICATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.9999593191473845	WITHOUT_CLASSIFICATION	4.068085261556935E-5	IMPLEMENTATION
// TODO: non-strict option	IMPLEMENTATION	0.6221658203580887	IMPLEMENTATION	0.37783417964191124	WITHOUT_CLASSIFICATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.7599401611161751	IMPLEMENTATION	0.2400598388838248	WITHOUT_CLASSIFICATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.9999806350735161	WITHOUT_CLASSIFICATION	1.936492648385675E-5	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.6535138981023974	WITHOUT_CLASSIFICATION	0.34648610189760265	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.6535138981023974	WITHOUT_CLASSIFICATION	0.34648610189760265	IMPLEMENTATION
// TODO: pass this in?	IMPLEMENTATION	0.9157026316052507	IMPLEMENTATION	0.0842973683947494	WITHOUT_CLASSIFICATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9998157651233845	WITHOUT_CLASSIFICATION	1.8423487661550127E-4	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.9838619789462557	IMPLEMENTATION	0.016138021053744296	WITHOUT_CLASSIFICATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.8155874177914615	WITHOUT_CLASSIFICATION	0.18441258220853848	IMPLEMENTATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.8669764080432683	WITHOUT_CLASSIFICATION	0.1330235919567317	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.7614536508966678	WITHOUT_CLASSIFICATION	0.23854634910333206	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9999230400036212	WITHOUT_CLASSIFICATION	7.695999637883558E-5	IMPLEMENTATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9997941541815988	WITHOUT_CLASSIFICATION	2.058458184012038E-4	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.7212678924657493	IMPLEMENTATION	0.27873210753425076	WITHOUT_CLASSIFICATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.999527699254025	WITHOUT_CLASSIFICATION	4.7230074597494505E-4	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.6472354908498774	WITHOUT_CLASSIFICATION	0.3527645091501226	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.7896602402775038	IMPLEMENTATION	0.2103397597224963	WITHOUT_CLASSIFICATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.9986940440419806	WITHOUT_CLASSIFICATION	0.001305955958019395	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.9432732170227887	IMPLEMENTATION	0.05672678297721139	WITHOUT_CLASSIFICATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.5279369803182662	IMPLEMENTATION	0.47206301968173375	WITHOUT_CLASSIFICATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.8778615725638235	WITHOUT_CLASSIFICATION	0.12213842743617653	IMPLEMENTATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.7430083869093186	WITHOUT_CLASSIFICATION	0.2569916130906814	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.9785787084351748	IMPLEMENTATION	0.0214212915648252	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9975334632633586	IMPLEMENTATION	0.002466536736641507	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.9785787084351748	IMPLEMENTATION	0.0214212915648252	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9975334632633586	IMPLEMENTATION	0.002466536736641507	WITHOUT_CLASSIFICATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.9818466072874384	IMPLEMENTATION	0.01815339271256152	WITHOUT_CLASSIFICATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.598598231484551	WITHOUT_CLASSIFICATION	0.40140176851544895	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.9489736869217358	IMPLEMENTATION	0.0510263130782642	WITHOUT_CLASSIFICATION
// TODO: make threadsafe	IMPLEMENTATION	0.8640272664966753	WITHOUT_CLASSIFICATION	0.13597273350332484	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.7316839272913157	IMPLEMENTATION	0.2683160727086843	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.7316839272913157	IMPLEMENTATION	0.2683160727086843	WITHOUT_CLASSIFICATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.9999978902223102	WITHOUT_CLASSIFICATION	2.1097776898123173E-6	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.9999221214605114	WITHOUT_CLASSIFICATION	7.787853948862057E-5	IMPLEMENTATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.8879743782604046	IMPLEMENTATION	0.11202562173959536	WITHOUT_CLASSIFICATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.6083137088582855	IMPLEMENTATION	0.39168629114171455	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.8598553517644854	IMPLEMENTATION	0.14014464823551467	WITHOUT_CLASSIFICATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.9659832429621972	IMPLEMENTATION	0.034016757037802776	WITHOUT_CLASSIFICATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.9780665688468867	WITHOUT_CLASSIFICATION	0.021933431153113334	IMPLEMENTATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.9999979966706952	WITHOUT_CLASSIFICATION	2.003329304735622E-6	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.9851012687564864	WITHOUT_CLASSIFICATION	0.014898731243513614	IMPLEMENTATION
// TODO: add trace call?	IMPLEMENTATION	0.8302425867063052	IMPLEMENTATION	0.16975741329369484	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9999330096434614	WITHOUT_CLASSIFICATION	6.699035653848952E-5	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.9999858524272334	WITHOUT_CLASSIFICATION	1.414757276662152E-5	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.999910084624129	WITHOUT_CLASSIFICATION	8.991537587099787E-5	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.8607622707292701	WITHOUT_CLASSIFICATION	0.13923772927072983	IMPLEMENTATION
// FIXME: missing arity check	IMPLEMENTATION	0.9999330096434614	WITHOUT_CLASSIFICATION	6.699035653848952E-5	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.999963069739716	WITHOUT_CLASSIFICATION	3.693026028391919E-5	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.9941492951341854	WITHOUT_CLASSIFICATION	0.005850704865814537	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.8527733962564195	WITHOUT_CLASSIFICATION	0.1472266037435805	IMPLEMENTATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.9993606962903225	WITHOUT_CLASSIFICATION	6.393037096774256E-4	IMPLEMENTATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.9933849025006356	WITHOUT_CLASSIFICATION	0.006615097499364407	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.9998189686952779	WITHOUT_CLASSIFICATION	1.8103130472212054E-4	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.999972078738011	WITHOUT_CLASSIFICATION	2.792126198909945E-5	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9999473855145454	WITHOUT_CLASSIFICATION	5.261448545450797E-5	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9999882360617607	WITHOUT_CLASSIFICATION	1.1763938239361995E-5	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.9999830185374525	WITHOUT_CLASSIFICATION	1.6981462547409082E-5	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.7386065565092094	IMPLEMENTATION	0.26139344349079074	WITHOUT_CLASSIFICATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.7386065565092094	IMPLEMENTATION	0.26139344349079074	WITHOUT_CLASSIFICATION
// TODO: validate port as numeric	IMPLEMENTATION	0.6101261197087468	IMPLEMENTATION	0.38987388029125325	WITHOUT_CLASSIFICATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9990371035064181	IMPLEMENTATION	9.628964935820077E-4	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.5141002017566183	IMPLEMENTATION	0.48589979824338175	WITHOUT_CLASSIFICATION
// TODO: deal with varargs	IMPLEMENTATION	0.932365107550262	WITHOUT_CLASSIFICATION	0.06763489244973803	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.932365107550262	WITHOUT_CLASSIFICATION	0.06763489244973803	IMPLEMENTATION
// TODO: other reserved names?	IMPLEMENTATION	0.839488724656945	IMPLEMENTATION	0.16051127534305495	WITHOUT_CLASSIFICATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.8890744791026848	WITHOUT_CLASSIFICATION	0.11092552089731524	IMPLEMENTATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.9028610909186935	IMPLEMENTATION	0.09713890908130646	WITHOUT_CLASSIFICATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.9622283872478841	WITHOUT_CLASSIFICATION	0.03777161275211598	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.9679420438675664	WITHOUT_CLASSIFICATION	0.03205795613243353	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.9679420438675664	WITHOUT_CLASSIFICATION	0.03205795613243353	IMPLEMENTATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.9357777935149781	IMPLEMENTATION	0.06422220648502175	WITHOUT_CLASSIFICATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9947412029686671	WITHOUT_CLASSIFICATION	0.005258797031332959	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.99859045645207	WITHOUT_CLASSIFICATION	0.0014095435479300246	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.9994939070517834	IMPLEMENTATION	5.060929482164588E-4	WITHOUT_CLASSIFICATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.9338447228532851	IMPLEMENTATION	0.0661552771467149	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.999944515271244	WITHOUT_CLASSIFICATION	5.5484728756055785E-5	IMPLEMENTATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.9863509515657688	IMPLEMENTATION	0.013649048434231065	WITHOUT_CLASSIFICATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.9999997123405557	WITHOUT_CLASSIFICATION	2.8765944420173394E-7	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9999310204976323	WITHOUT_CLASSIFICATION	6.897950236770976E-5	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9999310204976323	WITHOUT_CLASSIFICATION	6.897950236770976E-5	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.9997313043106179	WITHOUT_CLASSIFICATION	2.686956893821621E-4	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.9995082481770735	WITHOUT_CLASSIFICATION	4.917518229265772E-4	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9999819613435142	WITHOUT_CLASSIFICATION	1.8038656485769282E-5	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9999819613435142	WITHOUT_CLASSIFICATION	1.8038656485769282E-5	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.9111335788483088	WITHOUT_CLASSIFICATION	0.08886642115169127	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9994657112322527	WITHOUT_CLASSIFICATION	5.342887677472731E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9994657112322527	WITHOUT_CLASSIFICATION	5.342887677472731E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9994657112322527	WITHOUT_CLASSIFICATION	5.342887677472731E-4	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.9927935381578857	IMPLEMENTATION	0.007206461842114222	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.9927935381578857	IMPLEMENTATION	0.007206461842114222	WITHOUT_CLASSIFICATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.9804705729796298	IMPLEMENTATION	0.01952942702037023	WITHOUT_CLASSIFICATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9994646045917204	WITHOUT_CLASSIFICATION	5.353954082797213E-4	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.999959653341886	WITHOUT_CLASSIFICATION	4.0346658113946304E-5	IMPLEMENTATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9969230198838989	IMPLEMENTATION	0.0030769801161012332	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9865342551412706	IMPLEMENTATION	0.013465744858729463	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9865342551412706	IMPLEMENTATION	0.013465744858729463	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9865342551412706	IMPLEMENTATION	0.013465744858729463	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.8598553517644854	IMPLEMENTATION	0.14014464823551467	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.8598553517644854	IMPLEMENTATION	0.14014464823551467	WITHOUT_CLASSIFICATION
// TODO: check for ascii string	IMPLEMENTATION	0.8513911349986754	IMPLEMENTATION	0.14860886500132467	WITHOUT_CLASSIFICATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.9900443817854946	IMPLEMENTATION	0.009955618214505482	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.7316839272913157	IMPLEMENTATION	0.2683160727086843	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.7316839272913157	IMPLEMENTATION	0.2683160727086843	WITHOUT_CLASSIFICATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.6809407915826747	WITHOUT_CLASSIFICATION	0.3190592084173252	IMPLEMENTATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.8648355776348331	WITHOUT_CLASSIFICATION	0.1351644223651669	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9999230400036212	WITHOUT_CLASSIFICATION	7.695999637883558E-5	IMPLEMENTATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9999913425500964	WITHOUT_CLASSIFICATION	8.657449903551023E-6	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.9551568047576224	IMPLEMENTATION	0.044843195242377565	WITHOUT_CLASSIFICATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.916980741803812	WITHOUT_CLASSIFICATION	0.08301925819618797	IMPLEMENTATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.9848258369328965	WITHOUT_CLASSIFICATION	0.015174163067103534	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999176584329099	WITHOUT_CLASSIFICATION	8.234156709014611E-5	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9999958834032485	WITHOUT_CLASSIFICATION	4.1165967515273825E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999752388804053	WITHOUT_CLASSIFICATION	2.4761119594828475E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999752388804053	WITHOUT_CLASSIFICATION	2.4761119594828475E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999617274046401	WITHOUT_CLASSIFICATION	3.8272595359997476E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999617274046401	WITHOUT_CLASSIFICATION	3.8272595359997476E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999940945986187	WITHOUT_CLASSIFICATION	5.9054013813033915E-5	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999999052231677	WITHOUT_CLASSIFICATION	9.477683228558885E-8	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9999961467985673	WITHOUT_CLASSIFICATION	3.853201432693549E-6	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.999996382697252	WITHOUT_CLASSIFICATION	3.617302747961358E-6	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999884943543622	WITHOUT_CLASSIFICATION	1.1505645637772133E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999884943543622	WITHOUT_CLASSIFICATION	1.1505645637772133E-5	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9999967218123985	WITHOUT_CLASSIFICATION	3.2781876015213073E-6	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999979939960355	WITHOUT_CLASSIFICATION	2.0060039645083316E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999979939960355	WITHOUT_CLASSIFICATION	2.0060039645083316E-5	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9999393445258872	WITHOUT_CLASSIFICATION	6.065547411287122E-5	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.99997423634929	WITHOUT_CLASSIFICATION	2.5763650710013783E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999741355762375	WITHOUT_CLASSIFICATION	2.5864423762587976E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999741355762375	WITHOUT_CLASSIFICATION	2.5864423762587976E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999741355762375	WITHOUT_CLASSIFICATION	2.5864423762587976E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999741355762375	WITHOUT_CLASSIFICATION	2.5864423762587976E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999741355762375	WITHOUT_CLASSIFICATION	2.5864423762587976E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999741355762375	WITHOUT_CLASSIFICATION	2.5864423762587976E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999741355762375	WITHOUT_CLASSIFICATION	2.5864423762587976E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999612263714398	WITHOUT_CLASSIFICATION	3.877362856012519E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999612263714398	WITHOUT_CLASSIFICATION	3.877362856012519E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999612263714398	WITHOUT_CLASSIFICATION	3.877362856012519E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999612263714398	WITHOUT_CLASSIFICATION	3.877362856012519E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999612263714398	WITHOUT_CLASSIFICATION	3.877362856012519E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999612263714398	WITHOUT_CLASSIFICATION	3.877362856012519E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999612263714398	WITHOUT_CLASSIFICATION	3.877362856012519E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999406591096228	WITHOUT_CLASSIFICATION	5.934089037725178E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999406591096228	WITHOUT_CLASSIFICATION	5.934089037725178E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999406591096228	WITHOUT_CLASSIFICATION	5.934089037725178E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999406591096228	WITHOUT_CLASSIFICATION	5.934089037725178E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999406591096228	WITHOUT_CLASSIFICATION	5.934089037725178E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999406591096228	WITHOUT_CLASSIFICATION	5.934089037725178E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999883437278702	WITHOUT_CLASSIFICATION	1.165627212988675E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999883437278702	WITHOUT_CLASSIFICATION	1.165627212988675E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999883437278702	WITHOUT_CLASSIFICATION	1.165627212988675E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999883437278702	WITHOUT_CLASSIFICATION	1.165627212988675E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999883437278702	WITHOUT_CLASSIFICATION	1.165627212988675E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999883437278702	WITHOUT_CLASSIFICATION	1.165627212988675E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999796773460427	WITHOUT_CLASSIFICATION	2.0322653957407123E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999796773460427	WITHOUT_CLASSIFICATION	2.0322653957407123E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999796773460427	WITHOUT_CLASSIFICATION	2.0322653957407123E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999796773460427	WITHOUT_CLASSIFICATION	2.0322653957407123E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999796773460427	WITHOUT_CLASSIFICATION	2.0322653957407123E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999796773460427	WITHOUT_CLASSIFICATION	2.0322653957407123E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9999796773460427	WITHOUT_CLASSIFICATION	2.0322653957407123E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999884342704233	WITHOUT_CLASSIFICATION	1.1565729576757505E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999884342704233	WITHOUT_CLASSIFICATION	1.1565729576757505E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999884342704233	WITHOUT_CLASSIFICATION	1.1565729576757505E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999884342704233	WITHOUT_CLASSIFICATION	1.1565729576757505E-5	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999171259979296	WITHOUT_CLASSIFICATION	8.287400207043597E-5	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999171259979296	WITHOUT_CLASSIFICATION	8.287400207043597E-5	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999971406751962	WITHOUT_CLASSIFICATION	2.859324803879223E-6	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9999980013754571	WITHOUT_CLASSIFICATION	1.9986245429390513E-6	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9999640676780636	WITHOUT_CLASSIFICATION	3.5932321936433655E-5	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.999999858558098	WITHOUT_CLASSIFICATION	1.41441902066052E-7	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999996364717392	WITHOUT_CLASSIFICATION	3.63528260795196E-7	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999972760036518	WITHOUT_CLASSIFICATION	2.723996348084487E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999972760036518	WITHOUT_CLASSIFICATION	2.723996348084487E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999972760036518	WITHOUT_CLASSIFICATION	2.723996348084487E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999972760036518	WITHOUT_CLASSIFICATION	2.723996348084487E-6	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999988221848294	WITHOUT_CLASSIFICATION	1.1778151706429193E-6	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999961576234889	WITHOUT_CLASSIFICATION	3.84237651105854E-6	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999935961315697	WITHOUT_CLASSIFICATION	6.403868430250531E-6	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999889573567291	WITHOUT_CLASSIFICATION	1.1042643270843578E-5	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9999419174847809	WITHOUT_CLASSIFICATION	5.8082515219197E-5	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999999395594282	WITHOUT_CLASSIFICATION	6.044057179587867E-8	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999989356615724	WITHOUT_CLASSIFICATION	1.0643384276285932E-6	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999999610426552	WITHOUT_CLASSIFICATION	3.895734473339418E-8	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999979126545	WITHOUT_CLASSIFICATION	2.087345457022152E-9	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999942021367656	WITHOUT_CLASSIFICATION	5.797863234468619E-6	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999901091460887	WITHOUT_CLASSIFICATION	9.890853911407147E-6	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999988852197906	WITHOUT_CLASSIFICATION	1.1147802094096508E-6	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999939396867379	WITHOUT_CLASSIFICATION	6.060313262042705E-6	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999969349123001	WITHOUT_CLASSIFICATION	3.065087699900735E-6	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999983046809551	WITHOUT_CLASSIFICATION	1.6953190448729927E-6	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999863788224207	WITHOUT_CLASSIFICATION	1.3621177579303468E-5	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9999903625368919	WITHOUT_CLASSIFICATION	9.637463108215582E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999972760036518	WITHOUT_CLASSIFICATION	2.723996348084487E-6	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999986445151241	WITHOUT_CLASSIFICATION	1.3554848759229443E-6	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999996308039406	WITHOUT_CLASSIFICATION	3.6919605934586816E-7	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999994385162595	WITHOUT_CLASSIFICATION	5.614837404222196E-7	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999624846121126	WITHOUT_CLASSIFICATION	3.751538788733241E-5	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.999993964795884	WITHOUT_CLASSIFICATION	6.035204116125532E-6	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999961302035093	WITHOUT_CLASSIFICATION	3.869796490603814E-6	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.999984126537347	WITHOUT_CLASSIFICATION	1.5873462652914442E-5	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999993160267411	WITHOUT_CLASSIFICATION	6.839732588314954E-7	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.99991101316216	WITHOUT_CLASSIFICATION	8.898683783995898E-5	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999999322238399	WITHOUT_CLASSIFICATION	6.777616014852688E-8	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999992827053652	WITHOUT_CLASSIFICATION	7.17294634830829E-7	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999969149511404	WITHOUT_CLASSIFICATION	3.0850488596102724E-6	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999827945511872	WITHOUT_CLASSIFICATION	1.720544881277206E-5	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.999946486623058	WITHOUT_CLASSIFICATION	5.351337694215165E-5	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999891870949241	WITHOUT_CLASSIFICATION	1.0812905075770698E-5	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.999995231527831	WITHOUT_CLASSIFICATION	4.76847216901059E-6	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9999938965965659	WITHOUT_CLASSIFICATION	6.103403434207417E-6	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999998381464689	WITHOUT_CLASSIFICATION	1.6185353120694225E-7	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999987076635748	WITHOUT_CLASSIFICATION	1.2923364252274425E-6	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999996740634787	WITHOUT_CLASSIFICATION	3.259365212425353E-7	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999998220852272	WITHOUT_CLASSIFICATION	1.7791477279644823E-7	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999891202929478	WITHOUT_CLASSIFICATION	1.0879707052122829E-5	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999991336647049	WITHOUT_CLASSIFICATION	8.663352949580061E-7	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9999286724505293	WITHOUT_CLASSIFICATION	7.132754947074137E-5	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999916791082775	WITHOUT_CLASSIFICATION	8.320891722546074E-6	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9999437957118993	WITHOUT_CLASSIFICATION	5.620428810076365E-5	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999984691829286	WITHOUT_CLASSIFICATION	1.5308170714049904E-6	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999995960423926	WITHOUT_CLASSIFICATION	4.039576073415152E-7	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999999808512161	WITHOUT_CLASSIFICATION	1.9148783938221975E-8	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999972026051164	WITHOUT_CLASSIFICATION	2.7973948836577735E-6	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999946423725172	WITHOUT_CLASSIFICATION	5.3576274826908355E-6	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999954636673098	WITHOUT_CLASSIFICATION	4.536332690116739E-6	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999982497349884	WITHOUT_CLASSIFICATION	1.7502650115804808E-6	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999980299372503	WITHOUT_CLASSIFICATION	1.9700627497379227E-6	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999951776406792	WITHOUT_CLASSIFICATION	4.822359320728657E-6	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999689963328278	WITHOUT_CLASSIFICATION	3.100366717219241E-5	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999999404268743	WITHOUT_CLASSIFICATION	5.957312554942609E-8	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999990543766506	WITHOUT_CLASSIFICATION	9.456233493809905E-7	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999869832004333	WITHOUT_CLASSIFICATION	1.3016799566715018E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999970862983534	WITHOUT_CLASSIFICATION	2.913701646516716E-6	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999978771252812	WITHOUT_CLASSIFICATION	2.122874718900142E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999995081638769	WITHOUT_CLASSIFICATION	4.918361230965898E-6	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999686293042124	WITHOUT_CLASSIFICATION	3.137069578766837E-5	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999249679756379	WITHOUT_CLASSIFICATION	7.50320243621612E-5	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9999249679756379	WITHOUT_CLASSIFICATION	7.50320243621612E-5	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9995289193172362	WITHOUT_CLASSIFICATION	4.710806827637809E-4	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999998961161638	WITHOUT_CLASSIFICATION	1.0388383612180484E-7	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999982064211752	WITHOUT_CLASSIFICATION	1.793578824748375E-6	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999965352887975	WITHOUT_CLASSIFICATION	3.4647112025307036E-6	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999536704655233	WITHOUT_CLASSIFICATION	4.632953447665184E-5	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.999986333514096	WITHOUT_CLASSIFICATION	1.3666485904022768E-5	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9999903435936859	WITHOUT_CLASSIFICATION	9.656406314122291E-6	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9999770876822545	WITHOUT_CLASSIFICATION	2.2912317745589656E-5	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999995081638769	WITHOUT_CLASSIFICATION	4.918361230965898E-6	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999891638402076	WITHOUT_CLASSIFICATION	1.083615979244133E-5	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999974547074494	WITHOUT_CLASSIFICATION	2.545292550528E-6	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999992972789794	WITHOUT_CLASSIFICATION	7.02721020567262E-7	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999970129477577	WITHOUT_CLASSIFICATION	2.987052242301809E-6	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999991159784558	WITHOUT_CLASSIFICATION	8.84021544224015E-7	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999982040837938	WITHOUT_CLASSIFICATION	1.7959162061826946E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999982040837938	WITHOUT_CLASSIFICATION	1.7959162061826946E-6	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999982040837938	WITHOUT_CLASSIFICATION	1.7959162061826946E-6	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999676991476192	WITHOUT_CLASSIFICATION	3.230085238071522E-5	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.999999807110702	WITHOUT_CLASSIFICATION	1.9288929803981965E-7	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.999998966040095	WITHOUT_CLASSIFICATION	1.033959905016856E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999993725637428	WITHOUT_CLASSIFICATION	6.274362571865634E-7	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999995566224985	WITHOUT_CLASSIFICATION	4.433775014413967E-7	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999998314510506	WITHOUT_CLASSIFICATION	1.6854894935885026E-7	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.999994791107821	WITHOUT_CLASSIFICATION	5.2088921790414274E-6	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999998041248064	WITHOUT_CLASSIFICATION	1.9587519357035735E-7	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999977515820067	WITHOUT_CLASSIFICATION	2.2484179934541442E-6	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999977515820067	WITHOUT_CLASSIFICATION	2.2484179934541442E-6	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999967545531401	WITHOUT_CLASSIFICATION	3.2454468598925446E-6	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999997086419863	WITHOUT_CLASSIFICATION	2.913580137003736E-7	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.999997077844545	WITHOUT_CLASSIFICATION	2.9221554550791667E-6	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.999997077844545	WITHOUT_CLASSIFICATION	2.9221554550791667E-6	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999980942277403	WITHOUT_CLASSIFICATION	1.9057722596443107E-6	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999913612132669	WITHOUT_CLASSIFICATION	8.638786732974363E-6	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999966731218553	WITHOUT_CLASSIFICATION	3.3268781447113156E-6	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999992223002147	WITHOUT_CLASSIFICATION	7.77699785396756E-7	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.99999630168097	WITHOUT_CLASSIFICATION	3.698319030127165E-6	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.999998753720761	WITHOUT_CLASSIFICATION	1.246279239137856E-6	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.999990606117927	WITHOUT_CLASSIFICATION	9.393882072954091E-6	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.999983807583249	WITHOUT_CLASSIFICATION	1.619241675101791E-5	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9999986280255233	WITHOUT_CLASSIFICATION	1.3719744767328615E-6	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999966183735628	WITHOUT_CLASSIFICATION	3.38162643710282E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999995081638769	WITHOUT_CLASSIFICATION	4.918361230965898E-6	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999937945759574	WITHOUT_CLASSIFICATION	6.205424042588137E-6	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999982207825966	WITHOUT_CLASSIFICATION	1.7792174034218743E-6	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999977648754413	WITHOUT_CLASSIFICATION	2.2351245585818828E-6	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9999798410608656	WITHOUT_CLASSIFICATION	2.0158939134411526E-5	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999996695003105	WITHOUT_CLASSIFICATION	3.304996894969377E-7	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999983842386514	WITHOUT_CLASSIFICATION	1.615761348640636E-6	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999925746421022	WITHOUT_CLASSIFICATION	7.425357897812546E-6	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999873787709039	WITHOUT_CLASSIFICATION	1.2621229095937716E-5	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999975222383376	WITHOUT_CLASSIFICATION	2.477761662357882E-6	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.999994209598842	WITHOUT_CLASSIFICATION	5.7904011579966574E-6	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999978963658965	WITHOUT_CLASSIFICATION	2.103634103416635E-6	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.999999868977697	WITHOUT_CLASSIFICATION	1.3102230306271576E-7	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999960895189305	WITHOUT_CLASSIFICATION	3.910481069457492E-6	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999959772774543	WITHOUT_CLASSIFICATION	4.022722545778649E-6	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.999995928298831	WITHOUT_CLASSIFICATION	4.071701169011729E-6	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9999574574186926	WITHOUT_CLASSIFICATION	4.254258130740153E-5	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999965925482956	WITHOUT_CLASSIFICATION	3.4074517042920825E-6	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9999980248429229	WITHOUT_CLASSIFICATION	1.9751570771276764E-6	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999900646697955	WITHOUT_CLASSIFICATION	9.935330204556563E-6	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999615821613336	WITHOUT_CLASSIFICATION	3.841783866647107E-5	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999961212335285	WITHOUT_CLASSIFICATION	3.878766471413288E-6	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999998289082902	WITHOUT_CLASSIFICATION	1.71091709836686E-7	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999996775361023	WITHOUT_CLASSIFICATION	3.224638977686306E-7	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999998267970707	WITHOUT_CLASSIFICATION	1.7320292925958704E-7	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999999427639997	WITHOUT_CLASSIFICATION	5.723600026164103E-8	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999992556036824	WITHOUT_CLASSIFICATION	7.443963176760332E-7	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999987819374311	WITHOUT_CLASSIFICATION	1.2180625689189503E-6	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999992285846823	WITHOUT_CLASSIFICATION	7.714153178191094E-7	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999999174474342	WITHOUT_CLASSIFICATION	8.2552565812454E-8	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999939533917552	WITHOUT_CLASSIFICATION	6.046608244766926E-6	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999997510454262	WITHOUT_CLASSIFICATION	2.489545738293451E-7	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9999997576238969	WITHOUT_CLASSIFICATION	2.423761030878291E-7	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998400928698851	WITHOUT_CLASSIFICATION	1.599071301148399E-4	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999972281389027	WITHOUT_CLASSIFICATION	2.771861097451754E-6	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999924444143328	WITHOUT_CLASSIFICATION	7.5555856671512825E-6	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999992826136616	WITHOUT_CLASSIFICATION	7.173863384770011E-7	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999979985645975	WITHOUT_CLASSIFICATION	2.0014354026098492E-6	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999938295363756	WITHOUT_CLASSIFICATION	6.1704636244320095E-6	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999975010417979	WITHOUT_CLASSIFICATION	2.498958202076984E-6	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999992271978017	WITHOUT_CLASSIFICATION	7.728021983924293E-7	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.99999886287308	WITHOUT_CLASSIFICATION	1.1371269200262954E-6	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9999985473561396	WITHOUT_CLASSIFICATION	1.452643860494161E-6	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999762701910713	WITHOUT_CLASSIFICATION	2.3729808928672964E-5	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999882529715776	WITHOUT_CLASSIFICATION	1.1747028422357852E-5	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9999952957363275	WITHOUT_CLASSIFICATION	4.704263672508962E-6	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9999984927886563	WITHOUT_CLASSIFICATION	1.507211343766036E-6	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.999974428347972	WITHOUT_CLASSIFICATION	2.557165202799747E-5	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999981176284402	WITHOUT_CLASSIFICATION	1.882371559844466E-6	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999958613270815	WITHOUT_CLASSIFICATION	4.13867291849416E-6	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999954702805562	WITHOUT_CLASSIFICATION	4.5297194437135765E-6	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9999975897084743	WITHOUT_CLASSIFICATION	2.4102915257339016E-6	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999844480732146	WITHOUT_CLASSIFICATION	1.5551926785380174E-5	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999358083708755	WITHOUT_CLASSIFICATION	6.419162912458932E-5	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999996448250059	WITHOUT_CLASSIFICATION	3.5517499399325516E-7	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999937657698321	WITHOUT_CLASSIFICATION	6.2342301679026765E-6	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999636179453476	WITHOUT_CLASSIFICATION	3.638205465243049E-5	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999199683918122	WITHOUT_CLASSIFICATION	8.00316081878532E-5	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999983966204017	WITHOUT_CLASSIFICATION	1.6033795983078017E-6	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999998570104686	WITHOUT_CLASSIFICATION	1.4298953130979074E-7	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9999728607947477	WITHOUT_CLASSIFICATION	2.713920525243799E-5	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999901544333394	WITHOUT_CLASSIFICATION	9.84556666052403E-6	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999901544333394	WITHOUT_CLASSIFICATION	9.84556666052403E-6	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999933086379319	WITHOUT_CLASSIFICATION	6.691362068025985E-6	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999933086379319	WITHOUT_CLASSIFICATION	6.691362068025985E-6	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999943073597801	WITHOUT_CLASSIFICATION	5.69264021989278E-6	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999943073597801	WITHOUT_CLASSIFICATION	5.69264021989278E-6	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999838268762833	WITHOUT_CLASSIFICATION	1.61731237167742E-5	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999838268762833	WITHOUT_CLASSIFICATION	1.61731237167742E-5	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9999576162536804	WITHOUT_CLASSIFICATION	4.238374631960876E-5	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9999409516746786	WITHOUT_CLASSIFICATION	5.904832532135707E-5	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999978938891225	WITHOUT_CLASSIFICATION	2.1061108773519147E-6	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999995456632115	WITHOUT_CLASSIFICATION	4.5433678853319546E-7	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999992913252983	WITHOUT_CLASSIFICATION	7.086747017854817E-7	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999987654573331	WITHOUT_CLASSIFICATION	1.2345426668870334E-6	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999599050356509	WITHOUT_CLASSIFICATION	4.0094964349175736E-5	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.999997950439652	WITHOUT_CLASSIFICATION	2.049560348100974E-6	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999956542293149	WITHOUT_CLASSIFICATION	4.345770685067428E-6	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999990984792182	WITHOUT_CLASSIFICATION	9.015207818630554E-7	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999767251035908	WITHOUT_CLASSIFICATION	2.3274896409212112E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999925110349421	WITHOUT_CLASSIFICATION	7.488965057880326E-6	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999985893811577	WITHOUT_CLASSIFICATION	1.4106188422915482E-6	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999905149029367	WITHOUT_CLASSIFICATION	9.485097063261515E-6	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999993353033938	WITHOUT_CLASSIFICATION	6.646966061895972E-7	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999975155592594	WITHOUT_CLASSIFICATION	2.484440740548199E-6	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999959510184275	WITHOUT_CLASSIFICATION	4.048981572450898E-6	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999994341231533	WITHOUT_CLASSIFICATION	5.658768467396987E-7	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.999995223469837	WITHOUT_CLASSIFICATION	4.776530163035755E-6	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999138309818865	WITHOUT_CLASSIFICATION	8.616901811356448E-5	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999901445990508	WITHOUT_CLASSIFICATION	9.855400949156763E-6	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999898137809329	WITHOUT_CLASSIFICATION	1.018621906706629E-5	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999959924079234	WITHOUT_CLASSIFICATION	4.00759207668782E-6	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999958572398325	WITHOUT_CLASSIFICATION	4.142760167434968E-6	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999409547965116	WITHOUT_CLASSIFICATION	5.9045203488397635E-5	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999551244285626	WITHOUT_CLASSIFICATION	4.48755714374109E-5	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999958678379591	WITHOUT_CLASSIFICATION	4.132162040894275E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.999846617198494	WITHOUT_CLASSIFICATION	1.5338280150592516E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.999846617198494	WITHOUT_CLASSIFICATION	1.5338280150592516E-4	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999973358144585	WITHOUT_CLASSIFICATION	2.6641855414421633E-6	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9999965047052307	WITHOUT_CLASSIFICATION	3.495294769368819E-6	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9999831575185556	WITHOUT_CLASSIFICATION	1.6842481444487364E-5	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999978642188883	WITHOUT_CLASSIFICATION	2.1357811118296634E-6	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.999981794836575	WITHOUT_CLASSIFICATION	1.8205163424975896E-5	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999973147941191	WITHOUT_CLASSIFICATION	2.6852058809458223E-6	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999176233010897	WITHOUT_CLASSIFICATION	8.237669891032845E-5	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999176233010897	WITHOUT_CLASSIFICATION	8.237669891032845E-5	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999982538849503	WITHOUT_CLASSIFICATION	1.7461150495905924E-6	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9600033370349647	WITHOUT_CLASSIFICATION	0.03999666296503524	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999989179165595	WITHOUT_CLASSIFICATION	1.0820834405152879E-6	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999989179165595	WITHOUT_CLASSIFICATION	1.0820834405152879E-6	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999976902474808	WITHOUT_CLASSIFICATION	2.309752519380375E-6	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999992860827565	WITHOUT_CLASSIFICATION	7.139172435040652E-7	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999992860827565	WITHOUT_CLASSIFICATION	7.139172435040652E-7	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999932654289381	WITHOUT_CLASSIFICATION	6.734571061871834E-6	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999932654289381	WITHOUT_CLASSIFICATION	6.734571061871834E-6	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999898618784598	WITHOUT_CLASSIFICATION	1.0138121540046018E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999898618784598	WITHOUT_CLASSIFICATION	1.0138121540046018E-5	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9999806506583677	WITHOUT_CLASSIFICATION	1.934934163229446E-5	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999980394155685	WITHOUT_CLASSIFICATION	1.9605844314613537E-6	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999997916641633	WITHOUT_CLASSIFICATION	2.0833583660787363E-7	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999974315603841	WITHOUT_CLASSIFICATION	2.56843961589934E-6	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999999515808736	WITHOUT_CLASSIFICATION	4.841912627466153E-8	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999998040480078	WITHOUT_CLASSIFICATION	1.959519922131778E-7	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.999996633039463	WITHOUT_CLASSIFICATION	3.3669605370019156E-6	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999936021904499	WITHOUT_CLASSIFICATION	6.397809550200359E-6	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.999996633039463	WITHOUT_CLASSIFICATION	3.3669605370019156E-6	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9999940199595383	WITHOUT_CLASSIFICATION	5.980040461650709E-6	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999623886451026	WITHOUT_CLASSIFICATION	3.7611354897361806E-5	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.999999405606549	WITHOUT_CLASSIFICATION	5.943934509383859E-7	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999981962355967	WITHOUT_CLASSIFICATION	1.8037644032725487E-6	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999997784041803	WITHOUT_CLASSIFICATION	2.2159581964330178E-7	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999993559817224	WITHOUT_CLASSIFICATION	6.44018277620024E-7	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999971043924442	WITHOUT_CLASSIFICATION	2.8956075558210043E-6	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999776411229027	WITHOUT_CLASSIFICATION	2.235887709742643E-5	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999977541573936	WITHOUT_CLASSIFICATION	2.245842606345367E-6	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999993550374333	WITHOUT_CLASSIFICATION	6.449625666334963E-7	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999993136147453	WITHOUT_CLASSIFICATION	6.863852547099115E-7	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999992365718047	WITHOUT_CLASSIFICATION	7.634281953020608E-7	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.9999616547815673	WITHOUT_CLASSIFICATION	3.8345218432722484E-5	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9999981023859482	WITHOUT_CLASSIFICATION	1.8976140517260526E-6	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999975240123826	WITHOUT_CLASSIFICATION	2.475987617312303E-6	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999998916757823	WITHOUT_CLASSIFICATION	1.0832421766924418E-7	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999816821096764	WITHOUT_CLASSIFICATION	1.831789032358754E-5	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999967519562718	WITHOUT_CLASSIFICATION	3.248043728103213E-6	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9998627574366958	WITHOUT_CLASSIFICATION	1.372425633041596E-4	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999959632359633	WITHOUT_CLASSIFICATION	4.036764036645223E-6	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999986724910414	WITHOUT_CLASSIFICATION	1.3275089586853853E-6	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999867481745235	WITHOUT_CLASSIFICATION	1.325182547651828E-5	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999765600508476	WITHOUT_CLASSIFICATION	2.343994915251559E-5	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9994992476598664	WITHOUT_CLASSIFICATION	5.007523401336553E-4	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999918771971796	WITHOUT_CLASSIFICATION	8.12280282042194E-6	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999945889001141	WITHOUT_CLASSIFICATION	5.411099885902312E-6	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999999452936701	WITHOUT_CLASSIFICATION	5.4706329939263323E-8	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9998400701551569	WITHOUT_CLASSIFICATION	1.5992984484317253E-4	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999996533448704	WITHOUT_CLASSIFICATION	3.466551296222206E-7	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999981923393217	WITHOUT_CLASSIFICATION	1.8076606782109819E-6	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999997343523123	WITHOUT_CLASSIFICATION	2.6564768768862934E-7	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999645038646	WITHOUT_CLASSIFICATION	3.5496135324210485E-8	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.999999399634526	WITHOUT_CLASSIFICATION	6.00365473994063E-7	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999896039457149	WITHOUT_CLASSIFICATION	1.0396054285040013E-5	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999999826430617	WITHOUT_CLASSIFICATION	1.735693836462296E-8	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999999216782315	WITHOUT_CLASSIFICATION	7.832176854876535E-8	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999993413446029	WITHOUT_CLASSIFICATION	6.586553970955165E-7	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999999632631733	WITHOUT_CLASSIFICATION	3.6736826736732433E-8	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999988913540664	WITHOUT_CLASSIFICATION	1.1086459335321094E-6	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999995346924959	WITHOUT_CLASSIFICATION	4.653075041994801E-7	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999997304931699	WITHOUT_CLASSIFICATION	2.6950683006066897E-7	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999364186285	WITHOUT_CLASSIFICATION	6.358137141202822E-8	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999997655081857	WITHOUT_CLASSIFICATION	2.3449181436173555E-7	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999994805282457	WITHOUT_CLASSIFICATION	5.194717543421709E-7	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999996697419604	WITHOUT_CLASSIFICATION	3.302580395950435E-7	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999993346178772	WITHOUT_CLASSIFICATION	6.653821229168866E-7	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999992378883903	WITHOUT_CLASSIFICATION	7.621116098209631E-7	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999992845262763	WITHOUT_CLASSIFICATION	7.154737237984964E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999996125943483	WITHOUT_CLASSIFICATION	3.8740565167335297E-7	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999985657198402	WITHOUT_CLASSIFICATION	1.4342801596984112E-6	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999901662479677	WITHOUT_CLASSIFICATION	9.833752032325604E-6	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999992976736816	WITHOUT_CLASSIFICATION	7.023263183788808E-7	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999994178042051	WITHOUT_CLASSIFICATION	5.821957949213248E-7	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999032890338804	WITHOUT_CLASSIFICATION	9.67109661196507E-5	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.999999734713441	WITHOUT_CLASSIFICATION	2.6528655902280957E-7	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.999999734713441	WITHOUT_CLASSIFICATION	2.6528655902280957E-7	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999998676041599	WITHOUT_CLASSIFICATION	1.323958401195472E-7	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.999999857489245	WITHOUT_CLASSIFICATION	1.425107549829875E-7	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999999196385155	WITHOUT_CLASSIFICATION	8.03614845055695E-8	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999985888678035	WITHOUT_CLASSIFICATION	1.4111321965010082E-6	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999973806367999	WITHOUT_CLASSIFICATION	2.6193632001911167E-6	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999999034428599	WITHOUT_CLASSIFICATION	9.655714005486422E-8	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.999999733300196	WITHOUT_CLASSIFICATION	2.6669980397101994E-7	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999999003521213	WITHOUT_CLASSIFICATION	9.96478786817676E-8	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9993549692538654	WITHOUT_CLASSIFICATION	6.450307461345848E-4	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.999999960820862	WITHOUT_CLASSIFICATION	3.917913806479631E-8	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999997180425203	WITHOUT_CLASSIFICATION	2.8195747964654155E-7	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999997180425203	WITHOUT_CLASSIFICATION	2.8195747964654155E-7	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9999678218036159	WITHOUT_CLASSIFICATION	3.21781963841363E-5	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999843899697263	WITHOUT_CLASSIFICATION	1.5610030273642677E-5	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999846880698476	WITHOUT_CLASSIFICATION	1.531193015240978E-5	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999971738334554	WITHOUT_CLASSIFICATION	2.8261665446315515E-6	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999946416065502	WITHOUT_CLASSIFICATION	5.358393449907901E-6	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999703482615698	WITHOUT_CLASSIFICATION	2.9651738430087738E-5	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999858822806094	WITHOUT_CLASSIFICATION	1.4117719390646487E-5	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.99999597444717	WITHOUT_CLASSIFICATION	4.02555282991893E-6	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999994430117903	WITHOUT_CLASSIFICATION	5.569882097377426E-7	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9989766747598126	WITHOUT_CLASSIFICATION	0.001023325240187432	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999996340560948	WITHOUT_CLASSIFICATION	3.6594390517115E-7	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999805179072923	WITHOUT_CLASSIFICATION	1.9482092707738568E-5	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999350239847801	WITHOUT_CLASSIFICATION	6.497601521989928E-5	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999350239847801	WITHOUT_CLASSIFICATION	6.497601521989928E-5	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999996685282329	WITHOUT_CLASSIFICATION	3.314717670928273E-7	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999644705050514	WITHOUT_CLASSIFICATION	3.5529494948583656E-5	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999990715931656	WITHOUT_CLASSIFICATION	9.284068345029026E-7	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999704850030415	WITHOUT_CLASSIFICATION	2.9514996958374615E-5	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999865183498264	WITHOUT_CLASSIFICATION	1.3481650173440128E-5	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.99999495885654	WITHOUT_CLASSIFICATION	5.041143460058135E-6	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999957018919866	WITHOUT_CLASSIFICATION	4.298108013395274E-6	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.999992372369628	WITHOUT_CLASSIFICATION	7.627630372085749E-6	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9989979187446562	WITHOUT_CLASSIFICATION	0.0010020812553438146	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999725443454385	WITHOUT_CLASSIFICATION	2.7455654561455043E-5	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999846880698476	WITHOUT_CLASSIFICATION	1.531193015240978E-5	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999847655664152	WITHOUT_CLASSIFICATION	1.5234433584713198E-5	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999998852454917	WITHOUT_CLASSIFICATION	1.1475450828601188E-7	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999994577623813	WITHOUT_CLASSIFICATION	5.422376186363364E-7	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999992398750817	WITHOUT_CLASSIFICATION	7.601249182477577E-7	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999584385590444	WITHOUT_CLASSIFICATION	4.156144095566721E-5	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999995038153304	WITHOUT_CLASSIFICATION	4.961846695107484E-7	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999311287570243	WITHOUT_CLASSIFICATION	6.887124297574376E-5	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999873627278796	WITHOUT_CLASSIFICATION	1.2637272120415363E-5	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999992395353582	WITHOUT_CLASSIFICATION	7.604646418510452E-7	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999357226962454	WITHOUT_CLASSIFICATION	6.427730375458519E-5	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9998463978203048	WITHOUT_CLASSIFICATION	1.536021796952636E-4	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999999912264351	WITHOUT_CLASSIFICATION	8.773564911563864E-9	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999975712854174	WITHOUT_CLASSIFICATION	2.428714582593126E-6	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.999851729071383	WITHOUT_CLASSIFICATION	1.482709286169769E-4	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999939091308084	WITHOUT_CLASSIFICATION	6.090869191456215E-6	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999917172601079	WITHOUT_CLASSIFICATION	8.282739892098196E-6	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999839091337418	WITHOUT_CLASSIFICATION	1.6090866258229486E-5	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999895266189041	WITHOUT_CLASSIFICATION	1.0473381095903622E-5	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999948410347096	WITHOUT_CLASSIFICATION	5.158965290319801E-6	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.9999994218939294	WITHOUT_CLASSIFICATION	5.781060705513887E-7	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.999999986096817	WITHOUT_CLASSIFICATION	1.3903183005275638E-8	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999950113363762	WITHOUT_CLASSIFICATION	4.9886636236658205E-6	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999992357919921	WITHOUT_CLASSIFICATION	7.642080078335275E-7	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9997453843832363	WITHOUT_CLASSIFICATION	2.5461561676366746E-4	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999854646050873	WITHOUT_CLASSIFICATION	1.4535394912572411E-5	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999998976140113	WITHOUT_CLASSIFICATION	1.0238598861564653E-7	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9999873921823633	WITHOUT_CLASSIFICATION	1.2607817636818302E-5	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999357980055466	WITHOUT_CLASSIFICATION	6.420199445336536E-5	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9999974263876451	WITHOUT_CLASSIFICATION	2.573612354776947E-6	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.999999485082671	WITHOUT_CLASSIFICATION	5.149173289626024E-7	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999787787054271	WITHOUT_CLASSIFICATION	2.1221294572932394E-5	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999787787054271	WITHOUT_CLASSIFICATION	2.1221294572932394E-5	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.999873157447913	WITHOUT_CLASSIFICATION	1.268425520870199E-4	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.999863338533617	WITHOUT_CLASSIFICATION	1.3666146638302345E-4	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.9999983867751018	WITHOUT_CLASSIFICATION	1.6132248982824912E-6	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9996554828310082	WITHOUT_CLASSIFICATION	3.445171689917418E-4	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999995408888319	WITHOUT_CLASSIFICATION	4.591111681148048E-7	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999960507368618	WITHOUT_CLASSIFICATION	3.949263138204909E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.999995081638769	WITHOUT_CLASSIFICATION	4.918361230965898E-6	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999802313983517	WITHOUT_CLASSIFICATION	1.9768601648354168E-5	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999937385208837	WITHOUT_CLASSIFICATION	6.261479116418036E-6	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999985713616504	WITHOUT_CLASSIFICATION	1.428638349662285E-6	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999975380247346	WITHOUT_CLASSIFICATION	2.461975265341019E-6	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9999983909366721	WITHOUT_CLASSIFICATION	1.6090633279269959E-6	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999998245213008	WITHOUT_CLASSIFICATION	1.7547869929948745E-7	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999992271978017	WITHOUT_CLASSIFICATION	7.728021983924293E-7	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999994428653782	WITHOUT_CLASSIFICATION	5.571346218144485E-7	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999952382655416	WITHOUT_CLASSIFICATION	4.761734458487707E-6	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999995117208	WITHOUT_CLASSIFICATION	4.882792128200081E-10	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999991973679185	WITHOUT_CLASSIFICATION	8.026320815552043E-7	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.9999976444271677	WITHOUT_CLASSIFICATION	2.3555728324072573E-6	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.999995965548668	WITHOUT_CLASSIFICATION	4.03445133201004E-6	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999900490102943	WITHOUT_CLASSIFICATION	9.950989705670272E-6	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999900490102943	WITHOUT_CLASSIFICATION	9.950989705670272E-6	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9999995926528437	WITHOUT_CLASSIFICATION	4.073471563651792E-7	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999944461952602	WITHOUT_CLASSIFICATION	5.553804739732621E-6	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999849490363549	WITHOUT_CLASSIFICATION	1.5050963645026952E-5	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999953633237266	WITHOUT_CLASSIFICATION	4.6366762733627205E-6	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999973117297453	WITHOUT_CLASSIFICATION	2.6882702547144224E-6	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9997462082300381	WITHOUT_CLASSIFICATION	2.537917699618918E-4	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999995434254106	WITHOUT_CLASSIFICATION	4.5657458941253987E-7	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999958916128956	WITHOUT_CLASSIFICATION	4.108387104455445E-6	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999995204350192	WITHOUT_CLASSIFICATION	4.795649807491591E-7	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999622315345801	WITHOUT_CLASSIFICATION	3.7768465419872254E-5	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9999990082098489	WITHOUT_CLASSIFICATION	9.917901510361822E-7	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.999998384494278	WITHOUT_CLASSIFICATION	1.615505722052345E-6	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999818764119934	WITHOUT_CLASSIFICATION	1.812358800652441E-5	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999997175588212	WITHOUT_CLASSIFICATION	2.8244117882847924E-7	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999975002075537	WITHOUT_CLASSIFICATION	2.499792446222031E-6	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999849951124569	WITHOUT_CLASSIFICATION	1.500488754302775E-5	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.999998448814267	WITHOUT_CLASSIFICATION	1.5511857329601688E-6	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9999989398690518	WITHOUT_CLASSIFICATION	1.0601309482324344E-6	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999087396853	WITHOUT_CLASSIFICATION	9.126031475091193E-8	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.999999802489915	WITHOUT_CLASSIFICATION	1.9751008492332548E-7	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999756234565765	WITHOUT_CLASSIFICATION	2.437654342345076E-5	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999984436592941	WITHOUT_CLASSIFICATION	1.5563407057661983E-6	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.999999448940645	WITHOUT_CLASSIFICATION	5.510593550757568E-7	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999083229981441	WITHOUT_CLASSIFICATION	9.167700185586852E-5	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999995464889962	WITHOUT_CLASSIFICATION	4.535110037422128E-7	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999808085527871	WITHOUT_CLASSIFICATION	1.919144721287241E-5	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.9999979690518077	WITHOUT_CLASSIFICATION	2.0309481922803766E-6	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999972519413601	WITHOUT_CLASSIFICATION	2.7480586398394465E-6	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999899389051882	WITHOUT_CLASSIFICATION	1.0061094811893812E-5	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999904886689492	WITHOUT_CLASSIFICATION	9.511331050792266E-6	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999975325406673	WITHOUT_CLASSIFICATION	2.467459332741166E-6	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.999998850296329	WITHOUT_CLASSIFICATION	1.1497036710362266E-6	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999981706019547	WITHOUT_CLASSIFICATION	1.8293980451966891E-6	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.9999778526651162	WITHOUT_CLASSIFICATION	2.2147334883739473E-5	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999988858157006	WITHOUT_CLASSIFICATION	1.1141842993079098E-6	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999999882382118	WITHOUT_CLASSIFICATION	1.1761788283287173E-8	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999996390836121	WITHOUT_CLASSIFICATION	3.6091638791861925E-7	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9999884632465139	WITHOUT_CLASSIFICATION	1.1536753486186828E-5	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999982065233268	WITHOUT_CLASSIFICATION	1.7934766732421702E-6	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999825281258735	WITHOUT_CLASSIFICATION	1.7471874126430137E-5	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999999071459433	WITHOUT_CLASSIFICATION	9.285405669914168E-8	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999976180305185	WITHOUT_CLASSIFICATION	2.3819694815177836E-6	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999983872127957	WITHOUT_CLASSIFICATION	1.6127872043119372E-6	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999939238192206	WITHOUT_CLASSIFICATION	6.076180779402536E-6	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999987632110061	WITHOUT_CLASSIFICATION	1.236788993885554E-6	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999939238192206	WITHOUT_CLASSIFICATION	6.076180779402536E-6	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9973584784603434	WITHOUT_CLASSIFICATION	0.002641521539656589	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9790781540747373	WITHOUT_CLASSIFICATION	0.020921845925262656	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999990453596947	WITHOUT_CLASSIFICATION	9.54640305279455E-7	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.6621389148935601	WITHOUT_CLASSIFICATION	0.33786108510643986	IMPLEMENTATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999958083381005	WITHOUT_CLASSIFICATION	4.19166189956562E-6	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9998726261664119	WITHOUT_CLASSIFICATION	1.2737383358803837E-4	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9999994476711077	WITHOUT_CLASSIFICATION	5.523288923518142E-7	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999992672310498	WITHOUT_CLASSIFICATION	7.327689500742615E-7	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999999951977779	WITHOUT_CLASSIFICATION	4.802222010646803E-9	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9996725682245444	WITHOUT_CLASSIFICATION	3.274317754555369E-4	IMPLEMENTATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.99468437842013	WITHOUT_CLASSIFICATION	0.005315621579869866	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999921576938691	WITHOUT_CLASSIFICATION	7.842306130929487E-6	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999660924396502	WITHOUT_CLASSIFICATION	3.390756034983557E-5	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999999149297484	WITHOUT_CLASSIFICATION	8.507025169707835E-8	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9575676141287667	WITHOUT_CLASSIFICATION	0.04243238587123338	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.8745614095448001	WITHOUT_CLASSIFICATION	0.12543859045519987	IMPLEMENTATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9999999520421721	WITHOUT_CLASSIFICATION	4.795782801834416E-8	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999778970594604	WITHOUT_CLASSIFICATION	2.2102940539657644E-5	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999980578093857	WITHOUT_CLASSIFICATION	1.9421906143432824E-6	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999806778753337	WITHOUT_CLASSIFICATION	1.9322124666253743E-5	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999958099552568	WITHOUT_CLASSIFICATION	4.190044743182431E-6	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999976147422439	WITHOUT_CLASSIFICATION	2.3852577560905854E-6	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.999993460885047	WITHOUT_CLASSIFICATION	6.539114952964762E-6	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999950279859265	WITHOUT_CLASSIFICATION	4.9720140735189785E-6	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999957883945748	WITHOUT_CLASSIFICATION	4.211605425126232E-6	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999959683896527	WITHOUT_CLASSIFICATION	4.031610347353022E-6	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.999999210568795	WITHOUT_CLASSIFICATION	7.894312048928614E-7	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999965458791089	WITHOUT_CLASSIFICATION	3.4541208912211207E-6	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999901091460887	WITHOUT_CLASSIFICATION	9.890853911407147E-6	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999996934420698	WITHOUT_CLASSIFICATION	3.065579301432815E-7	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999829310924869	WITHOUT_CLASSIFICATION	1.706890751316584E-5	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999743061295417	WITHOUT_CLASSIFICATION	2.5693870458220633E-5	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999639055089825	WITHOUT_CLASSIFICATION	3.6094491017533955E-5	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9999995281737148	WITHOUT_CLASSIFICATION	4.71826285148497E-7	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999981675474596	WITHOUT_CLASSIFICATION	1.832452540336737E-6	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9999998339406619	WITHOUT_CLASSIFICATION	1.6605933805192063E-7	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999974078790324	WITHOUT_CLASSIFICATION	2.592120967690421E-6	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999974772628308	WITHOUT_CLASSIFICATION	2.5227371692100875E-6	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999967251572801	WITHOUT_CLASSIFICATION	3.2748427199104597E-6	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999625309467332	WITHOUT_CLASSIFICATION	3.74690532668431E-5	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.999996067633692	WITHOUT_CLASSIFICATION	3.932366308002365E-6	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999989913180592	WITHOUT_CLASSIFICATION	1.0086819406676147E-6	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999999355524154	WITHOUT_CLASSIFICATION	6.444758464409367E-8	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999919148239264	WITHOUT_CLASSIFICATION	8.08517607376354E-6	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999919148239264	WITHOUT_CLASSIFICATION	8.08517607376354E-6	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999985544217405	WITHOUT_CLASSIFICATION	1.4455782595054754E-6	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999651010226498	WITHOUT_CLASSIFICATION	3.489897735026291E-5	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999981527947589	WITHOUT_CLASSIFICATION	1.8472052410650338E-6	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.999998942851174	WITHOUT_CLASSIFICATION	1.057148826030759E-6	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.999999946643424	WITHOUT_CLASSIFICATION	5.335657595120459E-8	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999978433060293	WITHOUT_CLASSIFICATION	2.156693970742227E-6	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999991907442213	WITHOUT_CLASSIFICATION	8.092557787095164E-7	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999830521353626	WITHOUT_CLASSIFICATION	1.694786463737109E-5	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999950948195108	WITHOUT_CLASSIFICATION	4.905180489222555E-6	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.999999865526113	WITHOUT_CLASSIFICATION	1.344738870010133E-7	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999994891859055	WITHOUT_CLASSIFICATION	5.108140944571883E-7	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999999058107504	WITHOUT_CLASSIFICATION	9.418924960191093E-8	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999999973629777	WITHOUT_CLASSIFICATION	2.6370223553607966E-9	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999974885851239	WITHOUT_CLASSIFICATION	2.511414876092993E-6	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.999999443333762	WITHOUT_CLASSIFICATION	5.566662379821452E-7	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9997823163004338	WITHOUT_CLASSIFICATION	2.1768369956609793E-4	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999695706753569	WITHOUT_CLASSIFICATION	3.042932464308403E-5	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999977040967984	WITHOUT_CLASSIFICATION	2.2959032014947045E-6	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999997030659169	WITHOUT_CLASSIFICATION	2.969340830307074E-7	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999992212056942	WITHOUT_CLASSIFICATION	7.787943057561287E-7	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.9999966992240877	WITHOUT_CLASSIFICATION	3.3007759122324247E-6	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9999987660886865	WITHOUT_CLASSIFICATION	1.2339113133865016E-6	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999640373937706	WITHOUT_CLASSIFICATION	3.596260622945628E-5	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999998954504365	WITHOUT_CLASSIFICATION	1.0454956344670218E-7	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999997906258645	WITHOUT_CLASSIFICATION	2.0937413545668869E-7	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999994765678428	WITHOUT_CLASSIFICATION	5.234321572000948E-7	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999433051394	WITHOUT_CLASSIFICATION	5.669486055919035E-8	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999967707132518	WITHOUT_CLASSIFICATION	3.229286748270625E-6	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999978518903323	WITHOUT_CLASSIFICATION	2.1481096676483947E-6	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999994152057204	WITHOUT_CLASSIFICATION	5.847942795303774E-7	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999936638570535	WITHOUT_CLASSIFICATION	6.3361429465144335E-6	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999925451521665	WITHOUT_CLASSIFICATION	7.4548478335625505E-6	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999994308701965	WITHOUT_CLASSIFICATION	5.691298034773437E-7	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999961208120716	WITHOUT_CLASSIFICATION	3.879187928388089E-6	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999966210167458	WITHOUT_CLASSIFICATION	3.378983254228967E-6	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9993710763945671	WITHOUT_CLASSIFICATION	6.289236054327849E-4	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999834034183168	WITHOUT_CLASSIFICATION	1.6596581683110674E-5	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999838587986795	WITHOUT_CLASSIFICATION	1.614120132060277E-5	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999894133801952	WITHOUT_CLASSIFICATION	1.0586619804735049E-5	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999850299419727	WITHOUT_CLASSIFICATION	1.4970058027243672E-5	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999978595324088	WITHOUT_CLASSIFICATION	2.1404675911435085E-6	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9999732078453635	WITHOUT_CLASSIFICATION	2.6792154636486813E-5	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.999998401299471	WITHOUT_CLASSIFICATION	1.5987005289963825E-6	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999986322014481	WITHOUT_CLASSIFICATION	1.3677985518333851E-6	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999312287960364	WITHOUT_CLASSIFICATION	6.877120396362034E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999982599072913	WITHOUT_CLASSIFICATION	1.7400927087169049E-6	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999984793911877	WITHOUT_CLASSIFICATION	1.520608812283472E-6	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999999461713458	WITHOUT_CLASSIFICATION	5.382865421284853E-8	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.9999725587090487	WITHOUT_CLASSIFICATION	2.7441290951366593E-5	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999969358919132	WITHOUT_CLASSIFICATION	3.064108086873288E-6	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999995307467723	WITHOUT_CLASSIFICATION	4.6925322772499403E-7	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999960422554243	WITHOUT_CLASSIFICATION	3.957744575745919E-6	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999968983888441	WITHOUT_CLASSIFICATION	3.101611155868835E-6	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.999980399144625	WITHOUT_CLASSIFICATION	1.9600855375000802E-5	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999791159187011	WITHOUT_CLASSIFICATION	2.088408129881702E-5	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999957663921542	WITHOUT_CLASSIFICATION	4.233607845875685E-6	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.999998607872828	WITHOUT_CLASSIFICATION	1.3921271719980693E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999935660973438	WITHOUT_CLASSIFICATION	6.433902656255408E-6	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999930498741133	WITHOUT_CLASSIFICATION	6.9501258865869284E-6	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999983490058024	WITHOUT_CLASSIFICATION	1.6509941975967143E-6	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999939947752239	WITHOUT_CLASSIFICATION	6.0052247761694724E-6	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999983565675055	WITHOUT_CLASSIFICATION	1.6434324944785094E-6	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999983581296112	WITHOUT_CLASSIFICATION	1.6418703887342406E-6	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999975301513397	WITHOUT_CLASSIFICATION	2.469848660192082E-6	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.999984043055899	WITHOUT_CLASSIFICATION	1.595694410098917E-5	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999830099617613	WITHOUT_CLASSIFICATION	1.6990038238760477E-5	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999784494168278	WITHOUT_CLASSIFICATION	2.1550583172248663E-5	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999960110987118	WITHOUT_CLASSIFICATION	3.988901288172972E-6	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.9999810523766874	WITHOUT_CLASSIFICATION	1.8947623312516114E-5	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999934355449264	WITHOUT_CLASSIFICATION	6.564455073620904E-6	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999876303405449	WITHOUT_CLASSIFICATION	1.23696594550448E-5	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999962010113034	WITHOUT_CLASSIFICATION	3.798988696738511E-6	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999634162675154	WITHOUT_CLASSIFICATION	3.6583732484700666E-5	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999727983703669	WITHOUT_CLASSIFICATION	2.720162963305498E-5	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9999821811458636	WITHOUT_CLASSIFICATION	1.7818854136431143E-5	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9999813109915755	WITHOUT_CLASSIFICATION	1.868900842450106E-5	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9999779134049204	WITHOUT_CLASSIFICATION	2.2086595079618064E-5	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9999787605626012	WITHOUT_CLASSIFICATION	2.1239437398835102E-5	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9999763813886096	WITHOUT_CLASSIFICATION	2.3618611390487716E-5	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9999757590659077	WITHOUT_CLASSIFICATION	2.4240934092279537E-5	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9999748407053585	WITHOUT_CLASSIFICATION	2.5159294641470223E-5	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9999754182046	WITHOUT_CLASSIFICATION	2.4581795399988987E-5	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9999757714940863	WITHOUT_CLASSIFICATION	2.4228505913627756E-5	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9999758995154047	WITHOUT_CLASSIFICATION	2.410048459529996E-5	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9999812728898063	WITHOUT_CLASSIFICATION	1.872711019370135E-5	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9999834091795338	WITHOUT_CLASSIFICATION	1.6590820466299666E-5	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9999835015301192	WITHOUT_CLASSIFICATION	1.6498469880927055E-5	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9999818170866326	WITHOUT_CLASSIFICATION	1.8182913367370607E-5	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9999813538890745	WITHOUT_CLASSIFICATION	1.864611092548621E-5	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9999816894880839	WITHOUT_CLASSIFICATION	1.8310511916112455E-5	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9999820930030817	WITHOUT_CLASSIFICATION	1.790699691823348E-5	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.999983319092064	WITHOUT_CLASSIFICATION	1.6680907936131148E-5	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9999822331351463	WITHOUT_CLASSIFICATION	1.7766864853665482E-5	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9999452029773084	WITHOUT_CLASSIFICATION	5.479702269160004E-5	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9999883736732296	WITHOUT_CLASSIFICATION	1.162632677051565E-5	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9999487947731576	WITHOUT_CLASSIFICATION	5.120522684245862E-5	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.999996240428037	WITHOUT_CLASSIFICATION	3.7595719629549802E-6	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.999994603801264	WITHOUT_CLASSIFICATION	5.396198736040947E-6	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999992842518124	WITHOUT_CLASSIFICATION	7.157481875945271E-7	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999976287589637	WITHOUT_CLASSIFICATION	2.3712410363551982E-6	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9998355260771459	WITHOUT_CLASSIFICATION	1.644739228541506E-4	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999960544455053	WITHOUT_CLASSIFICATION	3.945554494760745E-6	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999474888857106	WITHOUT_CLASSIFICATION	5.251111428934438E-5	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.7170934625198894	WITHOUT_CLASSIFICATION	0.2829065374801106	IMPLEMENTATION
// integer division	WITHOUT_CLASSIFICATION	0.999998375495257	WITHOUT_CLASSIFICATION	1.6245047430220925E-6	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.99999992939258	WITHOUT_CLASSIFICATION	7.060742006245937E-8	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999990605252871	WITHOUT_CLASSIFICATION	9.39474712828614E-7	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999990605252871	WITHOUT_CLASSIFICATION	9.39474712828614E-7	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999991923060572	WITHOUT_CLASSIFICATION	8.076939428424109E-7	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999543128601105	WITHOUT_CLASSIFICATION	4.568713988948289E-5	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999948937738	WITHOUT_CLASSIFICATION	5.106226134117428E-9	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999952221608215	WITHOUT_CLASSIFICATION	4.777839178533538E-6	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.999998335942196	WITHOUT_CLASSIFICATION	1.6640578039657669E-6	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999938618400898	WITHOUT_CLASSIFICATION	6.138159910250218E-6	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9999821194319596	WITHOUT_CLASSIFICATION	1.788056804037438E-5	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999924430912809	WITHOUT_CLASSIFICATION	7.55690871917176E-6	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9999572008592554	WITHOUT_CLASSIFICATION	4.279914074460681E-5	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.999995592795465	WITHOUT_CLASSIFICATION	4.407204535046695E-6	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999957393953472	WITHOUT_CLASSIFICATION	4.2606046527742E-6	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999940087517567	WITHOUT_CLASSIFICATION	5.99124824327094E-6	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.999988946643349	WITHOUT_CLASSIFICATION	1.10533566509223E-5	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9998577104584737	WITHOUT_CLASSIFICATION	1.422895415263725E-4	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999778126116885	WITHOUT_CLASSIFICATION	2.2187388311472027E-5	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.9999968591773825	WITHOUT_CLASSIFICATION	3.140822617512552E-6	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999961302035093	WITHOUT_CLASSIFICATION	3.869796490603814E-6	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999956805739852	WITHOUT_CLASSIFICATION	4.319426014804534E-6	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999940227995635	WITHOUT_CLASSIFICATION	5.977200436517502E-6	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999710115635674	WITHOUT_CLASSIFICATION	2.898843643270258E-5	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999995625021865	WITHOUT_CLASSIFICATION	4.37497813593637E-7	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999998684765126	WITHOUT_CLASSIFICATION	1.315234874454727E-7	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999931995843149	WITHOUT_CLASSIFICATION	6.800415685067777E-6	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999992844181202	WITHOUT_CLASSIFICATION	7.155818797914326E-7	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999992614072224	WITHOUT_CLASSIFICATION	7.385927775789899E-7	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999880738986341	WITHOUT_CLASSIFICATION	1.1926101365942896E-5	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.999998341754661	WITHOUT_CLASSIFICATION	1.6582453389423324E-6	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999712419807131	WITHOUT_CLASSIFICATION	2.875801928691111E-5	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999971799871149	WITHOUT_CLASSIFICATION	2.820012885004899E-6	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.999994005716456	WITHOUT_CLASSIFICATION	5.994283543976441E-6	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999898564765162	WITHOUT_CLASSIFICATION	1.0143523483868117E-5	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999986472888243	WITHOUT_CLASSIFICATION	1.3527111758179303E-6	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.999985129332989	WITHOUT_CLASSIFICATION	1.4870667010920628E-5	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999910943512254	WITHOUT_CLASSIFICATION	8.905648774638174E-6	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999973939493001	WITHOUT_CLASSIFICATION	2.6060506998956513E-6	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999966931752947	WITHOUT_CLASSIFICATION	3.306824705194949E-6	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999973106015287	WITHOUT_CLASSIFICATION	2.6893984712424302E-6	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999996011407872	WITHOUT_CLASSIFICATION	3.9885921283661795E-7	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999818097013387	WITHOUT_CLASSIFICATION	1.819029866135868E-5	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999931884615822	WITHOUT_CLASSIFICATION	6.811538417684817E-6	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9999986569297833	WITHOUT_CLASSIFICATION	1.3430702167512543E-6	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999998812921719	WITHOUT_CLASSIFICATION	1.1870782808626054E-7	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999961036600507	WITHOUT_CLASSIFICATION	3.896339949419437E-6	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999914705008293	WITHOUT_CLASSIFICATION	8.52949917072738E-6	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999914705008293	WITHOUT_CLASSIFICATION	8.52949917072738E-6	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.999998674357591	WITHOUT_CLASSIFICATION	1.3256424089121754E-6	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999796841327403	WITHOUT_CLASSIFICATION	2.0315867259736554E-5	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999991338915071	WITHOUT_CLASSIFICATION	8.661084928232375E-7	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9999775615151589	WITHOUT_CLASSIFICATION	2.243848484110616E-5	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999981961187192	WITHOUT_CLASSIFICATION	1.803881280799814E-6	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9999985695702216	WITHOUT_CLASSIFICATION	1.4304297783914685E-6	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999983815428589	WITHOUT_CLASSIFICATION	1.6184571410812899E-6	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999992488448304	WITHOUT_CLASSIFICATION	7.511551696556541E-7	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999785280014334	WITHOUT_CLASSIFICATION	2.1471998566687073E-5	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999934159229147	WITHOUT_CLASSIFICATION	6.584077085357813E-6	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999973100917341	WITHOUT_CLASSIFICATION	2.689908265975989E-6	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999990878839248	WITHOUT_CLASSIFICATION	9.121160751358646E-7	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999986292374613	WITHOUT_CLASSIFICATION	1.370762538777728E-6	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999992066826557	WITHOUT_CLASSIFICATION	7.933173441839398E-7	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.7879762636516764	WITHOUT_CLASSIFICATION	0.21202373634832355	IMPLEMENTATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9999718683678673	WITHOUT_CLASSIFICATION	2.813163213268391E-5	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999965503534729	WITHOUT_CLASSIFICATION	3.449646527211014E-6	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999966669515485	WITHOUT_CLASSIFICATION	3.333048451478094E-6	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.999999998278549	WITHOUT_CLASSIFICATION	1.7214509637247221E-9	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999938295363756	WITHOUT_CLASSIFICATION	6.1704636244320095E-6	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.999998905720037	WITHOUT_CLASSIFICATION	1.094279962996975E-6	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.999998905720037	WITHOUT_CLASSIFICATION	1.094279962996975E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999985191210503	WITHOUT_CLASSIFICATION	1.48087894965225E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999985191210503	WITHOUT_CLASSIFICATION	1.48087894965225E-6	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999973191986996	WITHOUT_CLASSIFICATION	2.6808013003564E-6	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999940828967196	WITHOUT_CLASSIFICATION	5.917103280390069E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999510562027372	WITHOUT_CLASSIFICATION	4.89437972628005E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999989689335841	WITHOUT_CLASSIFICATION	1.0310664159345948E-6	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999997916641633	WITHOUT_CLASSIFICATION	2.0833583660787363E-7	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999980912097786	WITHOUT_CLASSIFICATION	1.908790221442419E-6	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9999100659529829	WITHOUT_CLASSIFICATION	8.993404701715888E-5	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9999988230473884	WITHOUT_CLASSIFICATION	1.1769526115803246E-6	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999293312576434	WITHOUT_CLASSIFICATION	7.066874235666406E-5	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999973687243474	WITHOUT_CLASSIFICATION	2.631275652519735E-6	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999969070764725	WITHOUT_CLASSIFICATION	3.0929235274885487E-6	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999944435589421	WITHOUT_CLASSIFICATION	5.556441057979911E-6	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999998697854003	WITHOUT_CLASSIFICATION	1.3021459971309807E-7	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999994348795447	WITHOUT_CLASSIFICATION	5.651204552872888E-7	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999997974608308	WITHOUT_CLASSIFICATION	2.0253916923302418E-7	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.9999988668569789	WITHOUT_CLASSIFICATION	1.1331430211115685E-6	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9997972883024465	WITHOUT_CLASSIFICATION	2.0271169755344643E-4	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999984514019639	WITHOUT_CLASSIFICATION	1.5485980361011435E-6	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9999967273415641	WITHOUT_CLASSIFICATION	3.272658435964704E-6	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999898799506338	WITHOUT_CLASSIFICATION	1.0120049366116656E-5	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999967525690736	WITHOUT_CLASSIFICATION	3.2474309264606273E-6	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999830665249708	WITHOUT_CLASSIFICATION	1.6933475029261866E-5	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999969498326913	WITHOUT_CLASSIFICATION	3.050167308648378E-6	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.999999210568795	WITHOUT_CLASSIFICATION	7.894312048928614E-7	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999978433060293	WITHOUT_CLASSIFICATION	2.156693970742227E-6	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999874323316944	WITHOUT_CLASSIFICATION	1.2567668305627045E-5	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999997779905947	WITHOUT_CLASSIFICATION	2.220094052603278E-7	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.999992755773196	WITHOUT_CLASSIFICATION	7.24422680395499E-6	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9998712323996746	WITHOUT_CLASSIFICATION	1.287676003253842E-4	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999984791239293	WITHOUT_CLASSIFICATION	1.5208760708075584E-6	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999984791239293	WITHOUT_CLASSIFICATION	1.5208760708075584E-6	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999985125150027	WITHOUT_CLASSIFICATION	1.487484997287992E-6	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999886776395372	WITHOUT_CLASSIFICATION	1.132236046282022E-5	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999309560679079	WITHOUT_CLASSIFICATION	6.904393209211028E-5	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.999987293590104	WITHOUT_CLASSIFICATION	1.2706409896054161E-5	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999948407513507	WITHOUT_CLASSIFICATION	5.1592486492751835E-6	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9999889562348152	WITHOUT_CLASSIFICATION	1.1043765184788381E-5	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999422352991809	WITHOUT_CLASSIFICATION	5.776470081912106E-5	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9994719168968996	WITHOUT_CLASSIFICATION	5.280831031003904E-4	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999841286902964	WITHOUT_CLASSIFICATION	1.5871309703497153E-5	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999965853557743	WITHOUT_CLASSIFICATION	3.414644225650094E-6	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9999993737593492	WITHOUT_CLASSIFICATION	6.262406508511026E-7	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999949544113396	WITHOUT_CLASSIFICATION	5.0455886604486085E-6	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999567426096335	WITHOUT_CLASSIFICATION	4.3257390366531685E-5	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.999999175618071	WITHOUT_CLASSIFICATION	8.243819290949192E-7	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999959653081454	WITHOUT_CLASSIFICATION	4.034691854546877E-6	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999978938891225	WITHOUT_CLASSIFICATION	2.1061108773519147E-6	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999246291149541	WITHOUT_CLASSIFICATION	7.53708850459653E-5	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999998896194824	WITHOUT_CLASSIFICATION	1.103805176409698E-7	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999975096046345	WITHOUT_CLASSIFICATION	2.4903953655036296E-6	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999967976615488	WITHOUT_CLASSIFICATION	3.202338451237656E-6	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999982455196221	WITHOUT_CLASSIFICATION	1.7544803779022038E-6	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999996454721098	WITHOUT_CLASSIFICATION	3.545278901827373E-7	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999978202365187	WITHOUT_CLASSIFICATION	2.1797634811448823E-6	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9999868253480758	WITHOUT_CLASSIFICATION	1.3174651924142927E-5	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999974758770555	WITHOUT_CLASSIFICATION	2.52412294450896E-6	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.999987320892582	WITHOUT_CLASSIFICATION	1.2679107417912945E-5	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999961036375343	WITHOUT_CLASSIFICATION	3.896362465648727E-6	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999945527261193	WITHOUT_CLASSIFICATION	5.4472738807602845E-6	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999965233644089	WITHOUT_CLASSIFICATION	3.476635591088532E-6	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999973674728012	WITHOUT_CLASSIFICATION	2.6325271986982956E-6	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999928394821219	WITHOUT_CLASSIFICATION	7.160517878111626E-6	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.999996124559536	WITHOUT_CLASSIFICATION	3.8754404639999505E-6	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999995047016718	WITHOUT_CLASSIFICATION	4.952983283198137E-7	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9999971189504383	WITHOUT_CLASSIFICATION	2.8810495616083625E-6	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.999997962563651	WITHOUT_CLASSIFICATION	2.0374363488906504E-6	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999967193111791	WITHOUT_CLASSIFICATION	3.2806888208209874E-6	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999926826532022	WITHOUT_CLASSIFICATION	7.317346797793859E-6	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999392780303992	WITHOUT_CLASSIFICATION	6.072196960095665E-5	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999961141741699	WITHOUT_CLASSIFICATION	3.885825830161948E-6	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999693977622901	WITHOUT_CLASSIFICATION	3.0602237709895526E-5	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999997201367493	WITHOUT_CLASSIFICATION	2.7986325073302194E-7	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999858337377396	WITHOUT_CLASSIFICATION	1.4166262260446795E-5	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9999991120134645	WITHOUT_CLASSIFICATION	8.879865356048699E-7	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9999979979671857	WITHOUT_CLASSIFICATION	2.0020328141939785E-6	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999326165059637	WITHOUT_CLASSIFICATION	6.738349403630865E-5	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999997327605163	WITHOUT_CLASSIFICATION	2.6723948364526004E-7	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999668871343859	WITHOUT_CLASSIFICATION	3.311286561408647E-5	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999391389114	WITHOUT_CLASSIFICATION	6.08610886052283E-8	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999896745177139	WITHOUT_CLASSIFICATION	1.0325482286136261E-5	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9999915251181716	WITHOUT_CLASSIFICATION	8.474881828347357E-6	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999774672376377	WITHOUT_CLASSIFICATION	2.253276236235278E-5	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999827710266819	WITHOUT_CLASSIFICATION	1.7228973318090884E-5	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999847959333978	WITHOUT_CLASSIFICATION	1.5204066602074935E-5	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999894324492249	WITHOUT_CLASSIFICATION	1.0567550775157313E-5	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999817394450674	WITHOUT_CLASSIFICATION	1.8260554932671305E-5	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999807566255253	WITHOUT_CLASSIFICATION	1.9243374474606755E-5	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999830569040031	WITHOUT_CLASSIFICATION	1.6943095996773285E-5	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999999596214753	WITHOUT_CLASSIFICATION	4.037852482360539E-8	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999961714348845	WITHOUT_CLASSIFICATION	3.828565115495574E-6	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999989177623164	WITHOUT_CLASSIFICATION	1.0822376835507391E-6	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.999971454831948	WITHOUT_CLASSIFICATION	2.854516805200081E-5	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999774672376377	WITHOUT_CLASSIFICATION	2.253276236235278E-5	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999847959333978	WITHOUT_CLASSIFICATION	1.5204066602074935E-5	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999827710266819	WITHOUT_CLASSIFICATION	1.7228973318090884E-5	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999794529992156	WITHOUT_CLASSIFICATION	2.054700078439172E-5	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999877905911945	WITHOUT_CLASSIFICATION	1.220940880560125E-5	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999952103108456	WITHOUT_CLASSIFICATION	4.789689154394099E-6	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9999988339411789	WITHOUT_CLASSIFICATION	1.1660588210159087E-6	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9995072273378701	WITHOUT_CLASSIFICATION	4.927726621298176E-4	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999988959487925	WITHOUT_CLASSIFICATION	1.1040512074058184E-6	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999987822881049	WITHOUT_CLASSIFICATION	1.217711895095815E-6	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999992398058614	WITHOUT_CLASSIFICATION	7.601941387144688E-7	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.999993343688301	WITHOUT_CLASSIFICATION	6.6563116989491055E-6	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999981340814171	WITHOUT_CLASSIFICATION	1.8659185828823441E-6	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999989172064926	WITHOUT_CLASSIFICATION	1.0827935074486108E-6	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999976987638176	WITHOUT_CLASSIFICATION	2.30123618240194E-6	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999980205298791	WITHOUT_CLASSIFICATION	1.9794701209729252E-6	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9999873896898116	WITHOUT_CLASSIFICATION	1.2610310188381807E-5	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999999532480969	WITHOUT_CLASSIFICATION	4.675190312996413E-8	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9998414332856206	WITHOUT_CLASSIFICATION	1.5856671437934438E-4	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.9998811929355038	WITHOUT_CLASSIFICATION	1.1880706449627712E-4	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999930162606028	WITHOUT_CLASSIFICATION	6.9837393971980204E-6	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999930162606028	WITHOUT_CLASSIFICATION	6.9837393971980204E-6	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.999810527526543	WITHOUT_CLASSIFICATION	1.8947247345713566E-4	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.9999872330707851	WITHOUT_CLASSIFICATION	1.2766929214830497E-5	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999898305116143	WITHOUT_CLASSIFICATION	1.0169488385703397E-5	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9993476538980124	WITHOUT_CLASSIFICATION	6.523461019875599E-4	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999571397159331	WITHOUT_CLASSIFICATION	4.286028406687622E-5	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999928517529373	WITHOUT_CLASSIFICATION	7.148247062717368E-6	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999990728706201	WITHOUT_CLASSIFICATION	9.271293798673074E-7	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999976547882432	WITHOUT_CLASSIFICATION	2.3452117566857857E-6	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999993269421099	WITHOUT_CLASSIFICATION	6.730578900929596E-7	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.999999252082667	WITHOUT_CLASSIFICATION	7.479173329411391E-7	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.999992351771604	WITHOUT_CLASSIFICATION	7.648228396151938E-6	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9999917975637822	WITHOUT_CLASSIFICATION	8.202436217847346E-6	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999598562753728	WITHOUT_CLASSIFICATION	4.014372462731344E-5	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999980927723074	WITHOUT_CLASSIFICATION	1.9072276925592639E-6	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.999999842301939	WITHOUT_CLASSIFICATION	1.5769806106598884E-7	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999996233644066	WITHOUT_CLASSIFICATION	3.7663559331876033E-7	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999938960990997	WITHOUT_CLASSIFICATION	6.103900900320703E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999940785901	WITHOUT_CLASSIFICATION	5.921409921483335E-9	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999940785901	WITHOUT_CLASSIFICATION	5.921409921483335E-9	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9999884715802005	WITHOUT_CLASSIFICATION	1.1528419799464827E-5	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.99999010659389	WITHOUT_CLASSIFICATION	9.893406110048774E-6	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.999999667998654	WITHOUT_CLASSIFICATION	3.320013459995301E-7	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.999993202884537	WITHOUT_CLASSIFICATION	6.797115462986805E-6	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999912587624107	WITHOUT_CLASSIFICATION	8.741237589202105E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999940785901	WITHOUT_CLASSIFICATION	5.921409921483335E-9	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999940785901	WITHOUT_CLASSIFICATION	5.921409921483335E-9	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999975048243323	WITHOUT_CLASSIFICATION	2.4951756677200176E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999975048243323	WITHOUT_CLASSIFICATION	2.4951756677200176E-6	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999387289160434	WITHOUT_CLASSIFICATION	6.127108395657096E-5	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999941424335959	WITHOUT_CLASSIFICATION	5.857566404081873E-6	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999997513610528	WITHOUT_CLASSIFICATION	2.486389472278062E-7	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9998889651271644	WITHOUT_CLASSIFICATION	1.1103487283561557E-4	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999962641695325	WITHOUT_CLASSIFICATION	3.7358304675278357E-6	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999962641695325	WITHOUT_CLASSIFICATION	3.7358304675278357E-6	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999918284036441	WITHOUT_CLASSIFICATION	8.171596355921676E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999999533956754	WITHOUT_CLASSIFICATION	4.660432460168465E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999993359296998	WITHOUT_CLASSIFICATION	6.640703002354781E-7	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999731972744509	WITHOUT_CLASSIFICATION	2.6802725549140565E-5	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999975448510348	WITHOUT_CLASSIFICATION	2.4551489652878244E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999794597651945	WITHOUT_CLASSIFICATION	2.0540234805517088E-5	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9999995885540666	WITHOUT_CLASSIFICATION	4.114459334361179E-7	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999997179412203	WITHOUT_CLASSIFICATION	2.820587796837183E-7	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999952290598645	WITHOUT_CLASSIFICATION	4.7709401354638885E-6	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999915222100592	WITHOUT_CLASSIFICATION	8.477789940720714E-6	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999580263819599	WITHOUT_CLASSIFICATION	4.197361804005899E-5	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999960734345749	WITHOUT_CLASSIFICATION	3.92656542514682E-6	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999376649672295	WITHOUT_CLASSIFICATION	6.233503277057161E-5	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999987780351998	WITHOUT_CLASSIFICATION	1.2219648002559421E-6	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999996233644066	WITHOUT_CLASSIFICATION	3.7663559331876033E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999940785901	WITHOUT_CLASSIFICATION	5.921409921483335E-9	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999975048243323	WITHOUT_CLASSIFICATION	2.4951756677200176E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999794597651945	WITHOUT_CLASSIFICATION	2.0540234805517088E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999981950788864	WITHOUT_CLASSIFICATION	1.8049211136412201E-6	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999981950788864	WITHOUT_CLASSIFICATION	1.8049211136412201E-6	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.999993659742714	WITHOUT_CLASSIFICATION	6.340257285944699E-6	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999984157768868	WITHOUT_CLASSIFICATION	1.5842231131765372E-6	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999975553534405	WITHOUT_CLASSIFICATION	2.444646559595493E-6	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999776743014079	WITHOUT_CLASSIFICATION	2.2325698592104338E-5	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.999995978605682	WITHOUT_CLASSIFICATION	4.021394317963977E-6	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999998898242705	WITHOUT_CLASSIFICATION	1.101757295080362E-7	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999984492041327	WITHOUT_CLASSIFICATION	1.5507958671636912E-6	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999973503779653	WITHOUT_CLASSIFICATION	2.6496220346217193E-6	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999943072461125	WITHOUT_CLASSIFICATION	5.692753887519895E-6	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999940376651533	WITHOUT_CLASSIFICATION	5.962334846793643E-6	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999372431496304	WITHOUT_CLASSIFICATION	6.275685036962218E-5	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999998795560855	WITHOUT_CLASSIFICATION	1.204439144504797E-7	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999997409376067	WITHOUT_CLASSIFICATION	2.5906239329239523E-7	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999938960990997	WITHOUT_CLASSIFICATION	6.103900900320703E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999975048243323	WITHOUT_CLASSIFICATION	2.4951756677200176E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999999533956754	WITHOUT_CLASSIFICATION	4.660432460168465E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999993359296998	WITHOUT_CLASSIFICATION	6.640703002354781E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999993359296998	WITHOUT_CLASSIFICATION	6.640703002354781E-7	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999975448510348	WITHOUT_CLASSIFICATION	2.4551489652878244E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999794597651945	WITHOUT_CLASSIFICATION	2.0540234805517088E-5	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999794597651945	WITHOUT_CLASSIFICATION	2.0540234805517088E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999981950788864	WITHOUT_CLASSIFICATION	1.8049211136412201E-6	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999598054880535	WITHOUT_CLASSIFICATION	4.0194511946520104E-5	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999913200745184	WITHOUT_CLASSIFICATION	8.679925481632471E-6	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999673088903	WITHOUT_CLASSIFICATION	3.2691109681379445E-8	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999981395710686	WITHOUT_CLASSIFICATION	1.8604289312878885E-6	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999924959495429	WITHOUT_CLASSIFICATION	7.5040504571927254E-6	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999958775711201	WITHOUT_CLASSIFICATION	4.122428879869162E-6	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999677146044101	WITHOUT_CLASSIFICATION	3.2285395589979916E-5	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999991661901659	WITHOUT_CLASSIFICATION	8.338098339601449E-7	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.999992695320137	WITHOUT_CLASSIFICATION	7.304679862987988E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999999533956754	WITHOUT_CLASSIFICATION	4.660432460168465E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999993359296998	WITHOUT_CLASSIFICATION	6.640703002354781E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999993359296998	WITHOUT_CLASSIFICATION	6.640703002354781E-7	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999975448510348	WITHOUT_CLASSIFICATION	2.4551489652878244E-6	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999973503779653	WITHOUT_CLASSIFICATION	2.6496220346217193E-6	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999940376651533	WITHOUT_CLASSIFICATION	5.962334846793643E-6	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999999261968241	WITHOUT_CLASSIFICATION	7.380317590882686E-8	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999945484994114	WITHOUT_CLASSIFICATION	5.451500588600824E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999919088179857	WITHOUT_CLASSIFICATION	8.091182014255021E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999919088179857	WITHOUT_CLASSIFICATION	8.091182014255021E-6	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999980603879969	WITHOUT_CLASSIFICATION	1.9396120030909333E-6	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999999086964636	WITHOUT_CLASSIFICATION	9.130353638365515E-8	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999672613661943	WITHOUT_CLASSIFICATION	3.273863380568889E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999706003257312	WITHOUT_CLASSIFICATION	2.939967426888461E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999990265986947	WITHOUT_CLASSIFICATION	9.734013053739047E-7	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999990265986947	WITHOUT_CLASSIFICATION	9.734013053739047E-7	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9975162545984602	WITHOUT_CLASSIFICATION	0.002483745401539795	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9975162545984602	WITHOUT_CLASSIFICATION	0.002483745401539795	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999935837101567	WITHOUT_CLASSIFICATION	6.41628984333323E-6	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999935837101567	WITHOUT_CLASSIFICATION	6.41628984333323E-6	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999879570876951	WITHOUT_CLASSIFICATION	1.2042912304801444E-5	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999852474334654	WITHOUT_CLASSIFICATION	1.4752566534520032E-5	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.999842864028033	WITHOUT_CLASSIFICATION	1.5713597196700138E-4	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.999999259393277	WITHOUT_CLASSIFICATION	7.406067229485166E-7	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999985268552792	WITHOUT_CLASSIFICATION	1.473144720719237E-6	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.9999948629092311	WITHOUT_CLASSIFICATION	5.137090768889373E-6	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999991562232564	WITHOUT_CLASSIFICATION	8.437767435352882E-7	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.999994880728879	WITHOUT_CLASSIFICATION	5.1192711210292404E-6	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.999974745099869	WITHOUT_CLASSIFICATION	2.525490013099423E-5	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999913441175202	WITHOUT_CLASSIFICATION	8.655882479794764E-6	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9999948461663595	WITHOUT_CLASSIFICATION	5.153833640551021E-6	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999990546072516	WITHOUT_CLASSIFICATION	9.453927484581231E-7	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999984454953997	WITHOUT_CLASSIFICATION	1.5545046002307583E-6	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999769719900128	WITHOUT_CLASSIFICATION	2.302800998715934E-5	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999769719900128	WITHOUT_CLASSIFICATION	2.302800998715934E-5	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999978418866399	WITHOUT_CLASSIFICATION	2.1581133601734756E-6	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999980912097786	WITHOUT_CLASSIFICATION	1.908790221442419E-6	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999986485073695	WITHOUT_CLASSIFICATION	1.3514926305271773E-6	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999599072673	WITHOUT_CLASSIFICATION	4.009273265684533E-8	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999992228566874	WITHOUT_CLASSIFICATION	7.771433127198384E-7	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999989742057902	WITHOUT_CLASSIFICATION	1.0257942097979917E-6	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999997622847207	WITHOUT_CLASSIFICATION	2.3771527938300018E-7	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999997854923913	WITHOUT_CLASSIFICATION	2.1450760856845256E-7	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999991540406983	WITHOUT_CLASSIFICATION	8.459593017951251E-7	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999997957505505	WITHOUT_CLASSIFICATION	2.0424944953910154E-7	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999978990389798	WITHOUT_CLASSIFICATION	2.100961020195161E-6	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999922590060814	WITHOUT_CLASSIFICATION	7.740993918590316E-6	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999999727019776	WITHOUT_CLASSIFICATION	2.729802235002473E-8	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9998624857751414	WITHOUT_CLASSIFICATION	1.3751422485857809E-4	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999959315248195	WITHOUT_CLASSIFICATION	4.068475180527434E-6	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999992809459968	WITHOUT_CLASSIFICATION	7.190540033602702E-7	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9999993314302492	WITHOUT_CLASSIFICATION	6.685697507674197E-7	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999897452278156	WITHOUT_CLASSIFICATION	1.0254772184357504E-5	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999991950774177	WITHOUT_CLASSIFICATION	8.04922582259037E-7	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999991950774177	WITHOUT_CLASSIFICATION	8.04922582259037E-7	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999999329280876	WITHOUT_CLASSIFICATION	6.707191239742163E-8	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999930801593505	WITHOUT_CLASSIFICATION	6.919840649572039E-6	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.999829786242623	WITHOUT_CLASSIFICATION	1.7021375737707683E-4	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.999829786242623	WITHOUT_CLASSIFICATION	1.7021375737707683E-4	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999984269897849	WITHOUT_CLASSIFICATION	1.5730102150964075E-6	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999866362298083	WITHOUT_CLASSIFICATION	1.3363770191652909E-5	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9997353317748873	WITHOUT_CLASSIFICATION	2.646682251126752E-4	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999531244332905	WITHOUT_CLASSIFICATION	4.687556670947579E-5	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.999999822052771	WITHOUT_CLASSIFICATION	1.7794722882934203E-7	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999986233320812	WITHOUT_CLASSIFICATION	1.3766679187555927E-6	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999986233320812	WITHOUT_CLASSIFICATION	1.3766679187555927E-6	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999988389860777	WITHOUT_CLASSIFICATION	1.1610139223545776E-6	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999997977167345	WITHOUT_CLASSIFICATION	2.0228326542007312E-7	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999978592995644	WITHOUT_CLASSIFICATION	2.1407004354899633E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999944782727095	WITHOUT_CLASSIFICATION	5.521727290548196E-6	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999930801593505	WITHOUT_CLASSIFICATION	6.919840649572039E-6	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999642446421669	WITHOUT_CLASSIFICATION	3.575535783300662E-5	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999957829938448	WITHOUT_CLASSIFICATION	4.217006155155336E-6	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999957829938448	WITHOUT_CLASSIFICATION	4.217006155155336E-6	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999868806482017	WITHOUT_CLASSIFICATION	1.3119351798184463E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999995569912321	WITHOUT_CLASSIFICATION	4.4300876787164446E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999995569912321	WITHOUT_CLASSIFICATION	4.4300876787164446E-7	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9998947331610079	WITHOUT_CLASSIFICATION	1.0526683899215257E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9998947331610079	WITHOUT_CLASSIFICATION	1.0526683899215257E-4	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9998947331610079	WITHOUT_CLASSIFICATION	1.0526683899215257E-4	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999995569912321	WITHOUT_CLASSIFICATION	4.4300876787164446E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999995569912321	WITHOUT_CLASSIFICATION	4.4300876787164446E-7	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999868806482017	WITHOUT_CLASSIFICATION	1.3119351798184463E-5	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999989822285379	WITHOUT_CLASSIFICATION	1.017771462048217E-6	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9999947219253059	WITHOUT_CLASSIFICATION	5.27807469409578E-6	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999960986025564	WITHOUT_CLASSIFICATION	3.901397443626594E-6	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9999432026505514	WITHOUT_CLASSIFICATION	5.6797349448564485E-5	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999969214150644	WITHOUT_CLASSIFICATION	3.078584935534542E-6	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999234707884116	WITHOUT_CLASSIFICATION	7.652921158838811E-5	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999930072201857	WITHOUT_CLASSIFICATION	6.9927798143793E-6	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999988450285433	WITHOUT_CLASSIFICATION	1.1549714567184332E-6	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999978990389798	WITHOUT_CLASSIFICATION	2.100961020195161E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999995569912321	WITHOUT_CLASSIFICATION	4.4300876787164446E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999995569912321	WITHOUT_CLASSIFICATION	4.4300876787164446E-7	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999994003816971	WITHOUT_CLASSIFICATION	5.996183029393305E-7	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999937512424056	WITHOUT_CLASSIFICATION	6.2487575943814E-6	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999985494563637	WITHOUT_CLASSIFICATION	1.4505436363334064E-6	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999981384369107	WITHOUT_CLASSIFICATION	1.8615630893223063E-6	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999541030407799	WITHOUT_CLASSIFICATION	4.589695922005357E-5	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9998695020502415	WITHOUT_CLASSIFICATION	1.304979497584945E-4	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999993096383232	WITHOUT_CLASSIFICATION	6.903616767031807E-7	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999882462807171	WITHOUT_CLASSIFICATION	1.1753719282812698E-5	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999911254412898	WITHOUT_CLASSIFICATION	8.874558710246733E-6	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999982311060125	WITHOUT_CLASSIFICATION	1.7688939875540851E-6	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999727352022453	WITHOUT_CLASSIFICATION	2.726479775469214E-5	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999953468631347	WITHOUT_CLASSIFICATION	4.6531368652445915E-6	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999995178686615	WITHOUT_CLASSIFICATION	4.82131338535279E-7	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999497511149791	WITHOUT_CLASSIFICATION	5.024888502093999E-5	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999921820289077	WITHOUT_CLASSIFICATION	7.817971092303541E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999944312801108	WITHOUT_CLASSIFICATION	5.5687198892360835E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999944312801108	WITHOUT_CLASSIFICATION	5.5687198892360835E-6	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999944312801108	WITHOUT_CLASSIFICATION	5.5687198892360835E-6	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999964105152134	WITHOUT_CLASSIFICATION	3.5894847866990916E-6	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999985309520191	WITHOUT_CLASSIFICATION	1.469047980910116E-6	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999917228071757	WITHOUT_CLASSIFICATION	8.277192824245275E-6	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999967809499914	WITHOUT_CLASSIFICATION	3.219050008546098E-6	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9997850739847198	WITHOUT_CLASSIFICATION	2.1492601528025828E-4	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.999998475467075	WITHOUT_CLASSIFICATION	1.5245329249928564E-6	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999953274190642	WITHOUT_CLASSIFICATION	4.672580935788855E-6	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999999465191081	WITHOUT_CLASSIFICATION	5.348089198002969E-8	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999979606862651	WITHOUT_CLASSIFICATION	2.0393137348443302E-6	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999985480015505	WITHOUT_CLASSIFICATION	1.4519984493796834E-6	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999969915081688	WITHOUT_CLASSIFICATION	3.0084918312575423E-6	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999959439151027	WITHOUT_CLASSIFICATION	4.056084897185447E-6	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999988389860777	WITHOUT_CLASSIFICATION	1.1610139223545776E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999995569912321	WITHOUT_CLASSIFICATION	4.4300876787164446E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999995569912321	WITHOUT_CLASSIFICATION	4.4300876787164446E-7	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999868806482017	WITHOUT_CLASSIFICATION	1.3119351798184463E-5	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999234707884116	WITHOUT_CLASSIFICATION	7.652921158838811E-5	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999937512424056	WITHOUT_CLASSIFICATION	6.2487575943814E-6	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999981384369107	WITHOUT_CLASSIFICATION	1.8615630893223063E-6	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9998695020502415	WITHOUT_CLASSIFICATION	1.304979497584945E-4	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999985494563637	WITHOUT_CLASSIFICATION	1.4505436363334064E-6	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999993096383232	WITHOUT_CLASSIFICATION	6.903616767031807E-7	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999982311060125	WITHOUT_CLASSIFICATION	1.7688939875540851E-6	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999911254412898	WITHOUT_CLASSIFICATION	8.874558710246733E-6	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999953468631347	WITHOUT_CLASSIFICATION	4.6531368652445915E-6	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999990932124639	WITHOUT_CLASSIFICATION	9.067875360770668E-7	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9995431699347103	WITHOUT_CLASSIFICATION	4.568300652897352E-4	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999974818768983	WITHOUT_CLASSIFICATION	2.5181231016967358E-6	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999998255919572	WITHOUT_CLASSIFICATION	1.7440804271739167E-7	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999996211716571	WITHOUT_CLASSIFICATION	3.7882834285940045E-7	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9997974760960889	WITHOUT_CLASSIFICATION	2.0252390391102993E-4	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999976333386031	WITHOUT_CLASSIFICATION	2.36666139691305E-6	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999351975940184	WITHOUT_CLASSIFICATION	6.480240598156973E-5	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999962662799632	WITHOUT_CLASSIFICATION	3.7337200369064305E-6	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999791524530921	WITHOUT_CLASSIFICATION	2.0847546907822946E-5	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999184000871503	WITHOUT_CLASSIFICATION	8.159991284969491E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998085382391	WITHOUT_CLASSIFICATION	1.914617609307905E-7	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999979225502588	WITHOUT_CLASSIFICATION	2.0774497412610044E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999942711085843	WITHOUT_CLASSIFICATION	5.728891415693522E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999727539959784	WITHOUT_CLASSIFICATION	2.7246004021544887E-5	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999966703362885	WITHOUT_CLASSIFICATION	3.329663711468028E-6	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999998270578138	WITHOUT_CLASSIFICATION	1.7294218614063262E-7	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999779422957323	WITHOUT_CLASSIFICATION	2.2057704267613285E-5	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999822110914885	WITHOUT_CLASSIFICATION	1.7788908511456383E-5	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999457595278904	WITHOUT_CLASSIFICATION	5.42404721095542E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999982525717129	WITHOUT_CLASSIFICATION	1.7474282870132605E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999838384673	WITHOUT_CLASSIFICATION	1.6161532734449188E-8	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999838384673	WITHOUT_CLASSIFICATION	1.6161532734449188E-8	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999978145357467	WITHOUT_CLASSIFICATION	2.1854642533801597E-6	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999993778167292	WITHOUT_CLASSIFICATION	6.221832708021281E-7	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998796054096261	WITHOUT_CLASSIFICATION	1.2039459037388646E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998796054096261	WITHOUT_CLASSIFICATION	1.2039459037388646E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998796054096261	WITHOUT_CLASSIFICATION	1.2039459037388646E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998865888967641	WITHOUT_CLASSIFICATION	1.1341110323592921E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998865888967641	WITHOUT_CLASSIFICATION	1.1341110323592921E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998865888967641	WITHOUT_CLASSIFICATION	1.1341110323592921E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998865888967641	WITHOUT_CLASSIFICATION	1.1341110323592921E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998742117520628	WITHOUT_CLASSIFICATION	1.2578824793710528E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998742117520628	WITHOUT_CLASSIFICATION	1.2578824793710528E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998742117520628	WITHOUT_CLASSIFICATION	1.2578824793710528E-4	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.999861552424002	WITHOUT_CLASSIFICATION	1.3844757599795795E-4	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.999861552424002	WITHOUT_CLASSIFICATION	1.3844757599795795E-4	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.999843566522811	WITHOUT_CLASSIFICATION	1.564334771889698E-4	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9998482544727267	WITHOUT_CLASSIFICATION	1.5174552727316716E-4	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999993778167292	WITHOUT_CLASSIFICATION	6.221832708021281E-7	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999995791586668	WITHOUT_CLASSIFICATION	4.208413332480686E-7	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998796054096261	WITHOUT_CLASSIFICATION	1.2039459037388646E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998796054096261	WITHOUT_CLASSIFICATION	1.2039459037388646E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998865888967641	WITHOUT_CLASSIFICATION	1.1341110323592921E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998865888967641	WITHOUT_CLASSIFICATION	1.1341110323592921E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998865888967641	WITHOUT_CLASSIFICATION	1.1341110323592921E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998742117520628	WITHOUT_CLASSIFICATION	1.2578824793710528E-4	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9998742117520628	WITHOUT_CLASSIFICATION	1.2578824793710528E-4	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.999861552424002	WITHOUT_CLASSIFICATION	1.3844757599795795E-4	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9998482544727267	WITHOUT_CLASSIFICATION	1.5174552727316716E-4	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999902832669088	WITHOUT_CLASSIFICATION	9.716733091287758E-6	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999902832669088	WITHOUT_CLASSIFICATION	9.716733091287758E-6	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999868694778071	WITHOUT_CLASSIFICATION	1.3130522192778383E-5	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999868694778071	WITHOUT_CLASSIFICATION	1.3130522192778383E-5	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999871569548058	WITHOUT_CLASSIFICATION	1.2843045194217088E-5	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999871569548058	WITHOUT_CLASSIFICATION	1.2843045194217088E-5	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999964851278598	WITHOUT_CLASSIFICATION	3.5148721403002738E-6	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999899570703802	WITHOUT_CLASSIFICATION	1.004292961985631E-5	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999899570703802	WITHOUT_CLASSIFICATION	1.004292961985631E-5	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.999984775011087	WITHOUT_CLASSIFICATION	1.5224988913090131E-5	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.999984775011087	WITHOUT_CLASSIFICATION	1.5224988913090131E-5	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999939656731476	WITHOUT_CLASSIFICATION	6.0343268524699936E-6	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999994313637929	WITHOUT_CLASSIFICATION	5.68636207174319E-7	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999994313637929	WITHOUT_CLASSIFICATION	5.68636207174319E-7	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999989929583422	WITHOUT_CLASSIFICATION	1.0070416578601642E-6	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999942836988047	WITHOUT_CLASSIFICATION	5.716301195281853E-6	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999968649367319	WITHOUT_CLASSIFICATION	3.135063268174266E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998865888967641	WITHOUT_CLASSIFICATION	1.1341110323592921E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998865888967641	WITHOUT_CLASSIFICATION	1.1341110323592921E-4	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999989929583422	WITHOUT_CLASSIFICATION	1.0070416578601642E-6	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999941621278489	WITHOUT_CLASSIFICATION	5.837872151027865E-6	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999983526303166	WITHOUT_CLASSIFICATION	1.6473696834060258E-6	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999983526303166	WITHOUT_CLASSIFICATION	1.6473696834060258E-6	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999983526303166	WITHOUT_CLASSIFICATION	1.6473696834060258E-6	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9997992217246567	WITHOUT_CLASSIFICATION	2.007782753432721E-4	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999885004225314	WITHOUT_CLASSIFICATION	1.149957746860912E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999171457861397	WITHOUT_CLASSIFICATION	8.285421386035319E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999171457861397	WITHOUT_CLASSIFICATION	8.285421386035319E-5	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999084220438403	WITHOUT_CLASSIFICATION	9.157795615966477E-5	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999786090309262	WITHOUT_CLASSIFICATION	2.139096907390985E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999954971598524	WITHOUT_CLASSIFICATION	4.502840147680488E-6	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999959582268815	WITHOUT_CLASSIFICATION	4.041773118626558E-6	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999651439949667	WITHOUT_CLASSIFICATION	3.4856005033288944E-5	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999960613107658	WITHOUT_CLASSIFICATION	3.938689234243411E-6	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999960613107658	WITHOUT_CLASSIFICATION	3.938689234243411E-6	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999822381179765	WITHOUT_CLASSIFICATION	1.7761882023530373E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9998278647146852	WITHOUT_CLASSIFICATION	1.721352853148125E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9998278647146852	WITHOUT_CLASSIFICATION	1.721352853148125E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998865888967641	WITHOUT_CLASSIFICATION	1.1341110323592921E-4	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999983526303166	WITHOUT_CLASSIFICATION	1.6473696834060258E-6	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999885004225314	WITHOUT_CLASSIFICATION	1.149957746860912E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999171457861397	WITHOUT_CLASSIFICATION	8.285421386035319E-5	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999084220438403	WITHOUT_CLASSIFICATION	9.157795615966477E-5	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999786090309262	WITHOUT_CLASSIFICATION	2.139096907390985E-5	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999954971598524	WITHOUT_CLASSIFICATION	4.502840147680488E-6	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999959582268815	WITHOUT_CLASSIFICATION	4.041773118626558E-6	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9998278647146852	WITHOUT_CLASSIFICATION	1.721352853148125E-4	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999976133127034	WITHOUT_CLASSIFICATION	2.3866872965018056E-6	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999997240014238	WITHOUT_CLASSIFICATION	2.7599857629178914E-7	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999995212539063	WITHOUT_CLASSIFICATION	4.787460937484559E-7	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.999965094922888	WITHOUT_CLASSIFICATION	3.490507711205987E-5	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999979085552327	WITHOUT_CLASSIFICATION	2.091444767248254E-6	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999994848699219	WITHOUT_CLASSIFICATION	5.151300781065942E-7	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999990919879876	WITHOUT_CLASSIFICATION	9.080120124117555E-7	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999990919879876	WITHOUT_CLASSIFICATION	9.080120124117555E-7	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.999992999147244	WITHOUT_CLASSIFICATION	7.000852756034616E-6	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999804436638292	WITHOUT_CLASSIFICATION	1.9556336170782967E-5	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999845050071574	WITHOUT_CLASSIFICATION	1.54949928425021E-5	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999636644890653	WITHOUT_CLASSIFICATION	3.633551093472887E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999703182555184	WITHOUT_CLASSIFICATION	2.9681744481633252E-5	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999703182555184	WITHOUT_CLASSIFICATION	2.9681744481633252E-5	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999746570965423	WITHOUT_CLASSIFICATION	2.5342903457667232E-5	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.999994063011874	WITHOUT_CLASSIFICATION	5.936988125949128E-6	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9998412641968766	WITHOUT_CLASSIFICATION	1.5873580312338205E-4	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9998412641968766	WITHOUT_CLASSIFICATION	1.5873580312338205E-4	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.999977377768139	WITHOUT_CLASSIFICATION	2.2622231861062415E-5	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999916053901159	WITHOUT_CLASSIFICATION	8.394609884076578E-6	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999651439949667	WITHOUT_CLASSIFICATION	3.4856005033288944E-5	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999976145800219	WITHOUT_CLASSIFICATION	2.3854199781237463E-6	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999997474701403	WITHOUT_CLASSIFICATION	2.52529859583398E-7	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999998220177855	WITHOUT_CLASSIFICATION	1.7798221450438707E-6	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999996530435614	WITHOUT_CLASSIFICATION	3.4695643862495444E-7	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.99999891888856	WITHOUT_CLASSIFICATION	1.0811114400175608E-6	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999980385288656	WITHOUT_CLASSIFICATION	1.9614711343921863E-6	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999882165347812	WITHOUT_CLASSIFICATION	1.1783465218750844E-5	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999902302271694	WITHOUT_CLASSIFICATION	9.769772830624888E-6	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999945153797003	WITHOUT_CLASSIFICATION	5.48462029969909E-6	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999945153797003	WITHOUT_CLASSIFICATION	5.48462029969909E-6	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999696619324915	WITHOUT_CLASSIFICATION	3.033806750857844E-5	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999696619324915	WITHOUT_CLASSIFICATION	3.033806750857844E-5	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999999009574358	WITHOUT_CLASSIFICATION	9.904256415112107E-8	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999996456280104	WITHOUT_CLASSIFICATION	3.5437198970523903E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999996456280104	WITHOUT_CLASSIFICATION	3.5437198970523903E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999996456280104	WITHOUT_CLASSIFICATION	3.5437198970523903E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999979099131389	WITHOUT_CLASSIFICATION	2.0900868611310968E-6	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999952112145146	WITHOUT_CLASSIFICATION	4.7887854853575745E-6	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999952112145146	WITHOUT_CLASSIFICATION	4.7887854853575745E-6	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999998434463859	WITHOUT_CLASSIFICATION	1.5655361406515747E-7	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999482594575928	WITHOUT_CLASSIFICATION	5.174054240722801E-5	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999903270489297	WITHOUT_CLASSIFICATION	9.672951070272912E-6	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9999407980549713	WITHOUT_CLASSIFICATION	5.9201945028864006E-5	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999921140384395	WITHOUT_CLASSIFICATION	7.88596156060681E-6	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9999851349962576	WITHOUT_CLASSIFICATION	1.4865003742411192E-5	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999126726853272	WITHOUT_CLASSIFICATION	8.732731467274024E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999979225502588	WITHOUT_CLASSIFICATION	2.0774497412610044E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999979225502588	WITHOUT_CLASSIFICATION	2.0774497412610044E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999979099131389	WITHOUT_CLASSIFICATION	2.0900868611310968E-6	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999998434463859	WITHOUT_CLASSIFICATION	1.5655361406515747E-7	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999127374967	WITHOUT_CLASSIFICATION	8.726250342999055E-8	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999482594575928	WITHOUT_CLASSIFICATION	5.174054240722801E-5	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999903270489297	WITHOUT_CLASSIFICATION	9.672951070272912E-6	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999932194965098	WITHOUT_CLASSIFICATION	6.780503490220104E-6	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.999998449339222	WITHOUT_CLASSIFICATION	1.5506607779853112E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999963261135764	WITHOUT_CLASSIFICATION	3.6738864235833216E-6	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.9999457126646724	WITHOUT_CLASSIFICATION	5.428733532759398E-5	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999989485805474	WITHOUT_CLASSIFICATION	1.051419452544712E-6	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999994657382593	WITHOUT_CLASSIFICATION	5.342617407858517E-7	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.999997952301291	WITHOUT_CLASSIFICATION	2.047698709090909E-6	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999932194965098	WITHOUT_CLASSIFICATION	6.780503490220104E-6	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9998826173726818	WITHOUT_CLASSIFICATION	1.1738262731829942E-4	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9998826173726818	WITHOUT_CLASSIFICATION	1.1738262731829942E-4	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999937726726911	WITHOUT_CLASSIFICATION	6.227327308939881E-6	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999098641916245	WITHOUT_CLASSIFICATION	9.013580837550464E-5	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999638205466863	WITHOUT_CLASSIFICATION	3.617945331365825E-5	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9998448273124385	WITHOUT_CLASSIFICATION	1.55172687561379E-4	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.999981397216128	WITHOUT_CLASSIFICATION	1.8602783872067383E-5	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9990837121735106	WITHOUT_CLASSIFICATION	9.162878264893981E-4	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999975977361046	WITHOUT_CLASSIFICATION	2.402263895412532E-6	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9996095231371155	WITHOUT_CLASSIFICATION	3.9047686288443844E-4	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999984230517832	WITHOUT_CLASSIFICATION	1.5769482167621133E-6	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9999993906596205	WITHOUT_CLASSIFICATION	6.093403795428774E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999997804007815	WITHOUT_CLASSIFICATION	2.1959921850322937E-6	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9998448273124385	WITHOUT_CLASSIFICATION	1.55172687561379E-4	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.999981397216128	WITHOUT_CLASSIFICATION	1.8602783872067383E-5	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9998633578564723	WITHOUT_CLASSIFICATION	1.3664214352762324E-4	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9999976845345044	WITHOUT_CLASSIFICATION	2.3154654955236773E-6	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999999225392513	WITHOUT_CLASSIFICATION	7.746074861799154E-8	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999894521915719	WITHOUT_CLASSIFICATION	1.0547808428143431E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999992588155988	WITHOUT_CLASSIFICATION	7.411844012504259E-7	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999984808561847	WITHOUT_CLASSIFICATION	1.5191438152617184E-6	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9998329222848622	WITHOUT_CLASSIFICATION	1.670777151377086E-4	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9999973452944583	WITHOUT_CLASSIFICATION	2.6547055416771684E-6	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999984326775347	WITHOUT_CLASSIFICATION	1.5673224652784456E-6	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999882347338395	WITHOUT_CLASSIFICATION	1.1765266160583148E-5	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999991253689932	WITHOUT_CLASSIFICATION	8.746310069030558E-7	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9999072313279705	WITHOUT_CLASSIFICATION	9.276867202945589E-5	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999038916160479	WITHOUT_CLASSIFICATION	9.610838395217379E-5	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999951941510287	WITHOUT_CLASSIFICATION	4.805848971335171E-6	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999998780262583	WITHOUT_CLASSIFICATION	1.2197374166686638E-7	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999989043140395	WITHOUT_CLASSIFICATION	1.0956859605965908E-6	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999799770612285	WITHOUT_CLASSIFICATION	2.0022938771524278E-5	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999819633565702	WITHOUT_CLASSIFICATION	1.803664342980663E-5	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999987046389855	WITHOUT_CLASSIFICATION	1.2953610144674963E-6	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.999973768698753	WITHOUT_CLASSIFICATION	2.623130124697712E-5	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999799770612285	WITHOUT_CLASSIFICATION	2.0022938771524278E-5	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999819633565702	WITHOUT_CLASSIFICATION	1.803664342980663E-5	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999987046389855	WITHOUT_CLASSIFICATION	1.2953610144674963E-6	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9999928718387918	WITHOUT_CLASSIFICATION	7.128161208155175E-6	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999997655391111	WITHOUT_CLASSIFICATION	2.3446088879071191E-7	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999965943537428	WITHOUT_CLASSIFICATION	3.4056462571968187E-6	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999765107568328	WITHOUT_CLASSIFICATION	2.3489243167239425E-5	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999632289696911	WITHOUT_CLASSIFICATION	3.677103030878923E-5	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9998722771397173	WITHOUT_CLASSIFICATION	1.2772286028273408E-4	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999997422878893	WITHOUT_CLASSIFICATION	2.5771211064489857E-7	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999920441546657	WITHOUT_CLASSIFICATION	7.955845334373631E-6	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9999994993878415	WITHOUT_CLASSIFICATION	5.006121584707072E-7	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9999971472032478	WITHOUT_CLASSIFICATION	2.852796752266765E-6	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9484877031876826	WITHOUT_CLASSIFICATION	0.0515122968123174	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999994037016622	WITHOUT_CLASSIFICATION	5.962983378554541E-7	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999997688301119	WITHOUT_CLASSIFICATION	2.3116988803866643E-7	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9997795109811903	WITHOUT_CLASSIFICATION	2.2048901880973495E-4	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999967302248819	WITHOUT_CLASSIFICATION	3.26977511800071E-6	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999986370122931	WITHOUT_CLASSIFICATION	1.3629877069633975E-6	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999989756006145	WITHOUT_CLASSIFICATION	1.0243993855845905E-6	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999973587888624	WITHOUT_CLASSIFICATION	2.6412111375660326E-6	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999966025364184	WITHOUT_CLASSIFICATION	3.397463581663265E-6	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999969287117837	WITHOUT_CLASSIFICATION	3.0712882164025255E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999985354975106	WITHOUT_CLASSIFICATION	1.464502489389216E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999967110781895	WITHOUT_CLASSIFICATION	3.2889218103570736E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999967110781895	WITHOUT_CLASSIFICATION	3.2889218103570736E-6	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999946998112492	WITHOUT_CLASSIFICATION	5.300188750737657E-6	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999946998112492	WITHOUT_CLASSIFICATION	5.300188750737657E-6	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999719726591868	WITHOUT_CLASSIFICATION	2.8027340813192654E-5	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999719726591868	WITHOUT_CLASSIFICATION	2.8027340813192654E-5	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999325972431354	WITHOUT_CLASSIFICATION	6.740275686459864E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999994034694213	WITHOUT_CLASSIFICATION	5.965305786384864E-7	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999988878170422	WITHOUT_CLASSIFICATION	1.1121829578430435E-6	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999925998285809	WITHOUT_CLASSIFICATION	7.40017141908263E-6	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999922029831371	WITHOUT_CLASSIFICATION	7.79701686282997E-6	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999547672713721	WITHOUT_CLASSIFICATION	4.523272862793934E-5	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999772651562154	WITHOUT_CLASSIFICATION	2.2734843784579662E-5	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9999844031166166	WITHOUT_CLASSIFICATION	1.559688338326593E-5	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999979225502588	WITHOUT_CLASSIFICATION	2.0774497412610044E-6	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999325972431354	WITHOUT_CLASSIFICATION	6.740275686459864E-5	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999994034694213	WITHOUT_CLASSIFICATION	5.965305786384864E-7	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999988878170422	WITHOUT_CLASSIFICATION	1.1121829578430435E-6	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999922029831371	WITHOUT_CLASSIFICATION	7.79701686282997E-6	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999547672713721	WITHOUT_CLASSIFICATION	4.523272862793934E-5	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999929920885634	WITHOUT_CLASSIFICATION	7.007911436545176E-6	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9999963653836619	WITHOUT_CLASSIFICATION	3.6346163381639586E-6	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999960870550293	WITHOUT_CLASSIFICATION	3.912944970617681E-6	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999960870550293	WITHOUT_CLASSIFICATION	3.912944970617681E-6	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999837047301834	WITHOUT_CLASSIFICATION	1.6295269816563815E-5	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999994356882519	WITHOUT_CLASSIFICATION	5.643117481452175E-7	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999967676517812	WITHOUT_CLASSIFICATION	3.2323482187509203E-6	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999996134652908	WITHOUT_CLASSIFICATION	3.865347092651501E-7	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999996134652908	WITHOUT_CLASSIFICATION	3.865347092651501E-7	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.999999230669173	WITHOUT_CLASSIFICATION	7.693308269715192E-7	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999829224292	WITHOUT_CLASSIFICATION	1.7077570877335344E-8	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999990787428742	WITHOUT_CLASSIFICATION	9.212571257774298E-7	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999983482710465	WITHOUT_CLASSIFICATION	1.6517289534432952E-6	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999996307973487	WITHOUT_CLASSIFICATION	3.692026514202947E-7	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999942711085843	WITHOUT_CLASSIFICATION	5.728891415693522E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999727539959784	WITHOUT_CLASSIFICATION	2.7246004021544887E-5	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999966703362885	WITHOUT_CLASSIFICATION	3.329663711468028E-6	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999998270578138	WITHOUT_CLASSIFICATION	1.7294218614063262E-7	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999457595278904	WITHOUT_CLASSIFICATION	5.42404721095542E-5	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999982525717129	WITHOUT_CLASSIFICATION	1.7474282870132605E-6	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.999999230669173	WITHOUT_CLASSIFICATION	7.693308269715192E-7	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999829224292	WITHOUT_CLASSIFICATION	1.7077570877335344E-8	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999983482710465	WITHOUT_CLASSIFICATION	1.6517289534432952E-6	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999829713355715	WITHOUT_CLASSIFICATION	1.702866442847415E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999967676517812	WITHOUT_CLASSIFICATION	3.2323482187509203E-6	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999967676517812	WITHOUT_CLASSIFICATION	3.2323482187509203E-6	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999997804007815	WITHOUT_CLASSIFICATION	2.1959921850322937E-6	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999997804007815	WITHOUT_CLASSIFICATION	2.1959921850322937E-6	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999325087445	WITHOUT_CLASSIFICATION	6.749125549136357E-8	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999325087445	WITHOUT_CLASSIFICATION	6.749125549136357E-8	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999989668059138	WITHOUT_CLASSIFICATION	1.0331940861598409E-6	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999967159237086	WITHOUT_CLASSIFICATION	3.2840762912293555E-6	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999980331227161	WITHOUT_CLASSIFICATION	1.966877283920769E-6	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999988119282451	WITHOUT_CLASSIFICATION	1.1880717548844228E-6	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.999997299837898	WITHOUT_CLASSIFICATION	2.7001621020610088E-6	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999990372204758	WITHOUT_CLASSIFICATION	9.627795241879756E-7	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999999541997857	WITHOUT_CLASSIFICATION	4.580021423271717E-8	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999400921542425	WITHOUT_CLASSIFICATION	5.990784575759744E-5	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999990488282378	WITHOUT_CLASSIFICATION	9.511717622232516E-7	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999998082001494	WITHOUT_CLASSIFICATION	1.9179985066991645E-7	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999927861700648	WITHOUT_CLASSIFICATION	7.213829935235851E-6	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9999995433389	WITHOUT_CLASSIFICATION	4.5666110002106437E-7	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999998277574275	WITHOUT_CLASSIFICATION	1.7224257249497545E-7	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.999997857154351	WITHOUT_CLASSIFICATION	2.1428456489654126E-6	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999282120613969	WITHOUT_CLASSIFICATION	7.178793860315795E-5	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9999938095741502	WITHOUT_CLASSIFICATION	6.190425849765627E-6	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9999995295376529	WITHOUT_CLASSIFICATION	4.70462347045614E-7	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999945250171415	WITHOUT_CLASSIFICATION	5.474982858515623E-6	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9998685768497811	WITHOUT_CLASSIFICATION	1.3142315021880176E-4	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999727539959784	WITHOUT_CLASSIFICATION	2.7246004021544887E-5	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999998270578138	WITHOUT_CLASSIFICATION	1.7294218614063262E-7	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999838384673	WITHOUT_CLASSIFICATION	1.6161532734449188E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999171457861397	WITHOUT_CLASSIFICATION	8.285421386035319E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999171457861397	WITHOUT_CLASSIFICATION	8.285421386035319E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999829713355715	WITHOUT_CLASSIFICATION	1.702866442847415E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999967676517812	WITHOUT_CLASSIFICATION	3.2323482187509203E-6	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999997804007815	WITHOUT_CLASSIFICATION	2.1959921850322937E-6	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999325087445	WITHOUT_CLASSIFICATION	6.749125549136357E-8	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999996737551841	WITHOUT_CLASSIFICATION	3.2624481602940474E-7	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999851720670943	WITHOUT_CLASSIFICATION	1.4827932905788011E-5	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.999914150454215	WITHOUT_CLASSIFICATION	8.584954578496781E-5	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999999205093818	WITHOUT_CLASSIFICATION	7.949061827260131E-8	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.999998787414947	WITHOUT_CLASSIFICATION	1.2125850530694532E-6	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.999998787414947	WITHOUT_CLASSIFICATION	1.2125850530694532E-6	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999997712805356	WITHOUT_CLASSIFICATION	2.2871946442072371E-7	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999884386352202	WITHOUT_CLASSIFICATION	1.1561364779744147E-5	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999652929311684	WITHOUT_CLASSIFICATION	3.470706883169698E-5	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999922733320471	WITHOUT_CLASSIFICATION	7.726667952878931E-6	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999989089060871	WITHOUT_CLASSIFICATION	1.0910939129676525E-6	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999989089060871	WITHOUT_CLASSIFICATION	1.0910939129676525E-6	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9996413408630112	WITHOUT_CLASSIFICATION	3.58659136988903E-4	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9999940501986224	WITHOUT_CLASSIFICATION	5.949801377544299E-6	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999867450932326	WITHOUT_CLASSIFICATION	1.3254906767272172E-5	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9986386771462832	WITHOUT_CLASSIFICATION	0.0013613228537168328	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999329058541705	WITHOUT_CLASSIFICATION	6.709414582949988E-5	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999995583397019	WITHOUT_CLASSIFICATION	4.4166029814393157E-7	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999901698795957	WITHOUT_CLASSIFICATION	9.830120404394268E-6	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.999997405347601	WITHOUT_CLASSIFICATION	2.5946523990473544E-6	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9999762634199495	WITHOUT_CLASSIFICATION	2.373658005046209E-5	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9999994341533477	WITHOUT_CLASSIFICATION	5.65846652360978E-7	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.999999566372778	WITHOUT_CLASSIFICATION	4.3362722202410987E-7	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999631936465228	WITHOUT_CLASSIFICATION	3.680635347725691E-5	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.999999982426861	WITHOUT_CLASSIFICATION	1.7573139071683938E-8	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999991442857159	WITHOUT_CLASSIFICATION	8.55714284168662E-7	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999895892353399	WITHOUT_CLASSIFICATION	1.0410764660107872E-5	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999985692592929	WITHOUT_CLASSIFICATION	1.4307407070485158E-6	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999991020157473	WITHOUT_CLASSIFICATION	8.979842526660723E-7	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999989671906245	WITHOUT_CLASSIFICATION	1.0328093755029266E-6	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999669745525339	WITHOUT_CLASSIFICATION	3.302544746608657E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999972521378316	WITHOUT_CLASSIFICATION	2.747862168387661E-6	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999996103498285	WITHOUT_CLASSIFICATION	3.896501714226295E-7	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999989332200719	WITHOUT_CLASSIFICATION	1.0667799280821073E-6	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999989332200719	WITHOUT_CLASSIFICATION	1.0667799280821073E-6	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999904733273592	WITHOUT_CLASSIFICATION	9.526672640784922E-6	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999995163402327	WITHOUT_CLASSIFICATION	4.836597672979337E-7	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999997854923913	WITHOUT_CLASSIFICATION	2.1450760856845256E-7	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999997854923913	WITHOUT_CLASSIFICATION	2.1450760856845256E-7	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9999573855824612	WITHOUT_CLASSIFICATION	4.261441753884529E-5	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.999998332294321	WITHOUT_CLASSIFICATION	1.6677056789325896E-6	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999968502700893	WITHOUT_CLASSIFICATION	3.1497299105832885E-6	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999991673827093	WITHOUT_CLASSIFICATION	8.326172906997904E-7	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999991673827093	WITHOUT_CLASSIFICATION	8.326172906997904E-7	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999860821078208	WITHOUT_CLASSIFICATION	1.3917892179296884E-5	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999997088066448	WITHOUT_CLASSIFICATION	2.911933551236293E-7	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.999997832423051	WITHOUT_CLASSIFICATION	2.167576949035092E-6	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999604659556132	WITHOUT_CLASSIFICATION	3.95340443869237E-5	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999995702743547	WITHOUT_CLASSIFICATION	4.2972564528141913E-7	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999981818902954	WITHOUT_CLASSIFICATION	1.8181097045997102E-6	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999984426411921	WITHOUT_CLASSIFICATION	1.5573588078582744E-6	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999747852578555	WITHOUT_CLASSIFICATION	2.5214742144492355E-5	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9999992082407664	WITHOUT_CLASSIFICATION	7.917592335019194E-7	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.999990475172956	WITHOUT_CLASSIFICATION	9.524827043989546E-6	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999983269304693	WITHOUT_CLASSIFICATION	1.6730695306515523E-6	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999632770687584	WITHOUT_CLASSIFICATION	3.6722931241684526E-5	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9999987524298333	WITHOUT_CLASSIFICATION	1.247570166694645E-6	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999995189493445	WITHOUT_CLASSIFICATION	4.81050655506271E-7	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9999969923722484	WITHOUT_CLASSIFICATION	3.00762775166074E-6	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999987539186981	WITHOUT_CLASSIFICATION	1.2460813018631995E-6	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999996255465371	WITHOUT_CLASSIFICATION	3.74453462905352E-7	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999857430053076	WITHOUT_CLASSIFICATION	1.4256994692419E-5	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999969302880735	WITHOUT_CLASSIFICATION	3.069711926519234E-6	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.999999913320975	WITHOUT_CLASSIFICATION	8.667902496992178E-8	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9999974444059467	WITHOUT_CLASSIFICATION	2.555594053141352E-6	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9999984465450606	WITHOUT_CLASSIFICATION	1.5534549392753718E-6	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999965996739668	WITHOUT_CLASSIFICATION	3.4003260331290626E-6	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999971658200233	WITHOUT_CLASSIFICATION	2.8341799766633785E-6	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999926820783074	WITHOUT_CLASSIFICATION	7.3179216925234665E-6	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999988043659922	WITHOUT_CLASSIFICATION	1.1956340077862364E-6	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9996757653803224	WITHOUT_CLASSIFICATION	3.242346196774816E-4	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999980586966514	WITHOUT_CLASSIFICATION	1.941303348584831E-6	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.999996559315276	WITHOUT_CLASSIFICATION	3.4406847240845724E-6	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999984052400684	WITHOUT_CLASSIFICATION	1.5947599314463559E-6	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999949791356646	WITHOUT_CLASSIFICATION	5.0208643353605535E-6	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999995189493445	WITHOUT_CLASSIFICATION	4.81050655506271E-7	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999980586966514	WITHOUT_CLASSIFICATION	1.941303348584831E-6	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.999996559315276	WITHOUT_CLASSIFICATION	3.4406847240845724E-6	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999949791356646	WITHOUT_CLASSIFICATION	5.0208643353605535E-6	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999985873871757	WITHOUT_CLASSIFICATION	1.4126128243153334E-6	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9999969114268749	WITHOUT_CLASSIFICATION	3.088573125153955E-6	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999983715691926	WITHOUT_CLASSIFICATION	1.628430807460717E-6	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999974747740143	WITHOUT_CLASSIFICATION	2.525225985686074E-6	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999958287476877	WITHOUT_CLASSIFICATION	4.171252312390482E-6	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999999272444984	WITHOUT_CLASSIFICATION	7.275550157979836E-8	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9999942042614152	WITHOUT_CLASSIFICATION	5.795738584834372E-6	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9999991509477085	WITHOUT_CLASSIFICATION	8.490522914851074E-7	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9999984919494458	WITHOUT_CLASSIFICATION	1.508050554203703E-6	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999133952203259	WITHOUT_CLASSIFICATION	8.660477967409562E-5	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999912405168796	WITHOUT_CLASSIFICATION	8.759483120313681E-6	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999912405168796	WITHOUT_CLASSIFICATION	8.759483120313681E-6	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.99999986644766	WITHOUT_CLASSIFICATION	1.3355234001592572E-7	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999943045386982	WITHOUT_CLASSIFICATION	5.695461301796455E-6	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999994542854738	WITHOUT_CLASSIFICATION	5.457145261664439E-7	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999967998668012	WITHOUT_CLASSIFICATION	3.200133198689437E-6	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999997792164904	WITHOUT_CLASSIFICATION	2.2078350963140614E-7	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999985782480378	WITHOUT_CLASSIFICATION	1.421751962217891E-6	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999384606201678	WITHOUT_CLASSIFICATION	6.153937983226729E-5	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999993302510849	WITHOUT_CLASSIFICATION	6.697489151316617E-7	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999998820243152	WITHOUT_CLASSIFICATION	1.1797568474499229E-7	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999993944317951	WITHOUT_CLASSIFICATION	6.055682048431005E-7	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999995744341573	WITHOUT_CLASSIFICATION	4.255658426319633E-7	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999995632409732	WITHOUT_CLASSIFICATION	4.3675902682953506E-7	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999933932670588	WITHOUT_CLASSIFICATION	6.606732941177199E-6	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9988374659222895	WITHOUT_CLASSIFICATION	0.001162534077710547	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9999625878390105	WITHOUT_CLASSIFICATION	3.741216098950044E-5	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9991735365804308	WITHOUT_CLASSIFICATION	8.264634195692364E-4	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9999936993793722	WITHOUT_CLASSIFICATION	6.300620627855563E-6	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9999961860220975	WITHOUT_CLASSIFICATION	3.8139779025409787E-6	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9999943535725797	WITHOUT_CLASSIFICATION	5.6464274203344795E-6	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9998890904980605	WITHOUT_CLASSIFICATION	1.109095019395444E-4	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9999889594591249	WITHOUT_CLASSIFICATION	1.1040540875122689E-5	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9999937033818157	WITHOUT_CLASSIFICATION	6.296618184229985E-6	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999699798314949	WITHOUT_CLASSIFICATION	3.0020168505156403E-5	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9999810711144843	WITHOUT_CLASSIFICATION	1.892888551570802E-5	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999992531920057	WITHOUT_CLASSIFICATION	7.468079942827411E-7	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9999905049433655	WITHOUT_CLASSIFICATION	9.49505663447488E-6	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.999999976067299	WITHOUT_CLASSIFICATION	2.393270103418777E-8	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999996913525041	WITHOUT_CLASSIFICATION	3.086474958644944E-7	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.9999981709301556	WITHOUT_CLASSIFICATION	1.8290698444345839E-6	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999987110172035	WITHOUT_CLASSIFICATION	1.2889827965926443E-6	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999988637420425	WITHOUT_CLASSIFICATION	1.1362579574731711E-6	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9999989374966862	WITHOUT_CLASSIFICATION	1.062503313759893E-6	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999993102900865	WITHOUT_CLASSIFICATION	6.897099134391635E-7	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.999998963374275	WITHOUT_CLASSIFICATION	1.0366257250689597E-6	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999976400008673	WITHOUT_CLASSIFICATION	2.359999132680601E-6	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999991573729139	WITHOUT_CLASSIFICATION	8.426270860445988E-7	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999990181391704	WITHOUT_CLASSIFICATION	9.818608296306181E-7	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999983824137325	WITHOUT_CLASSIFICATION	1.61758626759392E-6	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999957301560556	WITHOUT_CLASSIFICATION	4.269843944447581E-6	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999992827779026	WITHOUT_CLASSIFICATION	7.1722209742709E-7	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999989097877457	WITHOUT_CLASSIFICATION	1.0902122542909704E-6	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9997386802168939	WITHOUT_CLASSIFICATION	2.613197831060792E-4	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.999995911043799	WITHOUT_CLASSIFICATION	4.088956200972285E-6	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999999235518202	WITHOUT_CLASSIFICATION	7.644817979290694E-8	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999891896897336	WITHOUT_CLASSIFICATION	1.0810310266452392E-5	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999984966443777	WITHOUT_CLASSIFICATION	1.5033556223460333E-6	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999998773357216	WITHOUT_CLASSIFICATION	1.226642784672382E-7	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999999587232044	WITHOUT_CLASSIFICATION	4.127679557595349E-8	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999998913000233	WITHOUT_CLASSIFICATION	1.0869997669643728E-7	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.999999701566778	WITHOUT_CLASSIFICATION	2.9843322210174294E-7	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.99999708586176	WITHOUT_CLASSIFICATION	2.9141382399700066E-6	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999863385679887	WITHOUT_CLASSIFICATION	1.366143201139874E-5	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999978744257244	WITHOUT_CLASSIFICATION	2.12557427559239E-6	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999996531016013	WITHOUT_CLASSIFICATION	3.4689839860806365E-7	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.999999067772891	WITHOUT_CLASSIFICATION	9.322271089186101E-7	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999970293379077	WITHOUT_CLASSIFICATION	2.9706620922979526E-6	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999987263489285	WITHOUT_CLASSIFICATION	1.2736510715314056E-6	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.999965106426428	WITHOUT_CLASSIFICATION	3.4893573571954214E-5	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.9993435275451781	WITHOUT_CLASSIFICATION	6.564724548220285E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9996904253822896	WITHOUT_CLASSIFICATION	3.095746177103992E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9996904253822896	WITHOUT_CLASSIFICATION	3.095746177103992E-4	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999988538377333	WITHOUT_CLASSIFICATION	1.1461622666391692E-6	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999995833575775	WITHOUT_CLASSIFICATION	4.1664242241899893E-7	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999999105853183	WITHOUT_CLASSIFICATION	8.941468170870309E-7	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999968443567939	WITHOUT_CLASSIFICATION	3.1556432061180782E-6	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999972242113835	WITHOUT_CLASSIFICATION	2.7757886164681525E-6	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999973375714679	WITHOUT_CLASSIFICATION	2.6624285320778113E-6	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999223070422041	WITHOUT_CLASSIFICATION	7.769295779595628E-5	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999910651785833	WITHOUT_CLASSIFICATION	8.934821416600416E-6	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999991701243804	WITHOUT_CLASSIFICATION	8.298756195549449E-7	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999825865180307	WITHOUT_CLASSIFICATION	1.7413481969299988E-5	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.999999226219318	WITHOUT_CLASSIFICATION	7.737806819821602E-7	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9999995410052288	WITHOUT_CLASSIFICATION	4.5899477120322465E-7	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999660407024644	WITHOUT_CLASSIFICATION	3.395929753558243E-5	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.99938487341567	WITHOUT_CLASSIFICATION	6.151265843299856E-4	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999971723765558	WITHOUT_CLASSIFICATION	2.8276234440831974E-6	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999979890937338	WITHOUT_CLASSIFICATION	2.010906266122842E-6	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9999706981323201	WITHOUT_CLASSIFICATION	2.930186767978531E-5	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999998260392124	WITHOUT_CLASSIFICATION	1.739607875970893E-7	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999974823461486	WITHOUT_CLASSIFICATION	2.5176538514002947E-6	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999948826895939	WITHOUT_CLASSIFICATION	5.11731040607007E-6	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999994997134984	WITHOUT_CLASSIFICATION	5.002865015203439E-7	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999944880601705	WITHOUT_CLASSIFICATION	5.511939829437352E-6	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9996070479617053	WITHOUT_CLASSIFICATION	3.929520382946693E-4	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999179389589856	WITHOUT_CLASSIFICATION	8.206104101436798E-5	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999997803898377	WITHOUT_CLASSIFICATION	2.1961016226855465E-7	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9998679461280165	WITHOUT_CLASSIFICATION	1.320538719834432E-4	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999918121464354	WITHOUT_CLASSIFICATION	8.187853564519846E-6	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999998901679215	WITHOUT_CLASSIFICATION	1.0983207848188263E-7	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999969989704586	WITHOUT_CLASSIFICATION	3.001029541450405E-6	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999999965669017	WITHOUT_CLASSIFICATION	3.4330982968580094E-9	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.999993574037816	WITHOUT_CLASSIFICATION	6.425962184086166E-6	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999985974435927	WITHOUT_CLASSIFICATION	1.4025564073652976E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999978809122729	WITHOUT_CLASSIFICATION	2.1190877270507273E-6	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999739557276696	WITHOUT_CLASSIFICATION	2.604427233048643E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999978809122729	WITHOUT_CLASSIFICATION	2.1190877270507273E-6	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999965730022392	WITHOUT_CLASSIFICATION	3.426997760705977E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999997834746537	WITHOUT_CLASSIFICATION	2.1652534633975868E-7	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999997834746537	WITHOUT_CLASSIFICATION	2.1652534633975868E-7	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999997834746537	WITHOUT_CLASSIFICATION	2.1652534633975868E-7	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999979821489675	WITHOUT_CLASSIFICATION	2.0178510325121157E-6	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999979821489675	WITHOUT_CLASSIFICATION	2.0178510325121157E-6	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999636313187675	WITHOUT_CLASSIFICATION	3.636868123234729E-5	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.999999398957426	WITHOUT_CLASSIFICATION	6.010425739378581E-7	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999942666913202	WITHOUT_CLASSIFICATION	5.733308679732632E-6	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9998445872420253	WITHOUT_CLASSIFICATION	1.554127579746175E-4	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.999996548191626	WITHOUT_CLASSIFICATION	3.4518083740444208E-6	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999805695332343	WITHOUT_CLASSIFICATION	1.943046676562572E-5	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999957450279511	WITHOUT_CLASSIFICATION	4.254972048888735E-6	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999892624828332	WITHOUT_CLASSIFICATION	1.0737517166701646E-5	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999996927030143	WITHOUT_CLASSIFICATION	3.0729698573464457E-7	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999807315174191	WITHOUT_CLASSIFICATION	1.926848258094532E-5	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999900420340541	WITHOUT_CLASSIFICATION	9.95796594603826E-6	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999927181500012	WITHOUT_CLASSIFICATION	7.2818499988542325E-6	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999971263367511	WITHOUT_CLASSIFICATION	2.873663248935655E-6	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9999986556412376	WITHOUT_CLASSIFICATION	1.3443587623966824E-6	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999992105493115	WITHOUT_CLASSIFICATION	7.89450688409343E-7	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9999985759646186	WITHOUT_CLASSIFICATION	1.4240353814219134E-6	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999997402121715	WITHOUT_CLASSIFICATION	2.59787828513194E-7	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999963652292645	WITHOUT_CLASSIFICATION	3.63477073552376E-6	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999963652292645	WITHOUT_CLASSIFICATION	3.63477073552376E-6	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9999958155917834	WITHOUT_CLASSIFICATION	4.184408216581148E-6	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999983374257655	WITHOUT_CLASSIFICATION	1.6625742344510708E-6	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999983374257655	WITHOUT_CLASSIFICATION	1.6625742344510708E-6	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999973681415292	WITHOUT_CLASSIFICATION	2.6318584707897173E-6	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.999997757600538	WITHOUT_CLASSIFICATION	2.242399462022412E-6	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9996656709373067	WITHOUT_CLASSIFICATION	3.3432906269321555E-4	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9999945177512067	WITHOUT_CLASSIFICATION	5.482248793313983E-6	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9999969457265477	WITHOUT_CLASSIFICATION	3.054273452166561E-6	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999969296268704	WITHOUT_CLASSIFICATION	3.0703731295561187E-6	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9999981017559768	WITHOUT_CLASSIFICATION	1.8982440230712387E-6	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999943780373635	WITHOUT_CLASSIFICATION	5.621962636511877E-6	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999966010013943	WITHOUT_CLASSIFICATION	3.3989986056829647E-6	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.999975446528419	WITHOUT_CLASSIFICATION	2.4553471581057218E-5	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999724860616132	WITHOUT_CLASSIFICATION	2.7513938386740734E-5	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999644619967429	WITHOUT_CLASSIFICATION	3.553800325705338E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999874323316944	WITHOUT_CLASSIFICATION	1.2567668305627045E-5	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999988194964154	WITHOUT_CLASSIFICATION	1.1805035845924608E-6	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999892624828332	WITHOUT_CLASSIFICATION	1.0737517166701646E-5	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9998649583050211	WITHOUT_CLASSIFICATION	1.350416949788998E-4	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999898746433363	WITHOUT_CLASSIFICATION	1.0125356663600103E-5	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9998415344825471	WITHOUT_CLASSIFICATION	1.5846551745286297E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9998415344825471	WITHOUT_CLASSIFICATION	1.5846551745286297E-4	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999982338632724	WITHOUT_CLASSIFICATION	1.7661367276202446E-6	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999994051547314	WITHOUT_CLASSIFICATION	5.948452686690614E-7	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999990535350596	WITHOUT_CLASSIFICATION	9.464649403471647E-7	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9999961572638592	WITHOUT_CLASSIFICATION	3.842736140840373E-6	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999997627808564	WITHOUT_CLASSIFICATION	2.3721914361406688E-7	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999988514330307	WITHOUT_CLASSIFICATION	1.1485669693531107E-6	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999995358669398	WITHOUT_CLASSIFICATION	4.641330601860236E-7	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999998524078481	WITHOUT_CLASSIFICATION	1.4759215202275068E-7	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999990353421825	WITHOUT_CLASSIFICATION	9.64657817508946E-7	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999999209301511	WITHOUT_CLASSIFICATION	7.906984883251543E-8	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999476932990352	WITHOUT_CLASSIFICATION	5.230670096482201E-5	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999484863506118	WITHOUT_CLASSIFICATION	5.151364938809277E-5	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999643320151104	WITHOUT_CLASSIFICATION	3.5667984889685916E-5	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999947137881467	WITHOUT_CLASSIFICATION	5.286211853192331E-6	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999999008711387	WITHOUT_CLASSIFICATION	9.912886136499482E-8	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999955713124242	WITHOUT_CLASSIFICATION	4.4286875758132465E-6	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999746987990121	WITHOUT_CLASSIFICATION	2.5301200987882784E-5	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999924602370388	WITHOUT_CLASSIFICATION	7.5397629612896954E-6	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999905914010053	WITHOUT_CLASSIFICATION	9.408598994630342E-6	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999998090492974	WITHOUT_CLASSIFICATION	1.9095070258193054E-7	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999887521950737	WITHOUT_CLASSIFICATION	1.124780492638669E-5	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999637581606673	WITHOUT_CLASSIFICATION	3.6241839332729716E-5	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999984807606446	WITHOUT_CLASSIFICATION	1.5192393554374234E-6	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999996795649856	WITHOUT_CLASSIFICATION	3.2043501440747975E-7	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999995301384306	WITHOUT_CLASSIFICATION	4.6986156942823214E-7	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999974289157945	WITHOUT_CLASSIFICATION	2.571084205512222E-6	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999996552363202	WITHOUT_CLASSIFICATION	3.447636797527482E-7	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999976973850626	WITHOUT_CLASSIFICATION	2.3026149374327505E-6	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999995086557422	WITHOUT_CLASSIFICATION	4.913442577815795E-7	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.999999998354585	WITHOUT_CLASSIFICATION	1.6454149926988202E-9	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999983686777402	WITHOUT_CLASSIFICATION	1.631322259809931E-6	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9933503772909935	WITHOUT_CLASSIFICATION	0.006649622709006552	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999987035822357	WITHOUT_CLASSIFICATION	1.2964177642897751E-6	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999998085162697	WITHOUT_CLASSIFICATION	1.9148373030116298E-7	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999967959441173	WITHOUT_CLASSIFICATION	3.204055882795426E-6	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.9999828005850233	WITHOUT_CLASSIFICATION	1.719941497671387E-5	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999976973850626	WITHOUT_CLASSIFICATION	2.3026149374327505E-6	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999527947743	WITHOUT_CLASSIFICATION	4.7205225801152594E-8	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999967959441173	WITHOUT_CLASSIFICATION	3.204055882795426E-6	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999999224326727	WITHOUT_CLASSIFICATION	7.756732741851338E-8	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999982940675556	WITHOUT_CLASSIFICATION	1.7059324443759096E-6	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999941225515517	WITHOUT_CLASSIFICATION	5.877448448277892E-6	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999974111346299	WITHOUT_CLASSIFICATION	2.5888653701679923E-6	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999957917611257	WITHOUT_CLASSIFICATION	4.20823887422363E-6	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.999998860504108	WITHOUT_CLASSIFICATION	1.1394958919808096E-6	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.999998860504108	WITHOUT_CLASSIFICATION	1.1394958919808096E-6	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9999854300857232	WITHOUT_CLASSIFICATION	1.4569914276916569E-5	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999966554382582	WITHOUT_CLASSIFICATION	3.3445617416640206E-6	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9991789745343146	WITHOUT_CLASSIFICATION	8.210254656855107E-4	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9991789745343146	WITHOUT_CLASSIFICATION	8.210254656855107E-4	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999920346006523	WITHOUT_CLASSIFICATION	7.965399347705682E-6	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9991677623064238	WITHOUT_CLASSIFICATION	8.32237693576105E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9997460547288828	WITHOUT_CLASSIFICATION	2.5394527111723364E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9997460547288828	WITHOUT_CLASSIFICATION	2.5394527111723364E-4	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999886451447239	WITHOUT_CLASSIFICATION	1.1354855276009413E-5	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.999996921297544	WITHOUT_CLASSIFICATION	3.0787024559678118E-6	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999974074324296	WITHOUT_CLASSIFICATION	2.592567570464339E-6	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999997436545754	WITHOUT_CLASSIFICATION	2.563454246130065E-7	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9998420881946961	WITHOUT_CLASSIFICATION	1.5791180530386445E-4	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999729044544621	WITHOUT_CLASSIFICATION	2.709554553792988E-5	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999991633672376	WITHOUT_CLASSIFICATION	8.366327624313242E-7	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999658780001905	WITHOUT_CLASSIFICATION	3.41219998095524E-5	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.999995322889037	WITHOUT_CLASSIFICATION	4.67711096296632E-6	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999923208582171	WITHOUT_CLASSIFICATION	7.679141782855735E-6	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9999092496247707	WITHOUT_CLASSIFICATION	9.075037522923291E-5	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999926972709131	WITHOUT_CLASSIFICATION	7.302729086939052E-6	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999995545154263	WITHOUT_CLASSIFICATION	4.4548457357283055E-7	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999985621758842	WITHOUT_CLASSIFICATION	1.4378241157336097E-6	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999987581191843	WITHOUT_CLASSIFICATION	1.2418808157219716E-6	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999976054542226	WITHOUT_CLASSIFICATION	2.3945457775712734E-6	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999991217837421	WITHOUT_CLASSIFICATION	8.78216257863912E-7	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999961086080811	WITHOUT_CLASSIFICATION	3.891391918852024E-6	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999977372203931	WITHOUT_CLASSIFICATION	2.262779606943958E-6	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9997826279837431	WITHOUT_CLASSIFICATION	2.1737201625692898E-4	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999990623151406	WITHOUT_CLASSIFICATION	9.376848595011234E-7	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999955751345466	WITHOUT_CLASSIFICATION	4.424865453383314E-6	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999992440134859	WITHOUT_CLASSIFICATION	7.559865140312459E-7	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999773870288837	WITHOUT_CLASSIFICATION	2.2612971116251243E-5	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.999988943780503	WITHOUT_CLASSIFICATION	1.1056219497058095E-5	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999909154955235	WITHOUT_CLASSIFICATION	9.084504476383142E-6	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999991285953819	WITHOUT_CLASSIFICATION	8.714046182304676E-7	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.999996244897306	WITHOUT_CLASSIFICATION	3.755102693927474E-6	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999983490058024	WITHOUT_CLASSIFICATION	1.6509941975967143E-6	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999983490058024	WITHOUT_CLASSIFICATION	1.6509941975967143E-6	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999999630366639	WITHOUT_CLASSIFICATION	3.696333605484492E-8	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999999570662667	WITHOUT_CLASSIFICATION	4.293373326524793E-8	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999973035404591	WITHOUT_CLASSIFICATION	2.69645954078857E-6	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999462621041973	WITHOUT_CLASSIFICATION	5.3737895802606034E-5	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999752374746456	WITHOUT_CLASSIFICATION	2.4762525354530384E-5	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9999945527267751	WITHOUT_CLASSIFICATION	5.447273224979079E-6	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999738323197982	WITHOUT_CLASSIFICATION	2.6167680201906744E-5	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999992839223959	WITHOUT_CLASSIFICATION	7.160776040151617E-7	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999986777354263	WITHOUT_CLASSIFICATION	1.3222645737596074E-6	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999990885305929	WITHOUT_CLASSIFICATION	9.114694071420168E-7	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999917623181372	WITHOUT_CLASSIFICATION	8.237681862773215E-6	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999963730061439	WITHOUT_CLASSIFICATION	3.626993856085435E-6	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999756557849558	WITHOUT_CLASSIFICATION	2.4344215044267928E-5	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999561237278844	WITHOUT_CLASSIFICATION	4.387627211554377E-5	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999996113295206	WITHOUT_CLASSIFICATION	3.88670479413545E-7	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999997287398136	WITHOUT_CLASSIFICATION	2.7126018639080024E-7	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9999993172099029	WITHOUT_CLASSIFICATION	6.827900970873089E-7	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999976618131498	WITHOUT_CLASSIFICATION	2.338186850267399E-6	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9999913638220282	WITHOUT_CLASSIFICATION	8.63617797177244E-6	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999997982047694	WITHOUT_CLASSIFICATION	2.0179523049521194E-7	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999994129936481	WITHOUT_CLASSIFICATION	5.870063519317549E-7	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999216001786122	WITHOUT_CLASSIFICATION	7.839982138781186E-5	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.999998515888083	WITHOUT_CLASSIFICATION	1.4841119170282558E-6	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999977890965883	WITHOUT_CLASSIFICATION	2.2109034117542406E-6	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999990589778406	WITHOUT_CLASSIFICATION	9.410221595137302E-7	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999931712207109	WITHOUT_CLASSIFICATION	6.828779289133102E-6	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999997278926858	WITHOUT_CLASSIFICATION	2.721073142665991E-7	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999973977440441	WITHOUT_CLASSIFICATION	2.602255955919861E-6	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9999965715857992	WITHOUT_CLASSIFICATION	3.4284142008087707E-6	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.999977642483668	WITHOUT_CLASSIFICATION	2.23575163319854E-5	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999970485072684	WITHOUT_CLASSIFICATION	2.951492731436264E-6	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999987684771564	WITHOUT_CLASSIFICATION	1.2315228436071138E-6	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999865112272341	WITHOUT_CLASSIFICATION	1.3488772765915946E-5	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9999995904391066	WITHOUT_CLASSIFICATION	4.095608934888678E-7	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999945280962883	WITHOUT_CLASSIFICATION	5.471903711755176E-6	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999970261417693	WITHOUT_CLASSIFICATION	2.973858230623746E-6	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999264262545441	WITHOUT_CLASSIFICATION	7.357374545597834E-5	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999435156017825	WITHOUT_CLASSIFICATION	5.64843982174389E-5	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999990402599462	WITHOUT_CLASSIFICATION	9.597400537054838E-7	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999999829306726	WITHOUT_CLASSIFICATION	1.7069327346191928E-8	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999997108464626	WITHOUT_CLASSIFICATION	2.8915353742254777E-7	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999942182897912	WITHOUT_CLASSIFICATION	5.781710208827798E-6	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9997715808556251	WITHOUT_CLASSIFICATION	2.2841914437481855E-4	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9997715808556251	WITHOUT_CLASSIFICATION	2.2841914437481855E-4	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999838882801553	WITHOUT_CLASSIFICATION	1.611171984467192E-5	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.999999760094733	WITHOUT_CLASSIFICATION	2.399052669194868E-7	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9999395433237421	WITHOUT_CLASSIFICATION	6.045667625774416E-5	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999965676729928	WITHOUT_CLASSIFICATION	3.4323270071539173E-6	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999966025364184	WITHOUT_CLASSIFICATION	3.397463581663265E-6	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999969287117837	WITHOUT_CLASSIFICATION	3.0712882164025255E-6	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999981188096622	WITHOUT_CLASSIFICATION	1.8811903378422238E-6	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999891511794466	WITHOUT_CLASSIFICATION	1.0848820553382852E-5	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999976241485502	WITHOUT_CLASSIFICATION	2.3758514497365086E-6	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9999893187707545	WITHOUT_CLASSIFICATION	1.0681229245592204E-5	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9999980454100635	WITHOUT_CLASSIFICATION	1.9545899363555732E-6	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.9999149852531186	WITHOUT_CLASSIFICATION	8.501474688139398E-5	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9999975727714336	WITHOUT_CLASSIFICATION	2.4272285663369877E-6	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999968029963169	WITHOUT_CLASSIFICATION	3.1970036831033964E-6	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999741840585966	WITHOUT_CLASSIFICATION	2.581594140337977E-5	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9999918225110763	WITHOUT_CLASSIFICATION	8.177488923653364E-6	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999890930336014	WITHOUT_CLASSIFICATION	1.090696639865222E-5	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9999928171701168	WITHOUT_CLASSIFICATION	7.182829883207775E-6	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999745400232924	WITHOUT_CLASSIFICATION	2.5459976707479202E-5	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.999995309658653	WITHOUT_CLASSIFICATION	4.69034134695749E-6	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999828467436906	WITHOUT_CLASSIFICATION	1.7153256309441617E-5	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999129843442551	WITHOUT_CLASSIFICATION	8.701565574498711E-5	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999960438102654	WITHOUT_CLASSIFICATION	3.956189734589374E-6	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999937961855021	WITHOUT_CLASSIFICATION	6.2038144979934606E-6	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999972203082251	WITHOUT_CLASSIFICATION	2.779691774917311E-6	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999913812187333	WITHOUT_CLASSIFICATION	8.618781266681973E-6	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999942236670408	WITHOUT_CLASSIFICATION	5.776332959102041E-6	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999504857942342	WITHOUT_CLASSIFICATION	4.951420576582148E-5	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999944947805154	WITHOUT_CLASSIFICATION	5.505219484622281E-6	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9999581750411657	WITHOUT_CLASSIFICATION	4.1824958834322695E-5	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999970019414544	WITHOUT_CLASSIFICATION	2.9980585457017533E-6	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999972829218057	WITHOUT_CLASSIFICATION	2.7170781943697E-6	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999702849413274	WITHOUT_CLASSIFICATION	2.9715058672647042E-5	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9999550355221904	WITHOUT_CLASSIFICATION	4.496447780958127E-5	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999435156017825	WITHOUT_CLASSIFICATION	5.64843982174389E-5	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999997598197821	WITHOUT_CLASSIFICATION	2.4018021793690364E-7	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999996464134648	WITHOUT_CLASSIFICATION	3.5358653511057174E-7	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999996464134648	WITHOUT_CLASSIFICATION	3.5358653511057174E-7	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999998574158736	WITHOUT_CLASSIFICATION	1.4258412639381305E-7	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999988558298922	WITHOUT_CLASSIFICATION	1.1441701078304746E-6	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999855737391747	WITHOUT_CLASSIFICATION	1.4426260825275165E-5	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.9999837366622032	WITHOUT_CLASSIFICATION	1.6263337796883357E-5	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9999489477759117	WITHOUT_CLASSIFICATION	5.105222408832916E-5	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9999557454987268	WITHOUT_CLASSIFICATION	4.4254501273272396E-5	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9999670859795562	WITHOUT_CLASSIFICATION	3.291402044388789E-5	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9999433863272799	WITHOUT_CLASSIFICATION	5.661367272022258E-5	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.999964935536168	WITHOUT_CLASSIFICATION	3.5064463832003854E-5	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9999753291188732	WITHOUT_CLASSIFICATION	2.4670881126852443E-5	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9999551427963814	WITHOUT_CLASSIFICATION	4.485720361866877E-5	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9999329321762614	WITHOUT_CLASSIFICATION	6.706782373851442E-5	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9999527777828837	WITHOUT_CLASSIFICATION	4.722221711641391E-5	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999981807785133	WITHOUT_CLASSIFICATION	1.8192214866618924E-6	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.999999881052435	WITHOUT_CLASSIFICATION	1.1894756506374316E-7	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.999975453523231	WITHOUT_CLASSIFICATION	2.454647676893423E-5	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9999398308335258	WITHOUT_CLASSIFICATION	6.01691664742751E-5	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9998901782061642	WITHOUT_CLASSIFICATION	1.0982179383575914E-4	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9999569410846999	WITHOUT_CLASSIFICATION	4.305891529998088E-5	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9999697042594663	WITHOUT_CLASSIFICATION	3.029574053372171E-5	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9999571458606579	WITHOUT_CLASSIFICATION	4.2854139342201914E-5	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9999442359036755	WITHOUT_CLASSIFICATION	5.576409632439133E-5	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999969273456205	WITHOUT_CLASSIFICATION	3.072654379456703E-6	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999899804924343	WITHOUT_CLASSIFICATION	1.0019507565660395E-5	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999999219199395	WITHOUT_CLASSIFICATION	7.808006062834173E-8	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999336415746332	WITHOUT_CLASSIFICATION	6.635842536687255E-5	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999956755956149	WITHOUT_CLASSIFICATION	4.3244043851808955E-6	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.999995901934698	WITHOUT_CLASSIFICATION	4.098065301926168E-6	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999933084815104	WITHOUT_CLASSIFICATION	6.691518489727905E-6	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999973286947275	WITHOUT_CLASSIFICATION	2.6713052726258974E-6	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9999998084987468	WITHOUT_CLASSIFICATION	1.9150125327431978E-7	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999945057865339	WITHOUT_CLASSIFICATION	5.494213466047848E-6	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9999985110363708	WITHOUT_CLASSIFICATION	1.4889636292076183E-6	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999995864948698	WITHOUT_CLASSIFICATION	4.1350513015303584E-7	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999947278818876	WITHOUT_CLASSIFICATION	5.272118112353234E-6	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999759723078909	WITHOUT_CLASSIFICATION	2.4027692109005742E-5	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999960950195373	WITHOUT_CLASSIFICATION	3.904980462684131E-6	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9999336415746332	WITHOUT_CLASSIFICATION	6.635842536687255E-5	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999956755956149	WITHOUT_CLASSIFICATION	4.3244043851808955E-6	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.999995901934698	WITHOUT_CLASSIFICATION	4.098065301926168E-6	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999973286947275	WITHOUT_CLASSIFICATION	2.6713052726258974E-6	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999701010832582	WITHOUT_CLASSIFICATION	2.9898916741698762E-5	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999991682229471	WITHOUT_CLASSIFICATION	8.317770529054563E-7	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999752432301537	WITHOUT_CLASSIFICATION	2.4756769846198737E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999827306937993	WITHOUT_CLASSIFICATION	1.726930620071582E-5	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999975662589032	WITHOUT_CLASSIFICATION	2.433741096745835E-6	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999990594580171	WITHOUT_CLASSIFICATION	9.405419828068638E-7	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999991429801369	WITHOUT_CLASSIFICATION	8.570198631471557E-7	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999947033185114	WITHOUT_CLASSIFICATION	5.29668148864409E-6	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999935239480052	WITHOUT_CLASSIFICATION	6.476051994805145E-6	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999975758952281	WITHOUT_CLASSIFICATION	2.424104771903735E-6	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999978037470837	WITHOUT_CLASSIFICATION	2.1962529163342527E-6	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999927362919911	WITHOUT_CLASSIFICATION	7.2637080088156265E-6	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999939574818062	WITHOUT_CLASSIFICATION	6.042518193800583E-6	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999965139241519	WITHOUT_CLASSIFICATION	3.4860758481695476E-6	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9999971767640801	WITHOUT_CLASSIFICATION	2.82323591987075E-6	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9999812784467009	WITHOUT_CLASSIFICATION	1.8721553299082572E-5	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999966873077221	WITHOUT_CLASSIFICATION	3.312692277907563E-6	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9992742925341533	WITHOUT_CLASSIFICATION	7.257074658467339E-4	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.999998570701892	WITHOUT_CLASSIFICATION	1.429298107999088E-6	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999960950195373	WITHOUT_CLASSIFICATION	3.904980462684131E-6	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999991682229471	WITHOUT_CLASSIFICATION	8.317770529054563E-7	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999752432301537	WITHOUT_CLASSIFICATION	2.4756769846198737E-5	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999975662589032	WITHOUT_CLASSIFICATION	2.433741096745835E-6	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999990594580171	WITHOUT_CLASSIFICATION	9.405419828068638E-7	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999991429801369	WITHOUT_CLASSIFICATION	8.570198631471557E-7	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999947033185114	WITHOUT_CLASSIFICATION	5.29668148864409E-6	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999988779553849	WITHOUT_CLASSIFICATION	1.1220446150367112E-6	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.999998493342096	WITHOUT_CLASSIFICATION	1.5066579039982361E-6	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999982277375918	WITHOUT_CLASSIFICATION	1.7722624081958198E-6	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999520226887	WITHOUT_CLASSIFICATION	4.797731148845264E-8	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999889097295703	WITHOUT_CLASSIFICATION	1.109027042968609E-5	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999889097295703	WITHOUT_CLASSIFICATION	1.109027042968609E-5	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9999994560018541	WITHOUT_CLASSIFICATION	5.439981458238132E-7	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999939587849346	WITHOUT_CLASSIFICATION	6.0412150653704174E-6	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999989672763009	WITHOUT_CLASSIFICATION	1.032723699101728E-6	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999991321465271	WITHOUT_CLASSIFICATION	8.678534727944783E-7	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999878746706735	WITHOUT_CLASSIFICATION	1.2125329326515563E-5	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999849004444946	WITHOUT_CLASSIFICATION	1.50995555052556E-5	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9999985997746408	WITHOUT_CLASSIFICATION	1.400225359125947E-6	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999990251351469	WITHOUT_CLASSIFICATION	9.748648531350256E-7	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999987992408965	WITHOUT_CLASSIFICATION	1.2007591033832445E-6	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.999809619052498	WITHOUT_CLASSIFICATION	1.9038094750204655E-4	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9994996807566913	WITHOUT_CLASSIFICATION	5.003192433088296E-4	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9993615082657942	WITHOUT_CLASSIFICATION	6.384917342058832E-4	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999944293035052	WITHOUT_CLASSIFICATION	5.570696494778307E-6	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999967651670396	WITHOUT_CLASSIFICATION	3.234832960494821E-6	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999977793990763	WITHOUT_CLASSIFICATION	2.220600923795856E-6	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.999994272331893	WITHOUT_CLASSIFICATION	5.727668107051088E-6	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9999590581241401	WITHOUT_CLASSIFICATION	4.0941875859827556E-5	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999180735137716	WITHOUT_CLASSIFICATION	8.192648622847055E-5	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999681575404826	WITHOUT_CLASSIFICATION	3.184245951735051E-5	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999976759869806	WITHOUT_CLASSIFICATION	2.3240130193301315E-6	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9831741571108138	WITHOUT_CLASSIFICATION	0.016825842889186194	IMPLEMENTATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999966024958894	WITHOUT_CLASSIFICATION	3.397504110704246E-6	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999995013302391	WITHOUT_CLASSIFICATION	4.986697609735857E-7	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7343402106225897	IMPLEMENTATION	0.2656597893774103	WITHOUT_CLASSIFICATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999965002510226	WITHOUT_CLASSIFICATION	3.4997489774488743E-6	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999996421871846	WITHOUT_CLASSIFICATION	3.578128153737456E-7	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.99999912211305	WITHOUT_CLASSIFICATION	8.778869499713435E-7	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999996907295183	WITHOUT_CLASSIFICATION	3.0927048164226735E-7	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9999961045191834	WITHOUT_CLASSIFICATION	3.8954808165731085E-6	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999965002510226	WITHOUT_CLASSIFICATION	3.4997489774488743E-6	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999996421871846	WITHOUT_CLASSIFICATION	3.578128153737456E-7	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999967651670396	WITHOUT_CLASSIFICATION	3.234832960494821E-6	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999925068786012	WITHOUT_CLASSIFICATION	7.493121398875916E-6	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999966744147422	WITHOUT_CLASSIFICATION	3.325585257745884E-6	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999974766957717	WITHOUT_CLASSIFICATION	2.523304228230383E-6	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9998006973177143	WITHOUT_CLASSIFICATION	1.9930268228567655E-4	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999927525528415	WITHOUT_CLASSIFICATION	7.247447158532807E-6	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.999997718985763	WITHOUT_CLASSIFICATION	2.2810142370335477E-6	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999143905028612	WITHOUT_CLASSIFICATION	8.560949713883711E-5	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999929934529492	WITHOUT_CLASSIFICATION	7.006547050728953E-6	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9985162640140065	WITHOUT_CLASSIFICATION	0.001483735985993406	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999995909540598	WITHOUT_CLASSIFICATION	4.0904594026902943E-7	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999990980479756	WITHOUT_CLASSIFICATION	9.019520243501498E-7	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999968131835916	WITHOUT_CLASSIFICATION	3.1868164084409975E-6	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.999999903212382	WITHOUT_CLASSIFICATION	9.678761800285235E-8	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999999745208175	WITHOUT_CLASSIFICATION	2.5479182525297032E-8	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999999799923327	WITHOUT_CLASSIFICATION	2.0007667361729264E-8	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999998169417863	WITHOUT_CLASSIFICATION	1.8305821361891512E-7	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999707471315419	WITHOUT_CLASSIFICATION	2.9252868458098892E-5	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999649818770121	WITHOUT_CLASSIFICATION	3.501812298789722E-5	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9995133182605968	WITHOUT_CLASSIFICATION	4.8668173940325947E-4	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999974906743364	WITHOUT_CLASSIFICATION	2.5093256635445718E-6	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999993649565851	WITHOUT_CLASSIFICATION	6.350434148313416E-7	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999995124266938	WITHOUT_CLASSIFICATION	4.875733062869634E-7	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999558208588286	WITHOUT_CLASSIFICATION	4.4179141171346265E-5	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999985904034729	WITHOUT_CLASSIFICATION	1.4095965271468995E-6	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999997894128771	WITHOUT_CLASSIFICATION	2.1058712285361166E-7	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999989207662563	WITHOUT_CLASSIFICATION	1.079233743708862E-6	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9999354042832933	WITHOUT_CLASSIFICATION	6.459571670668678E-5	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9995120477510139	WITHOUT_CLASSIFICATION	4.8795224898605193E-4	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999248155573607	WITHOUT_CLASSIFICATION	7.518444263934523E-5	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999999722766398	WITHOUT_CLASSIFICATION	2.7723360224240086E-8	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999987906294264	WITHOUT_CLASSIFICATION	1.209370573610283E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998450797871391	WITHOUT_CLASSIFICATION	1.549202128609879E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998450797871391	WITHOUT_CLASSIFICATION	1.549202128609879E-4	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999944293035052	WITHOUT_CLASSIFICATION	5.570696494778307E-6	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999998913448465	WITHOUT_CLASSIFICATION	1.0865515346033305E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.996931766858317	WITHOUT_CLASSIFICATION	0.0030682331416829614	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999962540571664	WITHOUT_CLASSIFICATION	3.7459428337097753E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999970083735648	WITHOUT_CLASSIFICATION	2.991626435198124E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999970083735648	WITHOUT_CLASSIFICATION	2.991626435198124E-6	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999925704190585	WITHOUT_CLASSIFICATION	7.4295809414900824E-6	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9998332486317292	WITHOUT_CLASSIFICATION	1.6675136827075908E-4	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999986153847692	WITHOUT_CLASSIFICATION	1.3846152308500397E-6	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.999998043946796	WITHOUT_CLASSIFICATION	1.956053203958991E-6	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999998598904389	WITHOUT_CLASSIFICATION	1.4010956098501966E-7	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999993223700431	WITHOUT_CLASSIFICATION	6.776299568258636E-7	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999999686926626	WITHOUT_CLASSIFICATION	3.1307337317976667E-8	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999448179494477	WITHOUT_CLASSIFICATION	5.5182050552375804E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.999999648134014	WITHOUT_CLASSIFICATION	3.5186598605095246E-7	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999979358787485	WITHOUT_CLASSIFICATION	2.0641212514627277E-6	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999954879113757	WITHOUT_CLASSIFICATION	4.51208862428353E-6	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999942242461966	WITHOUT_CLASSIFICATION	5.775753803424481E-6	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.999979450665375	WITHOUT_CLASSIFICATION	2.0549334625066415E-5	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999989138465135	WITHOUT_CLASSIFICATION	1.086153486480367E-6	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999905181241437	WITHOUT_CLASSIFICATION	9.481875856245733E-6	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.9999853189897212	WITHOUT_CLASSIFICATION	1.4681010278821206E-5	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999934815337287	WITHOUT_CLASSIFICATION	6.518466271246514E-6	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999934815337287	WITHOUT_CLASSIFICATION	6.518466271246514E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999889009808915	WITHOUT_CLASSIFICATION	1.10990191085537E-5	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999889009808915	WITHOUT_CLASSIFICATION	1.10990191085537E-5	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999998188344005	WITHOUT_CLASSIFICATION	1.8116559953593069E-7	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.999999832568386	WITHOUT_CLASSIFICATION	1.6743161413368402E-7	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.999999992502492	WITHOUT_CLASSIFICATION	7.497507942904307E-9	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9997558761880634	WITHOUT_CLASSIFICATION	2.441238119366257E-4	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999993057430316	WITHOUT_CLASSIFICATION	6.942569683664782E-7	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999950051877073	WITHOUT_CLASSIFICATION	4.994812292621047E-6	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999890609917885	WITHOUT_CLASSIFICATION	1.0939008211440794E-5	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999942242461966	WITHOUT_CLASSIFICATION	5.775753803424481E-6	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.999979450665375	WITHOUT_CLASSIFICATION	2.0549334625066415E-5	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999905181241437	WITHOUT_CLASSIFICATION	9.481875856245733E-6	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999936062595822	WITHOUT_CLASSIFICATION	6.393740417807844E-6	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999977177644819	WITHOUT_CLASSIFICATION	2.2822355180492755E-6	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999996857005864	WITHOUT_CLASSIFICATION	3.1429941367580883E-7	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.999953491278894	WITHOUT_CLASSIFICATION	4.6508721106017396E-5	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999998953832853	WITHOUT_CLASSIFICATION	1.0461671472218267E-7	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999999957056388	WITHOUT_CLASSIFICATION	4.294361150347749E-9	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999983946544373	WITHOUT_CLASSIFICATION	1.6053455626014089E-6	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999919116401438	WITHOUT_CLASSIFICATION	8.088359856215489E-6	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999959049755799	WITHOUT_CLASSIFICATION	4.0950244201621795E-6	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999926263047	WITHOUT_CLASSIFICATION	7.373695385828789E-9	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999999711448201	WITHOUT_CLASSIFICATION	2.8855179951952602E-8	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999965158672532	WITHOUT_CLASSIFICATION	3.484132746706991E-6	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999941108366543	WITHOUT_CLASSIFICATION	5.889163345747185E-6	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999992784384493	WITHOUT_CLASSIFICATION	7.215615508184577E-7	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9998907080827238	WITHOUT_CLASSIFICATION	1.0929191727616805E-4	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999996301495542	WITHOUT_CLASSIFICATION	3.6985044575904954E-7	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999979606507391	WITHOUT_CLASSIFICATION	2.039349260936307E-6	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9374758150651342	WITHOUT_CLASSIFICATION	0.06252418493486574	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999887651910326	WITHOUT_CLASSIFICATION	1.123480896740163E-5	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.999999639536976	WITHOUT_CLASSIFICATION	3.6046302403876716E-7	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999999625805963	WITHOUT_CLASSIFICATION	3.7419403701971585E-8	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999930291922388	WITHOUT_CLASSIFICATION	6.970807761309241E-6	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999921637311978	WITHOUT_CLASSIFICATION	7.836268802139497E-6	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999990126591904	WITHOUT_CLASSIFICATION	9.873408095982687E-7	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.999955409810866	WITHOUT_CLASSIFICATION	4.45901891341802E-5	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999965527934825	WITHOUT_CLASSIFICATION	3.4472065175307454E-6	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.999939605843711	WITHOUT_CLASSIFICATION	6.0394156289001616E-5	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999774789014819	WITHOUT_CLASSIFICATION	2.2521098518119013E-5	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999999332364607	WITHOUT_CLASSIFICATION	6.676353921656763E-8	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999904152547937	WITHOUT_CLASSIFICATION	9.584745206169743E-6	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999991432660537	WITHOUT_CLASSIFICATION	8.567339463804971E-7	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999899771091296	WITHOUT_CLASSIFICATION	1.0022890870429503E-5	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999736380904614	WITHOUT_CLASSIFICATION	2.6361909538738735E-5	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999994681502532	WITHOUT_CLASSIFICATION	5.318497467785758E-7	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.999997654642045	WITHOUT_CLASSIFICATION	2.3453579548209424E-6	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999629663576491	WITHOUT_CLASSIFICATION	3.7033642350796146E-5	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999918811103182	WITHOUT_CLASSIFICATION	8.118889681772414E-6	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999711955542909	WITHOUT_CLASSIFICATION	2.8804445709157045E-5	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999970683988721	WITHOUT_CLASSIFICATION	2.9316011278665765E-6	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999997867643	WITHOUT_CLASSIFICATION	2.132356999456577E-7	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999989553854874	WITHOUT_CLASSIFICATION	1.0446145125460553E-6	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.996931766858317	WITHOUT_CLASSIFICATION	0.0030682331416829614	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999918811103182	WITHOUT_CLASSIFICATION	8.118889681772414E-6	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999973584957325	WITHOUT_CLASSIFICATION	2.641504267511978E-6	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999713754094207	WITHOUT_CLASSIFICATION	2.862459057923948E-5	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999758799954316	WITHOUT_CLASSIFICATION	2.4120004568419058E-5	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999901638473041	WITHOUT_CLASSIFICATION	9.836152695879546E-6	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999901638473041	WITHOUT_CLASSIFICATION	9.836152695879546E-6	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999609703750884	WITHOUT_CLASSIFICATION	3.9029624911606554E-5	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.999999314494221	WITHOUT_CLASSIFICATION	6.855057790861462E-7	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999636697824286	WITHOUT_CLASSIFICATION	3.633021757146135E-5	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.999999278972119	WITHOUT_CLASSIFICATION	7.210278809096467E-7	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9999693309750028	WITHOUT_CLASSIFICATION	3.066902499715957E-5	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999555924475353	WITHOUT_CLASSIFICATION	4.440755246475884E-5	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999983294276035	WITHOUT_CLASSIFICATION	1.6705723965406355E-6	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999791072322373	WITHOUT_CLASSIFICATION	2.0892767762703042E-5	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999997289017019	WITHOUT_CLASSIFICATION	2.7109829809754316E-7	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999997289017019	WITHOUT_CLASSIFICATION	2.7109829809754316E-7	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999802867229486	WITHOUT_CLASSIFICATION	1.971327705135171E-5	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999893232025401	WITHOUT_CLASSIFICATION	1.0676797459830151E-5	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999971868871477	WITHOUT_CLASSIFICATION	2.8131128522764837E-6	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9999963321510653	WITHOUT_CLASSIFICATION	3.6678489346682905E-6	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999902668493	WITHOUT_CLASSIFICATION	9.73315070002954E-6	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999964013244313	WITHOUT_CLASSIFICATION	3.5986755686259936E-6	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999999881302516	WITHOUT_CLASSIFICATION	1.1869748263745066E-8	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999999770765283	WITHOUT_CLASSIFICATION	2.2923471707458085E-8	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9999828487537641	WITHOUT_CLASSIFICATION	1.7151246235898413E-5	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999987992430335	WITHOUT_CLASSIFICATION	1.2007569665587853E-6	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999861553889963	WITHOUT_CLASSIFICATION	1.3844611003728403E-5	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999956504734678	WITHOUT_CLASSIFICATION	4.349526532190384E-6	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999843838942656	WITHOUT_CLASSIFICATION	1.5616105734323045E-5	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999943687580432	WITHOUT_CLASSIFICATION	5.631241956900598E-6	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999943687580432	WITHOUT_CLASSIFICATION	5.631241956900598E-6	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999999086964636	WITHOUT_CLASSIFICATION	9.130353638365515E-8	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999947033185114	WITHOUT_CLASSIFICATION	5.29668148864409E-6	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.999999710987749	WITHOUT_CLASSIFICATION	2.890122510417007E-7	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999998490043422	WITHOUT_CLASSIFICATION	1.5099565778703023E-7	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999774197478	WITHOUT_CLASSIFICATION	2.2580252202332542E-8	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999852212143572	WITHOUT_CLASSIFICATION	1.4778785642881865E-5	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.999937298458387	WITHOUT_CLASSIFICATION	6.270154161296414E-5	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999846107376504	WITHOUT_CLASSIFICATION	1.5389262349544142E-5	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999204842738058	WITHOUT_CLASSIFICATION	7.951572619429632E-5	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9999711704748006	WITHOUT_CLASSIFICATION	2.882952519948466E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9989199659675014	WITHOUT_CLASSIFICATION	0.0010800340324985485	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999996192982114	WITHOUT_CLASSIFICATION	3.807017886313545E-7	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9994501060692614	WITHOUT_CLASSIFICATION	5.498939307386431E-4	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.999999984678223	WITHOUT_CLASSIFICATION	1.5321776973387153E-8	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999938477653563	WITHOUT_CLASSIFICATION	6.15223464372938E-6	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999989423241559	WITHOUT_CLASSIFICATION	1.0576758441137208E-6	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999909600010005	WITHOUT_CLASSIFICATION	9.039998999381865E-6	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999936886793283	WITHOUT_CLASSIFICATION	6.311320671725618E-6	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.999999474967044	WITHOUT_CLASSIFICATION	5.250329559633567E-7	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999623179456677	WITHOUT_CLASSIFICATION	3.768205433231291E-5	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9997131096833445	WITHOUT_CLASSIFICATION	2.868903166555168E-4	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9999978512686135	WITHOUT_CLASSIFICATION	2.1487313865169853E-6	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9997422714688987	WITHOUT_CLASSIFICATION	2.577285311012813E-4	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999943090830925	WITHOUT_CLASSIFICATION	5.690916907435555E-6	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9512164565861879	IMPLEMENTATION	0.048783543413812115	WITHOUT_CLASSIFICATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9997753028149805	WITHOUT_CLASSIFICATION	2.246971850195261E-4	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9999972350935019	WITHOUT_CLASSIFICATION	2.7649064980182214E-6	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9999798856011134	WITHOUT_CLASSIFICATION	2.0114398886618767E-5	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9999954756049817	WITHOUT_CLASSIFICATION	4.524395018331203E-6	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.999026421041627	WITHOUT_CLASSIFICATION	9.735789583730033E-4	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999969382802603	WITHOUT_CLASSIFICATION	3.0617197396845216E-6	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9999982683694016	WITHOUT_CLASSIFICATION	1.731630598343599E-6	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999995612221904	WITHOUT_CLASSIFICATION	4.3877780958360756E-7	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999813410896864	WITHOUT_CLASSIFICATION	1.8658910313546893E-5	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999979698981379	WITHOUT_CLASSIFICATION	2.0301018620768585E-6	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999974756649389	WITHOUT_CLASSIFICATION	2.5243350611559906E-6	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999928837710435	WITHOUT_CLASSIFICATION	7.116228956606068E-6	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999993881560907	WITHOUT_CLASSIFICATION	6.118439094161435E-7	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999996172753012	WITHOUT_CLASSIFICATION	3.827246987988203E-7	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.999998965993712	WITHOUT_CLASSIFICATION	1.0340062880939685E-6	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999562971171162	WITHOUT_CLASSIFICATION	4.370288288378753E-5	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9999443784309859	WITHOUT_CLASSIFICATION	5.562156901416676E-5	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999666214665153	WITHOUT_CLASSIFICATION	3.3378533484616744E-5	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999863295992598	WITHOUT_CLASSIFICATION	1.3670400740195013E-5	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9999766139798847	WITHOUT_CLASSIFICATION	2.3386020115307565E-5	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999510562027372	WITHOUT_CLASSIFICATION	4.89437972628005E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999989689335841	WITHOUT_CLASSIFICATION	1.0310664159345948E-6	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999943072461125	WITHOUT_CLASSIFICATION	5.692753887519895E-6	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999981395710686	WITHOUT_CLASSIFICATION	1.8604289312878885E-6	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999965002510226	WITHOUT_CLASSIFICATION	3.4997489774488743E-6	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999965002510226	WITHOUT_CLASSIFICATION	3.4997489774488743E-6	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999998730227281	WITHOUT_CLASSIFICATION	1.2697727192350847E-7	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999953062969956	WITHOUT_CLASSIFICATION	4.69370300438107E-6	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999983776637471	WITHOUT_CLASSIFICATION	1.6223362528883139E-6	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999999611046532	WITHOUT_CLASSIFICATION	3.889534678006053E-8	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999995732945491	WITHOUT_CLASSIFICATION	4.2670545076971244E-7	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999999811086031	WITHOUT_CLASSIFICATION	1.889139689767939E-8	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999999954426848	WITHOUT_CLASSIFICATION	4.5573152845500945E-9	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999481360046	WITHOUT_CLASSIFICATION	5.1863995499929277E-8	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.999999998734374	WITHOUT_CLASSIFICATION	1.2656261411995381E-9	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999997188178269	WITHOUT_CLASSIFICATION	2.811821731610852E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999969074519411	WITHOUT_CLASSIFICATION	3.0925480588165166E-6	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999969074519411	WITHOUT_CLASSIFICATION	3.0925480588165166E-6	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999969074519411	WITHOUT_CLASSIFICATION	3.0925480588165166E-6	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9999980934242672	WITHOUT_CLASSIFICATION	1.906575732884781E-6	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999999343322863	WITHOUT_CLASSIFICATION	6.566771369279896E-8	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9999965713773314	WITHOUT_CLASSIFICATION	3.4286226686346434E-6	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.999997523994923	WITHOUT_CLASSIFICATION	2.476005077016324E-6	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.999997523994923	WITHOUT_CLASSIFICATION	2.476005077016324E-6	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999994918089209	WITHOUT_CLASSIFICATION	5.081910790281517E-7	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999852465756528	WITHOUT_CLASSIFICATION	1.4753424347218911E-5	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999987921572754	WITHOUT_CLASSIFICATION	1.2078427245441686E-6	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999989598699338	WITHOUT_CLASSIFICATION	1.0401300661408055E-6	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999939957938276	WITHOUT_CLASSIFICATION	6.00420617242505E-6	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999171796831804	WITHOUT_CLASSIFICATION	8.282031681958231E-5	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999989114045802	WITHOUT_CLASSIFICATION	1.0885954197925237E-6	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999769832685779	WITHOUT_CLASSIFICATION	2.301673142207927E-5	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999996370713903	WITHOUT_CLASSIFICATION	3.6292860974218103E-7	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.999999577340938	WITHOUT_CLASSIFICATION	4.2265906206559295E-7	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.999999577340938	WITHOUT_CLASSIFICATION	4.2265906206559295E-7	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999935933683308	WITHOUT_CLASSIFICATION	6.406631669126259E-6	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999981628838823	WITHOUT_CLASSIFICATION	1.8371161175873696E-6	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999925694692148	WITHOUT_CLASSIFICATION	7.430530785177066E-6	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.99999266169928	WITHOUT_CLASSIFICATION	7.338300720009361E-6	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999994704210573	WITHOUT_CLASSIFICATION	5.295789425928367E-7	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999918495246908	WITHOUT_CLASSIFICATION	8.150475309192067E-6	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999788199543964	WITHOUT_CLASSIFICATION	2.118004560359826E-5	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9997406080518516	WITHOUT_CLASSIFICATION	2.5939194814838493E-4	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999924651743677	WITHOUT_CLASSIFICATION	7.534825632240913E-6	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9999870346549353	WITHOUT_CLASSIFICATION	1.2965345064773081E-5	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999684921715551	WITHOUT_CLASSIFICATION	3.1507828444771166E-5	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999888088775803	WITHOUT_CLASSIFICATION	1.1191122419774281E-5	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.999990917886448	WITHOUT_CLASSIFICATION	9.08211355208834E-6	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999112072779789	WITHOUT_CLASSIFICATION	8.87927220211294E-5	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9996119395672423	WITHOUT_CLASSIFICATION	3.8806043275767954E-4	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9998879459144967	WITHOUT_CLASSIFICATION	1.1205408550329622E-4	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999919816613672	WITHOUT_CLASSIFICATION	8.018338632872843E-6	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999894678854051	WITHOUT_CLASSIFICATION	1.0532114594812682E-5	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999973934664681	WITHOUT_CLASSIFICATION	2.6065335318187125E-6	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999998103821979	WITHOUT_CLASSIFICATION	1.8961780199491483E-7	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9991993923999053	WITHOUT_CLASSIFICATION	8.0060760009467E-4	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999916311399433	WITHOUT_CLASSIFICATION	8.368860056807284E-6	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999973101423311	WITHOUT_CLASSIFICATION	2.68985766905406E-6	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999993243046812	WITHOUT_CLASSIFICATION	6.756953188043162E-7	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999913449079822	WITHOUT_CLASSIFICATION	8.655092017753281E-6	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999618419841978	WITHOUT_CLASSIFICATION	3.815801580213917E-5	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999759681181228	WITHOUT_CLASSIFICATION	2.403188187714725E-5	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999975398379728	WITHOUT_CLASSIFICATION	2.460162027251994E-6	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999988775313633	WITHOUT_CLASSIFICATION	1.1224686367795297E-6	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999900575508847	WITHOUT_CLASSIFICATION	9.942449115336838E-6	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999752815445837	WITHOUT_CLASSIFICATION	2.471845541638327E-5	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999921726158569	WITHOUT_CLASSIFICATION	7.827384143116469E-6	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999984892208273	WITHOUT_CLASSIFICATION	1.5107791726921517E-6	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999752815445837	WITHOUT_CLASSIFICATION	2.471845541638327E-5	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.999962491232648	WITHOUT_CLASSIFICATION	3.7508767352072354E-5	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999992959094061	WITHOUT_CLASSIFICATION	7.040905940289114E-7	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999255067588015	WITHOUT_CLASSIFICATION	7.449324119845435E-5	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999849960500937	WITHOUT_CLASSIFICATION	1.5003949906162843E-5	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999937776792911	WITHOUT_CLASSIFICATION	6.2223207089485565E-6	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999997487027655	WITHOUT_CLASSIFICATION	2.5129723447250246E-7	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999905145742022	WITHOUT_CLASSIFICATION	9.485425797807505E-6	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999862869334584	WITHOUT_CLASSIFICATION	1.3713066541632517E-5	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999850322940731	WITHOUT_CLASSIFICATION	1.4967705926857926E-5	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999509673160687	WITHOUT_CLASSIFICATION	4.9032683931383947E-5	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999632864896421	WITHOUT_CLASSIFICATION	3.671351035792704E-5	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9998718215335923	WITHOUT_CLASSIFICATION	1.2817846640770118E-4	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999392110862522	WITHOUT_CLASSIFICATION	6.078891374781443E-5	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999061755957019	WITHOUT_CLASSIFICATION	9.382440429806654E-5	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999594253429724	WITHOUT_CLASSIFICATION	4.057465702758889E-5	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999695297234221	WITHOUT_CLASSIFICATION	3.0470276577928987E-5	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999710773326709	WITHOUT_CLASSIFICATION	2.892266732912136E-5	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999980957877129	WITHOUT_CLASSIFICATION	1.9042122870440568E-6	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999907003697489	WITHOUT_CLASSIFICATION	9.299630251111667E-6	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999242054398965	WITHOUT_CLASSIFICATION	7.579456010354564E-5	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999862196888368	WITHOUT_CLASSIFICATION	1.3780311163242698E-5	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999939474761667	WITHOUT_CLASSIFICATION	6.052523833288495E-6	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999657454618539	WITHOUT_CLASSIFICATION	3.425453814605046E-5	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.999959280927024	WITHOUT_CLASSIFICATION	4.0719072975990174E-5	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999705587452501	WITHOUT_CLASSIFICATION	2.9441254749843157E-5	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999996455475956	WITHOUT_CLASSIFICATION	3.544524044712439E-7	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999970518336155	WITHOUT_CLASSIFICATION	2.9481663844793364E-6	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999966733340011	WITHOUT_CLASSIFICATION	3.326665998944024E-6	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9999690213036139	WITHOUT_CLASSIFICATION	3.097869638614615E-5	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.999954318996674	WITHOUT_CLASSIFICATION	4.5681003326126015E-5	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9999842785640793	WITHOUT_CLASSIFICATION	1.5721435920675273E-5	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9999381535209241	WITHOUT_CLASSIFICATION	6.184647907596709E-5	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9999584245732864	WITHOUT_CLASSIFICATION	4.157542671358733E-5	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999998859651796	WITHOUT_CLASSIFICATION	1.1403482046911453E-7	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999831595016284	WITHOUT_CLASSIFICATION	1.6840498371548936E-5	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9999961507512143	WITHOUT_CLASSIFICATION	3.849248785809832E-6	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9999980068010015	WITHOUT_CLASSIFICATION	1.9931989985820046E-6	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9999752622743686	WITHOUT_CLASSIFICATION	2.473772563149265E-5	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999980804853092	WITHOUT_CLASSIFICATION	1.919514690795126E-6	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9999816854454987	WITHOUT_CLASSIFICATION	1.831455450134126E-5	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9999831225615331	WITHOUT_CLASSIFICATION	1.6877438466881792E-5	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999964074969011	WITHOUT_CLASSIFICATION	3.592503098914483E-6	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9999782677603571	WITHOUT_CLASSIFICATION	2.173223964288976E-5	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9999992577801278	WITHOUT_CLASSIFICATION	7.422198722184916E-7	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999927841422892	WITHOUT_CLASSIFICATION	7.215857710767882E-6	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9999975047986721	WITHOUT_CLASSIFICATION	2.4952013279404057E-6	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9999268966774052	WITHOUT_CLASSIFICATION	7.310332259487708E-5	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999890691271053	WITHOUT_CLASSIFICATION	1.0930872894788562E-5	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999995857154531	WITHOUT_CLASSIFICATION	4.1428454682308166E-7	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.9999969560367595	WITHOUT_CLASSIFICATION	3.0439632404041284E-6	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999935588060247	WITHOUT_CLASSIFICATION	6.441193975404784E-6	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999995005538185	WITHOUT_CLASSIFICATION	4.994461815719708E-7	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999038252676938	WITHOUT_CLASSIFICATION	9.617473230616634E-5	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999995857154531	WITHOUT_CLASSIFICATION	4.1428454682308166E-7	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9995605315864965	WITHOUT_CLASSIFICATION	4.394684135035167E-4	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9995605315864965	WITHOUT_CLASSIFICATION	4.394684135035167E-4	IMPLEMENTATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999953889602995	WITHOUT_CLASSIFICATION	4.6110397004410424E-6	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999988005285465	WITHOUT_CLASSIFICATION	1.1994714534480637E-6	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999994197216066	WITHOUT_CLASSIFICATION	5.802783934299083E-7	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999998664600165	WITHOUT_CLASSIFICATION	1.3353998350939895E-7	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999989292617161	WITHOUT_CLASSIFICATION	1.0707382838550605E-6	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999977571021249	WITHOUT_CLASSIFICATION	2.2428978751118627E-6	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999983125953991	WITHOUT_CLASSIFICATION	1.6874046010043732E-6	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.999595428873804	IMPLEMENTATION	4.0457112619592356E-4	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999651831665467	WITHOUT_CLASSIFICATION	3.481683345330608E-5	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999992883624816	WITHOUT_CLASSIFICATION	7.116375183523229E-7	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999999995038363	WITHOUT_CLASSIFICATION	4.96163664148043E-10	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999983010881347	WITHOUT_CLASSIFICATION	1.698911865335385E-6	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999966323244918	WITHOUT_CLASSIFICATION	3.3676755081088353E-6	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999988535980822	WITHOUT_CLASSIFICATION	1.1464019178385652E-6	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.99999747435751	WITHOUT_CLASSIFICATION	2.5256424899747383E-6	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999977623792846	WITHOUT_CLASSIFICATION	2.2376207153420766E-6	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999982070853731	WITHOUT_CLASSIFICATION	1.7929146269329044E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999734735516042	WITHOUT_CLASSIFICATION	2.6526448395858546E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999734735516042	WITHOUT_CLASSIFICATION	2.6526448395858546E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999734735516042	WITHOUT_CLASSIFICATION	2.6526448395858546E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999734735516042	WITHOUT_CLASSIFICATION	2.6526448395858546E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999734735516042	WITHOUT_CLASSIFICATION	2.6526448395858546E-5	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9999963534284652	WITHOUT_CLASSIFICATION	3.646571534724128E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999917707907789	WITHOUT_CLASSIFICATION	8.229209220975172E-6	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999884896030162	WITHOUT_CLASSIFICATION	1.1510396983784854E-5	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.999999927518154	WITHOUT_CLASSIFICATION	7.248184598029997E-8	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.999987471305946	WITHOUT_CLASSIFICATION	1.2528694054077153E-5	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999993582068971	WITHOUT_CLASSIFICATION	6.417931028549974E-7	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999751358539596	WITHOUT_CLASSIFICATION	2.4864146040385515E-5	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999976465630267	WITHOUT_CLASSIFICATION	2.3534369732190855E-6	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999895003746222	WITHOUT_CLASSIFICATION	1.0499625377836146E-5	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9999965670722735	WITHOUT_CLASSIFICATION	3.4329277265507313E-6	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9999959071267409	WITHOUT_CLASSIFICATION	4.092873259124216E-6	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9999968015133376	WITHOUT_CLASSIFICATION	3.198486662359363E-6	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9999966072702624	WITHOUT_CLASSIFICATION	3.39272973762081E-6	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9999967445948303	WITHOUT_CLASSIFICATION	3.25540516969003E-6	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9999966971411809	WITHOUT_CLASSIFICATION	3.302858818989278E-6	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9999961535488225	WITHOUT_CLASSIFICATION	3.846451177470345E-6	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9999958953312236	WITHOUT_CLASSIFICATION	4.104668776457411E-6	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9999967737640819	WITHOUT_CLASSIFICATION	3.2262359181108633E-6	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9999959059707321	WITHOUT_CLASSIFICATION	4.094029267971739E-6	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999966970896523	WITHOUT_CLASSIFICATION	3.302910347681047E-6	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9999960286824053	WITHOUT_CLASSIFICATION	3.971317594747683E-6	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9999959044705583	WITHOUT_CLASSIFICATION	4.095529441676733E-6	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.999996382697252	WITHOUT_CLASSIFICATION	3.617302747961358E-6	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9999961195677699	WITHOUT_CLASSIFICATION	3.8804322300777275E-6	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999962673036751	WITHOUT_CLASSIFICATION	3.732696324960232E-6	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9999965668460135	WITHOUT_CLASSIFICATION	3.4331539865697044E-6	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9999962457773099	WITHOUT_CLASSIFICATION	3.7542226900802237E-6	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9999962412835863	WITHOUT_CLASSIFICATION	3.7587164136295274E-6	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999963452238764	WITHOUT_CLASSIFICATION	3.6547761236685483E-6	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999967033451108	WITHOUT_CLASSIFICATION	3.2966548890863854E-6	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999955726170835	WITHOUT_CLASSIFICATION	4.427382916478699E-6	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9999959827143136	WITHOUT_CLASSIFICATION	4.017285686441974E-6	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9999958417342735	WITHOUT_CLASSIFICATION	4.1582657265624435E-6	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9999951112164	WITHOUT_CLASSIFICATION	4.888783600029769E-6	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9999958816572883	WITHOUT_CLASSIFICATION	4.118342711764397E-6	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9999954481937163	WITHOUT_CLASSIFICATION	4.551806283636289E-6	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9999953013087474	WITHOUT_CLASSIFICATION	4.698691252570463E-6	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.999995413990058	WITHOUT_CLASSIFICATION	4.586009942007587E-6	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.9999964225256535	WITHOUT_CLASSIFICATION	3.5774743464345736E-6	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.999995547368539	WITHOUT_CLASSIFICATION	4.452631460976027E-6	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.999995431415087	WITHOUT_CLASSIFICATION	4.5685849131292195E-6	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999954137911191	WITHOUT_CLASSIFICATION	4.586208880860237E-6	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.999995836178564	WITHOUT_CLASSIFICATION	4.163821436017676E-6	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9999955486838779	WITHOUT_CLASSIFICATION	4.451316122131649E-6	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9999970528897656	WITHOUT_CLASSIFICATION	2.947110234487433E-6	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9999964582316739	WITHOUT_CLASSIFICATION	3.5417683260374763E-6	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9999964057043191	WITHOUT_CLASSIFICATION	3.5942956809370933E-6	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9999970401602376	WITHOUT_CLASSIFICATION	2.9598397624606094E-6	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9999963305367987	WITHOUT_CLASSIFICATION	3.669463201325152E-6	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9999955293105761	WITHOUT_CLASSIFICATION	4.470689423838902E-6	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999884896030162	WITHOUT_CLASSIFICATION	1.1510396983784854E-5	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999960209038349	WITHOUT_CLASSIFICATION	3.979096165067023E-6	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999963389331205	WITHOUT_CLASSIFICATION	3.6610668796147378E-6	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999958183721755	WITHOUT_CLASSIFICATION	4.18162782444227E-6	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.99999508377831	WITHOUT_CLASSIFICATION	4.916221689956958E-6	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.999994884999418	WITHOUT_CLASSIFICATION	5.115000581871515E-6	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9999952670917526	WITHOUT_CLASSIFICATION	4.7329082474376805E-6	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9999957170084018	WITHOUT_CLASSIFICATION	4.2829915981232794E-6	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999950656460418	WITHOUT_CLASSIFICATION	4.934353958211735E-6	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9999952582187502	WITHOUT_CLASSIFICATION	4.741781249823155E-6	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9999952485410009	WITHOUT_CLASSIFICATION	4.751458999122498E-6	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9999952875278324	WITHOUT_CLASSIFICATION	4.7124721676085954E-6	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.9999954483716945	WITHOUT_CLASSIFICATION	4.551628305432673E-6	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.9999953632686677	WITHOUT_CLASSIFICATION	4.636731332380741E-6	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9999962902381399	WITHOUT_CLASSIFICATION	3.709761860084022E-6	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9999962363273875	WITHOUT_CLASSIFICATION	3.7636726125292717E-6	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999969299251481	WITHOUT_CLASSIFICATION	3.070074851776261E-6	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9999964567969715	WITHOUT_CLASSIFICATION	3.54320302854131E-6	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9999959568336916	WITHOUT_CLASSIFICATION	4.043166308369515E-6	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9999958887478719	WITHOUT_CLASSIFICATION	4.111252128022214E-6	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9999958072482201	WITHOUT_CLASSIFICATION	4.19275177991276E-6	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9999958483043463	WITHOUT_CLASSIFICATION	4.151695653726948E-6	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.999995117511795	WITHOUT_CLASSIFICATION	4.882488204974272E-6	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9999950499971213	WITHOUT_CLASSIFICATION	4.950002878688739E-6	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9999961522176657	WITHOUT_CLASSIFICATION	3.847782334329953E-6	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9999951934054403	WITHOUT_CLASSIFICATION	4.806594559702498E-6	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9999962569130232	WITHOUT_CLASSIFICATION	3.7430869768238234E-6	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999956143480503	WITHOUT_CLASSIFICATION	4.385651949736867E-6	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999951610951474	WITHOUT_CLASSIFICATION	4.838904852516873E-6	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9999970000811969	WITHOUT_CLASSIFICATION	2.9999188031786384E-6	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9999960481407919	WITHOUT_CLASSIFICATION	3.951859208093871E-6	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9999966310503723	WITHOUT_CLASSIFICATION	3.3689496277775154E-6	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9999954757221134	WITHOUT_CLASSIFICATION	4.524277886645555E-6	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9999957648094301	WITHOUT_CLASSIFICATION	4.2351905698777935E-6	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999961226157317	WITHOUT_CLASSIFICATION	3.877384268249465E-6	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9999958482691658	WITHOUT_CLASSIFICATION	4.151730834262555E-6	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9999958603761172	WITHOUT_CLASSIFICATION	4.1396238828236686E-6	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9999962787762418	WITHOUT_CLASSIFICATION	3.7212237582625095E-6	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9999954322053101	WITHOUT_CLASSIFICATION	4.56779468991195E-6	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9999952541668728	WITHOUT_CLASSIFICATION	4.745833127095701E-6	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9999961654527955	WITHOUT_CLASSIFICATION	3.834547204504755E-6	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9999957358510556	WITHOUT_CLASSIFICATION	4.264148944399777E-6	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9999952796312673	WITHOUT_CLASSIFICATION	4.720368732640971E-6	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999955861976424	WITHOUT_CLASSIFICATION	4.4138023575819785E-6	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9999953899926279	WITHOUT_CLASSIFICATION	4.610007372081238E-6	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.999995642013812	WITHOUT_CLASSIFICATION	4.357986187956242E-6	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999952481958302	WITHOUT_CLASSIFICATION	4.751804169741338E-6	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999961878817615	WITHOUT_CLASSIFICATION	3.812118238594615E-6	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999954635289732	WITHOUT_CLASSIFICATION	4.536471026843551E-6	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9999952784621088	WITHOUT_CLASSIFICATION	4.721537891200945E-6	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9999967825156283	WITHOUT_CLASSIFICATION	3.2174843716255464E-6	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9999962373449846	WITHOUT_CLASSIFICATION	3.7626550153742666E-6	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9999964792695145	WITHOUT_CLASSIFICATION	3.5207304855058175E-6	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9999962254207903	WITHOUT_CLASSIFICATION	3.774579209764991E-6	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9999961135271982	WITHOUT_CLASSIFICATION	3.886472801798091E-6	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9999964327375909	WITHOUT_CLASSIFICATION	3.5672624091042334E-6	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9999957658763893	WITHOUT_CLASSIFICATION	4.234123610799589E-6	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9999967692784336	WITHOUT_CLASSIFICATION	3.2307215663531563E-6	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9999957572781346	WITHOUT_CLASSIFICATION	4.242721865388842E-6	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9999957575653461	WITHOUT_CLASSIFICATION	4.242434653843573E-6	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999959743722504	WITHOUT_CLASSIFICATION	4.025627749652124E-6	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999956766221482	WITHOUT_CLASSIFICATION	4.323377851795652E-6	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999952569369237	WITHOUT_CLASSIFICATION	4.743063076342282E-6	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9999957830611031	WITHOUT_CLASSIFICATION	4.216938896884757E-6	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9999953258527104	WITHOUT_CLASSIFICATION	4.67414728955961E-6	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.999996080215369	WITHOUT_CLASSIFICATION	3.919784630927791E-6	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9999951279414286	WITHOUT_CLASSIFICATION	4.8720585713983E-6	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9999962010255308	WITHOUT_CLASSIFICATION	3.7989744692520596E-6	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9999952477038357	WITHOUT_CLASSIFICATION	4.7522961642782404E-6	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.999995501056618	WITHOUT_CLASSIFICATION	4.498943381951712E-6	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9999957955490312	WITHOUT_CLASSIFICATION	4.204450968828061E-6	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999960006325705	WITHOUT_CLASSIFICATION	3.999367429471721E-6	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999953997188508	WITHOUT_CLASSIFICATION	4.600281149179062E-6	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999954302639513	WITHOUT_CLASSIFICATION	4.569736048658489E-6	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9999968661357543	WITHOUT_CLASSIFICATION	3.1338642456738265E-6	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.99999648175053	WITHOUT_CLASSIFICATION	3.518249469978271E-6	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9999962425149701	WITHOUT_CLASSIFICATION	3.7574850299858987E-6	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9999966841333228	WITHOUT_CLASSIFICATION	3.315866677187687E-6	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.999996254991728	WITHOUT_CLASSIFICATION	3.7450082721202855E-6	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9999955560177175	WITHOUT_CLASSIFICATION	4.443982282556465E-6	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999961923410282	WITHOUT_CLASSIFICATION	3.807658971761666E-6	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9999957655449333	WITHOUT_CLASSIFICATION	4.234455066677002E-6	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9999964741245305	WITHOUT_CLASSIFICATION	3.5258754693845634E-6	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999952689865095	WITHOUT_CLASSIFICATION	4.731013490527282E-6	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9999954507390718	WITHOUT_CLASSIFICATION	4.549260928239832E-6	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9999952410950841	WITHOUT_CLASSIFICATION	4.7589049158771945E-6	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999962760014967	WITHOUT_CLASSIFICATION	3.723998503380296E-6	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9999954228103057	WITHOUT_CLASSIFICATION	4.577189694199855E-6	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9999953480342848	WITHOUT_CLASSIFICATION	4.651965715188458E-6	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.999995761888816	WITHOUT_CLASSIFICATION	4.238111184032681E-6	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9999954536007527	WITHOUT_CLASSIFICATION	4.546399247276479E-6	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999964134033856	WITHOUT_CLASSIFICATION	3.586596614425904E-6	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9999955195158878	WITHOUT_CLASSIFICATION	4.4804841121567906E-6	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.999995316434664	WITHOUT_CLASSIFICATION	4.6835653359985905E-6	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9999951586895176	WITHOUT_CLASSIFICATION	4.841310482448364E-6	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.9999975486656553	WITHOUT_CLASSIFICATION	2.45133434482319E-6	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999976176930218	WITHOUT_CLASSIFICATION	2.382306978241778E-6	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9999975802077691	WITHOUT_CLASSIFICATION	2.4197922309842854E-6	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9999973860116845	WITHOUT_CLASSIFICATION	2.6139883154928617E-6	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9999976216470704	WITHOUT_CLASSIFICATION	2.3783529297229555E-6	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9999978439398409	WITHOUT_CLASSIFICATION	2.156060159102883E-6	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9999977457091195	WITHOUT_CLASSIFICATION	2.2542908805925556E-6	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9999974294663896	WITHOUT_CLASSIFICATION	2.5705336105183786E-6	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9999974006180999	WITHOUT_CLASSIFICATION	2.599381900021117E-6	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9999973284435044	WITHOUT_CLASSIFICATION	2.6715564955613307E-6	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.99999741460609	WITHOUT_CLASSIFICATION	2.58539390989322E-6	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9999973400330474	WITHOUT_CLASSIFICATION	2.6599669526816285E-6	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9999976619277524	WITHOUT_CLASSIFICATION	2.3380722476616843E-6	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9999972907815148	WITHOUT_CLASSIFICATION	2.709218485144283E-6	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9999974353218578	WITHOUT_CLASSIFICATION	2.5646781421228874E-6	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9999975384207364	WITHOUT_CLASSIFICATION	2.461579263717749E-6	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9999974737901046	WITHOUT_CLASSIFICATION	2.526209895499116E-6	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999974438056819	WITHOUT_CLASSIFICATION	2.556194318085805E-6	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9999974676785409	WITHOUT_CLASSIFICATION	2.5323214591143265E-6	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9999975985855655	WITHOUT_CLASSIFICATION	2.401414434552187E-6	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9999972983919269	WITHOUT_CLASSIFICATION	2.7016080731765293E-6	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999962952627537	WITHOUT_CLASSIFICATION	3.7047372463643183E-6	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.9999967744654683	WITHOUT_CLASSIFICATION	3.2255345316274247E-6	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9999964291351788	WITHOUT_CLASSIFICATION	3.570864821075728E-6	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9999965348228239	WITHOUT_CLASSIFICATION	3.465177176234164E-6	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999975195042841	WITHOUT_CLASSIFICATION	2.4804957159819446E-6	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999967494411517	WITHOUT_CLASSIFICATION	3.250558848345365E-6	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9999968718857776	WITHOUT_CLASSIFICATION	3.128114222507441E-6	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9999969442885686	WITHOUT_CLASSIFICATION	3.055711431426389E-6	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.999997303769672	WITHOUT_CLASSIFICATION	2.6962303280442338E-6	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.999996427370371	WITHOUT_CLASSIFICATION	3.5726296289161794E-6	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9999964662635069	WITHOUT_CLASSIFICATION	3.5337364931324504E-6	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999965382698726	WITHOUT_CLASSIFICATION	3.461730127501919E-6	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9999965225851515	WITHOUT_CLASSIFICATION	3.477414848513999E-6	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9999966285465358	WITHOUT_CLASSIFICATION	3.371453464170995E-6	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9999965278230873	WITHOUT_CLASSIFICATION	3.4721769127583296E-6	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9999965680339414	WITHOUT_CLASSIFICATION	3.431966058511472E-6	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9999966636215406	WITHOUT_CLASSIFICATION	3.3363784594028936E-6	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9999969382603403	WITHOUT_CLASSIFICATION	3.0617396596209482E-6	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999976328445219	WITHOUT_CLASSIFICATION	2.367155478069674E-6	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999976010155606	WITHOUT_CLASSIFICATION	2.3989844394375978E-6	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999975320823408	WITHOUT_CLASSIFICATION	2.4679176591728925E-6	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9999968718464018	WITHOUT_CLASSIFICATION	3.1281535981080035E-6	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9999974763351863	WITHOUT_CLASSIFICATION	2.5236648137271945E-6	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9999973915195287	WITHOUT_CLASSIFICATION	2.6084804713655427E-6	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.9999972835297846	WITHOUT_CLASSIFICATION	2.7164702154814643E-6	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999968925797991	WITHOUT_CLASSIFICATION	3.107420200993412E-6	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999968101433068	WITHOUT_CLASSIFICATION	3.18985669325258E-6	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9999971365993343	WITHOUT_CLASSIFICATION	2.8634006656906353E-6	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9999968302446343	WITHOUT_CLASSIFICATION	3.169755365777884E-6	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9999975726866691	WITHOUT_CLASSIFICATION	2.4273133308885718E-6	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9999972597821432	WITHOUT_CLASSIFICATION	2.740217856852218E-6	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9999976308200733	WITHOUT_CLASSIFICATION	2.3691799266277403E-6	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9999968542508293	WITHOUT_CLASSIFICATION	3.1457491706806906E-6	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.99999687513811	WITHOUT_CLASSIFICATION	3.1248618900233594E-6	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.999997745803614	WITHOUT_CLASSIFICATION	2.254196385987221E-6	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9999976461321326	WITHOUT_CLASSIFICATION	2.3538678674250725E-6	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9999967561155767	WITHOUT_CLASSIFICATION	3.2438844232825023E-6	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9999968637918596	WITHOUT_CLASSIFICATION	3.136208140436932E-6	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.999997768221215	WITHOUT_CLASSIFICATION	2.231778784947081E-6	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9999971551370779	WITHOUT_CLASSIFICATION	2.8448629220878378E-6	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9999968155063546	WITHOUT_CLASSIFICATION	3.184493645483528E-6	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999969750249692	WITHOUT_CLASSIFICATION	3.024975030694493E-6	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9999971478143188	WITHOUT_CLASSIFICATION	2.8521856811959556E-6	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9999969484617046	WITHOUT_CLASSIFICATION	3.0515382954430114E-6	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9999970390471016	WITHOUT_CLASSIFICATION	2.9609528983372916E-6	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9999968627862552	WITHOUT_CLASSIFICATION	3.1372137448082152E-6	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999969651080435	WITHOUT_CLASSIFICATION	3.0348919564293957E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999971721737307	WITHOUT_CLASSIFICATION	2.8278262692942666E-6	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9999965783593706	WITHOUT_CLASSIFICATION	3.42164062935355E-6	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9999968977754261	WITHOUT_CLASSIFICATION	3.1022245739393407E-6	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9999969369261431	WITHOUT_CLASSIFICATION	3.0630738567973913E-6	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9999972272845755	WITHOUT_CLASSIFICATION	2.7727154245618956E-6	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9999968288265988	WITHOUT_CLASSIFICATION	3.1711734011251993E-6	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.999997014874102	WITHOUT_CLASSIFICATION	2.9851258981240583E-6	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.999996490200169	WITHOUT_CLASSIFICATION	3.50979983101933E-6	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999966973641274	WITHOUT_CLASSIFICATION	3.3026358725799788E-6	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.999996523804575	WITHOUT_CLASSIFICATION	3.476195424913394E-6	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999972755100344	WITHOUT_CLASSIFICATION	2.7244899656685934E-6	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9999964586136888	WITHOUT_CLASSIFICATION	3.541386311259308E-6	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9999973033994451	WITHOUT_CLASSIFICATION	2.696600554884264E-6	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9999966389785523	WITHOUT_CLASSIFICATION	3.361021447604023E-6	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9999965003075563	WITHOUT_CLASSIFICATION	3.49969244363573E-6	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999964832514	WITHOUT_CLASSIFICATION	3.516748600063356E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999975225774711	WITHOUT_CLASSIFICATION	2.477422528979709E-6	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9999972826681339	WITHOUT_CLASSIFICATION	2.7173318660099103E-6	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999968639008866	WITHOUT_CLASSIFICATION	3.13609911335585E-6	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9999964188142008	WITHOUT_CLASSIFICATION	3.5811857990894792E-6	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9999968699086013	WITHOUT_CLASSIFICATION	3.130091398681552E-6	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9999971721024321	WITHOUT_CLASSIFICATION	2.827897567870625E-6	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9999968015347608	WITHOUT_CLASSIFICATION	3.1984652392706547E-6	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9999962155992095	WITHOUT_CLASSIFICATION	3.7844007906627557E-6	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.9999963237447542	WITHOUT_CLASSIFICATION	3.6762552457322414E-6	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9999964391636743	WITHOUT_CLASSIFICATION	3.5608363256299602E-6	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9999963943715067	WITHOUT_CLASSIFICATION	3.605628493320229E-6	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9999965357278655	WITHOUT_CLASSIFICATION	3.4642721344671924E-6	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9999964064682377	WITHOUT_CLASSIFICATION	3.593531762184804E-6	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9999966325834541	WITHOUT_CLASSIFICATION	3.367416545838658E-6	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999965756982494	WITHOUT_CLASSIFICATION	3.42430175057952E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999966946895653	WITHOUT_CLASSIFICATION	3.3053104345978578E-6	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9999973853676778	WITHOUT_CLASSIFICATION	2.6146323222563393E-6	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9999973260838656	WITHOUT_CLASSIFICATION	2.6739161345195287E-6	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9999971470504873	WITHOUT_CLASSIFICATION	2.8529495127142693E-6	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.999996610080875	WITHOUT_CLASSIFICATION	3.3899191248380386E-6	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999968245814946	WITHOUT_CLASSIFICATION	3.1754185053496978E-6	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999971373048332	WITHOUT_CLASSIFICATION	2.8626951668242602E-6	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9999969450767934	WITHOUT_CLASSIFICATION	3.0549232065540416E-6	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9999965247617938	WITHOUT_CLASSIFICATION	3.4752382061856735E-6	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9999964468824487	WITHOUT_CLASSIFICATION	3.553117551229879E-6	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9999966015292321	WITHOUT_CLASSIFICATION	3.398470767860025E-6	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9999963934349833	WITHOUT_CLASSIFICATION	3.6065650167812025E-6	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9999966043101456	WITHOUT_CLASSIFICATION	3.395689854424133E-6	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9999963670199227	WITHOUT_CLASSIFICATION	3.6329800771932356E-6	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9999968079592839	WITHOUT_CLASSIFICATION	3.1920407159932987E-6	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9999964703567766	WITHOUT_CLASSIFICATION	3.5296432234542013E-6	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.9999965714954019	WITHOUT_CLASSIFICATION	3.428504598226181E-6	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9999966259245368	WITHOUT_CLASSIFICATION	3.3740754632332344E-6	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.999997318724838	WITHOUT_CLASSIFICATION	2.6812751620703875E-6	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.999997302843205	WITHOUT_CLASSIFICATION	2.697156794996924E-6	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999968130218224	WITHOUT_CLASSIFICATION	3.186978177575931E-6	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9999968285034866	WITHOUT_CLASSIFICATION	3.17149651339217E-6	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999967737420143	WITHOUT_CLASSIFICATION	3.2262579857221742E-6	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9999966215719404	WITHOUT_CLASSIFICATION	3.3784280596196304E-6	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999966026094056	WITHOUT_CLASSIFICATION	3.3973905943958454E-6	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.999996511356482	WITHOUT_CLASSIFICATION	3.4886435180474106E-6	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9999965300752829	WITHOUT_CLASSIFICATION	3.469924717077877E-6	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999967796540037	WITHOUT_CLASSIFICATION	3.2203459963248277E-6	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9999966238750204	WITHOUT_CLASSIFICATION	3.3761249796185677E-6	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.999996645180858	WITHOUT_CLASSIFICATION	3.3548191421105503E-6	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9999972583935729	WITHOUT_CLASSIFICATION	2.7416064270908386E-6	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.99999659984326	WITHOUT_CLASSIFICATION	3.4001567401621766E-6	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999964327334318	WITHOUT_CLASSIFICATION	3.56726656826881E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999967854344575	WITHOUT_CLASSIFICATION	3.214565542556563E-6	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999761301958037	WITHOUT_CLASSIFICATION	2.3869804196396834E-5	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9992361083741433	WITHOUT_CLASSIFICATION	7.638916258566726E-4	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999517086809127	WITHOUT_CLASSIFICATION	4.829131908737791E-5	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999535726172339	WITHOUT_CLASSIFICATION	4.6427382766050166E-5	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9996927459243609	WITHOUT_CLASSIFICATION	3.0725407563921795E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999914537664691	WITHOUT_CLASSIFICATION	8.546233530849319E-6	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.99994069606587	WITHOUT_CLASSIFICATION	5.930393412989932E-5	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999430811478345	WITHOUT_CLASSIFICATION	5.691885216558432E-5	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999638303771343	WITHOUT_CLASSIFICATION	3.616962286556905E-5	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9997431052649514	WITHOUT_CLASSIFICATION	2.568947350485787E-4	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9999227839483311	WITHOUT_CLASSIFICATION	7.721605166884958E-5	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9999957988134937	WITHOUT_CLASSIFICATION	4.201186506275299E-6	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999982213170073	WITHOUT_CLASSIFICATION	1.7786829926768815E-6	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9995184545227354	WITHOUT_CLASSIFICATION	4.815454772645821E-4	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.999989934128877	WITHOUT_CLASSIFICATION	1.006587112290941E-5	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998800935024437	WITHOUT_CLASSIFICATION	1.1990649755627424E-4	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999519611231101	WITHOUT_CLASSIFICATION	4.8038876889870215E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999777125722148	WITHOUT_CLASSIFICATION	2.2287427785142998E-5	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999998070636452	WITHOUT_CLASSIFICATION	1.929363547994209E-7	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999995899906847	WITHOUT_CLASSIFICATION	4.100093153737719E-7	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999988753932528	WITHOUT_CLASSIFICATION	1.124606747190961E-6	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999974776292617	WITHOUT_CLASSIFICATION	2.5223707383665473E-6	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999998296171961	WITHOUT_CLASSIFICATION	1.7038280389481156E-7	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999997699384174	WITHOUT_CLASSIFICATION	2.3006158257786534E-7	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999997699384174	WITHOUT_CLASSIFICATION	2.3006158257786534E-7	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999994612346546	WITHOUT_CLASSIFICATION	5.387653453880138E-7	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999428781262877	WITHOUT_CLASSIFICATION	5.71218737123508E-5	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999948148237586	WITHOUT_CLASSIFICATION	5.185176241333035E-6	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999995754506409	WITHOUT_CLASSIFICATION	4.24549359156172E-7	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999801659379535	WITHOUT_CLASSIFICATION	1.983406204650973E-5	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999999213553451	WITHOUT_CLASSIFICATION	7.864465495800925E-8	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9998318820046457	WITHOUT_CLASSIFICATION	1.681179953542971E-4	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999991761426931	WITHOUT_CLASSIFICATION	8.238573070143352E-7	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9998178410803118	WITHOUT_CLASSIFICATION	1.8215891968829357E-4	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999945632032111	WITHOUT_CLASSIFICATION	5.436796788886577E-6	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9999986144295722	WITHOUT_CLASSIFICATION	1.3855704277676612E-6	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999998619675791	WITHOUT_CLASSIFICATION	1.3803242092352835E-7	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999999565136276	WITHOUT_CLASSIFICATION	4.348637236794141E-8	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999838112096858	WITHOUT_CLASSIFICATION	1.618879031420864E-5	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999921815862789	WITHOUT_CLASSIFICATION	7.818413721151698E-6	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999819010159031	WITHOUT_CLASSIFICATION	1.8098984096919055E-5	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999994548366918	WITHOUT_CLASSIFICATION	5.451633081628802E-7	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.999838801511138	WITHOUT_CLASSIFICATION	1.6119848886209315E-4	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999991077386766	WITHOUT_CLASSIFICATION	8.922613232911211E-7	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9999968799240284	WITHOUT_CLASSIFICATION	3.1200759714946217E-6	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999981344877711	WITHOUT_CLASSIFICATION	1.8655122288917208E-6	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9999929474275437	WITHOUT_CLASSIFICATION	7.052572456217115E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999992148834671	WITHOUT_CLASSIFICATION	7.851165329312107E-7	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9995558860051769	WITHOUT_CLASSIFICATION	4.4411399482314584E-4	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999992148834671	WITHOUT_CLASSIFICATION	7.851165329312107E-7	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999019308752051	WITHOUT_CLASSIFICATION	9.806912479494152E-5	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9998019544277958	WITHOUT_CLASSIFICATION	1.9804557220413782E-4	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999940599926282	WITHOUT_CLASSIFICATION	5.9400073716390775E-6	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999555016787658	WITHOUT_CLASSIFICATION	4.44983212341539E-5	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9998689905317288	WITHOUT_CLASSIFICATION	1.3100946827114361E-4	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999643448212795	WITHOUT_CLASSIFICATION	3.565517872044328E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999643448212795	WITHOUT_CLASSIFICATION	3.565517872044328E-5	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999643448212795	WITHOUT_CLASSIFICATION	3.565517872044328E-5	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999978160074666	WITHOUT_CLASSIFICATION	2.1839925334429225E-6	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9996855051331801	WITHOUT_CLASSIFICATION	3.144948668198551E-4	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.999996162062896	WITHOUT_CLASSIFICATION	3.837937103990717E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999746103087902	WITHOUT_CLASSIFICATION	2.5389691209817438E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999746103087902	WITHOUT_CLASSIFICATION	2.5389691209817438E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999746103087902	WITHOUT_CLASSIFICATION	2.5389691209817438E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999746103087902	WITHOUT_CLASSIFICATION	2.5389691209817438E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999746103087902	WITHOUT_CLASSIFICATION	2.5389691209817438E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999746103087902	WITHOUT_CLASSIFICATION	2.5389691209817438E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999752388804053	WITHOUT_CLASSIFICATION	2.4761119594828475E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999752388804053	WITHOUT_CLASSIFICATION	2.4761119594828475E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999752388804053	WITHOUT_CLASSIFICATION	2.4761119594828475E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999752388804053	WITHOUT_CLASSIFICATION	2.4761119594828475E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999752388804053	WITHOUT_CLASSIFICATION	2.4761119594828475E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999617274046401	WITHOUT_CLASSIFICATION	3.8272595359997476E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999617274046401	WITHOUT_CLASSIFICATION	3.8272595359997476E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999617274046401	WITHOUT_CLASSIFICATION	3.8272595359997476E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999617274046401	WITHOUT_CLASSIFICATION	3.8272595359997476E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999617274046401	WITHOUT_CLASSIFICATION	3.8272595359997476E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999940945986187	WITHOUT_CLASSIFICATION	5.9054013813033915E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999940945986187	WITHOUT_CLASSIFICATION	5.9054013813033915E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999940945986187	WITHOUT_CLASSIFICATION	5.9054013813033915E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999940945986187	WITHOUT_CLASSIFICATION	5.9054013813033915E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999940945986187	WITHOUT_CLASSIFICATION	5.9054013813033915E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.999940945986187	WITHOUT_CLASSIFICATION	5.9054013813033915E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999884943543622	WITHOUT_CLASSIFICATION	1.1505645637772133E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999884943543622	WITHOUT_CLASSIFICATION	1.1505645637772133E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999884943543622	WITHOUT_CLASSIFICATION	1.1505645637772133E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999884943543622	WITHOUT_CLASSIFICATION	1.1505645637772133E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999884943543622	WITHOUT_CLASSIFICATION	1.1505645637772133E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999979939960355	WITHOUT_CLASSIFICATION	2.0060039645083316E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999979939960355	WITHOUT_CLASSIFICATION	2.0060039645083316E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999979939960355	WITHOUT_CLASSIFICATION	2.0060039645083316E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999979939960355	WITHOUT_CLASSIFICATION	2.0060039645083316E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999979939960355	WITHOUT_CLASSIFICATION	2.0060039645083316E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999884896030162	WITHOUT_CLASSIFICATION	1.1510396983784854E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999884896030162	WITHOUT_CLASSIFICATION	1.1510396983784854E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999884896030162	WITHOUT_CLASSIFICATION	1.1510396983784854E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999884896030162	WITHOUT_CLASSIFICATION	1.1510396983784854E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999884896030162	WITHOUT_CLASSIFICATION	1.1510396983784854E-5	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.999999927518154	WITHOUT_CLASSIFICATION	7.248184598029997E-8	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999993582068971	WITHOUT_CLASSIFICATION	6.417931028549974E-7	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999751358539596	WITHOUT_CLASSIFICATION	2.4864146040385515E-5	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999976465630267	WITHOUT_CLASSIFICATION	2.3534369732190855E-6	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999895003746222	WITHOUT_CLASSIFICATION	1.0499625377836146E-5	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.999996921297544	WITHOUT_CLASSIFICATION	3.0787024559678118E-6	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999966970896523	WITHOUT_CLASSIFICATION	3.302910347681047E-6	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999962673036751	WITHOUT_CLASSIFICATION	3.732696324960232E-6	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999963452238764	WITHOUT_CLASSIFICATION	3.6547761236685483E-6	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999967033451108	WITHOUT_CLASSIFICATION	3.2966548890863854E-6	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999962765688013	WITHOUT_CLASSIFICATION	3.723431198675008E-6	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999955726170835	WITHOUT_CLASSIFICATION	4.427382916478699E-6	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9999967469593265	WITHOUT_CLASSIFICATION	3.2530406735694053E-6	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9999963276108277	WITHOUT_CLASSIFICATION	3.6723891722156494E-6	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9999957699591767	WITHOUT_CLASSIFICATION	4.230040823297692E-6	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9999963457433169	WITHOUT_CLASSIFICATION	3.6542566831154976E-6	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9999962872079685	WITHOUT_CLASSIFICATION	3.7127920313620755E-6	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9999965792367083	WITHOUT_CLASSIFICATION	3.4207632917723855E-6	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9999957608583445	WITHOUT_CLASSIFICATION	4.239141655472055E-6	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9999957224045728	WITHOUT_CLASSIFICATION	4.277595427304683E-6	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9999962826968487	WITHOUT_CLASSIFICATION	3.7173031513943807E-6	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9999961586457387	WITHOUT_CLASSIFICATION	3.841354261276553E-6	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9999960632522039	WITHOUT_CLASSIFICATION	3.936747796084824E-6	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9999959456837957	WITHOUT_CLASSIFICATION	4.054316204356759E-6	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9999958897691259	WITHOUT_CLASSIFICATION	4.110230874051612E-6	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9999960001175757	WITHOUT_CLASSIFICATION	3.999882424208965E-6	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.99999593029975	WITHOUT_CLASSIFICATION	4.069700250014241E-6	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9999963203395424	WITHOUT_CLASSIFICATION	3.6796604575019663E-6	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9999960454438236	WITHOUT_CLASSIFICATION	3.9545561764626745E-6	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9999958555131381	WITHOUT_CLASSIFICATION	4.1444868619506695E-6	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9999963131942883	WITHOUT_CLASSIFICATION	3.6868057117204685E-6	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9999958999178472	WITHOUT_CLASSIFICATION	4.100082152818655E-6	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9999953547381929	WITHOUT_CLASSIFICATION	4.6452618070866086E-6	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9999953026720941	WITHOUT_CLASSIFICATION	4.6973279058505174E-6	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.9999953160676651	WITHOUT_CLASSIFICATION	4.683932334807769E-6	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.999995697912257	WITHOUT_CLASSIFICATION	4.302087743080988E-6	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9999952817602675	WITHOUT_CLASSIFICATION	4.718239732478093E-6	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9999954658987383	WITHOUT_CLASSIFICATION	4.534101261564865E-6	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.9999954887448107	WITHOUT_CLASSIFICATION	4.5112551892893984E-6	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9999963191951597	WITHOUT_CLASSIFICATION	3.6808048403751185E-6	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9999954366194986	WITHOUT_CLASSIFICATION	4.563380501392345E-6	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.999995403264892	WITHOUT_CLASSIFICATION	4.596735107919057E-6	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9999955251128815	WITHOUT_CLASSIFICATION	4.474887118548971E-6	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9999967980377659	WITHOUT_CLASSIFICATION	3.2019622342471668E-6	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9999962560005223	WITHOUT_CLASSIFICATION	3.7439994776040935E-6	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9999965098855903	WITHOUT_CLASSIFICATION	3.490114409731037E-6	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.999996519104392	WITHOUT_CLASSIFICATION	3.480895608034425E-6	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.9999964529428323	WITHOUT_CLASSIFICATION	3.5470571677240692E-6	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.9999955118884241	WITHOUT_CLASSIFICATION	4.488111576011747E-6	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999963389331205	WITHOUT_CLASSIFICATION	3.6610668796147378E-6	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999958183721755	WITHOUT_CLASSIFICATION	4.18162782444227E-6	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.99999508377831	WITHOUT_CLASSIFICATION	4.916221689956958E-6	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999950656460418	WITHOUT_CLASSIFICATION	4.934353958211735E-6	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999969299251481	WITHOUT_CLASSIFICATION	3.070074851776261E-6	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999956143480503	WITHOUT_CLASSIFICATION	4.385651949736867E-6	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999961036137698	WITHOUT_CLASSIFICATION	3.896386230230794E-6	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999951610951474	WITHOUT_CLASSIFICATION	4.838904852516873E-6	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999955861976424	WITHOUT_CLASSIFICATION	4.4138023575819785E-6	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.999995642013812	WITHOUT_CLASSIFICATION	4.357986187956242E-6	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999954364799826	WITHOUT_CLASSIFICATION	4.563520017518193E-6	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999952481958302	WITHOUT_CLASSIFICATION	4.751804169741338E-6	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999961878817615	WITHOUT_CLASSIFICATION	3.812118238594615E-6	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9999960203915069	WITHOUT_CLASSIFICATION	3.979608493112822E-6	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.999995302447498	WITHOUT_CLASSIFICATION	4.697552501945507E-6	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9999954692373311	WITHOUT_CLASSIFICATION	4.530762668961088E-6	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9999951531657504	WITHOUT_CLASSIFICATION	4.84683424966539E-6	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9999959879103453	WITHOUT_CLASSIFICATION	4.012089654736112E-6	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9999960722589543	WITHOUT_CLASSIFICATION	3.9277410457184985E-6	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.9999953171910257	WITHOUT_CLASSIFICATION	4.682808974182025E-6	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9999953487663618	WITHOUT_CLASSIFICATION	4.6512336382903E-6	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9999952756060401	WITHOUT_CLASSIFICATION	4.724393959927052E-6	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9999955755390029	WITHOUT_CLASSIFICATION	4.42446099707318E-6	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9999958207027851	WITHOUT_CLASSIFICATION	4.179297214887064E-6	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9999953618127898	WITHOUT_CLASSIFICATION	4.638187210298233E-6	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9999955229853129	WITHOUT_CLASSIFICATION	4.477014687123571E-6	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9999960817264543	WITHOUT_CLASSIFICATION	3.918273545773909E-6	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.999995559349633	WITHOUT_CLASSIFICATION	4.440650366888828E-6	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9999966726548662	WITHOUT_CLASSIFICATION	3.3273451336671105E-6	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.9999956303880619	WITHOUT_CLASSIFICATION	4.369611938104721E-6	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9999958539749375	WITHOUT_CLASSIFICATION	4.146025062579679E-6	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9999953053865508	WITHOUT_CLASSIFICATION	4.69461344913498E-6	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9999951850439357	WITHOUT_CLASSIFICATION	4.814956064254923E-6	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9999959791040967	WITHOUT_CLASSIFICATION	4.020895903333894E-6	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9999949963028427	WITHOUT_CLASSIFICATION	5.003697157272133E-6	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9999953569408387	WITHOUT_CLASSIFICATION	4.643059161169563E-6	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9999955384451311	WITHOUT_CLASSIFICATION	4.461554868802116E-6	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9999951355480453	WITHOUT_CLASSIFICATION	4.864451954644044E-6	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9999951898081739	WITHOUT_CLASSIFICATION	4.810191826068183E-6	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.999996188912739	WITHOUT_CLASSIFICATION	3.8110872610532336E-6	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9999963329626962	WITHOUT_CLASSIFICATION	3.667037303854118E-6	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9999955725814104	WITHOUT_CLASSIFICATION	4.427418589652578E-6	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9999958330677716	WITHOUT_CLASSIFICATION	4.166932228412789E-6	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.999996009417001	WITHOUT_CLASSIFICATION	3.9905829991355865E-6	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9999953091161834	WITHOUT_CLASSIFICATION	4.690883816627573E-6	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9999970382049423	WITHOUT_CLASSIFICATION	2.9617950576698615E-6	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9999962492190253	WITHOUT_CLASSIFICATION	3.7507809746650153E-6	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.999996105226934	WITHOUT_CLASSIFICATION	3.894773065927E-6	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9999962083271984	WITHOUT_CLASSIFICATION	3.7916728016068343E-6	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999956766221482	WITHOUT_CLASSIFICATION	4.323377851795652E-6	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999954727054204	WITHOUT_CLASSIFICATION	4.527294579557957E-6	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999952569369237	WITHOUT_CLASSIFICATION	4.743063076342282E-6	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999960006325705	WITHOUT_CLASSIFICATION	3.999367429471721E-6	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999954302639513	WITHOUT_CLASSIFICATION	4.569736048658489E-6	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999961923410282	WITHOUT_CLASSIFICATION	3.807658971761666E-6	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999952689865095	WITHOUT_CLASSIFICATION	4.731013490527282E-6	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999962760014967	WITHOUT_CLASSIFICATION	3.723998503380296E-6	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999964134033856	WITHOUT_CLASSIFICATION	3.586596614425904E-6	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999976176930218	WITHOUT_CLASSIFICATION	2.382306978241778E-6	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999976952981592	WITHOUT_CLASSIFICATION	2.3047018408637543E-6	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.999996638982448	WITHOUT_CLASSIFICATION	3.3610175520045357E-6	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9999954863743574	WITHOUT_CLASSIFICATION	4.51362564258844E-6	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9999957747810317	WITHOUT_CLASSIFICATION	4.225218968282941E-6	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.9999961851657108	WITHOUT_CLASSIFICATION	3.8148342892888065E-6	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9999962478073013	WITHOUT_CLASSIFICATION	3.7521926986578247E-6	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9999953392201396	WITHOUT_CLASSIFICATION	4.660779860434271E-6	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.999996248975762	WITHOUT_CLASSIFICATION	3.751024237931477E-6	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9999958150571066	WITHOUT_CLASSIFICATION	4.1849428933814655E-6	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.99999517916924	WITHOUT_CLASSIFICATION	4.820830759980968E-6	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.9999953673115065	WITHOUT_CLASSIFICATION	4.632688493481133E-6	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9999955786237947	WITHOUT_CLASSIFICATION	4.421376205315804E-6	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9999953482630108	WITHOUT_CLASSIFICATION	4.6517369891865235E-6	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9999953152386104	WITHOUT_CLASSIFICATION	4.684761389617436E-6	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9999965796925722	WITHOUT_CLASSIFICATION	3.420307427827032E-6	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9999967210284855	WITHOUT_CLASSIFICATION	3.278971514556072E-6	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9999964224766036	WITHOUT_CLASSIFICATION	3.577523396332796E-6	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9999965411036037	WITHOUT_CLASSIFICATION	3.4588963962954045E-6	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.999996124188823	WITHOUT_CLASSIFICATION	3.875811176943176E-6	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9999956660411634	WITHOUT_CLASSIFICATION	4.333958836626807E-6	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9999957773270173	WITHOUT_CLASSIFICATION	4.2226729826917285E-6	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9999962717980957	WITHOUT_CLASSIFICATION	3.728201904286103E-6	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9999953975710514	WITHOUT_CLASSIFICATION	4.602428948610113E-6	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9999962498963044	WITHOUT_CLASSIFICATION	3.750103695713621E-6	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9999952093019577	WITHOUT_CLASSIFICATION	4.790698042262464E-6	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9999953934659395	WITHOUT_CLASSIFICATION	4.60653406056516E-6	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9999952027531909	WITHOUT_CLASSIFICATION	4.797246809084454E-6	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9999953136503895	WITHOUT_CLASSIFICATION	4.68634961045403E-6	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9999959503352189	WITHOUT_CLASSIFICATION	4.049664781084046E-6	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9999976200511063	WITHOUT_CLASSIFICATION	2.379948893647675E-6	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9999978575551224	WITHOUT_CLASSIFICATION	2.1424448777253788E-6	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9999976885577002	WITHOUT_CLASSIFICATION	2.3114422997575797E-6	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9999973566099409	WITHOUT_CLASSIFICATION	2.6433900589457226E-6	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9999976989087639	WITHOUT_CLASSIFICATION	2.3010912361161632E-6	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.999997357271353	WITHOUT_CLASSIFICATION	2.642728647055074E-6	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9999973257300021	WITHOUT_CLASSIFICATION	2.674269997880167E-6	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9999972096107066	WITHOUT_CLASSIFICATION	2.7903892933198833E-6	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9999973336228788	WITHOUT_CLASSIFICATION	2.6663771211510424E-6	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.999997479434777	WITHOUT_CLASSIFICATION	2.520565222998428E-6	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.99999730919834	WITHOUT_CLASSIFICATION	2.690801659954067E-6	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999962952627537	WITHOUT_CLASSIFICATION	3.7047372463643183E-6	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999967357822165	WITHOUT_CLASSIFICATION	3.2642177834768332E-6	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999975195042841	WITHOUT_CLASSIFICATION	2.4804957159819446E-6	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.999997303769672	WITHOUT_CLASSIFICATION	2.6962303280442338E-6	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999965382698726	WITHOUT_CLASSIFICATION	3.461730127501919E-6	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999976328445219	WITHOUT_CLASSIFICATION	2.367155478069674E-6	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999976010155606	WITHOUT_CLASSIFICATION	2.3989844394375978E-6	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999968925797991	WITHOUT_CLASSIFICATION	3.107420200993412E-6	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999968101433068	WITHOUT_CLASSIFICATION	3.18985669325258E-6	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999966719907469	WITHOUT_CLASSIFICATION	3.328009253069373E-6	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9999974060694986	WITHOUT_CLASSIFICATION	2.5939305014877252E-6	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9999974196592739	WITHOUT_CLASSIFICATION	2.5803407260685472E-6	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9999974013853666	WITHOUT_CLASSIFICATION	2.5986146333408554E-6	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9999974433731734	WITHOUT_CLASSIFICATION	2.5566268266984705E-6	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9999977079616154	WITHOUT_CLASSIFICATION	2.2920383845265933E-6	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9999964572951359	WITHOUT_CLASSIFICATION	3.542704864103064E-6	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9999963204002348	WITHOUT_CLASSIFICATION	3.679599765280067E-6	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9999964512041064	WITHOUT_CLASSIFICATION	3.5487958936499157E-6	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9999968543408065	WITHOUT_CLASSIFICATION	3.1456591934060052E-6	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9999966466900063	WITHOUT_CLASSIFICATION	3.3533099936341523E-6	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9999968810077479	WITHOUT_CLASSIFICATION	3.1189922521407468E-6	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9999963787004268	WITHOUT_CLASSIFICATION	3.621299573243211E-6	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9999965370899401	WITHOUT_CLASSIFICATION	3.462910059974494E-6	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9999963226600695	WITHOUT_CLASSIFICATION	3.677339930428546E-6	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9999966692943832	WITHOUT_CLASSIFICATION	3.330705616713927E-6	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9999968726449954	WITHOUT_CLASSIFICATION	3.1273550045669197E-6	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9999965693987969	WITHOUT_CLASSIFICATION	3.4306012031597077E-6	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9999967490713308	WITHOUT_CLASSIFICATION	3.2509286690576882E-6	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9999973530328117	WITHOUT_CLASSIFICATION	2.6469671884216863E-6	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.999996478387088	WITHOUT_CLASSIFICATION	3.521612911981521E-6	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9999971501733275	WITHOUT_CLASSIFICATION	2.849826672630497E-6	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9999968300083614	WITHOUT_CLASSIFICATION	3.1699916387376815E-6	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9999972663985578	WITHOUT_CLASSIFICATION	2.7336014422407436E-6	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9999972451489938	WITHOUT_CLASSIFICATION	2.7548510061426548E-6	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9999968100220402	WITHOUT_CLASSIFICATION	3.1899779597962636E-6	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9999968445279039	WITHOUT_CLASSIFICATION	3.155472096025374E-6	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9999969128978637	WITHOUT_CLASSIFICATION	3.0871021361838813E-6	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9999968454898782	WITHOUT_CLASSIFICATION	3.1545101216828553E-6	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.999997563439471	WITHOUT_CLASSIFICATION	2.4365605290401747E-6	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9999972330084519	WITHOUT_CLASSIFICATION	2.766991548021028E-6	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9999967923848275	WITHOUT_CLASSIFICATION	3.2076151724887774E-6	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.999996963328756	WITHOUT_CLASSIFICATION	3.0366712440891747E-6	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9999968152501253	WITHOUT_CLASSIFICATION	3.184749874781238E-6	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9999970317828627	WITHOUT_CLASSIFICATION	2.9682171372402186E-6	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9999968716839195	WITHOUT_CLASSIFICATION	3.1283160805504605E-6	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9999969732863618	WITHOUT_CLASSIFICATION	3.026713638251233E-6	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9999969626093241	WITHOUT_CLASSIFICATION	3.0373906759444816E-6	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9999975905288059	WITHOUT_CLASSIFICATION	2.409471194059857E-6	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999969750249692	WITHOUT_CLASSIFICATION	3.024975030694493E-6	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999969651080435	WITHOUT_CLASSIFICATION	3.0348919564293957E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999971721737307	WITHOUT_CLASSIFICATION	2.8278262692942666E-6	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.999996417726957	WITHOUT_CLASSIFICATION	3.5822730429160892E-6	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999966973641274	WITHOUT_CLASSIFICATION	3.3026358725799788E-6	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999972755100344	WITHOUT_CLASSIFICATION	2.7244899656685934E-6	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999964832514	WITHOUT_CLASSIFICATION	3.516748600063356E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999975225774711	WITHOUT_CLASSIFICATION	2.477422528979709E-6	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999965756982494	WITHOUT_CLASSIFICATION	3.42430175057952E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999966946895653	WITHOUT_CLASSIFICATION	3.3053104345978578E-6	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9999975761553854	WITHOUT_CLASSIFICATION	2.42384461449281E-6	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9999967638663757	WITHOUT_CLASSIFICATION	3.2361336243635663E-6	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9999968495891912	WITHOUT_CLASSIFICATION	3.15041080867677E-6	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9999971081239051	WITHOUT_CLASSIFICATION	2.8918760948922273E-6	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9999970000439353	WITHOUT_CLASSIFICATION	2.999956064633986E-6	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9999971917320916	WITHOUT_CLASSIFICATION	2.8082679083408155E-6	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9999968867006753	WITHOUT_CLASSIFICATION	3.1132993246448513E-6	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9999971436451546	WITHOUT_CLASSIFICATION	2.8563548455303467E-6	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9999970483248942	WITHOUT_CLASSIFICATION	2.9516751058425096E-6	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9999968846859758	WITHOUT_CLASSIFICATION	3.115314024145963E-6	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9999970265149923	WITHOUT_CLASSIFICATION	2.9734850077512267E-6	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9999967613801667	WITHOUT_CLASSIFICATION	3.238619833232778E-6	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9999968877737767	WITHOUT_CLASSIFICATION	3.1122262233869E-6	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9999969269628973	WITHOUT_CLASSIFICATION	3.0730371026675007E-6	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9999969285673661	WITHOUT_CLASSIFICATION	3.0714326338479973E-6	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9999968822450975	WITHOUT_CLASSIFICATION	3.1177549025157153E-6	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.999996889864731	WITHOUT_CLASSIFICATION	3.110135269020009E-6	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9999973254407105	WITHOUT_CLASSIFICATION	2.6745592893733973E-6	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9999972524858689	WITHOUT_CLASSIFICATION	2.747514131134822E-6	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9999965488397067	WITHOUT_CLASSIFICATION	3.4511602933311424E-6	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9999967025291961	WITHOUT_CLASSIFICATION	3.2974708038269255E-6	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.999996782412554	WITHOUT_CLASSIFICATION	3.2175874459885357E-6	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9999976193169928	WITHOUT_CLASSIFICATION	2.3806830072832273E-6	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9999968737211206	WITHOUT_CLASSIFICATION	3.1262788793690313E-6	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9999968737959706	WITHOUT_CLASSIFICATION	3.126204029350819E-6	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9999966169967288	WITHOUT_CLASSIFICATION	3.383003271192966E-6	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.999996457433614	WITHOUT_CLASSIFICATION	3.5425663859697804E-6	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9999966404805537	WITHOUT_CLASSIFICATION	3.35951944639616E-6	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9999964034096356	WITHOUT_CLASSIFICATION	3.5965903644756084E-6	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9999967057995709	WITHOUT_CLASSIFICATION	3.294200429083211E-6	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9999969426286435	WITHOUT_CLASSIFICATION	3.0573713566508127E-6	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.999997342094434	WITHOUT_CLASSIFICATION	2.6579055660627745E-6	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9999966310443964	WITHOUT_CLASSIFICATION	3.3689556036800457E-6	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9999971855853305	WITHOUT_CLASSIFICATION	2.814414669463527E-6	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9999970078314084	WITHOUT_CLASSIFICATION	2.99216859156898E-6	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9999967005107276	WITHOUT_CLASSIFICATION	3.299489272312159E-6	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9999962950358788	WITHOUT_CLASSIFICATION	3.70496412108539E-6	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9999968632445702	WITHOUT_CLASSIFICATION	3.13675542994838E-6	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.999996581980127	WITHOUT_CLASSIFICATION	3.4180198729783965E-6	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999964530935548	WITHOUT_CLASSIFICATION	3.5469064451358597E-6	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999968245814946	WITHOUT_CLASSIFICATION	3.1754185053496978E-6	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999971373048332	WITHOUT_CLASSIFICATION	2.8626951668242602E-6	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.999997318724838	WITHOUT_CLASSIFICATION	2.6812751620703875E-6	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999963945896954	WITHOUT_CLASSIFICATION	3.60541030471461E-6	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999968130218224	WITHOUT_CLASSIFICATION	3.186978177575931E-6	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999967737420143	WITHOUT_CLASSIFICATION	3.2262579857221742E-6	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999966026094056	WITHOUT_CLASSIFICATION	3.3973905943958454E-6	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999964327334318	WITHOUT_CLASSIFICATION	3.56726656826881E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999967854344575	WITHOUT_CLASSIFICATION	3.214565542556563E-6	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9999972565746779	WITHOUT_CLASSIFICATION	2.743425322054194E-6	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9999972239267307	WITHOUT_CLASSIFICATION	2.7760732693650487E-6	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9999966978003048	WITHOUT_CLASSIFICATION	3.3021996951893654E-6	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9999967491505843	WITHOUT_CLASSIFICATION	3.2508494156969773E-6	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9999968186894703	WITHOUT_CLASSIFICATION	3.181310529688696E-6	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.999996979122857	WITHOUT_CLASSIFICATION	3.020877142953892E-6	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9999965513619196	WITHOUT_CLASSIFICATION	3.448638080490055E-6	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9999964955262937	WITHOUT_CLASSIFICATION	3.504473706315877E-6	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9999964919667996	WITHOUT_CLASSIFICATION	3.5080332004218693E-6	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9999971983233664	WITHOUT_CLASSIFICATION	2.8016766334901827E-6	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9999968742249421	WITHOUT_CLASSIFICATION	3.125775057902286E-6	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9999966206084986	WITHOUT_CLASSIFICATION	3.3793915015100415E-6	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.999997491620882	WITHOUT_CLASSIFICATION	2.5083791179003735E-6	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9999963932926615	WITHOUT_CLASSIFICATION	3.606707338545526E-6	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9999966084688348	WITHOUT_CLASSIFICATION	3.391531165230171E-6	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9999967713518632	WITHOUT_CLASSIFICATION	3.228648136831101E-6	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9999968530434037	WITHOUT_CLASSIFICATION	3.146956596171861E-6	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9999970160231502	WITHOUT_CLASSIFICATION	2.9839768498241753E-6	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.999996956870039	WITHOUT_CLASSIFICATION	3.0431299609733946E-6	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9999964444620185	WITHOUT_CLASSIFICATION	3.5555379813999835E-6	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9999965293047454	WITHOUT_CLASSIFICATION	3.4706952546785018E-6	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9999967109711585	WITHOUT_CLASSIFICATION	3.289028841488243E-6	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9999963568107211	WITHOUT_CLASSIFICATION	3.643189278893082E-6	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9999963965619011	WITHOUT_CLASSIFICATION	3.6034380990208784E-6	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9999963711870917	WITHOUT_CLASSIFICATION	3.6288129082223687E-6	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9999967997721911	WITHOUT_CLASSIFICATION	3.2002278088023096E-6	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9999966488410394	WITHOUT_CLASSIFICATION	3.351158960505327E-6	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9999965105769544	WITHOUT_CLASSIFICATION	3.4894230456742654E-6	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9999965227121794	WITHOUT_CLASSIFICATION	3.477287820638742E-6	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9999965292351267	WITHOUT_CLASSIFICATION	3.470764873346801E-6	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9999974882327893	WITHOUT_CLASSIFICATION	2.51176721070649E-6	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9999976482032339	WITHOUT_CLASSIFICATION	2.3517967661078955E-6	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9999972497143194	WITHOUT_CLASSIFICATION	2.7502856806917937E-6	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9999974265474857	WITHOUT_CLASSIFICATION	2.573452514251828E-6	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9999965728163737	WITHOUT_CLASSIFICATION	3.4271836263786204E-6	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9999968221710736	WITHOUT_CLASSIFICATION	3.17782892630966E-6	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9999967419517204	WITHOUT_CLASSIFICATION	3.2580482795940567E-6	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.9999969199173421	WITHOUT_CLASSIFICATION	3.080082657924927E-6	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9999966100280137	WITHOUT_CLASSIFICATION	3.3899719864545297E-6	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.99994069606587	WITHOUT_CLASSIFICATION	5.930393412989932E-5	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9999430811478345	WITHOUT_CLASSIFICATION	5.691885216558432E-5	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999982213170073	WITHOUT_CLASSIFICATION	1.7786829926768815E-6	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.999989934128877	WITHOUT_CLASSIFICATION	1.006587112290941E-5	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9998800935024437	WITHOUT_CLASSIFICATION	1.1990649755627424E-4	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999519611231101	WITHOUT_CLASSIFICATION	4.8038876889870215E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9999777125722148	WITHOUT_CLASSIFICATION	2.2287427785142998E-5	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999551421349026	WITHOUT_CLASSIFICATION	4.4857865097365604E-5	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.9999966302532874	WITHOUT_CLASSIFICATION	3.3697467126053695E-6	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9999966103225949	WITHOUT_CLASSIFICATION	3.389677405051774E-6	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9999968912396643	WITHOUT_CLASSIFICATION	3.108760335726505E-6	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.99999656244518	WITHOUT_CLASSIFICATION	3.437554820028414E-6	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9999964430722433	WITHOUT_CLASSIFICATION	3.556927756695798E-6	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9999966330655944	WITHOUT_CLASSIFICATION	3.366934405479015E-6	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.999997594140996	WITHOUT_CLASSIFICATION	2.4058590040429154E-6	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9999974282192654	WITHOUT_CLASSIFICATION	2.571780734605835E-6	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9999964722246436	WITHOUT_CLASSIFICATION	3.5277753564679504E-6	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9999966025826795	WITHOUT_CLASSIFICATION	3.397417320557423E-6	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9999970115259481	WITHOUT_CLASSIFICATION	2.988474051975631E-6	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9999970202568187	WITHOUT_CLASSIFICATION	2.9797431812815972E-6	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.9999968494987626	WITHOUT_CLASSIFICATION	3.1505012374249805E-6	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9999966639240625	WITHOUT_CLASSIFICATION	3.33607593736807E-6	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9999972692477723	WITHOUT_CLASSIFICATION	2.730752227652402E-6	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9999969533538702	WITHOUT_CLASSIFICATION	3.0466461298588636E-6	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9999965765374803	WITHOUT_CLASSIFICATION	3.4234625197642346E-6	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9999968921227771	WITHOUT_CLASSIFICATION	3.107877222993031E-6	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9999968651871716	WITHOUT_CLASSIFICATION	3.1348128284432993E-6	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9999965833330244	WITHOUT_CLASSIFICATION	3.4166669755436935E-6	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9999970581967226	WITHOUT_CLASSIFICATION	2.9418032775153135E-6	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.999996968322747	WITHOUT_CLASSIFICATION	3.0316772530619178E-6	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9999974409893448	WITHOUT_CLASSIFICATION	2.5590106550225774E-6	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9998502681238555	WITHOUT_CLASSIFICATION	1.4973187614444872E-4	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999962307468915	WITHOUT_CLASSIFICATION	3.7692531086114487E-6	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999983406511647	WITHOUT_CLASSIFICATION	1.6593488353579078E-6	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999942899143229	WITHOUT_CLASSIFICATION	5.710085677105865E-6	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999995240973045	WITHOUT_CLASSIFICATION	4.7590269543571804E-7	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999420555093905	WITHOUT_CLASSIFICATION	5.7944490609440985E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999995899906847	WITHOUT_CLASSIFICATION	4.100093153737719E-7	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999988753932528	WITHOUT_CLASSIFICATION	1.124606747190961E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999997699384174	WITHOUT_CLASSIFICATION	2.3006158257786534E-7	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999997699384174	WITHOUT_CLASSIFICATION	2.3006158257786534E-7	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9999991697817792	WITHOUT_CLASSIFICATION	8.302182207959948E-7	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999937999632457	WITHOUT_CLASSIFICATION	6.200036754395647E-6	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999998551329168	WITHOUT_CLASSIFICATION	1.4486708328149245E-7	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999976239281116	WITHOUT_CLASSIFICATION	2.3760718884329678E-6	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999998307084149	WITHOUT_CLASSIFICATION	1.6929158497215526E-7	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999832954433733	WITHOUT_CLASSIFICATION	1.670455662677321E-5	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999463861025858	WITHOUT_CLASSIFICATION	5.3613897414281785E-5	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999996978312399	WITHOUT_CLASSIFICATION	3.021687601636913E-7	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999993870407462	WITHOUT_CLASSIFICATION	6.129592537466178E-7	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999965984345742	WITHOUT_CLASSIFICATION	3.401565425833055E-6	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999955340552992	WITHOUT_CLASSIFICATION	4.465944700885058E-6	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999875723396289	WITHOUT_CLASSIFICATION	1.2427660371109908E-5	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999934776833279	WITHOUT_CLASSIFICATION	6.522316672093877E-6	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.999972075598092	WITHOUT_CLASSIFICATION	2.7924401907951732E-5	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.99999483819648	WITHOUT_CLASSIFICATION	5.161803519920275E-6	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.99999483819648	WITHOUT_CLASSIFICATION	5.161803519920275E-6	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999704412439282	WITHOUT_CLASSIFICATION	2.9558756071785804E-5	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999996071932998	WITHOUT_CLASSIFICATION	3.9280670009293484E-7	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999991548098855	WITHOUT_CLASSIFICATION	8.451901145907372E-7	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999872536616395	WITHOUT_CLASSIFICATION	1.2746338360410489E-5	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997765598282	WITHOUT_CLASSIFICATION	2.234401717375858E-7	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999988892880723	WITHOUT_CLASSIFICATION	1.1107119277062645E-5	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999923304538925	WITHOUT_CLASSIFICATION	7.669546107407541E-6	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999988892880723	WITHOUT_CLASSIFICATION	1.1107119277062645E-5	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999915701975429	WITHOUT_CLASSIFICATION	8.429802457166252E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999946206564545	WITHOUT_CLASSIFICATION	5.3793435454792565E-6	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9999909720470599	WITHOUT_CLASSIFICATION	9.027952940078859E-6	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9999640259290928	WITHOUT_CLASSIFICATION	3.597407090709572E-5	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999955195392761	WITHOUT_CLASSIFICATION	4.48046072385436E-6	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999980549178799	WITHOUT_CLASSIFICATION	1.945082120074916E-6	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999913623617649	WITHOUT_CLASSIFICATION	8.637638235194286E-6	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999945633267447	WITHOUT_CLASSIFICATION	5.436673255253678E-6	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999985316056732	WITHOUT_CLASSIFICATION	1.4683943268637415E-6	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999998710909094	WITHOUT_CLASSIFICATION	1.2890909057716837E-7	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999979539650227	WITHOUT_CLASSIFICATION	2.046034977383012E-6	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999955771502081	WITHOUT_CLASSIFICATION	4.422849791864057E-6	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.999986123693632	WITHOUT_CLASSIFICATION	1.3876306367824838E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.999865743687134	WITHOUT_CLASSIFICATION	1.3425631286601245E-4	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999991357910625	WITHOUT_CLASSIFICATION	8.642089374909224E-7	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999991357910625	WITHOUT_CLASSIFICATION	8.642089374909224E-7	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999985211077569	WITHOUT_CLASSIFICATION	1.4788922432071278E-6	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999936875341632	WITHOUT_CLASSIFICATION	6.312465836905528E-6	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999886923467897	WITHOUT_CLASSIFICATION	1.1307653210384497E-5	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999999103990617	WITHOUT_CLASSIFICATION	8.960093830385598E-8	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9999978888689708	WITHOUT_CLASSIFICATION	2.1111310291573527E-6	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999988892880723	WITHOUT_CLASSIFICATION	1.1107119277062645E-5	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999997261137061	WITHOUT_CLASSIFICATION	2.7388629377288233E-7	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999998186698125	WITHOUT_CLASSIFICATION	1.8133018747622984E-7	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999997274335006	WITHOUT_CLASSIFICATION	2.725664993308446E-7	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999996604490261	WITHOUT_CLASSIFICATION	3.3955097377718135E-7	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999995657896084	WITHOUT_CLASSIFICATION	4.342103915652256E-7	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999714816098185	WITHOUT_CLASSIFICATION	2.8518390181590658E-5	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.999995232247986	WITHOUT_CLASSIFICATION	4.76775201399969E-6	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999808145713469	WITHOUT_CLASSIFICATION	1.9185428653003755E-5	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9997716422307943	WITHOUT_CLASSIFICATION	2.283577692058181E-4	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9995770764299112	WITHOUT_CLASSIFICATION	4.2292357008880355E-4	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999573806497751	WITHOUT_CLASSIFICATION	4.261935022486475E-5	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999994631145986	WITHOUT_CLASSIFICATION	5.368854012841577E-7	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999996974925789	WITHOUT_CLASSIFICATION	3.0250742104163007E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999845869525155	WITHOUT_CLASSIFICATION	1.541304748452407E-5	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9891821313795222	WITHOUT_CLASSIFICATION	0.010817868620477743	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999964023004766	WITHOUT_CLASSIFICATION	3.5976995233013467E-6	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999990630325335	WITHOUT_CLASSIFICATION	9.369674664164993E-7	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9999909982711559	WITHOUT_CLASSIFICATION	9.00172884413291E-6	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9999813483945699	WITHOUT_CLASSIFICATION	1.8651605430175426E-5	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9997778696446846	WITHOUT_CLASSIFICATION	2.2213035531529193E-4	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999954118043645	WITHOUT_CLASSIFICATION	4.588195635558704E-6	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999688700558477	WITHOUT_CLASSIFICATION	3.112994415242241E-5	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999978624662521	WITHOUT_CLASSIFICATION	2.1375337478253154E-6	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999980252157992	WITHOUT_CLASSIFICATION	1.9747842007490516E-6	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.999996041700433	WITHOUT_CLASSIFICATION	3.958299567114454E-6	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999993810241197	WITHOUT_CLASSIFICATION	6.189758802650622E-7	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999998991815852	WITHOUT_CLASSIFICATION	1.0081841482045871E-7	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999961195213508	WITHOUT_CLASSIFICATION	3.880478649126705E-6	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9997105055261706	WITHOUT_CLASSIFICATION	2.894944738294115E-4	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999992705317378	WITHOUT_CLASSIFICATION	7.294682622700866E-7	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999955261918435	WITHOUT_CLASSIFICATION	4.473808156403428E-6	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9999981370754182	WITHOUT_CLASSIFICATION	1.8629245818318366E-6	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999909793147956	WITHOUT_CLASSIFICATION	9.020685204400816E-6	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999997496314407	WITHOUT_CLASSIFICATION	2.5036855924322313E-7	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999804024482751	WITHOUT_CLASSIFICATION	1.9597551724837812E-5	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999996470368473	WITHOUT_CLASSIFICATION	3.529631527579185E-7	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999692853749624	WITHOUT_CLASSIFICATION	3.0714625037445796E-5	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9999959327166466	WITHOUT_CLASSIFICATION	4.0672833534274815E-6	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9999994641429031	WITHOUT_CLASSIFICATION	5.358570969907408E-7	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999998788452095	WITHOUT_CLASSIFICATION	1.211547905202383E-7	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999551421349026	WITHOUT_CLASSIFICATION	4.4857865097365604E-5	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999883700496773	WITHOUT_CLASSIFICATION	1.1629950322740846E-5	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999940828967196	WITHOUT_CLASSIFICATION	5.917103280390069E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999510562027372	WITHOUT_CLASSIFICATION	4.89437972628005E-5	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999989689335841	WITHOUT_CLASSIFICATION	1.0310664159345948E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999946206564545	WITHOUT_CLASSIFICATION	5.3793435454792565E-6	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9999972107710913	WITHOUT_CLASSIFICATION	2.789228908586666E-6	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999999297535066	WITHOUT_CLASSIFICATION	7.024649338703604E-8	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999995062166597	WITHOUT_CLASSIFICATION	4.937833403722277E-7	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999952416612242	WITHOUT_CLASSIFICATION	4.758338775793189E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999952416612242	WITHOUT_CLASSIFICATION	4.758338775793189E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999785891018971	WITHOUT_CLASSIFICATION	2.141089810285977E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999785891018971	WITHOUT_CLASSIFICATION	2.141089810285977E-5	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999785891018971	WITHOUT_CLASSIFICATION	2.141089810285977E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999537807763548	WITHOUT_CLASSIFICATION	4.6219223645250023E-5	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999537807763548	WITHOUT_CLASSIFICATION	4.6219223645250023E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.999988571525015	WITHOUT_CLASSIFICATION	1.1428474984992091E-5	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.999988571525015	WITHOUT_CLASSIFICATION	1.1428474984992091E-5	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999607048590798	WITHOUT_CLASSIFICATION	3.92951409202686E-5	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999862411796733	WITHOUT_CLASSIFICATION	1.375882032684451E-5	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999993194600051	WITHOUT_CLASSIFICATION	6.805399949537377E-7	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999993194600051	WITHOUT_CLASSIFICATION	6.805399949537377E-7	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999996705693117	WITHOUT_CLASSIFICATION	3.294306883002076E-7	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999986138245258	WITHOUT_CLASSIFICATION	1.3861754742193158E-6	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999992969416228	WITHOUT_CLASSIFICATION	7.030583772588754E-7	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999997763393927	WITHOUT_CLASSIFICATION	2.2366060722999844E-7	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999922308329047	WITHOUT_CLASSIFICATION	7.769167095377412E-6	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999993904541584	WITHOUT_CLASSIFICATION	6.09545841600764E-7	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999995169733582	WITHOUT_CLASSIFICATION	4.830266418070983E-7	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999991778460853	WITHOUT_CLASSIFICATION	8.221539147090226E-7	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9999991499511277	WITHOUT_CLASSIFICATION	8.500488723266169E-7	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9999940606737562	WITHOUT_CLASSIFICATION	5.93932624384172E-6	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999831460826174	WITHOUT_CLASSIFICATION	1.685391738261441E-5	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9999877238554626	WITHOUT_CLASSIFICATION	1.2276144537422743E-5	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9999963200408638	WITHOUT_CLASSIFICATION	3.6799591362448577E-6	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.999993643952029	WITHOUT_CLASSIFICATION	6.356047970897336E-6	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999994841145367	WITHOUT_CLASSIFICATION	5.158854632253643E-7	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9998860121797897	WITHOUT_CLASSIFICATION	1.1398782021036887E-4	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9970468088800786	WITHOUT_CLASSIFICATION	0.002953191119921462	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999587537459631	WITHOUT_CLASSIFICATION	4.124625403689301E-5	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999751946359341	WITHOUT_CLASSIFICATION	2.4805364065874284E-5	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999225459902115	WITHOUT_CLASSIFICATION	7.745400978852024E-5	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999980786160041	WITHOUT_CLASSIFICATION	1.9213839958642582E-6	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999973750860252	WITHOUT_CLASSIFICATION	2.624913974962689E-6	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9999988854759171	WITHOUT_CLASSIFICATION	1.1145240828737323E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999174175073	WITHOUT_CLASSIFICATION	8.258249275422823E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999998006232733	WITHOUT_CLASSIFICATION	1.993767266216631E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999114887859	WITHOUT_CLASSIFICATION	8.851121419736111E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999022201814	WITHOUT_CLASSIFICATION	9.777981857476537E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999997483235704	WITHOUT_CLASSIFICATION	2.516764295795603E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999105138634	WITHOUT_CLASSIFICATION	8.948613666477588E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999997839559907	WITHOUT_CLASSIFICATION	2.1604400929312926E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999999904089519	WITHOUT_CLASSIFICATION	9.5910481046834E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999756411886	WITHOUT_CLASSIFICATION	2.435881140796026E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999411911797	WITHOUT_CLASSIFICATION	5.88088203088625E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997454568226	WITHOUT_CLASSIFICATION	2.545431774662756E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999411911797	WITHOUT_CLASSIFICATION	5.88088203088625E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999411911797	WITHOUT_CLASSIFICATION	5.88088203088625E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999411911797	WITHOUT_CLASSIFICATION	5.88088203088625E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999411911797	WITHOUT_CLASSIFICATION	5.88088203088625E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999411911797	WITHOUT_CLASSIFICATION	5.88088203088625E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999411911797	WITHOUT_CLASSIFICATION	5.88088203088625E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997454568226	WITHOUT_CLASSIFICATION	2.545431774662756E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997454568226	WITHOUT_CLASSIFICATION	2.545431774662756E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997454568226	WITHOUT_CLASSIFICATION	2.545431774662756E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997454568226	WITHOUT_CLASSIFICATION	2.545431774662756E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997454568226	WITHOUT_CLASSIFICATION	2.545431774662756E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997454568226	WITHOUT_CLASSIFICATION	2.545431774662756E-7	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999821596807443	WITHOUT_CLASSIFICATION	1.784031925562757E-5	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.99999812693732	WITHOUT_CLASSIFICATION	1.8730626799706089E-6	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999902603595496	WITHOUT_CLASSIFICATION	9.739640450438262E-6	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999996574536869	WITHOUT_CLASSIFICATION	3.425463129998723E-7	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999999884277361	WITHOUT_CLASSIFICATION	1.1572263800653745E-8	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999997216198648	WITHOUT_CLASSIFICATION	2.7838013514498546E-7	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999875169553429	WITHOUT_CLASSIFICATION	1.2483044657178988E-5	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999972907577047	WITHOUT_CLASSIFICATION	2.7092422951542757E-6	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999437501587144	WITHOUT_CLASSIFICATION	5.6249841285709455E-5	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9995655840250005	WITHOUT_CLASSIFICATION	4.3441597499947407E-4	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.999794557954892	WITHOUT_CLASSIFICATION	2.0544204510803513E-4	IMPLEMENTATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999330206062	WITHOUT_CLASSIFICATION	6.697939382703186E-8	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999917539298836	WITHOUT_CLASSIFICATION	8.246070116452084E-6	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999451165628	WITHOUT_CLASSIFICATION	5.488343719688189E-8	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999979987164301	WITHOUT_CLASSIFICATION	2.001283569874504E-6	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999998586220459	WITHOUT_CLASSIFICATION	1.4137795404179785E-7	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999983496606469	WITHOUT_CLASSIFICATION	1.6503393530749324E-6	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999994928885642	WITHOUT_CLASSIFICATION	5.071114358207593E-7	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999997999548121	WITHOUT_CLASSIFICATION	2.0004518777435798E-7	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.999996752837095	WITHOUT_CLASSIFICATION	3.2471629050012257E-6	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999997677012565	WITHOUT_CLASSIFICATION	2.3229874334254087E-7	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999867328710381	WITHOUT_CLASSIFICATION	1.3267128961935144E-5	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999923304538925	WITHOUT_CLASSIFICATION	7.669546107407541E-6	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999999559642178	WITHOUT_CLASSIFICATION	4.403578230399733E-8	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999996289020228	WITHOUT_CLASSIFICATION	3.710979772350937E-7	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999999982558944	WITHOUT_CLASSIFICATION	1.744105659003494E-9	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999666259036	WITHOUT_CLASSIFICATION	3.3374096377510556E-8	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9998768767768537	WITHOUT_CLASSIFICATION	1.231232231462234E-4	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.9998830030778469	WITHOUT_CLASSIFICATION	1.1699692215301484E-4	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999996491777382	WITHOUT_CLASSIFICATION	3.508222618140535E-7	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.9999554742720906	WITHOUT_CLASSIFICATION	4.4525727909332776E-5	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999991741111885	WITHOUT_CLASSIFICATION	8.258888114759836E-7	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999997982351927	WITHOUT_CLASSIFICATION	2.0176480724044385E-7	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9999997707149044	WITHOUT_CLASSIFICATION	2.2928509572146275E-7	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999970878699184	WITHOUT_CLASSIFICATION	2.912130081659397E-6	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999845490171989	WITHOUT_CLASSIFICATION	1.5450982801080945E-5	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9994863084087513	WITHOUT_CLASSIFICATION	5.136915912485703E-4	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999982496929467	WITHOUT_CLASSIFICATION	1.7503070532324638E-6	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999936905533793	WITHOUT_CLASSIFICATION	6.309446620696803E-6	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999996839218193	WITHOUT_CLASSIFICATION	3.160781807072158E-7	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999913459231158	WITHOUT_CLASSIFICATION	8.654076884192228E-6	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999948640099835	WITHOUT_CLASSIFICATION	5.13599001647097E-6	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999988055402611	WITHOUT_CLASSIFICATION	1.1944597388890625E-6	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999975434938672	WITHOUT_CLASSIFICATION	2.45650613275423E-6	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999975434938672	WITHOUT_CLASSIFICATION	2.45650613275423E-6	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999826453145745	WITHOUT_CLASSIFICATION	1.735468542551374E-5	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999826453145745	WITHOUT_CLASSIFICATION	1.735468542551374E-5	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999990224534704	WITHOUT_CLASSIFICATION	9.77546529603876E-7	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999990224534704	WITHOUT_CLASSIFICATION	9.77546529603876E-7	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.999994860931429	WITHOUT_CLASSIFICATION	5.1390685709276906E-6	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999865426841348	WITHOUT_CLASSIFICATION	1.345731586517939E-5	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999971865726464	WITHOUT_CLASSIFICATION	2.8134273537676453E-6	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999999825742957	WITHOUT_CLASSIFICATION	1.742570429296523E-8	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999995689208785	WITHOUT_CLASSIFICATION	4.3107912143249117E-7	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999970341885297	WITHOUT_CLASSIFICATION	2.9658114702652593E-6	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9999847684415221	WITHOUT_CLASSIFICATION	1.5231558478006703E-5	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999993270763999	WITHOUT_CLASSIFICATION	6.729236000514328E-7	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.999999428438124	WITHOUT_CLASSIFICATION	5.715618759514047E-7	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999999710380038	WITHOUT_CLASSIFICATION	2.8961996213730275E-8	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999999813260338	WITHOUT_CLASSIFICATION	1.8673966218574415E-8	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999992769532675	WITHOUT_CLASSIFICATION	7.230467324866612E-7	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.999999940928243	WITHOUT_CLASSIFICATION	5.9071757089020324E-8	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9998971361943051	WITHOUT_CLASSIFICATION	1.0286380569495211E-4	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999985469536379	WITHOUT_CLASSIFICATION	1.4530463621429793E-6	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9999992309033349	WITHOUT_CLASSIFICATION	7.690966649985406E-7	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999984062562467	WITHOUT_CLASSIFICATION	1.5937437532899083E-6	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999941806917823	WITHOUT_CLASSIFICATION	5.819308217671099E-6	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999996212038508	WITHOUT_CLASSIFICATION	3.787961492890697E-7	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9999958206569576	WITHOUT_CLASSIFICATION	4.179343042416532E-6	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9999981862084932	WITHOUT_CLASSIFICATION	1.813791506668195E-6	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999972440394141	WITHOUT_CLASSIFICATION	2.7559605858103103E-6	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999987916349291	WITHOUT_CLASSIFICATION	1.208365070970479E-6	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.999996785854149	WITHOUT_CLASSIFICATION	3.2141458509602062E-6	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999996851875701	WITHOUT_CLASSIFICATION	3.148124299495387E-7	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999999192731341	WITHOUT_CLASSIFICATION	8.072686591253907E-8	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9999937112982357	WITHOUT_CLASSIFICATION	6.2887017643157236E-6	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999649193540433	WITHOUT_CLASSIFICATION	3.508064595672814E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999649193540433	WITHOUT_CLASSIFICATION	3.508064595672814E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999649193540433	WITHOUT_CLASSIFICATION	3.508064595672814E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9996605194001715	WITHOUT_CLASSIFICATION	3.394805998283732E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9996605194001715	WITHOUT_CLASSIFICATION	3.394805998283732E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999845869525155	WITHOUT_CLASSIFICATION	1.541304748452407E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999845869525155	WITHOUT_CLASSIFICATION	1.541304748452407E-5	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999992488184352	WITHOUT_CLASSIFICATION	7.511815648326476E-7	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9941035501486577	WITHOUT_CLASSIFICATION	0.005896449851342249	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999885656090853	WITHOUT_CLASSIFICATION	1.1434390914584355E-5	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999983133553026	WITHOUT_CLASSIFICATION	1.6866446973383642E-6	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999649193540433	WITHOUT_CLASSIFICATION	3.508064595672814E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999649193540433	WITHOUT_CLASSIFICATION	3.508064595672814E-5	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999649193540433	WITHOUT_CLASSIFICATION	3.508064595672814E-5	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9996605194001715	WITHOUT_CLASSIFICATION	3.394805998283732E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9996605194001715	WITHOUT_CLASSIFICATION	3.394805998283732E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9996605194001715	WITHOUT_CLASSIFICATION	3.394805998283732E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999845869525155	WITHOUT_CLASSIFICATION	1.541304748452407E-5	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999845869525155	WITHOUT_CLASSIFICATION	1.541304748452407E-5	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999995884397636	WITHOUT_CLASSIFICATION	4.115602364947999E-7	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.99999217615131	WITHOUT_CLASSIFICATION	7.823848690065766E-6	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999804221148524	WITHOUT_CLASSIFICATION	1.957788514770456E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999804221148524	WITHOUT_CLASSIFICATION	1.957788514770456E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999804221148524	WITHOUT_CLASSIFICATION	1.957788514770456E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999804221148524	WITHOUT_CLASSIFICATION	1.957788514770456E-5	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999804221148524	WITHOUT_CLASSIFICATION	1.957788514770456E-5	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999985965858464	WITHOUT_CLASSIFICATION	1.4034141535657873E-6	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999981083162498	WITHOUT_CLASSIFICATION	1.8916837502331466E-6	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9996976308065533	WITHOUT_CLASSIFICATION	3.0236919344675664E-4	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999985601999398	WITHOUT_CLASSIFICATION	1.4398000602060568E-6	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999983069036262	WITHOUT_CLASSIFICATION	1.6930963738423984E-6	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9998803566491739	WITHOUT_CLASSIFICATION	1.1964335082615264E-4	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.999799387297139	WITHOUT_CLASSIFICATION	2.0061270286106278E-4	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999969063837121	WITHOUT_CLASSIFICATION	3.0936162878959963E-6	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999933865002405	WITHOUT_CLASSIFICATION	6.613499759525447E-6	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999978434245883	WITHOUT_CLASSIFICATION	2.156575411660163E-6	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999914104816545	WITHOUT_CLASSIFICATION	8.589518345391624E-6	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999991554677096	WITHOUT_CLASSIFICATION	8.445322904434851E-7	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999798225891178	WITHOUT_CLASSIFICATION	2.017741088233311E-5	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999992206568346	WITHOUT_CLASSIFICATION	7.793431653219536E-7	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.999888330989736	WITHOUT_CLASSIFICATION	1.1166901026398681E-4	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999364781026134	WITHOUT_CLASSIFICATION	6.352189738664574E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999364781026134	WITHOUT_CLASSIFICATION	6.352189738664574E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999364781026134	WITHOUT_CLASSIFICATION	6.352189738664574E-5	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999987693174199	WITHOUT_CLASSIFICATION	1.2306825799701637E-6	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999987692937629	WITHOUT_CLASSIFICATION	1.2307062371262873E-6	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999976739076657	WITHOUT_CLASSIFICATION	2.3260923342721525E-6	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999940545462805	WITHOUT_CLASSIFICATION	5.945453719515896E-6	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999955214706365	WITHOUT_CLASSIFICATION	4.478529363454239E-6	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999989098662155	WITHOUT_CLASSIFICATION	1.090133784417943E-6	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999983275308234	WITHOUT_CLASSIFICATION	1.6724691765865393E-6	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9999986226915153	WITHOUT_CLASSIFICATION	1.3773084846693153E-6	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999993193679284	WITHOUT_CLASSIFICATION	6.806320716362447E-7	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999995819680811	WITHOUT_CLASSIFICATION	4.180319188360909E-7	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999992145618055	WITHOUT_CLASSIFICATION	7.854381944170632E-7	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999996091443065	WITHOUT_CLASSIFICATION	3.908556933992806E-7	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999887685334777	WITHOUT_CLASSIFICATION	1.1231466522289786E-5	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9999985426046409	WITHOUT_CLASSIFICATION	1.4573953590486216E-6	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9999990653628354	WITHOUT_CLASSIFICATION	9.346371645592004E-7	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999949217484838	WITHOUT_CLASSIFICATION	5.078251516285318E-6	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.999995629160448	WITHOUT_CLASSIFICATION	4.37083955193592E-6	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999981425929615	WITHOUT_CLASSIFICATION	1.857407038500809E-6	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9999971781149999	WITHOUT_CLASSIFICATION	2.8218850000268597E-6	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999989738131827	WITHOUT_CLASSIFICATION	1.0261868172505447E-6	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999975080491539	WITHOUT_CLASSIFICATION	2.4919508461943625E-6	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999656711511483	WITHOUT_CLASSIFICATION	3.43288488516417E-5	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9951978201437263	WITHOUT_CLASSIFICATION	0.004802179856273779	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999988517237348	WITHOUT_CLASSIFICATION	1.1482762651848868E-6	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9999954942137476	WITHOUT_CLASSIFICATION	4.50578625239088E-6	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9999956363953921	WITHOUT_CLASSIFICATION	4.363604607913166E-6	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9999983180008825	WITHOUT_CLASSIFICATION	1.681999117579282E-6	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9999977845546015	WITHOUT_CLASSIFICATION	2.2154453984586613E-6	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999915557158084	WITHOUT_CLASSIFICATION	8.444284191507303E-6	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9999811944366238	WITHOUT_CLASSIFICATION	1.880556337624227E-5	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9999778009098402	WITHOUT_CLASSIFICATION	2.2199090159817958E-5	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9999788822384658	WITHOUT_CLASSIFICATION	2.1117761534279296E-5	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.9999766351961261	WITHOUT_CLASSIFICATION	2.3364803873855918E-5	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.99997578245634	WITHOUT_CLASSIFICATION	2.4217543660044597E-5	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9999741995224499	WITHOUT_CLASSIFICATION	2.5800477550089012E-5	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9999747437611917	WITHOUT_CLASSIFICATION	2.525623880833597E-5	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999909091306662	WITHOUT_CLASSIFICATION	9.09086933381285E-6	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999476357419251	WITHOUT_CLASSIFICATION	5.236425807493138E-5	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999999997727562	WITHOUT_CLASSIFICATION	2.272438128605202E-10	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999448394626467	WITHOUT_CLASSIFICATION	5.516053735331285E-5	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999999278457397	WITHOUT_CLASSIFICATION	7.215426041299527E-8	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999999688750877	WITHOUT_CLASSIFICATION	3.1124912334347165E-8	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999717858986832	WITHOUT_CLASSIFICATION	2.8214101316792102E-5	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.999951076662312	WITHOUT_CLASSIFICATION	4.8923337688152905E-5	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999964236366166	WITHOUT_CLASSIFICATION	3.5763633835051226E-6	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999592625663454	WITHOUT_CLASSIFICATION	4.073743365467688E-5	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9985905407607906	WITHOUT_CLASSIFICATION	0.001409459239209416	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9985905407607906	WITHOUT_CLASSIFICATION	0.001409459239209416	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999534358779902	WITHOUT_CLASSIFICATION	4.6564122009857224E-5	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999879765194032	WITHOUT_CLASSIFICATION	1.2023480596915864E-5	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.999885249570337	WITHOUT_CLASSIFICATION	1.1475042966307642E-4	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.999988399750331	WITHOUT_CLASSIFICATION	1.1600249668968997E-5	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999993510787276	WITHOUT_CLASSIFICATION	6.489212723420958E-7	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999952505020278	WITHOUT_CLASSIFICATION	4.74949797227315E-6	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999759893283937	WITHOUT_CLASSIFICATION	2.4010671606205476E-5	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999997565267126	WITHOUT_CLASSIFICATION	2.4347328742579876E-7	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999998346886725	WITHOUT_CLASSIFICATION	1.653113276446461E-7	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999908591282147	WITHOUT_CLASSIFICATION	9.14087178534668E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999906110564517	WITHOUT_CLASSIFICATION	9.388943548403515E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999906110564517	WITHOUT_CLASSIFICATION	9.388943548403515E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999906110564517	WITHOUT_CLASSIFICATION	9.388943548403515E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999906110564517	WITHOUT_CLASSIFICATION	9.388943548403515E-6	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9999958449393088	WITHOUT_CLASSIFICATION	4.1550606911266315E-6	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9999919788520119	WITHOUT_CLASSIFICATION	8.021147988252329E-6	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9999959711941274	WITHOUT_CLASSIFICATION	4.0288058726412365E-6	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9999908682335188	WITHOUT_CLASSIFICATION	9.131766481253012E-6	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999756913728666	WITHOUT_CLASSIFICATION	2.430862713339851E-5	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999992963492236	WITHOUT_CLASSIFICATION	7.036507763739259E-7	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999931046993549	WITHOUT_CLASSIFICATION	6.89530064516182E-6	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999995776340365	WITHOUT_CLASSIFICATION	4.223659636062178E-7	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999995776340365	WITHOUT_CLASSIFICATION	4.223659636062178E-7	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999989897932067	WITHOUT_CLASSIFICATION	1.0102067933036737E-6	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999952733737553	WITHOUT_CLASSIFICATION	4.726626244742431E-6	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999980409034323	WITHOUT_CLASSIFICATION	1.9590965676656836E-6	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.999999981780091	WITHOUT_CLASSIFICATION	1.8219909029542773E-8	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.999999981780091	WITHOUT_CLASSIFICATION	1.8219909029542773E-8	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999999783411884	WITHOUT_CLASSIFICATION	2.1658811733651352E-8	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.999974136941119	WITHOUT_CLASSIFICATION	2.5863058880962534E-5	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.999974136941119	WITHOUT_CLASSIFICATION	2.5863058880962534E-5	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.999999452279829	WITHOUT_CLASSIFICATION	5.477201709901776E-7	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999993440098593	WITHOUT_CLASSIFICATION	6.55990140716375E-7	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999994091082893	WITHOUT_CLASSIFICATION	5.908917107237162E-7	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999990398199626	WITHOUT_CLASSIFICATION	9.601800374553167E-7	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9999948033128744	WITHOUT_CLASSIFICATION	5.196687125609427E-6	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999850038439	WITHOUT_CLASSIFICATION	1.499615613832824E-8	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999995981159782	WITHOUT_CLASSIFICATION	4.0188402180400756E-7	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9999640584176073	WITHOUT_CLASSIFICATION	3.5941582392762265E-5	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999994421278673	WITHOUT_CLASSIFICATION	5.578721326855023E-7	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.999997246826003	WITHOUT_CLASSIFICATION	2.753173997036897E-6	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999960174965347	WITHOUT_CLASSIFICATION	3.9825034652660486E-6	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999976993129782	WITHOUT_CLASSIFICATION	2.3006870218628382E-6	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999994784029422	WITHOUT_CLASSIFICATION	5.21597057807742E-7	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.999999046415694	WITHOUT_CLASSIFICATION	9.535843059164458E-7	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9998710142706733	WITHOUT_CLASSIFICATION	1.2898572932674724E-4	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999993890486848	WITHOUT_CLASSIFICATION	6.109513152429315E-7	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9999918748673214	WITHOUT_CLASSIFICATION	8.125132678580512E-6	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9999934524915985	WITHOUT_CLASSIFICATION	6.54750840143641E-6	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.999992523638154	WITHOUT_CLASSIFICATION	7.4763618459942215E-6	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999998835224214	WITHOUT_CLASSIFICATION	1.1647757848940847E-7	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999990481522635	WITHOUT_CLASSIFICATION	9.518477365960269E-7	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9998410846861748	WITHOUT_CLASSIFICATION	1.5891531382516524E-4	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9992690174899064	WITHOUT_CLASSIFICATION	7.309825100937356E-4	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.999999380740362	WITHOUT_CLASSIFICATION	6.192596380664658E-7	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999999807302055	WITHOUT_CLASSIFICATION	1.926979455526931E-8	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999983538584746	WITHOUT_CLASSIFICATION	1.6461415255337144E-6	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999961149875011	WITHOUT_CLASSIFICATION	3.885012498951041E-6	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999998671215958	WITHOUT_CLASSIFICATION	1.3287840408240658E-7	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999996669297968	WITHOUT_CLASSIFICATION	3.330702031714191E-7	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999175693273504	WITHOUT_CLASSIFICATION	8.24306726494768E-5	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9999790511299456	WITHOUT_CLASSIFICATION	2.0948870054497568E-5	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999980457791472	WITHOUT_CLASSIFICATION	1.9542208527197426E-6	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9999899952381288	WITHOUT_CLASSIFICATION	1.0004761871108564E-5	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999754565944239	WITHOUT_CLASSIFICATION	2.4543405576166742E-5	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999693185001836	WITHOUT_CLASSIFICATION	3.068149981636083E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999912039304906	WITHOUT_CLASSIFICATION	8.796069509468563E-6	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999924502620646	WITHOUT_CLASSIFICATION	7.549737935319091E-6	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999981510717029	WITHOUT_CLASSIFICATION	1.8489282970560512E-6	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999796855672644	WITHOUT_CLASSIFICATION	2.0314432735725578E-5	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999912039304906	WITHOUT_CLASSIFICATION	8.796069509468563E-6	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999924502620646	WITHOUT_CLASSIFICATION	7.549737935319091E-6	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999883518713828	WITHOUT_CLASSIFICATION	1.1648128617242954E-5	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999995955623451	WITHOUT_CLASSIFICATION	4.044376549414591E-7	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999995955623451	WITHOUT_CLASSIFICATION	4.044376549414591E-7	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999979716414109	WITHOUT_CLASSIFICATION	2.028358589026135E-6	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.999999999643427	WITHOUT_CLASSIFICATION	3.5657290267876717E-10	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999943592122863	WITHOUT_CLASSIFICATION	5.640787713746666E-6	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999968071731258	WITHOUT_CLASSIFICATION	3.1928268741556042E-6	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999978048107263	WITHOUT_CLASSIFICATION	2.195189273645387E-6	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.999999611984347	WITHOUT_CLASSIFICATION	3.880156530598336E-7	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999989762763024	WITHOUT_CLASSIFICATION	1.0237236975214014E-6	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999969307203542	WITHOUT_CLASSIFICATION	3.0692796457490297E-6	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9996354481944215	WITHOUT_CLASSIFICATION	3.645518055783888E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999860643446782	WITHOUT_CLASSIFICATION	1.3935655321771909E-5	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999982200916634	WITHOUT_CLASSIFICATION	1.779908336605972E-6	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999976702172984	WITHOUT_CLASSIFICATION	2.329782701747645E-6	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999997477417074	WITHOUT_CLASSIFICATION	2.522582925582249E-7	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999998323095631	WITHOUT_CLASSIFICATION	1.6769043679744185E-7	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999998323095631	WITHOUT_CLASSIFICATION	1.6769043679744185E-7	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999927120369644	WITHOUT_CLASSIFICATION	7.287963035560974E-6	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999927120369644	WITHOUT_CLASSIFICATION	7.287963035560974E-6	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999982906050536	WITHOUT_CLASSIFICATION	1.709394946325947E-6	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999980723678957	WITHOUT_CLASSIFICATION	1.927632104295672E-6	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999910894501204	WITHOUT_CLASSIFICATION	8.910549879632719E-6	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999982652290739	WITHOUT_CLASSIFICATION	1.7347709260524526E-6	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.999999681367121	WITHOUT_CLASSIFICATION	3.186328789234126E-7	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999973063375692	WITHOUT_CLASSIFICATION	2.693662430790948E-6	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999943592122863	WITHOUT_CLASSIFICATION	5.640787713746666E-6	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999968071731258	WITHOUT_CLASSIFICATION	3.1928268741556042E-6	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9996354481944215	WITHOUT_CLASSIFICATION	3.645518055783888E-4	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999860643446782	WITHOUT_CLASSIFICATION	1.3935655321771909E-5	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.999997833039639	WITHOUT_CLASSIFICATION	2.166960361026217E-6	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999960418728865	WITHOUT_CLASSIFICATION	3.95812711352059E-6	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.999986514066846	WITHOUT_CLASSIFICATION	1.3485933153875898E-5	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999992477786325	WITHOUT_CLASSIFICATION	7.522213674659287E-7	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999990422337002	WITHOUT_CLASSIFICATION	9.577662998101514E-7	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999956639183939	WITHOUT_CLASSIFICATION	4.336081606113434E-6	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999996842331219	WITHOUT_CLASSIFICATION	3.157668780964415E-7	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.999994105344689	WITHOUT_CLASSIFICATION	5.894655311029567E-6	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999984027035043	WITHOUT_CLASSIFICATION	1.5972964957246047E-6	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999295160191164	WITHOUT_CLASSIFICATION	7.048398088363935E-5	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999988423279034	WITHOUT_CLASSIFICATION	1.1576720966465556E-6	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.99997574697385	WITHOUT_CLASSIFICATION	2.425302614983527E-5	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.9999112457731701	WITHOUT_CLASSIFICATION	8.875422682979232E-5	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9998640784598503	WITHOUT_CLASSIFICATION	1.3592154014970963E-4	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999989313374275	WITHOUT_CLASSIFICATION	1.0686625726164045E-6	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9992440527489259	WITHOUT_CLASSIFICATION	7.559472510740481E-4	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.999918221862999	WITHOUT_CLASSIFICATION	8.17781370010324E-5	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999979722342554	WITHOUT_CLASSIFICATION	2.0277657446778882E-6	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999992737718616	WITHOUT_CLASSIFICATION	7.262281383136716E-7	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999933970776598	WITHOUT_CLASSIFICATION	6.602922340178532E-6	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999937886116539	WITHOUT_CLASSIFICATION	6.211388346118252E-6	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999937886116539	WITHOUT_CLASSIFICATION	6.211388346118252E-6	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999987324688423	WITHOUT_CLASSIFICATION	1.267531157735366E-6	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999940757799113	WITHOUT_CLASSIFICATION	5.924220088723306E-6	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999997220753095	WITHOUT_CLASSIFICATION	2.779246904719589E-7	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999963661617635	WITHOUT_CLASSIFICATION	3.6338382365386287E-6	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999963661617635	WITHOUT_CLASSIFICATION	3.6338382365386287E-6	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.999986514066846	WITHOUT_CLASSIFICATION	1.3485933153875898E-5	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.999984591826408	WITHOUT_CLASSIFICATION	1.5408173592037425E-5	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999927189460508	WITHOUT_CLASSIFICATION	7.281053949259555E-6	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999994438184264	WITHOUT_CLASSIFICATION	5.561815736631494E-7	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999992882922232	WITHOUT_CLASSIFICATION	7.117077768188791E-7	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.999988515996195	WITHOUT_CLASSIFICATION	1.1484003805061969E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999966196831593	WITHOUT_CLASSIFICATION	3.380316840699445E-5	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999877711597498	WITHOUT_CLASSIFICATION	1.2228840250260155E-5	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9999964468238608	WITHOUT_CLASSIFICATION	3.553176139221938E-6	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999983043782573	WITHOUT_CLASSIFICATION	1.6956217426141787E-6	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999997727759435	WITHOUT_CLASSIFICATION	2.2722405638305574E-7	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999662343863757	WITHOUT_CLASSIFICATION	3.3765613624373975E-5	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999997199549197	WITHOUT_CLASSIFICATION	2.800450803696107E-7	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999895495321452	WITHOUT_CLASSIFICATION	1.045046785469045E-5	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999974547248378	WITHOUT_CLASSIFICATION	2.5452751622324524E-6	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.999997666064676	WITHOUT_CLASSIFICATION	2.3339353239432725E-6	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999871247336759	WITHOUT_CLASSIFICATION	1.2875266324068779E-5	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9999807105346237	WITHOUT_CLASSIFICATION	1.928946537636951E-5	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999998980377671	WITHOUT_CLASSIFICATION	1.019622328168354E-7	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999987865702388	WITHOUT_CLASSIFICATION	1.213429761327497E-6	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999998316427856	WITHOUT_CLASSIFICATION	1.6835721429599917E-7	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999968968309345	WITHOUT_CLASSIFICATION	3.103169065406028E-6	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999955778565796	WITHOUT_CLASSIFICATION	4.422143420349195E-6	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999959753353965	WITHOUT_CLASSIFICATION	4.024664603548326E-6	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999997383111477	WITHOUT_CLASSIFICATION	2.6168885225563934E-7	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999999341132549	WITHOUT_CLASSIFICATION	6.58867451030409E-7	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999988376354643	WITHOUT_CLASSIFICATION	1.1623645356950412E-6	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999921225506776	WITHOUT_CLASSIFICATION	7.877449322276254E-6	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999860054290975	WITHOUT_CLASSIFICATION	1.3994570902450235E-5	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999756237784186	WITHOUT_CLASSIFICATION	2.437622158129827E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999996072901597	WITHOUT_CLASSIFICATION	3.9270984033303713E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999996072901597	WITHOUT_CLASSIFICATION	3.9270984033303713E-7	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.999999241348777	WITHOUT_CLASSIFICATION	7.586512229449276E-7	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999991869157125	WITHOUT_CLASSIFICATION	8.130842875633159E-7	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999991869157125	WITHOUT_CLASSIFICATION	8.130842875633159E-7	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999998326797475	WITHOUT_CLASSIFICATION	1.6732025261417862E-7	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999998326797475	WITHOUT_CLASSIFICATION	1.6732025261417862E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999988636909876	WITHOUT_CLASSIFICATION	1.1363090125039678E-6	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.999998993905801	WITHOUT_CLASSIFICATION	1.0060941989242304E-6	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999995826455251	WITHOUT_CLASSIFICATION	4.1735447494077715E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999989699941696	WITHOUT_CLASSIFICATION	1.0300058304723389E-6	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999997329738042	WITHOUT_CLASSIFICATION	2.670261957949982E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999171457861397	WITHOUT_CLASSIFICATION	8.285421386035319E-5	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999171457861397	WITHOUT_CLASSIFICATION	8.285421386035319E-5	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999997383111477	WITHOUT_CLASSIFICATION	2.6168885225563934E-7	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999997383111477	WITHOUT_CLASSIFICATION	2.6168885225563934E-7	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999997383111477	WITHOUT_CLASSIFICATION	2.6168885225563934E-7	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999999341132549	WITHOUT_CLASSIFICATION	6.58867451030409E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999996072901597	WITHOUT_CLASSIFICATION	3.9270984033303713E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999996072901597	WITHOUT_CLASSIFICATION	3.9270984033303713E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999996072901597	WITHOUT_CLASSIFICATION	3.9270984033303713E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999988636909876	WITHOUT_CLASSIFICATION	1.1363090125039678E-6	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999988636909876	WITHOUT_CLASSIFICATION	1.1363090125039678E-6	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999988636909876	WITHOUT_CLASSIFICATION	1.1363090125039678E-6	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999989699941696	WITHOUT_CLASSIFICATION	1.0300058304723389E-6	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999989699941696	WITHOUT_CLASSIFICATION	1.0300058304723389E-6	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999915618359989	WITHOUT_CLASSIFICATION	8.438164001111985E-6	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999991728784834	WITHOUT_CLASSIFICATION	8.271215166054365E-7	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999999739580715	WITHOUT_CLASSIFICATION	2.6041928504821364E-7	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.8586191393958753	WITHOUT_CLASSIFICATION	0.1413808606041247	IMPLEMENTATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9999961590084308	WITHOUT_CLASSIFICATION	3.840991569257459E-6	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9999897423442375	WITHOUT_CLASSIFICATION	1.0257655762557227E-5	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9999897423442375	WITHOUT_CLASSIFICATION	1.0257655762557227E-5	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999979208507411	WITHOUT_CLASSIFICATION	2.079149258940592E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999966196831593	WITHOUT_CLASSIFICATION	3.380316840699445E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999966196831593	WITHOUT_CLASSIFICATION	3.380316840699445E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999966196831593	WITHOUT_CLASSIFICATION	3.380316840699445E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999966196831593	WITHOUT_CLASSIFICATION	3.380316840699445E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999966196831593	WITHOUT_CLASSIFICATION	3.380316840699445E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999956270567206	WITHOUT_CLASSIFICATION	4.37294327939648E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999956270567206	WITHOUT_CLASSIFICATION	4.37294327939648E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999956270567206	WITHOUT_CLASSIFICATION	4.37294327939648E-6	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999996416230333	WITHOUT_CLASSIFICATION	3.583769666332195E-7	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999919707725189	WITHOUT_CLASSIFICATION	8.029227481104092E-6	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999999341132549	WITHOUT_CLASSIFICATION	6.58867451030409E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999988636909876	WITHOUT_CLASSIFICATION	1.1363090125039678E-6	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999988636909876	WITHOUT_CLASSIFICATION	1.1363090125039678E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999966196831593	WITHOUT_CLASSIFICATION	3.380316840699445E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999966196831593	WITHOUT_CLASSIFICATION	3.380316840699445E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999956270567206	WITHOUT_CLASSIFICATION	4.37294327939648E-6	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999979208507411	WITHOUT_CLASSIFICATION	2.079149258940592E-6	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999986746479145	WITHOUT_CLASSIFICATION	1.3253520854668937E-6	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.9999995589144867	WITHOUT_CLASSIFICATION	4.4108551338363807E-7	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.999999820918085	WITHOUT_CLASSIFICATION	1.7908191494580447E-7	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999892962002241	WITHOUT_CLASSIFICATION	1.0703799775781027E-5	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999988151581192	WITHOUT_CLASSIFICATION	1.1848418808642336E-6	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999989847928658	WITHOUT_CLASSIFICATION	1.015207134215471E-6	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999692420283471	WITHOUT_CLASSIFICATION	3.075797165293137E-5	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999902433191498	WITHOUT_CLASSIFICATION	9.756680850237874E-6	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999958916840145	WITHOUT_CLASSIFICATION	4.108315985481026E-6	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999996451638944	WITHOUT_CLASSIFICATION	3.548361055867042E-7	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999878814654529	WITHOUT_CLASSIFICATION	1.2118534547147143E-5	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999956888984813	WITHOUT_CLASSIFICATION	4.311101518649584E-6	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999970841666861	WITHOUT_CLASSIFICATION	2.9158333139757575E-6	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.999998344423284	WITHOUT_CLASSIFICATION	1.6555767160210751E-6	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.999999393584772	WITHOUT_CLASSIFICATION	6.064152280466301E-7	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999666765874834	WITHOUT_CLASSIFICATION	3.332341251657316E-5	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999780558031128	WITHOUT_CLASSIFICATION	2.1944196887105227E-5	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999969224175319	WITHOUT_CLASSIFICATION	3.077582468080782E-6	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999278219106056	WITHOUT_CLASSIFICATION	7.217808939443966E-5	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999998344387352	WITHOUT_CLASSIFICATION	1.6556126476906286E-7	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999991629213371	WITHOUT_CLASSIFICATION	8.370786628932288E-7	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999805159915275	WITHOUT_CLASSIFICATION	1.9484008472499285E-5	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999942130029613	WITHOUT_CLASSIFICATION	5.7869970385930335E-6	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999975208228811	WITHOUT_CLASSIFICATION	2.4791771188587103E-6	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999993794833735	WITHOUT_CLASSIFICATION	6.205166265987474E-7	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999996658011899	WITHOUT_CLASSIFICATION	3.3419881011824404E-7	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9999986318891296	WITHOUT_CLASSIFICATION	1.3681108703333275E-6	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.999996806147014	WITHOUT_CLASSIFICATION	3.193852986007402E-6	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999996294325647	WITHOUT_CLASSIFICATION	3.7056743536412875E-7	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999987158945896	WITHOUT_CLASSIFICATION	1.2841054104551784E-6	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999999135916631	WITHOUT_CLASSIFICATION	8.640833689194495E-8	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.999998835845986	WITHOUT_CLASSIFICATION	1.1641540139885782E-6	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999996285569974	WITHOUT_CLASSIFICATION	3.714430026289369E-7	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999263241902	WITHOUT_CLASSIFICATION	7.36758097477391E-8	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999986746479145	WITHOUT_CLASSIFICATION	1.3253520854668937E-6	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.999985790259713	WITHOUT_CLASSIFICATION	1.4209740286967627E-5	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999886644971046	WITHOUT_CLASSIFICATION	1.1335502895420366E-5	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999995344516427	WITHOUT_CLASSIFICATION	4.65548357347146E-7	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999967971346448	WITHOUT_CLASSIFICATION	3.202865355198742E-6	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999967971346448	WITHOUT_CLASSIFICATION	3.202865355198742E-6	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9999887873695318	WITHOUT_CLASSIFICATION	1.121263046813195E-5	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9999887873695318	WITHOUT_CLASSIFICATION	1.121263046813195E-5	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999999799153187	WITHOUT_CLASSIFICATION	2.0084681242898396E-8	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999987515599543	WITHOUT_CLASSIFICATION	1.248440045701551E-6	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999974586565229	WITHOUT_CLASSIFICATION	2.5413434771149913E-6	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999821094255502	WITHOUT_CLASSIFICATION	1.789057444981492E-5	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999995677298795	WITHOUT_CLASSIFICATION	4.3227012042340917E-7	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999889279326751	WITHOUT_CLASSIFICATION	1.1072067324945003E-5	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999995953527502	WITHOUT_CLASSIFICATION	4.0464724981719784E-7	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999859620890275	WITHOUT_CLASSIFICATION	1.403791097262402E-5	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.999998753826779	WITHOUT_CLASSIFICATION	1.2461732209021052E-6	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999786021189	WITHOUT_CLASSIFICATION	2.1397881172133274E-8	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999998914313316	WITHOUT_CLASSIFICATION	1.0856866849811703E-7	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999995969356423	WITHOUT_CLASSIFICATION	4.03064357743274E-7	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999995969356423	WITHOUT_CLASSIFICATION	4.03064357743274E-7	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.999999971644499	WITHOUT_CLASSIFICATION	2.83555008562977E-8	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999999844443586	WITHOUT_CLASSIFICATION	1.5555641346068898E-8	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999966332384334	WITHOUT_CLASSIFICATION	3.36676156668887E-6	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999966332384334	WITHOUT_CLASSIFICATION	3.36676156668887E-6	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999998072224687	WITHOUT_CLASSIFICATION	1.9277753125958738E-7	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999998974211545	WITHOUT_CLASSIFICATION	1.0257884559921708E-7	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999953679586606	WITHOUT_CLASSIFICATION	4.63204133936299E-6	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999994517743536	WITHOUT_CLASSIFICATION	5.482256463736667E-7	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999997720598729	WITHOUT_CLASSIFICATION	2.2794012706129766E-7	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.99998140308164	WITHOUT_CLASSIFICATION	1.859691836006924E-5	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9999901382150782	WITHOUT_CLASSIFICATION	9.861784921826824E-6	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999998690492214	WITHOUT_CLASSIFICATION	1.309507785624689E-7	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999999661661327	WITHOUT_CLASSIFICATION	3.383386718513485E-8	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.999997400532134	WITHOUT_CLASSIFICATION	2.599467866002006E-6	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.99997993967479	WITHOUT_CLASSIFICATION	2.0060325209909096E-5	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999745078908662	WITHOUT_CLASSIFICATION	2.5492109133907805E-5	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999934881961852	WITHOUT_CLASSIFICATION	6.511803814898017E-6	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999890634308091	WITHOUT_CLASSIFICATION	1.0936569190930015E-5	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999928032529	WITHOUT_CLASSIFICATION	7.196747052801764E-9	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999994620972109	WITHOUT_CLASSIFICATION	5.379027889850385E-7	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999970812609067	WITHOUT_CLASSIFICATION	2.918739093333649E-6	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999963176827086	WITHOUT_CLASSIFICATION	3.6823172914607012E-6	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999998140396998	WITHOUT_CLASSIFICATION	1.859603001546581E-7	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999732543139	WITHOUT_CLASSIFICATION	2.6745686064756343E-8	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.7238250630933275	IMPLEMENTATION	0.27617493690667244	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999996165942765	WITHOUT_CLASSIFICATION	3.834057235261364E-7	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999998205016795	WITHOUT_CLASSIFICATION	1.7949832053942786E-7	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999898840469442	WITHOUT_CLASSIFICATION	1.011595305585266E-5	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999995079668931	WITHOUT_CLASSIFICATION	4.920331069016033E-7	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999892723995519	WITHOUT_CLASSIFICATION	1.0727600447971982E-5	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9999982822353835	WITHOUT_CLASSIFICATION	1.7177646165869835E-6	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999889808593717	WITHOUT_CLASSIFICATION	1.1019140628413454E-5	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999996698879109	WITHOUT_CLASSIFICATION	3.301120891151874E-7	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999921011376094	WITHOUT_CLASSIFICATION	7.898862390608226E-6	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999967749733489	WITHOUT_CLASSIFICATION	3.2250266510795896E-6	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999954050671643	WITHOUT_CLASSIFICATION	4.594932835654633E-6	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999998465154362	WITHOUT_CLASSIFICATION	1.5348456376347302E-7	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999965637729178	WITHOUT_CLASSIFICATION	3.4362270823048696E-6	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999965637729178	WITHOUT_CLASSIFICATION	3.4362270823048696E-6	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999967783367433	WITHOUT_CLASSIFICATION	3.2216632567928E-6	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999863506206472	WITHOUT_CLASSIFICATION	1.364937935281781E-5	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999999243135853	WITHOUT_CLASSIFICATION	7.568641470110414E-8	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9999938131523554	WITHOUT_CLASSIFICATION	6.1868476446145176E-6	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9999562640516078	WITHOUT_CLASSIFICATION	4.3735948392317106E-5	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.99999775191259	WITHOUT_CLASSIFICATION	2.2480874099924034E-6	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999930430469846	WITHOUT_CLASSIFICATION	6.956953015474954E-6	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999979357615596	WITHOUT_CLASSIFICATION	2.0642384403222124E-6	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.99999811589787	WITHOUT_CLASSIFICATION	1.8841021300181976E-6	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9999750516767928	WITHOUT_CLASSIFICATION	2.4948323207226918E-5	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999998763549444	WITHOUT_CLASSIFICATION	1.2364505557549426E-7	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999814240990265	WITHOUT_CLASSIFICATION	1.8575900973545178E-5	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999981522408915	WITHOUT_CLASSIFICATION	1.8477591085571262E-6	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999802915254512	WITHOUT_CLASSIFICATION	1.970847454874714E-5	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999980481830671	WITHOUT_CLASSIFICATION	1.951816932805391E-6	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999973525011642	WITHOUT_CLASSIFICATION	2.6474988358610532E-6	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999995191270319	WITHOUT_CLASSIFICATION	4.808729680533995E-7	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999993669405317	WITHOUT_CLASSIFICATION	6.330594683525259E-7	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9999079509496069	WITHOUT_CLASSIFICATION	9.204905039312259E-5	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999965571790905	WITHOUT_CLASSIFICATION	3.442820909421388E-6	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999996617201921	WITHOUT_CLASSIFICATION	3.382798079204096E-7	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999551244285626	WITHOUT_CLASSIFICATION	4.48755714374109E-5	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999554430973256	WITHOUT_CLASSIFICATION	4.455690267443263E-5	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999848521536954	WITHOUT_CLASSIFICATION	1.5147846304620163E-5	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999877666107051	WITHOUT_CLASSIFICATION	1.223338929499495E-5	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999991860206826	WITHOUT_CLASSIFICATION	8.139793174575825E-7	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999995802733128	WITHOUT_CLASSIFICATION	4.197266872561204E-7	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999996554410843	WITHOUT_CLASSIFICATION	3.4455891577097796E-7	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.999996262599174	WITHOUT_CLASSIFICATION	3.7374008259565767E-6	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999987596208315	WITHOUT_CLASSIFICATION	1.2403791684095337E-6	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999992971244949	WITHOUT_CLASSIFICATION	7.028755050502007E-7	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999999727267797	WITHOUT_CLASSIFICATION	2.7273220462312537E-8	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999909398757728	WITHOUT_CLASSIFICATION	9.060124227212586E-6	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999965334852743	WITHOUT_CLASSIFICATION	3.4665147257515703E-6	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999950938496354	WITHOUT_CLASSIFICATION	4.9061503646436E-6	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.999992025893488	WITHOUT_CLASSIFICATION	7.974106512015398E-6	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9997502637604665	WITHOUT_CLASSIFICATION	2.4973623953356016E-4	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9999975698263337	WITHOUT_CLASSIFICATION	2.430173666338472E-6	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9999948925619534	WITHOUT_CLASSIFICATION	5.1074380466961905E-6	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999985313135495	WITHOUT_CLASSIFICATION	1.4686864505289458E-6	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999985090174514	WITHOUT_CLASSIFICATION	1.4909825486106578E-6	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999930141415756	WITHOUT_CLASSIFICATION	6.985858424347861E-6	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999930141415756	WITHOUT_CLASSIFICATION	6.985858424347861E-6	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999958473760318	WITHOUT_CLASSIFICATION	4.152623968202255E-6	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999937487268308	WITHOUT_CLASSIFICATION	6.251273169178708E-6	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999907745696573	WITHOUT_CLASSIFICATION	9.225430342658412E-6	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.999988496215715	WITHOUT_CLASSIFICATION	1.1503784285028934E-5	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999993107322467	WITHOUT_CLASSIFICATION	6.892677533049529E-7	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999985059237405	WITHOUT_CLASSIFICATION	1.4940762594604918E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999838384673	WITHOUT_CLASSIFICATION	1.6161532734449188E-8	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999688899371414	WITHOUT_CLASSIFICATION	3.11100628585357E-5	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999997168372496	WITHOUT_CLASSIFICATION	2.831627504005158E-7	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999998770243921	WITHOUT_CLASSIFICATION	1.229756079283209E-7	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999944782727095	WITHOUT_CLASSIFICATION	5.521727290548196E-6	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999995791586668	WITHOUT_CLASSIFICATION	4.208413332480686E-7	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9996445512230729	WITHOUT_CLASSIFICATION	3.5544877692707293E-4	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999806634175884	WITHOUT_CLASSIFICATION	1.9336582411610973E-5	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999996651566796	WITHOUT_CLASSIFICATION	3.348433203548829E-7	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9998224986556088	WITHOUT_CLASSIFICATION	1.775013443912214E-4	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999713754094207	WITHOUT_CLASSIFICATION	2.862459057923948E-5	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999877166028348	WITHOUT_CLASSIFICATION	1.2283397165144247E-5	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999982536579621	WITHOUT_CLASSIFICATION	1.7463420379445174E-6	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999818203740236	WITHOUT_CLASSIFICATION	1.8179625976408285E-5	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999985344112897	WITHOUT_CLASSIFICATION	1.4655887103143726E-6	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999763101344381	WITHOUT_CLASSIFICATION	2.368986556190263E-5	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999995197859	WITHOUT_CLASSIFICATION	4.802142116422249E-10	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999974189067207	WITHOUT_CLASSIFICATION	2.5810932792128158E-6	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.999999648134014	WITHOUT_CLASSIFICATION	3.5186598605095246E-7	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999963393237015	WITHOUT_CLASSIFICATION	3.660676298562933E-6	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999996368432277	WITHOUT_CLASSIFICATION	3.6315677239437464E-7	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.999999056241484	WITHOUT_CLASSIFICATION	9.437585161203319E-7	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999978271820308	WITHOUT_CLASSIFICATION	2.1728179692778235E-6	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999992331283406	WITHOUT_CLASSIFICATION	7.668716594948072E-7	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999979463301473	WITHOUT_CLASSIFICATION	2.0536698527506646E-6	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999994240674339	WITHOUT_CLASSIFICATION	5.759325661552103E-7	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999992331283406	WITHOUT_CLASSIFICATION	7.668716594948072E-7	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999928958999478	WITHOUT_CLASSIFICATION	7.104100052266704E-6	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999999807302055	WITHOUT_CLASSIFICATION	1.926979455526931E-8	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9983787550914491	WITHOUT_CLASSIFICATION	0.0016212449085507956	IMPLEMENTATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.6398615854053226	WITHOUT_CLASSIFICATION	0.3601384145946774	IMPLEMENTATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999988552243596	WITHOUT_CLASSIFICATION	1.1447756403445209E-6	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999804221148524	WITHOUT_CLASSIFICATION	1.957788514770456E-5	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999990052236908	WITHOUT_CLASSIFICATION	9.947763092762754E-7	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999999620791639	WITHOUT_CLASSIFICATION	3.79208360989818E-8	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.999999999643427	WITHOUT_CLASSIFICATION	3.5657290267876717E-10	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999999732543139	WITHOUT_CLASSIFICATION	2.6745686064756343E-8	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.999999739580715	WITHOUT_CLASSIFICATION	2.6041928504821364E-7	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999981950788864	WITHOUT_CLASSIFICATION	1.8049211136412201E-6	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999930560992216	WITHOUT_CLASSIFICATION	6.9439007783523765E-6	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999998971313453	WITHOUT_CLASSIFICATION	1.0286865463693762E-7	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999599838696389	WITHOUT_CLASSIFICATION	4.001613036116549E-5	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9999997795355139	WITHOUT_CLASSIFICATION	2.204644861099672E-7	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9996780707414337	WITHOUT_CLASSIFICATION	3.2192925856636606E-4	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999961052126084	WITHOUT_CLASSIFICATION	3.894787391646669E-6	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999999780415423	WITHOUT_CLASSIFICATION	2.1958457772642865E-8	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999999890277214	WITHOUT_CLASSIFICATION	1.0972278565491509E-8	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9999977681265386	WITHOUT_CLASSIFICATION	2.2318734613500736E-6	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9999831339289826	WITHOUT_CLASSIFICATION	1.6866071017344346E-5	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9999946733193676	WITHOUT_CLASSIFICATION	5.326680632349109E-6	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999976511659772	WITHOUT_CLASSIFICATION	2.3488340227392533E-6	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9957203045907337	WITHOUT_CLASSIFICATION	0.004279695409266363	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999962765688013	WITHOUT_CLASSIFICATION	3.723431198675008E-6	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999954137911191	WITHOUT_CLASSIFICATION	4.586208880860237E-6	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999954801142689	WITHOUT_CLASSIFICATION	4.5198857311286064E-6	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999958916128956	WITHOUT_CLASSIFICATION	4.108387104455445E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999935660973438	WITHOUT_CLASSIFICATION	6.433902656255408E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999935660973438	WITHOUT_CLASSIFICATION	6.433902656255408E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999991950774177	WITHOUT_CLASSIFICATION	8.04922582259037E-7	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999908058986258	WITHOUT_CLASSIFICATION	9.194101374147872E-6	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999966554382582	WITHOUT_CLASSIFICATION	3.3445617416640206E-6	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7343402106225897	IMPLEMENTATION	0.2656597893774103	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7343402106225897	IMPLEMENTATION	0.2656597893774103	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7343402106225897	IMPLEMENTATION	0.2656597893774103	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7343402106225897	IMPLEMENTATION	0.2656597893774103	WITHOUT_CLASSIFICATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999453594697686	WITHOUT_CLASSIFICATION	5.464053023131487E-5	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999497511149791	WITHOUT_CLASSIFICATION	5.024888502093999E-5	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9999978918312028	WITHOUT_CLASSIFICATION	2.108168797256062E-6	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9999990427070297	WITHOUT_CLASSIFICATION	9.572929703339189E-7	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999965002510226	WITHOUT_CLASSIFICATION	3.4997489774488743E-6	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999927350580086	WITHOUT_CLASSIFICATION	7.264941991387555E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998400928698851	WITHOUT_CLASSIFICATION	1.599071301148399E-4	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9998400928698851	WITHOUT_CLASSIFICATION	1.599071301148399E-4	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999880124993881	WITHOUT_CLASSIFICATION	1.198750061189981E-5	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9999859236012965	WITHOUT_CLASSIFICATION	1.4076398703567325E-5	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999999038237503	WITHOUT_CLASSIFICATION	9.617624966026687E-8	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999990651117884	WITHOUT_CLASSIFICATION	9.348882115127439E-7	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999995178686615	WITHOUT_CLASSIFICATION	4.82131338535279E-7	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999933326200627	WITHOUT_CLASSIFICATION	6.66737993729426E-6	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.999999913617525	WITHOUT_CLASSIFICATION	8.63824750152728E-8	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999955229103269	WITHOUT_CLASSIFICATION	4.477089673130809E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999734735516042	WITHOUT_CLASSIFICATION	2.6526448395858546E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999734735516042	WITHOUT_CLASSIFICATION	2.6526448395858546E-5	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999994240674339	WITHOUT_CLASSIFICATION	5.759325661552103E-7	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9999953286651717	WITHOUT_CLASSIFICATION	4.671334828263934E-6	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9999955635427263	WITHOUT_CLASSIFICATION	4.436457273586028E-6	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999971481319788	WITHOUT_CLASSIFICATION	2.851868021183511E-6	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999412642666	WITHOUT_CLASSIFICATION	5.873573327762544E-8	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9999819355638867	WITHOUT_CLASSIFICATION	1.806443611327303E-5	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999821103965886	WITHOUT_CLASSIFICATION	1.7889603411448233E-5	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999951224713066	WITHOUT_CLASSIFICATION	4.877528693456705E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999985354975106	WITHOUT_CLASSIFICATION	1.464502489389216E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999985354975106	WITHOUT_CLASSIFICATION	1.464502489389216E-6	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999997253065163	WITHOUT_CLASSIFICATION	2.746934836632709E-7	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999961602867703	WITHOUT_CLASSIFICATION	3.839713229656645E-6	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999917895437794	WITHOUT_CLASSIFICATION	8.210456220523037E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999967110781895	WITHOUT_CLASSIFICATION	3.2889218103570736E-6	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999875375209835	WITHOUT_CLASSIFICATION	1.2462479016493421E-5	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9999820332018414	WITHOUT_CLASSIFICATION	1.7966798158598202E-5	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.999999842301939	WITHOUT_CLASSIFICATION	1.5769806106598884E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998085382391	WITHOUT_CLASSIFICATION	1.914617609307905E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998085382391	WITHOUT_CLASSIFICATION	1.914617609307905E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998085382391	WITHOUT_CLASSIFICATION	1.914617609307905E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998085382391	WITHOUT_CLASSIFICATION	1.914617609307905E-7	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999991673827093	WITHOUT_CLASSIFICATION	8.326172906997904E-7	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.999999984637721	WITHOUT_CLASSIFICATION	1.53622790795832E-8	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999991217837421	WITHOUT_CLASSIFICATION	8.78216257863912E-7	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999894371036899	WITHOUT_CLASSIFICATION	1.0562896310153405E-5	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999991200620395	WITHOUT_CLASSIFICATION	8.799379606408055E-7	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.999978074541792	WITHOUT_CLASSIFICATION	2.1925458208000786E-5	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999996233644066	WITHOUT_CLASSIFICATION	3.7663559331876033E-7	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999979225502588	WITHOUT_CLASSIFICATION	2.0774497412610044E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999979225502588	WITHOUT_CLASSIFICATION	2.0774497412610044E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999979225502588	WITHOUT_CLASSIFICATION	2.0774497412610044E-6	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999994356882519	WITHOUT_CLASSIFICATION	5.643117481452175E-7	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999879444784232	WITHOUT_CLASSIFICATION	1.2055521576863861E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999978809122729	WITHOUT_CLASSIFICATION	2.1190877270507273E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999978809122729	WITHOUT_CLASSIFICATION	2.1190877270507273E-6	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999773870288837	WITHOUT_CLASSIFICATION	2.2612971116251243E-5	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999935085149885	WITHOUT_CLASSIFICATION	6.491485011568675E-6	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999764848856976	WITHOUT_CLASSIFICATION	2.351511430234553E-5	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9999905037483369	WITHOUT_CLASSIFICATION	9.496251663118669E-6	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999783169087	WITHOUT_CLASSIFICATION	2.168309135999572E-8	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999938960990997	WITHOUT_CLASSIFICATION	6.103900900320703E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999942711085843	WITHOUT_CLASSIFICATION	5.728891415693522E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999942711085843	WITHOUT_CLASSIFICATION	5.728891415693522E-6	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999996134652908	WITHOUT_CLASSIFICATION	3.865347092651501E-7	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.999983511865625	WITHOUT_CLASSIFICATION	1.6488134375021024E-5	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999993741113068	WITHOUT_CLASSIFICATION	6.258886931122772E-7	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999901206245105	WITHOUT_CLASSIFICATION	9.879375489516565E-6	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9999200298697073	WITHOUT_CLASSIFICATION	7.997013029270908E-5	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999669518754	WITHOUT_CLASSIFICATION	3.304812453387684E-8	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.999999377541221	WITHOUT_CLASSIFICATION	6.224587789336376E-7	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999406591096228	WITHOUT_CLASSIFICATION	5.934089037725178E-5	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.999987471305946	WITHOUT_CLASSIFICATION	1.2528694054077153E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.999992874915824	WITHOUT_CLASSIFICATION	7.125084176066323E-6	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999998401241846	WITHOUT_CLASSIFICATION	1.5987581533508897E-7	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999727539959784	WITHOUT_CLASSIFICATION	2.7246004021544887E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999999325087445	WITHOUT_CLASSIFICATION	6.749125549136357E-8	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9995868976681928	WITHOUT_CLASSIFICATION	4.1310233180719336E-4	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999990885305929	WITHOUT_CLASSIFICATION	9.114694071420168E-7	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999998315416813	WITHOUT_CLASSIFICATION	1.68458318700171E-7	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999918250634494	WITHOUT_CLASSIFICATION	8.174936550612443E-6	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999994852336904	WITHOUT_CLASSIFICATION	5.147663095653804E-7	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999822110914885	WITHOUT_CLASSIFICATION	1.7788908511456383E-5	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999899502002668	WITHOUT_CLASSIFICATION	1.0049799733229702E-5	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999984052400684	WITHOUT_CLASSIFICATION	1.5947599314463559E-6	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9999701010832582	WITHOUT_CLASSIFICATION	2.9898916741698762E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998450797871391	WITHOUT_CLASSIFICATION	1.549202128609879E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998450797871391	WITHOUT_CLASSIFICATION	1.549202128609879E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998450797871391	WITHOUT_CLASSIFICATION	1.549202128609879E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998450797871391	WITHOUT_CLASSIFICATION	1.549202128609879E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998450797871391	WITHOUT_CLASSIFICATION	1.549202128609879E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998450797871391	WITHOUT_CLASSIFICATION	1.549202128609879E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998450797871391	WITHOUT_CLASSIFICATION	1.549202128609879E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9998450797871391	WITHOUT_CLASSIFICATION	1.549202128609879E-4	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.999999992502492	WITHOUT_CLASSIFICATION	7.497507942904307E-9	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9999981739708729	WITHOUT_CLASSIFICATION	1.8260291271837442E-6	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999998938333263	WITHOUT_CLASSIFICATION	1.0616667371807499E-7	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9973584784603434	WITHOUT_CLASSIFICATION	0.002641521539656589	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999838384673	WITHOUT_CLASSIFICATION	1.6161532734449188E-8	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999838384673	WITHOUT_CLASSIFICATION	1.6161532734449188E-8	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999823285923584	WITHOUT_CLASSIFICATION	1.7671407641564754E-5	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999996110134975	WITHOUT_CLASSIFICATION	3.889865024722455E-7	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999987987929965	WITHOUT_CLASSIFICATION	1.2012070035006462E-6	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999997805151968	WITHOUT_CLASSIFICATION	2.1948480308731452E-7	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999759723078909	WITHOUT_CLASSIFICATION	2.4027692109005742E-5	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9999923967537627	WITHOUT_CLASSIFICATION	7.603246237349188E-6	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.999996769145075	WITHOUT_CLASSIFICATION	3.230854924929457E-6	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999138309818865	WITHOUT_CLASSIFICATION	8.616901811356448E-5	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999474888857106	WITHOUT_CLASSIFICATION	5.251111428934438E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999940785901	WITHOUT_CLASSIFICATION	5.921409921483335E-9	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999940785901	WITHOUT_CLASSIFICATION	5.921409921483335E-9	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999999940785901	WITHOUT_CLASSIFICATION	5.921409921483335E-9	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998796054096261	WITHOUT_CLASSIFICATION	1.2039459037388646E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998796054096261	WITHOUT_CLASSIFICATION	1.2039459037388646E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998796054096261	WITHOUT_CLASSIFICATION	1.2039459037388646E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998796054096261	WITHOUT_CLASSIFICATION	1.2039459037388646E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998796054096261	WITHOUT_CLASSIFICATION	1.2039459037388646E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998796054096261	WITHOUT_CLASSIFICATION	1.2039459037388646E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998796054096261	WITHOUT_CLASSIFICATION	1.2039459037388646E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998796054096261	WITHOUT_CLASSIFICATION	1.2039459037388646E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998796054096261	WITHOUT_CLASSIFICATION	1.2039459037388646E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.999998787414947	WITHOUT_CLASSIFICATION	1.2125850530694532E-6	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999644619967429	WITHOUT_CLASSIFICATION	3.553800325705338E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999409547965116	WITHOUT_CLASSIFICATION	5.9045203488397635E-5	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9998726261664119	WITHOUT_CLASSIFICATION	1.2737383358803837E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998796054096261	WITHOUT_CLASSIFICATION	1.2039459037388646E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998796054096261	WITHOUT_CLASSIFICATION	1.2039459037388646E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998796054096261	WITHOUT_CLASSIFICATION	1.2039459037388646E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999652929311684	WITHOUT_CLASSIFICATION	3.470706883169698E-5	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999958287476877	WITHOUT_CLASSIFICATION	4.171252312390482E-6	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999998056664204	WITHOUT_CLASSIFICATION	1.9433357964651071E-7	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999931712207109	WITHOUT_CLASSIFICATION	6.828779289133102E-6	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999931712207109	WITHOUT_CLASSIFICATION	6.828779289133102E-6	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999827306937993	WITHOUT_CLASSIFICATION	1.726930620071582E-5	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.996931766858317	WITHOUT_CLASSIFICATION	0.0030682331416829614	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999963755499462	WITHOUT_CLASSIFICATION	3.6244500536441357E-6	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.999999939188416	WITHOUT_CLASSIFICATION	6.081158393511425E-8	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.999846617198494	WITHOUT_CLASSIFICATION	1.5338280150592516E-4	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.999846617198494	WITHOUT_CLASSIFICATION	1.5338280150592516E-4	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999999705015329	WITHOUT_CLASSIFICATION	2.949846710563818E-8	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999123261236	WITHOUT_CLASSIFICATION	8.767387631964312E-8	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.999999533956754	WITHOUT_CLASSIFICATION	4.660432460168465E-7	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998865888967641	WITHOUT_CLASSIFICATION	1.1341110323592921E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998865888967641	WITHOUT_CLASSIFICATION	1.1341110323592921E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9998865888967641	WITHOUT_CLASSIFICATION	1.1341110323592921E-4	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999989089060871	WITHOUT_CLASSIFICATION	1.0910939129676525E-6	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999898746433363	WITHOUT_CLASSIFICATION	1.0125356663600103E-5	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999898746433363	WITHOUT_CLASSIFICATION	1.0125356663600103E-5	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999932449705609	WITHOUT_CLASSIFICATION	6.7550294390498634E-6	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999932449705609	WITHOUT_CLASSIFICATION	6.7550294390498634E-6	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999988779553849	WITHOUT_CLASSIFICATION	1.1220446150367112E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999970083735648	WITHOUT_CLASSIFICATION	2.991626435198124E-6	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999883043714537	WITHOUT_CLASSIFICATION	1.1695628546356446E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999898618784598	WITHOUT_CLASSIFICATION	1.0138121540046018E-5	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.999993460885047	WITHOUT_CLASSIFICATION	6.539114952964762E-6	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999994517059523	WITHOUT_CLASSIFICATION	5.482940476716528E-7	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999975448510348	WITHOUT_CLASSIFICATION	2.4551489652878244E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999171457861397	WITHOUT_CLASSIFICATION	8.285421386035319E-5	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999986382314062	WITHOUT_CLASSIFICATION	1.3617685937631213E-6	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999997573124011	WITHOUT_CLASSIFICATION	2.426875989131835E-7	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9999643320151104	WITHOUT_CLASSIFICATION	3.5667984889685916E-5	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999973977440441	WITHOUT_CLASSIFICATION	2.602255955919861E-6	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999999784704624	WITHOUT_CLASSIFICATION	2.1529537639375203E-8	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999999686926626	WITHOUT_CLASSIFICATION	3.1307337317976667E-8	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999980609635825	WITHOUT_CLASSIFICATION	1.939036417474525E-6	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.999999906608234	WITHOUT_CLASSIFICATION	9.339176605207612E-8	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999929151346686	WITHOUT_CLASSIFICATION	7.084865331454167E-6	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999977541573936	WITHOUT_CLASSIFICATION	2.245842606345367E-6	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.999999975819067	WITHOUT_CLASSIFICATION	2.4180933078398205E-8	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999962887321	WITHOUT_CLASSIFICATION	3.711267900067222E-6	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999981950788864	WITHOUT_CLASSIFICATION	1.8049211136412201E-6	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9998278647146852	WITHOUT_CLASSIFICATION	1.721352853148125E-4	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999986428167368	WITHOUT_CLASSIFICATION	1.357183263191091E-6	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999872201931174	WITHOUT_CLASSIFICATION	1.2779806882643558E-5	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999982728027086	WITHOUT_CLASSIFICATION	1.7271972914031809E-6	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999966770739696	WITHOUT_CLASSIFICATION	3.3229260305232976E-6	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999970683988721	WITHOUT_CLASSIFICATION	2.9316011278665765E-6	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999998956126843	WITHOUT_CLASSIFICATION	1.043873156162245E-7	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999916750454344	WITHOUT_CLASSIFICATION	8.324954565563436E-6	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999832302757458	WITHOUT_CLASSIFICATION	1.67697242541541E-5	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999886507496931	WITHOUT_CLASSIFICATION	1.134925030689083E-5	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.999998605430269	WITHOUT_CLASSIFICATION	1.3945697309581769E-6	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999997240014238	WITHOUT_CLASSIFICATION	2.7599857629178914E-7	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999998351007522	WITHOUT_CLASSIFICATION	1.6489924775683248E-7	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999867481745235	WITHOUT_CLASSIFICATION	1.325182547651828E-5	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999993286710843	WITHOUT_CLASSIFICATION	6.713289156594054E-7	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.999996778419399	WITHOUT_CLASSIFICATION	3.221580600998298E-6	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999764713517645	WITHOUT_CLASSIFICATION	2.352864823556225E-5	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999994848699219	WITHOUT_CLASSIFICATION	5.151300781065942E-7	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999993302510849	WITHOUT_CLASSIFICATION	6.697489151316617E-7	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999966564476387	WITHOUT_CLASSIFICATION	3.343552361333637E-6	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999970485072684	WITHOUT_CLASSIFICATION	2.951492731436264E-6	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999980188015637	WITHOUT_CLASSIFICATION	1.9811984363733184E-6	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.999999539813807	WITHOUT_CLASSIFICATION	4.601861930869213E-7	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999993073536169	WITHOUT_CLASSIFICATION	6.92646383070457E-7	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999981395710686	WITHOUT_CLASSIFICATION	1.8604289312878885E-6	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9999997352241522	WITHOUT_CLASSIFICATION	2.647758477035733E-7	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999719324468	WITHOUT_CLASSIFICATION	2.8067553126480925E-8	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999692419042	WITHOUT_CLASSIFICATION	3.0758095980959474E-8	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999829310924869	WITHOUT_CLASSIFICATION	1.706890751316584E-5	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999989258939889	WITHOUT_CLASSIFICATION	1.0741060111277528E-6	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999706003257312	WITHOUT_CLASSIFICATION	2.939967426888461E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999706003257312	WITHOUT_CLASSIFICATION	2.939967426888461E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999997474701403	WITHOUT_CLASSIFICATION	2.52529859583398E-7	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999997474701403	WITHOUT_CLASSIFICATION	2.52529859583398E-7	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9997386802168939	WITHOUT_CLASSIFICATION	2.613197831060792E-4	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9997386802168939	WITHOUT_CLASSIFICATION	2.613197831060792E-4	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999970862983534	WITHOUT_CLASSIFICATION	2.913701646516716E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999970862983534	WITHOUT_CLASSIFICATION	2.913701646516716E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999985191210503	WITHOUT_CLASSIFICATION	1.48087894965225E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999985191210503	WITHOUT_CLASSIFICATION	1.48087894965225E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999985191210503	WITHOUT_CLASSIFICATION	1.48087894965225E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999985191210503	WITHOUT_CLASSIFICATION	1.48087894965225E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999985191210503	WITHOUT_CLASSIFICATION	1.48087894965225E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999985191210503	WITHOUT_CLASSIFICATION	1.48087894965225E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999985191210503	WITHOUT_CLASSIFICATION	1.48087894965225E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999985191210503	WITHOUT_CLASSIFICATION	1.48087894965225E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999985191210503	WITHOUT_CLASSIFICATION	1.48087894965225E-6	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999998220177855	WITHOUT_CLASSIFICATION	1.7798221450438707E-6	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999998220177855	WITHOUT_CLASSIFICATION	1.7798221450438707E-6	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.999998220177855	WITHOUT_CLASSIFICATION	1.7798221450438707E-6	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999979358787485	WITHOUT_CLASSIFICATION	2.0641212514627277E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999995081638769	WITHOUT_CLASSIFICATION	4.918361230965898E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999995081638769	WITHOUT_CLASSIFICATION	4.918361230965898E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999995081638769	WITHOUT_CLASSIFICATION	4.918361230965898E-6	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999996125943483	WITHOUT_CLASSIFICATION	3.8740565167335297E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999996125943483	WITHOUT_CLASSIFICATION	3.8740565167335297E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999996125943483	WITHOUT_CLASSIFICATION	3.8740565167335297E-7	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999743061295417	WITHOUT_CLASSIFICATION	2.5693870458220633E-5	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9999946716412734	WITHOUT_CLASSIFICATION	5.328358726580246E-6	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999883437278702	WITHOUT_CLASSIFICATION	1.165627212988675E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999884342704233	WITHOUT_CLASSIFICATION	1.1565729576757505E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999884342704233	WITHOUT_CLASSIFICATION	1.1565729576757505E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999884342704233	WITHOUT_CLASSIFICATION	1.1565729576757505E-5	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.99999361150963	WITHOUT_CLASSIFICATION	6.388490370093303E-6	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999990368782214	WITHOUT_CLASSIFICATION	9.631217785521962E-7	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999990368782214	WITHOUT_CLASSIFICATION	9.631217785521962E-7	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999686293042124	WITHOUT_CLASSIFICATION	3.137069578766837E-5	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999332284991649	WITHOUT_CLASSIFICATION	6.67715008351281E-5	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999332284991649	WITHOUT_CLASSIFICATION	6.67715008351281E-5	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9142989531930595	IMPLEMENTATION	0.08570104680694045	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9999883700496773	WITHOUT_CLASSIFICATION	1.1629950322740846E-5	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9997381754971013	WITHOUT_CLASSIFICATION	2.6182450289868723E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999979099131389	WITHOUT_CLASSIFICATION	2.0900868611310968E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999979099131389	WITHOUT_CLASSIFICATION	2.0900868611310968E-6	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999536704655233	WITHOUT_CLASSIFICATION	4.632953447665184E-5	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999983509224194	WITHOUT_CLASSIFICATION	1.6490775806881819E-6	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.999534753460239	WITHOUT_CLASSIFICATION	4.652465397608953E-4	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.999880322815138	WITHOUT_CLASSIFICATION	1.1967718486206046E-4	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.999838413211637	WITHOUT_CLASSIFICATION	1.6158678836293E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999979099131389	WITHOUT_CLASSIFICATION	2.0900868611310968E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999979099131389	WITHOUT_CLASSIFICATION	2.0900868611310968E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999979099131389	WITHOUT_CLASSIFICATION	2.0900868611310968E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999979099131389	WITHOUT_CLASSIFICATION	2.0900868611310968E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999979099131389	WITHOUT_CLASSIFICATION	2.0900868611310968E-6	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999905914010053	WITHOUT_CLASSIFICATION	9.408598994630342E-6	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999264262545441	WITHOUT_CLASSIFICATION	7.357374545597834E-5	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999969643036516	WITHOUT_CLASSIFICATION	3.0356963483841624E-6	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999954879113757	WITHOUT_CLASSIFICATION	4.51208862428353E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999999959886754	WITHOUT_CLASSIFICATION	4.01132466615638E-9	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9999493221693379	WITHOUT_CLASSIFICATION	5.0677830662195084E-5	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999996202838896	WITHOUT_CLASSIFICATION	3.797161103986587E-7	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9998712323996746	WITHOUT_CLASSIFICATION	1.287676003253842E-4	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999127374967	WITHOUT_CLASSIFICATION	8.726250342999055E-8	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999972521378316	WITHOUT_CLASSIFICATION	2.747862168387661E-6	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999998090492974	WITHOUT_CLASSIFICATION	1.9095070258193054E-7	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999763101344381	WITHOUT_CLASSIFICATION	2.368986556190263E-5	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.999998839177205	WITHOUT_CLASSIFICATION	1.1608227950716727E-6	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999997086419863	WITHOUT_CLASSIFICATION	2.913580137003736E-7	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999979845932894	WITHOUT_CLASSIFICATION	2.015406710521967E-6	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9996443308279105	WITHOUT_CLASSIFICATION	3.556691720895882E-4	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999773961072402	WITHOUT_CLASSIFICATION	2.2603892759704345E-5	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999996535842565	WITHOUT_CLASSIFICATION	3.4641574358043564E-7	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.999998974291892	WITHOUT_CLASSIFICATION	1.0257081080219398E-6	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999858822806094	WITHOUT_CLASSIFICATION	1.4117719390646487E-5	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999998183668655	WITHOUT_CLASSIFICATION	1.816331345181493E-7	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999965853557743	WITHOUT_CLASSIFICATION	3.414644225650094E-6	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999998770243921	WITHOUT_CLASSIFICATION	1.229756079283209E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999963261135764	WITHOUT_CLASSIFICATION	3.6738864235833216E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999963261135764	WITHOUT_CLASSIFICATION	3.6738864235833216E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999963261135764	WITHOUT_CLASSIFICATION	3.6738864235833216E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999963261135764	WITHOUT_CLASSIFICATION	3.6738864235833216E-6	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999976543848149	WITHOUT_CLASSIFICATION	2.345615185100066E-6	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999933372472128	WITHOUT_CLASSIFICATION	6.6627527872622074E-6	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999999350990435	WITHOUT_CLASSIFICATION	6.490095642787219E-8	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999999350990435	WITHOUT_CLASSIFICATION	6.490095642787219E-8	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999989043140395	WITHOUT_CLASSIFICATION	1.0956859605965908E-6	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999996183134636	WITHOUT_CLASSIFICATION	3.816865363855383E-7	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999527947743	WITHOUT_CLASSIFICATION	4.7205225801152594E-8	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999934206126079	WITHOUT_CLASSIFICATION	6.579387392105156E-6	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.999999832568386	WITHOUT_CLASSIFICATION	1.6743161413368402E-7	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999937378376507	WITHOUT_CLASSIFICATION	6.262162349358266E-6	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999756944721335	WITHOUT_CLASSIFICATION	2.4305527866399522E-5	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999964363894853	WITHOUT_CLASSIFICATION	3.563610514787739E-6	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999964363894853	WITHOUT_CLASSIFICATION	3.563610514787739E-6	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999964363894853	WITHOUT_CLASSIFICATION	3.563610514787739E-6	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999964363894853	WITHOUT_CLASSIFICATION	3.563610514787739E-6	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.999897252476586	WITHOUT_CLASSIFICATION	1.0274752341396324E-4	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999433051394	WITHOUT_CLASSIFICATION	5.669486055919035E-8	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999433051394	WITHOUT_CLASSIFICATION	5.669486055919035E-8	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999433051394	WITHOUT_CLASSIFICATION	5.669486055919035E-8	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999997622847207	WITHOUT_CLASSIFICATION	2.3771527938300018E-7	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999942093498119	WITHOUT_CLASSIFICATION	5.790650188082911E-6	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999993129844749	WITHOUT_CLASSIFICATION	6.870155251067815E-7	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7343402106225897	IMPLEMENTATION	0.2656597893774103	WITHOUT_CLASSIFICATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7343402106225897	IMPLEMENTATION	0.2656597893774103	WITHOUT_CLASSIFICATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999670878304968	WITHOUT_CLASSIFICATION	3.2912169503108956E-5	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.999999997933592	WITHOUT_CLASSIFICATION	2.0664080867710493E-9	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999347236202072	WITHOUT_CLASSIFICATION	6.527637979279432E-5	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999347236202072	WITHOUT_CLASSIFICATION	6.527637979279432E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999246291149541	WITHOUT_CLASSIFICATION	7.53708850459653E-5	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999246291149541	WITHOUT_CLASSIFICATION	7.53708850459653E-5	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999999709742219	WITHOUT_CLASSIFICATION	2.9025778162057106E-8	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9876828223282809	WITHOUT_CLASSIFICATION	0.012317177671719066	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.999998564448845	WITHOUT_CLASSIFICATION	1.4355511548664826E-6	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999944833827183	WITHOUT_CLASSIFICATION	5.516617281687382E-6	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999874407372376	WITHOUT_CLASSIFICATION	1.2559262762502987E-5	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999991519231513	WITHOUT_CLASSIFICATION	8.480768486683245E-7	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999982207825966	WITHOUT_CLASSIFICATION	1.7792174034218743E-6	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999837657466022	WITHOUT_CLASSIFICATION	1.623425339774147E-5	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999995808188182	WITHOUT_CLASSIFICATION	4.1918118175583505E-7	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999391389114	WITHOUT_CLASSIFICATION	6.08610886052283E-8	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999391389114	WITHOUT_CLASSIFICATION	6.08610886052283E-8	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999959772774543	WITHOUT_CLASSIFICATION	4.022722545778649E-6	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999959772774543	WITHOUT_CLASSIFICATION	4.022722545778649E-6	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.999999554546086	WITHOUT_CLASSIFICATION	4.454539140442663E-7	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999982599072913	WITHOUT_CLASSIFICATION	1.7400927087169049E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999894324492249	WITHOUT_CLASSIFICATION	1.0567550775157313E-5	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999917707907789	WITHOUT_CLASSIFICATION	8.229209220975172E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999917707907789	WITHOUT_CLASSIFICATION	8.229209220975172E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999917707907789	WITHOUT_CLASSIFICATION	8.229209220975172E-6	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9999957527655812	WITHOUT_CLASSIFICATION	4.247234418853297E-6	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9999952966237465	WITHOUT_CLASSIFICATION	4.7033762534143066E-6	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9999965840202943	WITHOUT_CLASSIFICATION	3.415979705655009E-6	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9999967831868464	WITHOUT_CLASSIFICATION	3.21681315368782E-6	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9999957703044273	WITHOUT_CLASSIFICATION	4.229695572748226E-6	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999960209038349	WITHOUT_CLASSIFICATION	3.979096165067023E-6	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9999959685697114	WITHOUT_CLASSIFICATION	4.031430288536141E-6	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9999958692094666	WITHOUT_CLASSIFICATION	4.130790533456597E-6	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999991617234488	WITHOUT_CLASSIFICATION	8.382765511783319E-7	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999997655391111	WITHOUT_CLASSIFICATION	2.3446088879071191E-7	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9998718733205348	WITHOUT_CLASSIFICATION	1.2812667946519456E-4	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999996297247317	WITHOUT_CLASSIFICATION	3.702752682966937E-7	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999993489848462	WITHOUT_CLASSIFICATION	6.510151538787862E-7	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7343402106225897	IMPLEMENTATION	0.2656597893774103	WITHOUT_CLASSIFICATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999987071321346	WITHOUT_CLASSIFICATION	1.2928678655086483E-6	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.999995965548668	WITHOUT_CLASSIFICATION	4.03445133201004E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999935660973438	WITHOUT_CLASSIFICATION	6.433902656255408E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.999868018959078	WITHOUT_CLASSIFICATION	1.3198104092196236E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.999868018959078	WITHOUT_CLASSIFICATION	1.3198104092196236E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.999868018959078	WITHOUT_CLASSIFICATION	1.3198104092196236E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.999868018959078	WITHOUT_CLASSIFICATION	1.3198104092196236E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.999868018959078	WITHOUT_CLASSIFICATION	1.3198104092196236E-4	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999746103087902	WITHOUT_CLASSIFICATION	2.5389691209817438E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.999868018959078	WITHOUT_CLASSIFICATION	1.3198104092196236E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.999868018959078	WITHOUT_CLASSIFICATION	1.3198104092196236E-4	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.999868018959078	WITHOUT_CLASSIFICATION	1.3198104092196236E-4	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999999243872	WITHOUT_CLASSIFICATION	7.561280010172479E-8	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999990925183239	WITHOUT_CLASSIFICATION	9.074816761242874E-7	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999999807003932	WITHOUT_CLASSIFICATION	1.929960682879069E-8	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999981121793208	WITHOUT_CLASSIFICATION	1.8878206792120213E-6	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.999989374154326	WITHOUT_CLASSIFICATION	1.0625845673951448E-5	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999995005538185	WITHOUT_CLASSIFICATION	4.994461815719708E-7	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999997294162042	WITHOUT_CLASSIFICATION	2.7058379584599976E-7	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9999956070771314	WITHOUT_CLASSIFICATION	4.392922868544846E-6	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999969139222434	WITHOUT_CLASSIFICATION	3.0860777566470165E-6	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999969139222434	WITHOUT_CLASSIFICATION	3.0860777566470165E-6	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9999955352468323	WITHOUT_CLASSIFICATION	4.464753167721322E-6	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9999953313646078	WITHOUT_CLASSIFICATION	4.66863539216353E-6	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999961036137698	WITHOUT_CLASSIFICATION	3.896386230230794E-6	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9999961950800254	WITHOUT_CLASSIFICATION	3.8049199746070596E-6	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999961226157317	WITHOUT_CLASSIFICATION	3.877384268249465E-6	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9999954041000874	WITHOUT_CLASSIFICATION	4.5958999125953846E-6	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9999950879281576	WITHOUT_CLASSIFICATION	4.912071842464143E-6	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999954364799826	WITHOUT_CLASSIFICATION	4.563520017518193E-6	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999954635289732	WITHOUT_CLASSIFICATION	4.536471026843551E-6	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.999996559751348	WITHOUT_CLASSIFICATION	3.4402486519320565E-6	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9999965253678086	WITHOUT_CLASSIFICATION	3.4746321914080113E-6	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9999956979681038	WITHOUT_CLASSIFICATION	4.302031896224841E-6	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999959743722504	WITHOUT_CLASSIFICATION	4.025627749652124E-6	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999954727054204	WITHOUT_CLASSIFICATION	4.527294579557957E-6	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9999953895928362	WITHOUT_CLASSIFICATION	4.610407163875487E-6	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9999951374196626	WITHOUT_CLASSIFICATION	4.862580337359144E-6	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999953997188508	WITHOUT_CLASSIFICATION	4.600281149179062E-6	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9999961227945138	WITHOUT_CLASSIFICATION	3.8772054861712655E-6	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9999956507423678	WITHOUT_CLASSIFICATION	4.349257632154507E-6	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.9999957846597443	WITHOUT_CLASSIFICATION	4.21534025576191E-6	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9999963946853703	WITHOUT_CLASSIFICATION	3.605314629760409E-6	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.999995761888816	WITHOUT_CLASSIFICATION	4.238111184032681E-6	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9999961030341804	WITHOUT_CLASSIFICATION	3.896965819620672E-6	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9999972816031599	WITHOUT_CLASSIFICATION	2.7183968400070406E-6	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9999974525038384	WITHOUT_CLASSIFICATION	2.5474961615323967E-6	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999976952981592	WITHOUT_CLASSIFICATION	2.3047018408637543E-6	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9999973030967896	WITHOUT_CLASSIFICATION	2.6969032103153486E-6	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9999974224744848	WITHOUT_CLASSIFICATION	2.577525515302395E-6	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999974438056819	WITHOUT_CLASSIFICATION	2.556194318085805E-6	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.99999730919834	WITHOUT_CLASSIFICATION	2.690801659954067E-6	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999967357822165	WITHOUT_CLASSIFICATION	3.2642177834768332E-6	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999967494411517	WITHOUT_CLASSIFICATION	3.250558848345365E-6	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9999965565416808	WITHOUT_CLASSIFICATION	3.4434583192426714E-6	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9999965028577832	WITHOUT_CLASSIFICATION	3.4971422168337694E-6	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9999975564497514	WITHOUT_CLASSIFICATION	2.443550248631802E-6	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999975320823408	WITHOUT_CLASSIFICATION	2.4679176591728925E-6	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9999969042855511	WITHOUT_CLASSIFICATION	3.0957144488008054E-6	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999966719907469	WITHOUT_CLASSIFICATION	3.328009253069373E-6	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.9999969467430926	WITHOUT_CLASSIFICATION	3.0532569073633095E-6	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9999972651661984	WITHOUT_CLASSIFICATION	2.73483380170483E-6	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9999975815131634	WITHOUT_CLASSIFICATION	2.418486836643689E-6	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.999997768221215	WITHOUT_CLASSIFICATION	2.231778784947081E-6	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9999971251589947	WITHOUT_CLASSIFICATION	2.874841005240409E-6	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9999967774460089	WITHOUT_CLASSIFICATION	3.2225539910835593E-6	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9999969769237183	WITHOUT_CLASSIFICATION	3.0230762816473205E-6	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.999996417726957	WITHOUT_CLASSIFICATION	3.5822730429160892E-6	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.999996490200169	WITHOUT_CLASSIFICATION	3.50979983101933E-6	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9999969087617968	WITHOUT_CLASSIFICATION	3.091238203222079E-6	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9999968236999419	WITHOUT_CLASSIFICATION	3.176300058168214E-6	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999968639008866	WITHOUT_CLASSIFICATION	3.13609911335585E-6	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9999972076629319	WITHOUT_CLASSIFICATION	2.7923370681942206E-6	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9999966618373564	WITHOUT_CLASSIFICATION	3.3381626435484993E-6	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.9999968102158455	WITHOUT_CLASSIFICATION	3.1897841545084013E-6	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999975560641753	WITHOUT_CLASSIFICATION	2.443935824790925E-6	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999975560641753	WITHOUT_CLASSIFICATION	2.443935824790925E-6	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999964530935548	WITHOUT_CLASSIFICATION	3.5469064451358597E-6	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9999974739436795	WITHOUT_CLASSIFICATION	2.5260563204155093E-6	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9999969361422021	WITHOUT_CLASSIFICATION	3.063857797761894E-6	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9999968260333091	WITHOUT_CLASSIFICATION	3.1739666908704764E-6	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9999964559029575	WITHOUT_CLASSIFICATION	3.54409704245566E-6	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.999997302843205	WITHOUT_CLASSIFICATION	2.697156794996924E-6	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999963945896954	WITHOUT_CLASSIFICATION	3.60541030471461E-6	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9999965061178152	WITHOUT_CLASSIFICATION	3.493882184849236E-6	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999967796540037	WITHOUT_CLASSIFICATION	3.2203459963248277E-6	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.999996758480858	WITHOUT_CLASSIFICATION	3.241519142061654E-6	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999700308141275	WITHOUT_CLASSIFICATION	2.9969185872581978E-5	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999700308141275	WITHOUT_CLASSIFICATION	2.9969185872581978E-5	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999761301958037	WITHOUT_CLASSIFICATION	2.3869804196396834E-5	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9996927459243609	WITHOUT_CLASSIFICATION	3.0725407563921795E-4	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999914537664691	WITHOUT_CLASSIFICATION	8.546233530849319E-6	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999894166006	WITHOUT_CLASSIFICATION	1.0583399442132634E-8	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999995899906847	WITHOUT_CLASSIFICATION	4.100093153737719E-7	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999995899906847	WITHOUT_CLASSIFICATION	4.100093153737719E-7	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999995899906847	WITHOUT_CLASSIFICATION	4.100093153737719E-7	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999995899906847	WITHOUT_CLASSIFICATION	4.100093153737719E-7	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999992148834671	WITHOUT_CLASSIFICATION	7.851165329312107E-7	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999996575962266	WITHOUT_CLASSIFICATION	3.424037735521314E-7	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.999996599556776	WITHOUT_CLASSIFICATION	3.4004432239607915E-6	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9999959410083383	WITHOUT_CLASSIFICATION	4.0589916616120285E-6	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.9999965739370285	WITHOUT_CLASSIFICATION	3.426062971483197E-6	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9999967135520557	WITHOUT_CLASSIFICATION	3.286447944344395E-6	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9999963355373024	WITHOUT_CLASSIFICATION	3.6644626976108826E-6	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9999957946497906	WITHOUT_CLASSIFICATION	4.205350209320749E-6	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9999965707476273	WITHOUT_CLASSIFICATION	3.429252372697492E-6	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.999996069037613	WITHOUT_CLASSIFICATION	3.930962387045679E-6	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9999949867031437	WITHOUT_CLASSIFICATION	5.01329685640196E-6	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9999956884713979	WITHOUT_CLASSIFICATION	4.311528602178644E-6	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.99999619521809	WITHOUT_CLASSIFICATION	3.804781909898482E-6	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9999956337872161	WITHOUT_CLASSIFICATION	4.366212783776956E-6	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9999952478108886	WITHOUT_CLASSIFICATION	4.752189111446085E-6	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9999967406625794	WITHOUT_CLASSIFICATION	3.2593374205397146E-6	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9999950449545515	WITHOUT_CLASSIFICATION	4.955045448517075E-6	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9999962551872396	WITHOUT_CLASSIFICATION	3.744812760464802E-6	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9999962040385745	WITHOUT_CLASSIFICATION	3.7959614255765778E-6	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9999953941910305	WITHOUT_CLASSIFICATION	4.605808969602332E-6	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9999957509098366	WITHOUT_CLASSIFICATION	4.249090163309113E-6	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9999964948921576	WITHOUT_CLASSIFICATION	3.505107842357097E-6	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9999957326772226	WITHOUT_CLASSIFICATION	4.267322777446908E-6	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9999954901898815	WITHOUT_CLASSIFICATION	4.50981011845696E-6	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9999956257811672	WITHOUT_CLASSIFICATION	4.374218832803156E-6	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9999973702946933	WITHOUT_CLASSIFICATION	2.629705306807977E-6	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9999975841191159	WITHOUT_CLASSIFICATION	2.415880884173976E-6	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9999973137262489	WITHOUT_CLASSIFICATION	2.6862737511086237E-6	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9999972925408871	WITHOUT_CLASSIFICATION	2.7074591129180395E-6	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9999967496611988	WITHOUT_CLASSIFICATION	3.2503388011714836E-6	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9999964501235219	WITHOUT_CLASSIFICATION	3.5498764780865953E-6	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9999968199714434	WITHOUT_CLASSIFICATION	3.1800285567279434E-6	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.999996876475693	WITHOUT_CLASSIFICATION	3.1235243070681044E-6	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9999967939556245	WITHOUT_CLASSIFICATION	3.2060443756454192E-6	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.999996830850776	WITHOUT_CLASSIFICATION	3.1691492239003975E-6	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9999975394533565	WITHOUT_CLASSIFICATION	2.4605466435365648E-6	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9999968948525587	WITHOUT_CLASSIFICATION	3.1051474412971614E-6	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9999967205547157	WITHOUT_CLASSIFICATION	3.2794452843203756E-6	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9999970383987958	WITHOUT_CLASSIFICATION	2.9616012041705216E-6	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9999969870150026	WITHOUT_CLASSIFICATION	3.0129849973349442E-6	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.9999974863281839	WITHOUT_CLASSIFICATION	2.513671816164692E-6	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9999970335587933	WITHOUT_CLASSIFICATION	2.9664412066609172E-6	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9999964180582147	WITHOUT_CLASSIFICATION	3.5819417852676554E-6	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9999968753113518	WITHOUT_CLASSIFICATION	3.124688648277279E-6	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9999965221645809	WITHOUT_CLASSIFICATION	3.4778354191758498E-6	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9999964750144135	WITHOUT_CLASSIFICATION	3.5249855865456257E-6	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9999969808767197	WITHOUT_CLASSIFICATION	3.0191232803255522E-6	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9999965397989521	WITHOUT_CLASSIFICATION	3.460201047861475E-6	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9999968462547795	WITHOUT_CLASSIFICATION	3.1537452206478422E-6	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9999970665385076	WITHOUT_CLASSIFICATION	2.9334614924336784E-6	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.999996564645326	WITHOUT_CLASSIFICATION	3.435354673950902E-6	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9999966652764671	WITHOUT_CLASSIFICATION	3.3347235328455763E-6	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9999968451576815	WITHOUT_CLASSIFICATION	3.15484231845975E-6	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9999970837156811	WITHOUT_CLASSIFICATION	2.9162843189865922E-6	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9999967609849305	WITHOUT_CLASSIFICATION	3.2390150695123806E-6	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9999968713265706	WITHOUT_CLASSIFICATION	3.128673429566154E-6	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9999973921039753	WITHOUT_CLASSIFICATION	2.6078960247210804E-6	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9999967932993775	WITHOUT_CLASSIFICATION	3.206700622507254E-6	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9999974899347951	WITHOUT_CLASSIFICATION	2.510065204909234E-6	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999984215157887	WITHOUT_CLASSIFICATION	1.5784842113914828E-6	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999996071932998	WITHOUT_CLASSIFICATION	3.9280670009293484E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997765598282	WITHOUT_CLASSIFICATION	2.234401717375858E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997765598282	WITHOUT_CLASSIFICATION	2.234401717375858E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997765598282	WITHOUT_CLASSIFICATION	2.234401717375858E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997765598282	WITHOUT_CLASSIFICATION	2.234401717375858E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997765598282	WITHOUT_CLASSIFICATION	2.234401717375858E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997765598282	WITHOUT_CLASSIFICATION	2.234401717375858E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999997765598282	WITHOUT_CLASSIFICATION	2.234401717375858E-7	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999946206564545	WITHOUT_CLASSIFICATION	5.3793435454792565E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999946206564545	WITHOUT_CLASSIFICATION	5.3793435454792565E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999946206564545	WITHOUT_CLASSIFICATION	5.3793435454792565E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999946206564545	WITHOUT_CLASSIFICATION	5.3793435454792565E-6	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.999865743687134	WITHOUT_CLASSIFICATION	1.3425631286601245E-4	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.999865743687134	WITHOUT_CLASSIFICATION	1.3425631286601245E-4	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999999914455655	WITHOUT_CLASSIFICATION	8.554434463609538E-9	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999952416612242	WITHOUT_CLASSIFICATION	4.758338775793189E-5	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999952416612242	WITHOUT_CLASSIFICATION	4.758338775793189E-5	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999989454988645	WITHOUT_CLASSIFICATION	1.0545011355867025E-6	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999583971928796	WITHOUT_CLASSIFICATION	4.160280712044232E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999756411886	WITHOUT_CLASSIFICATION	2.435881140796026E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999756411886	WITHOUT_CLASSIFICATION	2.435881140796026E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999756411886	WITHOUT_CLASSIFICATION	2.435881140796026E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999756411886	WITHOUT_CLASSIFICATION	2.435881140796026E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999756411886	WITHOUT_CLASSIFICATION	2.435881140796026E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999756411886	WITHOUT_CLASSIFICATION	2.435881140796026E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999756411886	WITHOUT_CLASSIFICATION	2.435881140796026E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999411911797	WITHOUT_CLASSIFICATION	5.88088203088625E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997454568226	WITHOUT_CLASSIFICATION	2.545431774662756E-7	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9998768767768537	WITHOUT_CLASSIFICATION	1.231232231462234E-4	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9998768767768537	WITHOUT_CLASSIFICATION	1.231232231462234E-4	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.999994303480041	WITHOUT_CLASSIFICATION	5.696519959042231E-6	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999913459231158	WITHOUT_CLASSIFICATION	8.654076884192228E-6	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999913459231158	WITHOUT_CLASSIFICATION	8.654076884192228E-6	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999999988889677	WITHOUT_CLASSIFICATION	1.1110321973690653E-9	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9986018199705761	WITHOUT_CLASSIFICATION	0.0013981800294239183	IMPLEMENTATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999824215632797	WITHOUT_CLASSIFICATION	1.757843672032415E-5	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999998809948166	WITHOUT_CLASSIFICATION	1.1900518345026349E-7	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999998068487993	WITHOUT_CLASSIFICATION	1.931512007144441E-7	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999989428729519	WITHOUT_CLASSIFICATION	1.0571270481068279E-6	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.999990075240982	WITHOUT_CLASSIFICATION	9.924759017977422E-6	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999830879627071	WITHOUT_CLASSIFICATION	1.6912037292817716E-5	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999980409034323	WITHOUT_CLASSIFICATION	1.9590965676656836E-6	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9998259203012023	WITHOUT_CLASSIFICATION	1.7407969879779038E-4	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.999988399750331	WITHOUT_CLASSIFICATION	1.1600249668968997E-5	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999997007601449	WITHOUT_CLASSIFICATION	2.992398551950494E-7	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999997565267126	WITHOUT_CLASSIFICATION	2.4347328742579876E-7	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.999973960449885	WITHOUT_CLASSIFICATION	2.60395501150988E-5	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999979716414109	WITHOUT_CLASSIFICATION	2.028358589026135E-6	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9999993357239292	WITHOUT_CLASSIFICATION	6.642760708606084E-7	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999998201736876	WITHOUT_CLASSIFICATION	1.7982631242748202E-7	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9999978048107263	WITHOUT_CLASSIFICATION	2.195189273645387E-6	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9996354481944215	WITHOUT_CLASSIFICATION	3.645518055783888E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9996354481944215	WITHOUT_CLASSIFICATION	3.645518055783888E-4	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999841445095731	WITHOUT_CLASSIFICATION	1.5855490426956044E-5	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999996072901597	WITHOUT_CLASSIFICATION	3.9270984033303713E-7	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999860012502026	WITHOUT_CLASSIFICATION	1.399874979737083E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999966196831593	WITHOUT_CLASSIFICATION	3.380316840699445E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999692420283471	WITHOUT_CLASSIFICATION	3.075797165293137E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999692420283471	WITHOUT_CLASSIFICATION	3.075797165293137E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999692420283471	WITHOUT_CLASSIFICATION	3.075797165293137E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999878814654529	WITHOUT_CLASSIFICATION	1.2118534547147143E-5	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999991629213371	WITHOUT_CLASSIFICATION	8.370786628932288E-7	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9999968661421541	WITHOUT_CLASSIFICATION	3.1338578459365208E-6	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999999658191543	WITHOUT_CLASSIFICATION	3.41808456409731E-8	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999997923217918	WITHOUT_CLASSIFICATION	2.0767820823875413E-7	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999999746149286	WITHOUT_CLASSIFICATION	2.5385071319109205E-8	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999999075483664	WITHOUT_CLASSIFICATION	9.245163365175025E-8	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999786021189	WITHOUT_CLASSIFICATION	2.1397881172133274E-8	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.999998753826779	WITHOUT_CLASSIFICATION	1.2461732209021052E-6	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999927248673768	WITHOUT_CLASSIFICATION	7.275132623328313E-6	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9999998580661	WITHOUT_CLASSIFICATION	1.4193390000030754E-7	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.999999414081737	WITHOUT_CLASSIFICATION	5.859182630649413E-7	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.7238250630933275	IMPLEMENTATION	0.27617493690667244	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999955869292545	WITHOUT_CLASSIFICATION	4.413070745454828E-6	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.99903154054757	WITHOUT_CLASSIFICATION	9.68459452430022E-4	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999999270428063	WITHOUT_CLASSIFICATION	7.295719372513937E-8	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999996289118817	WITHOUT_CLASSIFICATION	3.710881183479382E-7	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999992971244949	WITHOUT_CLASSIFICATION	7.028755050502007E-7	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999864660267395	WITHOUT_CLASSIFICATION	1.3533973260506352E-5	IMPLEMENTATION
